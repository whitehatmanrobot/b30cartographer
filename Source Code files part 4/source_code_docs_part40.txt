a 1 features: Lightning Code access security Prototype is working General agreement that requirements are met (modulo perf analysis) Lightning team will own code in mscorlib AssemblySearchPath, Debugging etc. General agreement. Need to re-engage. Context / Remoting Working towards using managed config system. Beta 1 features: WOM Discovery Likely continue to use catalog as store abstraction layer Need to plug in Shilo, unclear if through catalog Discussing deeper integration  Catalog/MSXML might use discovery service for schema management Messaging, Pub/Sub Need to re-engage Likely not using catalog: pub/sub is operational data, not config Might want to expose some info through config system Summary Next steps: Finalize config system implementation More flexible schema extensibility Misc. features (child config in parent node etc.) Beta 1 scheduling XSP/WebServer porting work Lightning security, contexts, search path etc. Ducttape/IIS+ change notification, Metabase WOM: Work with PASS area. Configuration System Status 11/99 Markus Horstmann Lead Program Manager Status: M10 Shipping in URT December release (M10) Persistent caching / cookdown / consistent view XML-based schema declaration (MS only) Pluggable interceptors (MS only) Shared config files with XSP Used by Fusion, Ducttape, WOM Hit ZBB on 11/11! Prototype for Lightning security policy is working Now building prototype UI Status: Beta 1 work Managed Configuration System Specs on http://appcenter/config/specs Extensible schema, config objects, interceptors In-memory caching (using XSP cache) Generated accessor classes Administrative classes Started initial drops on 11/15 Beta 1 features: WIT Change notification / consistent snapshots Did joint analysis of all section handlers General agreement to switch for Beta 1 Need to address schema management concerns IIS+ might bring in more config work! Risk? Did prototype reading DT info from metabase Beta 1 features: XSP Did joint analysis of most section handlers Still missing browsercaps General agreement that requirements will be met Need to satisfy perf criteria Prototyped first section handlers using managed config system Beta 1 features: Lightning Code access security Prototype is working General agreement that requirements are met (modulo perf analysis) Lightning team will own code in mscorlib AssemblySearchPath, Debugging etc. General agreement. Some schema defined. Context / Remoting Working towards using managed config system. Beta 1 features: WOM Discovery Likely continue to use catalog as store abstraction layer Need to plug in Shilo, unclear if through catalog Discussing deeper integration  MSXML/VS7/Config might use discovery service for schema location Messaging, Pub/Sub Need to re-engage (PASS) Likely not using catalog: pub/sub is operational data, not config Might want to expose some info through config system Summary Next steps: Finalize config system implementation More flexible schema extensibility Misc. features (child config in parent node etc.) Beta 1 scheduling XSP/WebServer porting work Lightning security, contexts, search path etc. Ducttape/IIS+ change notification, Metabase WOM: Work with PASS.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\catalogevents.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Catalog Event Notification TitleCatalog Event Notification Murat Ersan Normal.dot Murat Ersan Microsoft Word 9.0 8i@i0bjbjU Catalog Event Notification Overview This is the design spec on how the event notification works in the Catalog. This includes initial requirements, the event notification technology considerations, how a consumer subscribes to events, what the catalog notification infrastructure looks like and unresolved issues. Requirements: The event notification mechanism should be simple and easy to consume events. It shouldn t pull other dependencies onto internal/external consumers. It should be reasonably fast, not causing performance bottlenecks on the provider (catalog server) and on the consumer.  The catalog events will be served to transient-only listeners. Providing events to consumers written in managed code is critical. The consumer should be able to specify the table and optionally the rows that it wants to receive change notification from. The catalog must be able to figure out whether there are any consumers who are listening for events and shouldn t fire events if there aren t any. Even when there are consumers listening to events, the catalog shouldn t fire events from tables that are not being listened to. Similarly, within a table, events should be fired only for those rows that the consumer is interested in. The schema could have knowledge as to whether a table can fire events or not. (Talked to Michel Murstein on this, the scenario he had in mind was for persistent consumers.) Eventing Technology Pros: WMI is the most commonly used instrumentation technology. It is easy to use. It is asynchronous. People are writing generic tools for event viewing. WMI ships or is freely distributable on all platforms (Win9X, NT4SPX, W2K) Cons: It is a heavyweight dependency. Do we want to force any product that wants to consume our events install WMI? Even though it ships with most products it is not installed by default, it is an option. WMI event notificating mechanism lives on another process. That means even for internal events there will be two process hops until the event reaches the comsumer. Why build in such a performance bottleneck into the product from the beginning? There is no easy way to provide events to managed code consumers.  t want COM+ Services dependency. Exists only on W2K. Doesn t provide an out of the box filtering or rule based firing. LCE for managed code is not implemented yet. Managed Code Consumers: There are two types of notification mechanisms evolving for managed code. Delegates (Tightly Coupled Events) and LCE (Publisher/Subscriber). Even though LCE provides more functionality and features it is not an option for the short term because the URT team will not implement this for the URT 1.0 release. Delegates sound like the managed form of COM Connection Points.  Connection Points: We are inclined to go with Connection Points because: The Cons of WMI. It is not clear whether the Catalog needs the sophisticated filtering mechanism that WMI provides. It would be nice. It would be an easy transition from Connection Points to Delegates (managed code). Connection points won t have the extra process round-trip that WMI does. Having the connection point interfaces doesn t prevent us from using WMI in the future. We would have an additional thin layer to provide WMI events. Issues: It is not totally asynchronous, but we will have the events fired from a separate thread. Types of events The following is a list of events that should fire change notifications: Insertion of a row to a simple table. Deletion of a row to a simple table. Update of a row to a simple table. As a consequence, the outgoing interface for the change notifications will look like this: interface ISimpleTableEvent : IUnknown HRESULT OnChange([in] ISimpleTableWrite2** i_apISTWrite,  [in] DWORD i_dwCookie); i_apISTWrite: An array of simple tables containing the changes that happened. The order of the tables is the same order as specified in the MultiSubscribe array (i_ams) specified in SimpleTableAdvise. If the user has subscribed for multiple events, the cookie can be used to identify the notification. i_dwCookie: If the user has subscribed for multiple events, the cookie can be used to identify the notification. The user needs to remember the cookie provided by SimpleTableAdvise. How does a client get event notifications? The client application that wants to receive notifications for catalog events needs to implement the ISTEvent interface. This is the outgoing interface defined by the catalog. This means the catalog will call the notification methods on this interface every time the corresponding event takes place. The client needs to go through some process to get to the IConnectionPoint interface. This can be either through the IConnectionPointContainer interface, or we can chose not to implement this container logic and return the connection point interface via a method call. The latter is a more efficient way of building the connection between the consumer and the provider because it requires less roundtrips. (This is a suggestion in Effective COM). Once the client obtains the connection point interface it will call the Advise method to let the catalog know about its interest to listening to Simple Table events. Here again, the client should be able to specify what table and what rows he is interested in. This will require us to implement an interface that the client can use to provide the catalog with more specific filtering information. interface ISimpleTableAdvise : IUnknown HRESULT SimpleTableAdvise([in] ISimpleTableEvent* i_pISTEvent, [in] DWORD i_snid, [in] MultiSubscribe *i_ams, [in] ULONG i_cms, [out] DWORD *o_pdwCookie); HRESULT SimpleTableUnadvise([in] DWORD i_dwCookie); typedef struct LPCWSTR i_wszDatabase; LPCWSTR i_wszTable; LPVOID i_QueryData; LPVOID i_QueryMeta; DWORD i_eQueryFormat; } MultiSubscribe; i_pISTEvent: This is the ISimpleTableEvent interface pointer that the user provides to the catalog. The catalog will use this interface to communicate with the consumer. i_snid: The id of the snapshot from which the consumer wants to get events. This means the consumer will get notified by the changes that happen to this snapshot and any following snapshots. i_wszDatabase, i_wszTable: The combination of a database and table uniquely identifies a table.  Both identifiers are  virtual .  A table name identifies a table having a certain logical schema independent of where its rows are actually stored.  A database name identifies a logical grouping of related table IDs. i_QueryData, i_QueryMeta, i_eQueryFormat: The query data, meta and format information.  The content of these parameters depends on the query format specified.  For more information on these parameters read the Technical Specification for Simple Tables v2. o_pdwCookie, i_dwCookie: The cookie passed back and forth between the catalog and the consumer. The cookie is used by the catalog to identify the consumer. For more information read IConnectionPoint::Advise and IConnectionPoint::Unadvise documentation. Snapshots and event notifications Using snapshots identifiers a catalog user can guarantee that multiple GetTable() calls will use the same snapshot of the underlying database. The snapshot ids (snid) can also be used with the notification system. By specifying a snid, a client tells the event manager that it wants to receive notifications from that snapshot onwards. For the event manager to be able to provide these events the snapshot that the consumer requested needs to be around. This can be done by getting a reference to the snapshot.  interface ISnapshotManager : IUnknown HRESULT ReferenceLatestSnapshot([in] DWORD* i_psnid); HRESULT ReleaseSnapshot([in] DWORD i_snid); The following is a sample that shows how a client would be able to subscribe to simple table events. The client has to implement the ISTEvent interface. The client would query for the connection point interface (ISimpleTableAdvise) off of the simple table dispenser object. Depending on what the client is interested in, it would call the Advise method specifying the Database name, Table name and the query of interest. The query format is the one used by the Simple Table infrastructure. In STConsumer::Init() the client specifies that he is interested in listening to the changes on a particular row in the namespace table. Once the connection is established, the catalog will call the client s ISTEvents methods depending on what action has happened. When the client is done processing the simple table events, he calls the Unadvise method to notify the catalog that he isn t interested in the events anymore. The connection will be removed. class STConsumer : public ISimpleTableEvent    HRESULT Init();    HRESULT Uninit();    HRESULT OnChange(in] ISimpleTableWrite2** i_apISTWrite, [in] DWORD i_dwCookie); private: ISimpleTableAdvise *m_pISTAdvise; DWORD m_dwCookie; HRESULT STConsumer::Init(DWORD i_iNamespaceID) ISnapshotManager *pISnap; HRESULT hr; STQueryCell filter; ULONG cCells // Get the Advise interface. hr = GetSimpleTableDispenser (L , 0, &pISTDisp); hr = pISTDisp->QueryInterface(IID_ISnapshotManager, &pISnap); hr = pISnap->ReferenceLatestSnapshot(&snid); hr = pISTDisp->QueryInterface(IID_ISimpleTableAdvise, &m_pISTAdvise); // Specify the database, the table and optionally the columns  // that you want to listen to. STQueryCell filter = { &i_iNamespaceID, eST_OP_EQUAL, iTBLNAMESPACEIDS_ID, DBTYPE_UI4, sizeof(DWORD}; MultiSubscribe ms = { wszDATABASE_WONS, wszTABLEWONSIDS, &filter, 1, E_ST_QUERYFORMAT_CELLS} hr = m_pISTAdvise->SimpleTableAdvise(this, snid, &ms, 1, &m_dwCookie); hr = pISnap->ReleaseSnapshot(snid); return hr; HRESULT STConsumer::OnChange([in] ISimpleTableWrite2** i_apISTWrite,  [in] DWORD i_dwCookie); ULONG cColumns, cRows; LPVOID *apData; hr = i_apISTWrite[0]->GetTableMeta(NULL, NULL, &cRows, &cColumns); apData = new LPVOID[cColumns]; for (int i = 0; i < cRows; i++) hr = i_apISTWrite[0]->GetWriteColumnValues(i, cColumns, NULL,  NULL, NULL, apData); // Do useful stuff with the column information. i_apISTWrite[0]->Release(); HRESULT STConsumer::Uninit() HRESULT hr; hr = m_pISTAdvise->SimpleTableUnadvise(m_dwCookie); m_pISTAdvise->Release(); return hr; Under construction Not up to date The interception mechanism: (This is a description of the notification implementation. Consumers don t need to know these details. It assumes that the reader has detailed information on the simple table implementation.)  The catalog code that deals with notification has two main components. These are the event manager and the event logic table. The event manager is a data member of the simple table dispenser. Therefore it is a singleton. The two interfaces that are relevant to event notification, namely ISimpleTableAdvise and ISimpleTableEventMgr, are served by the dispenser object. But all that the dispenser does is to delegate the calls on these interfaces to the corresponding methods on the event manager object.  The event logic table is responsible for providing the changes in simple tables to the event manager. This logic table will be wired to a table only if the table is a writable table and there exists a consumer who has subscribed to the events (ISimpleTableEventMgr::IsTableConsumed) of the table. If there are multiple logic tables that will be wired on to a data table, the event logic table will be the closest one to the data table. This way if another logic table performs some changes or cancels some updates, the event logic table will be able to pick up these changes. The logic table goes through the write cache and provides the event manager the changes that occurred (ISimpleTableEventMgr::CollectEvents). The event manager decides whether an update is interesting to some of the consumer. If it finds the change interesting then it will cache the row that has changed for the consumer. Once the data table successfully commits the changes, the event manager will fire the events to the consumers (ISimpleTableEventMgr::FireEvents). This will be done on a separate thread. Basically the event manager will have a queue of events to fire, and the worker thread will wake up when this queue is not empty and fire the events. In case of a failure the events won t be fired. They will get cancelled and deleted (ISimpleTableEventMgr::CancelEvents). interface ISimpleTableEventMgr : IUnknown     HRESULT IsTableConsumed([in] LPCWSTR i_wszDatabase, [in] LPCWSTR i_wszTable);     HRESULT CollectEvents ([in] LPCWSTR i_wszDatabase, [in] LPCWSTR i_wszTable,  [in] ISimpleTableWrite2 *i_pISTWrite, [in] ULONG i_iWriteRow);     HRESULT FireEvents();     HRESULT CancelEvents(); IsTableConsumed() is used by the wiring to figure out whether or not to hook up the event logic table. The event manager returns S_OK if there exists at least one consumer who subscribed to listen to events from this table. CollectEvents() is used by the event logic table to provide changed rows to the event manager. The logic table goes through every row and provides the event manager those that are marked as inserted, deleted, or updated. The event manager goes through the list of consumers and their queries. For each consumer that has subscribed to this change, it adds this row to the consumer s cache. FireEvents() and CancelEvents() should be used by the transaction coordinator. Once the transaction commits, FireEvents() should be called to notify the event manager to fire the events it has collected. In the same way, if the transaction aborts, CancelEvents() will be called. So the unit of work boundary is a transaction.  Details to resolve: How will the event calls be marshaled? Will we have a client side object that consumers will talk to? Will the user query contain filenames? If so what do we do? What if there are multiple threads updating the same or different table? The events should be isolated.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\case-sensitivity in xml metabase.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Case-Sensitivity and the XML Metabase TitleCase-Sensitivity and the XML Metabase stephenr Normal.dot stephenr Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags MonthCase-Sensitivity and the XML Metabase (Oh how my sensitivity training paid off) Author: Stephenr Date: 6/13/2001 Rather than describing the details in long sentences, this document will provide a sample XML Metabase and a legend.  But first the definition of terms: Case-Sensitive: The XML must match the expected value case-sensitively. Case-Insensitive: The XML is treated the same regardless of case.  The case may or may not be retained with the XML is saved back to disk. Case-Retaining: The XML is treated the same regardless of case; but the case is retained on save. Case-Irrelevant: The XML is non alpha so there is no concept of case for these characters. XML Overhead: includes UTF-8 signature bytes and XML processing instructions.   XML Delimiters: these are symbols like <>=  etc. XML Element Names: by their XML definition, these are Case-Sensitive. XML Attribute Names: by their XML definition, these are Case-Sensitive. XML Namespace: this is the URN that defines the schema for the XML. XML Comments: are treated as Metabase properties and the case of the text is preserved. Well-Known XML Attribute Values (type STRING): these are passed through to the Metabase and their case should be retained. Well-Known XML Attribute Values (type MULTISZ): these are passed through to the Metabase and their case should be retained. Well-Known XML Attribute Values (type BYTES): the string is converted to a byte array without regards to case. Well-Known XML Attribute Values (type DWORD): the value is non alpha   if an alpha exists, a warning is generated and the property is ignored. Well-Known XML Attribute Values (type BOOL): the string is converted to a UI4 value. Well-Known XML Attribute Values (type ENUM): there are NO well-known enum properties, so this is undefined, however, the code is implemented and it treats case the same as it does for flags. Well-Known XML Attribute Values (type FLAG): the string is converted to a UI4 value. Custom Name XML Attribute Value: the name has no meaning in the Metabase; and it s not even guaranteed to be preserved. Custom ID XML Attribute Value: numeric Custom Value (type STRING): passed through to the Metabase Custom Value (type MULTISZ): passed through to the Metabase Custom Value (type BYTES): passed through to the Metabase Custom Value (type DWORD): passed through to the Metabase Custom Value (type BOOL): passed through to the Metabase Custom Value (type ENUM): there are no enum properties, but if there were, they d be treated the same as flags. Custom Value (type FLAG): passed through to the Metabase Custom Type XML Attribute Value: enums are case-insensitive Custom UserType XML Attribute Value: enums are case-insensitive Custom Attributes XML Attribute Value: flags are case-insensitive Sample XML Metabase: <?xml version ="1.0"?> <configuration xmlns="urn:microsoft-catalog:XML_Metabase_V1_0"> <MBProperty> <!-- Comments --> <IIS_Global Location ="." BINSchemaTimeStamp="40ed1821e474c001" ChangeNumber="1008" HistoryMajorVersionNumber="192" SessionKey="49634b62980000004c00000040000000010200000168000000a400000e4806bcf41008793cb675d3553679675a5b0e94aa07b9d148e13fdc79dc9f6cf42283d70105b3853b9bab916921ac72dc4e270ccd914acfa431fbd4861aa79c00000000fe8c3b007948ab84380f9300d2fdf43225018867fe86f81cdcf64d425556f3dc8c86ebecdd26f0fdb7a3786e097b9be1277d0e03e356cb6386acf290e36d281a" XMLSchemaTimeStamp="e0512e21e474c001" </IIS_Global> <IIS_ROOT Location ="/" AdminACL="49634462d80000009000000040000000f02ff24d164102cf76f730a05ccedbf2c9339d78977090124a0c1d114f4d6c676295c4ebc3f4f9b68e8df0388f378cd847a3afec0e34b9054f4499597ecaec885dc5f1d80f253106961782583eec0048bf87a8eb745002cc015e4ffa93aef58a518f1d53455770f69eca8ffc6a156516d41cf93f4855587da2aa56af980a348f2b53d34def079b9b29efbb9c5d7d4a400eb484ce4c95c8d84759d3cfd5eb8f1a80acf7e423bdbc1f91a26721eaab83501eac6cfbd1be48facd3752830bd0ba541f1748d2634659eb3bfe48b474c07499" </IIS_ROOT> <IIsComputer Location ="/LM" MaxBandwidth="4294967295" EnableEditWhileRunning="0" <Custom Name="UnknownName_8890" ID="8890" Value="This string is case preserved" Type="STRING" UserType="UNKNOWN_UserType" Attributes="NO_ATTRIBUTES" </IIsComputer> <IIsConfigObject Location ="/LM/EventManager" </IIsConfigObject> <IIsConfigObject Location ="/LM/EventManager/SourceTypes/{C028FD82-F943-11D0-85BD-00C04FB960EA}/DisplayName" <Custom Name="MD_0" ID="0" Value="NNTP Server" Type="MULTISZ" UserType="UNKNOWN_UserType" Attributes="NO_ATTRIBUTES" </IIsConfigObject> </MBProperty> </configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\automatic history.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Automatic History Backup/Restore Title _PID_HLINKSAutomatic History Backup/Restore Omar Kouatly Normal.dot OMARKO Microsoft Word 9.0)Bg@w"Automatic History Backup/Restore Documentation and User Scenarios Config/IIS/Application Center 2000 Microsoft Confidential Author Omar Kouatly Config Feature Automatic History Program Management Contact OmarKo/ShantT Development Contact VarshaJ Test Contact janainag Docs Contact Priority Current Status Proposal Last updated 10/2/00  TOC \o "1-5" \h \z   HYPERLINK \l "_Toc496765471"  Automatic History Backup/Restore  PAGEREF _Toc496765471 \h   HYPERLINK \l "_Toc496765472"  Scenario  PAGEREF _Toc496765472 \h   HYPERLINK \l "_Toc496765473"  API Definition  PAGEREF _Toc496765473 \h   HYPERLINK \l "_Toc496765474"  Return Values  PAGEREF _Toc496765474 \h   HYPERLINK \l "_Toc496765475"  Failure conditions  PAGEREF _Toc496765475 \h   HYPERLINK \l "_Toc496765476"  Public Exposure  PAGEREF _Toc496765476 \h   HYPERLINK \l "_Toc496765477"  Revision History  PAGEREF _Toc496765477 \h   HYPERLINK \l "_Toc496765478"  Rejected Topics  PAGEREF _Toc496765478 \h  Scenario Hotpro.com like many start-ups does not have enough time to build the infrastructure necessary to insure periodic backups are made of their web server configuration.  Also, backup files even when they are made often become out of date very rapidly, so in the event of an emergency are of less value. Through the availability of Automatic History files, that IIS generates each time the Metabase file (metabase.xml by default) was saved to disk, in the event of a configuration disaster, Hotpro.com would be able to recover to prior configuration, even if they did not make an explicit backup of their configuration. Automatic History does not eliminate the need to still do backups and especially backups to external storage mediums (tape, disk, etc API Definition The existing Restore method does not provide sufficient parameters to uniquely identify an Automatic History generated file.  Thus the following method signature is required to correctly identify an automatic history file for use with Restore: RestoreHistory IMSAdminBase2::RestoreHistory( LPCWSTR pszMDHistoryLocation, dwMDMajorVersion, dwMDMinorVersion, dwMDFlags Parameters: LPCWSTR pszMDHistoryLocation, This parameter would describe the path that should be searched for the file implied by the Major and Minor versions (or Flag).  Even though the History directory is in a well-known location, (%iisdir%\history) it provides for the ability to restore archived history files that may have been transferred to removable media (disk/cd/tape).  If this parameter is NULL we will default to the well-known location, (%iisdir%\history). dwMDMajorVersion, dwMDMinorVersion, These parameters correspond to the Metabase.xml file s version stamp.  They are used to construct the file name of the backup file.  History files are named: Metabase.xml.<Major Version #>.<Minor Version #> dwMDFlags The flag is set to RESTORE_LATEST would signal the API that the Major and Minor version parameters are to be ignored and the history file at the HistoryLocation with the largest Major (and corresponding largest Minor version) should be restored.  If this flag is specified, the dwMDMajorVersion, dwMDMinorVersion parameters must be set to 0 (zero). Return Values Returns an HRESULT that contains one of the values listed in the table below. Other errors can also be returned that are passed through from the file system, or from a CryptoAPI when secure metabase data is being saved, or from registry operations.  Value Description E_INVALIDARG An argument was invalid. ERROR_INVALID_DATA The data is invalid. ERROR_NOT_ENOUGH_MEMORY Insufficient memory to perform the operation. ERROR_SUCCESS The method succeeded. MD_ERROR_INVALID_VERSION The specified version is invalid. MD_WARNING_INVALID_DATA Invalid metabase data. MD_WARNING_PATH_NOT_FOUND The specified path was not found. Failure conditions Invalid location   in the event an invalid location is specified return MD_WARNING_PATH_NOT_FOUND. Invalid Major or Minor Version   version numbers are 32bit unsigned integer values.  If the corresponding metabase.xml file with the automatic history Major/Minor version is not found, return MD_ERROR_INVALID_VERSION. Invalid arguments or flags, return E_INVALIDARG. Restore fails, depending on the reason, return ERROR_INVALID_DATA, ERROR_NOT_ENOUGH_MEMORY, MD_WARNING_INVALID_DATA. EnumHistory The IMSAdminBase::EnumHistory method enumerates the automatic metabase history in a specified backup location. Repeated calls to this method, increasing dwMDEnumIndex from 0, will return information for each metabase history file in the history location until HRESULT_FROM_WIN32 (ERROR_NO_MORE_ITEMS) is returned.  IMSAdminBase2::EnumHistory( LPCWSTR pszMDHistoryLocation, pdwMDMajorVersion, pdwMDMinorVersion, pftMDHistoryTime dwMDEnumIndex Parameters pszMDHistoryLocation On input, a buffer of length MD_BACKUP_MAX_LEN times sizeof(WChar) containing an empty string or a string of up to MD_BACKUP_MAX_LEN Unicode characters that identifies the history location. If an empty string is input, the method will enumerate history in the default History file location (%IISDIR%\history), returning the history location in this parameter. If a history location is specified on input, only history files in the specified location will be enumerated. pdwMDMajorVersion Receives the major version number of the history file. pdwMDMinorVersion Receives the minor version number of the history file. pftMDHistoryTime Receives the date and time of the history file, in Universal Time Coordinate (UTC), formerly GMT (Greenwich Mean Time). dwMDEnumIndex Specifies the index number of the history file to be enumerated. Return Values Returns an HRESULT that contains one of the following values, or any errors from the file system converted to HRESULT. Value Description ERROR_INVALID_NAME Specified name is invalid. ERROR_NO_MORE_ITEMS No more items to enumerate. ERROR_NOT_ENOUGH_MEMORY Insufficient memory to perform the operation. ERROR_SUCCESS The method succeeded. Public Exposure The export and import methods need to be publicly available through Admin base object, ADSI, and WMI.   The UI should take advantage of these methods through Backup/Restore dialogs In ADSI and WMI, in both Enum and Restore APIs the pszMDHistoryLocation parameter should be optional. Revision History October 2, 2000 Rev 0.1 (Omarko) October 19, 2000 Rev 0.2 (Omarko) October 21, 2000 Rev 0.3 (Omarko) Rejected Topics This section of the specification lists topics that were considered but the team has rejected.  This provides a historical record that will aid in bringing new team members up-to-date and help defend/support the teams current thinking in the spec. Topic Reason rejected
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\config acs offsite 1.19.00.ppt ===
Configuration ACS Offsite 1/19/00 Robert Craig Markus Horstmann Lowering the bar File copy install, file delete uninstall Text editing Text management Remoting Self-documenting (embedded comments) Unify converging efforts URT Unification WFC Managed Properties ADSI + WMI + Config + ADO+ => WMI+ Areas of unification: File format File sharing Namespace Schema Programmatic Extensibility Leverage extensible config Status Lightning: in midst of working set analysis IIS+: have buy in for metabase storage replacement 100% MB API compatibility Default: single XML file. Option: store config with content Migration tool working Rich schema: increases readability, helps reduce size More status Config in the URT Future Click to edit Master title style Click to edit Master text styles Second level Third level Fourth level Fifth level Config System Metabase API / Cache IIS+ WP Lightning Managed Config Cache Storage Layer IIS+ UI URT UI Configuration ACS Offsite 1/19/00 Markus Horstmann Markus Horstmann Microsoft PowerPoint Times New Roman Configuration Times New Roman Times New Roman Offsite 1/19/00 Times New Roman Robert Craig Markus Horstmann& "System On-screen Show Microsoft Corp. Times New Roman Default Design Configuration ACS Offsite 1/19/00 Lowering the bar Unify converging efforts Leverage extensible config Status More status Config in the URT Future Fonts Used Design Template Slide Titles Markus Horstmann
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\change notification.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Change Notification Title _PID_HLINKSChange Notification Markus Horstmann, Murat Ersan This document describes how changes to configuration files are picked up by the configuration system and how consumers are notified of these changes. COM+ Template.dot Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @\\red-prn-12\CORP0066 44E/1MC1 NPI632532 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 44E/1MC1  Letter \\red-prn-12\CORP0066 44E/1MC1  LetterID="{1EA019F9-77F4-4DE2-8193-A7D00FD4A7E5}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" VersionCompatible32="393222000" CMG="1E1CEA8B1EBDBDC1BDC1BDC1BDC1" DPB="B9BB4DAE4EAE4EAE" GC="5456A0D1A06DA16DA192" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=0, 0, 0, 0, C NewMacros=88, 88, 702, 585, CThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmanntyle:  Extract all paragraphs with style:  Dim y As Style For Each y In ActiveDocument.Styles     MsgBox y  Windows(2).Activate  Selection.Paste  Windows(1).Activate Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec enUpdati 1False Dim Sou rce As S .veDocum s.Add atD&G1Fini ~= I.o d.Cle arFAstA< Each y I6n eplaceBr !@@ward TrfuHc dAZStop WholeW }` ildc` JndsLik ExecA !G4Cop ndow8s(2 .Item(O Loop Wh ile Not Attribut e VB_Nam e = "Thi sDocumen 1Normal VGlobal! Pre decla lateDeri $CustomWin16 Win32 Project- stdole MSFormsC TemplateProject Office ThisDocument< _Evaluate NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal Normal Module1b SourceG Documentj DimExtractStyle*\C\\markush2\shared\Program Files\Microsoft Office\Templates\COM+ Template.dot *\CNormalrU ThisDocument NewMacros Project Module1 C:\vs7\retail\bin\i386\VBE6.DLL C:\Program Files\Microsoft Office\Office\MSWORD9.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\vs7\retail\bin\i386\FM20.DLL MSForms C:\DOCUME~1\MarkusH\LOCALS~1\Temp\VBE\MSForms.exd C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleTextMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> DD452EE 1-E08F-1 01A-8 2608C4D0 Dvs7\ retail\b in\i386\ FM20.DLL #Microso(ft   Libra 00}#:0 A7659 06E5D-F6 03-45C6- BB29-A09 C37223EA CH7DOCUME ~1\Marku sH\LOCAL Temp\V U.exd lateD *\C\\mB* h2\share gram @Files\GdO@ffice\ s@\COM+  G{2DF8D 04C-5BFA B-BDE5 MSO97lSC RN galc ThisDoc umentGbjbjU title  Change Notification October 26, 1999, Draft Rev 0.1  AUTHOR  \* MERGEFORMAT  Markus Horstmann, Murat Ersan  COMMENTS  \* MERGEFORMAT  This document describes how changes to configuration files are picked up by the configuration system and how consumers are notified of these changes. TOC \o "1-3" Scenarios/Requirements  PAGEREF _Toc465574057 \h  Ducttape  PAGEREF _Toc465574058 \h   PAGEREF _Toc465574059 \h  Lightning (EXE/Browser)  PAGEREF _Toc465574060 \h  Change Notification mechanisms  PAGEREF _Toc465574061 \h  Notifying config consumers  PAGEREF _Toc465574062 \h  File change notification  PAGEREF _Toc465574063 \h  2.2.1 Native Config System  PAGEREF _Toc465574064 \h  2.2.2 Managed code Config System  PAGEREF _Toc465574065 \h  Persistent Cache updates ( Cookdown  PAGEREF _Toc465574066 \h  Snapshots  PAGEREF _Toc465574067 \h  Change notifications  PAGEREF _Toc465574068 \h  Modes  PAGEREF _Toc465574069 \h  3.3.1 Manual  PAGEREF _Toc465574070 \h  3.3.2 Automatic with time-out  PAGEREF _Toc465574071 \h  In-memory Cache updates  PAGEREF _Toc465574072 \h  Open Issues  PAGEREF _Toc465574073 \h  Revision History  PAGEREF _Toc465574074 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Scenarios/Requirements Need other team s notification requirements. Ducttape Ducttape uses a persistent cache for its configuration information. Changes to configuration files must update the persistent cache. It must be possible to turn off automatic Cache update and trigger manual updates. If a group of files change (or the same file changes repeatedly), it should be possible to bundle the changes into a single cache update. Ducttape s Web Admin Service (WAS) must be notified of changes to the cache. The granularity of change notification should be at the item (= row) level. While WAS is performing the initial read, no changes must occur to the persistent cache (or at least to the snapshot that is being read). WAS must be notified of all file changes that might have occurred during the initial read. Do other consumers (Worker Processes etc.) have the same requirements for snapshoting/notifications? Does WAS need to be able to tell a worker process which snapshot to use? The number of directories on which change notification is monitored should be minimized.  XSP relies on in-memory caching. Changes to configuration files must flush the in-memory cache. Is it sufficient to flush all cache contents for a URL node+children? Selective for only those config objects that are actually affected by the change? It is not a requirement to repopulate the cache; instead the cache will be refilled on-demand as requests for configuration information are processed. Are there any consistency issues between Ducttape and XSP? Ex. a Ducttape worker process is running off an   snapshot finishing old requests/sessions while a new worker process is handling new requests. How will XSP in this worker process continue to use the old config? Lightning (EXE/Browser) For some config (version policy, security policy, search path), a running app domain should not pick up changes (i.e. run off a consistent snapshot), but a new instance of the same app (domain) should run with the new config. Other config needs to be picked up immediately and the consumer must be notified of the change. Need more details about notification granularity/content, managed vs. unmanaged. Change Notification mechanisms Notifying config consumers Consumers must be able to receive change notifications. The  HYPERLINK "http://appcenter/config/specs/urt1/CatalogEvents.doc" Catalog Event Notification spec  describes the change notification delivery mechanism for unmanaged code consumers. When working over a persisted cache / snapshot, the change notifications will be guaranteed to give the consumer a complete and consistent view of the new snapshot. Change notifications will only be sent for items that have actually changed from the previous snapshot. The change notifications will also include an indication that no more notification for a snapshot will be sent. When working without a persisted snapshot, change notifications cannot guarantee consistent views, nor can the set of changes be minimized to items that have truly changed. However, all changes to config files are guaranteed to be reported to the consumer. Do we really need granular change notification for managed code or is cache invalidation sufficient? If we need it, at which level (collection, item, property)? How exact (we don t always have a snapshot to compare against File change notification The configuration system itself needs to monitor changes to the configuration files from which it has served/cached configuration information.  Native Config System The native config system will use a wrapper interface over the Win32 file change notification APIs, to facilitate possible sharing of change notification requests/processing with other system consumers in the same process: interface ISimpleFileAdvise : IUnknown HRESULT SimpleFileAdvise( [in] ISimpleFileEvent* i_pISTEvent, [in] LPCWSTR i_wszDirList, [in] LPCWSTR i_wszExtensionList, [in] DWORD i_eFlags, [out] DWORD *o_pdwCookie); HRESULT SimpleFileUnadvise([in] DWORD i_dwCookie); The user would need to implement ISimpleFileEvent interface to handle the changes in the file system. interface ISimpleFileEvent : IUnknown HRESULT OnFileCreate([in] LPCWSTR i_wszFilename); HRESULT OnFileModify([in] LPCWSTR i_wszFilename); HRESULT OnFileDelete([in] LPCWSTR i_wszFilename); How to track changes in the file system: Use Find*ChangeNotification methods and cache the filenames of interest so that we can figure out which files have changed. Use ReadDirectoryChangesW, which gives detailed info on what changed. This method is not available on Win95/98 and WinNT3.51. Once the event manager gets a request for file notification it will cache information (name, last modification time) about the files of interest. Then it will spawn a thread that will listen for file change notifications. As changes occur in the file system, this thread will need to update the cache of the files and report to the consumers the changes that occurred. The file information cache could get too big. Multiple directories in the search path would require multiple subscriptions for file change notification. This is because the FindFirstChangeNotification api works on a single directory and its subtree. What kind of filenames are we dealing with? Absolute, relative, UNC? What process will the file change listener live in? How do we batch multiple file changes into a single notification? Should this be at the file change notification level or at the consumer level? Managed code Config System The managed config system will likely use the XSP cache and the XSP file change notification system. How do we manage the circular dependency here?  How do we avoid duplicate notification requests from XSP/Managed Configsystem and DT/Unmanaged catalog? Do we want to tie this into the listener process? On W2K we can get file level notifications from the OS. At least on NT4/Win9x we only get directory level or even directory tree-level change notifications and have to check the individual files for changes. Should this be shared processing between XSP, config and potentially other file readers? Who should provide this infrastructure? Do we require XSP on all URT installations?  Should the cache/change notification be factored out of XSP? How can we keep cross assembly interfaces private (should we)? Persistent Cache updates ( Cookdown Snapshots In order to provide a consistent view to readers, the configuration system provides the ability to guarantee that all requests for configuration information come from a single snapshot. Snapshots require persistent caching of the configuration information. How do we manifest snapshots in the UI? Should this be an option on the table dispenser / config manager, making the dispenser statefull? Should all queries pass in a snapshot ID? When the persistent cache is created, the cached data contains references to  The files that contributed to the cache and Which files contributed to which collection in the cache. During update of the persistent cache, this information is used to compute the new snapshot from the old snapshot, applying only the minimal changes, i.e. if all the config files were edited, but the content did not change (i.e. only comments were added etc.), no new snapshot needs to be saved. Update of the persisted cache is triggered by invoking a configuration system API (currently CookDown entry point in cat.lib). Change notifications Change notifications for the persistent cache are computed at the time the new snapshot is written back to disk. Notifications include  added items (new values only) deleted items (primary key only) Do we need to provide the entire item? changed items (new values only, no information on which property has changed) Do we need property level notification? Indication on which snapshots the changes cover (old and new snapshot  Indication that no more changes will be received for this snapshot. Modes Manual A update to the persistent cache is triggered by invoking the  Cookdown  API. This API will be exposed as part of the administrative URT interfaces. There should also be a mechanism to trigger a complete recomputation of the entire persistent cache (currently forced by deleting the snapshot file). Although strictly not necessary, it is useful in recovery scenarios (corruptions of the persistent cache file, bugs in the cookdown mechanism etc.). Should this be a flag on the Cookdown API? How do we expose  methods  on the config manager/admin interfaces? The Admin UI should provide mechanisms to trigger both the manual cache update, as well as the full cache recomputation. Need to discuss with Lara/Boyd. Should the full recompute really be in the UI? Automatic with time-out A listener process must register for file change notification on all the files that contributed to the cache, as well as directory locations / files that would have contributed to the cache had they existed at the time of cookdown. On Windows 2000, the listener process will be implemented as a Win32 Service using the Services Host (svchost.exe) mechanism. This enables sharing the process with other services (likely WAS). Ducttape (SethP) is planning to write an equivalent wrapper for NT4. What do we do on Win9x? The listener process will use the file change notification wrapper interfaces described above to register for all the files that contributed to the current persisted cache, as well as files/directories that would have contributed, if they had existed when the cache was computed. The listener process will buffer file change notifications over a configurable interval ( BufferFileChangeInterval  in machine.cfg). This interval is reset with every new file change notification.  A second interval ( MaxFileChangeDelay  in machine.cfg), starts when the first file change notification is received. As soon as either of these intervals expires, the listener process triggers the update of the persistent cache by invoking the  Cookdown  API.  If during the cache update further file change notifications are received, the listener process buffers these as per the above algorithm, however it does not invoke the  CookDown  API again, even if one or both of the intervals expire. If upon completion of the cache update one or both intervals have expired, the listener process immediately invokes the CookDown API. Note that the cache update may pick up changes for which change notification is still queued in the listener process. However, since the cache update keeps track of the timestamp (and indirectly the content) of the files, a subsequent notification will simply have no effect. Do we want to leverage TxF to avoid these (benign) race conditions? In-memory Cache updates Currently only consumers of the managed configuration system require in memory caching. The managed config manager is likely going to use the XSP cache implementation, which already provides cache flushing on file change notification. See section   REF _Ref465574012 \r \p \h  2.2.2 above Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History October 26, 1999 Rev 0.1 (MarkusH): Created. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\com+ 2.0 configuration system.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Configuration System Title _PID_HLINKSConfiguration System Markus Horstmann This document describes the configuration system from a developer perspective. COM+ Template.dot Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @\\red-prn-12\CORP0066 Ne00: winspool \\red-prn-12\CORP0066 \\red-prn-12\CORP0066 Letter \\red-prn-12\CORP0066 Letterurt configuration system architecture.docID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  COM+ 2.0 Configuration System - PDC May 25, 2000, Draft Rev 0.2  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes the configuration system from a developer perspective. TOC \o "1-3" Configuration as part of the Programming Model  PAGEREF _Toc484421994 \h  Configuration Files  PAGEREF _Toc484421995 \h  Configuration File Format  PAGEREF _Toc484421996 \h  2.1.1 Example 1: Singleton item   COM+ 2.0 AppDomain configuration  PAGEREF _Toc484421997 \h  2.1.2 Example 2: Collection of items   COM+ 2.0 CodeBase hints  PAGEREF _Toc484421998 \h  2.1.3 Example 3: Nested Collections   Window/Toolbar positions  PAGEREF _Toc484421999 \h  Configuration File Hierarchies  PAGEREF _Toc484422000 \h  2.2.1 Application configuration files  PAGEREF _Toc484422001 \h  2.2.2 Machine configuration files  PAGEREF _Toc484422002 \h  2.2.3 User configuration files  PAGEREF _Toc484422003 \h  2.2.4 Merged View  PAGEREF _Toc484422004 \h  2.2.5 Example 4: Directives  PAGEREF _Toc484422005 \h  Accessing Configuration Information  PAGEREF _Toc484422006 \h  Reading Configuration Information  PAGEREF _Toc484422007 \h  3.1.1 Example 1: Singleton property   AppDomain ShadowCopy  PAGEREF _Toc484422008 \h  3.1.2 Example 2: Singleton Item   AppDomain  PAGEREF _Toc484422009 \h  3.1.3 Example 2a: Singleton Item   strongly typed/early bound  PAGEREF _Toc484422010 \h  3.1.4 Example 3: Collection of items   Codebase hints  PAGEREF _Toc484422011 \h  3.1.5 Example 4: Generic configuration reader  PAGEREF _Toc484422012 \h  3.1.6 Example 5: Reading Configuration for the current Application  PAGEREF _Toc484422013 \h  3.1.7 Example 6: Queries  PAGEREF _Toc484422014 \h  3.1.8 Example 7: Nested Collections   Window/Toolbar positions  PAGEREF _Toc484422015 \h  3.1.9 Example 8: Directives   assemblies  PAGEREF _Toc484422016 \h  Writing Configuration Information  PAGEREF _Toc484422017 \h  3.2.1 Example 1: Singleton property   AppDomain ShadowCopy  PAGEREF _Toc484422018 \h  3.2.2 Example 2: Singleton Item   AppDomain  PAGEREF _Toc484422019 \h  3.2.3 Example 3: Collection of items   Codebase hints  PAGEREF _Toc484422020 \h  Managing your own Configuration Information  PAGEREF _Toc484422021 \h  Adding a property to an existing ConfigType (MS INTERNAL ONLY!)  PAGEREF _Toc484422022 \h  4.1.1 Example 1a: Add a property to the  AppDomain  collection  PAGEREF _Toc484422023 \h  Defining your own ConfigType  PAGEREF _Toc484422024 \h  4.2.1 Configuration Schema Files  PAGEREF _Toc484422025 \h  4.2.2 Example 1:  "Shape" ConfigType  PAGEREF _Toc484422026 \h  4.2.3 Configuration Schema Format  PAGEREF _Toc484422027 \h  4.2.4 Example 2: Contained "ShapeLabels" collection  PAGEREF _Toc484422028 \h  Collection Behavior: Selecting Interceptors  PAGEREF _Toc484422029 \h  4.3.1 Example 3: Making "Shapes" an inheritable URL configuration  PAGEREF _Toc484422030 \h  Writing a custom configuration object  PAGEREF _Toc484422031 \h  4.4.1 Extending the Base Configuration classes  PAGEREF _Toc484422032 \h  4.4.2 Replacing the configuration classes  PAGEREF _Toc484422033 \h  Writing a custom merge interceptor  PAGEREF _Toc484422034 \h  Writing a custom validation interceptor  PAGEREF _Toc484422035 \h  Writing a custom store interceptor  PAGEREF _Toc484422036 \h  Writing a custom hierarchy interceptor  PAGEREF _Toc484422037 \h  Accessing Configuration information from native code  PAGEREF _Toc484422038 \h  WMI Provider: COMPlus20 namespace  PAGEREF _Toc484422039 \h  Open Issues  PAGEREF _Toc484422040 \h  Revision History  PAGEREF _Toc484422041 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Configuration as part of the Programming Model The Configuration System is designed to give system runtimes, administrative tools, applications and other consumers of configuration information easy and efficient access to configuration information, regardless of the details of the storage format and location of the configuration information. By simply defining schema information for their application s configuration information, application developers obtain a large number of benefits: Common, human readable XML format for configuration information. Common APIs to read and write configuration information at runtime. Discoverability of configuration information to administrative tools. Automatic exposure through Microsoft s WMI infrastructure. Command-line scriptability from WSH (through WMI). Programmatic remote administration (through WMI). In the PDC release, some of the core COM+ 2.0 system components already use the configuration system to retrieve their configuration information at runtime (assembly binding resolution, AppDomain configuration). Other system components define their configuration information in such a way that it can be accessed through the configuration system (most ASP+ configuration), while others are currently only configurable by direct file manipulation or through specific APIs (code access security policy). The details on the configuration of COM+ 2.0 system components can be found in the respective specifications/documentation. Configuration Files While the configuration system is designed to be storage independent, and any applications or administrative tools written against configuration system APIs can be easily moved to a different backing store in the future, it is highly recommended to store configuration information in XML text files. Using XML text files has the following advantages: Low barrier of entry to configuration: any text-based tool can be used. Any file protocol (Windows s SMB/CIFS, FTP etc.) can be used for basic administration. XCOPY deployment: no registration is needed on application install, no cleanup is needed on application uninstall. XML editors can provide relatively rich consistency checking. Most COM+ 2.0 system configuration is stored in user-editable XML text files. Configuration File Format The XML format for configuration files is optimized for human readability: Configurable properties are expressed as XML attributes and related properties are grouped under XML elements, to render a compact, yet legible representation. Configurable properties should have a well-defined XML schema that can be used by XML editors and other XML-aware applications to perform validation or provide syntactic hints to the user. The XML schema also makes all configurable properties discoverable to generic consumers, like some administrative tools and development tools. Example 1: Singleton item   AppDomain configuration <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms"> <AppDomain      PrivatePath=".\bin;.\blaa"      SharedPath="c:\common\bin;c:\suite\utils"     ShadowCopy="True" </configuration> Example 1a: Singleton item   COM+ 2.0 AppDomain configuration Another example of a singleton configuration entry is the COM+ 2.0 AppDomain configuration: AppDomain settings can be specified at most once in each application configuration file: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms"> <AppDomain      PrivatePath=".\bin;.\blaa"      SharedPath="c:\common\bin;c:\suite\utils"     ShadowCopy="True" </configuration> The first line ( <?xml  ) declares that this file is an XML document. It is optional, but should be specified to leverage XML editing tools. The second line ( <configuration  ) defines the root element of the XML document and declares the XML schema to be used to validate the content of the root element. The  xmlns  attribute on the root <configuration> element is optional, but in order to fully leverage XML editing tools (ie. VS7 s XML editor with autocomplete etc.) it is highly recommended to include the  xmlns  attribute. The root element in URT configuration files must have the name  configuration . XML is case sensitive. For more details on XML refer to   HYPERLINK "http://www.w3c.org/xml"  http://www.w3c.org/xml The subsequent lines (<AppDomain />) carry actual configuration information, in this example the settings for the Application Domain. Individual configuration properties are expressed as XML attributes ( ShadowCopy  and  PrivatePath ). An XML element ( AppDomain> ) groups these properties into logical units. The last line ( /configuration> ) closes the root element and thus the XML document. Example 2: Collection of items   COM+ 2.0 CodeBase hints <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <CodeBase>     <CodeBaseHint Name="wininet" Version="0.5.0.10" CodeBase="http://ie" />     <CodeBaseHint Name="urlmon" Version="0.5.0.11" CodeBase="http://ie" />     <CodeBaseHint Name="mshtml" Version="0.5.0.9" CodeBase="http://ie" />   </CodeBase> </configuration>  The Assembly Codebase hint   used here again merely as an example of configuration information - is typically specified in an application configuration file and allows the COM+ 2.0 runtime to install or reinstall an assembly from the indicated location. There is one codebase hint for every assembly that is to be downloaded from a specific location. A code base hint has several properties ( Version  and the actual  Codebase In the configuration file, each code base hint is represented by an XML element ( CodeBaseHint ), while each of its properties is an attribute of this element. All code base hint elements are grouped together by a containing element ( <CodeBase> ), to ensure that all code base hints are stored in a single location in the file. Note: Refer to the  HYPERLINK "http://fusion/Projects/Helium/helium specs/policy_htm.htm" Fusion binding specification  and the   HYPERLINK "http://comrtime/specs/admin/Design%20Specification%20For%20Configuration%20Manifests.doc"  Lightning Configuration specification  for the actual/current definition of code base hints. Example 3: Nested Collections   Window/Toolbar positions Often, configuration information is more complex and requires one or more sub-items for each configuration entry. Take the example of a (fictitious) Windows application that needs to store information for each of its windows: the window position, the background color and the applicable toolbars and their position: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <Windows>     <Window Name="MainWindow" PosX=  PosY=  Width=  Height=  Color= Green       <Toolbar Name= Formatting  PosX=  PosY=       <Toolbar Name= Standard  PosX=  PosY=     </Window>     <Window Name="StockTicker" PosX=  PosY=  Width=  Height=  Color=       <Toolbar Name= BuySell  PosX=  PosY=     </Window>   </Windows> </configuration> This example represents the definition of two  Windows  (a collection of  Window  items). Each Window in turn has one or more  Toolbar  items. The simple properties of a  Window  are expressed as XML attributes (  etc.). The  Toolbars  that the used chose for each Window are expressed as  Toolbar  sub-elements of the  Window  element, which in turn have attributes.  The last line ( /configuration> ) closes the root element and thus the XML document. Configuration File Hierarchies Applications and hosting platforms have different requirements on their configuration and the levels at which configuration information must be specified. While the configuration system provides an open, flexible architecture to accommodate these different requirements, application and hosting platform authors are encouraged to strive for uniformity by choosing one or more of the following, commonly used configuration levels, when determining their configuration file hierarchy. Application configuration files Most applications have a well-defined root, typically corresponding to a root directory in the file system. The exact mechanism for determining the application root depends on the kind of application (more precisely: on the host that creates the application domain). For applications hosted in a web server, for example, the application root directory is the physical directory associated with the root URL of the application. For standalone executables, the application root directory is the directory containing the PE image. Other hosts can define their own semantics for determining the application root. Applications should store any configuration that applies to all instances of the application, regardless of currently logged on user or other context, in a configuration file in the application root directory. The configuration file name should be some derivative of the application.  Example: For standard EXEs, the exe host uses the root name of the executable with a   file extension as the file name of the configuration file (i.e.  Foo.cfg  for  Foo.exe ). This naming schema supports more than one EXE per file system directory. Example: For ASP+ applications, the web server host uses the same file name ( config.web ) for all its configuration files (it assumes at most one application per directory). Machine configuration files Some configuration information applies to all applications on a machine. This includes policy (security, version binding etc.) as well as defaults that should be applied if an application does not specify it s own configuration. In the PDC release, the COM+ 2.0 system itself uses several machine-level configuration files: %windir%\admin.cfg: administrative overrides for assembly binding policy. %windir%\complus\<complusversion>\config\machine.cfg: the machine-level defaults for application-specific configuration. %windir%\complus\<complusversion>\config.web: the default configuration file for web server (including MyWeb). %windir%\complus\<complusversion>\config\security.cfg: the default code-access security policy. User configuration files Some applications/hosts need to support per-user configuration information. This configuration information is typically stored in configuration files that reside in the user profile (%appdata% environment variable on Windows 2000). Per-user application settings Application specific settings that should only be visible to a single user, not to all users of an application, should be stored in a separate configuration file in the user profile. Hosts can define the name and location of the per-user/per-application configuration file as part of their configuration file merge hierarchy. Hosts should use a derivative of the application name as the filename (i.e. %appdata%\foo.cfg, for an application  foo.exe Applications can of course also choose to store their own configuration file in arbitrary locations, including the user profile. However, the configuration system merge view  will not include these file and administrative tools might not be able to discover these custom configuration files. Per-user system defaults Some system settings (example: code access security policy) need to be specified for each user, but apply to all applications . Hosts typically choose to store these settings in a well-known configuration file in the user profile (%appdata%\config.cfg). Merged View It is often desirable that the actual configuration for an application be a merge of the settings specified in the application s configuration file with any defaults specified in the machine configuration file and other configuration files.  Instead of the application (developer) doing this  merge  across different hierarchy levels for each configuration setting (and for each hierarchy/host that the application might need to support), an application can use the configuration system to compute a merged view across multiple configuration files. The caller only needs to indicate the kind of configuration information to retrieve; the configuration system computes the configuration file hierarchy (based on the host, and potentially the kind of configuration information) and performs the merge. This configuration system feature is not currently used for COM+ 2.0 system configuration (ASP+ configuration uses a different mechanism), but the COM+ 2.0 SDK contains samples that illustrate the mechanisms. Example 4: Directives In some cases, configuration information needs to be accumulated across a hierarchy of configuration files. Directives can be used to control the accumulation (or merge) process across the hierarchy: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <assemblies>       <add assembly="System.Data"/>       <add assembly="System.Web.Services"/>       <remove assembly="System.Xml.Serialization"/>       <add assembly="System"/>       <add assembly="System.Text.RegularExpressions"/>       <add assembly="System.Drawing"/>       <add assembly="*"/>   </assemblies> </configuration> In this example, the element name of each of the items in the <assemblies> list controls if the item is to be added to or removed from the list during merge of configuration files. Each item can carry one or more additional attributes, just like any configuration item. The only difference to regular configuration is that the element name is replaced with the directive. Accessing Configuration Information The configuration system provides uniform read and write access to all configuration information, regardless of the storage format or the location of the configuration. Some configuration information is not stored in XML files: In some cases the information might be operational information that changes frequently at application execution time and thus requires a more robust, higher performing store than a text file; in yet other cases, the information comes from legacy configuration stores (i.e. IIS meta base, COM+ 1.0 registry etc.) that application or other parts of the system access directly.  However, both the XML-based and the non-XML configuration information are programmatically accessible through the same configuration system APIs, and care has been taken to ensure that underlying stores can change in future releases, without requiring major rearchitecture of the calling system runtimes or applications. Configuration information is also automatically exposed through Microsoft s WMI infrastructure. Reading Configuration Information System runtimes, modules that extend the system runtimes, applications, as well as administrative tools, can retrieve configuration information through the Get*() methods on the  HYPERLINK  \l "_Configuration_Manager_Class" Configuration Manager class ConfigType  parameter indicates the type of configuration information to be retrieved. A configuration type usually contains more than one configuration property. Selector  parameter determines a subset of the configuration information to be accessed. It typically indicates the location of a configuration file or implies the location of all other configuration files in a configuration file hierarchy (machine/user etc.). It can also contain a simple query to limit the configuration information. Example 1: Singleton property   AppDomain ShadowCopy In this example, the configuration information consists of a single named value, which occurs exactly once in a configuration scope (file). The COM+ 2.0 system setting for application domains (as used by the EXE host) consists of such singleton properties: there can be only one  ShadowCopy  flag for each application. // Reading a single value: Boolean ShadowCopy = (Boolean)      ConfigManager.GetProperty("AppDomain", "c:\myapp\foo.cfg", "ShadowCopy Example 2: Singleton Item   AppDomain The AppDomain configuration consists of more than one property, but still each of the properties can appear at most once in a configuration scope (file). The configuration system makes it easy to retrieve all properties in a ConfigType at once:  // Reading all AppDomain values at once: IConfigItem appdomain = ConfigManager.GetItem("AppDomain", "c:\myapp\foo.cfg"); if ((Boolean) appdomain["ShadowCopy"]) {  String spath = (String) appdomain[ SharedPath String ppath = (String) appdomain[ PrivatePath Example 2a: Singleton Item   strongly typed/early bound In addition to the late bound access in the previous examples, callers can also use strongly typed accessor classes to  Avoid the explicit type casting, Improve compile time error checking Obtain syntax checking/autocomplete in development environments By convention, configuration accessor classes reside in a namespace beginning with  System.Configuration , and using part of the namespace of the class that they configure as a subnamespace. For example, the accessor class for AppDomain configuration is System.Configuration.Core.AppDomain. The strongly typed accessor classes can be automatically generated from configuration schema. In the PDC release this class generation is not publicly available, but application authors can manually define their own strongly typed accessor classes and have them returned by the configuration manager. System.Configuration.Core.AppDomain appdomain =     ConfigManager.GetItem("AppDomain", "c:\myapp\foo.cfg"); // Note: no casting necessary, development tools list available properties if (appdomain.ShadowCopy) {  String path = appdomain.SharedPath; Example 3: Collection of items   Codebase hints In this example, the configuration information is slightly more complex: every property in a ConfigType can actually occur more than once within a given configuration scope (file). The COM+ 2.0 system setting for assembly download location ( CodeBaseHint ), is a good example of such a configuration setting: every assembly that could potentially be loaded into an application can have it s own CodeBaseHint entry. IConfigCollection hints = ConfigManager.Get("CodeBase", "c:\myapp\foo.cfg"); for (int i=0; i<hints.Count(); i++) { CodeBaseHint codebase = hints[i]; Console.WriteLine(codebase.Name+": "+codebase.CodeBase); // Output: wininet: http://ie urlmon: http://ie mshtml: http://ie Example 4: Generic configuration reader In some cases (administrative tools, generic applications), it is necessary to process arbitrary configuration information without prior knowledge. The configuration system provides schema (property names, types etc.) discovery mechanisms for sophisticated tools, but also lets simple tools read configuration information in a generic way, by letting a caller enumerate the available properties in a configuration item. The example code below outputs an arbitrary set of configuration information, by only modifying the ConfigType and Selector passed to the ConfigManager.Get method: // Late bound, generic IConfigCollection collection = ConfigManager.Get(  CodeBase , "c:\myapp\foo.cfg"); for (int i = 0; i < collection.Count(); i++) { IConfigItem item= collection [i]; Console.WriteLine(""); for (int property = 0; property<item.Count(); property++) { Console.WriteLine( item[property] ); Example 5: Reading Configuration for the current Application Instead of directly specifying a file location, applications can read from their own configuration file by using the AppDomainSelector instead of a FileSelector. The AppDomainSelector retrieves the location of the configuration file from the currently running application domain: Boolean ShadowCopy =    (Boolean) ConfigManager.GetProperty("AppDomain", new AppDomainSelector(),  ShadowCopy Example 6: Queries A caller can limit the items returned into a collection by specifying a ConfigQuery class, instead of a FileSelector (or AppDomainSelector): ConfigQuery query = new ConfigQuery("Name=Wininet");  Query.Selector=new AppDomainSelector(); IConfigCollection hints = ConfigManager.Get("CodeBase", query); foreach (CodeBaseHint codebase in hints) {  Console.WriteLine(codebase.Name+": "+codebase.CodeBase);  Query capability is particularly useful for larger collections. Example 7: Nested Collections   Window/Toolbar positions IConfigCollection windows= ConfigManager.Get( Windows , new AppDomainSelector()); for (int i = 0; i < windows.Count(); i++) {   Window window = windows[i];   Console.WriteLine(window.Name+ +window.PosX+ +window.PosY);   QuerySelector q = new QuerySelector( Name= +window.Name);   q.Selector=new AppDomainSelector();   IConfigCollection toolbars = ConfigManager.Get( Toolbar , q);   for (int j = 0; j<toolbars.Count(); j++) {     Toolbar toolbar = toolbars[j];     Console.WriteLine(   + toolbar.Name+   + toolbar.PosX +   + toolbar.PosY); // Output for the example configuration file   REF _Ref466912767 \p \h  above MainWindow: 0.0   Formatting: 0.0   Standard: 0.40 StockTicker: 0.101   BuySell: 0.0 Example 8: Directives   assemblies ASP+ gives the application developer/administrator the flexibility to specify which assemblies to use during compilation. At each level in a configuration file hierarchy assemblies can be added or removed from the list. IConfigCollection assemblies =            System.Configuration.ConfigManager.Get( assemblies                                           "http://myserver/mysite"); for (int j=0; j<assemblies.Count; j++)    System.Configuration.Web.Assembly a = assemblies[j];   Console.WriteLine(a.Type); Note that the resulting list contains only assemblies that have not been removed along the configuration file hierarchy. Writing Configuration Information Administrative tools can write to the configuration system using the Put*() methods on the Configuration Manager class.  There are three separate methods for writing individual properties, an item or an entire collection of items. Example 1: Singleton property   AppDomain ShadowCopy // Writing a single value: ConfigManager.PutProperty("AppDomain", "c:\myapp\foo.cfg", "ShadowCopy , true); Example 2: Singleton Item   AppDomain // Writing all AppDomain values at once: IConfigItem appdomain = new AppDomain(); appdomain.ShadowCopy=true; appdomain.SharedPath= c:\foo appdomain.PrivatePath= .\bin appdomain.Selector=new FileSelector( c:\myapp\foo.cfg ConfigManager.PutItem(appdomain); Example 3: Collection of items   Codebase hints BaseConfigCollection hints = new BaseConfigCollection(); hints.ConfigType= CodeBaseHint hints.Selector=new FileSelector( c:\foo.cfg CodeBaseHint hint = new CodeBaseHint(); hint.Name= foo.dll hint.CodeBase= http://ie hints.Add(hint); ConfigManager.Put(hints); Managing your own Configuration Information The configuration system is designed to be extensible in several dimensions:  New properties can be added by the original author of a ConfigType. New ConfigTypes can be defined. Custom collection and item classes (accessor classes) can be defined by the author of a ConfigType. Custom merge logic for hierarchical configuration information can be defined by the author of ConfigType. Custom validation logic can be defined by the author of a ConfigType. "Drivers" for arbitrary stores can be plugged in by the author of a ConfigType to read from stores other than XML.  Custom configuration hierarchy computations can be plugged in. Adding a property to an existing ConfigType (MS INTERNAL ONLY!) This section is MS INTERNAL ONLY! The set of properties in a ConfigType are defined in a configuration schema file. In order to add a new property, it is usually sufficient to add the new property declaration to the schema of the ConfigType. The configuration system core schema is compiled into the configuration system binaries and can not be modified.  The configuration system's schema compiler utility (catutil.exe) uses this source schema to generate: The strongly typed configuration collection and configuration item classes. An XML schema (catalog.xms), that XML parsers can use to validate configuration files and that configuration file authors should specify as the namespace of the configuration root element, i.e. <configuration xmlns="x-schema:catalog.xms">. C++ header files for callers of the native configuration system. An optimized binary representation of the schema information for use by the configuration system itself, compiled into the configuration system binary (catalog.dll). In current config system drops, this binary schema is stored in the catalog.dll binary itself, but can be updated through the CATUTIL tool without recompiling DLL. Multiple binary schema files will be supported, to facilitate independent development for internal MS groups. Schema representation for the Component Library Engine (used by the Configuration System's Persisted Cache). The persistent cache is optional, and currently only used for IIS+ UL configuration. The schema compiler utility (catutil.exe) is invoked as follows: catutil /compile catutil.exe and catmeta.xml are internally available on   HYPERLINK "\\\\urtdist\\builds\\<build#>\\<platform>\\config"  \\urtdist\builds\<build#>\<platform>\config We are not planning to ship catutil.exe to external customers (see note about annotated schema above!). Example 1a: Add a property to the  AppDomain  collection Edit catmeta.xml as follows: <?xml version ="1.0"?> <MetaData xmlns="x-schema:CatMeta.xms"> <DatabaseMeta InternalName="URTGLOBAL">  <Collection  InternalName ="AppDomain"  ConfigType="AppDomain" PublicRowName="AppDomain" SchemaGeneratorFlags="EMITXMLSCHEMA">  <Property InternalName ="PrivatePath" Type="String"  />  <Property InternalName ="GlobalPath"  Type="String"  />  <Property InternalName ="ShadowCopy"  Type="Boolean" />  <Property InternalName ="MyNewProperty"  Type="int32" /> </Collection> </DatabaseMeta> </MetaData> Current config drops use "PublicName" instead of "ConfigType" and require "InternalName" in addition to "PublicName". Types for properties are WSTR instead of String, UI4 instead of int32. This will change soon! Run catutil /compile. Edit config.cfg to contain the new property as desired: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms"> <AppDomain      PrivatePath=".\bin;.\blaa"      GlobalPath="c:\common\bin;c:\suite\utils"     ShadowCopy="True"     MyNewProperty= </configuration> Start consuming the new property: // Reading a single value: int myprop = (int) ConfigManager.GetProperty ("AppDomain", AppDomain.Selector, "MyNewProperty"); // Reading all AppDomain values at once: IConfigItem appdomain = ConfigManager.GetItem ("AppDomain", AppDomain.Selector); if (appdomain["MyNewProperty"] > 41) {  In order to use early binding: Run generate.exe to generate strongly typed accessor classes for managed code. Customers can also write their own classes. Ideally dev tools would generate these classes // Reading all AppDomain values at once (early bound): AppDomain appdomain = ConfigManager.GetItem ("AppDomain", new AppDomainSelector()); if (appdomain.MyNewProperty > 41) {  Defining your own ConfigType ConfigTypes are defined in a configuration schema file. In order to add a new ConfigType it is usually sufficient to add the definition of the ConfigType and it's properties to the configuration schema. If the behavior of the new ConfigType is to be similar to the behavior of an existing ConfigType, it is usually sufficient to add the new ConfigType to the same <Database> element, as each Database has it's own default behavior. If the behavior needs to be customized, refer to section   REF _Ref467247259 \r \p \h  4.3 below Configuration Schema Files Configuration schema files must be listed in the machine configuration file. For this purpose, the machine configuration file contains a  SchemaFiles  collection: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <SchemaFiles>       <SchemaFile Name= MySchema  Path="c:\myschema.xml" />   </SchemaFiles> </configuration> Example 1:  "Shape" ConfigType This example defines a fictitious "Shape" ConfigType that is to be read from an XML file. Each shape can either be a square, a triangle or a circle. Shapes have a size, expressed as width and height, as well as a color. The following source schema definition defines the ConfigType: <?xml version ="1.0"?> <MetaData   xmlns="x-schema:CatMeta.xms">   <DatabaseMeta           InternalName="MyApp">     <ServerWiring       Interceptor="Core_XMLInterceptor"/>     <Collection            InternalName="SHAPES" PublicName="Shapes"           SchemaGeneratorFlags="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME"           >       <Property InternalName="ShapeName"    Type="String" MetaFlags="PRIMARYKEY" />       <Property InternalName="ShapeType"    Type="int32" DefaultValue="Triangle" >         <Enum InternalName="Square"   Value="1"/>         <Enum InternalName="Triangle" Value="2"/>         <Enum InternalName="Circle"   Value="3"/>      </Property>      <Property InternalName="SizeX"           Type="int32" DefaultValue="100" />      <Property InternalName="SizeY"           Type="int32" DefaultValue="100" />      <Property InternalName="Color"           Type="int32" DefaultValue="Red" >         <Enum InternalName="Red"   Value="1"/>         <Enum InternalName="Green" Value="2"/>         <Enum InternalName="Blue"  Value="3"/>      </Property>      <QueryMeta InternalName="All" MetaFlags="ALL" />      <QueryMeta InternalName="QueryByFile" CellName="__FILE" Operator="EQUAL"  />   </Collection> </DatabaseMeta> </MetaData> After adding the following entry to the machine configuration file: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <SchemaFiles>       <SchemaFile Name= MySchema  Path="c:\myschema.xml" />       <SchemaFile Name= ShapeSchema  Path="c:\Program Files\Shapes\ShapeSchema.xml" />   </SchemaFiles> </configuration> and providing a "c:\Program Files\Shapes\Shapes.cfg" file with the following content, <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <Shape ShapeName="triangle1" />   <Shape ShapeName="square1" Type="Square" />   <Shape ShapeName="BigSquare1" Type="Square" SizeX="200" SizeY="200" />   <Shape ShapeName="BlueTriangle1" Color="Blue" /> </configuration> the "Shapes" collection can be accessed as follows: IConfigCollection shapes = ConfigManager.Get(          "Shapes",           FileSelector("c:\Program Files\Shapes\shapes.cfg")); for (int j=0; j<shapes.Count; j++)    IConfigItem s=shapes [j];   Console.WriteLine( s[ ShapeName ] + " type: "                     + s[ ] + " sx=" + s[ SizeX ] + " sy="                     + s[ SizeY ] + " Color: + s[ Color // Output:  triangle1 type: 2 sz=100 sy=100 Color: Red square1 type: 1 sz=100 sy=100 Color: Red BigSquare1 type: 1 sz=200 sy=200 Color: Red BlueTriangle1 type: 2 sz=100 sy=100 Color: Blue Configuration Schema Format Database Definition A database scopes several ConfigType definitions together, mainly for the purpose of applying common behavior to a set of ConfigTypes. It does not scope the ConfigType names in any way; ConfigType names must be globally unique, and should use COM+ 2.0 class naming conventions. Collection Definition InternalName The InternalName is the primary identifier for the collection: it is used internally by the configuration system (and throughout the configuration schema). It provides the ability to change programmatically visible names, without changing schema and even some application private code or queries. PublicName The PublicName indicates the publicly accessible name of the collection. The PublicName is the string that is passed in as the ConfigType parameter to the ConfigManager APIs. Schema GeneratorFlags The SchemaGeneratorFlags instructs the configuration system on how to process the schema for this collection. EMITXMLSCHEMA The "EMITXMLSCHEMA" flag indicates that this collection can be stored in XML files. NOTSCOPEDBYTABLENAME The "NOTSCOPEDBYTABLENAME" flag on a collection declares that items in this collection should appear as top level XML elements under the <configuration> root element, rather than being contained in an element that corresponds to the collection (in this case < Shapes></ Shapes> can be omitted). Specifying this flag disallows the use of the collection parent element in XML files. The advantage of using this flag is that the XML content is more compact.  The disadvantage of using this flag is that items for the collection may be "sprinkled" all over the configuration file, which may make diagnosing a configuration problem harder. NOTSCOPEDBYTABLENAME  flag is often used in conjunction with the   HYPERLINK  \l "_Use_Containment_Flag"  USECONTAINMENT  flag for nested collections. ItemClass The ItemClass declares what name the configuration system should use when returning items.  Property Definition InternalName The name of the property being defined. Again, this name is for internal use by the configuration system (and within schema files). PublicName The publicly visible name of the property. This is the string that can be passed to the ConfigManager.GetProperty API. Properties must have a name and a type. Permissible types are: int32 String Byte[] DefaultValue The schema can specify a default value for a property, which the configuration system applies if the store (XML file etc.) does not specify a value for the property. Enumerated Properties Properties of type int32 can be declared as enumerations, in which case the configuration system enforces that the property value is within the declared set of (string) values. Enumeration values for enumerated properties are declared as one or more <Enum> elements under the <Property> element. The <Enum> element must have an "InternalName" attribute, which indicates the symbolic name for the enumeration value, and a "Value" attribute, which indicates the numeric value. The XML configuration file for enumerated properties must use the symbolic name, rather than the numeric value. Programmatic access to an enumerated property must use the numeric value. Primary Key The primary key flag on a property indicates that this property should be considered part of the unique identity of any item in this collection. The configuration system enforces that a configuration collection does not contain more than one item with the same primary key property values. At least one of the properties in an item must be declared to be part of the primary key. It is permissible to declare all properties in a collection as part of the primary key, if no smaller unique identity can be established. Supported Queries The <QueryMeta> element indicates the set of queries that are recommended to be performed on the collection. The primary purpose of this information is to enable administrative tools to provide more powerful user interface for unknown configuration information. Query Information is optional, but it is highly recommended to provide these hints to generic consumers. The InternalName attribute provides a human readable name for the kind of query being declared as supported. The QueryCell attribute indicates the InternalName of a property on which query is supported. The special QueryCell attribute  __FILE  indicates that the collection requires a file location in order to be retrieved. The Operator attribute indicates which comparison operators are supported for this property (currently the only supported comparison operator is  EQUAL The MetaFlag "All" indicates that it is permissible to query for all items in this collection. The MetaFlag "Any" indicates that queries on any combination of properties are supported. Example 2: Contained "ShapeLabels" collection Suppose that our fictitious "Shapes" collection needs to be enhanced: each shape should have one or more text labels, either at the center of the shape or along one of the edges of the shapes area. The following source schema definition (again added to catmeta.xml) adds a child collection under the Shapes group: <?xml version ="1.0"?> <MetaData xmlns="x-schema:CatMeta.xms">   <DatabaseMeta           InternalName="MyApp">   <Collection InternalName="SHAPELABELS" PublicName="ShapeLabels"               SchemaGeneratorFlags="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME"               >      <!-- this property relates the ShapeLabels collection to the Shapes collection -->      <Property InternalName="ShapeName" Type="String" MetaFlags="PRIMARYKEY" />      <!-- these are the actual Label properties -->      <Property InternalName="LabelName" Type="String" />      <Property InternalName="AppliesTo" Type="int32" >         <Enum InternalName = "Center"     Value="1" />         <Enum InternalName = "TopEdge"    Value="2" />         <Enum InternalName = "BottomEdge" Value="3" />         <Enum InternalName = "LeftEdge"   Value="4" />         <Enum InternalName = "RightEdge"  Value="5" />      </Property>   </Collection> </Database> <RelationMeta PrimaryTable="SHAPES" PrimaryColumns="ShapeName"           ForeignTable="SHAPELABELS" ForeignColumns="ShapeName"            MetaFlags="USECONTAINMENT" /> </MetaData> After editing the "c:\Program Files\Shapes\Shapes.cfg" file as follows, <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <Shape ShapeName="triangle1" />   <Shape ShapeName="square1" Type="Square" />   <Shape ShapeName="BigSquare1" Type="Square" SizeX="200" SizeY="200" >      <ShapeLabel Label="BIGSQUARE" AppliesTo="Center" />      <ShapeLable Label="Text on lower edge" AppliesTo="BottomEdge" />   </Shape>   < Shape ShapeName="BlueTriangle1" Color="Blue" /> </configuration> the labels for a shape can be accessed as follows: FileSelector f = new FileSelector("c:\Program Files\Shapes\shapes.cfg"); IConfigCollection shapes = ConfigManager.Get("Shapes", f); for (int j=0; j<shapes.Count; j++)    IConfigItem s=shapes [j];   Console.WriteLine( s[ ShapeName ] + " type: "                     + s[ ] + " sx=" + s[ SizeX ] + " sy="                     + s[ SizeY ] + " Color: + s[ Color   QuerySelector q =        new QuerySelector( Select * from ShapeLabels where ShapeName= ShapeName   q.Selector=f;   IConfigCollection labels = ConfigManager.Get( Labels , q);   for (int k=0; k<labels.Count; k++)     IConfigItem l = labels[k];     Console.WriteLine("  Label: " + l["LabelName"] +                       " Position: " + l["AppliesTo"]); // Output:  triangle1 type: 2 sz=100 sy=100 Color: Red square1 type: 1 sz=100 sy=100 Color: Red BigSquare1 type: 1 sz=200 sy=200 Color: Red   Label: BIGSQUARE Position: 1   Label: Text on lower edge Position: 3 BlueTriangle1 type: 2 sz=100 sy=100 Color: Blue Explanation of the additional source XML format concepts: Containment / Relations The <RelationMeta> element - defined outside of any <DatabaseMeta> section - declares two collections as related. The PrimaryTable attribute indicates the InternalName of the collection that defines the properties to which another collection relates itself. The PrimaryColumns attribute lists the InternalNames of the properties in the primary collection to which the other collection relates itself; properties are listed by InternalName and names are separated by a space character. The ForeignTable attribute names the InternalName of the collection that relates itself to the PrimaryTable. The ForeignColumns attribute indicates which properties in the ForeignTable reference the primary collection. USECONTAINMENT The MetaFlag "USECONTAINMENT" on a relation, declares that the XML representation of the foreign collection is to be contained within the XML element of the primary collection. This flag allows one to many relationships to be expressed using XML element hierarchy. Collection Behavior: Selecting Interceptors In the previous examples, the default collection behavior was used: reading through the XML store interceptor from a single configuration file, whose location must be specified by the caller (using the FileSelector).  Custom interceptors can be selected in the mwiring.xml file in the machine configuration directory. Interceptors can be selected on a per collection basis, by using the <Intercept> element in the <ManagedWiring> section of mwiring.xml. Example 3: Making "Shapes" an inheritable URL configuration The COM+ 2.0 SDK contains a hierarchy interceptor for Web Server configuration file hierarchies. The following behavior definitions makes the Shapes and ShapeLabels groups queryable along the configuration file hierarchy of the COM+ 2.0 Web Server; Shapes and Labels are inherited from the parent config file (if any), definitions in child config files are added to the inherited shapes, overriding any inherited shapes with the same name. Add to mwiring.xml: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms"> <ManagedWiring>   <!-- Definition for Shapes collection -->   <Intercept ConfigType="Shapes" Protocol="http" Order="1"              Interceptor="Microsoft.Configuration.Samples.WebHierarchyInterceptor"              InterceptorType="Transformer" />   <Intercept ConfigType="Shapes" Protocol="list" Order="2"              Interceptor="System.Config.ListMerge"              InterceptorType="Merger" />   <Intercept ConfigType="Shapes" Protocol="query" Order="1"              Interceptor="System.Config.NativeCatalogInterceptorRO"              InterceptorType="Merger" />   <!-- Definition for ShapeLabels collection -->   <Intercept ConfigType="ShapeLabels" Protocol="http" Order="1"              Interceptor="Microsoft.Configuration.Samples.WebHierarchyInterceptor "              InterceptorType="Transformer" />   <Intercept ConfigType="ShapeLabels" Protocol="list" Order="2"              Interceptor="System.Config.ListMerge"              InterceptorType="Merger" />   <Intercept ConfigType="ShapeLabels" Protocol="query" Order="1"              Interceptor="System.Config.NativeCatalogInterceptorRO"              InterceptorType="Merger" /> </ManagedWiring> </configuration> After copying the contents of shapes.cfg file into an application configuration file (i.e. %systemdrive%\inetpub\wwwroot\mysite\myapp\Config.web from   HYPERLINK  \l "_Example_1:_Machine"  Example 1 ), adding the following to the web server s machine configuration file: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <Shape Name="MasterTriangle from machine s config.web " /> </configuration> and adding the following the site configuration file (%systemdrive%\inetpub\wwwroot\mysite\myapp\Config.web): <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <Shape Name="MySiteCircle from Mysite config" Type="Circle" /> </configuration> will result in the following output (using the code from   HYPERLINK  \l "_Example_5a:_Contained"  Example 6a IConfigCollection shapes = System.Config.ConfigManager.Get(          "Shapes", "http://mysite.com/myapp"); // Output: MasterTriangle from Machine.cfg type: 2 sz=100 sy=100 Color: Red MySiteCircle from Mysite config type: 3 sz=100 sy=100 Color: Red triangle1 type: 2 sz=100 sy=100 Color: Red square1 type: 1 sz=100 sy=100 Color: Red BigSquare1 type: 1 sz=200 sy=200 Color: Red   Label: BIGSQUARE Position: 1   Label: Text on lower edge Position: 3 BlueTriangle1 type: 2 sz=100 sy=100 Color: Blue Explanation of the behavior declaration format: ConfigType An interceptor is associated with a specific collection by specifying the collection's ConfigType (= PublicName) in the Intercept element. Protocol An interceptor can be associated to a specific kind of selector. Every selector provides a protocol string; URL selectors return "http", query selectors "query" etc. Refer to the class reference section for details on selectors. Order If more than one interceptor is associated with the same ConfigType and Protocol the order attribute decides in which order the interceptors will be invoked by the configuration system. Depending on the InterceptorType, interceptors are either invoked until the first interceptor returns ("Reader" type) or chained ("Transform" - if protocol doesn't change, "Reader", "Merger" types). InterceptorClass Indicates the interceptor to invoke. InterceptorType Indicates the kind of interceptor. Valid types are: "Merger": merges two configuration collections into one. Typically used with hierarchical configuration files. "Reader": retrieves a new configuration collection. "Transform": modifies the selector (sometimes even the configtype), but doesn't return any configuration information. "Validate": validates and potentially modifies an already retrieved configuration collection. In the above example, three interceptors are selected for each collection: Web Server Hierarchy interceptor, for protocol "http": computes the list of configuration files that correspond to a URL. List Merge interceptor, for protocol "list" (the output of a hierarchy interceptor): merges two configuration collection, preserving primary key identity and optionally (if column 0 is called "Directive" and of type int32) providing add/remove/clear/final directive semantics. The config system invokes the List Merge interceptor on pairs of parent collection and child configuration file. Native Catalog Interceptor, for protocol "query": the native config system acts as the XML storage interceptor (while there is no managed code XML interceptors) , since the native config system behavior defaults to XML storage for most databases. Refer to the reference section for information on the interceptor interfaces. Writing a custom configuration object By default, the configuration system provides two generic classes (BaseConfigItem and BaseConfigCollection) to access configuration information. This generic data representation is desirable for most administrative (generic) consumers. Strongly typed accessor properties can be defined to provide added convenience for developers that want to access a specific type of configuration information in an early bound fashion. They can also be used to add custom methods to configuration classes. These classes can be easily implemented by deriving from the BaseConfigItem and BaseConfigCollection classes and declaring their names in the schema for the ConfigType (ItemClass, CollectionClass attributes). It is also possible to provide completely independent implementations of configuration accessor classes. One reasons for doing so is the need to change the internal data representation from a collection/item basis to a more optimized structure for custom methods or for the typical access pattern of a consumer. The configuration system allows the author of a ConfigType to provide custom implementations of one or both of the generated configuration classes, or even to entirely replace the configuration classes and disabling the automatic generation of any configuration classes. Extending the Base Configuration classes Example 6c: Adding a custom method to "Shape" <?xml version ="1.0"?> <MetaData xmlns="x-schema:CatMeta.xms"> <Database           InternalName="URTGLOBAL">    <Collection ConfigType="Shapes" InternalName="SHAPES"               SchemaGeneratorFlags="EMITXMLSCHEMA NOTSCOPEDBYTABLENAME"               ItemClass="Shape"                >   </Collection> </Database> </MetaData> The author of the configuration information can now define his/her own class for Shape items: public class Shape : System.Configuration.BaseConfigItem   public int Area {     get {       return (int) this[ SizeX ]* (int) this[ SizeY     }   public float Ratio {     get {       return (int) this[ SizeX ]/ (int) this[ SizeY     }   public Bool IsLargerThan (Shape x) {     return (x.Area > Area); ItemClass This collection attribute indicates the accessor class that the configuration system should return for this ConfigType. The class must implement the IConfigItem interface. Replacing the configuration classes The author of the configuration group can choose to implement his or her own configuration classes without using the automatically generated configuration classes. Example 6c: Changing the data representation of "Shape" In our fictitious example it turns out that consumers are using the Area and Ratio much more frequently than the SizeX and SizeY properties. The configuration item should cache these values once they are computed, and since it can derive the SizeX/SizeY from Area/Ratio with sufficient precision, it should not store SizeX/SizeY at all to reduce memory overhead: The author of the configuration information can define his/her own class for Shape items. In order to be able to continue to use the generic interceptors and to be accessible to generic configuration consumers, the new item class must implement the IConfigItem interface. The COM+ 2.0 SDK contains a sample illustrating this. Writing a custom merge interceptor If the existing merge interceptors (Property Override, List Merge, List Append/Prepend) do not cover the desired inheritance semantics for a configuration collection, a custom merge interceptor can be written and   HYPERLINK  \l "_Collection_Behavior:_Selecting"  added to the behavior declaration  of the collection. A merge interceptor is added to the behavior definition of a collection by indicating InterceptorType="Merger". A merge interceptor must implement the IConfigMerger interface. The Merge method typically: Clones the parent config collection  Modifies the cloned parent collection by merging in the items from the source collections. Returns the cloned collection. If the parent collection is to be inherited without changes, the merge interceptor can return the original collection. Writing a custom validation interceptor If additional validation for a collection is required, for example the two properties are interdependent and the value of one property governs the set of permissible values of the other property, this validation is preferably implemented in the form of a validation interceptor. This ensures that both application code reading at runtime and any administrative scripts or UI use the same validation logic. Validation interceptors must implement the IConfigReader interface. The Read method for a validation interceptor typically reads the configuration collection passed to it through the currentObject parameter and performs the validations. If any validation fails, the validation interceptor can either fail the operation by throwing an exception, or it can correct the error and modify the collection and individual items. A validation interceptor is added to the behavior definition of a collection by indicating InterceptorType="Validater". Writing a custom store interceptor If a new store needs to be made accessible through the configuration system, a store interceptor must be written. Store interceptors must implement the IConfigReader interface (refer to the   HYPERLINK "http://appcenter/config/specs/urt1/urt configuration system architecture.doc"  Configuration System Architecture specification  for the definition of the interface). Store interceptors must create configuration collections and items. They typically call the configuration system (ConfigManager.GetEmptyConfigCollection and ConfigManager.GetEmptyConfigItem methods) in order to create instances of the correct collection and item classes for the requested ConfigType. The configuration system currently provides the following store interceptors: System.Config.NativeCatalogInterceptorRO: Read-only interceptor that invokes the native configuration system. A store interceptor is added to the behavior definition of a group by indicating InterceptorType="Reader" and/or InterceptorType="Writer". Writing a custom hierarchy interceptor A hierarchy interceptor receives a selector object (typically a host specific selector), and turns this selector into a selector that encapsulates the list of file from which to generate a merged view. This list selector represents the configuration file hierarchy. The configuration system processes the list selector and inductively invokes the appropriate merge interceptor for pairs of the files in this list selector. Accessing Configuration information from native code The configuration system does not currently offer publicly accessible, high-performance (in-process) APIs for native code consumers. However, a WMI provider exists that ties the COM+ 2.0 configuration system into the Microsoft WMI infrastructure. WMI Provider: COMPlus20 namespace The WMI Provider is a class provider, which means that by just defining the configuration schema, the provider automatically generates the necessary WMI classes and instances. Currently these classes are not related to any other WMI/CIM classes. COM+ 2.0 configuration system information is exposed into the root\COMPlus20 namespace. Among other features, the WMI infrastructure offers Command line scripting against COM+ 2.0 configuration information. Programmatic remote administration of COM+ 2.0 configuration information. Queries across configuration collections (currently not supported by the configuration system itself). Queries across other WMI classes and COM+ 2.0 configuration information. Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History May 25, 2000 Rev 0.1 (MarkusH): Sections 4 and 5 are not finished yet! Rev 0.2: Done. Pending review. July 10, 2000 Rev 0.3: (MarkusH): Fixed typos in samples.  It is possible for a schema definer to indicate that the containing element ( <CodeGroup> ) should be omitted. This reduces the amount of text, but allows the individual items ( <CodeBaseHints> ) to be spread across the XML file.  Advanced hosts may even choose to not define their root to be in the file system at all, by defining their own selector and interceptor mapping.  Not all hosts may have the concept of a  current user . For example the web server host does probably not need to support per-user defaults, but rather per-site defaults.  Note that the   method can return both singletons and collections of items, thus providing a single, generic API to read all configuration information.  When reading directly from an individual configuration file (i.e. Get( assemblies file://c:\foo.cfg )), directives are not applied (unless explicitly modified by the config schema author) and the caller can obtain all entries, including the directives. This is useful for administrative tools that need to modify the content of a configuration file.  The elements of the list selector are actually in turn selectors, which typically are file selectors, but can also be arbitrary selectors. Page   PAGE   NUMPAGES  COM+ 2.0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\config brownbag.ppt ===
&File written by Adobe Photoshop Adobe DTsEF7Gc(UVW u*9:HIJXYZghijvwxyz T6Ed' UeuV7 (GWf8v 9IYiy *:JZjz zHe;" oE?w| \o3\1 TEPI,x M"sKF Icgc# Or(+q) 8R $ [ 5,v}*/nTX}> z0[W6 6{U)V3 _n,-< gB;fT -=cBK iS;$W[_G ;qbMH Qm<mD sW-M$ HZL^6 Goh`]! Om4yn 3/OIEM Dz7qj en?I3x UPIaB v;'CW 0FGJ? &O_@^  t]7M OHt^~ O-M]eUF &XZ$( .Ujz8 GV/gn q2XA[ hnLF^ #(#S4 `)08m +QVE> 8=(XTe ^Di4V 5{Wuvg` e=]T1 |]9*> ~d.Wj >KC?n [svc#n %2EOKE ~|?gK" n`KfG /2Nmv lm5nSs gKYI3 SmYvGw TbW4s `jd,P D4.cu 9bOV! lov6^ ~9K=>g 72OKR ]^Gtn* 7K0bq yDWc' %UE+R Y|l9N {BI=( #ei%S :AuQ<$ ^0eZ# uV>Jj <&lnK J^I<EH Hip[Ko M>IXj 7P<3$ $rG5* E4:O}(N 7^7go  zvw6p TTSQR kD^s&5 \]\Y[ i>Nlm _?W5~G I-njW ]}2Zi s'Lw> [M%F=2) I#3BI ,=FgNq M\i"f ,gzS# QB-(:@ww Q;%6K- smmwt U_@LMy"FU QR*2? du~/ks iGU<=1 KVfi1 #%NI$f y~]-{ jUa)# ih+_  QdTj= 3o;R)5k ,fCIY ,\PNJ VCWII *chj)j pxuG? NI+_B:+ EWGVGGP <sC*4r EduWR wiscq- MW+), YlEEL GA40C *<e5, |mRzfH# Q_[#m_ 3Y.3d /dU[( 7414nJ a3hJv *~LOG bv&v\N2L =9g,h F;+EEQ Configuration System Markus Horstmann Lead Program Manager The Problem Space Fragmented application model Web apps, COM apps etc Fragile integration due to duplication of data Unspecific consistency rules No single point of admin (Ex.: IIS5/COM+) Multiple management APIs exposed to customers Duplication of effort between teams Stores, logic, APIs, tools The Problem Space Goals for Configuration Zero-admin for the end-user (wherever possible) Zero-install: just browse to the app Simplicity for the (server) administrator Small number of complementary concepts Text based configuration files, notepad editable  Zero registration, "XCOPY" deployment Config Goals (2) Config Goals (3) Uniform config model across URT features Avoid fragmentation of the Win32 platform! Same concepts, same text format, same config API etc. Isolate core system routines from specific stores and transformation logic Avoid redundancy: UI, config interface, system Configuration: the vision Store configuration information with the app XCOPY deployment, zero impact install etc. Preferred store: XML files Even machine-level config is stored in XML files Uniform access to config data Easy to include data from other stores Assemblies, secure store, registry, metabase etc. Easy to migrate to other stores if necessary Easy to expose info to WMI etc. Move merge/validation logic into the config system UI needs to show validated/merged config Enables Persisted Caching after validation Configuration: the solution Declare collection and property: schema  Rich schema specified in XML data Generate: XML schema, Accessor classes, CompLib schema, C++ Header files etc. Declare semantics of the collection: wiring Lists set of classes that retrieve info Storage, Hierarchy, Merge, Validation etc. Retrieve data using  Flexible queries (Admin, WMI etc.) Strongly typed, high-performance accessor classes (runtimes). What happens under the covers? Schema compiler generates: Binary encoding of schema in catalog.dll XML schema: catalog.xms C++ header files COM+ 2.0 accessor classes CompLib engine schema How is the config data read? Custom item/collection classes Changing collection behavior Can define which interceptors get invoked Declare interceptors for ConfigType/Protocol Defined in XML schema file: <Behavior> Example: Hierarchy of config files Machine.cfg for site definitions Config.cfg in application directories Merge config files along the URL hierarchy! Example: Hierarchy Example: Hierarchy Step 1: Turn URL into list of file paths http://ms.com/401k  => list:   file://%windir%\complus\config\machine.cfg;   file://c:\inetpub\wwwroot\config.cfg;   file://c:\inetpub\wwwroot\401k\config.cfg Hierarchy Interceptor: transforms selector Step 2: Read source configs into config objects Using standard XML Storage interceptor Step 3: Merge config object from parent to child Using Merge Interceptor Optimization: parent config cached, only read/merge new source Merge Interceptors Standard Merge Interceptors Status: Native configuration system Shipping in URT December release (M10) Persistent caching / cookdown / consistent view XML-based schema declaration (MS only) Pluggable interceptors (MS only) Shared config files with XSP Used by Fusion, Ducttape, WOM Prototype for Lightning security policy working Adding in Beta 1: Change notification / snapshots for Ducttape Status: Managed configuration system Specs on http://appcenter/config/specs Extensible schema, config objects, interceptors In-memory caching Generated accessor classes Initial drops on 11/15, CC 2/23 XSP, WebServer, Lightning likely to switch over for Beta 1/M11 Click to edit Master title style Click to edit Master text styles Microsoft Confidential PowerPoint Presentation Markus Horstmann C:\Documents and Settings\MarkusH\Desktop\teammeet.ppt Markus Horstmann Microsoft PowerPoint Markus Horstmann On-screen Show Microsoft Internal Times New Roman Tahoma Symbol Courier New teammeet Configuration System The Problem Space The Problem Space Goals fop Configuration System Markus Horstmann Lead Program Manager The Problem Space Fragmented application model Web apps, COM apps etc Fragile integration due to duplication of data Unspecific consistency rules No single point of admin (Ex.: IIS5/COM+) Multiple management APIs exposed to customers Duplication of effort between teams Stores, logic, APIs, tools The Problem Space Goals for Configuration Zero-admin for the end-user (wherever possible) Zero-install: just browse to the app Simplicity for the (server) administrator Small number of complementary concepts Text based configuration files, notepad editable  Zero registration, "XCOPY" deployment Config Goals (2) Config Goals (3) Uniform config model across URT features Avoid fragmentation of the Win32 platform! Same concepts, same text format, same config API etc. Isolate core system routines from specific stores and transformation logic Avoid redundancy: UI, config interface, system Configuration: the vision Store configuration information with the app XCOPY deployment, zero impact install etc. Preferred store: XML files Even machine-level config is stored in XML files Uniform access to config data Easy to include data from other stores Assemblies, secure store, registry, metabase etc. Easy to migrate to other stores if necessary Easy to expose info to WMI etc. Move merge/validation logic into the config system UI needs to show validated/merged config Enables Persisted Caching after validation Configuration: the solution Declare collection and property: schema  Rich schema specified in XML data Generate: XML schema, Accessor classes, CompLib schema, C++ Header files etc. Declare semantics of the collection: wiring Lists set of classes that retrieve info Storage, Hierarchy, Merge, Validation etc. Retrieve data using  Flexible queries (Admin, WMI etc.) Strongly typed, high-performance accessor classes (runtimes). Configuration System Markus Horstmann Lead Program Manager The Problem Space Fragmented application model Web apps, COM apps etc Fragile integration due to duplication of data Unspecific consistency rules No single point of admin (Ex.: IIS5/COM+) Multiple management APIs exposed to customers Duplication of effort between teams Stores, logic, APIs, tools The Problem Space Goals for Configuration Zero-admin for the end-user (wherever possible) Zero-install: just browse to the app Simplicity for the (server) administrator Small number of complementary concepts Text based configuration files, notepad editable  Zero registration, "XCOPY" deployment Config Goals (2) Config Goals (3) Uniform config model across URT features Avoid fragmentation of the Win32 platform! Same concepts, same text format, same config API etc. Isolate core system routines from specific stores and transformation logic Avoid redundancy: UI, config interface, system Configuration: the vision Store configuration information with the app XCOPY deployment, zero impact install etc. Preferred store: XML files Even machine-level config is stored in XML files Uniform access to config data Easy to include data from other stores Assemblies, secure store, registry, metabase etc. Easy to migrate to other stores if necessary Easy to expose info to WMI etc. Move merge/validation logic into the config system UI needs to show validated/merged config Enables Persisted Caching after validation Configuration: the solution Declare collection and property: schema  Rich schema specified in XML data Generate: XML schema, Accessor classes, CompLib schema, C++ Header files etc. Declare semantics of the collection: wiring Lists set of classes that retrieve info Storage, Hierarchy, Merge, Validation etc. Retrieve data using  Flexible queries (Admin, WMI etc.) Strongly typed, high-performance accessor classes (runtimes). What happens under the covers? Schema compiler generates: Binary encoding of schema in catalog.dll XML schema: catalog.xms C++ header files COM+ 2.0 accessor classes CompLib engine schema How is the config data read? Custom item/collection classes Changing collection behavior Can define which interceptors get invoked Declare interceptors for ConfigType/Protocol Defined in XML schema file: <Behavior> Example: Hierarchy of config files Machine.cfg for site definitions Config.cfg in application directories Merge config files along the URL hierarchy! Example: Hierarchy Example: Hierarchy Step 1: Turn URL into list of file paths http://ms.com/401k  => list:   file://%windir%\complus\config\machine.cfg;   file://c:\inetpub\wwwroot\config.cfg;   file://c:\inetpub\wwwroot\401k\config.cfg Hierarchy Interceptor: transforms selector Step 2: Read source configs into config objects Using standard XML Storage interceptor Step 3: Merge config object from parent to child Using Merge Interceptor Optimization: parent config cached, only read/merge new source Merge Interceptors Standard Merge Interceptors Status: Native configuration system Shipping in URT December release (M10) Persistent caching / cookdown / consistent view XML-based schema declaration (MS only) Pluggable interceptors (MS only) Shared config files with XSP Used by Fusion, Ducttape, WOM Prototype for Lightning security policy working Adding in Beta 1: Change notification / snapshots for Ducttape Drop/Install instructions: http://appcenter/config/specs/urt1/using urt config.doc  Status: Managed configuration system Specs on http://appcenter/config/specs Extensible schema, config objects, interceptors In-memory caching Generated accessor classes Initial drops on 11/15, CC 2/23 XSP, WebServer, Lightning likely to switch over for Beta 1/M11 On-screen Show Microsoft Internal Times New Roman Tahoma Symbol Courier New teammeet Configuration System The Problem Space The Problem Space Goals for Configuration Config Goals (2) Config Goals (3) Configuration: the vision Configuration: the solution Configuration: the user s view The reader s view The config developer s view What happens under the covers? How is the config data read? Custom item/collection classes Changing collection behavior Example: Hierarchy Example: Hierarchy Merge Interceptors Standard Merge Interceptors Status: Native configuration system Status: Managed configuration system Fonts Used Design Template Slide Titles _PID_HLINKS What happens under the covers? Schema compiler generates: Binary encoding of schema in catalog.dll XML schema: catalog.xms C++ header files COM+ 2.0 accessor classes CompLib engine schema How is the config data read? Custom item/collection classes Changing collection behavior Can define which interceptors get invoked Declare interceptors for ConfigType/Protocol Defined in XML schema file: <Behavior> Example: Hierarchy of config files Machine.cfg for site definitions Config.cfg in application directories Merge config files along the URL hierarchy! Example: Hierarchy Example: Hierarchy Step 1: Turn URL into list of file paths http://ms.com/401k  => list:   file://%windir%\complus\config\machine.cfg;   file://c:\inetpub\wwwroot\config.cfg;   file://c:\inetpub\wwwroot\401k\config.cfg Hierarchy Interceptor: transforms selector Step 2: Read source configs into config objects Using standard XML Storage interceptor Step 3: Merge config object from parent to child Using Merge Interceptor Optimization: parent config cached, only read/merge new source Merge Interceptors Standard Merge Interceptors Status: Native configuration system Shipping in URT December release (M10) Persistent caching / cookdown / consistent view XML-based schema declaration (MS only) Pluggable interceptors (MS only) Shared config files with XSP Used by Fusion, Ducttape, WOM Prototype for Lightning security policy working Adding in Beta 1: Change notification / snapshots for Ducttape Drop/Install instructions: http://appcenter/config/specs/urt1/using urt config.doc  Status: Managed configuration system Specs on http://appcenter/config/specs Extensible schema, config objects, interceptors In-memory caching Generated accessor classes Initial drops on 11/15, CC 2/23 XSP, WebServer, Lightning likely to switch over for Beta 1/M11
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\configapiresearch.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Title _PID_GUID _PID_HLINKSEmily B. Kruglick Normal.dot Emily B. Kruglick Microsoft Word 8.0hN1pN $.' ",# (7),01444 '9=82<.342 !22222222222222222222222222222222222222222222222222 %Hrst "2Qaq DDS@DD e=}3ji&d )[+r2 +k-5. U5}-~ pYUOZL !q_qr DD@DD E773_ M-+*f :1Q'.yw< em++) Wq\,p /W!sm ==QHYU5 JK-%= ,QvvjWK6w V-}}] -4mk<^7 TV<:yK iOMj5Ni b" "" I3F6/ u'(#1 okG(o9; L<3N) IC50n [[[P( $r\+jj :wHLlq W5-TD d1>Jo@ 8s\0A E],sH# >iV[t !e%+9 (uU4m ]O(,  >-Z-6 iFY,/ N\I>' PG,zSN 7-1OMQ 9nn/kK tlp=Akp MUEmL 8>9byk v\oMQ%%Ls RNIA, g~ooUProject 42 Configuration API Research Document (Note until the App Server or Project 42 logo is available, the COM logo is being used as a place holder) June 28, 1999, Draft Rev 1.1 Emily B. Kruglick  TOC \o "2-3" \t "Heading 1,1"  Purpose of Document  PAGEREF _Toc455206801 \h  Summary of general review  PAGEREF _Toc455206802 \h  WMI Review  PAGEREF _Toc455206803 \h  WMI Benefits:  PAGEREF _Toc455206804 \h  3.1.1 Standard Configuration Administration API  PAGEREF _Toc455206805 \h  3.1.2 Extending AS configuration objects  PAGEREF _Toc455206806 \h  3.1.3 AS configuration objects extending other objects  PAGEREF _Toc455206807 \h  3.1.4 Heterogeneous querying of different objects.  PAGEREF _Toc455206808 \h  3.1.5 Common data model between Events/Monitoring and Configuration  PAGEREF _Toc455206809 \h  WMI Technical issues to be addressed:  PAGEREF _Toc455206810 \h  3.2.1 Managed Code  PAGEREF _Toc455206811 \h  3.2.2 Client side caching  PAGEREF _Toc455206812 \h  3.2.3 Batch updating  PAGEREF _Toc455206813 \h  3.2.4 WMI Infrastructure verse Catalog Server Infrastructure  PAGEREF _Toc455206814 \h  3.2.5 Client side logic  PAGEREF _Toc455206815 \h  WMI Concerns to be addressed:  PAGEREF _Toc455206816 \h  3.3.1 Usability / Magic Strings  PAGEREF _Toc455206817 \h  Concerns still under investigation  PAGEREF _Toc455206818 \h  3.4.1 VC versus VBA Coding  PAGEREF _Toc455206819 \h  3.4.2 Predefined Set of Queries  PAGEREF _Toc455206820 \h  3.4.3 Security  PAGEREF _Toc455206821 \h  3.4.4 Schema upgrades causing existing code to break.  PAGEREF _Toc455206822 \h  3.4.5 No isolation between providers.  PAGEREF _Toc455206823 \h  3.4.6 WMI platform versions are incompatible with each other.  PAGEREF _Toc455206824 \h  3.4.7 Performance  PAGEREF _Toc455206825 \h  Revision History  PAGEREF _Toc455206826 \h  Purpose of Document This document contains the information found during the research of different API choices available to expose Application Server s configuration functionality.  It is an effort to provide clear reasons why we have arrived at specific choices for the primary configuration API of Application Server.  The following APIs were researched or considered: Active Directory Services Interface (ADSI) OLEDB and ADO COM+ Runtime 2.0 Interface (Reflection) COM+ Services 1.0 Interface (COMAdmin) SQL Server 7.0 Interface (SQL-DMO) Windows Management Interface (WMI) New API based on the COMAdmin API In order to understand this document and the customers that this interface is going to serve, a reader should first be familiar with the  Project 42 Configuration API Requirements  Document (AppServerConfigRequirements.doc found in   HYPERLINK \\\\comvss\\cosss  \\comvss\cosss  source safe at $\Catalog42\Info. It is also important to realize that the catalog infrastructure all ready in place will be used to support this and that the API should be only a thin layer on top of it.   This discussion is also relevant to both the Application Server 1.0 release (based on the current code base of COM+ and IIS) and Application Server 2.0 release (based on the new URT code base). Summary of general review ADSI is the administration interface for directory services but not all windows management.  The ADSI team points to WMI as the owner of configuration of objects on windows systems.  Therefore ADSI was not chosen as the interface for administering the Application Server. OLEDB and ADO were also briefly considered for the configuration API.  However, they were not chosen due to the complexity of building an OLE DB provider and because the configuration API is doing special case data management and extended functionality (for instance, InstallComponent functional calls). The COM+ Runtime 2.0 Interface   Reflection was also reviewed.  However it s target audience is more of the lower level developers.  Our audience is more administrators and script programmers.  This difference drives the two requirements in different directions, and so the configuration API will not be modeled after Reflection. The COM+ Services 1.0 Interface   COMAdmin has proven to have several issues and areas of improvement where changes would simplify the customers lives.  Therefore, sticking directly with this interface would not meet the requirements for the configuration API.  This does not mean that some of the structure of the COMAdmin Interface should not carry forward.  It simply means that the COMAdmin interface can be valuable as a guiding piece for a new interface, but will not be the interface itself. The SQL Server 7.0 Interface (SQL-DMO) was discussed briefly.  The SQL Server team has a rough plan to expose it s configuration through WMI in version 8.0 (two releases away).  It is a rough plan since they have had no time to research what it really means.  Based on this feedback, further research on the SQL Server API was deemed not necessary. This leaves WMI or a New API based on the COMAdmin API to be discussed.  There are several technical reasons why the current shipping WMI will not meet the needs of the configuration API.  Those are addressed below.  There are also some concerns about the WMI interface, also listed below.  It is the current plan to begin development of the new managed code API (currently being called ASCI for Application Server Configuration Interface).  At the same time we will continue to work with the WMI team to bring their model and our model into common ground.  This means eventually we can either provide a WMI provider along side our configuration API or we can target the WMI as the main configuration interface for Application Server. WMI should explore addressing some of the functional issues noted below.  This would be of value to all WMI customers and makes eventual convergence more possible.  WMI should also explore the URT programming model and look at managed code classes as the basis for future interfaces. WMI Review WMI Benefits: Standard Configuration Administration API Users who know how to administer for instance, printers using WMI can use the same knowledge and code to administer the Application Server. Extending AS configuration objects Allows the Application Server configuration objects to become extensible by other WMI providers.  Thus a provider could add on properties or associate with for instance, the Application Server s URL objects. AS configuration objects extending other objects Allows the Application Server configuration objects to extend or associate with other provider objects.  For instance, the Application Server configuration machine object could tie to the generic machine object.  Thus providing a grouping of settings that can be performed on a machine. Heterogeneous querying of different objects. Allows WMI users to query over Application Server configuration data in conjunction with other objects configuration data. Common data model between Events/Monitoring and Configuration If we exposed the Application Server configuration objects through WMI it would provide a common data model between the configuration data and the eventing and monitoring model.  It should be noted that even if the configuration data was not exposed through WMI, Application Server could still plug into WMI for unification of monitoring systems with other MS products. WMI Technical issues to be addressed: Managed Code WMI does not currently have plans to expose itself through Managed Code.  While there is a possibility of having the WMI team provide a Managed Code wrapper above the current WMI interfaces, this may not be the optimal solution for Managed Code clients.  Since some of the WMI clients are lower level operating system components converting the WMI layer to managed code may not be the correct path for it. Application Server 2.0 UI configuration tools plan to target managed code which means that providing the administration interfaces which the UI tools use are written in managed code it will be all that easier for the UI tools.  Also providing the administration interfaces in managed code is a show of support to the URT programming model that we will be asking the world to accept and use. Client side caching Currently WMI client code brings across objects as the client asks for them.  VB clients can only enumerate through one object at a time.  This means that each object is a network round trip.  This is not acceptable for the Application Server configuration.  The application server configuration requires that a full collection of objects be able to be marshaled to the client at once. Batch updating Currently in WMI all updates are handled object by object.  The Application Server configuration requires that you be able to send back a batch (actually the whole collection) of updates at one time. WMI Infrastructure verse Catalog Server Infrastructure Currently WMI has a piece of client code that calls out to a WMI Process that either calls out to a WMI provider or loads the WMI provider in process with it.  The Catalog Server infrastructure has the configuration API running in process with the client and has the Catalog Server running in it s own process.  If these two models are used together, it will take two process jumps for every server request.  Client side logic The current Catalog Server infrastructure allows for both basic and complex property edit rules to be handled on the client side before returning that data to the server.  It also allows for edit rules to be handled on the server side.  Some form of edit rule expression must be present in WMI.  The degree to which this is done is still under investigation. WMI Concerns to be addressed: Usability / Magic Strings All generic object interfaces tend to have a number of  Magic Strings  used to request objects take on specific types.  For instance in COM+ the COMAdminCatalogCollection object can represent different Collections (two examples being, Components and Applications).  To insure usability WMI needs to provide a means for user programming to the interface to quickly identify the objects and key words or strings they will need for those objects.  WMI does have some UI tools that should full-fill this, but I have yet to see them work correctly to be able to guarantee that it makes understanding the strings the user needs to supply in code to get at data, user-friendly.    VB Statement completion. The application server configuration should take advantage of statement completion whenever possible.  Current COMAdmin code can not do this because our objects are generic and just represent the specific objects instead of being different objects.  There has been some talk of building type-libraries or specific objects over the generic objects to enable this.  How WMI will handle this issue needs to be understood. Concerns still under investigation VC versus VBA Coding How much more complex is the VC code when users code indirectly through the WMI interface?  How much more overhead is added on making method calls that may not be there if the user was coding directly to an interface created for those method calls?  Right now because of COMAdmin s use of returning IDispatch objects, COMAdmin makes the VC life harder than it should.  Application Server should not increase this issue.  (This will be settled by the sample WMI code that matches the sample ASCI code we have) Predefined Set of Queries WMI exposes views that should allow the AS configuration users to choose a specific query from a set queries and provide the keys for the query without allowing users to pass random queries.  It needs to be researched how these queries or views (most likely views) will appear to the users and how they will be implemented.  It also needs to be researched how views are discoverable to the users for usability issues. Security How the identity of the user gets to the Catalog Server, using WMI will need to be understood in order to make sure the Catalog Server security would be in tack.  There will also be other changes coming to the security model that will need to be understood and how those changes work with WMI.   Application Server will use the URT security model based on roles and capabilities.  This will provide code-access security and different security config for different instances within the data model.  IE: Application Server will want to be able to set up declarative security on a per application basis Schema upgrades causing existing code to break. Apparently it is very difficult to update the standard schema.  For instance, when SMS 2.0 was shipped, they replace the WMI on all SMS machines and replace the schema with a new version.  Therefore, if a customer had a working WMI application, it would need to be reinstalled.  It would be like when MS upgrades an O/S if they replaced the registry with a new one and all the previous registry data was lost.  We really need to understand this more.  It should not affect our data since out data will be in RegDB, but it may affect us in other ways (eventing, monitoring, registration of objects).  This needs to be drill down on with WMI. No isolation between providers.  Providers can run  in-process  with WMI, so if one badly behaving provider crashes it can take down all of WMI.  This should be researched to discover how likely this behavior will be and if the system does go down, what problems for our configuration data will be seen. WMI platform versions are incompatible with each other.  Providers may need to be different between Win95, Win98, NT 4, etc.  The AS team needs to understand this more.  It could be an issue if the AS team is going to have to do different versions for different platforms. Performance WMI performance for reading and writing data will need to be benchmarked. Revision History Change By Description 6/28/99 EmilyK Updated with comments from BillDev 6/23/99 EmilyK 1st preparation of document for release. }zl`]ZWI
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\config error reporting.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Configuration Error Reporting Specification Title _PID_HLINKSConfiguration Error Reporting Specification Omar Kouatly Normal.dot OMARKO Microsoft Word 9.0olXzU0 9JPr~E&y dUt{8 E*;|8 0r`ruTypes of events.doc ntlog.chmConfiguration Error Reporting Application Center 2000 Microsoft Confidential Author Omar Kouatly Config Feature Error Reporting Program Management Contact Omar Kouatly Development Contact Stephen Rakonza Test Contact Rajesh Mishra Docs Contact Priority Current Status Proposal Draft Last updated 7/289/8/2000 Microsoft Confidential  TOC \o \f \h \z   HYPERLINK \l "_Toc492953946"  Configuration Error Reporting  PAGEREF _Toc492953946 \h   HYPERLINK \l "_Toc492953947"  Overview  PAGEREF _Toc492953947 \h   HYPERLINK \l "_Toc492953948"  Error Reporting Goals  PAGEREF _Toc492953948 \h   HYPERLINK \l "_Toc492953949"  Error Reporting Non-Goals  PAGEREF _Toc492953949 \h   HYPERLINK \l "_Toc492953950"  Error Conditions  PAGEREF _Toc492953950 \h   HYPERLINK \l "_Toc492953951"  Configuration Text Parsing Errors  PAGEREF _Toc492953951 \h   HYPERLINK \l "_Toc492953952"  2.1.1 Invalid XML  PAGEREF _Toc492953952 \h   HYPERLINK \l "_Toc492953953"  2.1.2 Internal Configuration Error  PAGEREF _Toc492953953 \h   HYPERLINK \l "_Toc492953954"  Configuration Logical Errors  PAGEREF _Toc492953954 \h   HYPERLINK \l "_Toc492953955"  2.2.1 Ambiguous Binary Data  PAGEREF _Toc492953955 \h   HYPERLINK \l "_Toc492953956"  2.2.2 Element found does not match enumeration group list  PAGEREF _Toc492953956 \h   HYPERLINK \l "_Toc492953957"  2.2.3 Custom element found not under a parent node  PAGEREF _Toc492953957 \h   HYPERLINK \l "_Toc492953958"  2.2.4 Missing location attribute  PAGEREF _Toc492953958 \h   HYPERLINK \l "_Toc492953959"  2.2.5 Undefined Attribute found  PAGEREF _Toc492953959 \h   HYPERLINK \l "_Toc492953960"  2.2.6 Custom element expected  PAGEREF _Toc492953960 \h   HYPERLINK \l "_Toc492953961"  2.2.7 ID on Custom property does not match Well-Known property s ID.  PAGEREF _Toc492953961 \h   HYPERLINK \l "_Toc492953962"  2.2.8 Missing ID on Custom Element  PAGEREF _Toc492953962 \h   HYPERLINK \l "_Toc492953963"  2.2.9 Missing Type on Custom Property  PAGEREF _Toc492953963 \h   HYPERLINK \l "_Toc492953964"  2.2.10 Custom property ID matches Well-Known property ID  PAGEREF _Toc492953964 \h   HYPERLINK \l "_Toc492953965"  Configuration File Errors  PAGEREF _Toc492953965 \h   HYPERLINK \l "_Toc492953966"  2.3.1 Unable to open file (file is write locked)  PAGEREF _Toc492953966 \h   HYPERLINK \l "_Toc492953967"  2.3.2 Unable to open file (file is not found)  PAGEREF _Toc492953967 \h   HYPERLINK \l "_Toc492953968"  2.3.3 Unable to write file (file is read only)  PAGEREF _Toc492953968 \h   HYPERLINK \l "_Toc492953969"  2.3.4 Unable to write file (file is write locked by another process)  PAGEREF _Toc492953969 \h   HYPERLINK \l "_Toc492953970"  Error Processing  PAGEREF _Toc492953970 \h   HYPERLINK \l "_Toc492953971"  Error output locations  PAGEREF _Toc492953971 \h   HYPERLINK \l "_Toc492953972"  NT Event Log  PAGEREF _Toc492953972 \h   HYPERLINK \l "_Toc492953973"  Text base error log  PAGEREF _Toc492953973 \h   HYPERLINK \l "_Toc492953974"  4.2.1 Errors writing text based log  PAGEREF _Toc492953974 \h   HYPERLINK \l "_Toc492953975"  WMI Events  PAGEREF _Toc492953975 \h   HYPERLINK \l "_Toc492953976"  Logging and error messages  PAGEREF _Toc492953976 \h   HYPERLINK \l "_Toc492953977"  Use unique and consistent identifiers  PAGEREF _Toc492953977 \h   HYPERLINK \l "_Toc492953978"  Benefits  PAGEREF _Toc492953978 \h   HYPERLINK \l "_Toc492953979"  How to implement  PAGEREF _Toc492953979 \h   HYPERLINK \l "_Toc492953980"  Include a URL to PSS information in every event  PAGEREF _Toc492953980 \h   HYPERLINK \l "_Toc492953981"  Benefits  PAGEREF _Toc492953981 \h   HYPERLINK \l "_Toc492953982"  How to implement  PAGEREF _Toc492953982 \h   HYPERLINK \l "_Toc492953983"  Meet error message guidelines available on http://uitext  PAGEREF _Toc492953983 \h   HYPERLINK \l "_Toc492953984"  How to implement  PAGEREF _Toc492953984 \h   HYPERLINK \l "_Toc492953985"  Error Handling  PAGEREF _Toc492953985 \h   HYPERLINK \l "_Toc492953986"  Mechanism  PAGEREF _Toc492953986 \h   HYPERLINK \l "_Toc492953987"  5.2 DetailedError Column Descriptions  PAGEREF _Toc492953987 \h   HYPERLINK \l "_Toc492953988"  Persistence  PAGEREF _Toc492953988 \h   HYPERLINK \l "_Toc492953989"  Application specific issues  PAGEREF _Toc492953989 \h   HYPERLINK \l "_Toc492953990"  IIS Configuration  PAGEREF _Toc492953990 \h   HYPERLINK \l "_Toc492953991"  6.1.1 Location and size of Text based error log  PAGEREF _Toc492953991 \h   HYPERLINK \l "_Toc492953992"  6.1.2 Critical read errors  PAGEREF _Toc492953992 \h   HYPERLINK \l "_Toc492953993"  6.1.3 Critical write errors  PAGEREF _Toc492953993 \h   HYPERLINK \l "_Toc492953994"  6.1.4 Critical write errors (can t write backup)  PAGEREF _Toc492953994 \h   HYPERLINK \l "_Toc492953995"  Change History  PAGEREF _Toc492953995 \h  Overview The configuration system provides a highly flexible mechanism for configuration support via a text based configuration store.  While this is a highly desirable feature for applications for which  headless  operation is critical, it does present new challenges.  In particular, because users can enter text free-form into the configuration file a wide variety of errors need to be considered to insure that users understand the error and can identify its source and the system can proceed as best it can.  This document describes configuration system error reporting requirements. Error Reporting Goals Identification: Identify where the offending text is If possible, describe what steps need to be taken to correct the error Pass detailed errors back to the caller All error strings will begin with  Line %d1, Char %d2:  where d1 is the # of lines into the configuration file with the error and d2 is the # of characters into the line at question. System actions: Continue loading configuration and collect list of detailed errors until a critical error is encountered Report back to caller that an error occurred and whether it s possible to continue or not (critical == cannot continue, non-critical == processing can continue) Error Reporting Non-Goals Recovery from catastrophic errors Error Conditions Configuration Text Parsing Errors Invalid XML When invalid XML syntax is encountered, processing cannot continue.  Send details of what token was found and what token was expected in addition to line and char counts to caller.  A critical error is returned to the caller. Error Message: Invalid XML syntax.  Found %s expected %s XML Error: <MetaData xmlns="x-schema:CatMeta.xms"? XML Corrected: <MetaData xmlns="x-schema:CatMeta.xms"> Internal Configuration Error Either when the DOM parse succeeds but Node Factory fails or there is an internal fast cache error, we will report this as an  internal configuration error .  This is a critical error condition. Error Message: Internal error while reading configuration.  Last successfully processed node was <%s> Configuration Logical Errors Ambiguous Binary Data This happens when a property typed as BINARY_METADATA has an odd number of characters (i.e.. SomeSecureProperty="DB6").  This value cannot be represented as a single type; but it is ambiguous to treat it as two bytes: should it be "0DB6" or "DB60".   Because this is a property in error processing can continue. A non-critical error is returned to the caller. Error Message: Processing of the %s property is ambiguous, it will be skipped.  An odd number of characters were specified for a binary data value. XML Error: <MetaData xmlns="x-schema:CatMeta.xms"? XML Corrected: <MetaData xmlns="x-schema:CatMeta.xms"> Element found does not match enumeration group list An invalid keytype element is specified.  This fact should be recorded and a non-critical error returned to the caller.   When listing legal values, include up to 80 chars and append   if there is data beyond 80 characters. Error Message: Element found (%s) does NOT match the defined list of legal values.  Legal values include: %s Custom element found not under a parent node Custom elements MUST appear beneath the parent keytype element.  This is required because otherwise we won't have a Location filled in. Return non-critical error to caller. Error Message: Custom  elements must be expressed in XML with a parent node." Missing location attribute The only attribute that is REQUIRED on a keytype element, is the location.  Without it we can't create legal property rows.  This is a non-critical error. Error Message: "No Location attribute found on node %s Undefined Attribute found Attributes must be found in the name table.  We will ignore undefined attributes, but will record the presence of an undefined attribute and return a non-critical error to the caller.  This may be common if someone is updating the schema but the schema doesn't get propagated to the Metabase XML interceptor.   Error Message: "Ignoring undefined attribute (%s) Custom element expected The only element allowed to follow a keytype element is a custom element.  When a non-custom element is found following a keytype element we record this fact and ignore the unknown element.  Return a non-critical error to the caller. Error Message: Only  Custom  elements are allowed as a child at this location.  %s will be ignored. ID on Custom property does not match Well-Known property s ID. It is legal to specify an ID on a Custom property.  It is even legal to specify a Well-Known property's ID when listed as a Custom property.  But it is not OK to specify an ID that doesn't match the Well-Known property's ID.  Log it the details of the error and return a non-critical error to the caller. Error Message: This  Custom  property has a mismatching ID and Name.  Ignoring this element Missing ID on Custom Element This happens when a Custom property is specified, the name doesn't match a Well-Known name, and an ID is NOT specified.  Since all properties must have an ID, this property will be ignored.  Record the details of the error and return a non-critical error to the caller. Error Message: This  Custom  element requires an 'ID' attribute. Ignoring this element" Missing Type on Custom Property A Custom property that is not Well-Known must have a valid Type.  A String type will be assumed, the property will NOT be ignored.  Record details of the error and return a non-critical error to the caller. Error Message: A Custom property (%s) was found at line %d, char %d but contained no Type attribute. Defaulting to String type and continuing" Custom property ID matches Well-Known property ID If an ID is specified for a Custom property that is NOT Well-Known, and the ID matches a Well-Known property's ID we will ignore the property.  Record error details and return a non-critical error to the caller Error Message: A Custom property (%s) was found at line %d, char %d with an ID that matches a Well-Known property s ID. Ignoring the custom property." Configuration File Errors Unable to open file (file is write locked) If the system is unable to open a configuration file for reading this is a non-continuable error.  Record the details of the file and path along with corrective action needed.  Return a critical error to the caller. Error Message: The %s configuration file could not be opened for reading.  The file is write locked by the %s (user/process/resource).  Release the lock to make the file available for reading. Unable to open file (file is not found) If the system is unable to find a specified configuration file this is a non-continuable error.  Record the details of the error including the file and path along with corrective action needed.  Return a critical error to the caller. Error Message: The %s configuration file could not be found.  Restore the configuration file or correct the name of the configuration file being requested. Unable to write file (file is read only) When writing configuration settings back to the file, if the file is in a read-only state record this critical error.  Return a critical error to the caller. Error Message: Error writing to configuration file %s.  Make sure the file is write accessible. Unable to write file (file is write locked by another process) When writing configuration settings back to the file, if the file is in a read only state record this error and fail.  Include the file and path along with corrective action needed.  Return a critical error to the caller. Error Message: The %s configuration file could not be accessed for writing.  Process %s has locked the file.  Release this lock to make the file available for writing. Error Processing The caller of the underlying configuration system is responsible for testing the return value of each call to check for success or failure.  When a failure condition is detected the caller evaluates the  context  of the error and takes the appropriate action.   Upon the detection of an error condition, the caller can further interrogate the error details to determine if the error was non-critical or critical.  In addition, a count and list of detailed error information is available. For each detailed error the following information will be available to the caller: Error Description (as described above as the  error message Error Date Error Time Source Category Event Computer Binary data (this is for future exploitation as NT Event Log supports Binary data)  In addition to the above fields (which map to the NT Event Log, the following information may be provided: Error Code (HResult) OMARKO: Stephen   I need examples of each of the following: Interceptor type   Config DLL   Operation type Table Column Binary data (this is for future exploitation as NT Event Log supports Binary data)  Error output locations If the caller is an application with UI, it may be sufficient to display an error dialog box informing the user of the error interactive application.  For most server applications  All configuration log notifications are written to three locations: 1. NT Event Log; 2. Text based error log and 3. WMI. NT Event Log Justification for writing to the NT Event Log is to provide consistency for current IIS and Windows 2000 administrators and to support legacy management support tools that look in this location for system events. Events are written to the NT Application Event Log.  They include a type, date, time, source, Category, Event #, User and Computer, in addition to a description.   Type: Information, Warning, Error Source: Configuration System Category: Parsing Error, Logical Error, File Error Event: unique event number for each event Description: as defined by  error message  of the event Text base error log Justification for writing to a text based error log is to facilitate  headless  administration of servers.  Telnet and scripting clients will be able to much more easily manipulate a clear text based log.   To make the text based log easy to parse and process, text base log entries are based on XML IST formatted file.  The format for the text based log mirrors the NT event.  The location of the Text based error log is configurable.  The size of the log is also configurable. The file is Unicode.  The error file location is configurable by the caller.  It defaults to %WINNT% if not specified.  The size defaults to unlimited. OMARKO: Stephen has proposed embedding some of these properties (FilePosition, LineNumber, etc ) into the Description tag .  I ve called them out as separate tags in this spec to get additional perspectives.  There are interesting programmatic opportunities for the Caller of config to do things with info like Line# (such as open the file in error and position the cursor there). Example XML file: <ErrorLog> <Error  Date="7/25/2000" Time="11:46:33 AM"  Source="Config" Catalogy="None" Event="4269" User="N/A" Computer="stephenr3"  Description="The XML File failed to parse because the element 'NormalTableWithFlag' is used but not declared in the DTD/Schema.. Code= 0xc00ce00d FilePosition= LineNumber= LinePosition= File= file:///C:/WINNT/XSPDT/stephen.xml Table= table Interceptor= OperationType= BinaryData= 0000: 0c 00 e0 00 0e 00 00 00   .. ..... 0008: b0 12 15 c7 e0 d1 bf 01   ........ 0010: 7c 00 00 00 00 00 00 00   |....... 0018: 00 00 3c 00 04 00 8a 00   ........ 0020: 00 00 00 00 46 1f 00 80   ........ 0028: 00 00 00 00 d0 00 00 c0   ........ 0030: 84 00 00 00 00 00 00 00   ........ 0038: 00 00 00 00 00 00 00 00   ........ 0040: ff 53 4d 42 25 00 00 00   .SMB%... 0048: 00 00 00 00 00 00 00 00   ........ 0050: 00 00 00 00 00 00 00 00   ........ 0058: 00 00 00 00 00 00 00 00   ........ 0060: 10 00 00 21 00 00 00 00   ...!.... 0068: 00 00 00 00 00 e8 03 00   ........ 0070: 00 00 00 00 00 00 00 21   .......! 0078: 00 56 00 03 4d 00 52 00   .V..M.R. 0080: 78 00 53 00 6d 00 62 00   x.S.m.b. 0088: 00 00 5c 00 44 00 65 00   ..\.D.e. 0090: 76 00 69 00 63 00 65 00   v.i.c.e. 0098: 5c 00 4c 00 61 00 6e 00   \.L.a.n. 00a0: 6d 00 61 00 6e 00 44 00   m.a.n.D. 00a8: 61 00 74 00 61 00 67 00   a.t.a.g. 00b0: 72 00 61 00 6d 00 52 00   r.a.m.R. 00b8: 65 00 63 00 65 00 69 00   e.c.e.i. 00c0: 76 00 65 00 72 00 00 00   v.e.r..."/> </ErrorLog> Errors writing text based log Errors could occur when writing to the text based log.  Reasons for this would include: Write lock on the file (someone is editing the file) File marked read-only (perhaps an inadvertent attribute update after a backup) Disk full In each case we will attempt to record an error in the NT event log.  Error Message: Unable to write to error log %s.  + reason for the error (Write lock, read-only, disk full). WMI Events In the current version of the config system, WMI instrumentation is not a requirement.  However, succeeding versions will need to be instrumented to make the administration and monitoring of IIS and other systems exploiting the config system manageable by the next generation of tools that look to WMI events rather than the NT Event log for management information.  To aid in the design of wrappers that may be writing to emit events, an excerpt from the WMI cookbook is included below with regard to Error Reporting: Logging and error messages Use unique and consistent identifiers You need to ensure that the source and event identifier pairs used in your feature are unique across Microsoft products and that the IDs for specific issues do not change from version to version. Customers are often forced to update their monitoring processes and tools with every upgrade because the IDs they tracked changed. Benefits Of all the problems with events that customers complain about, the one that upsets them the most is clarity and consistency of events that are generated. A real-world example from one of our largest customers: a customer spent six months working with Microsoft PSS to tie event IDs to specific problems. The customer modified the processes and tools across the entire company to monitor for the specific event IDs. Then the customer installed an additional Microsoft product that generated duplicate IDs. And, when the customer upgraded the original feature, it had changed all the event IDs that the customer was monitoring. Situations like this decrease the overall manageability of Microsoft products as well as customer satisfaction. How to implement Read Types of Events at   HYPERLINK "\\\\ntserver\\areas\\Distributed_Management\\Cookbook\\General\\Types of events.doc"  \\ntserver\areas\Distributed_Management\Cookbook\General\Types of events.doc Ensure that the event ID ranges you choose are unique before implementing them. The source and event ID pair must be unique across Microsoft products. Complete one of the following: Use the ReportEvent API to pass events to the Windows NT event log. See the Microsoft Platform SDK. Visit   HYPERLINK "http://msdn.microsoft.com/isapi/msdnlib.idc?theURL=/library/psdk/winbase/eventlog_756c.htm"  http://msdn.microsoft.com/isapi/msdnlib.idc?theURL=/library/psdk/winbase/eventlog_756c.htm Use the NT Event Log Event consumer to pass events generated by a WMI event provider to the Windows NT event log. For information on creating a WMI event provider, see   HYPERLINK  \l "_Develop_a_WMI_1"  Develop a WMI schema and create a WMI provider or providers . For details on how to use the NT Event Log Event consumer, see   HYPERLINK "\\\\ntserver\\areas\\Distributed_Management\\Cookbook\\General\\ntlog.chm"  \\ntserver\areas\Distributed_Management\Cookbook\General\ntlog.chm Visit   HYPERLINK "http://uitext"  http://uitext . Click Guidelines>Messages and read through the section on event logs for more details. Include a URL to PSS information in every event In Whistler, you should append a URL to the current error messages in the message-dll. You should include the generic URL that points to the Online Support redirector page, but based on the parameters you pass to the event log, the URL will redirect to more specific information on the Web, such as KB articles. Benefits Customers regularly complain that Microsoft doesn t document events well enough. They often find events cryptic and say they need a translator to understand them. Customers want to understand what is wrong with their systems, and the events rarely provide information on how to resolve their problems. By linking to PSS information on the Web, you give customers access to the latest troubleshooting information. How to implement For information on how to append a URL, see Linking Event Logged Messages to the Web at   HYPERLINK "http://stweb/Initiatives/WebExtendedContent/EventLogURL.htm"  http://stweb/Initiatives/WebExtendedContent/EventLogURL.htm Meet error message guidelines available on http://uitext  In general, you should display error messages only if something has happened either that users need to act on or that has serious consequences to their work. Messages should be short, simple, clear, specific, and helpful. Often a single error message can be generated by more than one problem. Be certain that your error messages can be traced back to a specific issue. If the message can apply to several situations, you should replace the generic error message with additional, more specific messages. Avoid including more than two to three lines of instructions in error messages because users cannot remember the instructions after the message closes. If you need to provide more detail, include a Help button instead. Contact the lashdir alias to have a Help topic written for your error message. How to implement Visit   HYPERLINK "http://uitext"  http://uitext . Click Guidelines>Messages and read through the following sections: Capitalization and Punctuation  Presentation  Terminology  Event Logs Error Handling OMARKO: I m really out on a limb on this one   please let me know how we REALLY do this Mechanism To provide rich error information to the caller, configuration will support returning multiple errors.  This will be done via simple table.  Each interceptor that supports this rich error information will implement the IConfigError interface. [local] interface IConfigError HRESULT GetErrorTable([out] LPVOID* o_ppvSimpleTable); The table returned has the following meta: <DatabaseMeta InternalName="ERRORS"> <ServerWiring Interceptor="Core_DetailedErrorInterceptor"/> <Collection InternalName="DETAILEDERRORS"           PublicName="DetailedErrors" MetaFlags="INTERNAL NOLISTENING"> <Property InternalName="ErrorID" Type="UI4" MetaFlags="NOTPERSISTABLE PRIMARYKEY INSERTGENERATE"/> <Property InternalName="Description" Type="WSTR" MetaFlags="NOTNULLABLE"/> <Property InternalName="Date" Type="WSTR"/> <Property InternalName="Time" Type="WSTR"     /> <Property InternalName="Source" Type="WSTR" MetaFlags="NOTNULLABLE" Default="COM+ Config"/> <Property InternalName="Type" Type="UI4" MetaFlags="NOTNULLABLE" Default="ERROR"> <Enum InternalName="SUCCESS" Value="0"/> <Enum InternalName="ERROR" Value="1"/> <Enum InternalName="WARNING" Value="2"/> <Enum InternalName="INFORMATION" Value="4"/> <Enum InternalName="AUDIT_SUCCESS" Value="8"/> <Enum InternalName="AUDIT_FAILURE" Value="16"/> </Property> <Property InternalName="Category" Type="UI4"/> <Property InternalName="User" Type="WSTR"/> <Property InternalName="Computer" Type="WSTR"/> <Property InternalName="Data" Type="BYTES"/> <Property InternalName="Event" Type="UI4" MetaFlags="NOTNULLABLE"/> <Property InternalName="String1" Type="WSTR"/> <Property InternalName="String2" Type="WSTR"/> <Property InternalName="String3" Type="WSTR"/> <Property InternalName="String4 Type="WSTR"/> <Property InternalName="ErrorCode" Type="UI4"/> <Property InternalName="Interceptor" Type="UI4"/> <Property InternalName="InterceptorSource" Type="WSTR"/> <Property InternalName="OperationType" Type="UI4" DefaultValue="Unspecified"> <Enum InternalName="Unspecified" Value="0"/> <Enum InternalName="Populate" Value="1"/> <Enum InternalName="UpdateStore" Value="2"/> </Property> <Property InternalName="Table" Type="WSTR"/> <Property InternalName="ConfigurationSource" Type="WSTR"/> <Property InternalName="Row" Type="UI4"/> <Property InternalName="Column" Type="UI4"/> </Collection> </DatabaseMeta> Since the upper layers know more about the context in which errors happen, it is the responsibility of the caller to persist these errors to the Event Log and/or an XML file.  This is achieved by the caller getting the IST pointer to the DetailedErrors table and then calling UpdateStore. This approach gives the caller an opportunity to modify the information in an error row by calling AddRowForUpdate.  Also, the caller may choose to discard the DetailedErrors table in favor of creating their own DetailedErrors table combining context information and the lower layers DetailedErrors. 5.2 DetailedError Column Descriptions ErrorID Generated unique ID used as a PrimaryKey.  This is required to identify a row within the table.  This value is NOT persisted to disk.. Description This is the combination of the string from the MC file (denoted by the Event column) with the row data contained in all columns after the Event column. The date the error row was added to the cache.  When viewed from the NT Event Log, this is the date the entry was added to the Event Log. The time the error row was added to the cache. .  When viewed from the NT Event Log, this is the time the entry was added to the Event Log. Source This is the Source as specified in the Registry at HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Event Log\Source One of the enum values listed above. Category Any user specified numeric value. The NT user account that caused the error.  This is often  Computer The computer name where the error occurred. Any binary data the might be useful in identifying the source of the error.  This is accessible from the Event Viewer. Event The Event corresponds to the MC file s MessageID.  This is what maps the formatting string that gets reported in the Description field. String1 User defined string which gets mapped to   format specifier in the format string from the MC entry. String2 User defined string which gets mapped to   format specifier in the format string from the MC entry. String3 User defined string which gets mapped to   format specifier in the format string from the MC entry. String4 User defined string which gets mapped to   format specifier in the format string from the MC entry. ErrorCode An optional HRESULT. Interceptor Numeric Interceptor ID. InterceptorSource DLL file from which the error originated. OperationType OperationType enum (usually Populate or UpdateStore). Table Table name that caused the error. ConfigurationSource Usually the filename from which the configuration data is stored.  Can also be a string description of the store (example  Fixed Table Heap This can either refer to the Row within the cache (in the case of the error occurring on UpdateStore) or the Row within the store (as in Line number or equivilent). Column This can either refer to the Column within the cache (in the case of the error occurring on UpdateStore) or the Column within the store (as in Line position or equivilent). Each DetailedError row corresponds to an entry (Event) in the Source s MC file.  The entry in the MC file must contain format specifiers for exactly five strings.  The first four are filled with the columns: String1, String2, String3, String4.  The fifth string is a concatenation of each of the column public names (for columns following String4) followed by a colon, the column value, and a newline character. Example MC file entry: MessageId=0x10FF Severity=Error Facility=Runtime SymbolicName=IDS_COMCAT_XML_LOGIC_FAILURE Language=English The XML File contains a logical error.  Enum value   is not found in the TagMeta for Table   / Column  .  Element is as follows:%4 %5%0 Example DetailedError Row: ErrorID Description The XML File contains a logical error.  Enum value   is not found in the TagMeta for Table  MyTable  / Column  MyEnumColumn .  Element is as follows: <MyRow MyEnumColumn=  Attr1= ErrorCode: 0x8004523 Interceptor: 4 InterceptorSource: C:\winnt\xspdt\Catalog.dll OperationType: Populate Table: MyTable ConfigurationStore: C:\testfile.xml Row: 4 Column: 17 9/1/0000 12:35:06 PM Source COM+ Config ERROR (1) Category stephenr Computer STEPHENR2K (NULL) Event 0x10FF String1 String2 MyTable String3 MyEnumColumn String4 <MyRow MyEnumColumn=  Attr1= ErrorCode 0x8004523 Interceptor 4 (Core_XMLInterceptor) InterceptorSource C:\winnt\xspdt\Catalog.dll OperationType Populate (1) Table MyTable ConfigurationSource C:\testfile.xml Column Those columns in the DetailedErrors table that correspond directly to the NT Event Log will be reported to the event log as the are indicated above.  Date and Time may not match exactly since the Date and Time in the IST is generated at the time the row is added to the DetailedErrors table; but the Date and Time in the NT Event Log get generated when the event is added to the Event Log. All columns in the DetailedErrors table (except the ErrorID, I m not sure about it yet) get persisted to the Config Event Log XML file. GetDetailedErrorCount / GetDetailedError. We will extend the STError as defined in the following structure: struct STError2: public STError{ LPWSTR FileName; LPWSTR ErrorMessage; ULONG Line; ULONG Column; DWORD ExtendedErrorInfoType; LPVOID ExtendedErrorInfo; // could contain the bad data in the row STEPHEN::  How about we return an E_DETAILED_ERROR_IST, and the caller can get an IST to these errors?  This would need some thought. Persistence Because configuration system will be called by a background service, in order for the administrative UI to be able to report errors to the user it will need access to error information.  It s not appropriate to parse the eventlog for this purpose, so we will have to persist the errors in as a collection in a persisted cache. Application specific issues OMARKO: Because most of the error conditions are already covered in the previous configuration section, IIS specific configuration boils down to these top-level issues.  What am I missing? IIS Configuration Location and size of Text based error log The text based error log will be stored in the %INETSRV% directory and the file name is metabase.log.  The size of the file defaults to 1 MB max.  Critical read errors When a critical error is received while reading configuration data, the IIS configuration system will attempt to recover by reading the most current backup metabase.xml file.  IIS configuration will write an error to the event log indicating backup was used. Error Message: IIS can not read metabase.xml, defaulting to latest backed-up version.  The current metabase.xml file will be copied to the Errors directory and will be replaced with the backup. Critical write errors When a critical error is received while saving configuration data, the IIS configuration system will attempt to save to the backup directory.  IIS configuration will write an error to the event log indicating backup was used.  This will be typically due to a write locked or read only attribute on the file. Error Message: IIS can not save the current config to the metabase.xml file.  A backup of this file (%s) was saved to the backup directory.  Release write lock or read-only attribute on the metabase.xml file to permit update. Critical write errors (can t write backup) In the case the backup file cannot be written, this event must be logged.  This could happen if there is insufficient space on the hard drive or the backup directory has incorrect access permissions. Error Message: IIS can not write the backup configuration file to the backup directory (%s).  Verify space exists on this drive and that access permissions exist on the directory. Change History Changes 7/12/00 Created Omar Kouatly 7/28/00 Updated after review with StephenR Omar Kouatly 9/06/00 Improved error msg, added Stephen s reporting mech Omar Kouatly dhQBI |qleUqlNeND dhfBI dh%2If dh&2If h&2If_H h%2If_H dh(2If h(2If5 h(2If5 h(2If_H h(2If h)2IfB*
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\config schema extensibility.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Schema Extensibility Title _PID_HLINKSSchema Extensibility Omar Kouatly Normal.dot OMARKO Microsoft Word 9.0olXzU0 9JPr~E&y dUt{8 E*;|8 0r`ruSchema Extensibility Application Center 2000 Microsoft Confidential Author Omar Kouatly Config Feature Schema Extensibility Program Management Contact Omar Kouatly Development Contact Robert Craig Test Contact Rajesh Mishra Docs Contact Priority Current Status Draft Last updated 10/21/2000 Microsoft Confidential  TOC \o \f \h \z   HYPERLINK \l "_Toc496762527"  Schema Extensibility  PAGEREF _Toc496762527 \h   HYPERLINK \l "_Toc496762528"  Overview  PAGEREF _Toc496762528 \h   HYPERLINK \l "_Toc496762529"  Supported  PAGEREF _Toc496762529 \h   HYPERLINK \l "_Toc496762530"  Unsupported  PAGEREF _Toc496762530 \h   HYPERLINK \l "_Toc496762531"  File versioning  PAGEREF _Toc496762531 \h   HYPERLINK \l "_Toc496762532"  Implementation  PAGEREF _Toc496762532 \h   HYPERLINK \l "_Toc496762533"  Shipped Schema definition / location  PAGEREF _Toc496762533 \h   HYPERLINK \l "_Toc496762534"  Schema updates  PAGEREF _Toc496762534 \h   HYPERLINK \l "_Toc496762535"  Schema compilation  PAGEREF _Toc496762535 \h   HYPERLINK \l "_Toc496762536"  Reading the schema  PAGEREF _Toc496762536 \h   HYPERLINK \l "_Toc496762537"  Setup  PAGEREF _Toc496762537 \h   HYPERLINK \l "_Toc496762538"  Backup / Restore  PAGEREF _Toc496762538 \h   HYPERLINK \l "_Toc496762539"  Optimization  PAGEREF _Toc496762539 \h   HYPERLINK \l "_Toc496762540"  Change History  PAGEREF _Toc496762540 \h   HYPERLINK \l "_Toc496762541"  Rejected Topics  PAGEREF _Toc496762541 \h  Overview Schema extensibility enhances end-users abilities to customize and describe their applications classes and properties that rely on data stored in the metabase.  By extending the schema, either via ADSI, WMI or via text entry into the mbschema.xml file, end-user configuration data can be represented as well-known properties in the Metabase (metabase.xml by default). Supported  This section notes the supported extensions that can be made. Changes to schema that is part of the shipped system is not allowed, however, it is permitted to make schema extensions that include adding, modifying and deleting shipped properties as long as those shipped properties were not originally defined as being on that class in the shipped schema.  For example, the <IIsFilter > class does not define the property AccessFlags that is part of the shipped schema under the <IisWebVirtualDir> class.  A legal schema extension would be to add the AccessFlags property to the IisFilter class.  An illegal schema extension would be to remove the AccessFlags property from the <IisWebVirtualDir> node. Users can add, delete, and modify user defined classes and properties. Class and property names must be legal xml element and attribute names respectively. Property definitions may only appear in the main class: all other classes can only contain property references. ADSI will continue to read and write schema using the metabase. Unsupported Schema extensions these changes CANNOT include deleting or altering shipped schema. Schema XML will not use XSD as it is far from ready for prime time. Editing of the mbschema.xml file while IIS is running is not supported. The former "/schema" nodes in metabase.xml file is not supported and any attempts to add it by editing the file will be discarded. Non-schema data added to "/schema" in the in-memory metabase is not supported and discarded.  This could only be done via the base object APIs.  ADSI and WMI will enforce this rule.  Examples of non-schema data are <VARSHAJ/STEPHEN?>. If someone is edit-while-running a property/class defined in extended schema, and at the same time someone else deletes the property/class from the schema, that particular edit-while-running change won't be accepted and the problem will be logged (this eliminates the need to retain and difference against a version-specific schema for edit while running). File versioning The current state/version of the schema will be stored in the metabase.  A global metabase key will reflect the current mbschema.xml files date/time stamp.  Another global metabase key will reflect if the metabase is extended.  New key names: SchemaDate, a string containing a hash of the date/time of the schema file SchemaExtended, Boolean, defaults to FALSE, set to TRUE when schema extensions are detected.  This key is used to optimize out the compile step if no schema extensions exist. Implementation Shipped Schema definition / location iismeta.xml is the master copy of IIS shipped schema, checked into catalog sources. At build time, iismeta.xml schema is compiled into iiscfg.dll. IIS shipped schema can be accessed from iiscfg.dll via the IIS shipped schema database (via the schema .dll interceptor).  <STEPHEN/VARSHA   what is the name of this DLL?> Schema updates The in-memory metabase tracks whether or not any changes (usually via ADSI) have occurred to the /schema tree. During SaveAllData, if any changes were made to the in-memory /schema tree, the following happens: The /schema is written to a mbschema.xml file atomically. The schema compilation process is invoked. When complete, the newly compiled schema is read and used to finish saving metabase data. Edit while running is NOT supported on the mbschema.xml file.  Any changes made to the file while IIS is running will be ignored and possibly overwritten if schema changes occur.   Changes to the mbschema.xml file are only picked up at IIS startup. Schema compilation A mbschema.bin file exists which is a merge of the IIS shipped schema in iiscfg.dll and the schema extensions in mbschema.xml The schema compilation process works as follows: The iis shipped schema database is read from iiscfg.dll A new mbschema.bin file is created into which is dumped the IIS shipped schema. The mbschema.xml file is read, and any classes or properties not already in mbschema.bin are added A new mbschema.xml is written according to the complete schema in mbschema.bin The date-timestamp of the mbschema.xml is recorded in metabase.xml Reading the schema  The complete IIS schema can be read from mbschema.bin via the IIS extended schema database (via a schema .bin interceptor) During ReadAllData: If the mbschema.xml exists and is unchanged, we load the /schema tree from mbschema.bin. If the mbschema.xml has been changed, or doesn't exist, we invoke the schema compilation process. We use the latest compiled schema to read metabase.xml. Setup Currently setup does a full replacement of the /schema tree in the metabase.xml file by registering a DLL that which takes the contents of the globdata.cxx source file and uses it as the definition of the /schema tree. Changes need to setup: In IIS6, we will need to preserve legal schema extensions that users may have made via ADSI in IIS 5.0.  The work to identify and migrate extensions will be done by the metabase code   setup will just need to stop populating the /schema tree in the metabase.xml file. Upgrade scenario When IIS starts-up the first time, the metabase code will detect that no metabase.xml file exists. It will read the existing metabase.bin file and mark the /schema tree as changed.  On saving the metabase, the metabase.xml and mbschema.xml file will be generated.  Then the schema verification and compilation process will begin.  This will preserve the legal schema extensions present on the machine being upgraded. Clean Install scenario: If no metabase.bin or metabase.xml file exists setup will need to write a default metabase.xml file.  Upon saving the metabase for the first time, the schema verification and compilation process will detect the absence of the mbschema.xml file and automatically generate it. Backup / Restore The mbschema.xml will always be copied along with the metabase.xml on backup, restore, and history.   Metabase Backup will copy the current mbschema.xml file along with the current metabase.xml file.  Restore will restore both corresponding files. In the History directory, each metabase.xml.<major version>.<minor version> will have a corresponding mbschema.xml.<majorversion>.<minor version>.  When history files are restored, both the metabase and mbschema of matching versions must be restored. Optimization Only build and use mbschema.bin when schema extensions exist Change History Changes 9/18/00 Created Omar Kouatly 10/21/00 Incorporate feedback from Janaina Omar Kouatly 11/24/00 Update Backup/Restore Omar Kouatly Rejected Topics This section of the specification lists topics that were considered but the team has rejected.  This provides a historical record that will aid in bringing new team members up-to-date and help defend/support the teams current thinking in the spec. Topic Reason rejected
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\configuration merge & cookdown.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Configuration Merge & Cook down TitleConfiguration Merge & Cook down Markus Horstmann This document outlines how logical views of configuration are generated as the result of a merge of multiple source text files. COM+ Template.dot Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @\\red-prn-12\CORP0066 44E/1MC1 NPI632532 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 44E/1MC1  Letter \\red-prn-12\CORP0066 44E/1MC1  LetterID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  Configuration Merge & Cook down July 22, 1999 Draft Rev 0.1  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document outlines how logical views of configuration are generated as the result of a merge of multiple source text files. TOC \o "1-3" Introduction  PAGEREF _Toc457653147 \h  Container Types  PAGEREF _Toc457653148 \h  Container Type Hierarchy  PAGEREF _Toc457653149 \h  Determining Child Containers  PAGEREF _Toc457653150 \h  Example: Ducttape/XSP hierarchy  PAGEREF _Toc457653151 \h  Merging attributes across container levels  PAGEREF _Toc457653152 \h  Open Issues  PAGEREF _Toc457653153 \h  Revision History  PAGEREF _Toc457653154 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Introduction Many URT configuration scenarios require that one or more attributes of a specific entity be calculated from multiple source files with different merging semantics. Common semantics include inheritance along a hierarchy (i.e. machine -> site -> application -> directory -> file) and overlaying developer specified, immutable attributes with configuration information. This document outlines how such a merge can be implemented within the catalog framework. Refer to the Project 42 Administrative Framework specification for more information. Container Types A container is a physical store of configuration information. In the URT, most (all?) configuration information is stored in containers that are XML files. A container can store attributes for one or more logical entities.  For a given container, it is a requirement to be able to limit the entities for which attributes can be specified in the container. It is also a requirement to be able to limit the set of attributes within a specific entity that can be specified in a container. Another requirement is the ability to change the semantics of an attribute in a container.  To satisfy these requirements, we introduce the notion of a container type. A container type defines the set of entities and attributes that are allowed in a container of that type. Container Types are defined as part of the catalog schema information and are as such inherently extensible. Do we want to expose the ability to add new container types in URT1? Container Type Hierarchy A further requirement is the ability to group containers into a hierarchy. The hierarchy is often driven by the need to delegate and scope administration of attributes. For example, a machine administrator, one or more site administrators and one or more application administrator may each have permission to specify certain attributes for certain entities. Giving each of these administrators a dedicated container improves security and system robustness. We establish the container hierarchy by establishing a hierarchy of container types. Part of a container type s definition is the set of child container types that can be configured in it.  One or more container types are designated as root container types, by the fact that no other container type claims to be their parent. Like container types, container type hierarchy is defined as part of the catalog s schema information. Should we expose the ability to add/change the container type hierarchy? Determining Child Containers A container specifies the location of each of is child container types in the form of a  container search path . A container search path contains an unordered sequence of relative or absolute UNC paths, which can point to specific files, specific directories or entire directory hierarchies (wildcard, recursion/recursion depth). Should we allow full regular expressions here? Should the path be ordered? Each child container type has it s own, configurable container search path. Root container types designate a container search path as part of the container type definition. Should we allow default containers to be configured for any container type? This has been proposed to enable container templates and policy Typically (by default) every container has exactly one type. For more complex scenarios, it is possible for an administrator to configure a single, physical container to have more than one container type, by simply including it in more than one container search path. In the 8/2/99 catalog drop, containers that are to participate in the cook down process are limited to carry attributes for at most one logical entity (attributes for other entities will be ignored (= not cooked down). Example: Ducttape/XSP hierarchy Container Type Parent Containers Entities Machine Machine Application Pool Machine Application Pool Site Definition Machine Site Configuration Site Definition Application Definition Site Definition Application Application Configuration Application Definition Application Directory Application Configuration Directory File Configuration (?) Directory Exe Configuration Application Per-User Config Exe Configuration Application Merging attributes across container types Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History July 22, 1999 Rev 0.1 (MarkusH): Created. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\hierarchy & merge interceptors.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Hierarchy & Merge Interceptors Title _PID_HLINKSHierarchy & Merge Interceptors Markus Horstmann COM+ Template.dot Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @\\red-prn-12\CORP0066 USA/REDMOND/44/EAST/FLOOR1/MAIL COPY ROOM #1247 NPI632532 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 USA/REDMO Letter \\red-prn-12\CORP0066 USA/REDMO Letterc:\inetpub\wwwroot\ms\fooID="{1EA019F9-77F4-4DE2-8193-A7D00FD4A7E5}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" VersionCompatible32="393222000" CMG="1E1CEA8B1EBDBDC1BDC1BDC1BDC1" DPB="B9BB4DAE4EAE4EAE" GC="5456A0D1A06DA16DA192" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=0, 0, 0, 0, C NewMacros=88, 88, 702, 585, CThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmanntyle:  Extract all paragraphs with style:  Dim y As Style For Each y In ActiveDocument.Styles     MsgBox y  Windows(2).Activate  Selection.Paste  Windows(1).Activate Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec enUpdati 1False Dim Sou rce As S .veDocum s.Add atD&G1Fini ~= I.o d.Cle arFAstA< Each y I6n eplaceBr !@@ward TrfuHc dAZStop WholeW }` ildc` JndsLik ExecA !G4Cop ndow8s(2 .Item(O Loop Wh ile Not Attribut e VB_Nam e = "Thi sDocumen 1Normal VGlobal! Pre decla lateDeri $CustomWin16 Win32 Project- stdole MSFormsC TemplateProject Office ThisDocument< _Evaluate NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal Normal Module1b SourceG Documentj DimExtractStyle*\C\\markush2\shared\Program Files\Microsoft Office\Templates\COM+ Template.dot *\CNormalrU ThisDocument NewMacros Project Module1 C:\vs7\retail\bin\i386\VBE6.DLL C:\Program Files\Microsoft Office\Office\MSWORD9.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\vs7\retail\bin\i386\FM20.DLL MSForms C:\DOCUME~1\MarkusH\LOCALS~1\Temp\VBE\MSForms.exd C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleTextMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> DD452EE 1-E08F-1 01A-8 2608C4D0 Dvs7\ retail\b in\i386\ FM20.DLL #Microso(ft   Libra 00}#:0 A7659 06E5D-F6 03-45C6- BB29-A09 C37223EA CH7DOCUME ~1\Marku sH\LOCAL Temp\V U.exd lateD *\C\\mB* h2\share gram @Files\GdO@ffice\ s@\COM+  G{2DF8D 04C-5BFA B-BDE5 MSO97lSC RN galc ThisDoc umentGbjbjU title  Hierarchy & Merge Interceptors November 2, 1999, Draft Rev 0.5  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes how hierarchical configuration for the different URT host environments is handled in the configuration system. TOC \o "1-3" Hierarchy Interceptors  PAGEREF _Toc465264459 \h  Web Server Hierarchy  PAGEREF _Toc465264460 \h  1.1.1 Web Server Hierarchy Interceptor  PAGEREF _Toc465264461 \h  1.1.2 Implementation notes  PAGEREF _Toc465264462 \h  Shell Hierarchy  PAGEREF _Toc465264463 \h  Browser Hierarchy  PAGEREF _Toc465264464 \h  Merge Interceptors  PAGEREF _Toc465264465 \h  Generic Merge Interceptors  PAGEREF _Toc465264466 \h  2.1.1 Property Override Merge Interceptor  PAGEREF _Toc465264467 \h  2.1.2 List Append Merge Interceptor  PAGEREF _Toc465264468 \h  2.1.3 List Prepend Merge Interceptor  PAGEREF _Toc465264469 \h  2.1.4 List Merge Interceptor  PAGEREF _Toc465264470 \h  Merge Coordinator Interceptor  PAGEREF _Toc465264471 \h  Migration of XSP Config Factories  PAGEREF _Toc465264472 \h  Open Issues  PAGEREF _Toc465264473 \h  Revision History  PAGEREF _Toc465264474 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Hierarchy Interceptors Hierarchy interceptors encapsulate the knowledge about the hierarchy of configuration files for a specific host environment. They compute the physical location of configuration files and enable reuse of merge interceptors for different host environments. Hierarchy interceptors take a ConfigType and Selector as input, and transform it into a new, compound Selector. This new selector is a list of selectors whose elements represent individual configuration collections along the hierarchy, which contribute to a single configuration collection. Typically the configuration manager interprets this list selector and incrementally invokes a merge interceptor on pairs of configuration collections (see Section   REF _Ref465752259 \r \p \h  3 below  for details). The configuration manager assumes that the elements of the list are UrlUncSelectors:  class System.Config.UrlUncSelector : System.Config.Selector public UrlUncSelector(String); // syntax: urlunc:[<urlselector>;<uncselector>] public UrlUncSelector(Selector UrlInit, Selector UncInit); public Selector Url {get, set}; public Selector Unc {get, set}; The Selector.Url member indicates the logical name for a node in the hierarchy (i.e. the name by which the merged configuration information for the name can be queried). The Selector.Unc member indicates the physical location from which the raw source configuration information for the node can be retrieved. Web Server Hierarchy The web server hierarchy starts with a single root node, the machine configuration. The machine configuration (currently \complus\config\machine.cfg) defines a set of sites (among other machine wide configuration information), and their bindings into the URL namespace. Each site definition establishes a root directory for the site, in which further configuration information resides. The site root directory contains a configuration file (currently  config.cfg ). The configuration information in this configuration file is typically considered to be associated with the URL(s) of the site. Child directories of the site root directory are typically mapped into the URL namespace by appending the relative path of the child directory to its parent s URL. The configuration file can contain configuration that map an immediate child URL to a different directory in the file system; these instructions are called virtual directories (or VDIRs). Any child directory under the site root directory can contain additional configuration files ( config.cfg ), which typically establish configuration associated with the URL corresponding to the child directory. Machine (via Site root dir) => App/Dir (via subdir/VDIR=> App/Dir (via subdir/VDIR) => App/Dir =>  Example: SiteDef 1:  http://ms.com, root dir: c:\inetpub\wwwroot\ms Root app URL: http://ms.com Child app 1: http://ms.com/foo Child app 2: http://ms.com/foo/bar Child app 3: http://ms.com/zee, mapped to VDIR d:\zee SiteDef 2: http://hotmail.com, root dir: c:\inetpub\wwwroot\hotmail Root app URL: http://hotmail.com Child app 4: http://hotmail.com/foo How do we handle config info for a child node declared in a parent config file? Web Server Hierarchy Interceptor The Web Server Hierarchy Interceptor (WSH) takes a ConfigType and a URLSelector (with  http: https:  protocol prefix) and turns it into a selector (list selector) consisting of  a parent UrlSelector, for which the configuration is already known (cached), a list of child UrlUncSelectors, indicating the URL of each node and the file system path of each configuration file along the URL hierarchy.  If the incoming URL corresponds to the root of a site (i.e. is of the form  http://<servername> ), the WSH generates a list selector indicating the site definition and the site root configuration file: Examples: ConfigType =  Applications , Selector= http://ms.com list:urlunc:[http://ms.com;file://c:\complus\config\machine.cfg];      urlunc:[http://ms.com;file://c:\inetpub\wwwroot\ms\config.cfg] ConfigType =  Applications , Selector= http://hotmail.com list:urlunc:[http://hotmail.com;file://c:\complus\config\machine.cfg];      urlunc:[http://hotmail.com;file://c:\inetpub\wwwroot\hotmail] If the incoming URL is a child URL of a site (i.e. is of the form  http://<servername>/<child> ), the WSH generates a list selector indicating the first URL for which config information is already cached (or the sitedef as above if no info has been cached yet), and the locations of the child configuration files. Examples: ConfigType =  Applications , Selector= http://ms.com/foo If config for site root URL has been cached: list:urlunc:[http://ms.com;file:\\inetpub\wwwroot\ms\config.cfg];      urlunc:[http://ms.com/foo;file://c:\inetpub\wwwroot\ms\foo] If this is the first request: list:urlunc:[http://ms.com;file:\\c:\complus\config\machine.cfg];      urlunc:[http://ms.com;file://c:\inetpub\wwwroot\ms];      urlunc:[http://ms.com/foo;file://c:\inetpub\wwwroot\ms\foo] Assuming parent config has been cached for each of the subsequent requests: ConfigType =  Applications , Selector= http://ms.com/foo/bar list:urlunc:[http://ms.com/foo;  HYPERLINK "file://c:\\inetpub\\wwwroot\\ms\\foo"  file://c:\inetpub\wwwroot\ms\foo      urlunc:[http://ms.com/foo/bar;file://c:\inetpub\wwwroot\ms\foo\bar] ConfigType =  Applications , Selector= http://ms.com/zee list:urlunc:[http://ms.com;file://c:\inetpub\wwwroot\ms\zee];      urlunc:[http://ms.com/zee;file://d:\zee] ConfigType =  Applications , Selector= http://hotmail.com/foo list:urlunc:[http://hotmail.com;file://c:\inetpub\wwwroot\hotmail];      urlunc:[http://hotmail.com/foo;file://c:\inetpub\wwwroot\hotmail\foo] The WSH computes these selectors by splitting the incoming URL into parent URL and relative child URL (finding the last occurrence of the   character). If the URL can not be split, the WSH reads the site definition for the URL and obtains the site root directory: // RequestURL =  http://ms.com SiteDef=ConfigManager.Get( SiteDefs , RequestURL) ListSelector sel = new ListSelector(   UrlUncSelector(RequestURL,  file: +ConfigManager.GetMachineConfigDirectory(),    UrlUncSelector(RequestURL,  file:// +SiteDef.Path)); list:urlunc:[http://ms.com;file://c:\complus\config\machine.cfg]; //       urlunc:[http://ms.com;file://c:\inetpub\wwwroot\ms] If the URL can be split into parent URL and relative child URL, the WSH determines if the configuration cache contains the config information for the parent URL: // RequestURL =  http://ms.com/zee , ParentURL= http://ms.com , ChildURL= // RequestURL =  http://ms.com/foo , ParentURL= http://ms.com , ChildURL= ConfigManager.IsObjectCached(ConfigType, ParentURL); //  http://ms.com If no info is available, the WSH continues to split the ParentURL until either finding cached info for a URL, or hitting the site root. The WSH then determines the location of the next child node by attempting to read the VDIR definition from the parent URL. If this read fails (no VDIR info defined), it obtains the parent s file system path and appends the relative child URL. It adds the resulting path to the child config file to the list of child paths computed so far: VDir=ConfigManager.Get( VDIRs query:URL= +ParentURL+ ;Child= +ChildURL); query:URL=http://ms.com;Child=zee query:URL=http://ms.com;Child=foo if (VDir) { ChildPaths.Add(UrlUncSelector(ChildUrl, file:// +VDir.Path+ \config.cfg urlunc:[http://ms.com/zee;file://d:\zee\config.cfg] else { Application=ConfigManager.Get( Applications , ParentURL); // Application.Path=c:\inetpub\wwwroot\ms ChildPaths.Add(UrlUncSelector(ChildUrl, Application.Path+ +ChildURL+ \config.cfg urlunc:[http://ms.com.zee;file://c:\inetpub\wwwroot\ms\foo\config.cfg] It then iterates until the entire RequestURL is processed. It creates a list selector containing the the list of child paths: list:urlunc:[http://ms.com;file://c:\complus\config\machine.cfg];      urlunc:[http://ms.com;file://c:\inetpub\wwwroot\ms] list:urlunc:[http://ms.com;file://c:\inetpub\wwwroot\ms];      urlunc:[http://ms.com/zee;file://d:\zee\config.cfg] Assuming ms.com config has not been cached for http://ms.com/zee request: list:urlunc:[http://ms.com;file://c:\complus\config\machine.cfg];      urlunc:[http://ms.com;file://c:\inetpub\wwwroot\ms];      urlunc:[http://ms.com/zee;file://c:\inetpub\wwwroot\ms\zee\config.cfg] The WSH returns the list selector to the config manager.  Implementation notes This design avoids the need for recursion on the parent s URL at the cost of making the hierarchy interceptor aware of caching semantics in the config manager (IsObjectCached). The initial creation of config information for a site is triggered by the absence of cached config information for the root URL of the site (the merge coordinater passes in a NULL parent collection). Shell Hierarchy Machine -> User -> Application Browser Hierarchy Machine -> User -> Site/Docbase? Merge Interceptors Merge interceptors encapsulate the knowledge of computing a compound configuration collection based on two underlying configuration collections. They are typically used in conjunction with hierarchical configuration files to implement inheritance semantics from parent to child configuration files. Merge interceptors take two config collections and a selector as input and return a configuration collection.  Merge interceptors can be generic, or they can be optimized for a specific ConfigType. interface System.Config.IConfigMergeInterceptor {   Object Merge(Object parent,  Object Sourcechild,  String ConfigType,  Selector TargetSel,  // Selector of the config object that is to be // computed and returned from this method Selector SourceChildSel, // Selector used to retrieve the sourcechild config object  // not typically used by the interceptor. LevelOfService LoS); The resulting ( merged ) collection often contains additional properties as compared to the  sourceraw  collection retrieved from the config file. A typical property is a URL column that carries the URL of the node to which the config item applies. Another typical property is a URL column indicating the node in which the item was actually defined (= inherited from) ( URLSource  property). Other properties may be obtained by special rules (i.e. Ducttape AppPoolId from AppPoolOverride collection in machine.cfg). Generic merge interceptors (like the ones described below) do not need to compute these properties, but must be prepared to handle different ConfigTypes for parent and child. They assume that parent and returned config objects have the same ConfigType and that their ConfigType is the same type as the ConfigType parameter passed into the Merge method. They also assume that the  merged  config type contains all properties of the  sourceraw  config, in the same order (with the exception of well-known properties like the  Directive  property, which is assumed to be at property index 0). They further assume that any additional properties in the  merged  config type precede the properties from the  sourceraw  config type. Would it be easier to assume that the   properties start at column index 0 and the additional/computed properties follow at the end? Example: Ducttape   and  APPS_cfg  config types This example uses native catalog schema syntax (table=collection, column=property). <TableMeta InternalName="APPS">   <ColumnMeta InternalName="SrcCFGFile" Type="WSTR"     />   <ColumnMeta InternalName="AppURL" Type="WSTR"     MetaFlags="PRIMARYKEY" />   <ColumnMeta InternalName="SiteID" Type="UI4"      MetaFlags="PRIMARYKEY" />   <ColumnMeta InternalName="AppPoolID" Type="WSTR"     />   <ColumnMeta  InternalName="AppEnabled" Type="UI4"      /> </TableMeta> <TableMeta InternalName=" APPS_CFG">   <ColumnMeta  InternalName="AppEnabled" Type="UI4"      /> </TableMeta> Additional properties can be computed by a specialized merge interceptor, but more typically another interceptor is run later in the  Validate  stage and modifies the collection returned by a generic merge interceptor. Specifically, there may be generic  Validate  interceptors that set the URL property of the node. Do we need those for in-memory cached collections or just for persisted caches? How do we make file  coordinates  (XML line number/position) available to merge interceptors and validating interceptors? How do we provide merged vs. unmerged vs. source views of the data? LoS? What about the potentially different schema? Should this be a  native  concept to the config manager? Generic Merge Interceptors The following generic merge interceptors are available for use with newly defined collections. The definer of a new collection simply chooses an appropriate interceptor chain (or chains) that contains a merge interceptor that implements the desired merge semantics for the new collection. Property Override Merge Interceptor class System.Config.Merge.PropertyOverrideMerge : IConfigMergeInterceptor {} The Property Override Merge Interceptor (POM) implements  last writer wins  inheritance semantics (similar to the IIS5 meta-base inheritance semantics). A non-null property in a child config collection simply replaces a property in the parent collection. We may want to add an optional  Final  semantics later Any non-null properties in items in a child collection replace the corresponding property (same name) in the parentcollection. Items in the parent collection are matched by primary key of the child collection. List Append Merge Interceptor class System.Config.Merge.ListAppendMerge : IConfigMergeInterceptor {}  The List Append Interceptor (LAM) simply clones the parent config collection and appends the items in the child collection to the end of the first collection.  List Prepend Merge Interceptor class System.Config.Merge.ListPrependMerge : IConfigMergeInterceptor {}  The List Prepend Interceptor (LPM) is a variation of the List Append Interceptor in that it inserts the items from the child collection before the items in the parent collection.  List Merge Interceptor class System.Config.Merge.ListMerge : IConfigMergeInterceptor {}  The List Merge Interceptor (ListM) can be used to compute a list of items via additions and removals across the node hierarchy.  It allows items to be permanently added and removed (i.e. no subsequent configuration collection can add the item back in or remove it). This functionality is referred to as  AddFinal  and  RemoveFinal A configuration collection can also declare the entire collection as  final , disallowing any additions and removals in subsequent collections. A configuration collection can also clear all previous items in the collection. A good example of a collection that uses ListM is the WIT/XSP ScriptMap collection: the collection is a list of tuples of file extensions and handler module names, i.e. [*.ASP, ASP.DLL],[*.XSP, XSP.DLL]. Any config file across the hierarchy of a node can add a tuple to the list inherited from the parent, remove a tuple from the list, clear the entire list or make an addition/removal from the list final. The ListM relies on the following naming conventions for properties in the collections: SourceRaw Collection If removal of items (or any form of final) is required, the collections that contributes the sourceraw configuration information must contain a directive property as listed below. Of no such property is defined (currently: if the property at index 0 is not of type int or the value is not in the range indicated by the enumeration below), the items in the sourceraw collection are treated as if an   directive had been specified. The collection must define a unique primary key; the list merge interceptor uses the primary key to replace entries that might have been defined in a parentconfiguration collection when an item is added/removed by the child collection. Directive  property The Directive property must at property index 0 and must be an enumeration type with the following values: enum ListMergeDirective { Remove  AddFinal RemoveFinal = 3; // not yet supported  Clear = 4; // any other properties in this item are ignored Final = 5; // any other properties in this item are ignored Later, we need to drive this off of wiring/schema information instead of assuming column 0. If no Directive property is defined (= the type of property 0 is not int) or the value is not in the proper range, the ListM will assume   semantics. Merged Collection If any form of final semantics (AddFinal, RemoveFinal or Final) is required, the resulting merged collection must be able to carry the corresponding information, so that during merge of child nodes the final information is available to the ListM interceptor. For this purpose, the following property must be defined in the merged collection: How do we prevent  RemoveFinal  items to show up in the collection returned to the caller? It would be ugly if the runtimes had to filter this. For now we simply don t support  RemoveFinal Directive  property The Directive property must be at property index 0. It must be an enumeration type with the ListMergeDirective values defined   REF enum_ListMergeDirective \p \h  above . The ListMerge will only write Add, RemoveFinal, AddFinal and Final into the merged collection, to avoid that consumers need to filter out any  Clear RemoveFinal  values A  Clear  directive in the sourceraw collection will be processed by removing the item(s) from the merged collection. A  Remove  directive in the sourceraw collection will be implemented by removing or simply not adding the item to the merged collection. If the directive property is not of the proper type, the ListM will not allow any Final, AddFinal or RemoveFinal directives. Does the ListM need to read the schema to figure out if the  Directive  property is defined? No, for now it just looks at the type of column 0  Need to fix this later. Configuration Manager Implementation Notes The configuration manager invokes a Merge Coordinator Interceptor (MCI) as one of the interceptors in the   stage. This interceptor is special in that  the configuration manager transparently invokes it whenever it finds a merge interceptor in the wiring info it used a different Read method that allows it to add intermediate results to the configuration manager s cache. There is currently no requirement to make the merge coordination itself pluggable. However keeping most of the special logic out of the core config manager enables us to be more flexible in the future.  The MCI uses the list selector that it receives   typically as the output of a hierarchy interceptor - to invoke a merge interceptor. The MCI knows (from the wiring information, which it retrieves from the RequestContext) which merge interceptor to invoke for a given ConfigType. It assumes that the selector being processed is a list interceptor, which contains UrlUncSelectors of a cached parent config node and UrlUncSelectors indicating the child config infos to be merged into the cached config node. The MCI implements the following variation of the IConfigReadInterceptor interface: interface System.Config.IConfigReadInterceptorWithIntermediateResults {  Object Read( String ConfigType, Selector Selector, LevelOfService LoS, Object PreviousConfig, // for chained interceptors: config read by previous // interceptor. NULL for store interceptors RequestContext rq // see below. class System.Config.Interceptors.RequestContext { void ReturnIntermediateResult(String ConfigType, Selector sel); // Used by merge interceptors that process merges of multiple nodes in a single // Read calls: the result for the nodes are treated as if they had been returned // from the Read methods, i.e. the ConfigManager calls Validate interceptors, adds // them to the cache etc. // This is not a public method on the config manager to prevent arbitrary code // from adding invalid/malicious config into the cache. // The config manager also maintains private state for the request in this class // to avoid rereading of this state (Example: Wiring info for the config type). The MCI obtains the cached parent config collection from the cache, using the URL part of the first UrlUncSelector in the list selector. In addition to the parent config collection, the cache entry contains a list of files that have contributed to the config collection. Should the MCI really know about the cache entry? Should the file list be handled inside the RegisterIntermediateResult method in the config manager? Do we need to pass in a file list or do we use a UrlUncSelector? If no cache entry is found for the parent URL, the MCI attempts to Get a config collection for the UNC part of the first UrlUncSelector, first for the merged collection (= requested collection), and if this request fails for the  sourceraw  collection. If both read attempts fail, the MCI fails the read method. The MCI then iterates over the subsequent child UrlUncSelectors, requesting the sourceraw configuration information. The ConfigType to be used for the child config requests selectors in the list selector is different from the requested config type: in many scenarios, that  sourceraw  configuration at a given node has a different schema from the  merged  configuration, i.e. it may not contain the location information in the hierarchy (URL property) or other computed or derived properties. The config manager determines the second  sourceraw  ConfigType by a naming convention: it appends   to the requested ConfigType. The Ducttape   collection for example is generated by reading the sourceraw data from the  APPS_cfg  collection. This should be part of the wiring info. For each child config node, the config manager reads the sourceraw child config collection using the UNC part of the UrlUncSelector, invokes the merge interceptor s Merge method, passing in  the current parent config collection,  the sourceraw child config collection,  the URL part of the UrlUncSelector as the TargetSel parameter and the UNC part of the UrlUncSelector as the ChildSel. The merge interceptor returns a new, merged config collection from the merge interceptor (usually by cloning the (read-only) parent config collection and adding to it). It then adds the merged config collection and the child node s config file path to the config cache, indicating the cache entry corresponding to the parent s node.  The config manager continues iterating over the child nodes by using the obtained child config collection as the new parent config collection. Migration of XSP Config Factories XSP Config Factories typically have the following structure: ConfigurationOutput Create(Object parent, ConfigurationInput input[], String path) { Result=parent.Clone(); // Read config through input (XML cursor) // Merge child config into Result return Result; Migrating a Config Factory to the Config System requires the following steps: Define a schema for the sourceraw config collection (input) and   if different - merged config collection (output). If the standard config collection/item implementations are not sufficient (i.e. custom data structures are required etc.): implement IConfigCollection and/or IConfigItem. Change the method signature from  Create Merge ( Change the Merge method as follows: Object Merge( Object parent, Object child,  String ConfigType, Selector TargetSel, Selector ChildSel LevelOfService LoS) { Result=parent.Clone(); // Read config through input (config collection) // Merge child config into Result return Result; What about the ConfigOutput.Default vs. Local properties? Do we need to support this? For now: either use Final semantics in parent or custom merge interceptor. Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History October 19, 1999 Rev 0.1 (MarkusH): Created. October 20, 1999 Rev 0.2 (MarkusH): Fleshed out implementation details: Moved some of the merge functionality into the config manager to avoid recursion. Simplified merge interceptors to take two config collections (read by the config manager) as input. October 22, 1999 Rev 0.3 (MarkusH): Changed hierarchy manager to return list of UrlUncSelectors, with node URL and node config file UNC. No RequestURL is added at the beginning of the list selector. Added IConfigMergeInterceptor interface. Clarified merge interceptor section, added class skeletons. Updated XSP migration section. Changed config manager implementation section to Merge Coordinator Interceptor. Added UrlUncSelector class. October 25, 1999 Rev 0.4 (MarkusH): Change MCI section back to config manager implementation section. Moved UrlUncSelector class to Hierarchy Interceptor section. Clarified cache file list management.  November 2, 1999 Rev 0.5 (MarkusH): Incorporated initial feedback/issues:  file coordinates  in cooked collection; source vs. unmerged vs. merged terminology; clarify parent vs. source vs. child terminology; config for child specified in parent node;  Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\icatalogerrorlogger spec.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft ICatalogErrorLogger Specification TitleICatalogErrorLogger Specification Stephen Rakonza Normal.dot stephenr Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags MonthICatalogErrorLogger Specification Author: Stephenr Date: April 12, 2001 Why is it Needed? There is a need to have an extensible mechanism for logging errors.  One product may choose to log errors to the NT Event Log.  Another may choose to log to a text file.  A third may choose to log to both.  Also  Catalog  code that lives in other DLLs may want to log errors in a way that s consistant with the internal Catalog logging.  ICatalogErrorLogger interface is designed to solve these problem and more. Design Criteria The error logging mechanism does not replace the error table mechanism for returning detailed errors. It is intended as a 'per product' error logging mechanism (not 'per table' or 'per interceptor'). The 'well known' logging mechanisms will not require extra method calls to continue working. The error logging interface should leverage the Error Table. External DLLs should have the ability to replace the error logging mechanism. External DLLs should be able to gain access to the error logging mechanism on a  per product  basis. Changes to the Dispenser The dispenser will have two new methods.  One to associate an ICatalogErrorLogger with the dispenser.  Another to retrieve the error logger interface.  The methods are prototyped as follows: SetCatalogErrorLogger( ICatalogErrorLogger *i_pLogger) GetCatalogErrorLogger( ICatalogErrorLogger **o_ppLogger) Only one logger may be associated with a dispenser.  It is possible to chain Loggers, however.  The caller may GetCatalogErrorLogger, keep a ref count then call SetCatalogErrorLogger.  The new logger could do some processing and then call the original logger.  WARNING:  Care needs to be taken when setting a new logger on the dispenser.  Since the dispenser is a singleton, and multiple thread may be accessing it, undesirable results may occur if the logger is changed in complex scenarios. All errors will be reported to this callback.  If no callback interface is specified a default error logger will be invoked.  For the IIS product, the error logger will log to both the NT Event Log as well as a text file.  For the NetFrameworkv1 product, the error logger will do nothing. External code may take advantage of this interface to log error in a uniform way.  Example, the metabase code that reads from the metabase XML interceptor does extra validation.  A warning may need to be generated when the data is invalid.  This code should get the ICatalogErrorLogger from the dispenser; and log though this interface. IcatalogErrorLogger::ReportError The only method that is supported by ICatalogErrorLogger is ReportError, prototyped as follows: ICatalogErrorLogger::ReportError( ULONG i_BaseVersion_DETAILEDERRORS, ULONG i_ExtendedVersion_DETAILEDERRORS, ULONG i_cDETAILEDERRORS_NumberOfColumns, ULONG * i_acbSizes, LPVOID * i_apvValues) All parameters are input parameters.  None of the data will be modified. The columns refered to are columns of the ErrorTable.  The versions referenced are the versions of the Error Table.  The versions are needed to allow changes to the Error Table and future/backward compatibility.  As columns are added to ErrorTable, the minor version is incremented.  As the meta for an existing column is changed, the major version is incremented. All plugins (read, write & interceptor plugins) must be using a compatible version of the ErrorTable.  This means the major version must match.  When the minor version does not match (but the major version does), there may be minor loss of error information; but compatibility still exists.  If the dispenser invokes an interceptor or plugin that is incompatible (which may happen when the code exists in a separate DLL), and report error is called, it must return E_ST_BADVERSION. Count of columns parameter is needed because not all collumns must be set.  Notice that there is no i_aIndexes to indicate which columns are being set.  This is a departure from IST's tradition.  This is by design to make it easier to implement the ICatalogErrorLogger interface.  Count of columns indicates how many elements are in the i_apvValues array.  It is presumed that the columns are the 0th to the (i_cColumns-1) columns.  The i_acbSizes parameter is required as part of the interface because one of the columns in the Error Table is of type 'bytes'.  Also, this allows for future columns of type 'bytes'.  This parameter may be NULL if no 'bytes' columns are specified in i_apvValues. The caller who builds the i_apvValues array does not have to supply all of the columns in the Error Table.  But a minimal set must be supplied.  This minimal set of columns is defined by the implementation of the ICatalogErrorLogger. In the case of the IIS logger, for BaseVersion zero Error Tables (which is the only version that currently exists) the caller must provide i_cColumns of at least 13; more if any insertion strings are needed.  See the ColumnMeta for  DETAILEDERRORS  table.  Some of these 13 columns may be NULL.  Here is a list of required column:     iDETAILEDERRORS_ErrorID,       iDETAILEDERRORS_Description,   //not required     iDETAILEDERRORS_Date,   //not required     iDETAILEDERRORS_Time,   //not required     iDETAILEDERRORS_SourceModuleName,   //not required     iDETAILEDERRORS_CategoryString,   //required*     iDETAILEDERRORS_MessageString,   //required*     iDETAILEDERRORS_Source,       iDETAILEDERRORS_Type,       iDETAILEDERRORS_Category,       iDETAILEDERRORS_User,   //not required     iDETAILEDERRORS_Computer,   //not required     iDETAILEDERRORS_Data,   //not required     iDETAILEDERRORS_Event,   CategoryString and MessageString are a special case that is NOT required IF the category string and message string are located within the Catalog DLL where the IIS ICatalogErrorLogger exists.  In this case the MessageString is obtained using the Event; and the CatagoryString is obtained from Category. The implementor of this interface may return S_OK if processing is to continue; or a failure code to indicate that processing should halt.  An example of when this would be useful: the XML interceptor encounters a numeric where 'bool' was expected, it calls ReportError indicating a warning; but the callback wants to treat this as an error and stop processing, so in returns E_ST_BADVALUE. This interface allows users the flexibility of being notified as error are encountered; or have the table of errors generated and set in SetErrorInfo.  The latter might be preferred where marshalling is involved. Design Considerations & Limitations This error logging mechanism does not, by itself, solve the problem of two pieces of code from the same product needing two different loggers.  A level of service flag will indicate whether logging is done.  With this level of service flag the caller can log from the Error Table returned via GetErrorInfo.  These two features combine to allow instance granularity in error logging. The error logger should only be set once.  The dispenser is a singleton, share by multiple threads.  The error logger associated with the dispenser should also be a singleton, able to be used by multiple threads.  The caller may choose to synchronize the first call to GetSimpleTableDispenser; or the caller may choose to get the dispenser and set the error logger each time, ignoring any error returned.  The former is recommended. All error messages for a given product should come from the same DLL.  There is a  one to one mapping between Event Log Source and DLL.  The product ID is used as the Event Log Source, so all messages for that product ID should live within the same DLL. gdHFI
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\iis6 xml metabase - edit while running.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft IIS XML Metabase - Edit while running Title _PID_HLINKSIIS XML Metabase - Edit while running Omar Kouatly This document describes the implementation of support for updates to the metabase XML file, while the server is running. COM+ Template.dot OMARKO Microsoft Word 9.01b<z+ alJlR 0rUz~ olXzU0 TGNa8 Tf"f  cRl:6 >[.mN krmx_ 9JPr~E&y dUt{8 E*;|8 0r`ruID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMatitle  IIS XML Metabase - Edit while running Application Center 2000 Microsoft Confidential Author Omar Kouatly Config Feature Edit while running Program Management Contact Omarko Development Contact VarshaJ Test Contact  HYPERLINK "mailto:JanainaG"  JanainaG Docs Contact Priority Current Status In progress Last updated 10/28/2000  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc497365028"  Overview  PAGEREF _Toc497365028 \h   HYPERLINK \l "_Toc497365029"  Scenarios  PAGEREF _Toc497365029 \h   HYPERLINK \l "_Toc497365030"  Open XML file  in the morning , save after API changes  PAGEREF _Toc497365030 \h   HYPERLINK \l "_Toc497365031"  Change a value in XML after delete through API  PAGEREF _Toc497365031 \h   HYPERLINK \l "_Toc497365032"  Implementation Approach  PAGEREF _Toc497365032 \h   HYPERLINK \l "_Toc497365033"  Edit while running components  PAGEREF _Toc497365033 \h   HYPERLINK \l "_Toc497365034"  Enabling / Disabling Edit While Running  PAGEREF _Toc497365034 \h   HYPERLINK \l "_Toc497365035"  File Updates  PAGEREF _Toc497365035 \h   HYPERLINK \l "_Toc497365036"  Interaction of File updates AND API updates  PAGEREF _Toc497365036 \h   HYPERLINK \l "_Toc497365037"  Writing the metabase.xml file  PAGEREF _Toc497365037 \h   HYPERLINK \l "_Toc497365038"  Shutdown/Startup  PAGEREF _Toc497365038 \h   HYPERLINK \l "_Toc497365039"  Behavior when Edit While Running is DISABLED  PAGEREF _Toc497365039 \h   HYPERLINK \l "_Toc497365040"  IIS Backup / Restore  PAGEREF _Toc497365040 \h   HYPERLINK \l "_Toc497365041"  Revision History  PAGEREF _Toc497365041 \h   HYPERLINK \l "_Toc497365042"  Rejected Topics  PAGEREF _Toc497365042 \h  Overview This document describes the implementation of support for updates to the metabase XML file, while the server is running.  Thanks to Windows 2000 file change notification, this optional feature in IIS6 will allow users to make configuration changes via the text file while IIS is running and have them immediately applied. Scenarios Open metabase.xml file  in the morning , save after API changes This is the driving scenario for the implementation approach: the MB contains values that reflect the running state of the server. Also, programmatic changes can occur frequently at runtime (WebDAV etc.). Users typically keep files open for extended periods of time; when saving the old snapshot of the file, they would unintentionally overwrite any MB changes that occurred during this time. The implementation approach addresses this by always comparing the user s file changes against the snapshot that the user started out with, using a version/change # in the XML file to identify the proper snapshot.   Change a value in XML after delete through API Administrators may make changes via direct text entry at the same time applications are making changes via metabase APIs.  This scenario may occur when near simultaneous changes are made to the metabase that effect the same key or metabase hive.  Edit while running needs to gracefully handle this situation.  Described in section 3.4 below. Multiple people editing metabase.xml file It is possible for multiple people to edit the metabase.xml file.  However, this is a scenario we do NOT support.  The problem is that if two or more people open the SAME metabase.xml file (which implies the same major version  number) edit while running has no way to determine which user s edits should be diffed.  The result would be the user that saves the file LAST will have their changes committed and will cause the first users changes to be removed. Implementation Approach The high level implementation of Edit while running is as follows:   Edit while running works by using Windows 2000 file change notification to received alerts when the metabase file has been edited.   Once the system detects the metabase has been edited IIS will compare this file to its corresponding  History  file of the same version that is stored in the History directory IIS will diff the two files to pick up ONLY what was changed in the most recent edit IIS will then formulate the appropriate API commands to apply these changes to the in-memory metabase. The file the user just edited copied to the History directory and it s minor version is incremented to permit succeeding edits to the same version of the file to work correctly (i.e. diff only new changes). Whenever IIS saves it s in-memory metabase values (via SaveAllData described later) it creates a new historical file. Edit while running components The following files, directories, and metabase parameters are the components of Edit while running: There is a  metabase.xml  file that is freely editable by users. The metabase can be configured to keep the metabase.xml file locked (just like today), to address security concerns of some customers.  Default location is  %windir%\system32\inetsrv.  File is called metabase.xml. Each metabase.xml file contains a top-level metabase key  VersionNumber  that is a 32bit value designating the Major version number of the file. Historical copies of the metabase.xml file are stored in the %windir%\system32\inetsrv\history directory. History files are named  metabase.xml.<major version>.<minor version> The metabase contains the following keys (defined later) EnableEditWhileRunning MaxHistoryFiles Enabling / Disabling Edit While Running Edit while running is enabled by setting the metabase property: EnableEditWhileRunning to TRUE (1).  If this property is set via editing the metabase.xml file, since Edit while running is NOT on the web service will have to be stopped to facilitate picking up this change.  Alternatively, it may be activated via the UI or via the XXXXXXXXXX (Varsha?) API call. Disable Edit while running by setting EnableEditWhileRunning to FALSE (0). The default setting is FALSE (0). Control the number of History files to retain with the MaxHistoryFiles property.  This defaults to 10.  Disable history by setting this to zero (0).  This also will disable Edit While Running since there will be no history files to create differences with. Note: the EnableBackup metabase key should be eliminated   MaxHistoryFiles = 0 has the same effect.  When MaxHistoryFiles = 0, this also implies EnableEditWhileRunning= FALSE File Updates When a change notification on the metabase.xml file is received, the config system: Finds the saved, historical XML file that corresponds to the major version# in the metabase.xml. If the corresponding version is not found (or is invalid), the changes made in the metabase.xml will not picked up (eventlog entries will written warning the user of this).   Computes the differences between the latest minor version of the same major version and the current XML file. As an optimization, if the file change timestamps are identical, the config system will assume there were no updates in the file. This computation obtains a list of updates, insertions and deletions. What are the triggers for File Change notification? We apply the changes (as determined above) to the in-memory metabase image through MB APIs. When the value being changed already exists, the change will be made via an Update.  If the change is to add a key/value that does not already exist, an Insert will be used.  When the difference is the absence of a key/value, a Delete is generated. Because Edit while running functions by applying DIFFERENCES only, if a user intends to completely replace the entire metabase with a new metabase.xml file, they must stop the IISAdmin service, replace the metabase.xml, and then restart IISAdmin. Similarly, if a user intends to restore an old version of the metabase, this is accomplished in the same manner as replacing the entire metabase. If a new file contains any errors (not well-formed xml or invalid metabase schema), the entire file is copied to the History directory and append _error to the file name.  If a file of the same name already exists in the subdirectory, the new file is renamed by appending the string  _error  and an incrementing integer number to the root name of the new file (i.e. metabase_error1.xml).  An error is writing to the event log and metabase.xml is restored by calling SaveAllData.   (Varsha are we going to do this?) If the same version of metabase.xml is modified multiple times, each SaveAllData will create a new, incremented minor version of the history file.   This allows continuous edits of the same file to be done and provide the user a history of their edits to the same  major  version.  For example: Version 1 ( Metabase.xml History of version 1 ( Metabase.xml.00000000000000001.00000000 Edit Metabase.xml and save (but don t close file)  New history file ( Metabase.xml.00000000000000001.00000001 Edit Metabase.xml and save (but don t close file)  New history file ( Metabase.xml.00000000000000001.00000002 Close file, force a SaveAllData  New history file ( Metabase.xml.00000000000000002.00000000 If the metabase.xml is write locked (i.e. open for write fails), write the history file and log an error to the event log.  Varsha: Do we retry, if so, how many times? Major and minor History version numbers are generated by looking in the history directory for the largest existing major and/or minor number.   This prevents history files from being overwritten if a user restores an old history file. In the case where a user and IIS may be saving the metabase.xml file simultaneously,  it would be possible for the user s changes would be overwritten.  To avoid problem, when SaveAllData is about to rename metabase.xml, write lock metabase.xml, diff it with the latest history version. If there are any diffs it means that the file has changed, do not rename it.   When this happens, we should send ourselves a file change notification, just incase the NT file change notification fails. Interaction of File updates AND API updates If user changes a value, but a containing hive (site) has been deleted, the update must be ignored to avoid MB corruption.  An error to this effect is reported to the error log.  If a user attempts to write a script that changes to the metabase.xml file AND applies API changes a race condition between API changes and file changes exists.  This is because if a single script does both API and text changes, due to file change notification semantics the text changes are picked up after the API changes, and not in the order they were performed. We will document that a single script should not mix updated of text and API.   Writing the metabase.xml file Many changes can be made via the metabase APIs without triggering a flush of the metabase.  However, once IIS decides to write the metabase to disk, the following actions are taken via SaveAllData:  Locks the in-memory metabase (just like today). Writes a new metabase.xml file with an incremented version# to the History directory.  Unlocks the metabase. Note that this minimizes the impact on the running server and preserves current (IIS5) metabase flush semantics. Verifies that metabase.xml is not write locked. Does not contain any pending changes. If either a) or b) fail: done   assuming that a file change notification has been or will be sent; do not update metabase.xml at this time! If the file is write locked, there are cases where a change notification might not be sent (if for example the user doesn t modify the file after all). In this case, metabase.xml may remain out-of-date for an extended period of time. The config system logs an error to the event log indicating this condition. Also, on shutdown, the configuration system will verify that metabase.xml is up-to-date and attempt an another update if it is out-of-date. If metabase.xml is not write-locked and does not contain pending changes: copy the saved version of the XML file over metabase.xml. If a pending file change notification is received during a SaveAllData operation, do not overwrite (rename) metabase.xml.  To minimize the time window the check for file change notification should be done just prior to overwriting metabase.xml.  See file update spec in 3.3 regarding closing this window. SaveAllData is triggered either programmatically or automatically.  Automatic trigger is based on, if via APIs 50 changes are made or 5 minutes elapses once an API change has been made. Shutdown/Startup On shutdown: No special code:  SaveAllData  flushes any pending changes as above. If no MB in-memory changes are pending: Verify that metabase.xml is up-to-date; if not, attempt to copy latest ( latest  based on latest time-stamp) private metabase file to metabase.xml. This addresses the case were the public file was write-locked during a previous metabase cache write (SaveAllData), but the file was not changed. When Edit while running is enabled, metabase.xml is marked with a Read-Only file attribute to prevent users from inadvertently updating the file.   The read-only attributes remains until IIS is restarted or the user manually overrides the attribute. On startup: The config system read the metabase.xml on startup.    No diffing with history files is done.  If edit while running is enabled we will remove the read-only file attribute from metabase.xml. If metabase.xml is unable to be parsed and read successfully, log an error, copy the file to the error directory, and do NOT start IISAdmin. WAM application synchronization needs to be done (and Front Page change notification)   need to call Restore API to notify WAM apps. The number of history files to be kept is configurable via the MaxHistoryFiles metabase key.  When the number of history files exceeds the configured number, old (  based on time stamps) history files are cleaned up lazily.  Behavior when Edit While Running is DISABLED On Startup Read metabase.xml.  If the metabase.xml file is unable to be parsed and read successfully, log an error, copy the file to the error directory, and do NOT start IISAdmin. Take a Write Lock on metabase.xml file, fail startup if write lock can not be obtained On Shutdown No special code:  SaveAllData  flushes any pending changes as above. Remove Write Lock on metabase.xml file On file change notification Should not be able to happen due to write lock IIS Backup / Restore Edit while running is compatible with the IIS Backup / Restore APIs and UI.   Revision History April 20, 2000 Rev 0.1 (MarkusH). April 24, 2000 Rev 0.2: Incorporated spec review feedback: change log at beginning of file, error directory, detailes on handling of locked files. June 19, 2000 Rev 0.3: Addressed feedback from prior meeting based on input from VarshaJ (OmarKo). July 10, 2000 Rev 0.4: Incorporated corner case review feedback July 21, 2000 Rev 0.5: Updated  On Startup  logic August 7, 2000 Rev 0.6: Corner case review feedback September 20, 2000 Rev 0.7: feedback from Janaina and Rajesh October 28, 2000 Rev 0.8: reformatted to be more  spec like  and incorporated feedback from Janaina November 24, 2000 Rev 0.9: fix up versioning descriptions to include reference to SaveAllData Rejected Topics This section of the specification lists topics that were considered but the team has rejected.  This provides a historical record that will aid in bringing new team members up-to-date and help defend/support the teams current thinking in the spec. Topic Reason rejected 10/28/2000 Changes are logged to the event log and to a separate text log file.  These change logs allows users to verify that their changes have been accepted using only text-based tools such as telnet and event based tools like Application Center .  (Varsha   are we doing this for all changes, or just errors?) This needs to be added as a separate feature   which spec does it belong in? Optionally, customers have requested that even if no changes are made to the metabase.xml file or via the API that history files be generated on a scheduled basis.   Schedule options should include: Daily at hh:mm Weekly on ddd hh:mm Scheduled history files allows admins to say  I know the site was working last Thursday  and regardless if any changes in the metabase were made, a history file would exist. If a scheduled history can not be made, log an error to the event log. SaveAllData was originally speced to be triggered each time the system processed EWR change notification.  It will no longer do this automatically. We are making SaveAll Data more configurable. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\iis6 xml metabase - update while running.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft IIS XML Metabase - Update while running Title _PID_HLINKSIIS XML Metabase - Update while running Markus Horstmann This document describes the implementation of support for updates to the metabase XML file, while the server is running. COM+ Template.dot Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ olXzU0 TGNa8 Tf"f  cRl:6 >[.mN krmx_ @\\red-prn-12\CORP0066 Ne00: winspool \\red-prn-12\CORP0066 \\red-prn-12\CORP0066 Letter \\red-prn-12\CORP0066 LetterID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  IIS XML Metabase - Update while running April 24, 2000, Draft Rev 0.2,   AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes the implementation of support for updates to the metabase XML file, while the server is running.  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc481215725"  Scenarios  PAGEREF _Toc481215725 \h   HYPERLINK \l "_Toc481215726"  Open XML file  in the morning , save after API changes  PAGEREF _Toc481215726 \h   HYPERLINK \l "_Toc481215727"  Change a value in XML after delete through API  PAGEREF _Toc481215727 \h   HYPERLINK \l "_Toc481215728"  Implementation Approach  PAGEREF _Toc481215728 \h   HYPERLINK \l "_Toc481215729"  File Updates  PAGEREF _Toc481215729 \h   HYPERLINK \l "_Toc481215730"  MB API updates  PAGEREF _Toc481215730 \h   HYPERLINK \l "_Toc481215731"  Shutdown/Startup  PAGEREF _Toc481215731 \h   HYPERLINK \l "_Toc481215732"  Revision History  PAGEREF _Toc481215732 \h  Scenarios Need to flesh these out/add customer scenarios! FTP, script etc. Open XML file  in the morning , save after API changes This is the driving scenario for the implementation approach: the MB contains values that reflect the running state of the server. Also, programmatic changes can occur frequently at runtime (WebDAV etc.). Users typically keep files open for extended periods of time; when saving the old snapshot of the file, they would unintentionally overwrite any MB changes that occurred during this time. The implementation approach addresses this by always comparing the user s file changes against the snapshot that the user started out with, using a version/change # in the XML file to identify the proper snapshot. Change a value in XML after delete through API See below. Implementation Approach The metabase XML file contains a version number that is incremented every time the MB is saved (likely the existing MB version number). Probably can t use the existing MB change number (DWORD, rollover!). There is a  public metabase file  that is freely editable by users. The metabase can be configured to keep the public metabase file locked (just like today), to address security concerns of some customers. Should the location still be %windir%\system32\inetsrv?  Should the file be called metabase.xml?  Should the location be configurable? The config system keeps copies of previous metabase XML files around ( private metabase files ). These private backups will not be documented (as  last-known good  configurations or similar), because a) they get created at arbitrary (for the user) times and b) the system needs to modify them as users perform updates (see below).  Last-known good  is a separate feature that needs to be covered in the overall IIS configuration specification. File Updates When a change notification on the public XML file is received, the config system: Finds the saved, private XML file that corresponds to the version# in the public XML file. If the version is not found, the new file is not picked up (eventlog entries written etc.). Computes the differences between the main XML file and the previously saved XML file. As an optimization, if the file change timestamps are identical, the config system will assume there were no updates in the file.   This computation obtains a list of updates, insertions and deletions. MichTh: if a user changes a value, but a containing hive (site!) has been deleted, the update must be ignored to avoid MB corruption.  (MichTh) What is the cost of diffing for larger files? Not a blocking issue, but need to tell customers up to what MB size text editing is reasonable (or split the file)! (MichTh) There is a race condition between API changes and file changes: if a single script does both API and text changes, the text changes are picked up after the API changes, and not in the order they were performed. We can try to reduce this window by checking node change timestamps, or customers have to force a flush of the metabase and wait to the update of the public MB file? This may not be too big of an issue if we document this prominently (don t mix updated of text and API)? A user can indicate in the file that he/she intends to replace the entire metabase (by explicitly removing the version # from the file). In this case the MB is locked, flushed and the diff is computed against the latest, private version. Applies the changes to the in-memory metabase image (through MB APIs). For updates, the value must already exist. For inserts, the key/value cannot already exist.  A metabase flush is triggered after all changes have been applied and before the backup file is modified. This reduces the time until the user can obtain an up-to-date public metabase file that includes any other potentially pending MB API changes. It also ensures that no user changes get lost in case of a crash during this process. Log the changes at the beginning of the public metabase file: both successful updates (only time, not individual data!) and any errors are captured. This change log allows users to verify that their changes have been accepted using only text-based tools.  The maximum size of the log can be configured through a metabase value. What is the name/location of this global metabase value?In the W3SVC or LM hive? Should we keep this log in a separate file? Preference seemed to be to include it in the file itself to avoid file system clutter. If a new file contains any errors, the entire file is copied to an  Errors  subdirectory under the directory containing the public metabase file. If a file of the same name already exists in the subdirectory, the new file is renamed by appending the string  _conflict  and an incrementing integer number to the root name of the new file (i.e. metabase_conflict1.xml). Applies the changes to the corresponding back up file. This allows continuous edits done by the same user. It does cause problems when multiple users open (and save) the same initial file version, but multi-user scenarios are not the driving factor behind this feature: other  workflow  procedures must exist, just like for any other content file.  An alternative implementation would have been to actually write a new private file for the same version number and use file change timestamps to attempt to match user edits to the proper version; however the marginal improvement in some multi-user scenarios does not justify the additional complexity/disk space usage. If the public metabase file is locked (i.e. open for read fails), the change notification listener needs to wait for the file to be unlocked. How long do we wait? This is different from the case when the file is write-locked during SaveAllData MB API updates When a change to the in-memory metabase image occurs ( SaveAllData ), the config system Locks the metabase (just like today). Writes a new XML file with an incrementing version# to a  private  location.  Unlocks the metabase. Note that this minimizes the impact on the running server and preserves current (IIS5) metabase flush semantics. Verifies that the public metabase file is not write locked. Does not contain any pending changes. If either a) or b) fail: done   assuming that a file change notification has been or will be sent; do not update the public metabase file at this time! If the file is write locked, there are cases where a change notification might not be sent (if for example the user doesn t modify the file after all). In this case, the public metabase file may remain out-of-date for an extended period of time. The config system raises an event indicating this condition. Also, on shutdown, the configuration system will verify that the public metabase file is up-to-date and attempt an update. If the public metabase file is not write-locked and does not contain pending changes: copy the saved version of the XML file over the public metabase file. Shutdown/Startup On shutdown: No special code:  SaveAllData  flushes any pending changes as above. If no MB in-memory changes are pending: Verify that the public metabase file is up-to-date; if not, attempt to copy latest private metabase file to the public metabase file. This addresses the case were the public file was write-locked during a previous metabase cache write (SaveAllData), but the file was not changed. On startup: The config system uses the latest  private  version as the master copy on startup.  Before the web server (WAS) can start, any changes in the public metabase file must be applied.  To optimize startup time, the config system will look at the file change timestamp and only test to pending updates if the timestamp is different from the previous timestamp. Old snapshots of XML files are cleaned up lazily. The number of XML to be kept around is configurable. Revision History April 20, 2000 Rev 0.1 (MarkusH). April 24, 2000 Rev 0.2: Incorporated spec review feedback: change log at beginning of file, error directory, detailes on handling of locked files. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\inferrence rule for catalog meta tables.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Com+ Inferrence Rule for Catalog Meta Tables TitleInferrence Rule for Catalog Meta Tables Stephen Rakonza Normal.dot stephenr Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttags PlaceType urn:schemas-microsoft-com:office:smarttags PlaceName Ffu2WInferrence Rule for Catalog Meta Tables Classes of Inferrence Rules XML Pass:  This type of inferrence rule MUST be executed as part of the XML pass through the meta data. Second Pass:  This type of inferrence rule MAY be executed after the data has been read into tables.  This may result in the column values changing as the result of the inferrence criteria. Dependant Rule:  If an XML Pass inferrence rule requires the Second Pass inferrence, it may be necessary to classify an otherwise Second Pass rule as an XML Pass Rule.  Also, any Second Pass rule may rely on another Second Pass rule.  These cases are defined as a Dependant Rule and must be executed before that is dependant on it. Types of Inferrence Rules Not Inferred: XML Pass TableMeta.InternalName is a primary key and must exist.  It will never be inferred. ColumnMeta.DefaultValue cannot be inferred and will be set to NULL if not specified. By Position: XML Pass. TableMeta.Database is never specified explicitly.  Instead it is inferred from the parent XML element under which it resides. ColumnMeta.Index is never specified explicitly.  It is inferred by its position under its parent TableMeta XML element.  The first ColumnMeta row is inferred to the 0th ColumnMeta.Index. ServerWiringMeta row may be inferred from the ServerWiringMeta element supplied beneath the DatabaseMeta element, if none is supplied beneath the TableMeta element. By XML Name or Value: XML Pass. ColumnMeta.MetaFlags may have the fCOLUMNMETA_FLAG or fCOLUMNMETA_ENUM bit set as the result of the existance of a child element named Flag or Enum. ColumnMeta.MetaFlags may have the fCOLUMNMETA_BOOL bit set if the Type attribute has a value of BOOL. Name to Numeric Mapping:  XML Pass. RelationMeta.PrimaryColumns are specified as strings in the XML but need to be mapped to the appropriate column indexes.  This is inferred from the PrimaryTable column and ColumnMeta.InternalName. ColumnMeta.SchemaGeneratorFlags are specified as strings and need to be mapped to the appropriate flag values. Inferrence via Other Tables and/or Columns: Second Pass TableMeta.PublicName is assumed to be the same as the TableMeta.InternalName if not specified. ColumnMeta.FlagMask is the ORing of each of the columns tags if the ColumnMeta.MetaFlags fCOLUMNMETA_FLAG bit is set. Default Value: Second Pass ColumnMeta.EndingNumber has a default value of 0xffffffff.  No XML Pass rules depend on this default value being set. DatabaseMeta.BaseVersion has a default value of 0.  No XML Pass rules depend on this default value being set. Compilation Plugin: Second Pass DatabaseMeta.iSchemaBlob is generated by a piece of code that separate from the core complation process. Validation: Second Pass ColumnMeta.SchemaGeneratorFlags may have the fCOLUMNMETA_USEASPUBLICROWNAME bit set; but if the ColumnMeta.Type is not UI4 and the ColumnMeta.MetaFlags does not specify the fCOLUMNMETA_ENUM flag, this Column is in error. Inferrence Rules by Table Some of the table members below are NOT publicly accessible.  They are used during the  compilation  of the schema.  Also the  fixed  interceptor uses them to access the data more efficiently.  These  private  columns are named beginning with a lower case character. DatabaseMeta InternalName Validation DatabaseMeta.InternalName is a primarykey, so it must not be NULL. DatabaseMeta.InternalName should be validated to be a legal C++ variable name and WMI name. DatabaseMeta.InternalName should be no more than 16 characters (including the terminating NULL). PublicName Inferrence via Other Tables and/or Columns DatabaseMeta.PublicName should be inferred from DatabaseMeta.InternalName if not supplied. DatabaseMeta.PublicName should be validated to be a legal C++ variable name and WMI name. BaseVersion Default Value DatabaseMeta.BaseVersion should be defaulted to zero if not specified. ExtendedVersion Default Value DatabaseMeta.ExtendedVersion should be defaulted to zero if not specified. CountOfTables Inferrence via Other Tables and/or Columns DatabaseMeta.CountOfTables should be inferred from the number of TableMeta whose Database column is equal to DatabaseMeta.InternalName. iSchemaBlob Compilation Plugin cbSchemaBlob Compilation Plugin iNameHeapBlob Compilation Plugin cbNameHeapBlob Compilation Plugin iTableMeta Inferrence via Other Tables and/or Columns DatabaseMeta.iTableMeta is an index to the first table whose Database matches the DatabaseMeta.InternalName. DatabaseMeta.iTableMeta must have a legal value (between 0 and total number of TableMeta). iGuidDid Compilation Plugin TableMeta Database By Position TableMeta XML elements exist as children of the Database under which they belong.  So Database is inferred from the parent DatabaseMeta.InternalName. InternalName Validation TableMeta.InternalName is a primary key so it must not be NULL. TableMeta.InternalName should be validated to be a legal C++ variable name and WMI name. PublicName Inferrence via Other Tables and/or Columns TableMeta.PublicName is inferred from TableMeta.InternalName if not supplied. TableMeta.PublicName should be validated to be a legal C++ variable name and WMI name. PublicRowName Not Inferred BaseVersion Default Value TableMeta.BaseVersion is defaulted to zero if none is supplied. ExtendedVersion Default Value TableMeta.BaseVersion is defaulted to zero if none is supplied. NameColumn Inferrence via Other Tables and/or Columns TableMeta.NameColumn can be inferred from a column whose ColumnMeta.MetaFlags fCOLUMNMETA_NAMECOLUMN bit is set.  If no columns have this bit set, it is the first primary key whole type is WSTR.  If no primary keys are of type WSTR, it is the first column of type WSTR.  If no columns are of type WSTR, the NameColumn is set to be the TableMeta.NavColumn value.  Thus the NavColumn inferrence rule must be executed before the NameColumn inferrence rule. NavColumn  Inferrence via Other Tables and/or Columns TableMeta.NavColumn can be inferred from a column whose ColumnMeta.MetaFlags fCOLUMNMETA_NAVCOLUMN bit is set.  If no columns have this bit set, it is set to be the first primary key that is not also a foreign key.  If no column is a primary key that is not also a foreign key, the NavColumn is set as the first primary key whose type is WSTR.  If none of the above conditions are met, the NavColumn is set as the first primary key. CountOfColumns Inferrence via Other Tables and/or Columns TableMeta.CountOfColumns is the count of ColumnMeta whose Table equals the TableMeta.InternalName. MetaFlags Inferrence via Other Tables and/or Columns fTABLEMETA_INTERNAL Not Inferred fTABLEMETA_NOLISTENING Not Inferred fTABLEMETA_RELATIONINTEGRITY Not Inferred fTABLEMETA_ROWINTEGRITY Not Inferred fTABLEMETA_HASUNKNOWNSIZES Inferrence via Other Tables and/or Columns fTABLEMETA_HASUNKNOWNSIZES indicates whether any of the table s ColumnMeta.MetaFlags fCOLUMNMETA_UNKNOWNSIZE bit is set.  This depends in Inferrence Rule 3.g.xxviii.1. fTABLEMETA_NOPUBLICINSERT Not Inferred fTABLEMETA_NOPUBLICUPDATE Not Inferred fTABLEMETA_NOPUBLICDELETE Not Inferred fTABLEMETA_REQUIRESQUERY Not Inferred fTABLEMETA_HASDIRECTIVES Inferrence via Other Tables and/or Columns If any of the table s ColumnMeta.Metaflags specify fCOLUMNMETA_DIRECTIVE then fTABLEMETA_HASDIRECTIVES is set. fTABLEMETA_STOREDELTAS Not Inferred fTABLEMETA_AUTOGENITEMCLASS Not Inferred fTABLEMETA_AUTOGENCOLLECTIONCLASS Not Inferred fTABLEMETA_OVERRIDEITEMCLASS Not Inferred fTABLEMETA_OVERRIDECOLLECTIONCLASS Not Inferred fTABLEMETA_NAMEVALUEPAIRTABLE  Not Inferred fTABLEMETA_HIDDEN Not Inferred fTABLEMETA_OVERWRITEALLROWS  Validation If any column is marked as fCOLUMNMETA_PRIMARYKEY and fCOLUMNMETA_INSERTUNIQUE, the fTABLEMETA_OVERWRITEALLROWS must be specified.  It is not inferred   it should be explicitly specified. SchemaGeneratorFlags fTABLEMETA_EMITXMLSCHEMA Not Inferred fTABLEMETA_EMITCLBBLOB Not Inferred  fTABLEMETA_ISCONTAINED Inferrence via Other Tables and/or Columns fTABLEMETA_ISCONTAINED is set if there is a RelationMeta.ForeignTable that matches TableMeta.InternalName and RelationMeta.Metaflags  fRELATIONMETA_USECONTAINMENT bit is set. fTABLEMETA_NOTSCOPEDBYTABLENAME Not Inferred fTABLEMETA_GENERATECONFIGOBJECTS Not Inferred fTABLEMETA_NOTABLESCHEMAHEAPENTRY Not Inferred fTABLEMETA_CONTAINERCLASS Inferrence via Other Tables and/or Columns fTABLEMETA_CONTAINERCLASS is inferred as true when the ContainerClassList column is not NULL. fCOLUMNMETA_EXTENDED By Position fCOLUMNMETA_EXTENDED is inferred as true when compiling extended schema.  It is used to distinguish between Microsoft  shipped  schema and  user-defined  schema. Not Inferred ConfigItemName Not Inferred ConfigCollectionName Not Inferred PublicRowNameColumn  Inferrence via Other Tables and/or Columns PublicRowNameColumn is inferred from the ColumnMeta whose SchemaGeneratorFlags has the fCOLUMNMETA_USEASPUBLICROWNAME bit set. If no column has the fCOLUMNMETA_USEASPUBLICROWNAME bit set, TableMeta. PublicRowNameColumn column is defaulted to  ContainerClassList Not Inferred ciRows Compilation Plugin iColumnMeta Inferrence via Other Tables and/or Columns TableMeta.iColumnMeta is an index to the first ColumnMeta row whose Table matches the TableMeta.InternalName iFixedTable  Compilation Plugin cIndexMeta  Inferrence via Other Tables and/or Columns cIndexMeta is the count of IndexMeta whose Table matches the TableMeta.InternalName. iIndexMeta  Inferrence via Other Tables and/or Columns iIndexMeta is an index to the first IndexMeta whose Table matches the TableMeta.InternalName. iHashTableHeader  Compilation Plugin nTableID  Compilation Plugin iServerWiring  Inferrence via Other Tables and/or Columns This is an index to the first ServerWiringMeta row whose Table matches the TableMeta.InternalName.  cServerWiring  Inferrence via Other Tables and/or Columns This is the count of ServerWiringMeta rows whole Table matches the TableMeta.InternalName. cPrivateColumns Inferrence via Other Tables and/or Columns cPrivateColumns is hard coded based on the meta tables.  Only Meta tables have a private column count. ColumnMeta Table By Position The TableMeta.InternalName of the parent XML element determines Table to which the column belongs. Index  By Position The first ColumnMeta element encountered under each table is set to Index 0.  Each successive ColumnMeta element has an Index value one greater than the previous ColumnMeta.Index. InternalName  Validated ColumnMeta.InternalName is a primary key so it must not be NULL. ColumnMeta.InternalName should be validated to be a legal C++ variable name and WMI name. PublicName  Inferrence via Other Tables and/or Columns ColumnMeta PublicName is set to be the same as the ColumnMeta.InternalName if one is not supplied. ColumnMeta.PublicName should be validated to be a legal C++ variable name and WMI name. Name to Numeric Mapping Type is specified as a string and is mapped according to its TagMeta.  Also, ColumnMeta.Size is set for those types of fixed size. Default Value Size is defaulted to  1 if the ColumnMeta.Type is DBTYPE_STRING or DBTYPE_BYTES (or equivalent) and no Size is supplied.  Other types are statically size. MetaFlags fCOLUMNMETA_PRIMARYKEY Validation fCOLUMNMETA_PRIMARYKEY  must be set on at least one column per table. fCOLUMNMETA_FOREIGNKEY Inferrence via Other Tables and/or Columns fCOLUMNMETA_FOREIGNKEY  is set when the table is listed as a RelationMeta.ForeignTable and the column is listed as one of the RelationMeta.ForeignColumns. fCOLUMNMETA_NAMECOLUMN Inferrence via Other Tables and/or Columns Only one NameColumn may be specified per table. fCOLUMNMETA_NAVCOLUMN Inferrence via Other Tables and/or Columns Only one NavColumn may be specified per table. fCOLUMNMETA_DIRECTIVE Not Inferred fCOLUMNMETA_BOOL By XML Name or Value: XML Pass fCOLUMNMETA_FLAG By XML Name or Value: XML Pass fCOLUMNMETA_FLAG must only be set if the ColumnMeta.Type is DBTYPE_UI4 or DWORD_METADATA. fCOLUMNMETA_ENUM By XML Name or Value: XML Pass fCOLUMNMETA_ ENUM must only be set if the ColumnMeta.Type is DBTYPE_UI4 or DWORD_METADATA. fCOLUMNMETA_WRITENEVER Not Inferred fCOLUMNMETA_WRITEONCHANGE Not Inferred fCOLUMNMETA_WRITEONINSERT Not Inferred fCOLUMNMETA_NOTPUBLIC Not Inferred fCOLUMNMETA_NOTDOCD Not Inferred fCOLUMNMETA_PUBLICREADONLY Not Inferred fCOLUMNMETA_PUBLICWRITEONLY Not Inferred fCOLUMNMETA_INSERTDEFAULT Not Inferred fCOLUMNMETA_INSERTGENERATE Not Inferred fCOLUMNMETA_INSERTUNIQUE Not Inferred fCOLUMNMETA_INSERTPARENT Not Inferred fCOLUMNMETA_NOTNULLABLE Inferrence via Other Tables and/or Columns fCOLUMNMETA_NOTNULLABLE is set if fCOLUMNMETA_PRIMARYKEY is set. fCOLUMNMETA_FIXEDLENGTH Inferrence via Other Tables and/or Columns fCOLUMNMETA_FIXEDLENGTH is set if Size it not  fCOLUMNMETA_HASNUMERICRANGE Inferrence via Other Tables and/or Columns fCOLUMNMETA_HASNUMERICRANGE is set if the Type is UI4 and, StartingNumber is not 0 or EndingNumber is not 0xFFFFFFFF. fCOLUMNMETA_LEGALCHARSET Not Inferred fCOLUMNMETA_ILLEGALCHARSET Not Inferred fCOLUMNMETA_NOTPERSISTABLE Not Inferred fCOLUMNMETA_MULTISTRING By XML Name or Value: XML Pass fCOLUMNMETA_EXPANDSTRING By XML Name or Value: XML Pass fCOLUMNMETA_UNKNOWNSIZE Inferrence via Other Tables and/or Columns fCOLUMNMETA_UNKNOWNSIZE bit is set when ColumnMeta.Type is BYTES and ColumnMeta.Size is -1. fCOLUMNMETA_VARIABLESIZE Inferrence via Other Tables and/or Columns fCOLUMNMETA_VARIABLESIZE bit is set when fCOLUMNMETA_FIXEDLENGTH is not set. fCOLUMNMETA_CASEINSENSITIVE Not Inferred fCOLUMNMETA_TOLOWERCASE Not Inferred DefaultValue  Not Inferred FlagMask  Inferrence via Other Tables and/or Columns FlagMask is the ORing of all of the TagMeta when fCOLUMNMETA_FLAG is set.  Otherwise it is defaulted to 0. StartingNumber  Default Value ColumnMeta.StartingNumber is defaulted to 0 if none is supplied. EndingNumber  Default Value ColumnMeta.EndingNumber is defaulted to 0xFFFFFFFF if none is supplied. CharacterSet  Not Inferred SchemaGeneratorFlags fCOLUMNMETA_CACHE_PROPERTY_MODIFIED fCOLUMNMETA_CACHE_PROPERTY_CLEARED fCOLUMNMETA_EXTENDEDTYPE0 fCOLUMNMETA_EXTENDEDTYPE1 fCOLUMNMETA_EXTENDEDTYPE2 fCOLUMNMETA_EXTENDEDTYPE3 EXTENDEDTYPE0-3 are inferred from the type.  They are used to describe IISSynID (ADSI concept).  The Property's type is mapped to a SynID as follows: DWORD STRING EXPANDSZ MULTISZ BINARY BOOL_BITMASK MIMEMAP IPSECLIST NTACL HTTPERRORS HTTPHEADERS So these 4 bits are inferred.  From the type, then bit shifted into place.  To map from MetaFlagsEx to SynID:  SynID=(MetaFlagsEx>>2)&0x0F;                          fCOLUMNMETA_PROPERTYISINHERITED fCOLUMNMETA_USEASPUBLICROWNAME Validation fCOLUMNMETA_USEASPUBLICROWNAME should only be set on column whose MetaFlags fCOLUMNMETA_ENUM bit is set. Only one column can be marked as fCOLUMNMETA_USEASPUBLICROWNAME fCOLUMNMETA_EXTENDED By Position fCOLUMNMETA_EXTENDED is inferred as true when compiling extended schema.  It is used to distinguish between Microsoft  shipped  schema and  user-defined  schema. fCOLUMNMETA_MANDITORY NotInferred fCOLUMNMETA_XMLBLOB By position XMLBLOB columns may not also be marked as PRIMARYKEY or NOTPERSISTABLE ciTagMeta  Inferrence via Other Tables and/or Columns ciTagMeta is the count of TagMeta whose Table equals ColumnMeta.Table and whose ColumnIndex equals ColumnMeta.Index. iTagMeta  Inferrence via Other Tables and/or Columns iTagMeta is an index to the first TagMeta whose Table equals ColumnMeta.Table and whose ColumnIndex equals ColumnMeta.Index.  Or zero if no tags exist for this column. iIndexName  Compilation Plugin DefaultValue(0) UserType DefaultValue(0) Attributes DefaultValue(0) PublicColumnName  Inferrence via Other Tables and/or Columns ColumnMeta PublicColumnName is set to be the same as the ColumnMeta.PublicName if one is not supplied. ColumnMeta.PublicColumnName should be validated to be a legal C++ variable name and WMI name. TagMeta Table  By Position ColumnIndex  By Position InternalName  Validation TagMeta.InternalName must exist. TagMeta.InternalName should be validated to be a legal C++ variable name and WMI name. PublicName  Inferrence via Other Tables and/or Columns TagMeta.PublicName is set to the TagMeta.InternalName if none is supplied. TagMeta.PublicName should be validated to be a legal C++ variable name and WMI name. Value  By Position Enum tags work like C enums:  if no value is specified, the TagMeta.Value is one greater than the previous (starting at zero if the first tag has no value specified).  Flag work in a similar way: if no value is specified, the TagMeta.Value is the previous value times two or bit shifted once to the left (starting at one if the first tag has no value specified). Not Inferred IndexMeta Table  By Position Table is a primarykey so it cannot be NULL InternalName  Not Inferred IndexMeta.InternalName is a primary key so it must not be NULL. IndexMeta.InternalName should be validated to be a legal C++ variable name and WMI name. PublicName  Inferrence via Other Tables and/or Columns IndexMeta.PublicName is inferred from the IndexMeta.InternalName if one is not supplied. IndexMeta.PublicName should be validated to be a legal C++ variable name and WMI name. ColumnIndex  Inferrence via Other Tables and/or Columns ColumnIndex is the ColumnMeta.Index whose Table matches IndexMeta.Table and whose InternalName matches IndexMeta.ColumnInternalName. ColumnInternalName  Validation There must exist a ColumnMeta whose Table matches IndexMeta.Table and whose InternalName matches IndexMeta.ColumnInternalName. MetaFlags Default Value (0) fINDEXMETA_UNIQUE fINDEXMETA_SORTED QueryMeta Table  By Position Table is a primarykey so it cannot be NULL InternalName  Validation QueryMeta.InternalName is a primary key so it must not be NULL. QueryMeta.InternalName should be validated to be a legal C++ variable name and WMI name. PublicName  Inferrence via Other Tables and/or Columns QueryMeta.PublicName is inferred from the QueryMeta.InternalName if one is not supplied. QueryMeta.PublicName should be validated to be a legal C++ variable name and WMI name. Index  By Position CellName  Validation CellName is defaulted to L  is not supplied. If CellName is provided and CellName is not CellName equals L __FILE , it must match a ColumnMeta whose InternalName and a ColumnMeta.Table must match the QueryMeta.Table. Operator  Default Value Operator is set to  EQUAL  (zero) if not supplied. MetaFlags  Default Value (0) fQUERYMETA_ALL fQUERYMETA_ANY RelationMeta PrimaryTable  Validation PrimaryTable must not be NULL and must match a TableMeta.InternalName. PrimaryColumns  Name to Numeric Mapping There must be as many PrimaryColumns as there are primary keys in the primary table. ForeignTable  Not Inferred ForeignTable must not be NULL and must match a TableMeta.InternalName. ForeignColumns  Name to Numeric Mapping There must be as many ForeignColumns as there are primary keys in the primary table. Each ForeignColumn must map to a PrimaryColumn of the same ColumnMeta.Type. Each ForeignColumn must map to a PrimaryColumn of the same ColumnMeta.Size. Each ForeignColumn must map to a PrimaryColumn of the same ColumnMeta.FlagMask. Each ForeignColumn must map to a PrimaryColumn of the same ColumnMeta.StartingNumber. Each ForeignColumn must map to a PrimaryColumn of the same ColumnMeta.EndingNumber. Each ForeignColumn must map to a PrimaryColumn of the same ColumnMeta.CharacterSet. Each ForeignColumn must map to a PrimaryColumn of the same ColumnMeta.MetaFlags set (fCOLUMNMETA_BOOL | fCOLUMNMETA_FLAG | fCOLUMNMETA_ENUM | fCOLUMNMETA_FIXEDLENGTH | fCOLUMNMETA_HASNUMERICRANGE |fCOLUMNMETA_LEGALCHARSET | fCOLUMNMETA_ILLEGALCHARSET | fCOLUMNMETA_NOTPERSISTABLE | fCOLUMNMETA_MULTISTRING | fCOLUMNMETA_EXPANDSTRING |                                                fCOLUMNMETA_UNKNOWNSIZE | fCOLUMNMETA_VARIABLESIZE) If a containment relation, each ForeignColumn must map to a PrimaryColumn of the same ColumnMeta.MetaFags set (fCOLUMNMETA_NOTNULLABLE) MetaFlags  DefaultValue (0) fRELATIONMETA_USECONTAINMENT There can be only one containment relationship per ForeignTable. fRELATIONMETA_CONTAINASSIBLING Tables marked with this flag should infer the USECONTAINMENT flag. ServerWiringMeta By Position A table s ServerWiringMeta is inferred from a ServerWiringMeta element specified as a child of the DatabaseMeta, if no ServerWiringMeta is specified as a child to the TableMeta. Table By Position Table is a primarykey so it cannot be NULL Order  By Position Order is a primarykey so it cannot be NULL ReadPlugin Default Value(0) ReadPlugin is defaulted to RPNone (0) if none is specified. WritePlugin Default Value (0) WritePlugin is defaulted to WPNone (0) if none is specified. Interceptor Default Value (0) Interceptor is defaulted to NoInterceptor (0) if none is specified. At least one of the following must be non zero: ReadPlugin, WritePlugin, Interceptor. InterceptorDLLName Default Value (0) If InterceptorDLLName of L catalog.dll  is specified, it is replaced with the default value of 0. Flags Default Value (0x2D) (fSERVERWIRING_META_First fSERVERWIRING_META_Next fSERVERWIRING_META_Last fSERVERWIRING_META_NoNext fSERVERWIRING_META_WireOnWriteOnly fSERVERWIRING_META_WireOnReadWrite fSERVERWIRING_META_ReadOnly) Flags is defaulted to (First | NoNext | Last | WireOnReadWrite) or 0x2D if none is supplied. Flags can specify WireOnReadWrite or WireOnWriteOnly but not both. Flags can specify First or Next but not both. Locator Not Inferred Reserved Default Value Reserved should be set to 0. Merger  Default Value (0) Merger is defaulted to WPNone (0) if none is specified. You cannot have ReadPlugin s and WritePlugin s when Merger is specified MergerDLLName If MergerDLLName of L catalog.dll  is specified, it is replaced with the default value of 0. ReadPluginDLLName If ReadPluginDLLName of L catalog.dll  is specified, it is replaced with the default value of 0. WritePluginDLLName If WritePluginDLLName of L catalog.dll  is specified, it is replaced with the default value of 0.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\modifying meta for the columnmeta table.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Com+ Modifying Meta for the ColumnMeta table TitleModifying Meta for the ColumnMeta table Stephen Rakonza Normal.dot Stephen Rakonza Microsoft Word 9.0Modifying Meta for the ColumnMeta table List of File Requiring Change $/Config/common/catutil.exe  $/Config/info/Inferrence Rule for Catalog Meta Tables.doc  $/Config/src/core/schemagen/TComCatMetaXmlFile.cpp  $/Config/src/core/schemagen/TComCatMetaXmlFile.h  $/Config/src/core/schemagen/TMetaInferrence.cpp                                                                     $/Config/src/core/schemagen/TColumnMeta.h  $/Config/src/core/schemagen/XMLUtility.h  $/Config/src/inc/catmeta.xms  $/Config/src/inc/catmeta_core.xml  $/Config/src/inc/MetaTableStructs.h  $/Config/src/inc/FixedTableHeap.h $/Config/src/core/schemagen/TMetabaseMetaXmlFile.cpp                                                                Steps Updating CatUtil.exe Add the new columns to ColumnMetaPublic in MetaTableStructs.h. Increment kFixedTableHeapVersion Add the new columns to TcolumnMeta.h Add the new attributes to CatMeta.XMS Add the new columns to CatMeta_Core.XML Add the new  m_bstr_  variables to the TComCatMetaXmlFile object (in TComCatMetaXmlFile.h) Add the new   define to XMLUtility.h Initialize the new  m_bstr_  variables in the TComCatMetaXmlFile constructor (TComCatMetaXmlFile.cpp) Modify TComCatMetaXmlFile.cpp::FillInThePEColumnMeta (TComCatMetaXmlFile.cpp) to read in the new columns. Update the  if(InheritsColumnMeta) .  Note that UI4 value explicitly specified overrides the property the column inherited from.  And flag values are Ored with the inherited flags. Update the   clause. Modify TComCatMetaXmlFile.cpp::AddColumnByReference (TComCatMetaXmlFile.cpp). Update  Inferrence Rule for Catalog Meta Tables.doc .  Remember, UI4 values in Meta tables may NOT be NULL. Modify TMetaInferrence::InferColumnMeta (TMetaInferrence.cpp) Modify TMetabaseMetaXmlFile.cpp so that the new column gets initialized (see everywhere a ColumnMeta struct is instantiated). Updating Catalog.DLL Once CatUtil is building correctly, and consuming the updated CATMETA_CORE.XML without errors, rebuild the entire Catalog tree (since SRC\INC has changed).
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\mergeinterceptor.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft URT Configuration in the December release Title _PID_HLINKSURT Configuration in the December release Markus Horstmann This documents collects the configurable items in the URT December'99 release. COM+ Template.dot Marcel van der Holst Microsoft Word 9.06X[Xh ;X[Xh 1b<z+ u<X[Xh alJlR MX[Xh G3QN; 0rUz~ VX[Xh TGNa8 Tf"f  cRl:6 krmx_ pX[Xh ,Lyvo: @\\RED-PRN-12\CORP0066 Ne01: winspool HP LaserJet 5Si/5Si MX PS \\RED-PRN-12\CORP0066 Letter \\RED-PRN-12\CORP0066 Letter Selectors.doc_0#7= qA<wW` q^,A) ?A^>O VVahS TisoU iLK+& .,{GTu N^g;o +Xv2N 'ew>y SFx2ffS v~Ly3 TN:E&'5b; y?i2N x ^'= VAY77 ? `XC d+wMr1 g }E[ ypen8 Kd27Z (_mT1 ~G|KF fRG2P' c3VLzL eIx!_ ]?18! r??(W -fYmv }~ev~ S&V~yb CH% p zlzzZl f:-5@Y :n|l; 4;i"a mNG}/ |SLW[ w-7?a O7L7?a 2Oa^i<U bLWS' [<N:I Q>.>2 ObD''?S P\N^"J k's!4AJID="{F348169F-7F2E-4564-95F1-5840822C357E}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" VersionCompatible32="393222000" CMG="6D6FDA38E652EA52EA52EA52EA" DPB="8B893C5E5B5F5B5F5B" GC="A9AB1E631F631F9C" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 &H00000002={000209F2-0000-0000-C000-000000000046};Word8.0;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:  Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Normal VGlobal! Pre decla lateDeri $CustomukcJj Win16 Win32 Project- stdole MSFormsC TemplateProject Office ThisDocument< _Evaluate NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal Normal VISXDATALibY VisioExtendedData12 DocumentjProject \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> DD452EE 1-E08F-1 01A-8 2608C4D0 DFM20 .DLL#Mic rosoft  ibrary/ 00}#0 CAC154 11-CFB5- 49D5-B38 B-92BA3A@C5A415 OCUME~1\ MARCEL~1 .RED\LOC Temp \VBE\ lateD ram File aOffic s\COM e2DF8D0 4C-5BFA @B-BDE5@~A 7D9`MSO97  x8.0,Q  dalc VISXDAT G{FE9117 F6-98C5- 11D1-B7F A 60081C2@68D}#1 :\K Visio \Solu  Extra .dll#  Type_q EBB57 0AF-482B -4A46-8D C1-D4032 56B932 rp\Word Document h`:*s <o@\u ewMaaMicrosoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6" WMFC  Arial "System  Arial "System ClientT  Arial  Arial  Arial Mergeta CoordinatoroT ReadT CachetT  Arial  Arial Mergeta CoordinatoroT Writetp CachetT  Arial  Arial  Arial UpdateableT StoretN ReadT CachetT  Arial  Arial UpdateableT StoretN Writetp CachetT  Arial 1. Insert  Arial 3. Delete  Arial 2.Update%  Arial 4. UpdateStore%  Arial 5. Insert / Update / Delete  Arial 6. UpdateStore%Pages Page-1 _VPID_PREVIEWS _VPID_ALTERNATENAMES _PID_LINKBASEmarcelvVisio (TM) Drawing rial@ ingdz otype So Symbol 7AOY@; 6Pu`k tKf*2| iW?i?{4 $YkU1 $q$qZ JrKq@obd 2oaoa /'/9/K/]/o/ aB?T?f?x? .e_OqO #_5_G_ Y_k_}_ AoSoeowo QN3L/^/p/ WOiO{O o&o8oJo D-PRN-12 \CORP006 ?Letter /*/</N/`/r/ ?&?8?J4 winspo \\RED -PRN-12\ CORP0066 NPI6325?32:RAW Black &  White or Schem es... `'Set _the c 0this  document Merge  Coordina Read7 m/,/0 W-eUpd ateable  Store CacheC /H/@ ? Write @EoWoio{o Client O#O5OGOYO *_<_N_`_r_ ic;_M^ `4/F/X/j/|/ z[@@?R?d?v? O.O@OROdOvO . Insert . Delete  O+_=_ 2.Upda /&/8/J/\/n/ f,?>?P?b?t? Ob_t_ O^OpO SStor AoSoeo D:\Pr ogram Fi les\Visi o\Soluti  Extr as\Backg rounds.v D:\Pr ogram Fi les\Visi o\Soluti ons\Bloc k Dia asic Sha pes.vss rogram F iles\Vis io\Solut ras\Bord ers and  Guide TheDoc Page-1 ure Form Visio 90 Connector Visio 00 Visio 01 Visio 02 Visio 03 Visio 10 Visio 11 Visio 12 Visio 13 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 70 Visio 80 Basic Basic Shadow SchemeName <3.d3. E/W/i/{/ ?/?A?S? 9 _S_+ Attri P = " ThvPDocum {00021PA 0046} Global Bustomi `.yPL #q@vQ_u UsuPc Win16 ~!$32 Project tdole _Evalu %B_var_ C?olor2FJ!m% h%@p" D4_DEO 4k`NM?|_ 020430 6}#2. #C:\WI T\Syste b#OLE  "{805531 35-032D- PA6A4- 801AE584 F005}H {)/&HU e="h*H lpContexut nComp@`bl e32="393 ="B6B4C5 13CD7305 qPB=" EAE8996F ="1E1C6D BB95DBC8 Host Ext ender In p640- CF90-11C F-8E43-0 0A0C911 A};VBE;5yMicrosoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6" WMFC " WMFC " WMFC " WMFC  Arial "System  Arial "System Merge Coordinatorca  Arial Transformer  Arial  Arial ISTRead2! (File 1)'  Arial Mergera  Arial ClientT  Arial  Arial ISTRead2! (File 2)'  Arial  Arial ISTRead2! (File 3)'  Arial  Arial  Arial  Arial IMerge  Arial ITransform  Arial  Arial  Arial  Arial ISTRead2  Arial ISTRead2  Arial ISTRead2  Arial ISTWrite2  Arial Merge Interceptorca  Arial  Arial ISTInterceptor  Arial DispensereT  Arial  Arial ISTDispenser2  Arial  Arial Store InterceptorcN (XML, Complib, etc)  Arial  Arial ISTInterceptor  Arial 1, 6, 92%  Arial  Arial  Arial  Arial  Arial  Arial  Arial  ArialPages Masters Page-1 Square Interface _VPID_PREVIEWS _VPID_ALTERNATENAMES _PID_LINKBASEmarcelvVisio (TM) Drawing rial@ ingdz otype So Symbol 7AOY@; 6Pu`k tKf*2| iW?i?{4 $YkU1 $q$qZ JrKq@obd 2oaoa /'/9/K/]/o/ aB?T?f?x? .e_OqO #_5_G_ Y_k_}_ AoSoeowo QN3L/^/p/ WOiO{O o&o8oJo D-PRN-12 \CORP006 ?Letter /+/=/O/a/s/ ?'?9?K3 winspo \\RED -PRN-12\ CORP0066 NPI6325?32:RAW Square. 7Copyrig ht 1999  Visio Co rporatio n.  All  4"s reser ? _Sba. chm!#224_17 8B_T_ _f_.e Repres ents the  use of  a type t o descri exter nally-vi sible be havior lass, co/mpon s&#}! M?_?q?P 'IO4  D#;%9% UML Bac kground  Add-on /CMD=10 D#Y&%W eut ` GD$8S ?-o?f;#(R# is_D112. chm!#20 opyright `io C orporati on.  All bs rese rved. "t!t!3 List the  diagram s contai ning sha is Inte rface Show  bship's play Sem antic Er %Prope  Bt5p Resize ?Circle{ [ O4qiP rols. lack & W r Scheme `'Set t 0this d ocument PTATA A?X&ANW&A ?X^1NW^1?X ?X/1NW/1?X Q?XH1NWH1 ?X#QNW#Q?X'QNW'Q ?X+QNW+Q?X/QNW/Q ?X3QNW3Q?XTANS Trans> rge Coor?dinatoT ]Fs6oO] TRead2 File 1)?/ !?3?u/ LBCxg #{"E6O /"/4/F/X/j/ Ob_BOTO (_:_L_ o1oCo erger 6&/8) Client SOeOwO rge Inte rceptor TRead2 ( File 2) f7/I/[/m/ =OOOaO 3uOW_i_ rJdGUia CQ~Y: B{q{q Ea"aiaya$B/g ycOomoUCP Ia!/*/</N/ ?|wqPg IMerge Transfor ?OQOcO _@0_B_T_fQh)dS /:o5/G/Y/ 5?G?Y?) _$_6_H_c_l_~_  o2oDoVoho Lnib< B!B!m/L ESoeo ISTRea O0OBOTOfOxO @*?i5 _&_8_J_\_ tercepto /7_BoTo S7?W3 I%U{1 aoy32 ML, Comp lib, etc ispenser $%U<S `Z!#O(3 Z!qbd m!-I( +Nk;C ^/p$. $?6?H?Z?@l?~? _"_4_ F_X_j_|_ Lnib< Interce _$_6_ , 6, 9 os_+o V_aosoI? AOSOG wo6oHo ?.?@?R? D:\Pr ogram Fi les\Visi o\Soluti  Extr as\Backg rounds.v D:\Pr ogram Fi les\Visi o\Soluti ons\Bloc k Dia asic Sha pes.vss rogram F iles\Vis io\Solut ras\Bord ers and  rogram F iles\Vis io\Solut are\UML  Componen?t.vss Guide TheDoc Page-1 ure Form Visio 90 Connector Visio 00 Visio 01 Visio 02 Visio 03 Visio 10 Visio 11 Visio 12 Visio 13 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 70 Visio 80 Basic Basic Shadow Square SchemeName Interface UMLShapeType bjectGUI UMLError resOptio UMLVersion Interface.23 Interface.24 Interface.13 Interface.36 E/W/i/{/ ?/?A?S? 1 _S_ Attribut e VB_Na~ P = "Th Documen 021PA21- dCrea BExpo Templ ateDeri |SG}PA Visio ~!$32 MergeC oordinat Evalu `0430- #2.0#0 \WINNT ystem32 _EO$[-k`B> c2.tlb LE Auto mation [ombp) FC-21FF- 419C-A04 2-C5A160 A4F5E0}@ :t%=p)/&HM e="N-@ HelpCont  nComp ble32="3 93222M MG="CDCF 1C7A2C50 qPB=" A7A576AC 8A5C655D GC="81 83505551 0Extend er Info] 5v1={38 32D640-C F90-11CF -8E43-00 A0C91100 5A};VBE; L{.t{. ATQ#I TU nY DbjbjU Merge Interceptors High Level Design October 6, 2000, Draft Rev 0.4 Marcel van der Holst  COMMENTS  \* MERGEFORMAT  This documents describes the High Level Design of Merge Interceptors. TOC \o "1-3" Purpose  PAGEREF _Toc506691124 \h  References  PAGEREF _Toc506691125 \h  Audience  PAGEREF _Toc506691126 \h  Introduction  PAGEREF _Toc506691127 \h  Scenarios  PAGEREF _Toc506691128 \h  Detailed Overview  PAGEREF _Toc506691129 \h  Merge Interceptor  PAGEREF _Toc506691130 \h  New Query Cell type  PAGEREF _Toc506691131 \h  Implementing the Merge Interceptor  PAGEREF _Toc506691132 \h  The Merge Coordinator  PAGEREF _Toc506691133 \h  Update Semantics  PAGEREF _Toc506691134 \h  Transformers  PAGEREF _Toc506691135 \h  Transformer Types  PAGEREF _Toc506691136 \h  Specifying Transformer Type in schema  PAGEREF _Toc506691137 \h  IConfigTransformer Interface  PAGEREF _Toc506691138 \h  Defining Custom Transformers  PAGEREF _Toc506691139 \h  Mergers  PAGEREF _Toc506691140 \h  Merger Interface  PAGEREF _Toc506691141 \h  Merger Types  PAGEREF _Toc506691142 \h  Merger Definition  PAGEREF _Toc506691143 \h  Defining Custom Mergers  PAGEREF _Toc506691144 \h  CATUTIL changes  PAGEREF _Toc506691145 \h  Performance Requirements  PAGEREF _Toc506691146 \h  Open Issues  PAGEREF _Toc506691147 \h  Revision History  PAGEREF _Toc506691148 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Purpose This document describes the merge interceptor. References Technical Specification for Simple Tables v2 and The Project42 Catalog, 1999, version 2 draft 60, Robert Craig Hierarchy & Merge Interceptors, November 2, 1999, Draft Rev 0.5, Markus HorstMann Audience It is assumed that the reader is familiar with the configuration system, and has read the information listed in the references section. Introduction In the current configuration system, there is always a one-to-one relation between configuration type and configuration store. Whenever you retrieve information, you only need to know the name of a single configuration store. Sometimes, it is useful to retrieve information from multiple configuration stores and combine this information. Merge Interceptors in combination with Transformers are used to provide this functionality to the configuration system. A Merge Interceptor combines the information from multiple configuration stores, and shows this information as if it came from a single configuration store to the configuration system. Transformers are used to determine which configuration stores should be used as input for the Merge Interceptors. Scenarios When a web server runs an application, it uses the configuration files that are part of the application to ensure that the application is initialized in the correct way. The configuration files for the application are the file that contains machine-wide configuration settings, the file that contains application specific configuration settings, and all configuration files in parent directories. In the .NET framework, applications run in an Application Domain. To get all configuration information for an Application Domain, we need to combine the local machine configuration file and the application configuration file. Detailed Overview The following diagram shows the interaction between the different components that make merging possible in the configuration system. The individual components are discussed in more detail in the following sections. The numbers that are used in the diagram indicate the sequence in which components get invoked. They are described in more detail below the diagram.  EMBED Visio.Drawing.6   Figure   SEQ Figure \* ARABIC  , Merging Component Overview The client calls GetTable ( myTable  HYPERLINK "http://ms.com/foo"  http://ms.com/foo ) on the Dispenser. The Dispenser searches for the correct interceptor. When the table does not have a Merge Interceptor defined, the dispenser will forward the request to the correct store interceptor (i.e. XML Interceptor). Suppose now that a Merge Interceptor is defined for myTable. The Dispenser creates the Merge Interceptor, and calls Intercept on it, passing in the table name and the query string. The Merge Interceptor checks the query cells. If the Interceptor does not find a query cell of type IST_CELL_SELECTOR, it will return E_OMIT_DISPENSER, indicating that it cannot handle the request. This means that the next interceptor (i.e. store Interceptor) will be used for this query to handle the request. When it finds a query cell of type iST_CELL_SELECTOR, it means that it knows how to handle the query, and it will create the Merge Coordinator and forwards the GetTable request to the Merge Coordinator. The Merge Coordinator creates the correct transformer, and passes it the selector string. The transformer uses this string to create the correct queries (i.e. it can create a query cell for each file that needs to be merged). The Transformer is responsible for returning the queries in the correct order, so that merging will be done correctly. The last query (i.e. last configuration store) returned from the Transformer will be used to store the updates that are made against the merged results. The Merge Coordinator issues a GetTable call to the dispenser for each individual query. It does this in the order the queries are returned from the Transformer.  For each individual GetTable call, the Dispenser will call the Merge Interceptor again, but because the query type specifies a single file name now, the Merge Interceptor returns E_OMIT_DISPENSER. The Dispenser will try the store interceptor as the next  First  Interceptor, which is exactly what needs to happen. The store interceptor handles the request by opening the requested store, and returning an ISimpleTableRead2 interface pointer to it. The Merge Coordinator calls the Merger in a loop for each interface that is created in the previous step. The Merger does the actual merging of data. The Merge Coordinator returns an ISimpleTableWrite2 pointer to the Merge Interceptor, which will return the ISimpleTableWrite2 pointer to the client. Merge Interceptor The Merge Interceptor is responsible for intercepting Merge Requests for a particular table. The Merge Interceptor implements the ISimpleTableInterceptor interface, and can therefore easily be plugged into the existing configuration system. This means that only minimal changes (like adding code to get the new interceptor) have to be made to the Dispenser, and that the existing code path will not be affected in any way by the addition of the Merge Interceptor. This also means that the performance of applications that do not use the Merge Interceptor will not be affected by the addition of the Merge Interceptor. When a request comes in for a particular table, the Dispenser checks which  First  interceptors (Metaflags=  First ) are defined for that table. It will try to call Intercept for each of these interceptors, and as soon as one of the interceptors succeeds, the Dispenser will use that interceptor. Note that if one of the interceptors fails, the Dispenser will try the next  First  interceptor that is defined for that table. A table that wants to use a merge interceptor has to define at least two interceptors: the Merge Interceptor to make merging work, and a store interceptor (e.g. XML Interceptor) to retrieve the actual information from a configuration store. The reason for this is that the Merge Interceptor will eventually forward the GetTable calls to the store interceptor to retrieve the data that needs to be merged. A table that has just a Merge Interceptor defined and no store Interceptor is invalid, and GetTable calls for that table will fail. To make merging work, the order in which the interceptors are defined in the wiring is crucial: the merge interceptor must be defined before the store interceptor (e.g. XML interceptor). The Merge Interceptor checks if the request that comes in has a query cell of type iST_CELL_SELECTOR. If this is not the case, the Merge Interceptor returns E_ST_OMIT_DISPENSER, meaning that it could not handle the request.  If the request is of type iST_CELL_SELECTOR, the Merge Interceptor creates the Merge Coordinator, which will handle the request from than onwards.  The Merge Interceptor will be implemented as a Singleton, and must be thread-safe.  To define the Merge Interceptor in the wiring, a new ServerWiring element needs to be added to the collection. This is exactly the same as with any other Interceptor. <Collection InternalName= myTable <ServerWiring Interceptor= MergeInterceptor <ServerWiring Interceptor= Core_XMLInterceptor </Collection> New Query Cell type A new Query Cell type, called iST_CELL_SELECTOR will be defined that will be used for merge interceptors. This query cell type indicates that the query cell contains a selector string that can be used by the merge interceptor to determine whether we have a request for a single file or whether we need to invoke a transformer to get a collection of configuration stores. The selector string contains two parts: A Protocol, which uniquely identifies the Transformer that will be used A LogicalString, which is the logical name of the configuration and will be used by the Transformer to find the physical location of the configuration stores. The format of the selector string is  <protocol>://<LogicalString> Examples are   HYPERLINK "http://ms.com"  http://ms.com  HYPERLINK "ftp://ms.com"  ftp://ms.com , localmachine://, appdomain://, etc. Note that the Protocol is just a string that uniquely identifies the type of Transformer that we want to use. Example: ISimpleTableWrite2 *pISTWrite; HRESULT hr; STQueryCell aMyQuery[] = {{  HYPERLINK "http://ms.com/bar/zee"  http://ms.com/bar/zee eST_OP_EQUAL,  iST_CELL_SELECTOR,  DBTYPE_WSTR,  ULONG cMyQueryCells = (sizeof(aMyQuery)/sizeof (STQueryCell)); hr = GetTable ( myTable , (void *) aMyQuery, (void *) &cMyQueryCells,   eST_QUERYFORMAT_CELLS, fST_LOS_READWRITE, (void **)&pISTWrite); Implementing the Merge Interceptor [ImplementationDetails] The Merge Interceptor will be implemented inside catalog.dll. The interceptor could be implemented in a separate DLL, but because of performance reasons and the fact that the Merge Interceptor is likely to be used in different settings of the configuration system, it is better to implement it directly inside the catalog. To implement the Merge Interceptor, the following changes need to be made to the existing configuration system: In catmeta_core.xml, find the SERVERWIRINGMETA Collection. This collection has a Property called Interceptor, which is an enumeration of all known interceptors. Add a new Enum at the bottom with Internalname= MergeInterceptor  and Value= In catinproc.cpp, find the function DllGetSimpleObjectByID. Add a new case inside the switch statement for the Merge Interceptor and add a new function GetMergeInterceptor that creates the Merge Interceptor. Create a new class that implements the Merge Interceptor functionality. This class implements the ISimpleTableInterceptor and ISimpleTableAdvanced interfaces. The Merge Interceptor is a library with the name mergeinterceptor.lib. This library needs to be added to the list of libraries in the sources file in the catinproc directory. The Merge Coordinator The Merge Coordinator implements the ISimpleTableWrite2 and ISimpleTableAdvanced interfaces and is responsible for the following tasks: Creating and invoking the Transformer Creating and invoking the Merger Storage and updating of the merged results To create and invoke both the Transformer and Merger, the Merge Coordinator uses the information that is defined in the schema and the information in the query string. For each Table that requires merging, the user has to specify Merger to use, while the protocol part of the selector string specifies which Transformer to use. The sections about Transformers and Mergers go into more detail about this, but it should be noted that the Merge Coordinator implements the code to figure out which Transformer and Merger to use. After the transformer and merger are created, the Merge Coordinator needs to populate the local cache that it contains. It does this by calling GetTable for each query cell that was returned by the transformer, and passing the interface pointers that where returned by GetTable to the Merger. After the merging is finished, the cache in the Merge Coordinator contains the data that will be seen by the client as the merged data. The Merge Coordinator returns an interface pointer to itself back to the client, and therefore acts like a proxy between the client and the data cache. To ensure that we can handle complex queries (i.e. Give me the merged results of six files, but only the rows for which the value of the second column equals 763), the Merge Coordinator needs to split the QueryCells that gets passed in via GetTable into two categories: The Query Cell with the Selector String All other Query Cells The Query Cell with the Selector String will be used by the Merge Coordinator to identify the Transformer that needs to be created (by using the Protocol part of the string), and it will pass the selector string to the Transformer. The Transformer returns a Single Query cell that contains the location of the configuration store.  Next, The Merge Coordinator clones the query cells that were passed in via GetTable, it ignores the SELECTOR query cell, and add the configuration store query cell to the array of query cells. This means that the query cell array does not contain a SELECTOR query cell anymore, but it contains a configuration store locator query cell. The Merge Coordinator is also responsible for updates made to the merge data. It ensures that the information is propagated to the correct configuration store, and that an update to the merged data results in either an update or insert to the configuration store, depending on whether the data came from this store or not. The main reason to have a Merge Coordinator is to make it easy for people to write new Transformers or Mergers. The person writing the new merger does not have to implement all the functions in ISimpleTableWrite2, but only has to describe the merge semantics in the Merger. This greatly simplifies Merger and Transformer development. Update Semantics The Merge Coordinator keeps track of two different read / write caches: The read / write cache for the merged data The read / write cache of the configuration store that is used for updates. This is normally the last configuration store that is returned from the Transformer. Changes are only made to the configuration store after UpdateStore is called for the Merge Coordinator. The reason to do this is to keep the read and write cache of the Merge Coordinator in synchronization. Also, it makes it easier to do the conversion (see below) in one function. The following diagram shows both caches, and the steps involved in updating both caches in cases of writes:  EMBED Visio.Drawing.6   Figure   SEQ Figure \* ARABIC  , Merge Coordinator Cache Semantics The diagram shows that Inserts, Updates and Deletes (1,2,3) are only done to the Merge Coordinator cache. This means that this cache is always in sync with relation to the merged data. However, note that this not necessarily reflects the underlying updateable store, because we can have rows in the Merge Coordinator read cache that came from different configuration stores. This means that the Merge Coordinator needs to synchronize the data with the updateable store before it can write the updates to disk. The Merge Coordinator does this synchronization during UpdateStore (4). When UpdateStore is called, the following algorithm is used for each row in the Merge Coordinator Write Cache  (pMyStore is interface pointer to updateable store): Insert  Call pMyStore->AddRowForInsert, and copy the information. Update Call pMyStore->GetRowIndexByIdentity. If the row exist, do pMyStore->AddRowForUpdate, followed by copying the columns that have changes. If the row does not exist, call  pMyStore->AddRowForInsert and copy all the information. Delete  Call pMyStore->GetRowIndexByIdentity. If the row exist, call pMyStore->AddRowForDelete. If the row does not exist, do nothing. When all changes are made, call pMyStore->UpdateStore. Transformers The current configuration system uses physical file names to indicate file names of configuration stores. Although this approach works, it has the drawback that the user has to specify the exact location of a configuration store, and that it is impossible to have information coming from multiple configuration stores. To hide the physical location of a configuration store from the client, a Transformer can be used. A Transformer converts a logical name into one or more physical locations. The physical locations are expressed in the form of queries, which are used by the Merge Coordinator to do the querying against the actual configuration stores. The Merge Coordinator creates transformers by using the protocol part of the selector string. Because there is a one-one relation between protocol and Transformer, the Merge Coordinator simply searches for the correct Transformer. When a Transformer is not found, the Merge Coordinator returns with an error. The reason to retrieve the protocol from the selector string is to make it easier for clients to use Transformers. No changes are needed to the Meta information. The client just adds the protocol string for one of the known Transformers to the selector string and the Merge Coordinator will find out which Transformer to use. Transformer Types The following transformer types are possible: Application Domain Transformer Uses the name of an application domain to return the file names that are relevant for that application domain. The files include the machine configuration file, the user configuration file and the application domain configuration file. The protocol is  appdomain Web Hierarchy Transformer Uses an URL to retrieve all configuration files that are relevant to that URL. This includes all configuration files of parent URL s and the machine configuration file. The protocol is  File Transformer The File Transformer retrieves the file name that is specified in the selector string. The protocol is  Local Machine Transformer The Local Machine Transformer returns the machine-wide configuration file. The protocol is  localmachine During the design of the transformer interface, we should not exclude other selectors that might be needed in the future. An example of such a tranformer is the SQLTransformer. Specifying Transformer Type in schema The following schema describes the TRANSFORMER_META Collection. <Collection  InternalName= TRANSFORMER_META PublicRowName= TransformerWiring MetaFlags= INTERNAL NOLISTENING>   <Property InternalName= Protocol  Type=  MetaFlags= PRIMARYKEY CASEINSENSITIVE   <Property InternalName=  Type= <Enum InternalName= AppDomain Value= <Enum InternalName= WebHierarchy Value= <Enum InternalName= Value= <Enum InternalName= LocalMachine Value=   </Property>   <Property InternalName= DLLName  Type= </Collection> IConfigTransformer Interface HRESULT Initialize ( [in] LPCWSTR I_wszProtocol,  [in] LPCWSTR i_wszSelectorString,  [out] ULONG * o_pcRealConfigStores [out] ULONG * o_pcPossibleStores); HRESULT GetRealConfigStores ( [in] ULONG i_cRealConfigStores,  [in,out] ConfigStore * o_aRealConfigStores); HRESULT GetPossibleConfigStores ([in] ULONG i_cPossibleConfigStores,     [in,out] ConfigStore * o_aPossibleConfigStores); struct ConfigStore { LPCWSTR wszLogicalPath;  // logical path name STQueryCell  query;   // query cell identifying a single configuration store.  The IConfigTransformer interface consists of three functions: Initialize, GetRealConfigStores and GetPossibleConfigStores. The Initialize function initializes the transformer by passing in the selector string, and returns the number of configuration stores. When considering configuration stores, the transformer distinguishes between real configuration stores and possible configuration stores. A real configuration store is a store that is part of the merging, while a possible configuration store is a configuration store that doesn t exist. An example is a file that is part of a web hierarchy, but doesn t exist. This file is a possible configuration store, but not a real configuration store. The reason to break this up, is that the merge coordinator is only interested in real configuration stores, while other parts of the system might be interested in all possible configuration stores. To get the configuration store information, the GetXXXConfigStores function will be called. The reason to have two separate functions is to simplify the memory allocation that needs to be done by the client. The client is responsible for allocating the correct amount of memory for all parameters. HRESULT Initialize ( [in] LPCWSTR i_wszProtocol,        [in] LPCWSTR i_wszSelectorString,  [out] ULONG * o_pcRealConfigStores [out] ULONG * o_pcPossibleConfigStores);      I_wszProtocol Protocol that was used to create this Transformer i_wszSelectorString String that specifies which configuration store information needs to be retrieved in the transformer. This string is different for each transformer. For a webHierarchy transformer, this is http://ms.com/foo/bar/zee. The Selector String does not contain the protocol part. o_pcRealConfigStores Number of real configuration stores that are found by the transformer. o_pcPossibleConfigStores Number of possible configuration stores that are found by the transformer. HRESULT GetXXXConfigStores( [in] i_cConfigStores,  [in, out] ConfigStore * o_paConfigStores); i_cConfigStores Number of configuration stores that can be stored in o_paConfigStores o_paConfigStores An array of configuration stores that gets filled up with configuration information. The client allocates the memory. Example: For XML files: queryInfo->pData  c:\mydir\config.cfg queryInfo->eOperator  = eST_OP_EQUAL; queryInfo->iCell = iST_CELL_FILE; queryInfo->dbType = DBTYPE_WSTR; queryInfo->cbSize The reason to use query cells is that it is more extensible. When in the future the configuration supports new query cells, we can easily create a new transformer that generates these query cells, without making any changes to the public interfaces. When we would expose filenames directly, we can only support transformers that generate filenames, which might not necessarily be the case in the future. Example: Suppose we have the following virtual directories set up for a website:  HYPERLINK "http://ms.com"  http://ms.com -> c:\inetpub\wwwroot  HYPERLINK "http://ms.com/foo/bar"  http://ms.com/foo/bar -> d:\bar When we call  ITransformer * pTransformer; // Get valid transformer (CoCreateInstance or equivalent) ULONG cRealConfigStores; ULONG cPossibleConfigStores; hr = pTransformer->Init (  HYPERLINK "http://ms.com/foo/bar/zee"  http://ms.com/foo/bar/zee &cRealConfigStores,  &cPossibleConfigStores); ConfigStore *pConfigStores = new ConfigStore[cRealConfigStores]; hr = pTransformer->GetConfigStores (cRealConfigStores, pConfigStores); The result is: pRealConfigStores [0].wszLogicalPath   HYPERLINK "http://ms.com"  http://ms.com pRealConfigStores [0].query.pData  c:\inetpub\wwwroot pRealConfigStores [1].wszLogicalPath   HYPERLINK "http://ms.com"  http://ms.com pRealConfigStores [1].query.pData  c:\inetpub\wwwroot\foo pRealConfigStores [2].wszLogicalPath   HYPERLINK "http://ms.com"  http://ms.com /foo/bar pRealConfigStores [2].query.pData  d:\bar pRealConfigStores [3].wszLogicalPath   HYPERLINK "http://ms.com"  http://ms.com /boo/bar/zee pRealConfigStores [3].query.pData  d:\bar\zee cRealConfigStores = 4; Defining Custom Transformers [ImplementationDetails] To define your own custom Transformer in a separate DLL (say transfomer.dll), you have to do the following: Add meta information about the new transformer to catmeta_core.xml Create and implement a class that implements ITransformer in transformer.dll. Export DllGetSimpleObjectByID from transformer.dll. Implement  STDAPI DllGetSimpleObjectByID (ULONG i_ObjectID, REFIID riid, LPVOID *o_ppv) This function returns a pointer to the ITransformer interface that was implemented in step 2. In general, this function creates the new Transformer, and calls QueryInterface on it. i_ObjectID has the internal ID of the Transformer which is defined in catmeta.h and is derived from the schema information defined in catmeta_core.xml. Mergers The merger is responsible for defining the merge semantics between two configuration stores. It describes how the merging of two configuration stores is done. A Merger is created and invoked by the Merge Coordinator by using information defined in the configuration schema. A Merger only supports two-way merges, i.e. it can only handle two configuration files per merge. Note that this does not exclude multiple files from being merged together. It only means that in each merge there are only two files that are merged together. The Merge Coordinator calls the Merger in a loop for all configuration files to merge multiple files. Mergers are defined at either database level or table level, and there can be only a single merger per database table active at any time. When a Merger is defined at database level, the tables in the database will inherit this Merger when there is no Merger defined at table level. Because a Merger is defined at database level, it can assume that the layout of the configuration stores that need to be merged is the same, i.e. the same number of columns and the same data types. This is enforced by the Meta schema, because there is only one way to define the columns and data types for a single table. Whenever a Merger is defined, catutil.exe will automatically insert the Merge Interceptor as the first interceptor for that table. The reason to do this is to enforce the order in which interceptors are defined (i.e. the Merge Interceptor needs to be defined before the other interceptors), and to make it easy for the user to define Mergers. Merger Interface The Merger Interface consists of a single function, called Merge that implements the merge semantics for two configuration stores. The interface is kept simple to enable future mergers to be implemented quickly. interface ISimpleTableMerge : IUnknown HRESULT Initialize ( [in] i_cNrColumns,  [in] i_cNrPKColumns,  [in, size_is(i_cNrPKColumns)] i_aPKColumns); HRESULT Merge ([in] ISimpleTableRead2  * i_pSTRead,  [in,out]  ISimpleTableWrite2  * io_pCache); Parameters: i_pSTRead This is an ISimpleTableRead2 interface pointer to a configuration store. This data from this configuration store will be merged with the data that is kept in the cache that is represented by the io_pCache pointer. io_pCache This SimpleTable acts like the parent during the merge, and contains the results of merging. The merge function merges the information from pSTRead with the information in io_pCache. io_pCache acts like the parent during the merge. The reason to implement the merge interceptor this way is to minimize the amount of copying that has to take place. The cache is a memory table that is retrieved from the Dispenser, and is used by the Merge Coordinator to store the merged data. For each query cell that is returned from a transformer, the Merge Coordinator calls GetTable with information about that query cell, and passes the results to the Merge Interceptor. The order in which the files are returned by the transformer determines the order in which the files are merged. The last file will be used to make updates to the configuration store. Merger Types The following merger types will be implemented: Property Override Merger (POM) This merger implements  last writer wins  inheritance semantics (similar to the IIS5 meta-base inheritance semantics). A non-null property in the child configuration collection simply replaces a property in the parent collection. Items in the parent collection are matched by primary key of the child collection. List Append Merger (LAM) This merger appends the items in the child collection to the end of the parent collection. In case of singletons, the child wins. List Prepend Merger (LPM) This merger appends the items in the parent collection to the end of the child collection. In case of singletons, the parent wins. List Merge Merger [See Merge spec] Merger Definition The merger will be defined as part of the ServerWiring information of the Merge Interceptor. <ServerWiring Interceptor= MergeInterceptor  Merger= <name>  MergerDLLName= <DllName> Merger This is a unique name that identifies the Merger in the configuration system. The configuration system uses this to instantiate the correct Merger. MergerDLLName To make it easier to write Mergers, Mergers can be implemented in a separate DLL.   <Collection InternalName= SERVERWIRING_META  PublicName= ServerWiring     MetaFlags= INTERNAL NOLISTENING>  existing stuff>   <Property InternalName= Merger  Type= <Enum InternalName= PropertyOverride  Value= <Enum InternalName= ListAppend Value= <Enum InternalName= ListPrepend Value= <Enum InternalName= ListMerge Value=   </Property>   <Property InternalName= MergerDLLName  Type= </Collection> Example <Collection InternalName= myTable <ServerWiring Interceptor= MergeInterceptor <ServerWiring Interceptor= Core_XMLInterceptor <Merger Type= ListAppend  DLL= ListAppend.DLL </ServerWiring> Defining Custom Mergers To define your own custom Merger in a separate DLL (say merger.dll), you have to do the following: Add meta information about the new merger to catmeta_core.xml Create and implement a class that implements IMerger in merger.dll. Export DllGetSimpleObjectByID from merger.dll. Implement  STDAPI DllGetSimpleObjectByID (ULONG i_ObjectID, REFIID riid, LPVOID *o_ppv) This function returns a pointer to the IMerger interface that was implemented in step 2. In general, this function creates the new Merger, and calls QueryInterface on it. i_ObjectID has the internal ID of the merger which is defined in catmeta.h and is derived from the schema information defined in catmeta_core.xml. Add the merger to the Merge Interceptor for which you want to use the new merger. CATUTIL changes To make it easy for users to define new mergers, and to minimize the amount of schema changes they have to make, a number of modifications to CATUTIL are needed. Automatic Merge Interceptor Creation When a user defines a Merger for a particular table or database, CATUTIL needs to add a new merge interceptor to the list of interceptors that are defined for this table. Merger Inheritance Semantics Tables that do not have Merge information defined for them, inherit the Merge information that is defined at database level. Multiple Merge Definition Error Message When a table of database has more as one Merger defined, CATUTIL will generate an error message indicating that only a single Merger can be defined for each table. Populate MERGER_META and TRANSFORMER_META tables CATUTIL needs to populate both tables by using the information defined in the schema. ServerWiring inheritance Currently, CATUTIL only uses the first ServerWiring element defined at database level, and ignores all other ServerWiring elements. CATUTIL needs to be updated to remember all ServerWiring elements, so that when a table does not have ServerWiring elements defined, it will inherit all ServerWiring elements that are defined at database level. Performance Requirements Merging of data can be expensive, especially when complicated merges are done. During the implementation the following Performance Requirements need to be met: [List Performance Requirements here] Open Issues In addition to the issues outlined throughout the document, the following items require further attention: I do not like the order dependency of Interceptors. When I define a Merge Interceptor after the XML core interceptor, the whole thing does not work. Is there a way to say that the configuration system should always try a merge interceptor before any other interceptor? We could have a new metaflag that identifies the merge interceptor. Catutil could use this flag to move the merge interceptor in front of any other interceptors.  ANSWER: This might be done in version 2. How much validation needs to be done during merging? Do we need to validate that the number of columns in the different data stores is the same and that the datatypes of these columns are consistent? If so, do we need to do this all the time, or can we do it one time. This issue is especially important when dealing with different tables names in different databases, i.e. what happens when I merge myTable in myDatabase with yourTable in yourDatabase? Note that the last case is possible when using a transformer. ANSWER: We do not support different table names. When use the List Append Merge Interceptor what happens with Singleton collections. Suppose a singleton is defined in both the parent and the child. Which of the singletons is used?  ANSWER: child wins. The Shell hooks up plugins. Is this going to work with our design, i.e. does the plug-in get called twice, once for XML Interceptor and once for Merge Interceptor.  ANSWER: Merge Interceptor gets implemented as full interceptor, not as interceptor plugin. We need to find a solution for adding new Mergers or Transformers without changing catmeta_core.xml. Changing catmeta_core.xml is a hack, and does not give us the extensibility we need, because people still need to run catutil.exe to get the program up and running. Note that there is a bug related to this (45789). At the moment, we are passing in the ID that is assigned in catmeta_core.xml to DllGetSimpleObjectByID. We should have an extensibility mechanism, so that I can define my own ID s in an extended catmeta_core.xml file, and this gets read as well. Which LOS flags do we support? ANSWER: NONE, CONFIGWORK, READWRITE, UNPOPULATED, REPOPULATE Need to describe new virtual column  FileName/Configuration store . How do we represent this, i.e. name is not necessarily unique. This is especially an issue with the Property Override Merger. Should we return a Multistring with all the file names? Comma separated string? What if a configuration store does not have a name? ANSWER: Do we need to implement events? ANSWER: No. Do we have to make changes to existing interceptors when I introduce new Meta Tables? For instance, the MetaMerge Interceptor handles merging of Meta data. Does this interceptor need to be updated as well? What should happen when we do DELETE on a row that does not exist in the updateble store. An example is the list-append merging of two files, where a row in the first file does not exist in the second file. When we delete the row, what should be done to this row? Shouldn t we allow deletes on rows that do not exist? ANSWER: Logic Update/Insert problem: When doing an update to the merged data, we could end up with an Insert in the updateable store. What happens when the logic verification for the insert fails? Should we tell the user that the insert fails, eventhough he was doing an update? ANSWER: Revision History September 27, 2000 Rev 0.1  (Marcelv): Created. October 4, 2000 Rev 0.2  (Marcelv): Incorporated feedback from Radup. October 6, 2000 Rev 0.3  (Marcelv): Incorporated feedback from Radup and Murate. February 13, 2001 Rev 0.4  (Marcelv): Updated Transformer interface. Microsoft Confidential Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\modifying meta for the tablemeta table.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Com+ Modifying Meta for the ColumnMeta table TitleModifying Meta for the ColumnMeta table Stephen Rakonza Normal.dot Stephen Rakonza Microsoft Word 9.0Modifying Meta for the TableMeta table List of File Requiring Change $/Config/common/catutil.exe                                                                             $/Config/info/Inferrence Rule for Catalog Meta Tables.doc                                             $/Config/src/core/schemagen/TComCatMetaXmlFile.cpp                                                                  $/Config/src/core/schemagen/TComCatMetaXmlFile.h                                                                    $/Config/src/core/schemagen/TMetaInferrence.cpp                                                                     $/Config/src/core/schemagen/TTableMeta.h                                                                            $/Config/src/core/schemagen/XMLUtility.h                                                                            $/Config/src/inc/catmeta.xms                                                                             $/Config/src/inc/catmeta_core.xml                                                                        $/Config/src/inc/MetaTableStructs.h                                                                      $/Config/src/inc/FixedTableHeap.h $/Config/src/core/schemagen/TMetabaseMetaXmlFile.cpp                                                                Steps Updating CatUtil.exe Add the new columns to TableMetaPublic in MetaTableStructs.h. Increment kFixedTableHeapVersion Add the new columns to TTableMeta.h Add the new attributes to CatMeta.XMS Add the new columns to CatMeta_Core.XML Add the new  m_bstr_  variables to the TComCatMetaXmlFile object (in TComCatMetaXmlFile.h) Add the new   define to XMLUtility.h Initialize the new  m_bstr_  variables in the TComCatMetaXmlFile constructor (TComCatMetaXmlFile.cpp) Modify TComCatMetaXmlFile.cpp::FillInThePETableMeta (TComCatMetaXmlFile.cpp) to read in the new columns. Update  Inferrence Rule for Catalog Meta Tables.doc .  Remember, UI4 values in Meta tables may NOT be NULL. Modify TMetaInferrence::InferColumnMeta (TMetaInferrence.cpp) Modify TMetabaseMetaXmlFile.cpp so that the new column gets initialized (see everywhere a TableMeta struct is instantiated). Updating Catalog.DLL Once CatUtil is building correctly, and consuming the updated CATMETA_CORE.XML without errors, rebuild the entire Catalog tree (since SRC\INC has changed).
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\netwmiprovider.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft URT Configuration in the December release TitleURT Configuration in the December release Markus Horstmann This documents collects the configurable items in the URT December'99 release. COM+ Template.dot Marcel van der Holst Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags Month 6X[Xh ^`9n{ ;X[Xh 1b<z+ u<X[Xh alJlR MX[Xh G3QN; 0rUz~ VX[Xh TGNa8 Tf"f  cRl:6 krmx_ pX[Xh ,Lyvo: @\\RED-PRN-12\CORP0066 Ne01: winspool HP LaserJet 5Si/5Si MX PS Selectors.docID="{F348169F-7F2E-4564-95F1-5840822C357E}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" VersionCompatible32="393222000" CMG="6D6FDA38E652EA52EA52EA52EA" DPB="8B893C5E5B5F5B5F5B" GC="A9AB1E631F631F9C" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 &H00000002={000209F2-0000-0000-C000-000000000046};Word8.0;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:  Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Normal VGlobal! Pre decla lateDeri $CustomukcJj Win16 Win32 Project- stdole MSFormsC TemplateProject Office ThisDocument< _Evaluate NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal Normal VISXDATALibY VisioExtendedData12 DocumentjProject \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> DD452EE 1-E08F-1 01A-8 2608C4D0 DFM20 .DLL#Mic rosoft  ibrary/ 00}#0 CAC154 11-CFB5- 49D5-B38 B-92BA3A@C5A415 OCUME~1\ MARCEL~1 .RED\LOC Temp \VBE\ lateD ram File aOffic s\COM e2DF8D0 4C-5BFA @B-BDE5@~A 7D9`MSO97  x8.0,Q  dalc VISXDAT G{FE9117 F6-98C5- 11D1-B7F A 60081C2@68D}#1 :\K Visio \Solu  Extra .dll#  Type_q EBB57 0AF-482B -4A46-8D C1-D4032 56B932 rp\Word Document h`:*s <o@\u ewMaa.NET WMI Provider High Level Design October 6, 2000, Draft Rev 0.4 Marcel van der Holst  COMMENTS  \* MERGEFORMAT  This document describes the High Level Design of the .NET Framework WMI Provider. TOC \o "1-3" Purpose  PAGEREF _Toc511797018 \h  References  PAGEREF _Toc511797019 \h  Audience  PAGEREF _Toc511797020 \h  Detailed Description  PAGEREF _Toc511797021 \h  ISimpleTable abstraction layer  PAGEREF _Toc511797022 \h  WMI Interface layer  PAGEREF _Toc511797023 \h  Helper class Layer  PAGEREF _Toc511797024 \h  Configuration classes  PAGEREF _Toc511797025 \h  Associations  PAGEREF _Toc511797026 \h  Special Considerations  PAGEREF _Toc511797027 \h  Open Issues  PAGEREF _Toc511797028 \h  Revision History  PAGEREF _Toc511797029 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Purpose This document describes the high level design of the .NET Framework WMI Provider. References Technical Specification for Simple Tables v2 and The Project42 Catalog, 1999, version 2 draft 60, Robert Craig Hierarchy & Merge Interceptors, November 2, 1999, Draft Rev 0.5, Markus HorstMann WMI documentatation from the Platform SDK Audience It is assumed that the reader is familiar with the configuration system, WMI, and is familiar with writing a WMI Provider. Detailed Description The provider contains three different layers: A layer that hides the ISimpleTable interface and converts catalog datatypes to variants A layer that hides the WMI Interface and forwards all request to helper functions A layer that talks to layer 1 and layer 2, and does all the hard work ISimpleTable abstraction layer The WMI Provider interface uses variants to set values of properties, methods and parameters. The catalog uses C++ types. To avoid conversion from C++ types in different places of the code, a separate class is needed that does conversion from variant to Config types and from Config types to variants. Also, we want to hide the complex ISimpleTable interface from the WMI Provider To provide the above functionality a number of classes was created: CConfigTableMeta This class gets the table and column meta from the catalog for a particular table and stores it in an easy to use format. This class is always used in combination with CConfigRecord and CConfigQuery. CConfigRecord This class converts variants to Config types and Config types to variants. It uses a CConfigTableMeta object to get the meta information, and does the conversion in a single place. The class contains two arrays: One to hold pointers to catalog information One to hold the variants Only a specific points in time, the class will sync the variant and catalog arrays. CConfigQuery This class abstracts the ISimpleTableRead and ISimpleTableWrite interfaces. From the WMI point of view, it only uses CConfigQueries and CConfigRecords, and never deals directly with the catalog. The reason for this is to make changes to catalog or query without having to make a lot of changes to the WMI code WMI Interface layer The WMI Interface layer contains the following classes: CWQLQueryParser Parses a WQL query. CObjectPathParser Parses an WMI Object Path. Helper class Layer This layer maps specific queries and request to specific helper classes. There are a number of different helper classes for the following types: GetObjectAsync request for configuration class The instancehelper class takes care of this (see next section for more details) GetObjectAsync request for association class The CAssocCatalog class takes care of this GetObjectAsync request for non-configuration class  A special purpose function is written for these. Examples are webapplication and codegroup, which have special code that is not stored in the configuration schema. ExecQueryAsync request for configuration class ExecQueryAsync request for association class ExecQueryAsync request for non-configuration class For instance, all GetObjectAsync calls get mapped to the CInstanceHelper class, while all queries get mapped to the CQueryClass. Configuration classes Every class that is defined in a configuration schema is exposed via WMI. To ensure that a WMI class is properly related to a class in the catalog, two extra qualifiers are added to each class: Database This maps to the database name in the catalog InternalName This maps to the internal name in the catalog When a ExecQuery or GetObjectAsync, the WMI Provider find out which class is involved. For this class, it gets the above qualifier, and uses the qualifiers to query the catalog (using the CConfigQuery class). Associations The WMI provider supports different association types. An association type is assigned to all associations for which the code to create the association is the same. For instance, to create an association between two configuration classes, we need to do a certain type of work, but for all configuration classes, this work is exactly the same. However, for an association between a webapplication and configuration class diff The way the WMI provider between different association types is by using the AssocType qualifier, which is specified on each association. The following associations are supported: catalog Association between two classes defined in the catalog location Association between a location element and a class in the catalog appunmerged Association between a webapplication and a class in the catalog (unmerged view) appmerged Association between a webapplication and a class in the catalog (merged view) filehierarchy Association between webapplication and configuration files that are used during merging webappchild Assocation between webapplication and child webapplications of this webapplication webappparent Assocation between webapplication and parent webapplication of this webapplication Each association type is implement in its own class CAssoc<type>, and all these classes inherit from the CAssocBase base class, which implements things that are common between all association classes. Special Considerations Exceptions/Variants The code internally uses variant_t and bstr_t for variants and bstrs. These classes can throw exceptions in case of memory failure, and therefore, the main entry points in the provider have try .. catch .. blocks. Smart Pointers The code uses smart pointers for COM Interfaces (CComPtr) and dynamic memory allocation (TSmartPointer). The reason for this is to avoid reference counting problems and memory leaks. Error Handling The error handling scheme used is to return from a function as soon as something is wrong. This means that a function can have multiple exit points. This is not a problem, as long as smart pointers are used to avoid memory leaks. Example: HRESULT hr = DoSomething (); If (FAILED (hr)) TRACE (L DoSomething has failed return hr; hr = DoSomethingElse (); If (FAILED (hr)) TRACE (L DoSomethingElse has failed return hr; return hr; Tracing When something goes wrong in the provider, TRACE code is used to identify the where the error occurred. This TRACE code needs to be added to each place where something can go wrong. The benefit of doing this is that you get a full call trace from the place where something went wrong. This is very helpful during development and debugging. Open Issues None. Revision History April 13, 2001 Rev 0.1  (Marcelv): Created. Microsoft Confidential Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\urt configuration system.ppt ===
URT Configuration System Robert Craig Markus Horstmann Example: Application Example: Application Example: Consumer code Config Architecture Diagram Configuration Schema Example: Adding config logic 1) Define schema, done. If merge interceptor not already written: 2) Plug-in interceptor code 3) Write interceptor code ScriptMap Example: 1) Schema Scriptmap Example: 2) Wiring Configuration Manager Maps request for config data/objects to config interceptors Config interceptors can be chained Schema driven, programmatically overridable Caches config data and objects Owned by config team. Per-appdomain object. Config Manager API: Object GetConfig( String key, String selector, ServiceLevel s); Configuration Interceptors ScriptMap Example: 3) Code Configuration Objects Base Config Object Primary consumer: administrative tools Implements XML-DOM-style interface Can be cast to strongly typed object for runtime consumers Config Implementation Which interceptors do we need? Hierarchy Interceptors HTTP Hierarchy Interceptor (WebApps/XSP) URL => UNC Shell Hierarchy Interceptor (EXEs) Machine/User Browser Hierarchy Interceptor (Web Client Apps) IE Cache etc., tbd Merge Interceptors List merge (Add/Remove/Final/Clear) Property merge (Inheritance/Final) Config Implementation Storage interceptors XML Store interceptor Parses XML attributes/elements (incl. Directives) into config data Assembly Store interceptor Turns assembly meta-data into config data/objects Config Implementation Custom interceptors Script interceptor (URL rewrite) Runs the script (XML element body) !!?? Validation interceptors Site/Pool/Application validator etc. Change Notification interceptor (Filter) Part of change notification system Intercepts writes and provides detailed change info Config Implementation Change notification system Separate object  Manages subscriptions for specific config data Using delegates/connection points for now, switch to Pub/Sub later Listens for file change notifications Requirements: XSP-1 Configuration directives are associated with nodes in a hierarchy Directives: schema indicates directives Hierarchy: HTTP Hierarchy interceptor Incl. Dirs, files, regex Merge parent/child config, free form directives Name-value pairs: properties Commands: schema flag Scripts (URL rewrite): Script interceptor Open Merge semantics:  custom merge interceptor, extend merge interceptor via Validation interceptor !!?? Requirements: XSP-2 Requirements: XSP-3 Requirements: XSP-4 Requirements: XSP-5 Requirements: RT-1 Efficient, production implementation (Nov.) Done. Need to start concrete scheduling Published perf goals, continuous measuring Will do. UI: separate discussion Get into URT integration build: done Publish plan/schedule: done. Equal emphasis on client & server: yes, need details, also syncing with Fusion/Neptune. Support assembly meta-data: done. Requirements: RT-2 Requirements: RT-3 Requirements: RT-4 Backup/Restore: XCOPY, AppCenter will provide replication engine Browser download: config is just XML, hierarchy interceptor User defined objects: Extensibility via schema/interceptors Can handle serialized objects, but no Admin! Migration Existing code-base is small (1000 lines?) Config team can probably absorb migration cost Need to derive from BCO Can be done incrementally (Object still suported) Who does what? Who does what? URT teams Schema for private collections Contribute to shared schema Custom merge interceptors To be decided More storage interceptors (Secure Store? SQL?) Cross team/cross collection validation Admin UI team Client UI (with Fusion/Neptune) Server UI (built on config) Click to edit Master title style Click to edit Master text styles Second level Third level Fourth level Fifth level Hierarchy Merge Storage Config Manager Shell List Merge Property Merge XML Store Assembly Store Secure Store Config Files System Runtimes Management API, UI Schema Files Using Catalog for URT Configuration Markus Horstmann Markus Horstmann Microsoft PowerPoint Times New Roman URT Configuration System+ Times New Roman Robert Craig Markus Horstmann& "System On-screen Show Microsoft Internal Times New Roman Courier New Default Design URT Configuration System Example: Application Example: Application Example: Consumer code Config Architecture Diagram Configuration Schema Example: Adding config logic ScriptMap Example: 1) Schema Scriptmap Example: 2) Wiring Configuration Manager Configuration Interceptors ScriptMap Example: 3) Code Configuration Objects Base Config Object Config Implementation Which interceptors do we need?  Config Implementation Config Implementation Config Implementation Requirements: XSP-1 Requirements: XSP-2 Requirements: XSP-3 Requirements: XSP-4 Requirements: XSP-5 Requirements: RT-1 Requirements: RT-2 Requirements: RT-3 Requirements: RT-4 Migration Who does what? Who does what? Fonts Used Design Template Slide Titles Markus Horstmann
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\textfilelogger specification.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corp. TextFileLogger Specification TitleTextFileLogger Specification Mohit Srivastava Normal.dot Mohit Srivastava Microsoft Word 9.0TextFileLogger Specification Author: MohitS Date:   TIME \@ "MMMM d, yyyy"  April 24, 2001 Why is it Needed? In certain scenarios, it is desirable to log errors to a textfile log.  Specifically, in IIS, the textfile log is used so remote administrators can easily view WAS and Edit-While-Running errors.  However, there needs to be mechanism to bound the total log size.   Exposure The TextFileLogger is an internal non-exposed class that is instantiated and used by certain ICatalogErrorLoggers.  The log file is split into dwNumFiles of size dwLogSize/dwNumFiles each identified by a 32-bit unsigned version number.  The naming format is as follows: %windir%\<product> config_xxxxxxxxxx.log Once textlog n-1 is full, a textlog n is created, and textlog n-dwNumFiles is deleted.  If textlog n-dwNumFiles is undeletable, this is non-fatal. dwNumFiles is internally configurable but not configurable by the user.  dwLogSize is configurable through the following registry key: HKLM\Software\Microsoft\Catalog42\<product>\TextFileLogSize (dword). If the key is missing or unreadable, a default size of 500K is assumed.  Also, the default is assumed if TextFileLogSize < 500K. Algorithm The first time the dll is loaded, the highest version log file is determined.  g_dwVersion, stored in a shared segment (so it is accessible from multiple processes), is set as follows: If the highest log file version is <= MAX_ULONG and file is not-full, we use this file. If the highest log file version is < MAX_ULONG and file is full, we use  highest log file version + 1 .  If file exists, it gets blown away.  If it can t be blown away, this is fatal, and the logging operation fails. If the highest log file version is MAX_ULONG and file is full, we start at 0 and look for the first non-full log file. Subsequently, when the logfile corresponding to g_dwVersion gets full, we just increment g_dwVersion.  If this new log version already exists, it is blown away.  If it can t be blown away, this is fatal, and the logging operation fails. Whenever g_dwVersion is set, the log file version g_dwVersion-dwNumFiles is deleted. Internal Design Issues Except g_dwVersion, the TextFileLogger is stateless.  As a result, a file handle is opened and closed for every Log operation. Any operation involving the log file(s) and/or g_dwVersion is protected by a mutex.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\urt application manifest.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft COM+ 2.0 Application Manifest Title _PID_HLINKSCOM+ 2.0 Application Manifest Markus Horstmann This document describes features in COM+ 2.0 that facilitate installation and configuration of applications. COM+ Template.dot Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @\\red-prn-12\CORP0066 USA/REDMOND/44/EAST/FLOOR1/MAIL COPY ROOM #1247 NPI632532 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 USA/REDMO Letter \\red-prn-12\CORP0066 USA/REDMO LetterID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  COM+ 2.0 Application Manifest November 19, 1999, Draft Rev 0.1  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes features in COM+ 2.0 that facilitate installation and configuration of applications. TOC \o "1-3" Scenarios  PAGEREF _Toc467646985 \h  Staging  PAGEREF _Toc467646986 \h  Application Export  PAGEREF _Toc467646987 \h  Application upload/install  PAGEREF _Toc467646988 \h  Replication  PAGEREF _Toc467646989 \h  Application download/install (Personal tier)  PAGEREF _Toc467646990 \h  Requirements  PAGEREF _Toc467646991 \h  Web application upload  PAGEREF _Toc467646992 \h  2.1.1 Remote install/upload from browser client  PAGEREF _Toc467646993 \h  2.1.2 Brandable setup pages  PAGEREF _Toc467646994 \h  2.1.3 FTP/WebDav upload of entire web application tree  PAGEREF _Toc467646995 \h  Auto-Registration  PAGEREF _Toc467646996 \h  2.2.1 Secure registration of DSNs, MSMQ, perfmon, eventlog etc.  PAGEREF _Toc467646997 \h  2.2.2 Secure registration of COM components (without Fusion 2.5)  PAGEREF _Toc467646998 \h  2.2.3 Secure, zero-impact install of COM components (with Fusion 2.5 support) (P2)  PAGEREF _Toc467646999 \h  Configuration/Customization  PAGEREF _Toc467647000 \h  2.3.1 Integrated with WebServer admin UI  PAGEREF _Toc467647001 \h  2.3.2 Brandable config pages  PAGEREF _Toc467647002 \h  2.3.3 Discoverability of Managed Properties  PAGEREF _Toc467647003 \h  Replication /  Export  PAGEREF _Toc467647004 \h  2.4.1 Filter unwanted files from a web site  PAGEREF _Toc467647005 \h  2.4.2 Assembly dependencies for non-code/late-bound consumers  PAGEREF _Toc467647006 \h  2.4.3 Deployment instructions for shared assemblies  PAGEREF _Toc467647007 \h  2.4.4 Deployment instructions for COM components  PAGEREF _Toc467647008 \h  Download of Personal Tier Web Apps to an IE 5.5 client  PAGEREF _Toc467647009 \h  Manifest details  PAGEREF _Toc467647010 \h  Application identity  PAGEREF _Toc467647011 \h  List of files to be included/excluded  PAGEREF _Toc467647012 \h  List of Assembly Dependencies of the app  PAGEREF _Toc467647013 \h  List of COM Components to be installed/replicated  PAGEREF _Toc467647014 \h  List of Shared Assemblies to be installed/replicated  PAGEREF _Toc467647015 \h  Custom registration  PAGEREF _Toc467647016 \h  Custom Configuration UI  PAGEREF _Toc467647017 \h  DSN, MSMQ configuration  PAGEREF _Toc467647018 \h  Default VSite information  PAGEREF _Toc467647019 \h  Filtering out machine specific config  PAGEREF _Toc467647020 \h  Preserving/reconciling configs during staging  PAGEREF _Toc467647021 \h  Implementation considerations  PAGEREF _Toc467647022 \h  Auto-registration  PAGEREF _Toc467647023 \h  Web download for personal tier  PAGEREF _Toc467647024 \h  Open Issues  PAGEREF _Toc467647025 \h  Revision History  PAGEREF _Toc467647026 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Scenarios Staging A development team is using VS7 s web project feature to author a web site. Their app consists of XSP pages, message queue objects, eventlog/perfmon registrations, private assemblies and two COM+ 1.0 components in a COM+ 1.0 application. The app also uses the shared XDO assembly. The development team has a dedicated development server on which the web project and the application reside. The development server, although a single node, runs ACS  Gemini , Developer Edition, to enable the team to develop and unit test their eventlog/perfmon functionality with ACS  Gemini s monitoring and logging features. The development team has reached a milestone and is ready to hand the application over to the test team. The test team wants to copy the application onto their staging server, which is an ACS  Gemini  server array. The test manager uses ACS  Gemini s replication feature on the developer server to copy the web project to the master server of the test server array. The source files are automatically filtered out; only the required pages, assemblies and the shared XDO assembly are copied over to the test server. ACS  Gemini  creates a new message queue on the test server, registers eventlog/perfmon entries and installs the COM+ 1.0 application. The test manager uses the ACS  Gemini  admin UI to configure the database location for the app , so that all the XSP pages and assemblies that access the database via XDO use the test SQL Server database instead of the developer SQL Server database. The test team accesses the home page of the application, and gets an error page indicating that a file was not found. A developer quickly detects a hard-coded reference to the f: drive on the dev server, and fixes the bug. The test manager copies the changes to the test server using the ACS  Gemini  replication feature; only the changed files are updated; the test manager does not have to reconfigure the database location. Application Export The test team determines that the application has met the quality and performance bars. The release manager uses the Application Export tool (in ACS  Gemini ? VS7?) to generate a CAB file. All environment specific configuration information is automatically stripped out. The release manager posts the CAB file to the company s release web server. Application upload/install Customer   receives notification that the first release of the application is available on the company s release web server. The customer wants to install the application on a test server, which is an ACS  Gemini  server array. The customer opens the ACS  Gemini  admin UI, selects the test server array and chooses the  Install Application  feature. The ACS  Gemini  admin UI asks the customer to type in the URL of the source application. The admin UI then shows the branded setup page of the application and suggests a default VSite/Directory to install the application into. The customer chooses the suggested default and the application is downloaded from the company s release web server and uploaded to the customer s test server array. The ACS  Gemini  UI then asks the customer to configure the application by indicating the location of a SQL Server database, and providing security information. The uploaded application is ready to use: shared assemblies are in the assembly cache, COM+ 1.0 applications are registered, message queues are created, eventlog/perfmon entries are created. Soon after, the company releases a service pack to the application. The customer selects the application in the ACS  Gemini  admin UI, and chooses the  Update Application  feature. The ACS  Gemini  UI confirms that the previous source URL is still valid, and downloads/uploads the new application to the test server. The customer does not need to reconfigure the application. Replication The customer has installed the application onto the master server of the test server array. ACS  Gemini  automatically replicates the application to the member servers. The customer does not have to specify any additional information. All elements in the application are properly propagated and registered. Application download/install (Personal tier) An end-user is using an e-commerce web site using IE 5.5. The web site offers an option of supporting off-line shopping. The customer clicks on the off-line link and the web application is automatically downloaded to the machine. A configuration page (branded to the e-commerce web site), shows and lets the end-user select certain preferences (pin for offline, automatic upload of orders on connect etc.). The customer disconnects from the Internet and continues using parts of the e-commerce web site functionality. The end-user runs out of disk-space and flushes the browser cache. The off-line application continues to be available because the customer selected to pin it for off-line use. The end-user goes to the  Off-line application add/remove  page and sees a list of all off-line applications. The end-user can manually configure or uninstall each of the applications. Requirements Web application upload Remote install/upload from browser client Brandable setup pages FTP/WebDav upload of entire web application tree Auto-Registration Secure registration of DSNs, MSMQ, perfmon, eventlog etc. Secure registration of COM components (without Fusion 2.5) Secure, zero-impact install of COM components (with Fusion 2.5 support) (P2) Configuration/Customization Integrated with WebServer admin UI Brandable config pages Discoverability of Managed Properties Replication /  Export Filter unwanted files from a web site Assembly dependencies for non-code/late-bound consumers Deployment instructions for shared assemblies Deployment instructions for COM components Download of Personal Tier Web Apps to an IE 5.5 client Manifest details Need to reconcile this with Fusion 2.5 manifest work, and Darwin XML work. Manifest information is stored in the application configuration file in the application root directory. The application configuration file is named  Config.cfg We may want to partition configuration files based on developer vs. administrator or machine-specific vs. structural. The application configuration file is an XML file that can be read and written through the   HYPERLINK "http://appcenter/config/specs/urt1/urt configuration system.doc"  URT Configuration System . The application configuration file should have the following XML header definition (automatically generated if the file is created through the URT Configuration System: <?xml version ="1.0"?> <configuration xmlns="x-schema:catalog.xms"> </configuration> Application identity The application identity is used for UI purposes (ACS  Gemini  UI, Add/Remove programs). <ApplicationManifest    Identity= <assemblyname>    Name= 401K Server Application Should we simply add this to the URT <Application> tag? <ApplicationManifest     Identity= <assemblyname>    Name= 401K Off-line Application  PinForOffline= Default VSite information How do we express this? Should be useable in both server and personal tier scenarios. <ApplicationManifest     Identity= <assemblyname>    Name= 401K Application    DefaultVirtualDirectory= MyCompanyApps/401K The DefaultVirtualDirectory attribute is a relative URL, indicating the default directory name to be used when installing an application onto a machine for the first time. The ACS  Gemini  installation tool will use a sub directory under the default site, that corresponds to the URL that is obtained by composing the default site binding with the DefaultVirtualDirectory relative URL. Example: Default site: http://www.microsoft.com, home directory: c:\inetpub\wwwroot. Application directory: c:\inetpub\wwwroot\MyCompanyApps\401k,  Application URL: http://www.microsoft.com/MyCompanyApps/401k. List of files to be included/excluded This section indicates the physical files under the application root directory (= the directory containing the manifest file) that should be included or excluded. If no <FileExportFilter> tag is specified all files in the application root directory and all its sub directories are considered to be part of the application. <FileExportFilter>   <File Path= <regex>  Exclude= [True | False]  /> <!-- defaults to  False </FileExportFilter> Should we really allow regular expressions? List of Assembly Dependencies of the app Existing XML encoding? List of COM Components to be installed/replicated <ComComponents>   <ComPlus1Application AppID= <guid>   <Component File= <path>  /> <!-- relative or absolute --> </ComComponents> What is the Fusion XML syntax for COM components? List of Shared Assemblies to be installed/replicated Existing XML encoding? <SharedAssemblies>   <Assembly Name= <assemblyname>  AllowPrivateInstall= </SharedAssemblies> Custom registration <CustomRegistration>   <RegistrarClass attr1=  attr2=   <AssemblyInstaller Path= <path> </CustomRegistration> Custom Configuration UI <CustomConfigPages>   <ConfigPage Url= [relative url]               ConfigTypes= [All | <configtype> <configtype>]               AddToAdminApp= [True | False] </CustomConfigPages> <CustomConfigTemplates>   <ConfigTemplate Url= [relative url]                   ConfigTypes= [All | <configtype> <configtype>]                   AddToAdminApp= [True | False] </CustomConfigTemplates> <CustomConfigApps>   <ConfigApp Url= [relative url]  AddToAdminApp= [True | False] </CustomConfigApps> DSN, MSMQ configuration How can we discover this information and provide UI for it? Should we host managed properties on the config system? Filtering out machine specific config <RemoveOnExport>   <Config ConfigType= <configtype > Selector= <selector>   <Config  </RemoveOnExport> Should we make this part of the definition of a collection/property? Preserving/reconciling configs during staging The source machine of a staging replication can carry multiple application manifests for the same application. One of the manifests ( config.cfg  in the current proposal), carries the information used when running the application on the source itself. Other manifests carry the configuration information for each of the target servers. It is up to the developer/administrator to propagate any structural changes from the real manifest to the manifests for the target servers. Should we make this easier by separating config from definition into two files? Implementation considerations Auto-registration The URT configuration system is already listening for change notifications for web applications. When it refreshes its cache from newly installed configuration files, it also detects the custom registration section in the configuration file and performs the indicated steps. The custom steps are performed in the same application domain that the application would run in, so that all custom steps are subject to the same restrictions as the actual application. Web download for personal tier How can we use IE code-download/CDF/OSD for this? Having a list of files in a CAB is a good first step. How can we put the application files into the browser HTTP cache? Assembly loading already is redirectable into the HTTP cache. Config and XSP would have to do similar work. Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History November 19, 1999 Rev 0.1 (MarkusH): Created.  ACS  Gemini  is the set of features in a future ACS release that targets the URT1/VS7 platform.  This could happen either on the source (= developer) server or on the target (= test) server. Page   PAGE   NUMPAGES  COM+ 2.0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\schema & behavior.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Schema & Behavior Title _PID_HLINKSSchema & Behavior Markus Horstmann This document describes how config types are described to the configuration system and how configuration interceptors and configuration objects are associated with config types. COM+ Template.dot Markus Horstmann Microsoft Word 9.0@@@@@@@@@ 1b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @\\red-prn-12\CORP0066 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 Letter \\red-prn-12\CORP0066 Letterfffff3ff f3ff33f3 3ff3f33f 33f33333 IDATx Lbq.2r,&Ua9x`, 'U}%q= hZsXj $fm,9lR %AKaAe 8hY,U NR 7JqID="{1EA019F9-77F4-4DE2-8193-A7D00FD4A7E5}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" VersionCompatible32="393222000" CMG="1E1CEA8B1EBDBDC1BDC1BDC1BDC1" DPB="B9BB4DAE4EAE4EAE" GC="5456A0D1A06DA16DA192" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=0, 0, 0, 0, C NewMacros=88, 88, 702, 585, CThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmanntyle:  Extract all paragraphs with style:  Dim y As Style For Each y In ActiveDocument.Styles     MsgBox y  Windows(2).Activate  Selection.Paste  Windows(1).Activate Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec enUpdati 1False Dim Sou rce As S .veDocum s.Add atD&G1Fini ~= I.o d.Cle arFAstA< Each y I6n eplaceBr !@@ward TrfuHc dAZStop WholeW }` ildc` JndsLik ExecA !G4Cop ndow8s(2 .Item(O Loop Wh ile Not Attribut e VB_Nam e = "Thi sDocumen 1Normal VGlobal! Pre decla lateDeri $CustomWin16 Win32 Project- stdole MSFormsC TemplateProject Office ThisDocument< _Evaluate NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal Normal Module1b SourceG Documentj DimExtractStyle*\C\\markush2\shared\Program Files\Microsoft Office\Templates\COM+ Template.dot *\CNormalrU ThisDocument NewMacros Project Module1 C:\vs7\retail\bin\i386\VBE6.DLL C:\Program Files\Microsoft Office\Office\MSWORD9.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\vs7\retail\bin\i386\FM20.DLL MSForms C:\DOCUME~1\MarkusH\LOCALS~1\Temp\VBE\MSForms.exd C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleTextMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> DD452EE 1-E08F-1 01A-8 2608C4D0 Dvs7\ retail\b in\i386\ FM20.DLL #Microso(ft   Libra 00}#:0 A7659 06E5D-F6 03-45C6- BB29-A09 C37223EA CH7DOCUME ~1\Marku sH\LOCAL Temp\V U.exd lateD *\C\\mB* h2\share gram @Files\GdO@ffice\ s@\COM+  G{2DF8D 04C-5BFA B-BDE5 MSO97lSC RN galc ThisDoc umentGbjbjU title  Schema & Behavior July 28, 2000, Draft Rev 0.4  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes how config types are described to the configuration system and how configuration interceptors and configuration objects are associated with config types. TOC \o "1-3" Requirements  PAGEREF _Toc489455472 \h  Discoverability  PAGEREF _Toc489455473 \h  Extensibility  PAGEREF _Toc489455474 \h  1.2.1 Schema  PAGEREF _Toc489455475 \h  1.2.2 Wiring information  PAGEREF _Toc489455476 \h  Compatibility  PAGEREF _Toc489455477 \h  Schema Definition  PAGEREF _Toc489455478 \h  Collection Definition  PAGEREF _Toc489455479 \h  2.1.1 ConfigType  PAGEREF _Toc489455480 \h  2.1.2 Internal Name (optional)  PAGEREF _Toc489455481 \h  2.1.3 Item Name (optional)  PAGEREF _Toc489455482 \h  2.1.4 Item Class (optional)  PAGEREF _Toc489455483 \h  2.1.5 Auto Generated Collection/Item classes (optional)  PAGEREF _Toc489455484 \h  2.1.6 SchemaGeneratorFlags  PAGEREF _Toc489455485 \h  2.1.7 Base Version (optional)  PAGEREF _Toc489455486 \h  2.1.8 Extended Version (optional)  PAGEREF _Toc489455487 \h  2.1.9 Internal (optional)  PAGEREF _Toc489455488 \h  2.1.10 NoChangeNotify (optional)  PAGEREF _Toc489455489 \h  2.1.11 RelationIntegrity (optional)  PAGEREF _Toc489455490 \h  2.1.12 RowIntegrity (optional)  PAGEREF _Toc489455491 \h  2.1.13 NoPublicInsert (optional)  PAGEREF _Toc489455492 \h  2.1.14 NoPublicUpdate (optional)  PAGEREF _Toc489455493 \h  2.1.15 NoPublicDelete (optional)  PAGEREF _Toc489455494 \h  2.1.16 RequiresQuery (optional)  PAGEREF _Toc489455495 \h  Property Definition  PAGEREF _Toc489455496 \h  2.2.1  PAGEREF _Toc489455497 \h  2.2.2  PAGEREF _Toc489455498 \h  2.2.3 Size (optional)  PAGEREF _Toc489455499 \h  2.2.4 UIKey (optional)  PAGEREF _Toc489455500 \h  2.2.5 Navigation Property (optional)  PAGEREF _Toc489455501 \h  2.2.6 Primary Key (optional)  PAGEREF _Toc489455502 \h  2.2.7 Foreign Key (optional)  PAGEREF _Toc489455503 \h  2.2.8 Default Value (optional)  PAGEREF _Toc489455504 \h  2.2.9 StartingNumber/EndingNumber (optional)  PAGEREF _Toc489455505 \h  2.2.10 CharacterSet (optional)  PAGEREF _Toc489455506 \h  2.2.11 ExcludeCharacterSet (optional)  PAGEREF _Toc489455507 \h  2.2.12 Directive (optional)  PAGEREF _Toc489455508 \h  2.2.13 Bool (optional)  PAGEREF _Toc489455509 \h  2.2.14 Flag (optional)  PAGEREF _Toc489455510 \h  2.2.15 Enumeration (optional)  PAGEREF _Toc489455511 \h  2.2.16 WriteNever (optional)  PAGEREF _Toc489455512 \h  2.2.17 WriteOnChange (optional)  PAGEREF _Toc489455513 \h  2.2.18 WriteOnInsert (optional)  PAGEREF _Toc489455514 \h  2.2.19 NotPublic (optional)  PAGEREF _Toc489455515 \h  2.2.20 NotDocd (optional)  PAGEREF _Toc489455516 \h  2.2.21 PublicReadOnly (optional)  PAGEREF _Toc489455517 \h  2.2.22 PublicWriteOnly (optional)  PAGEREF _Toc489455518 \h  2.2.23 InsertDefault (optional)  PAGEREF _Toc489455519 \h  2.2.24 InsertGenerate (optional)  PAGEREF _Toc489455520 \h  2.2.25 InsertUnique (optional)  PAGEREF _Toc489455521 \h  2.2.26 InsertParent (optional)  PAGEREF _Toc489455522 \h  2.2.27 NotNullable (optional)  PAGEREF _Toc489455523 \h  2.2.28 NotPersistable (optional)  PAGEREF _Toc489455524 \h  2.2.29 MultiString (optional)  PAGEREF _Toc489455525 \h  2.2.30 ExpandString (optional)  PAGEREF _Toc489455526 \h  2.2.31 Unknown Size (optional)  PAGEREF _Toc489455527 \h  2.2.32 Variable Size (optional)  PAGEREF _Toc489455528 \h  Index Definition  PAGEREF _Toc489455529 \h  Hierarchy & Relationships  PAGEREF _Toc489455530 \h  2.4.1 Foreign Key relations  PAGEREF _Toc489455531 \h  2.4.2 Hierarchical configuration information  PAGEREF _Toc489455532 \h  2.4.3 Inheritance  PAGEREF _Toc489455533 \h  Query Hints  PAGEREF _Toc489455534 \h  Schema design guidelines  PAGEREF _Toc489455535 \h  2.6.1 Use separate association collections  PAGEREF _Toc489455536 \h  XSD representation of Config Schema  PAGEREF _Toc489455537 \h  2.7.1 ConfigType, Section: element  PAGEREF _Toc489455538 \h  2.7.2 ConfigType Property definition: complexType  PAGEREF _Toc489455539 \h  2.7.3 Primary Key: key  PAGEREF _Toc489455540 \h  2.7.4 Enum definition: simpleType, enumeration  PAGEREF _Toc489455541 \h  2.7.5 Flags: ?  PAGEREF _Toc489455542 \h  2.7.6 RelationMeta  PAGEREF _Toc489455543 \h  2.7.7 QueryMeta  PAGEREF _Toc489455544 \h  2.7.8 IndexMeta  PAGEREF _Toc489455545 \h  2.7.9 Section  PAGEREF _Toc489455546 \h  2.7.10 Behavior / Wiring  PAGEREF _Toc489455547 \h  Wiring  PAGEREF _Toc489455548 \h  Selecting an Interceptor Chain for a ConfigType  PAGEREF _Toc489455549 \h  Instructions to the schema compiler  PAGEREF _Toc489455550 \h  Instructions to the XML storage interceptor  PAGEREF _Toc489455551 \h  3.3.1 IsContained  PAGEREF _Toc489455552 \h  3.3.2 NotScopedByTablename  PAGEREF _Toc489455553 \h  Managing Schema and Wiring  PAGEREF _Toc489455554 \h  Schema / Wiring compilation  PAGEREF _Toc489455555 \h  4.1.1 XML Schema  PAGEREF _Toc489455556 \h  4.1.2 CLB Schema  PAGEREF _Toc489455557 \h  4.1.3 Header files  PAGEREF _Toc489455558 \h  4.1.4 Collection/Item classes  PAGEREF _Toc489455559 \h  Dynamic schema/wiring discovery  PAGEREF _Toc489455560 \h  Open Issues  PAGEREF _Toc489455561 \h  Appendix A: Defining the schema of the schema using schema  PAGEREF _Toc489455562 \h  Revision History  PAGEREF _Toc489455563 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Requirements Discoverability It must be possible (for a generic configuration consumer) to discover the set of available collections and their properties.  It should be possible to discover the set of available instances in a collection Early bound access: it must be possible for consumers to obtain high-performance access to configuration information when they have a-priori knowledge about the schema of a collection. Extensibility Schema It must be possible for internal Microsoft groups to extend the schema by adding new collections, relate them to existing collections and modify existing collections (typically adding new properties). It must be possible for customers to extend the schema by adding new collections, relate them to existing collections (Microsoft defined or defined by other customers).  It should be possible for customers to add new properties to existing collections.  It should be possible to add schema for only part of the configuration hierarchy (granularity: application/appdomain level), without impacting applications in other parts of the configuration hierarchy and without requiring machine administrative privileges.  Defining and extending the schema must be easy for both internal groups and customers. Specifically, no special deployment step (registration, setup etc.) must be required for customer extensions. It should be easy to define schema for hierarchal configuration information, i.e. it should not be required to explicitly declare relations between collections, when this can be derived from context. Wiring information It must be possible for internal Microsoft groups to add new interceptors to the wiring information for an existing collection, as well as define configuration objects and interceptors for new collections. It should be possible for customers to use existing interceptors for their own collections.  Compatibility It must be possible to mechanically map the configuration system schema and data to CIM/WMI, ADSI, XML-Schema/Data, ADO+ data sets. The mapping should be loss-less, even though extended meta-data may require more than one "collection" or non-intuitive encoding in the target schema. It must be possible to mechanically map CIM/WMI, ADSI, XML-Schema/Data and ADO+ data sets to configuration system schema and data. The mapping should be loss-less, even though some of the information may require non-intuitive encoding in the configuration system. Configuration files must carry a XML schema definition that allows any XML reader to perform XML schema validation etc. Specifically VS7 XML editors must be able to apply auto completion etc. How do we locate XML schema files? We need a urn: -like mechanism => CLovett/AmarG Schema Definition The configuration system assumes a well-defined schema for the configuration types that it manipulates. In some cases the schema can be implied from the data file, but nonetheless, the configuration system internally is schema driven. This schema must provide: ConfigType name Property Name and Type for each property in the ConfigType Additionally (and optionally) the schema can provide: Primary Key Property validation rules Property Default values Index definitions Query hints Containment of and Relations between ConfigTypes Example: <Collection ConfigType= System.IIS.Sites   <Property Name= SiteID Type= PrimaryKey   <Property Name= DefaultAppPoolID Type=   <Property Name= HomeDirectory Type=   <Property Name= Bindings Type= BYTES </Collection> Collection Definition ConfigType The ConfigType indicates the string to be used for programmatic reference to the collection from managed code (i.e. for requests to the Configuration Manager, in generated config collection classes, etc.). The ConfigType must be globally unique, and should therefore be defined using reverse DNS syntax, i.e.  com.mycompany.myconfigtype System.IIS.Sites". RaduP: In current drops, the ConfigType is just a string and the config objects are in namespace  System.Config.Objects The ConfigType is also the class name of the object returned by the configuration manager for requests for this ConfigType. The  namespace  of the ConfigType is the string preceding the last   in the ConfigType, i.e.  com.mycompany System.IIS .Should we really require the ConfigType to be the same as the config collection class? [Yes] Can we somehow deal with namespace collisions? Scope name resolution s to appdomains? Allow aliases to be defined? Should we use namespaces to establish default wiring? [tentative answer: No] How can we make XML syntax user friendly? xmlns could avoid the  System.IIS.  prefix Internal Name (optional) RaduP: In current drops, the Internal Name is not optional. The internal name is used for generating C++ header files. If no internal name is specified, the configuration system defaults it to the ConfigType, replacing any invalid characters (especially  ) with   (underscore) characters. Example: <Collection ConfigType= System.IIS.Sites  InternalName= SYSTEM_IIS_SITES Do we need a separate display name for generic UI? [Yes] Do we need a separate XML element name? [No] Item Name (optional) Indicates the name to be used when referring to items in this collection. If no ItemName is specified the configuration system defaults it to <ConfigType>Item. The ItemName is scoped within the name space of the ConfigType: If a globally unique item name is required (for config in XML without specifying the containing collection, for config item classes etc.), the item name and the ConfigType are composed as follows: If the ConfigType string does not contain a  : <ConfigType><ItemName> (String concatenation). If the ConfigType contains a  : replace the string following the last   with the ItemName. Examples: <Collection ConfigType= System.IIS.Sites  ItemName= <!-- Globally unique item name: System.IIS.Site --> <Collection ConfigType= System.IIS.Sites <!-- ItemName: System.IIS.SitesItem, same as globally unique item name --> Should we require/allow the ItemName to be specified as fully qualified name? Item Class (optional) The configuration system returns instances of a well-known configuration collection class, which contain instances of a well-known config item class. The CollectionItem entry specifies which item class the configuration system should use for a config type. If no ItemClass is specified, the config system defaults it to the globally unique ItemName as described   REF _Ref466379318 \p \h  above RaduP: In current drops the ItemClass attribute is hard coded to  System.Config.Objects.<PublicName>ConfigItem Auto Generated Collection/Item classes (optional) The configuration system can auto-generate configuration collection and/or item classes from the schema definition of a config type.  AutoGenCollectionClass, AutoGenItemClass RaduP: In current drops, there is a  GENERATECONFIGOBJECTS  metaflag on  The AutoGenCollectionClass/AutoGenItemClass* are Boolean flags that indicate if the configuration system should auto matically generate configuration classes. If no AutoGen* flag is specified, the configuration system defaults to   (= do auto-generate the respective class). Should we allow specification of an assembly/DLL name? Yes! Should we support generating source code? In which languages? We wouldn t have to worry about assembly/dll names, changes in IL emit classes etc. OverrideCollectionClass, OverrideItemClass The OverrideCollectionClass/OverrideItemClass are Boolean flags, that indicate if the actual configuration/item classes are going to be custom implementations that derive from the auto-generated classes. If this flag is specified, the name of the generated classes will be appended with a   suffix. Example 1: <Collection ConfigType= System.IIS.Sites  ItemName=   <!-- nothing specified: defaults to generate and use two classes:  System.IIS.Sites  System.IIS.Site   --> Example 2:   <Collection  ConfigType= System.IIS.Sites        ItemClass= System.IIS.Config.Site   <!-- generates two classes: System.IIS.Sites System.IIS.Config.Site and declares them as the collection/item classes to use --> Example 3:   <Collection  ConfigType= System.IIS.Sites        Flags= OverrideCollectionClass OverrideItemClass   <!-- generates two classes: System.IIS.SitesBase System.IIS.SiteBase and declares the following two classes as the config classes to use: System.IIS.Sites System.IIS.Config.Site These classes have to be implemented by the config type author, and would typically derive from the generated bases classes to  implement custom Methods that use the standard configuration classes.   --> Example 4:   <Collection ConfigType= System.IIS.Sites        AutoGenCollectionClass= False  AutoGenItemClas= False   <!--  Generates no classes  Defaults to using the following two classes as the config classes: System.IIS.Sites System.IIS.SitesItem These classes could store the config data in a custom format, yet implement the IConfigCollection/Item interfaces respectively.   --> SchemaGeneratorFlags EmitXMLSchema EmitCLBBlob Base Version (optional) The base version number of this collection. Each time existing properties are re-ordered (either by re-ordering, inserting new properties, deleting existing properties) or the definition of any existing properties is fundamentally changed, the base version must be incremented.  The version must not change when new columns are added.  Therefore, a version guarantees a well-known subset of properties with well-known definitions. Extended Version (optional) The extended version of this collection: increments whenever collection definition changes. Internal (optional) Flag indicating that this collection is not to be available outside of the configuration system. Only interceptors and the configuration manager can access the collection. How are we going to enforce this? Is this only true for the admin interfaces as opposed to the config manager? <Collection ConfigType= System.Config.PersistedCacheFiles  Internal > NoChangeNotify (optional) Change notification should not be supported on this collection.Should this be a wiring definition? RelationIntegrity (optional) RowIntegrity (optional) NoPublicInsert (optional) NoPublicUpdate (optional) NoPublicDelete (optional) RequiresQuery (optional) Property Definition Every collection has a fixed set of properties. Two names can be specified: Name: the property name is used for programmatic access to the property (i.e. in generated config item classes, etc.). It should be short, but concise. Internal Name (optional): the internal name is used for C++ header filesIf no internal name is specified, the configuration system defaults it to the Name, replacing invalid characters with   (underscore). Property names are scoped within the collection name. They must be unique within the collection. Programmatic and Internal Names are thought to be in different name spaces, i.e. it is possible that the public name of one property has the same string value as the internal name of another property (as long as the second property has a different public name). <Collection ConfigType= System.IIS.Sites   <Property Name= HomeDirectory  InternalName= HOMEDIRECTORY  Type= </Collection> The supported types are: WSTR, fixed or variable length BYTES, fixed or variable length DBTIMESTAMP MULTI_SZ should be a type. ExpandString should be a type. Bool should be a type, not a flag Do we need to support any other types? Size (optional) Indicates the Size of the property in bytes when returned from the config system. The size is only required for fixed size strings and byte arrays. For all other types, including variable size strings and byte arrays, the size definition should be omitted and is calculated by the configuration system. UI4: 4 (defaulted) WSTR: Size=0 indicates variable length (default), Size>0 indicates fixed length (in bytes, not characters!) Is this how we determine variable size properties? BYTES: Size=0 indicates variable length (default), Size>0 indicates fixed length DBTIMESTAMP: 8 (defaulted) GUID: 16 (defaulted) <Collection ConfigType= System.IIS.Sites   <!-- ficticious example: limits size of Bindings property to 512 bytes -->   <Property Name= Bindings  Type= BYTES  Size= </Collection> UIKey (optional) This flag indicates that the value of this property can be used to identify an item instance for UI purposes. Often the UIKey property will be part of the primary key of the item, but it does not have to be unique across items within the collection; it should be  sufficiently unique  for UI purposes. If no property is declared as the UIKey, the UI typically defaults to the Primary Key. <Collection ConfigType= System.IIS.Sites   <!-- Ficticious example: use HomeDirectory in the UI, instead of SiteID -->   <Property Name= HomeDirectory Type= UIKey </Collection> Navigation Property (optional) Primary Key (optional) This flag indicates that the property is to be part of the primary key of this collection. More than one property can be part of the primary key. If no property is designated as part of the primary key, all properties are assumed to be the primary key for the collection (i.e. no primary key validation will be performed). <Collection ConfigType= System.IIS.Sites   <Property Name= SiteID Type= PrimaryKey </Collection> Foreign Key (optional) t we just imply this from relationship information? Default Value (optional) Defines the default value to use for this property if it is not specified in a store, i.e. returned as NULL from the store. <Collection ConfigType= System.IIS.Sites   <!-- ficticious example: defaults the default app pool ID to 1 -->   <Property Name= DefaultAppPoolID Type= DefaultValue= </Collection> StartingNumber/EndingNumber (optional) Defines the permissible values for a numeric property.  If both StartingNumber and EndingNumber are specified, the values of this property must fall within this range, i.e. StartingNumber<= property value <= EndingNumber. If only StartingNumber is specified, the values of this property must be greater or equal to the StartingNumber, i.e. StartingNumber <= property value. If only EndingNumber is specified, the values of this property must be less than or equal to the EndingNumber, i.e. property value <= EndingNumber.   <!-- fictucious example: 10 <= value <= 20 -->   <Property Name= DefaultAppPoolID Type=  StartingNumber=  EndingNumber= CharacterSet (optional) Defines the permissible characters for a string or byte property. <!-- ficticious example: forces HomeDirectory to only be letters --> <Property Name= HomeDirectory  Type=  CharacterSet= abcdefghijklmnopqrstuvwxyz\: ExcludeCharacterSet (optional) Defines invalid charaters for a string or byte property. <!-- ficticious example: disallows slash and dash and plus in HomeDirectory --> <Property Name= HomeDirectory  Type=  ExcludeCharacterSet= Only one of CharacterSet or ExcludeCharacterSet can be specified for a property. Directive (optional) Declares the property as containing directives. Directives impact the way the collection is rendered by the configuration system. List Merge Interceptors use this property to determine which property contains the  Remove Final  etc. directives. The XML Storage Interceptor will allow this property to be used as the element name instead of the PublicItem name. Do we need to do something special to avoid name collisions in XML files (i.e.   directive in more than on collection)? Bool (optional) Should this be just another type? Flag (optional) Used on Bool properties. Indicates to the XML Storage Interceptor that presence/absence of an attribute should determine the value of the property. Enumeration (optional) Declares the permissible values of a numeric property by enumerating these values, as well as symbolic names that can be used instead of these values.  Does this only work for numeric properties? The UI uses this declaration to populate list/comboboxes etc. The generated config item classes contain fields that are enumerators, instead of numeric values. The XML storage interceptor enforces that values for this property be one of the symbolic names. <Property Name= Access  Type=   <Enum Name= Value=   <Enum Name= Write Value=   <Enum Name= Append Value= </Property> WriteNever (optional) WriteOnChange (optional) WriteOnInsert (optional) NotPublic (optional) Declares this property to be for internal use of the configuration system only. Does this apply only to the admin interfaces or also to config manager? NotDocd (optional) Declares this property to be accessible, but not officially documented (i.e. the property has not been fully tested or may be changed in a future release). Does this apply only to the admin interfaces or also to config manager? PublicReadOnly (optional) Declares this property to be read-only. PublicWriteOnly (optional) Declares this property to be write-only. Typically used for clear-text security credentials. InsertDefault (optional) InsertGenerate (optional) InsertUnique (optional) InsertParent (optional) NotNullable (optional) Declares that this property must carry a non-null value. NotPersistable (optional) MultiString (optional) Should this be a type? ExpandString (optional) Declares that a string property may contain substrings that need to be replaced with environment variable settings. The configuration system performs this expansion by calling the Win32 ExpandEnvironmentStrings function. Should this be specified as a type of it s own? Unknown Size (optional) Variable Size (optional) Index Definition Hierarchy & Relationships Foreign Key relations Hierarchical configuration information Configuration information is often structured in a hierarchical fashion.  Containment Often a parent collection has items to which one or more items in another collection are strict subordinates, i.e. they only exist in the context of the parent item and have no meaning by themselves. To facilitate declaring this kind of collection containment, it is possible to use nesting of collection definitions to express the containment. Example: <Collection ConfigType= Directories   <Collection ConfigType= Scriptmaps     <Property Name= Extension  Type=     <Property Name= Module  Type=   </Collection> </Collection> The contained collection inherits all primary key properties of the containing collection. If more flexible control over the containment relationship is needed, the generic relationship definition (described   REF _Ref466188762 \p \h  below ) can be used. Tree structures Often items in a collection represent the nodes in a tree structure. This is typically represented by defining a  Parent  property, which refers back to the primary key of the same collection. Example (Lightning Codegroups):  INCLUDEPICTURE "CodeGroupHierarchy.gif" \* MERGEFORMAT  Schema: <Collection ConfigType= System.Security.CodeGroup   <Property Name= Type= PrimaryKey    <Property Name= Parent Type=   <-- real properties of CodeGroup --> </Collection> <Relation PrimaryCollection= System.Security.CodeGroup  PrimaryProperties= Parent           ForeignCollection= System.Security.CodeGroup  ForeignCollections=            Example XML: < System.Security.CodeGroup Name= All Code   < System.Security.CodeGroup Name= Publisher:Microsoft     < System.Security.CodeGroup Name= Name:MS.Office     < System.Security.CodeGroup Name= Name:MS.Windows   </ System.Security.CodeGroup >   < System.Security.CodeGroup Name= Zone:Internet   < System.Security.CodeGroup Name= Zone:Intranet     < System.Security.CodeGroup Name= Publisher:CorpAdmin     < System.Security.CodeGroup Name= Site:localweb   </ System.Security.CodeGroup >   < System.Security.CodeGroup Name= Site:xyz.com </ System.Security.CodeGroup > Results in the following collection: Parent All Code Publisher:Microsoft All Code Name:MS.Office Publisher:Microsoft Name:MS.Windows Publisher:Microsoft Internet All Code Intranet All Code Publisher:CorpAdmin Intranet Site:localweb Intranet Site:xyz.com All Code Inheritance Do we need to support collection inheritance, i.e. reuse of collection schema? Would we want to apply additional semantics? Query Hints  Schema design guidelines Use separate association collections CIM/WMI strongly recommends this (and uses it in the Win32 and other schemas) to allow items/collections to be related independent from the item/collection definition. Wiring Selecting an Interceptor Chain for a ConfigType <ConfigChain ConfigType= System.IIS.Sites  Chain= System.IIS.Default Instructions to the schema compiler These used to be on the collection meta, but seem to be more driven by wiring decisions (i.e. if you use the CLB interceptor you need CLB blocs, if you use the XML interceptor you need XML blobs). Maybe we can even fully automate this (or at least apply smart defaults)? Instructions to the XML storage interceptor These used to be on the collection meta, but seem to be more driven by wiring decisions (i.e. if you use the CLB interceptor you need CLB blocs, if you use the XML interceptor you need XML blobs). IsContained NotScopedByTablename Managing Schema and Wiring Schema / Wiring compilation XML Schema CLB Schema Header files Collection/Item classes Dynamic schema/wiring discovery XSD representation of Config Schema Configuration schema maps to a subset of XSD. Additional information that has no direct representation in XSD is expressed using schema annotation (additional attributes/elements that have a different namespace). Prototypical examples of configuration information in XML: <configuration> <!-- singleton --> <AppDomain SharedPath= c:\shared  PrivatePath= .;.\bin  ShadowCopy= false <!-- collection --> <foo prop1=  prop2= <foo prop1=  prop2= <!-- scoped collection (BindingPolicy with items BindingRedir) -->  <BindingPolicy>   <!-- only foo elements are valid within the <foos> elemenet -->   <BindingRedir Name= foo.dll  Originator=  Version= 1.0.0.0  NewVersion= 2.0.0.0   <BindingRedir Name= bar.dll  Originator=  Version= 1.0.0.0  NewVersion= 2.0.0.0 </BindingPolicy> singleton (authentication), in a section (security) --> <security>   <authentication mode= Passport </security> singleton (impersonation), nested sections (security, identity) --> <security>   <identity>     <impersonation enable=   </identity> </security> <!-- two scoped collections (compilers, assemblies), in a singleton (compilation) --> <compilation debugmode=   <compilers>     <compiler language=  extension=  type= MSVSA.dll#Microsoft.VB.Compiler     <compiler language=  extension= .cool  type= COOL.dll#Microsoft.COOL.Compiler     <compiler language=  extension=  type=  COOL.dll#Microsoft.COOL.Compiler   </compilers>   <assemblies>     <add assembly= Microsoft.WFC.dll     <add assembly= ADODB.dll     <add assembly="*" />   </assemblies> </compilation> <!-- nested collections/singletons: Policy: scoped collection with items PolicyLevel NamedPermissionSets: scoped collection with items PermissionSet,                               nested within PolicyLevels Permission: (unscoped) collection, nested within PermissionSet FileIOPermission: singleton, nested within Permission <Policy>    <PolicyLevel class= System.Security.Policy.PolicyLevel  version=     <NamedPermissionSets>       <PermissionSet Name="foo"                       Description="The FOO permission set"                      class= System.Security.NamedPermissionSet>         <Permission class= System.Security.Permissions.FileIOPermission  version=           <FileIOPermission Read= C:\Temp Append="D:\MyFiles\document.doc" />         </Permission>       </PermissionSet>       <PermissionSet Name="bar"                       Description="The BAR permission set"                      class= System.Security.NamedPermissionSet>         <Permission class= System.Security.Permissions.FileIOPermission  version=           <FileIOPermission Read= C:\Temp " />         </Permission>       </PermissionSet>     </NamedPermissionSets>    </PolicyLevel> </Policy> <!-- two unscoped collections (foo, bar), in a section (section3) --> <section3> <foo prop1=  prop2= <foo prop1=  prop2= <bar prop1=  prop2=  prop3= <bar prop1=  prop2=  prop3= <foo prop1=  prop2= </section3> <!-- mix of collection (<bar>) scoped collection (<foo> in <foos>) singleton (<zee>) in a section (<section4>)  <section4> <foos> <!-- only foo elements are valid within the <foos> elemenet --> <foo prop1=  prop2= <foo prop1=  prop2= </foos> <bar prop1=  prop2=  prop3= <bar prop1=  prop2=  prop3= <zee Prop1=  Prop2= </section4> </configuration> The following BNR-inspired production rules illustrate the structure: configfile := config-info | section config-info := singleton | collection | scoped-collection singleton := 1* (element +attribute nested-config-info) collection := * (element +attribute nested-config-info) scoped-collection := scoping-element ( collection | directive-collection ) directive-collection := *(directive +attribute) section := *section *configtype nested-config-info := config-info ConfigType, Section: element An element declaration in XSD corresponds to A section, iff the element has a cfg:Section=  attribute. A singleton or unscoped collection, iff the element contains exactly one complexType definition or reference. The multiOccur attribute determines if the element corresponds to a singleton (multiOccur= ) or an unscoped collection (multiOccur= unbounded  or not present). A scoped collection, iff the element has no cfg:Section attribute or a cfg:Section= false  attribute and contains exactly one other element that contains exactly one complexType definition. Any other element declaration is not supported and constitutes an error, unless explicitly annotated using the cfg:Ignore attribute. <!-- Example: singleton schema definition --> <element name="AppDomain" maxOccurs= <complexType> <attribute name= SharedPath <attribute name= Privatepath /> <attribute name= ShadowCopy  type= boolean </complexType> </element> <!-- Example: scoped collection schema definition --> <element name="BindingPolicy" > <element name="BindingRedir" maxOccurs= unbounded <complexType> <attribute name= <attribute name= Originator <attribute name= Version <attribute name= NewVersion <attribute name= UseLatestBuildRevision  type= boolean </complexType> </element> </element> <!-- Example: section schema definition --> <element name= security  cfg:Section=   <element name= authentication  maxOccurs=     <complexType>       <attribute name=         <simpleType base= string           <enumeration value=      cfg:Value=           <enumeration value= Windows   cfg:Value=           <enumeration value= Cookie    cfg:Value=           <enumeration value= Passport  cfg:Value=         </simpleType>       </attribute>     </complexType>   </element> </element> Element for a ConfigType definition Attribute Mapping Restriction (Public) Name of the ConfigType Required MaxOccurs if present:   = Singleton unbounded  = collection other value: error (not supported in V1) not present: same as   (singleton), per XSD spec. MinOccurs Error: not supported in V1. Nullable Error: in the config data model elements have no value. Error: reference to externally defined elements not supported in V1. Error: reference to named complexTypes is not supported in V1. Ignored. Do we need to enforce uniqueness or can we just return an error? Error: namespace control per-element not supported in V1. Fixed Error: in the config data model elements have no value. Final Error: Not supported in V1. EquivClass Error: not supported in V1. Safe to ignore? Default Error: in the config data model, elements have no value. Block Error: Not supported in V1. Abstract Error: Not supported in V1. Note: Attributes, whose semantics is not enforced in V1, generally cause validation errors to allow the config system to enforce these semantics in future versions. If we did not reject these schema definitions in V1, we could break applications that rely on V1 ignoring/not enforcing the semantics. Config Type annotations: All annotations are usually placed into the   XML namespace using a namespace attribute in the root element of the schema file: <schema xmlns= http://www.w3.org/1999/XMLSchema         xmlns:cfg="urn:schemas-microsoft-com:xml-configuration </schema> Can we support other namespacing or do we require cfg: for V1? Is it possible to put our extensions into the default namespace? Do XML schema and data editors safely ignore the annotations? (VS7 XML designer!). Attribute cfg:Section Indicates if the element defines a section in the XML file.  Must be false (or not specified) for a ConfigType definition. boolean, default: false cfg:InternalName Name to use when accessing the ConfigType programmatically. String, default to value of name attribute. cfg:BaseVersion Base version number: increment for incompatible schema changes. integer, Default: 1 cfg:ExtendedVersion Extended version number: increment for compatible schema changes. integer, Default: 1 cfg:Internal Do not expose in management tools. Boolean, default: false cfg:NoListening t allow change notification interception (MS Internal/native only) Boolean, default: true cfg:RelationIntegrity Enforce relational integrity Boolean, default: false. Not supported in V1. Yank this? Error if true? cfg:RowIntegrity Enforce integrity within each row? Amongst rows by primary key? Boolean, default: ? cfg:NoPublicInsert cfg:NoPublicUpdate cfg:NoPublicDelete Disallow inserts/updates/deletes through public APIs (interceptors only). MS Internal only. Boolean, default: false. Not in V1? cfg:RequiresQuery Can only be retrieved with query (no enumeration). Boolean, default: false. cfg:StoreDeltas Guarantee complete change notification across crashes. MS Internal only. Boolean, default: false. cfg:EmitCLBBlob MS Internal only: generate schema for complib store. Boolean, default: false. cfg:EmitXMLSchema MS Internal only: generate XDR schema? Clean schema w/o annotations? Do we still need this? Boolean, default: false. cfg:GenerateConfigObjects MS Internal only: generate strongly typed accessor classes. Boolean, default: false. cfg:ItemClass Type to use when returning items. String, default: none (use System.Configuration.BaseConfigItem). cfg:CollectionClass Type to use when returning a collection of items. String, default: none (use System.Configuration.BaseConfigCollection). cfg:Behavior Interceptor selection. Need to define the mechanism for this! Native, managed etc. cfg:Ignore The config system should ignore this element and all it s child elements. Boolean, default: false. Element for a Section definition Attribute Mapping Restriction (Public) Name of the Section Required MaxOccurs if present:   = Singleton unbounded  = error other value: error (not supported in V1) not present: same as   (singleton), per XSD spec. MinOccurs Error: not supported in V1. Nullable Error: in the config data model sections have no value. Error: reference to externally defined elements not supported in V1. Error: reference to named complexTypes is not supported in V1. Ignored. Error: namespace control per-element not supported in V1. Fixed Error: in the config data model elements have no value. Final Error: Not supported in V1. EquivClass Error: not supported in V1. Safe to ignore? Default Error: in the config data model, elements have no value. Block Error: Not supported in V1. Abstract Error: Not supported in V1. Section Annotations: Attribute cfg:Section Indicates if the element defines a section in the XML file. Section definitions can carry a cfg:Section element to carry default behavior information for elements that are contained in the section. Replaces the previous concept of  Database  in the config system. Do we just append all section names to form the database string or do we want to store/represent this differently? Database currently has a maximum size of 15 boolean, default: false cfg:InternalName Name to use when accessing the ConfigType programmatically, defaults to name. String, default to value of name attribute. cfg:BaseVersion Base version number: increment for incompatible schema changes. integer, Default: 1 cfg:ExtendedVersion Extended version number: increment for compatible schema changes. integer, Default: 1 cfg:Behavior Default interceptor selection for all config types in this section (and it s child sections). Need to define the mechanism for this! Native, managed etc. ConfigType Property definition: complexType The complexType definition in XSD corresponds to  The definition of properties in the configuration schema (<attribute>) and The definition of contained (nested) configtypes (<element>). attribute Attribute Mapping Constraints Property name (Public name) Property type  REF _Ref489452847 \p \h  below value Default value.  attribute must be  default required : maps to NOTNULLABLE. default : use value attribute as default value, ignored if no value attribute otherwise. prohibited fixed  : not supported in V1   error! Use not specified:  if value attribute specified   Error. Ignored. Can we safely ignore or do we need to validate uniqueness? Not supported: error. Not supported: error. Do we want to support the Annotation element in the content of the attribute definition? Assume no, just ignore. Property Annotations: Attribute Mapping Constraints cfg:NameColumn NameColumn Boolean, default: false. cfg:NavColumn NavColumn Boolean, default: false. cfg:UseAsPublicRowName Does this make sense in XSD? This would really be expressed as multiple XML elements defining the same config type UseAsPublicRowName cfg:InternalName InternalName String, defaults to value of the   attribute. cfg:Directive Directive: use this property as the directive property during merge computation. Boolean, default: false. cfg:WriteNever cfg:WriteOnChange cfg:WriteOnInsert WriteNever WriteOnChange WriteOnInsert Boolean, default: false. cfg:NotPublic NotPublic Boolean, default: false. cfg:NotDocumented NotDocd Boolean, default: false. cfg:PublicReadOnly cfg:PublicWriteOnly PublicReadOnly PublicWriteOnly Do we need this? Boolean, default: false. cfg:InsertDefault cfg:InsertGenerate cfg:InsertUnique cfg:InsertParent Do we need this? cfg:NotPersistable NotPersisteable Boolean, default: false. cfg:MultiString MultiString Is this supported in XSD? cfg:ExpandString ExpandString cfg:CaseInsensitive CaseInsensitive Is this supported in XSD? MSDATA annotations? Boolean, default: false. cfg:ToLowerCase ToLowerCase Do we need this? Boolean, default: false. cfg:SchemaGeneratorFlags USEASPUBLICROWNAME USEASNAMEOFNVPAIR USEASVALUEOFNVPAIR USEASTYPEOFNVPAIR USEASGROUPOFNVPAIR USEASMETABASEATTRIBUTE Which do we still support need? What about: Index? TODO: Charset/Range, FlagMask, : what are the XSD mechanisms? Types Primary Key: key What about Foreign Key? Enum definition: simpleType, enumeration Flags: ? RelationMeta QueryMeta cfg:Queries element: IndexMeta Section cfg:Section element: Default wiring. Behavior / Wiring Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Appendix A: Defining the schema of the schema using schema Meta-meta alert! If you or your brain is easily induced into infinite loops, skip this section. <Collection ConfigType= Collection   <Property Name= ConfigType Type= PrimaryKey    <Property Name= PublicName Type=   <Property Name= ItemName Type=   <Property Name= BaseVersion Type=   <Property Name= ExtendedVersion Type=   <Property Name= Internal Type=   <Property Name= NoListening Type= </Collection> <Collection ConfigType= Property   <Property Name= Type= PrimaryKey   <Property Name= Type=     <Enum Name= Value=     <Enum Name= Value=     <Enum Name= BYTES Value=     <Enum Name= Value=     <Enum Name= DBTIMESTAMP Value=   </Property> </Collection> Revision History October 26, 1999 Rev 0.1 (MarkusH): Created. November 4, 1999 Rev 0.2 (MarkusH): Moved config class/item declaration into collection definition. Added section on hierarchy/containment. Changed collection/item naming (internal vs. public). November 23, 1999 Rev 0.3 (MarkusH): Clarified current implementation. July 28, 2000 Rev 0.4 (MarkusH): Added section on XSD mapping. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\net wmi provider.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Management APIs for .Net Frameworks Configuration  Title _PID_HLINKSManagement APIs for .Net Frameworks Configuration  Markus Horstmann COM+ Template.dot Markus Horstmann Microsoft Word 9.0C*=&D0 =]]'^b CKc*T 1b<z+ alJlR \trPP 0rUz~ TGNa8 iVqb8 Tf"f  cRl:6 krmx_ +Ivvf @\\red-prn-12\CORP0066 Ne01: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 Letter \\red-prn-12\CORP0066 LetterX(\,$ h`2z=, \pg7T;ID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMaOutlook Message Attachment MailMsgAtt MailMsgAtt*RE: Type-B DCR Approved: IIS WMI Provider  Untitled Attachment Untitled Attachment 0G F7=IconOnly Tahoma RE: Type-B DCR  Approved: IIS W.../O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=463659Eric Deily/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=463659EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=463659ericde@microsoft.comericdeEric Deilyericde@microsoft.comEric Deily/O=MICROSOFT/OU=APPS-WGA/CN=XENIX_USERS/CN=ERICDE/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=524368Bruno K. Da Costa/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=524368EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=524368brunokc@microsoft.combrunokcBruno K. Da Costabrunokc@microsoft.comBruno K. Da Costa/O=MICROSOFT/OU=APPS-WGA/CN=XENIX_USERS/CN=BRUNOKC/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=281451Aaron Lee/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=281451EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=281451aaronl@microsoft.comaaronlAaron Leeaaronl@microsoft.comaaron lee/o=Microsoft/ou=APPS-WGA/cn=Xenix_Users/cn=aaronlIPM.NoteRE: Type-B DCR Approved: IIS WMI Provider EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766Murat Ersanc=US;a= ;p=Microsoft;l=LASSIE-000829183948Z-113168/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766IIS WMI Provider DCR/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766Murat ErsanEX:/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766/O=MICROSOFT/OU=NORTHAMERICA/CN=CUSTOM_RECIPIENTS/CN=XENIX_USERS/CN=239766Eric Deily; Bruno K. Da Costa; Aaron LeeType-B DCR Approved: IIS WMI Provider Eric, is there any setup work that needs to be done regarding the mfl file? Should setup copy the mfl to the appropriate directory?  -----Original Message----- From:  Eric Deily   Sent: Tuesday, August 29, 2000 11:17 AM Murat Ersan; Bruno K. Da Costa Subject: RE: Type-B DCR Approved: IIS WMI Provider  go ahead and check it in.    -----Original Message----- From:  Murat Ersan   Sent: Tuesday, August 29, 2000 8:29 AM Bruno K. Da Costa Eric Deily Subject: RE: Type-B DCR Approved: IIS WMI Provider  Bruno, let me know ASAP when you are done with testing so that I can check it in. Thanks, Murat  -----Original Message----- From:  Gwyneth Marshall   Sent: Monday, August 28, 2000 4:35 PM Eric Deily Murat Ersan; Bruno K. Da Costa Subject: RE: Type-B DCR Approved: IIS WMI Provider  Please check it in. Thanks!  -----Original Message----- From:  Eric Deily   Sent: Monday, August 28, 2000 4:34 PM Gwyneth Marshall Murat Ersan; Bruno K. Da Costa Subject: RE: Type-B DCR Approved: IIS WMI Provider  Importance: Gwyneth, I need to know if we have to checkin the English file or not. The new MOF works (Bruno is still running his tests), so we'll probably be checking in this MOF.  But what about the MFL?   -ericde  -----Original Message----- From:  Gwyneth Marshall   Sent: Friday, August 25, 2000 3:41 PM Eric Deily Subject: RE: Type-B DCR Approved: IIS WMI Provider  The mail I got from the Loc team indicates that they think both files (MOF and MFL should be checked into SourceDepot).  For now, just check in the MOF file and I will work with NT International and the localizers to see if the English MFL file should also be checked in. Thanks!  -----Original Message----- From:  Eric Deily   Sent: Friday, August 25, 2000 3:38 PM Gwyneth Marshall Subject: FW: Type-B DCR Approved: IIS WMI Provider  Gwyneth, I'm hacking away on our MOF file right now.  What should we checkin?  I can easily build a base MOF (w/o Description strings) and an english (MS_409) MFL file, but after that I don't know what path we should take.  Should I checkin the base MOF? thanks. -ericde  -----Original Message----- From:  Michael Maston   Sent: Friday, August 25, 2000 1:17 PM Eric Deily Subject: RE: Type-B DCR Approved: IIS WMI Provider  Yes, what you are doing should work. The way we have done MFLs is that we have the MOFCOMP stage as part of our build process.  What we keep in SD is the "master" MOF, meaning the one with everything in one MOF.  At build time, we generate the MOF and MFL using MOFCOMP.  You hand off the MFLs to localization (we have provided them with a DLL for LocStudio to help with MFLs).    -----Original Message----- From:  Eric Deily   Sent: Friday, August 25, 2000 11:55 AM Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  Importance: Michael, It looks like we're needing assisntance on splitting the file.  according to your email, I need to just look for any [Description(...)] markers in the MOF included, and make sure to put an AMENDED tag at the end of it, or AMENDMENT, LOCALE(1033) - right?  One of the examples that appears to have been done on our MOF is the following: [Description("..."): ToSubClass, AMENDMENT, LOCALE(1033)] What's the ToSubClass for, and is it needed to localize?   After I do this, I run  mofcomp -MOF:iiswmim.mof -MFL:iiswmi.mfl iiswmi.mof right?  This will separate out all the descriptions into iiswmi.mfl, and leave iiswmim.mof as the main base MOF, right?  Then I checkin IISWMIM.MOF into my tree.  My question then becomes which MFL do I checkin, or do I hand the MFL off to NT Localization, and checkin the resulting 30 MFL's?   Thanks. -ericde  -----Original Message----- From:  Michael Maston   Sent: Tuesday, July 11, 2000 4:55 PM Richard Ersek; Raxit Kagalwala Subject: RE: Type-B DCR Approved: IIS WMI Provider  Yes, the MOF you have now is probably very close to if not already ready for the splitting process.  As long as it identifies the descriptions and display name qualifiers as amended, you are set.  If it doesn't, it is very easy to do and won't affect the structure of the schema or the provider code. Let us know if you need any assist on it.  -----Original Message----- From:  Richard Ersek   Sent: Tuesday, July 11, 2000 4:41 PM Michael Maston; Raxit Kagalwala Subject: RE: Type-B DCR Approved: IIS WMI Provider  Ok, I've found a doc that explains this in detail from MSDN.  It pretty much restates what you're saying here.  So it sounds like we convert the mof we have into a version with the basic classes and then create localized mofs with amended classes.  I'm assuming that what we have can be a master mof already but if not, we might need some work.  We're not using any Value qualifiers that I know of so we're basically talking about localizing descriptions and display names.  -----Original Message----- From:  Michael Maston   Sent: Tuesday, July 11, 2000 4:29 PM Richard Ersek; Raxit Kagalwala Subject: RE: Type-B DCR Approved: IIS WMI Provider  Our normal localization effort is: 1) Localize any class, property, method, etc. descriptions 2) Localize any VALUES qualifiers  3) Don't put localizable data in the provider 4) Provider should act as a pass-thru for any localized data coming from the data source (in this case the metabase) 5) Don't localize any class, property, method, etc. names 6) Don't localize any of the name of standard qualifiers (read, write, etc.) The way we do this have a "master" MOF file that contains all the English versions of all the localizable text.  We define the localizable qualifiers as "amended".  If you run MOFCOMP with the -MOF and -MFL flags it will split the master MOF into a MOF file without all the localizable data in it and a MFL file that somewhat mirrors the MOF but contains all the localizable data in it.  We have tools for LocStudio that allow localizers to take the MFL and localize it into the various languages.  You ship the MFLs (which are loaded into parallel, locale namespaces).  When a user asks for data (and qualifiers, they are optional by default), WMI looks at their locale and gives them the localized info for their locale. You should probably go over one of our master MOFs with Raxit to see how this all works.  It is fairly simple to add the necessary statements for the amended qualifiers (if they aren't there already). Michael Maston Program Manager, WMI SDK and Providers *mimaston@microsoft.com *425-936-3750   -----Original Message----- From:  Richard Ersek   Sent: Tuesday, July 11, 2000 4:08 PM Raxit Kagalwala; Michael Maston Subject: FW: Type-B DCR Approved: IIS WMI Provider  What are we localizing in the schema, the descriptions?  Anything else?  I'm guessing that the provider code shouldn't have to change - is that ok to assume? Thanks, -Rich  -----Original Message----- From:  Sasha Nosov   Sent: Tuesday, July 11, 2000 4:02 PM Andrew Cushman; Edward Ye; Simon Muzio; Richard Ersek Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  You must localize your schema if you are on Whistler box (this is the OS requirements). If you don't register with MUI then the MUI stup will not include your loacalized schema. It is between you and the MUI folks to determine.  -----Original Message----- From:  Andrew Cushman   Sent: Tuesday, July 11, 2000 3:49 PM Edward Ye; Sasha Nosov; Simon Muzio; Richard Ersek Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  what happens if we don't localize our schema and dont' register with mui setup? we are code complete and test complete already and this is the first we've heard of this.  -----Original Message----- From:  Edward Ye   Sent: Tuesday, July 11, 2000 3:45 PM Sasha Nosov; Simon Muzio; Andrew Cushman; Richard Ersek Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  the rules are not published yet because the project is not setup yet. I just got back from a 3 week vacation. I'll make this happen in this week.   -----Original Message----- From:  Sasha Nosov   Sent: Tuesday, July 11, 2000 3:43 PM Simon Muzio; Andrew Cushman; Edward Ye; Richard Ersek Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  Yes, your schema must be localized and registered with MUI setup according to the new rules that Edward have introduced based on my input. Edward, are these published yet?  -----Original Message----- From:  Simon Muzio   Sent: Tuesday, July 11, 2000 3:32 PM Andrew Cushman; Edward Ye; Richard Ersek Sasha Nosov; Michael Maston Subject: RE: Type-B DCR Approved: IIS WMI Provider  Not that I know of. Sasha/Michael?  -----Original Message----- From:  Andrew Cushman   Sent: Tuesday, July 11, 2000 3:12 PM Edward Ye; Richard Ersek; Simon Muzio Subject: RE: Type-B DCR Approved: IIS WMI Provider  i don't  think we explicitly considered it. please tell me if mui has affected any other wmi providers. thanks   -----Original Message----- From:  Edward Ye   Sent: Tuesday, July 11, 2000 10:19 AM Andrew Cushman Subject: FW: Type-B DCR Approved: IIS WMI Provider  Hi, Andrew, Have you considered MUI in this picture or MUI is not an issue at all for this work? thx  -----Original Message----- From:  Bjorn Rettig (WINDOWS PM)   Sent: Tuesday, July 11, 2000 6:51 AM Edward Ye Subject: FW: Type-B DCR Approved: IIS WMI Provider  does this work with mui?  -----Original Message----- From:  Andrew Cushman   Sent: Monday, July 10, 2000 1:03 PM Whistler Planning Group Richard Ersek Subject: Type-B DCR Approved: IIS WMI Provider  IIS WMI Provider: The IIS WMI provider provides access through COM object interfaces to IIS metabase data and methods on objects instantiated from the metabase.  WMI is used by Windows 2000, management tools and scripts to manage systems composed of numerous devices, resources and applications. WMI users will access metabase nodes, properties and methods through the COM object instances of WMI classes generated by the WMI provider.  This facilitates access through: Windows Scripting Host (WSH) scripts User-written Visual Basic, C++ and Java applications Management tools and middleware written by ISVs and Microsoft Enterprise products such as Microsoft Exchange The IIS WMI provider will be used by other groups. But there are no external dependencies. The spec is attached. dev approval: geoffrek test approval: stevecon mgmt approval: rodneyl (mackm and kkean support this dcr too)rcpg125 o L qty !up w -q P n !-r m 16 -8 sag~e8 i0-144 @6@18 0:U>6T @29-0  11:17 `M?wTo@GM n; Br ba?xubj4 @GRJE> E`J/K? _S-01p3 ns3b. nks,5*D#f @X_a&Glwy/ m  \[8A qOr_sc 5*ot!5$G >_|o} -Qma|17 h-RmQs) 4A-b. w-0jA n`6@z Taw\` i/B@Y -4/@" rsp}h cl?`R M`ENDE2`/  LOCALE ")QQoP1 I".]o wm7@. Q axwaK )B`Sa n51gD} 8!x6e Vi`UE SG*%^ ar C( QgCG`UF?R 36-375 @2<?PW PG`iDVa @@!803s- 7Q%1y duV0h R 0No UOV_WoX ub<q7 dOe_fo FWs?tOu_ 9P(W`INDOW oM[6:51 tw-5y 'b4P+R 92H"P `+P5qd y}P2(<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"> <HTML> <HEAD> <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1"> <META NAME="Generator" CONTENT="MS Exchange Server version 6.0.4418.8"> <TITLE>RE: Type-B DCR Approved: IIS WMI Provider </TITLE> </HEAD> <BODY> <!-- Converted from text/rtf format --> <P><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Eric, is there any setup work that needs to be done regarding the mfl file? Should setup copy the mfl to the appropriate directory?</FONT></P> <P><FONT FACE="Arial"><SPAN LANG="en"></SPAN></FONT><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, August 29, 2000 11:17 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Murat Ersan; Bruno K. Da Costa</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">go ahead and check it in.&nbsp; </FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Murat Ersan&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, August 29, 2000 8:29 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Bruno K. Da Costa</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Bruno, let me know ASAP when you are done with testing so that I can check it in. Thanks,</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Murat</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Verdana"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Gwyneth Marshall&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Monday, August 28, 2000 4:35 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Murat Ersan; Bruno K. Da Costa</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">Please check it in.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">Thanks!</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">G.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Monday, August 28, 2000 4:34 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Gwyneth Marshall</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Murat Ersan; Bruno K. Da Costa</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Importance:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">High</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">Gwyneth,</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">I need to know if we have to checkin the English file or not. The new MOF works (Bruno is still running his tests), so we'll probably be checking in this MOF.&nbsp; But what about the MFL?&nbsp; </FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">-ericde</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Verdana"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Gwyneth Marshall&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Friday, August 25, 2000 3:41 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">The mail I got from the Loc team indicates that they think both files (MOF and MFL should be checked into SourceDepot).&nbsp; For now, just check in the MOF file and I will work with NT International and the localizers to see if the English MFL file should also be checked in.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">Thanks!</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#008080" SIZE=2 FACE="Verdana">G.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Trebuchet MS"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Friday, August 25, 2000 3:38 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Gwyneth Marshall</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">FW: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Trebuchet MS">Gwyneth,</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Trebuchet MS">I'm hacking away on our MOF file right now.&nbsp; What should we checkin?&nbsp; I can easily build a base MOF (w/o Description strings) and an english (MS_409) MFL file, but after that I don't know what path we should take.&nbsp; Should I checkin the base MOF?</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Trebuchet MS">thanks.</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Trebuchet MS">-ericde</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Friday, August 25, 2000 1:17 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Yes, what you are doing should work.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">The way we have done MFLs is that we have the MOFCOMP stage as part of our build process.&nbsp; What we keep in SD is the &quot;master&quot; MOF, meaning the one with everything in one MOF.&nbsp; At build time, we generate the MOF and MFL using MOFCOMP.&nbsp; You hand off the MFLs to localization (we have provided them with a DLL for LocStudio to help with MFLs).&nbsp; </FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Eric Deily&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Friday, August 25, 2000 11:55 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Importance:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">High</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">Michael,</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">It looks like we're needing assisntance on splitting the file.&nbsp; according to your email, I need to just look for any [Description(...)] markers in the MOF included, and make sure to put an AMENDED tag at the end of it, or AMENDMENT, LOCALE(1033) - right?&nbsp; One of the examples that appears to have been done on our MOF is the following:</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Courier New">[Description(&quot;...&quot;): ToSubClass,</FONT></SPAN><SPAN LANG="en-us"><B> <FONT COLOR="#000080" SIZE=2 FACE="Courier New">AMENDMENT, LOCALE(1033)</FONT></B><FONT COLOR="#000080" SIZE=2 FACE="Courier New">]</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">What's the<I> ToSubClass</I> for, and is it needed to localize?&nbsp; </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">After I do this, I run </FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Courier New">mofcomp -MOF:iiswmim.mof -MFL:iiswmi.mfl iiswmi.mof</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">right?&nbsp; This will separate out all the descriptions into iiswmi.mfl, and leave iiswmim.mof as the main base MOF, right?&nbsp; Then I checkin IISWMIM.MOF into my tree.&nbsp; My question then becomes which MFL do I checkin, or do I hand the MFL off to NT Localization, and checkin the resulting 30 MFL's?&nbsp; </FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">Thanks.</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#000080" SIZE=2 FACE="Arial">-ericde</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:55 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek; Raxit Kagalwala</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Yes, the MOF you have now is probably very close to if not already ready for the splitting process.&nbsp; As long as it identifies the descriptions and display name qualifiers as amended, you are set.&nbsp; If it doesn't, it is very easy to do and won't affect the structure of the schema or the provider code.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Let us know if you need any assist on it.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:41 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston; Raxit Kagalwala</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Ok, I've found a doc that explains this in detail from MSDN.&nbsp; It pretty much restates what you're saying here.&nbsp; So it sounds like we convert the mof we have into a version with the basic classes and then create localized mofs with amended classes.&nbsp; I'm assuming that what we have can be a master mof already but if not, we might need some work.&nbsp; We're not using any Value qualifiers that I know of so we're basically talking about localizing descriptions and display names.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:29 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek; Raxit Kagalwala</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Our normal localization effort is:</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">1) Localize any class, property, method, etc. descriptions</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">2) Localize any VALUES qualifiers </FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">3) Don't put localizable data in the provider</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">4) Provider should act as a pass-thru for any localized data coming from the data source (in this case the metabase)</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">5) Don't localize any class, property, method, etc. names</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">6) Don't localize any of the name of standard qualifiers (read, write, etc.)</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">The way we do this have a &quot;master&quot; MOF file that contains all the English versions of all the localizable text.&nbsp; We define the localizable qualifiers as &quot;amended&quot;.&nbsp; If you run MOFCOMP with the -MOF and -MFL flags it will split the master MOF into a MOF file without all the localizable data in it and a MFL file that somewhat mirrors the MOF but contains all the localizable data in it.&nbsp; We have tools for LocStudio that allow localizers to take the MFL and localize it into the various languages.&nbsp; You ship the MFLs (which are loaded into parallel, locale namespaces).&nbsp; When a user asks for data (and qualifiers, they are optional by default), WMI looks at their locale and gives them the localized info for their locale.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">You should probably go over one of our master MOFs with Raxit to see how this all works.&nbsp; It is fairly simple to add the necessary statements for the amended qualifiers (if they aren't there already).</FONT></SPAN></P> <P><SPAN LANG="en-us"><B><FONT COLOR="#008080" SIZE=2 FACE="Tahoma">Michael Maston</FONT></B></SPAN> <BR><SPAN LANG="en-us"><B><FONT COLOR="#008080" SIZE=2 FACE="Tahoma">Program Manager, WMI SDK and Providers</FONT></B></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#008080" FACE="Wingdings">*</FONT><FONT COLOR="#008080" SIZE=2 FACE="Tahoma">mimaston@microsoft.com</FONT> <FONT COLOR="#008080" FACE="Wingdings">(</FONT><FONT COLOR="#008080" SIZE=2 FACE="Tahoma">425-936-3750</FONT> </SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:08 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Raxit Kagalwala; Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">FW: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">What are we localizing in the schema, the descriptions?&nbsp; Anything else?&nbsp; I'm guessing that the provider code shouldn't have to change - is that ok to assume?</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Thanks,</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">-Rich</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Palatino Linotype"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Sasha Nosov&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 4:02 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman; Edward Ye; Simon Muzio; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Palatino Linotype">You must localize your schema if you are on Whistler box (this is the OS requirements). If you don't register with MUI then the MUI stup will not include your loacalized schema. It is between you and the MUI folks to determine.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:49 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye; Sasha Nosov; Simon Muzio; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">what happens if we don't localize our schema and dont' register with mui setup?</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">we are code complete and test complete already and this is the first we've heard of this.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:45 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Sasha Nosov; Simon Muzio; Andrew Cushman; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">the rules are not published yet because the project is not setup yet. I just got back from a 3 week vacation. I'll make this happen in this week. </FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">thx</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Palatino Linotype"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Sasha Nosov&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:43 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Simon Muzio; Andrew Cushman; Edward Ye; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Palatino Linotype">Yes, your schema must be localized and registered with MUI setup according to the new rules that Edward have introduced based on my input.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Palatino Linotype">Edward, are these published yet?</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Simon Muzio&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:32 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman; Edward Ye; Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Sasha Nosov; Michael Maston</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Not that I know of. Sasha/Michael?</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 3:12 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye; Richard Ersek; Simon Muzio</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">RE: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">i don't&nbsp; think we explicitly considered it.</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">please tell me if mui has affected any other wmi providers.</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">thanks </FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 10:19 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">FW: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Hi, Andrew,</FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">Have you considered MUI in this picture or MUI is not an issue at all for this work? thx</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Bjorn Rettig (WINDOWS PM)&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Tuesday, July 11, 2000 6:51 AM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Edward Ye</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">FW: Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">does this work with mui?</FONT></SPAN> <P><SPAN LANG="en-us"><FONT FACE="Arial"></FONT></SPAN><SPAN LANG="en"></SPAN><SPAN LANG="en">&nbsp;<FONT SIZE=1 FACE="Tahoma">-----Original Message-----</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">From: &nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Andrew Cushman&nbsp; </FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Sent:&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Monday, July 10, 2000 1:03 PM</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">To:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Whistler Planning Group</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Cc:&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Richard Ersek</FONT></SPAN> <BR><SPAN LANG="en"><B><FONT SIZE=1 FACE="Tahoma">Subject:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></B> <FONT SIZE=1 FACE="Tahoma">Type-B DCR Approved: IIS WMI Provider </FONT></SPAN> <UL><UL> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">IIS WMI Provider:</FONT> <FONT SIZE=2 FACE="Arial">The IIS WMI provider provides access through COM object interfaces to IIS metabase data and methods on objects instantiated from the metabase.&nbsp; WMI is used by Windows 2000, management tools and scripts to manage systems composed of numerous devices, resources and applications.</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT SIZE=2 FACE="Arial">WMI users will access metabase nodes, properties and methods through the COM object instances of WMI classes generated by the WMI provider.&nbsp; This facilitates access through:</FONT></SPAN></P> <P><SPAN LANG="en-us"><FONT SIZE=2 FACE="Symbol">&#183;<FONT FACE="Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></FONT> <FONT SIZE=2 FACE="Arial">Windows Scripting Host (WSH) scripts</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT SIZE=2 FACE="Symbol">&#183;<FONT FACE="Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></FONT> <FONT SIZE=2 FACE="Arial">User-written Visual Basic, C++ and Java applications</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT SIZE=2 FACE="Symbol">&#183;<FONT FACE="Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></FONT> <FONT SIZE=2 FACE="Arial">Management tools and middleware written by ISVs and Microsoft</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT SIZE=2 FACE="Symbol">&#183;<FONT FACE="Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT></FONT> <FONT SIZE=2 FACE="Arial">Enterprise products such as Microsoft Exchange</FONT></SPAN> </UL></UL> <P><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">The IIS WMI provider will be used by other groups. But there are no external dependencies. The spec is attached.</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">dev approval: geoffrek</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">test approval: stevecon</FONT></SPAN> <BR><SPAN LANG="en-us"><FONT COLOR="#0000FF" SIZE=2 FACE="Arial">mgmt approval: rodneyl (mackm and kkean support this dcr too)</FONT></SPAN> </UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL></UL> </BODY> </HTML><BFF90FB6CF66D111BF4F0000F840DB850FFCD103@lassie.dns.microsoft.com><B245B3C3A0729D429CC55A15D5BF71246CA25A@red-pt-01.redmond.corp.microsoft.com>Murat Ersan (Exchange)/O=MICROSOFT/OU=APPS-WGA/CN=RECIPIENTS/CN=MURATEMurat Ersan (Exchange)/O=MICROSOFT/OU=APPS-WGA/CN=RECIPIENTS/CN=MURATEtitle  Management APIs for .Net Frameworks Configuration  January 11, 2001, 2000, Draft Rev 0.8  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes the Management APIs for .Net Frameworks configuration, including the .Net Frameworks Configuration WMI provider and the System.Management APIs as applied to configuration information. TOC \o "1-3" Introduction  PAGEREF _Toc503854457 \h  Goals  PAGEREF _Toc503854458 \h  Non Goals  PAGEREF _Toc503854459 \h  WMI provider for .Net Framework Configuration  PAGEREF _Toc503854460 \h  MSINTERNAL: Schema definition format  PAGEREF _Toc503854461 \h  Class Mapping for configuration information  PAGEREF _Toc503854462 \h  2.2.1 Data type mapping  PAGEREF _Toc503854463 \h  2.2.2 Class naming  PAGEREF _Toc503854464 \h  2.2.3 Relations and Associations  PAGEREF _Toc503854465 \h  2.2.4 Qualifiers  PAGEREF _Toc503854466 \h  Singletons [MSINTERNAL]  PAGEREF _Toc503854467 \h  Collections without Primary Key  PAGEREF _Toc503854468 \h  Configuration without schema  PAGEREF _Toc503854469 \h  Enumeration & Query  PAGEREF _Toc503854470 \h  Batch update  PAGEREF _Toc503854471 \h  Selectors  PAGEREF _Toc503854472 \h  2.8.1 Web Application Selector (IIS://)  PAGEREF _Toc503854473 \h  2.8.2 Shell Application Selector (shell://)  PAGEREF _Toc503854474 \h  2.8.3 Configuration File Selector  PAGEREF _Toc503854475 \h  2.8.4 Well-known configuration files  PAGEREF _Toc503854476 \h  Location element  PAGEREF _Toc503854477 \h  Merging and Merge Hierarchies  PAGEREF _Toc503854478 \h  Application Enumeration  PAGEREF _Toc503854479 \h  2.11.1 Base classes  PAGEREF _Toc503854480 \h  2.11.2 Web Applications  PAGEREF _Toc503854481 \h  2.11.3 Web Directories  PAGEREF _Toc503854482 \h  2.11.4 WebApplicationToIISDirectory/VirtualDir/ServerAssociator  PAGEREF _Toc503854483 \h  2.11.5 WebApplicationToAssemblyAssociator  PAGEREF _Toc503854484 \h  2.11.6 Shell Applications  PAGEREF _Toc503854485 \h  2.11.7 Assembly enumeration (cut)  PAGEREF _Toc503854486 \h  2.11.8 Custom Hosts  PAGEREF _Toc503854487 \h  Miscellaneous  PAGEREF _Toc503854488 \h  General Provider requirements  PAGEREF _Toc503854489 \h  Platform Support  PAGEREF _Toc503854490 \h  Setup Requirements  PAGEREF _Toc503854491 \h  Globalization  PAGEREF _Toc503854492 \h  Performance  PAGEREF _Toc503854493 \h  Testing  PAGEREF _Toc503854494 \h  Globalization/Localization  PAGEREF _Toc503854495 \h  Specific schema  PAGEREF _Toc503854496 \h  Samples  PAGEREF _Toc503854497 \h  System.Management  PAGEREF _Toc503854498 \h  Scripting  PAGEREF _Toc503854499 \h  Postponed Features  PAGEREF _Toc503854500 \h  Open Issues  PAGEREF _Toc503854501 \h  Implementation issues  PAGEREF _Toc503854502 \h  Murat s analysis:  PAGEREF _Toc503854503 \h  Error! Bookmark not defined. Revision History  PAGEREF _Toc503854504 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Introduction The .Net Framework consists of several, tightly integrated and interdependent technologies: Common Language Runtime (CLR) Class Libraries Web Services Net Classes All these technology areas have configurable properties, which are specified in XML configuration files. The different areas use different mechanisms to read their configuration information at system runtime, but a single management APIs allows uniform, programmatic access to all .Net Framework configuration information. The Application Center Configuratiom Management team owns this management API. It and consists of the following building blocks: A native code WMI provider: this provider is schema driven and maps the XML configuration information and the configuration file hierarchy to WMI classes and instances. The provider is developed by the Application Center Configuration Management team, and is described in detail in this specification. A managed code API to access all WMI information (System.Management): this API was designed as a collaborative effort between the WMI team, the Frameworks team and the Application Center team. It is developed by the WMI team and is described in detail in  HYPERLINK "http://wmig/vss/specifications/Quasar/program Management/MiniQuasar WMI+ (PM Spec).doc" the System.Management specification . This specification contains sample code describing the use of System.Management for managing configuration information. Goals Provide a management API for all .NET Frameworks configuration information. Enable Management Application for configuration information to be written in both native code and managed code. Enable management of configuration information through command line scripts. Allow discovery of applications and configuration files through the management API. Allow reading and writing of configuration information. Provide basic consistency validation of configuration information during read and write. Provide a management API for user defined application settings (as offered by the <appsettings> mechanism in the Framework configuration system, and potentially for a set of well-known section handlers). MarkusH: Beyond the dictionary section handler there need to be other reusable section handlers (singleton and collection of singleton). We can make this a sample, but ideally this should be part of the Framework configuration system offering. Non Goals Provide a high-performance API for accessing configuration information at system runtime. This requirement is partially covered by the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  Framework configuration system  (read-only in V1). Provide a general-purpose mechanism for application settings. This requirement is partially covered by the section handler mechanism of the Framework configuration system. The management API should allow management of a well-defined subset of application settings. WMI provider for .Net Framework Configuration The WMI provider for .Net Framework Configuration exposes configuration information and configuration file hierarchy to WMI classes and instances. [MSINTERNAL] The class mapping is almost entirely schema driven, but the schema is not publicly extensible: only MS internal groups can define schema and all schema is compiled into the WMI provider binaries. This approach makes it easy to add new configuration entries and modify existing configuration definitions without having to change any code. The schema is defined in a special purpose XML format, that is easier to manually author and maintain than XML schema (XDR and even XSD). [end MSINTERNAL] MSINTERNAL: Schema definition format tbw: The configuration management team owns the schema definition for the .Net config (urtmeta.xml). The schema is defined in XML files, which get compiled into the provider binaries (urtcfg.dll) as part of the configuration system build process. A (ms-internal) utility (catutil.exe) exists to modify the binary schema without recompiling the configuration system binaries. Class Mapping for configuration information The .Net Frameworks Config WMI provider defines all schema in the WMI repository.  The configuration system build process generates a MOF file from the configuration schema (and an internal-only MOF template file), which .Net Frameworks setup installs via the MOF compiler utility. All .Net Frameworks classes reside in the  NETFRAMEWORKSv1  namespace. The namespace is defined in the MOF template file. All non-internal (Metaflag  INTERNAL  on CollectionMeta) configuration tables are exposed into the same WMI namespace, regardless of the database they belong to. The .Net provider does not support side-by-side installation for incremental builds. For major releases we will version the namespace name by changing the MOF template file. The ProductID used to locate the correct config binary version will also be changed and will typically be the same as the namespace name. P2: Currently we read the ProductID as a qualifier from the class definition in the WMI repository. Do we really need to expose this? This avoids the need for script authors to change their scripts from build to build or minor release to minor release. It is consistent with the general versioning approach in the WMI world. MarkusH: We are basing this on the assumption that ASP+ is not s-b-s installable. Need to run this by the .Net people.  P1: MarkusH: Do we need to support scoping of table names by WMI namespace (or database)? In Beta 1, <Assemblies> and <assemblies> conflicted. Assumption is that there will not be conflicting table names.  Configuration base class class NetConfigurationClass { [key] String Selector; Need the exact schema. Data type mapping Schema and data types in the Config system will be mapped to WMI schema and data types as follows: Config System Type WMI Type Collection Class Item in collection Instance Property Property Uint32 String String Multistring Array of strings Binary Array of uint8 Boolean Boolean ExpandSZ (environment variable) String, becomes a boolean qualifier on the property Timestamp Datetime Primary key Foreign key Mapped as a qualifier on the property in the class definition.  Property will be mapped to an appropriate property in the WMI class.  Enumerated types Mapped to appropriate data type and VALUE/VALUEMAP pairs Relations w/ UseContainment Embedded object in the instance Relations w/o UseContainment Association class Enumerated types in the config system have a data type, a set of appropriate values and enumerated values that correspond 1:1 with each value.  These are to be mapped to the appropriate data type, VALUEMAP and VALUE qualifiers in WMI.  For example: In the config system: <Property       InternalName="Zone"                     Type="UI4"      MetaFlags=""> <Enum       InternalName="MyComputer"               Value="0" /> <Enum       InternalName="Intranet"                 Value="1" /> <Enum       InternalName="Trusted"                  Value="2" /> <Enum       InternalName="Internet"                 Value="3" /> <Enum       InternalName="Untrusted"                Value="4" /> </Property> In WMI: uint32 Zone; [ VALUEMAP {  }, VALUES { MyComputer Intranet Trusted Internet Untrusted MarkusH: Is there a better way to expose enums in WMI? What support does System.Management have for the VALUEMAP qualifiers (if any)? MarkusH: Do the Frameworks config APIs define enumeration values for some of these entries? Class naming WMI class names are generated from the public name of the collections.  WMI class names should be case-preserving from the original config system collection name. Should we change the capitalization etc. to comply with WMI conventions? It seems that config files will use camelCasing. Could  we could just make the first character UPPERCASE or do we need more complex mappings (name prefix?)? The config system adopts WMI naming restrictions and case-insensitivity so the provider does not perform any significant translations of schema names between config system and WMI. The following naming restrictions are be enforced in the schema compilation utility: A WMI name must start with a letter Cannot have leading or trailing underscores Only contains letters, digits and underscores as part of the name WMI names are case-insensitive Primary keys can not be Arrays, Real and floating-point numbers, Embedded objects  or characters lower than ASCII 32 (that is, white space characters). P2: StephenR: Does this need to be implemented in catutil? Relations and Associations Relations without a  UseContainment  statement are equivalent to an unnamed association definition.  The name of the association that is created will be built from the names of the two collections that the Relations definition specifies. 1:N relations in the configuration system are supported by supplying a partial primary key as the foreign key.  These need to be mapped appropriately to 1:N associations in WMI. P1: MarcelV: Are we doing the right thing here? Qualifiers Description qualifier The configuration schema allows a  Description  to be defined for tables ( TableMeta.Description ) and columns ( ColumnMeta.Description ). The MOF generator generates a MFL files (MOF files for localization) that contains description qualifiers for the EN locale. The main MOF file does not contain description qualifiers. Localization teams can then pick up the EN MFL and localize it to other languages. This is the standard WMI localization process. DisplayName qualifier Would be nice to support, but is a lower priority. Units qualifier Nice to have, low priority. Password qualifier Should we tag passwords? Mark them as write only? Read/Write qualifiers Read and write qualifiers will be placed by default on all classes. There is no way to detect which classes are read-only vs. read/write from the config system. For .Net all classes are read/write, so this is not a requirement for the .Net provider. Singletons [MSINTERNAL] The provider and MOF generator introduce a  Selector  property to all defined configuration classes. The provider maps the Selector property to the special   query cell where appropriate. Ideally, singleton collections should be handled inside the config system by introducing a  Selector  property on all .Net config classes, so that the provider does not have to do any special work. Due to schedule constraints we leave the current implementation, with the hope of doing code cleanup later, or at least for V2. Collections without Primary Key Multi-instance collections without keys are not required for .Net Framework configuration. Configuration without schema P3 (cut): Need to provide access to raw XML if no schema is available for a configuration node (browsercaps, custom section handlers and potentially custom permissions). Enumeration & Query The provider does not support class enumeration for any configuration class, as this would require enumeration of all configuration files on the machine, which is not useful/practical. The provider supports retrieving instances by key on any class supplied by the provider. The provider supports simple WQL queries but leaves more complex queries to CIMOM to post-filter. MarcelV: WMI only supports returning a super-set of the requested result set (which it them filters). This means that we have to at a minimum parse out the Selector property for every supported query. Can we do this? The provider supports writing of instances. There are no read-only classes. The provider supports creating of instances. The provider supports deleting of instances.   Batch update There will be a special class with a method for batching updates. Signature of the method is as follows: Class BatchEntry [values{"create", "modify", "delete", "retrieve"}, Description("Batch operation to perform: when create-provide an instance, modify-provide an instance, delete-fill in an object path, retrieve-fill in an object path")] uint32 Op; [Description("Instance to be modified or created")] object Inst; [Description("Object (path) to be deleted or retrieved.  For create operations, BatchOperation::ProcessBatch method returns the path for the instance")] string Path; [Description("returns HRESULT of the operation")] uint32 Status; -------------------------------------------------------------------- [abstract, description("Expectation that this will be processed in the order in which the method list is specified.  Derive from this class and implement the method (per provider)")] class BatchOperation { [static] uint32 ProcessBatch([in, out]BatchEntry BatchList[], [in]uint32 flags); uint32 BatchCreate[in]object ObjectList[], [in]uint32 flags, [out]uint32 status[], [out]string Path[]); uint32 BatchUpdate([in]object ObjectList[], [in]uint32 flags, [out]uint32 status[], [out]string Path[]); uint32 BatchDelete([in]string Path[], [in]uint32 flags, [out]uint32 status[], [out]object results[]); uint32 BatchRetrieve([in]string Path[], [in]uint32 flags, [out]uint32 status[], [out]object results[]); P2: MarkusH: We should run this by the WMI team, so that they can update their documentation, and tell people that the batch update is the preferred method of updating data. P2: MarkusH: System.Management should also have special support for this, so that we guide people in the right direction for doing multi-updates. The configuration WMI provider supports multi-updates only of instances of the same class that are written into the same file. Other cases will result in an error. P2: Multi-update of different classes for the same file. P3: Multi-update of different classes into different files. Selectors Selector modeling all happens in the config system: we add a  Selector  property to every config type. The selector property acts as a symbolic name for a physical file (or multiple files). A set of qualifiers is added to the class that indicates which selectors are supported for this class. The following selectors are supported: Web Application Selector (IIS://) Syntax: IIS://localhost/<metabase path> The syntax for the Selector is identical to the moniker supported by the IIS ADSI provider, except that  All Selectors must use  localhost  as the machine name.  All Selectors must refer to a node at or below the root node of an IIS site (w3svc/<siteid>/root). It is not possible to use the path to the site node (w3svc/<siteid>) as a selector, nor is it possible to use to any metabase path outside of the w3svc node. Example:  IIS://localhost/w3svc/1/root Note: This URL is slightly different from the IIS WMI provider approach, which uses only relative paths and models the machine name as a WMI system property (__server), but it is preferable to require the  localhost  string than to define an entirely new URL scheme. Shell Application Selector (shell://) Syntax: shell://<UNC path to module> Example: shell://c:\program files\my company\myapp.exe Configuration File Selector Syntax:   HYPERLINK "file://<filepath"  file://<filepath >[#<location>] This filepath portion of this URL represents a configuration file in the file system. The (optional) location portion represents the Path of a <location> element within a ASP+ configuration file (see <Location> section in the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  ASP+ configuration specification  for details). If no location is specified, the selector only references configuration outside of any <location> element in the file. The URL is normalized according to RFC1738 rules (using URLMon s URL manipulation APIs). Specifically: Forward slashes ( ) are supported and converted to backward slashes ( ) before being passed to Win32 file system APIs. File paths containing reserved characters (like  ) must be encoded using standard URL encoding rules (i.e.   must be  Well-known configuration files Machine configuration Syntax: config://localhost Represents the machine configuration file (%CLR Install Dir%\machine.config). MarkusH: What is the registry key/API we can use to determine this location? MarkusH: Is there any configuration that can not be specified in machine.config, but can appear in an app/dir/shell app? Machine security policy Syntax: config://localhost/security Represents the machine security policy file (%CLR Install Dir %\config\security.config). MarkusH: What about enterprise policy (enterprise.config per runtime security admin spec)? User security policy Syntax: config://localhost/security/user Represents the user security policy file ((%userprofile%\ application data\Microsoft\CLR security config\vxx.xx\security.config) for the current calling user identity. Syntax: config://localhost/security/user/<username> Represents the user security policy file (%userprofile%\ application data\Microsoft\CLR security config\vxx.xx\security.config) for the specified user. How do we determine the user profile location on Win9x? Note: Like in IIS s ADSI provider,  http:  URL are not supported as there is no reliable/efficient mechanism to resolve them to the proper IIS vdir. Using   URLs is also not desirable for management tools/scripts, as the URL mapping can change at any time. Note: The previously supported  appdomain://  selector is not supported, as there is no mechanism to detect the application domain of the caller (if any) from within the WMI provider. Location element class Location { [key] String Selector; [key] String Path; Boolean AllowOverride; The Location class represents Location sections that can be used in ASP+ configuration files to specify configuration for a child node in the configuration file of a parent node, as well as lock down the configuration of a child node against accidental or malicious changes. Refer to the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  ASP+ configuration spec  for details. The Location Path property is a relative path indicating the child node to which the section is to be applied. The Path segments must be separated using forward slash ( Location elements can only be retrieved or written using a file selector. New location sections can be inserted by creating and saving a new instance of the Location class. An entire location section can be deleted by deleting a Location class instance. Location sections cannot be renamed: the section needs to be deleted and recreated. Configuration entries can be retrieved or written using the #<location> syntax of the file selector, or by using the association from Location class to configuration classes: [Association: DisableOverride ToInstance ToSubClass] class LocationConfiguration: NodeToConfigurationClass {}; Merging and Merge Hierarchies Application Enumeration In addition to manipulating configuration files, the .Net Config WMI provider also supports discovery of .Net applications. The .Net Framework provides three host environments for applications:  Web Applications: ASP+ Shell Applications: command line  Browser hosted  controls The .Net Config WMI provider fully supports discovery of Web Applications, and to a lesser extent of Shell Applications. Base classes Need to turn these definitions into valid MOF syntax Applications and Nodes class ConfigurationNode { [key] String Selector; // must begin with a URL protocol prefix class Application : ConfigurationNode { // "abstract" // Selector: must refer to an application node Configuration information for a node P2: MarkusH: How do we determine which class can be specified at which level (machine vs. app vs. dir vs. file)? Can we use the IIS KeyType? For now assume we don t enforce these restrictions. [Association: DisableOverride ToInstance ToSubClass] class NodeToConfigurationClass { [key, read: ToSubClass] ConfigurationNode ref Node; [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; What is the real name of the base class of the config classes? [Association: DisableOverride ToInstance ToSubClass] class NodeToConfigurationClassUnmerged : NodeToConfigurationClass { [Association: DisableOverride ToInstance ToSubClass] class ApplicationConfiguration : NodeToConfigurationClass {} class ApplicationConfigurationUnmerged : NodeToConfigurationClassUnmerged {}; Configuration Files and Hierarchy class ConfigurationFile : ConfigurationNode { // Selector String Path; // path to the configuration file for this node. UNC path without  file:  prefix. [Association: DisableOverride ToInstance ToSubClass] //  abstract class ConfigurationHierarchy { [key, read: ToSubClass] ConfigurationNode ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref ContributingConfigFiles; How does one distinguish associations that return collections vs. singletons? [Association: DisableOverride ToInstance ToSubClass] //  abstract class ConfigurationFileLocation { [key, read: ToSubClass] ConfigurationNode ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref MainConfigFile; How does one distinguish associations that return collections vs. singletons? [Association: DisableOverride ToInstance ToSubClass] class ConfigurationNodeChildren { [key, read: ToSubClass] ConfigurationNode ref Node; [key, read: ToSubClass] ConfigurationNode ref ChildNodes; [Association: DisableOverride ToInstance ToSubClass] class ConfigurationNodeParent { [key, read: ToSubClass] ConfigurationNode ref Node; [key, read: ToSubClass] ConfigurationNode ref Parent; Web Applications class WebApplication : Application { // Selector: of the form iis://localhost/w3svc/<siteid>/root/<metabasepath> String Path;   // VDir for the MB path (based on metabase information) The Selector for a WebApplication must have an   HYPERLINK  \l "_Web_Application_Selector"   protocol prefix The WebApplication class supports instance enumeration, although it is somewhat inefficient: the provider has to enumerate all Sites/Directories in the IIS metabase that have an  approot  property. Note that this enumeration returns both ASP and ASP+ applications, as there is no robust/efficient mechanism to distinguish between ASP and ASP+ applications. WebApplication instances are read-only, except for creation/deletion of instances:  Creating (and saving) a new instance of WebApplication adds an "Approot" property to the IIS metabase. If necessary it creates a new node in the metabase. If the metabase node is already an  approot , only the Vdir is changed to WebApplication.Path. The ConfigurationFilePath property is ignored on write. MarkusH: Which additional MB entries do we need to create? Do we need to call the WAM APIs? Does ASP+ have any specific requirements as to inproc/oop/pooled? Deleting an instance of WebApplication removes the node and all its child nodes from the metabase. Note: The .Net Provider does not provide control over app properties, like inproc/pooled/out-of-proc, app identify. Use the IIS6 WMI provider (or ADSI on W2k) to manipulate these. WebApplication<config class>, WebApplication<config class>Unmerged Given a WebApplication instance it is common to  Retrieve a specific configuration class/section for the application.  Determine the set of configuration classes/sections applicable to this type of application To make these operations easier, the .Net Config provider associates all configuration classes with WebApplication instances via the Selector property (Selector is a key property on all config classes).  The provider offers two associations for each configuration class: WebApplication<config class>: returns the merged configuration for this application, including configuration information inherited from parent nodes or the machine configuration file. WebApplication<config class>Unmerged: returns only the configuration that is specified in the configuration file for this application. [MSONLY] The applicable configuration classes for a web application are defined in the configuration schema and are used by the MOF generation utility to generate the class definitions for the associations. The provider is also data/schema driven and additional classes and their associations can be added without recompiling the provider or the configuration binaries. MarcelV: Should the provider obtain the association information from the WMI repository (common base class!) or do we want to keep this in binary schema for efficiency reasons? Can we use RelationMeta for this? [end MSONLY] To enable efficient enumeration of all applicable configuration classes, all config class associators derive from common base classes: [Association: DisableOverride ToInstance ToSubClass] class WebApplicationConfiguration : ApplicationConfiguration { [key, read: ToSubClass] WebApplication ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; class WebApplicationConfigurationUnmerged : ApplicationConfigurationUnmerged { [key, read: ToSubClass] WebApplication ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; Examples: Retrieve information for an application Determine all applicable configuration for an application TODO: provide examples using System.Management and native VBS. Configuration File & Hierarchy [Association: DisableOverride ToInstance ToSubClass] //  abstract class WebApplicationHierarchy : ConfigurationHierarchy {}; This associator enables enumeration of all configuration files that contribute to a web application instance.  The associator returns a set of ConfigurationNode instances, which represent the files along the metabase hierarchy, including the machine configuration file. For details on the merge hierarchy, refer to the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  ASP+ configuration specification Do we need to express the order of the hierarchy? Sorting the instances by selector should give us the order. [Association: DisableOverride ToInstance ToSubClass] //  abstract class WebApplicationConfigurationFile : ConfigurationFileLocation { [key, read: ToSubClass] WebApplication ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref MainConfigFile; This association enables retrieval of only the main configuration file for a web application.  [Association: DisableOverride ToInstance ToSubClass] class WebApplicationChildren : ConfigurationNodeChildren { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] ConfigurationNode ref ChildNodes; This association enumerates all children (web applications or web directories) under this metabase node, not including any children of an immediate child. [Association: DisableOverride ToInstance ToSubClass] class WebApplicationChildApplications : ConfigurationNodeChildren { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] WebApplication ref ChildNodes; This association enumerates only web applications under this metabase node, not including any children of an immediate child. [Association: DisableOverride ToInstance ToSubClass] class WebApplicationChildDirectories : ConfigurationNodeChildren { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] WebDirectory ref ChildNodes; This association enumerates all child web directories under this metabase node, not including any children of an immediate child. [Association: DisableOverride ToInstance ToSubClass] class WebApplicationParentApplication : ConfigurationNodeParent { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] WebApplication ref Parent; Associates to immediate parent WebApplication, if any. [Association: DisableOverride ToInstance ToSubClass] class WebApplicationParent : ConfigurationNodeParent { [key, read: ToSubClass] WebApplication ref Node; [key, read: ToSubClass] ConfigurationNode ref Parent; Associates to immediate parent WebApplication or WebDirectory, if any. Web Directories class WebDirectory : ConfigurationNode { // Selector: of the form iis://localhost/w3svc/<siteid>/root/<metabasepath> String Path;   // VDir for the MB path (based on metabase information) The Selector for a WebDirectory must have an   HYPERLINK  \l "_Web_Application_Selector"   protocol prefix The WebDirectory class supports instance enumeration, although it is somewhat inefficient: the provider has to enumerate all Sites/Directories in the IIS metabase that do NOT have an  approot  property. Note that this enumeration returns both directories in ASP and ASP+ applications, as there is no robust/efficient mechanism to distinguish between ASP and ASP+ applications. WebDirectory instances are read-only, except for creation/deletion of instances:  Creating (and saving) a new instance of WebDirectory creates a new node in the IIS metabase and sets the Vdir to WebDirectory.Path. If the metabase node is already an  approot , the approot property is removed. If the node is a site, the save fails. The ConfigurationFilePath property is ignored on write and must be NULL. Deleting an instance of WebDirectory removes the node and all it s child nodes from the metabase (fails if the node is not a web directory). Note: The .Net Provider does not provide control over app properties, like inproc/pooled/out-of-proc, app identify. Use the IIS6 WMI provider (or ADSI on W2k) to manipulate these. WebDirectory<config class>, WebDirectory<config class>Unmerged Given a WebDirectory instance it is common to  Retrieve a specific configuration class/section for the application.  Determine the set of configuration classes/sections applicable to this type of application To make these operations easier, the .Net Config provider associates all configuration classes with WebDirectory instances via the Selector property (Selector is a key property on all config classes).  The provider offers two associations for each configuration class: WebDirectory<config class>: returns the merged configuration for this application, including configuration information inherited from parent nodes or the machine configuration file. WebDirectory<config class>Unmerged: returns only the configuration that is specified in the configuration file for this application. [MSONLY] The applicable configuration classes for a web directory are defined in the configuration schema and are used by the MOF generation utility to generate the class definitions for the associations. The provider is also data/schema driven and additional classes and their associations can be added without recompiling the provider or the configuration binaries. MarcelV: Should the provider obtain the association information from the WMI repository (common base class!) or do we want to keep this in binary schema for efficiency reasons? Can we use RelationMeta for this? [end MSONLY] To enable efficient enumeration of all applicable configuration classes, all config class associators derive from common base classes: [Association: DisableOverride ToInstance ToSubClass] class WebDirectoryConfiguration : NodeToConfigurationClass { [key, read: ToSubClass] WebDirectory ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; class WebDirectoryConfigurationUnmerged : NodeToConfigurationClassUnmerged { [key, read: ToSubClass] WebDirectory ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; Examples: Retrieve information for a directory. Determine all applicable configuration for a directory. MarkusH: TODO: provide examples using System.Management and native VBS. MarkusH => ScottGu: Is it an error if a config that only applied to an app is specified in a dir or does ASP+ just silently ignore the config? What should the provider do? Configuration File & Hierarchy [Association: DisableOverride ToInstance ToSubClass] //  abstract class WebDirectoryHierarchy : ConfigurationHierarchy {}; This associator enables enumeration of all configuration files that contribute to a web directory instance.  The associator returns a set of ConfigurationNode instances, which represent the files along the metabase hierarchy, including the machine configuration file. For details on the merge hierarchy, refer to the   HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta2.doc"  ASP+ configuration specification Do we need to express the order of the hierarchy? Sorting the instances by selector should give us the order. [Association: DisableOverride ToInstance ToSubClass] //  abstract class WebDirectoryConfigurationFile : ConfigurationFileLocation { [key, read: ToSubClass] WebDirectory ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref MainConfigFile; This associator enables retrieval of only the main configuration file for a web application.  [Association: DisableOverride ToInstance ToSubClass] class WebDirectoryChildren : ConfigurationNodeChildren { [key, read: ToSubClass] WebDirectory ref Node; [key, read: ToSubClass] ConfigurationNode ref ChildNodes; This association enumerates all children (web applications or web directories) under this metabase node, not including any children of an immediate child.  [Association: DisableOverride ToInstance ToSubClass] class WebDirectoryParentApplication : ConfigurationNodeParent { [key, read: ToSubClass] WebDirectory ref Node; [key, read: ToSubClass] WebApplication ref ChildNodes; Associates to parent WebApplication. WebApplicationToIISDirectory/VirtualDir/ServerAssociator P3 (cut): Associated to/from IISVDir, IISDirectory, IISServer (iff approot metabase property is set). Requires IIS6 provider to be available on the machine WebApplicationToAssemblyAssociator P3 (cut): Associated to Assembly (based on <compiler/assemblies> list in web.config files) Shell Applications class ShellApplication : Application { // Selector: of the form iis://localhost/w3svc/<siteid>/root/<metabasepath> String Path;   // Path of the module (EXE) of this application The Selector for a ShellApplication must have an  HYPERLINK  \l "_Shell_Application_Selector" shell:  protocol prefix The ShellApplication class does not support instance enumeration, as this would require enumeration of all files in the file system. MarkusH => StevenPr: How can we provide a list of all the application installed on a machine: use the MSI WMI classes, do a disk scan for executables? ShellApplication instances are read-only.  ShellApplication<config class>, ShellApplication<config class>Unmerged Given a ShellApplication instance it is common to  Retrieve a specific configuration class/section for the application.  Determine the set of configuration classes/sections applicable to this type of application To make these operations easier, the .Net Config provider associates all configuration classes with ShellApplication instances via the Selector property (Selector is a key property on all config classes).  The provider offers two associations for each configuration class: ShellApplication<config class>: returns the merged configuration for this application, including configuration information inherited from the machine configuration file. ShellApplication<config class>Unmerged: returns only the configuration that is specified in the configuration file for this application. [MSONLY] The applicable configuration classes for a shell application are defined in the configuration schema and are used by the MOF generation utility to generate the class definitions for the associations. The provider is also data/schema driven and additional classes and their associations can be added without recompiling the provider or the configuration binaries.  [end MSONLY] To enable efficient enumeration of all applicable configuration classes, all config class associators derive from common base classes: [Association: DisableOverride ToInstance ToSubClass] class ShellApplicationConfiguration : ApplicationConfiguration { [key, read: ToSubClass] ShellApplication ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; class ShellApplicationConfigurationUnmerged : ApplicationConfigurationUnmerged { [key, read: ToSubClass] ShellApplication ref Node; Can a derived association specialize the type of an inherited reference? [key, read: ToSubClass] NetConfigurationClass ref ConfigClass; Examples: Retrieve information for an application Determine all applicable configuration for an application TODO: provide examples using System.Management and native VBS. Configuration File & Hierarchy [Association: DisableOverride ToInstance ToSubClass] //  abstract class ShellApplicationHierarchy : ConfigurationHierarchy {}; This associator enables enumeration of the configuration files (machine configuration file and application configuration file) that contribute to a shell application instance.  The associator returns two ConfigurationNode instances, which represent the machine configuration file and the application configuration file. For details on the merge hierarchy, refer to the  HYPERLINK "http://fusion/projects/helium/helium specs/ConfigSyntax.doc" CLR configuration specification MarkusH => StevenPr: What merge rules (if any) can we implement in the provider? Fusion policy can t be merged, nor can security policy  [Association: DisableOverride ToInstance ToSubClass] //  abstract class ShellApplicationConfigurationFile : ConfigurationFileLocation { [key, read: ToSubClass] ShellApplication ref ConfigNode; [key, read: ToSubClass] ConfigurationFile ref MainConfigFile; This association enables retrieval of only the main configuration file for a web application. P3 (cut): Associated to Win32_File class (for EXE binary) P3 (cut): Associated to PrivateAssembly (for root assembly) P3 (cut): Associated to "MSI Component" (?) Assembly enumeration (cut) Assembly P3 (cut): Associated to Assembly (assembly refs in this assembly) PrivateAssembly P3 (cut): Associated to Win32_File (for binary locations) SharedAssembly : Assembly P3 (cut): Enumerated from Global Assembly Cache Custom Hosts The .Net Framework supports hosting of managed applications in arbitrary host environments. The .Net WMI provider is not extensible to accommodate custom hosts. However, custom host writers can (and should) make their applications discoverable by: Implementing their own WMI provider  Deriving their own classes from the appropriate base classes defined by the .Net Configuration provider. Associate their class with configuration classes and relevant other classes in a manner similar to the WebApplication and ShellApplication classes implemented by the .Net Config provider. Miscellaneous No methods beyond the batch methods are implemented, as there are no management methods exposed in the .Net Framework. For web server management the IIS WMI provider (in Whistler) does provide methods like start/stop/pause etc. Support per-user security for each request. Like any WMI provider the provider impersonates the calling user before attempting any file access. All classes derive from CIM_LogicalElement. General Provider requirements No hard-coded strings that would require localization in the provider. When a method on IWbemServices returns an error, the provider should return an extended status object with any additional information that is available whenever possible.  The provider should use the detailed errors mechanism in the config system to provide verbose error information to the user. Platform Support This provider must be supported on all server platforms that the URT supports. This includes Windows NT 4.0, Windows 2000, Whistler and Whistler IA64. Setup Requirements The provider is set up with the rest of the URT components. The provider DLL is regsvr32 ed and the MOF file compiled into the WMI repository. Setup work in .Net setup has already been done. Globalization The provider should be designed, coded and tested to assure globalization compliance. Performance MarkusH: Need to determine performance requirements: working set, requests per second, updates per second, concurrent updates. Testing MarkusH: need to cover stress, End-to-end testing with ASP+/Runtime etc.! Globalization/Localization MarkusH: Beside the Description, are there other localization issues, given that we don t localize config files? [Murate] Details on localizing mof files are in this mail: EMBED MailMsgAtt Who will do the localization? Specific schema s passport.redirecturl: is this a URL or a fixed set of values? Security schema: are custom permissions still supported and do they use a single element name (pass through)? Samples System.Management Scripting Postponed Features  Flag to indicate read-only vs. read-write in config schema: not required by .Net because all classes are read/write. Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Info needed from ScottGu: Merge semantics: in ASP+ config spec! Authorization merge semantics? Which ones are singletons?   Which ones can be specified where? Machine, server, app, dir, file? Schema maintenance: notification! End to end testing: ASP+ scenarios Merge? Which sections apply? Selectors: Does http make sense? Implementation issues P3 (cut): Nesting without additional PKs on contained tables (get rid of "key2,key3,key4,..." hacks) P3 (cut): Arbitrary containing XML element names (<System.Web>) P1: Need to support nested code groups for code access security! Revision History Rev 0.1 (MMaston): Initial specification. Rev 0.2 (MarcelV/RaduP): Update with .Net Beta 2 requirements/issues. October 16, 2000 Rev 0.3: Incorporate results of design meeting. New spec template. Assign owners to issues. October 24, 2000 Rev 0.4: Added e-mail discussions. October 30, 2000 Rev 0.6: Incorporated spec review decisions. November 21, 2000 Rev 0.7: More feedback. January 11, 2001 Rev 0.8: Clarified Associations, Location support, Selectors, Hierarchy, Application class definitions. Identified cut features (assembly enumeration, IIS6 provider integration, code cleanup).  The provider could support schema definition in XSD to leverage XML authoring tools like VS7, but this feature has been cut due to schedule constraints and the limited benefit that it provides given that schema is not publicly extensible. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\simpletablesv2.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Introduction TitleIntroduction Robert Craig Normal.dot Marcel van der Holst Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags place Month ^AT!~ M<HKDR 1wx0) 52y0) S5&YLT&Technical Specification Simple Tables v2 The Project42 Catalog  (a.k.a. Same Great Taste, Less Coding) Robert Craig Microsoft Confidential version 2 draft 61 Revision history: draft 50: Introductory sections and Part I frozen. draft 60: Part II reference sections complete. Draft 61: Added GetWriteRowIndexBySearch and described wiring  TOC \o "1-3"  History  PAGEREF _Toc511463673 \h  Mission And Goals  PAGEREF _Toc511463674 \h  Technical Summary  PAGEREF _Toc511463675 \h  Roadmap  PAGEREF _Toc511463676 \h  Part I: Using Simple Tables  PAGEREF _Toc511463677 \h  Obtaining Simple Tables  PAGEREF _Toc511463678 \h  Reading From Simple Tables  PAGEREF _Toc511463679 \h  Writing Via Simple Tables  PAGEREF _Toc511463680 \h  Important Conclusions  PAGEREF _Toc511463681 \h  Reference: Using the Table Dispenser  PAGEREF _Toc511463682 \h  Reference: Reading From Tables  PAGEREF _Toc511463683 \h  Reference: Writing Via Tables  PAGEREF _Toc511463684 \h  Reference: Advanced Table Usage  PAGEREF _Toc511463685 \h  Part II: Schema Evolution  PAGEREF _Toc511463686 \h  Extending Schema  PAGEREF _Toc511463687 \h  Dynamic Schema Adaptation  PAGEREF _Toc511463688 \h  Reference: The Meta Database  PAGEREF _Toc511463689 \h  Reference: The Meta Source  PAGEREF _Toc511463690 \h  Part III: Stores And Logic  PAGEREF _Toc511463691 \h  The Wiring Process  PAGEREF _Toc511463692 \h  Easily Plugging in Stores  PAGEREF _Toc511463693 \h  Virtual Tables  PAGEREF _Toc511463695 \h  Plug-ins, Implementation Dispensers, and Table Implementations  PAGEREF _Toc511463696 \h  The Wiring Configuration, Cookdown, and Database  PAGEREF _Toc511463697 \h  Table Control Usage  PAGEREF _Toc511463698 \h  Part IV: The Catalog  PAGEREF _Toc511463699 \h  Performance Requirements  PAGEREF _Toc511463700 \h  Remoting, Security, Transactions, and Notifications  PAGEREF _Toc511463701 \h  Side-by-Side Usage  PAGEREF _Toc511463702 \h  Appendices  PAGEREF _Toc511463703 \h  Appendix A: Basic Database Vocabulary  PAGEREF _Toc511463704 \h  Appendix B: Design Considerations  PAGEREF _Toc511463705 \h  Appendix C: Changes From Simple Tables v1  PAGEREF _Toc511463706 \h  History Mission And Goals Technical Summary Roadmap Part I: Using Simple Tables Obtaining Simple Tables Reading From Simple Tables Writing Via Simple Tables Important Conclusions Reference: Using the Table Dispenser Reference: Reading From Tables Reference: Writing Via Tables Reference: Advanced Table Usage Part II: Schema Evolution Extending Schema Dynamic Schema Adaptation Reference: The Meta Database Reference: The Meta Source Part III: Stores And Logic The Wiring Process Easily Plugging in Stores Easily Plugging in Logic Virtual Tables Plug-ins, Implementation Dispensers, and Table Implementations The Wiring Configuration, Cookdown, and Database Table Control Usage Part IV: The Catalog Performance Requirements Remoting, Security, Transactions, and Notifications Side-by-Side Usage Appendices Appendix A: Basic Database Vocabulary Appendix B: Design Considerations Appendix C: Changes From Simple Tables v1 History (a.k.a. Why Simple Tables, Why The Catalog?) Many development teams depend on configuration information.  Simple tables allow those teams to easily use configuration information without being tightly coupled to and impacted by how and where that information is stored, assembled, updated, verified, managed, and distributed.  Managing configuration for real-world scenarios, especially when those scenarios are inherently distributed or require multiple composable services, is a very complex problem space.  Simple tables do not inhibit the development team tasked with such management from making good choices.  Simple tables help such a team turn those good choices into a shipping solution. Simple tables are architected for the configuration space specifically.  The configuration space in general, and the distributed application management space specifically, has many characteristics which deeply influence design and implementation decisions.  Two distinct and overlapping times exist in this space, runtime and configuration-time, with competing requirements.  Reads occur repeatedly during runtime and from many processes, meaning they must be as fast as possible with minimal working set.  Reads at runtime must never be blocked by writers in (overlapped) configuration time.  Reads at runtime are orders of magnitude more common than writes at configuration time.  While concurrent reader/writers do occur in configuration time, they are rare, and few: nonetheless, they must be supported.  At runtime, performance is king.  At configuration time, rich validation, transactional updates, proper isolation, and security are critical.  Performance and scaling concerns at configuration time revolve around huge units of change and remote administration, making composable transactions and efficient marshaling strategies critical as well. The architecture behind configuration in the COM+ 1.0 Services release, shipping in Windows 2000, is called simple tables v1.  With simple tables, we were able to support a rich configuration schema, utilize (and even change among) multiple data stores under the covers, embed rich configuration logic, merge algorithms, and validation rules without disrupting calling code, and build a configuration architecture which supported efficient remote administration, high performance runtime access, composable configuration transactions, role-based security, and differing levels of isolation at configuration time and runtime.   Collectively, this configuration architecture is referred to as the COM+ 1.0 Catalog.  The end result is that all COM+ services compose and work with each other, deploy together in application units, and are entirely managed via one administration api (with an MMC snap-in built atop that api).  The customer benefit is a dramatically minimized surface area for composition, deployment, and administration of a rich set of composable application services. As a result of simple tables and the catalog, we were able to serve up all necessary configuration at COM activation time / runtime via the catalog.  We were able to deliver attribute-based programming and configuration via a single application-based administration api which encompassed all COM+ services (including activation, syncronization, security, pooling, queuing, events, transactions, load balancing, and IMDB).  Further, we built our administration UI (an MMC snap-in) atop our administration api. COM+ 1.0 Services arose from the dual objectives of uniting COM with MTS (Microsoft Transaction Server) and at the side time expanding and improving upon the set of shipping services from those shipped in MTS.  Earlier versions of the catalog shipped in MTS v1 and v2, where the issues of unified administration, runtime vs. configuration-time, service composition, and application deployment were first tackled or at least realized.  Simple tables were invented to address the lessons learned and problems encountered from that experience.  In MTS, we heavily relied upon the combination of logic and data to deliver our configuration and administration solution.  However, we also realized several problems for which simple tables were invented to solve: We needed a schema from which the administration api and many other pieces of the catalog could be driven.  Our  schema  was then hidden in the code itself as a mix of declarations and code. Changes to that  schema , our registry storage structure, queries, or logic always required new code and usually required rebuilding the product.  Less brittleness and easier extensibility, especially considering the increased number of services (and therefore development teams), was needed. The logic code and the data storage code was blurred together, with the whole being tightly bound to the registry.  We had to de-couple the logic from data storage.  We knew we also had to move out of the registry, so encapsulating location and storage dependencies also became necessary. Converting tables into and out of their marshalling format a column at a time was very inefficient. Transactional updates were not supported and not really possible in the existing infrastructure. Mission And Goals (a.k.a. Why Bother Unifying Configuration And How?) COM+ 1.0 Services, a merger and expansion upon COM and MTS, ships as part of Windows 2000.  The COM+ 1.0 catalog, based upon simple tables v1, unifies the configuration and administration of all its services.  This unification enables composition of those services by application developers, supports deployment of applications and their services, and provides a common administration api and schema over it all.  The end result is a set of application services which work together and a dramatically minimized surface area for the customer. Based upon this success, the catalog team has been chartered with a similar mission in the broader context of the URT (Universal Runtime) and AS (Application Server) products of Project 42.  The danger for the URT product, given that its pieces are being delivered by numerous development teams, is that instead of appearing as a unified platform, it appears as a bunch of pieces which don t work together.  The danger for the AS product, given its job of delivering  abilities  atop the URT platform, is that instead of URT applications just getting better, they appear to be hosted in an entirely different environment.  To avoid these dangers, these products must be unified along the lines of programming model, security, and configuration/administration.  The mission of the catalog team is to unify configuration and administration first within each product and then between those products.  The high-level goals of that mission include: Support a common administration api for reading and writing application and service configuration within a unified schema into which all dependent development teams contribute. Support construction of a common administration user interface built entirely atop the administration api, working tightly with the user interface team. Support application deployment in units encompassing all necessary pieces of the application. Support the composition of the various services provided. Encapsulate configuration logic and storage from development teams consuming pieces of configuration. To fulfill this mission and its high-level goals, the following technical requirements carry forward from simple tables v1 and the COM+ 1.0 catalog: A lightweight, easy to use, easy to implement infrastructure with powerful results.  This means minimal interfaces and methods, with data cached at the point of use, and direct access to the cache whenever possible (no copies).  Implementing and extending must be easy as well, requiring clearly defined semantics.  The results must be powerful: queryable, marshallable, cache-oriented, with batch update semantics, etc.  Datastore independence and transparency, dynamically.  Datastores are a constantly shifting landscape and no datastore provides a one-size-fits-all solution for configuration.  As little code as possible should be tightly coupled to a particular datastore, coupling should be dynamic rather than permanent, and granular. Datastore location independence and transparency.  Configuration is distributed throughout file systems and among computers.  Manipulating configuration  remotely  must be as easy as doing so locally and must have reasonable performance.  Requests which are either location independent or indirected must be supported. Plug-and-play client and server side logic.  Domain specific logic on both the  client  and  server  side is necessary.  This logic must be transparently plug-able and storage format independent. A scalable and reliable infrastructure.  Scalability and reliability are critical and must be built in.  We dogfood our own product technologies (e.g. security and transactions) to help achieve this. Simple Tables v2 and the Project42 catalog are an evolution, not revolution, of the v1 design and implementation.  The architecture, interfaces, and implementation predominantly derive from v1.  The changes are experience-driven.  The driving technical goals behind the v2 evolution are: A developer, versed in C and familiar with COM interface concepts, can read the first dozen pages of this spec and then start using simple tables productively. The lines of code and number of method calls necessary to do useful work is minimal. In developer drops, the schema (a.k.a. meta) can be extended without the source. All parts of the catalog, including the administration api, will dynamically adapt to evolving schema. The meta database is enriched to fully support the administrative api, deployment, and monitoring. Meta and wiring changes occur via one file; a build automatically updates dependent files. New datastores and logic can be plugged in dynamically, without catalog source, with minimum coding. The interfaces and semantics allow for maximum performance and minimum working set. The few cache implementations in the catalog are radically fast and leveraged by all data and logic tables. Performance targets (for minimal cycles, minimal working set, and solid scaling) are part of the specification and the bar is set high.  Icecap profiling occurs on an ongoing basis. Technical Summary (a.k.a. For People Who Don t Want To Read A Technical Specification) Configuration is modeled as a set of related tables.  Each uniquely configurable entity (such as sites, applications, components, computers, clusters, and so forth) is represented by a table with a discoverable schema.  Each row in the table represents a configuration instance (such as a particular site, application, etc).  The columns represent the configuration properties on the instance.  The relationships among configuration tables are also discoverable and properly maintained (e.g. when you delete a site all of the related configuration should be cleaned up too).  In object parlance, tables of rows with columns would be referred to as collections of objects with properties. Part I: Using Simple Tables: All configuration tables are obtained via a table dispenser.  You obtain a table by specifying the table s identity (e.g.: application configuration), a query for selecting which rows you want (e.g.: all the applications in some particular site), and a level-of-service expectation.  Given this information the table dispenser gives you a simple table object.  The table dispenser matches your request with an object which encapsulates all the implementations necessary for servicing your request.  This binding process is flexible to fault in implementations which know how to deal with how and where the configuration is stored, which know how to merge, validation, and act on the configuration, and which meet the service requirements of the caller.  The table dispenser encapsulates the magic of this binding process from the caller.  The binding process is dynamic and request driven. Simple tables have a small and common set of methods, so one table looks like any other table.  What differentiates them is their schema and content.  Conceptually a simple table object encapsulates a read cache containing the results of your query, a write cache in which your pending changes accumulate, and the particular pieces of code which know how to store, retrieve, merge, validate, act on, and serve up the requested configuration.  Only executing a query or committing accumulated changes results in storage interaction (which may go out of process or off machine).  Simple table objects can be implemented extremely efficiently. Part II: Schema Evolution: A configuration system has a lot of interesting meta information.  What are the tables, what is their schema, what are their relationships, supported queries, and so forth?  The meta database answers to these sorts of questions.  The meta database is accessible via simple tables and is dynamically extensible.  Therefore, meta information is discoverable.  Configuration schema evolves throughout a product life cycle.  Code which does not adapt to this schema evolution is brittle.  Discoverable meta information makes possible a configuration and runtime system which dynamically adapts to schema evolution throughout the product life cycle.  The catalog expresses meta in a human editable XML format. Part III: Storage and Logic: The table dispenser binding process allows plugging in new storage and logic under-the-covers on a granular basis (per database, table, column, etc).  The table dispenser begins by asking a set of implementation dispensers which one of them knows how to store and retrieve the requested configuration.  This allows pieces of configuration to be distributed among differing stores and allows the same configuration to be stored in different formats (e.g. XML, INI files, or the metabase).  Once one of these dispensers has served up an implementation, the table dispenser then asks another set of implementation dispensers individually if they want to intercept calls on this request.  This process allows chaining together the right set of implementations for the specific request.  New storage and new logic can be plugged in by implementing an object with three methods. Part IV: The Catalog: The catalog consists of the services and functionality built atop simple tables.  Examples:  The managed code configuration objects publicly exposed in the URT, atop which the Application Server user interface and other administration tools will be built. Qualifiable and transient change notification support for any and all configuration tables. Configuration cookdown strategies which optimize performance in key scenarios. Inheritance for defaults and policy with support for common directives. Role-based security and composable transaction support. Side-by-side support for multiple products, versions, and distributed administration scenarios. These services and extra functionality are all dynamically driven from meta information, so that they automatically adapt to schema changes during the product life cycle.  Besides services and functionality provided by the catalog team, dependent development teams can easily evolve their own schema, plug-in their own stores and logic, and build specific services and functionality. Roadmap (a.k.a. How Many Pages of this Spec Do I Need to Read?) This is a detailed technical specification of simple tables and the catalog.  If unfamiliar with basic database concepts, read "Appendix A: Basic Database Vocabulary" before proceeding.  If you are already a simple table guru and just want to find out what changed, read  Appendix C: Changes from Simple Tables v1 .  Note that all examples in this spec are done in C, most examples are complete, and error handling is omitted for brevity. People do one or more of the following with simple tables (from most to least common):  Use simple tables to read and write configuration information (by far the most common!). Evolve the configuration schema (by adding new table schemas or extending existing ones). Plug in a new datastore or new table-specific logic (note that simple tables encapsulate data storage and table logic from callers, and also encapsulate data storage from logic). Understand how specific pieces of the catalog work (like transactions, security, notifications, etc). This spec is organized according to these types of work.  Each type of work is detailed in its own portion of this document with sections which first introduce and present how to do the work followed by relevant detailed reference sections.  Reading the first couple sections of each part should give a solid and reasonably deep technical overview. Learn how to use simple tables in Part I: Using Simple Tables.   Obtaining Simple Tables  introduces how to retrieve tables of information without infecting your code with the details of where that information came from and how it was assembled.   Reading From Simple Tables  and  Writing Via Simple Tables  introduce how to work with a table of information once you have obtained it.  Having introduced query for, reading from, and writing via simple tables,  Important Conclusions  wraps up with the main ideas.  Reading just these sections will give you a solid technical understanding of using simple tables.  You can start coding at this point.  Of course, to truly leverage simple tables, you will want some understanding of how meta, storage, and logic work (see Part II and Part III descriptions below).  Detailed reference information about using simple tables is covered in "Reference: Using The Table Dispenser",  Reference: Reading From Tables Reference: Writing Via Tables , and  Reference: Advanced Table Usage Learn how to evolve the configuration schema and write code which dynamically adapts to schema evolution in Part II: Schema Evolution.   Extending Schema  illustrates how to extend existing schema.   Dynamic Schema Adaptation  demonstrates how to write code which adapts dynamically to schema evolution, since schema evolves throughout the development cycle.  The first reference section,  Reference: The Meta Database , documents the meta database exposed via simple tables, and details the meta information available on databases, tables, relationships, columns, queries, etc.  Code which dynamically adapts to schema evolution does so by making use of the (fast!) meta database at runtime.  The second reference section,  Reference: The Meta Source , documents the XML-based source file for specifying meta.  This section also covers the meta compiler which consumes and validates that source and produces the meta database as well as schemas for the core storage engines in the catalog. Learn how to plug-in new datastores, add rich logic, and fault-in the right implementation for the job in Part III: Stores And Logic. Callers obtain tables from the table dispenser by specifying the table identity, a query, and a requested level of service.   The Wiring Process  introduces how the right implementation, datastore, and logic are wired up to satisfy these requests.   Easily Plugging In Stores  and  Easily Plugging In Logic  respectively introduces how you can easily plug new stores into the catalog and how you can plug new (store independent) validation and action logic into existing tables.   Virtual Tables  introduces you to some of the more advanced possibilities with simple tables, including: query resolution, virtual views, arbitrary interception, and layered logic.   The first reference section,  Plug-ins, Implementation Dispensers, and Table Implementations , details the interfaces and semantics store and logic implementers must obey.  Note that plug-ins are sufficient for most implementers, implementation dispensers might be necessary for very advanced possibilities, and full table implementations are very rare.   The Wiring Configuration, Cookdown, and Database  details the XML-based configuration file from which the cookdown utility generates the wiring database.   Table Control Usage  details the powerful controller interface which assists store and logic implementers. <todo> The catalog core consists of the table dispenser, the meta and wiring databases, the meta and wiring configuration and cookdown utility, and a core of cache and storage implementations.  The rest of the catalog leverages this core to provide the infrastructure necessary to achieve the mission of unified configuration and administration.  Learn about the catalog as a whole in Part IV: The Catalog. Managed code simple table wrappers Configuration interfaces Configuration cookdown Notifications The administration process, catalog server, and default client table Side-by-side catalogs Performance requirements regdb: transactions, version snapshots table integrity security transactions </todo> Appendix B details important design decisions for posterity and the curious.  Only primary developers of the infrastructure need familiarize themselves with the whole spec.  See the  Testing  worksheet in the cat42work.xls workbook for test cases. Part I: Using Simple Tables Obtaining Simple Tables (a.k.a. Who Cares from Whence the Data Comes?) So far as the caller is concerned, all simple tables are obtained through a single table dispenser.  Under the covers though, 0 or more other pieces of code may participate in binding in the appropriate datastore, logic, and implementation.  In this manner, the caller s datastore-independent request can be bound to one or more datastore implementations.  Rich and specific logic can be faulted in to produce the necessary view, validate changes, and enforce required update rules.  And an implementation appropriate to the job at hand can be chosen, like the smallest and fastest caching implementation available for reading configuration at runtime, or a sophisticated implementation serving up remote configuration for an administrative UI.  The table dispenser encapsulates this process of binding in datastores, logic, and implementations. This encapsulation approach allows callers to understand and consume their configuration as one or more "virtual" databases.  Therefore, virtually all code in a product dealing with configuration is storage-agnostic.  Code executing as part of the system at runtime can focus on its job because the cooking, merging, converting, and validating of configuration occurs under-the-covers.  This allows us to migrate toward better datastores, choose different storage for different scenarios, project configuration assembled from different stores as a unified whole, integrate rich querying, viewing and update logic, and improve the implementations used in particular scenarios, all without disrupting existing calling code.  (While the dispenser's query support is certainly rich enough to specify exactly the store from which you expect your data, doing so defeats the purpose, and in most cases is inappropriate.) The caller obtains the table dispenser via a top-level api call, GetSimpleTableDispenser.  Thereafter, all simple table work occurs via components and interfaces.  Once the caller has a table dispenser, they request tables via its ISimpleTableDispenser2::GetTable method.  To obtain a simple table using GetTable, they specify a  virtual  database and table identity, a query, and a level of service.  In other words, the caller says  I want this table  (the identity),  I want the rows in the table which match this criteria  (the query), and  I expect the following services and behaviors  (the level of service).  Callers work with all simple tables via a small and common set of interfaces.  In any given table instance, the columns are determined by the identity specified, the rows are determined by the query specified, and the underlying implementation is determined (in part) by the level of service.  The table dispenser allows multiple query formats, not just strings, like SQL, but structures too, like ISAM keys, or OLEDB query cells, etc.  Pragmatically, choosing one query format for an entire project, simple enough to be supported atop all data stores, and rich enough to support the required queries, simplifies implementation a lot.  For COM+ 1.0, OLEDB query cells, a structural means of OR'ing within column and AND'ing across columns, was chosen. A query passed to the dispenser has 3 parts: the query data, the query meta, and the query format indicator.  The query data and meta depend on the format.  For a SQL query string, the query format indicator would be eST_QUERYFORMAT_SQL, the query data would be the SQL string, and no query meta would be necessary.  For OLEDB query cells, the query format is eST_QUERYFORMAT_CELLS, the query data is an array of query cells, and the query meta points to the count of cells in the array.  Each cell specifies a column, operator, and data.  For example: to search the components table for all components owned by applications (as opposed to all components not in any application), the column of interest would be the owning application identity (eg: iCFGCOMP_APPLID), the operator would be inequality (ie: eST_OP_NOTEQUAL), and the data would be NULL (ie: no application specified).  This query cell can be combined with others to express more complicated queries. The level of service is requested via a set of flags.  These flags (or lack thereof) indicate whether the caller expects to only read or read and write, what isolation level the caller expects, and so forth.  The flags allow the dispenser to choose the right implementation for the job.  Obviously the level of service affects the level of performance.  In general, the richer the service expectation, the lower the potential performance.  For example, an implementation which only reads information can be done more efficiently than one which reads and writes.  Specifying a higher level of service requires specifying a flag.  Therefore, specifying no flags (which is the most common scenario) provides the lowest level of service with the highest potential performance.  The dispenser transparently binds in the appropriate implementation based on the requested level of service. The following code snippet (error handling omitted in samples), demonstrates a query for all server applications  within a particular cluster.  The caller is a configuration api which is consumed by a multi-window user interface: they expect a read-write implementation and plan to do configuration work: CComPtr<ISimpleTableDispenser2> pISTDisp; CComPtr<ISimpleTableWrite2> pISTWrite; STQueryCell aMyQuery [] = { {L"MyCluster", eST_OP_EQUAL, iST_CELL_CLUSTER, DBTYPE_WSTR, 0} ,  {fAPPTYPE_SERVER, eST_OP_EQUAL, iAPP_TYPE, DBTYPE_UI4, 0} }; ULONG cMyQueryCells = (sizeof (aMyQuery) / sizeof (STQueryCell)); HRESULT hr = GetSimpleTableDispenser (ePRODUCT_APPSERVER, 0, &pISTDisp); hr = pISTDisp->GetTable ( wszDATABASE_APPSERVER, wszTABLE_APPLICATIONS,  (void*) aMyQuery, (void*) &cMyQueryCells, eST_QUERYFORMAT_CELLS,  fST_LOS_READWRITE | fST_LOS_CONFIGWORK, (void**) &pISTWrite // Use the table here... The caller builds an array of two query cells (aMyQuery).  The first cell specifies that the cluster of interest (i.e. iST_CELL_CLUSTER) is (i.e. eST_OP_EQUAL)  MyCluster .  The second cell specifies that the caller is only interested in server applications (i.e. iAPP_TYPE is the application type, and fAPPTYPE_SERVER denotes server applications). The caller obtains the table dispenser (pISTDisp) from GetSimpleTableDispenser by specifying their product ID (ePRODUCT_APPSERVER).  Each product team using the catalog receives a product ID.  Catalog drops operate side-by-side.  Suppose two independent teams are picking up differing drops on differing schedules, and suppose both their products are commonly installed on the same computer.  The side-by-side support means that neither team breaks the others product by picking up incompatible catalog drops. The caller requests their simple table by calling GetTable on the dispenser.  They specify a virtual database and table (the applications table, wszTABLE_APPLICATIONS, from the application server configuration database, wszDATABASE_APPSERVER).  They specify their query.  And they request a read-write implementation appropriate for configuration work (fST_LOS_READWRITE | fST_LOS_CONFIGWORK).  They receive a simple table (pISTWrite) which contain the rows matching their query and supports their requested level-of-service. Now consider a very similar sample.  This time, the caller is some activator code during runtime, residing on one of the servers in the cluster, and just wanting to read quickly obtain the configuration information for all applications on the computer: CComPtr<ISimpleTableDispenser2> pISTDisp; CComPtr<ISimpleTableRead2> pISTRead; STQueryCell aMyQuery [] = { {fACT_SERVER, eST_OP_EQUAL, iAPP_ACTIVATION, DBTYPE_UI4, 0} }; ULONG cMyQueryCells = (sizeof (aMyQuery) / sizeof (STQueryCell)); HRESULT hr = GetSimpleTableDispenser (ePRODUCT_APPSERVER, 0, &pISTDisp); hr = pISTDisp->GetTable ( wszDATABASE_APPSERVER, wszTABLE_APPLICATIONS,  (void*) aMyQuery, (void*) &cMyQueryCells, eST_QUERYFORMAT_CELLS,  (void**) &pISTRead // Use the table here... The means of obtaining the table is almost identical to the previous sample.  The caller does not specify a cluster in their query because they are not cluster aware.  They are simply a part of the system on one of the computers in the cluster.  The caller also does not make any level-of-service requests, since all they need is to execute the query and read the results, and they simply want the best possible performance doing so.  The caller obtains an ISimpleTableRead2 interface instead of ISimpleTableWrite2 (the latter inherits from the former). While the two samples look very similar, the binding process under-the-covers is dramatically different.   In the first sample, the caller is requesting configuration from the  single-system-image  of a cluster.  The single-system-image is stored using a clustered SQL Server to guarantee robustness, scalability, and availability of this valuable resource.  This database is on a remote computer.  Under the covers, an implementation which supports the rich service level requested is chosen.  The chosen code knows how to lookup the cluster name in a directory service, determine the computer on which the single-system-image database resides, connect to the administrative process running on a remote computer, and efficiently marshal query results and changes back and forth.  The administrative process on the target computer subsequently faults in the right implementation for interacting with SQL Server, and the right validation logic to verify changes made to application configuration.  The configuration information for hundreds of server applications is supplied as a result of the query. In the second sample, the configuration comes from a very fast and compact persisted cache file which is memory mapped as a read-only shared file.  A minimal read-only implementation which sits directly atop this shared memory is chosen.  The persisted cache happens to have been built from a cluster image.  The configuration information for dozens of server applications is quickly supplied. At this point, understanding the details of either binding process is not necessary.  Suffice it to say that potentially a lot or a little (in terms of number of cycles) went on under the covers to bind the appropriate implementation and extract the requested information from the appropriate datastore.  While the calling code of both scenarios is very similar, the under-the-covers binding process differs dramatically. Reading From Simple Tables (a.k.a. Let's Keep The Lower Layers Small and Fast) Simple tables are always obtained via the table dispenser.  But what exactly is underneath the simple table interface, provided by the dispenser, in response to your query?  Underneath the interface is conceptually a cache, called the read cache, containing the table of rows resulting from the query.  The caller interacts with the read cache via the ISimpleTableRead2 interface.  The caller can also make changes.  These changes conceptually go into the write cache.  The caller makes changes via the ISimpleTableWrite2 interface.  ISimpleTableWrite2 inherits from the read interface, so the caller can read and make changes through one interface.   Once the caller obtains a simple table, they work with the table in-process and in-memory, disconnected from the datastore.  Only two calls actually cause the simple table to temporarily re-bind to its datastore, which may involve going out of process or off machine.  ISimpleTableAdvanced::PopulateCache() re-executes the query specified when the simple table was obtained, flushing then reloading the read cache with the new results.  ISimpleTableWrite2::UpdateStore() flushes the changes accumulated so far in the write cache out to the datastore.  Populating and updating typically hits the disk, and depending on the query and level of service, may also go out-of-process or off machine.  This approach of bulk reads and writes has many advantages.  Most of the work a caller does with a simple table occurs in process, getting the disk and network performance bottlenecks out of the way.  This enables efficient interaction with remote stores by dramatically reducing the roundtrips involved, and facilitates the atomicity, consistency, and isolation requirements for transactional updates. The read cache contains the resulting rows which matched your query.  Queries either ask for a specific individual entity or a set of them.  So if your query asked for a particular application, the read cache would contain one row for that one application (or none), whereas if your query asked for all applications within a particular site, the read cache would contain as many rows as there were applications in the site.  You can think of the read cache as an  array  of rows into which you can index.  The column values of a particular row can be read one at a time, all at a time, or a specific set at a time.  To read column values of a particular row, you specify the row index of interest. When requesting a column value, rather than copying the value from the cache, the simple table actually gives you a pointer to the value in the cache.  So for example, when requesting a string value, you get a pointer to the string rather than a copy of it.  This approach eliminates unnecessary allocations and copies.  If you pass some data to a customer outside your product, you had better use the more common approach of copying that data, so that they own the data they use, and control its lifetime.  But as that data floats around inside your product, you should have the option to not allocate and copy each time it passes from layer to layer, since this can become very expensive in real products.  Consider how many allocations and copies this approach saves when doing a little simple remote administration.  Data moves from the datastore, to a layer which transforms it, to a layer which marshals it, to a layer on the client-side, to the administration layer, and finally to the customer.  The marshalling infrastructure itself obviously copies the data, and the administration api must copy the data before handing it out.  But by not otherwise copying it, we can typically save at least half a dozen allocations, copies, and de-allocations. This approach of pointing you to values rather than giving you your own copies means you can use the values, but you don't own them, you must not overwrite them, and if you want to keep them after either re-populating or releasing your simple table, you first need to make your own copy.  Simple tables were designed to meet the configuration needs of commercial products, not for the masses of VB developers.   Here is an example where the caller wants to print the description of an application given its URL: CComPtr<ISimpleTableDispenser2> pISTDisp; CComPtr<ISimpleTableRead2> pISTRead; STQueryCell aMyQuery [] = { {L http://bar/foo , eST_OP_EQUAL, iAPP_URL, DBTYPE_WSTR, 0} }; ULONG cMyQueryCells = (sizeof (aMyQuery) / sizeof (STQueryCell)); HRESULT static const ULONG aiAppColumns [] = { iAPP_DESCRIPTION }; WCHAR* wszAppDescription; hr = GetSimpleTableDispenser (ePRODUCT_URT, 0, &pISTDisp); hr = pISTDisp->GetTable ( wszDATABASE_URT, wszTABLE_APPLICATIONS,  (void*) aMyQuery, (void*) &cMyQueryCells, eST_QUERYFORMAT_CELLS,  0, (void**) &pISTRead hr = pISTRead->GetColumnValues (0, 1, aiAppColumns, NULL, (void**) &wszAppDescription); if (S_OK == hr) wprintf (L description: %s , wszAppDescription); You should already understand the GetSimpleTableDispenser and ISimpleTableDispenser2::GetTable calls from previous examples.  Note that GetTable asks for the application configuration at  /bar/foo .  The new call is ISimpleTableRead2::GetColumnValues.  The first parameter specifies the row index of interest: 0.  Since the caller knows their query can only result in 0 or 1 rows, they specify row index 0, the first row in the resulting read cache.  GetColumnValues will return E_ST_NOMOREROWS if a row does not exist, meaning in this case that the application was not found.  The second parameter specifies how many column values the caller wants: 1.  Here is the caller is only interested in the description.  The third parameter specifies the array of column values of interest: in this case just the description.  The final parameter is the address of the string pointer which will be pointed to the application description.  The caller prints the resulting application description. Here is a similar example where the caller wants to print a set of specific properties, instead of just one, of an application given its URL: CComPtr<ISimpleTableDispenser2> pISTDisp; CComPtr<ISimpleTableRead2> pISTRead; STQueryCell aMyQuery [] = { {L /bar/foo , eST_OP_EQUAL, iAPP_URL, DBTYPE_WSTR, 0} }; ULONG cMyQueryCells = (sizeof (aMyQuery) / sizeof (STQueryCell)); HRESULT static const ULONG aiAppColumns [] = {  iAPP_NAME,  iAPP_DESCRIPTION,  iAPP_SITEID static const ULONG cAppColumns = sizeof (aiAppColumns) / sizeof (ULONG); static const ULONG cmaxAppColumns = iAPP_SITEID + 1; void* apvAppValues [cmaxAppColumns]; hr = GetSimpleTableDispenser (ePRODUCT_URT, 0, &pISTDisp); hr = pISTDisp->GetTable ( wszDATABASE_URT, wszTABLE_APPLICATIONS,  (void*) aMyQuery, (void*) &cMyQueryCells, eST_QUERYFORMAT_CELLS,  0, (void**) &pISTRead hr = pISTRead->GetColumnValues (0, cAppColumns, aiAppColumns, NULL, apvAppValues); if (S_OK == hr) wprintf (L name: %s, description: %s, site ID: %d (WCHAR*) apvAppValues[iAPP_NAME],  (WCHAR*) apvAppValues[iAPP_DESCRIPTION], (ULONG) *apvAppValues[iAPP_SITEID]); What are the interesting changes in the GetColumnValues call from the previous example where the caller fetched one value?  Recall that the second parameter specifies the number of column values the caller wants and the third parameter specifies which columns as an array of column indexes.  So far this call looks the same as the previous example, except that more than one column value is being requested.  The real difference is the final parameter.  Here the caller passes an array of pointers.  This array must be big enough to receive all column values from column index 0 to the biggest column index of interest.  However only the pointers requested are supplied.  Very efficient and direct access to the individual values is the result, as the printf usage makes clear. Here is a final and more generic example of fetching column values.  This example differs from the two above in some important ways.  First, the query no longer identifies one specific application.  The query requests all applications under the microsoft.com site.  Second, the caller wishes to obtain all the column values instead of just a few.  Third, rather than assuming how many column values exist, the caller asks the table: CComPtr<ISimpleTableDispenser2> pISTDisp; CComPtr<ISimpleTableRead2> pISTRead; STQueryCell aMyQuery [] = { {L microsoft.com , eST_OP_EQUAL, iAPP_SITE, DBTYPE_WSTR, 0} }; ULONG cMyQueryCells = (sizeof (aMyQuery) / sizeof (STQueryCell)); HRESULT ULONG cColumns, iRow; void** apvAppValues; hr = GetSimpleTableDispenser (ePRODUCT_URT, 0, &pISTDisp); hr = pISTDisp->GetTable ( wszDATABASE_URT, wszTABLE_APPLICATIONS,  (void*) aMyQuery, (void*) &cMyQueryCells, eST_QUERYFORMAT_CELLS,  0, (void**) &pISTRead hr = pISTRead->GetTableMeta (NULL, NULL, NULL, &cColumns); apvAppValues = new (void*) [cColumns]; for (iRow = 0; ; iRow++) hr = pISTRead->GetColumnValues (iRow, cColumns, NULL, NULL, apvAppValues); if (E_ST_NOMOREROWS) break; // Do stuff with the values here delete [] apvAppValues; Notice that the code above, while doing a lot more than the previous example, is of similar line count the previous example.  By now you should be pretty familiar and bored with the GetSimpleTableDispenser and GetTable calls.  Note the query requests all applications under the microsoft.com site.  Once the caller has the resulting table, they call GetTableMeta to obtain column count.  Then they allocate an array of pointers large enough for all the column values in a row.  Rather than just calling GetColumnValues on row 0, they call GetColumnValues in a loop on all rows beginning with index 0 and continuing until E_ST_NOMOREROWS is returned.  For the second parameter, the ask for all column values.  The third parameter, an array of column indexes of interest, is unnecessary and therefore NULL.  The caller just wants all column values from column index 0 to cColumns - 1.  Each call fills their pointer array with pointers to the column values of the requested row.  What exactly is done with the column values is left as an exercise to the reader.  Suffice for now to say that simple tables support rich enough meta such that a generic caller like the one above can properly work whatever values it receives. The morbidly curious are by now no doubt wondering about the fourth parameter to GetColumnValues, which has been NULL in the examples above.  The caller can specify an optional array to obtain the size of each value.   Most column types are fixed sized.  Even for types whose size can vary, like strings and bytes, the schema for such a column often specifies some fixed or maximum length size anyway.  Even when the size truly varies, you don't always need to know it (e.g.: you usually don't need to know the size of string to use the string).   Writing Via Simple Tables (a.k.a. Minimizing Round Trips and Disk Hits) Having done a bit of reading with simple tables, now let s do some writing.  The ISimpleTableRead2 interface pointer conceptually encapsulates a read cache.  The ISimpleTableWrite2 interface pointer conceptually encapsulates both a read and write cache.  But what does the write cache contain?  The read cache contains rows resulting from executing a query.  The write cache contains row changes made by the caller.  Each row in the write cache represents either a deletion of an existing row, an update to an existing row, or an insertion of a new row.  Changes accumulate in the write cache until ISimpleTableWrite2::UpdateStore is called, which applies the pending changes to the datastore.   Suppose a computer has a protocol list and each protocol has configuration.  Now suppose I want to replace the protocols on one computer with the protocols from another.  I need to remove the existing protocols on the destination computer and copy the source computer s protocols to the destination computer.  Assuming I am working on a third computer, the following code accomplishes this work in only three roundtrips: CComPtr<ISimpleTableDispenser2> pISTDisp = NULL; CComPtr<ISimpleTableRead2> pISTRead = NULL; CComPtr<ISimpleTableWrite2> pISTWrite = NULL; STQueryCell aMyQuery [] = { {NULL, eST_OP_EQUAL, iST_CELL_COMPUTER, DBTYPE_WSTR, 0} }; ULONG cMyQueryCells = (sizeof (aMyQuery) / sizeof (STQueryCell)); ULONG iReadRow, iWriteRow, cColumns, cVersion, cColumns2, cVersion2; ULONG* acbSizes; void** apvValues; HRESULT hr = GetSimpleTableDispenser (ePRODUCT_APPSERVER, 0, &pISTDisp); // Roundtrip and disconnect to rcraig0 to retrieve all protocols: aMyQuery[0].pvData = L"rcraig0"; hr = pISTDisp->GetTable ( wszDATABASE_APPSERVER, wszTABLE_PROTOCOLS,  (void*) aMyQuery, (void*) &cMyQueryCells, eST_QUERYFORMAT_CELLS, fST_LOS_CONFIGWORK, (void**) &pISTRead // Roundtrip and disconnect to rcraig1to retrieve all protocols: aMyQuery[0].pvData = L"rcraig1"; hr = pISTDisp->GetTable ( wszDATABASE_APPSERVER, wszTABLE_PROTOCOLS,  (void*) aMyQuery, (void*) &cMyQueryCells, eST_QUERYFORMAT_CELLS,  fST_LOS_CONFIGWORK | fST_LOS_READWRITE, (void**) &pISTWrite // Determine column count dynamically and verify source and destination version compatibility: hr = pISTRead->GetTableMeta (&cVersion, NULL, NULL, &cColumns); hr = pISTWrite->GetTableMeta (&cVersion2, NULL, NULL, &cColumns2); assert (cVersion == cVersion2 && cColumns == cColumns2); acbSizes = new ULONG [cColumns]; apvValues = new (void*) [cColumns]; // Delete all the protocols on the destination (none of this work leaves the caller s process): for (iReadRow = 0;; iReadRow++) hr = pISTWrite->AddRowForDelete (iReadRow); if (E_ST_NOMOREROWS) break; // Copy all the protocols from the source to the destination (none of this work leaves the caller s process): for (iReadRow = 0;; iReadRow++) hr = pISTRead->GetColumnValues (iReadRow, cColumns, NULL, acbSizes, apvValues); if (E_ST_NOMOREROWS) break; hr = pISTWrite->AddRowForInsert (&iWriteRow); hr = pISTWrite->SetColumnValues (iWriteRow, cColumns, NULL, acbSizes, apvValues); // Roundtrip and disconnect to rcraig1 to apply the protocol changes: hr = pISTWrite->UpdateStore (); delete [] apvValues; delete [] acbSizes; In this example, two instances of the same table are obtained, each from a different computer.  The query indicates the computer.  The computer name is omitted from the query declaration and specified immediately prior to each GetTable call.  We are doing configuration work here and want to insure a proper level of service, so fST_LOS_CONFIGWORK is requested on both tables.  fST_LOS_READWRITE is requested on the destination since we will be writing to that instance.  Note that if we were not going to delete the existing protocols on the destination, we could also specify fST_LOS_UNPOPULATED to save query execution cost, since we would be simply writing rather than reading and writing to the destination table.   The two GetTable calls result in a roundtrip to each remote computer.  These roundtrips are disconnected by design: no connection remains when GetTable returns.  The UpdateStore call at the very end results in  a final roundtrip and disconnect to the destination computer.  All the code in between remains in process with the caller. Once the tables are obtained, the caller uses GetTableMeta to verify they are of common version and to dynamically determine their column counts.  The caller next removes all existing protocols from the destination using AddRowForDelete.  AddRowForDelete takes a row index into the read cache and adds that row to the write cache, marking it for deletion.  The caller iterates over all protocols from the destination, marking each one for deletion. Now the caller needs to transfer all the protocols from the source to destination.  They iterate over all protocols from the source.  For each protocol, they use GetColumnValues to obtain the protocol properties from the source.  Then they use AddRowForInsert to add a blank protocol to the destination write cache.  AddRowForInsert returns the row index to the new row in the write cache.  The caller uses this row index to transfer all the properties from the current source protocol into the new destination protocol.  The caller continues until they run out of source protocols (i.e. the source table returns E_ST_NOMOREROWS). Finally, UpdateStore is called on the destination table.  This pushes the contents of the write cache, all the deletions and insertions included, into the appropriate store on the destination computer. In the sample above, each time we inserted a new protocol into the destination table we set all its properties (which we got from the source table).  In general though, many columns have default values, so specifying everything when inserting a new row is typically unnecessary.  The underlying table implementation can automatically apply defaults from simple table meta.  The meta (a.k.a. schema) for simple tables is also rich enough to automatically handle a majority of validations (e.g. type validation, verifying a specified set of flags falls within the expected mask, insuring a specified enumeration is one of the expected enumerations, and so forth).  The underlying implementation might also be written to apply defaults via inheritance, policy specified elsewhere, and so on.  The magic of the table dispenser is that the right implementation(s) for the job at hand will be bound underneath. More sophisticated validations can also occur when UpdateStore is called.  These validations may include cross-column and even cross-row checks performed before the roundtrip is even taken.  They may also include further security and storage related validations at the  other end  of the roundtrip, and can even kick off actions.  When errors do occur, simple tables support a straightforward detailed error mechanism supporting row and even column granularity, so callers can determine exactly what went wrong.  Again, the right implementations, potentially at both  , is bound in via the magic of the table dispenser. By now you probably realize the write cache is almost exactly like the read cache.  Instead of containing rows which resulted from executing a query, it contains pending row changes.  The write cache, unlike the read cache, marks each row with a pending action.  The actions include insert, delete, and update (and ignore, which we won t discuss here).  AddRowForInsert adds to the write cache a new default row marked for insertion.  AddRowForDelete copies the specified row from the read cache to the write cache marked for deletion.  AddRowForUpdate, not called in the example above, copies a specified row from the read cache to the write cache, marked for update.  Other more advanced means exist for manipulating the write cache not covered here. You may have noticed that deleting a set of rows occurs by executing a query to retrieve that set of rows and then marking the resulting rows for deletion.  This approach can be more expensive than a deletion query, which can be done in one instead of two roundtrips.  However, simple tables encapsulate arbitrarily rich logic (potentially embedded underneath any method).  Simple tables also support detailed error information.  Deletion query support, while certainly possible, is more complicated in this environment.  Thus two roundtrips occur instead of one, but only one query execution typically results. Important Conclusions (a.k.a. Some Final Food For Thought) Before wrapping up, a brief mention regarding concurrency is appropriate.  Simple tables have well-defined concurrency semantics.  These semantics by design and necessity put some locking burden on sophisticated concurrent callers.  However the same semantics allow that in the significantly more common scenarios where locking is either not necessary or already occurs at a higher level, further unnecessary locking is avoided.  Details on concurrency semantics are covered in the reference section on advanced table usage. By now you probably realize that simple table semantics are heavily influenced by competing themes: keep the interfaces simple, make the interfaces powerful, and keep the lower layers fast.  Because values are referenced rather than copied and callers requiring complex concurrency must participate in locking, simple table programming is not for the masses.  When customers interact with configuration, copies must be made and locks must be taken: simple tables allow this to be done at just the highest layer instead of being repeated all the way down through the internal layers of a commercial product. Simple tables allow for an efficient infrastructure which the internal code of commercial products can rely on for their configuration requirements.  The lack of un-necessary copying and locking, coupled with the disconnected cache-based approach (which minimizes roundtrips out of process, off machine, and to datastores) all eliminate significant overhead from important scenarios like serving up configuration at runtime, support for efficient interaction with remote or out-of-process configuration, and rich validation at configuration time.  The common model for requesting tables, specifying queries, and making changes, regardless of underlying storage, merging, and validation allows development teams dependent on configuration to focus on their scenario rather than managing storage and validation issues.  The fact that under the covers, simple tables provide a rich architecture for faulting in the right implementations, using and even changing among different stores, and plugging in rich merge and validation logic as well as sophisticated actions, allows configuration and administration teams to meet both the performance driven requirements of runtime and the rich requirements of configuration time without disrupting dependent teams. Hopefully these initial examples have given you a deeper understanding of how to use simple tables, and a good introduction to what you can do with simple tables.  You should now be able to easily begin coding with simple tables.  The reference sections below are quite detailed, and can answer questions you have along the way.  Hopefully the samples have convinced you that simple tables are both easy to use and powerful.  The real power of course happens under the covers, with the dynamic binding process which selects the right implementation for the job at hand, binds to the right datastore, and faults in the right logic.  Continue into the other parts of this specification if you are interested in understanding how it all works under the covers. Reference: Using the Table Dispenser (a.k.a. Everything You Need to Know to Use the Table Dispenser) To obtain tables, your first get a table dispenser via GetSimpleTableDispenser.  Using the table dispenser, you can then request tables, qualified by a query and level of service, via ISimpleTableDispenser2::GetTable.  Before reading this reference, be sure to read the  Obtaining Simple Tables  introductory section.  // ================================================================== HRESULT GetSimpleTableDispenser DWORD i_eProduct, DWORD i_fReserved, ISimpleTableDispenser2** o_ppISTDisp Gets the simple table dispenser given a product identifier.  Note that the table dispenser is guaranteed to be thread safe. i_eProduct: The product identifier specifies the product in which the dispenser will be used.  Each team which receives an independent drop of simple tables receives its own product identifier.  The product identifier enables co-existence of side-by-side drops of simple tables on the same computer, for use by independent teams. i_fReserved: Reserved.  This parameter must be 0. o_ppISTDisp: The caller specified address of their simple table dispenser pointer (must be NULL). HRESULT errors: The caller s table dispenser pointer is guaranteed not to be changed if any error occurs. E_INVALIDARG: Unrecognized product ID, non-NULL interface pointer, or NULL pointer address. E_OUTOFMEMORY: Insufficient memory to obtain the table dispenser.  Pack up and go home. // ================================================================== ISimpleTableDispenser2:: GetTable GetProductID // ================================================================== ISimpleTableDispenser2:: HRESULT  GetTable [in] LPCWSTR i_wszDatabase,  [in] LPCWSTR i_wszTable,  [in] LPVOID i_QueryData, [in] LPVOID i_QueryMeta, [in] DWORD i_eQueryFormat, [in] DWORD i_fServiceRequests,  [out] LPVOID* o_ppv Provides a simple table in response to a specified database + table identity, query, and requested level-of-service. i_wszDatabase, i_wszTable: The combination of a database and table uniquely identifies a table.  Both identifiers are  virtual .  A table name identifies a table having a certain logical schema independent of where its rows are actually stored.  A database name identifies a logical grouping of related table IDs. i_QueryData, i_QueryMeta: The query data and meta information.  The content of these parameters depends on the query format specified.  For eST_QUERYFORMAT_CELLS (the least-common-denominator query format for simple tables): The query data is an array of STQueryCell structures, defined as: typedef struct { LPVOID pData; DWORD eOperator; ULONG iCell; DWORD dbType; ULONG cbSize; } STQueryCell; iCell specifies the cell identity, which is either a column index in the requested table or one of the reserved cell identifiers which exist outside particular tables and can apply to numerous or all tables (eg: iST_CELL_COMPUTER is a cell indicating the computer name on which to look for the requested table).  Reserved cells can be identified by AND ing iCell with iST_CELL_SPECIAL. pData specifes the value of interest for the particular cell or column. eOperator specifies the relationship operator between the specified cell/column and its data (eg: eST_OP_EQUAL and eST_OP_NOTEQUAL). dbType specifies the type of the cell or column.  A subset of the OLEDB DBTYPE s are supported. cbSize specifies the size in count of bytes of the data.  cbSize can be 0 when the size of the data is easily determined either via the type or data (eg: cbSize can be 0 for fixed-length types, like DBTYPE_GUID; cbSize can be 0 for string data since the size is easily determined via wcslen; cbSize must be specified when the size cannot be easily determined without consulting schema, like DBTYPE_BYTES data).  When the size can be easily determined and is not specified, the dispenser simply fills it in. An array of query cells must be ordered with reserved cells first followed by primary key cells in order followed by other column cells.  This ordering requirement significantly reducing parsing overhead. In an array of query cells, cells with the same column index or cell identity are implicitly OR ed together, whereas cells with different identities are implicitly AND ed.  This approach satifies a large baseline of useful queries.  More complicated queries require the richness of a query language. The query meta is simply a pointer to the count of query cells supplied.  If the query data is NULL (ie: no cells specified), the query meta must also be NULL. The dispenser copies the array of query cells within the GetTable call, so the caller can change their query contents between GetTable calls. i_fServiceRequests: service requests  parameter takes level-of-service flags.  Not specifying any flags at all gives the minimum level of service with the most commonly used behavior, and also allows for the best potential performance.  Service flags specify richer behavior and/or less commonly used behavior.  Requesting increased level-of-service does not guarantee obtaining it (e.g: if the table you are requesting happens to be stored in a read-only format, requesting a write-able table won't help).  Here are the currently supported requests: fST_LOS_CONFIGWORK: Requests a service level appropriate for configuration time.  This may include routing all populates and updates through an administration process which enforces useful security, transaction, and isolation semantics.  By default, a service level appropriate for runtime is chosen.  This allows for the best potential performance, but typically means richer service is not available. fST_LOS_READWRITE: Requests a read-write table (caller receives an ISimpleTableWrite2).  By default, caller receives an ISimpleTableRead2.  The caller can still query for the ISimpleTableWrite2 interface, but UpdateStore will return E_ST_LOSNOTSUPPORTED.  Typically, fST_LOS_CONFIGWORK is required when requesting read-write capabilities.  Do not request this in code paths which never write. fST_LOS_UNPOPULATED: Requests that the dispenser not execute the query before supplying the table (table has an empty read cache).  By default, the dispenser calls PopulateCache for the caller.  This level-of-service is useful when the caller plans to write and without reading, saving the cost of a query execution. fST_LOS_REPOPULATE: Requests a table which can be re-populated after being retrieved.  ISimpleTableAdvanced::PopulateCache may be called to re-execute the query and re-populate the table.  By default, PopulateCache returns E_ST_LOSNOTSUPPORTED. fST_LOS_MARSHALLABLE: Requests a marshallable table. This level-of-service is only required by table marshalling implementations (while many are possible, one or two at most are required).  By default, ISimpleTableController::GetMarshallingInterface returns E_ST_LOSNOTSUPPORTED. fST_LOS_NOLOGIC: Requests a table with no logic faulted in under-the-covers.  Rarely used but very necessary when a caller must get around embedded logic.  Unless you know what you are doing, requesting this is a programming error which can result in inconsistent or corrupted data. o_ppv: Caller specifies the address of a pointer to an ISimpleTableRead2 interface, or to an ISimpleTableWrite2 interface if they specified the fST_LOS_READWRITE flag.  The pointer must be NULL. HRESULT errors: The caller s simple table pointer is guaranteed not to be changed if any error occurs. E_ST_INVALIDTABLE: The database and/or table ID were not recognized. E_ST_INVALIDQUERY: The query specified is invalid. E_ST_QUERYNOTSUPPORTED: The query or query format is not supported for the table and/or level-of-service specified. E_ST_LOSNOTSUPPORTED: Service request could not be satisfied for the requested table. E_ST_DETAILEDERRORS: The read cache was populated with the rows matching your query, but errors were detected on some of those rows.  Use ISimpleTableAdvanced to obtain detailed error information.  See the reference on UpdateStore for common detailed errors. E_INVALIDARG: The caller s pointer or pointer address was invalid. E_OUTOFMEMORY: Insufficient memory to obtain the table.  Pack up and go home. E_ST_INVALIDMETA: Problems were detected in the meta database on which all tables rely. E_ST_INVALIDWIRING: Problems were detected in the wiring database on which the table dispenser relies. Other errors may be returned which are table implementation specific. // ================================================================== ISimpleTableDispenser2:: HRESULT  GetProductID (   [out]       LPWSTR          o_wszProductID,     [in, out]   DWORD *         io_pcchProductID); Gets the Product ID that is associated with this dispenser. o_wszProductID:  Product ID will be stored here. Pass in null pointer if you only want to request the size of the product ID. io_pcchProductID: Contains maximum size of o_wszProductID before the call, and size of product ID after the call. Note that maximum io_pcchProductID character will be written in o_wszProductID Reference: Reading From Tables  (a.k.a. More Than You Wanted to Know about Reading Via Tables) Be sure to read the  Obtaining Simple Tables  and  Reading From Simple Tables  introductory sections before reading this reference section.   // ================================================================== ISimpleTableRead2:: GetColumnValues GetTableMeta GetColumnMetas GetRowIndexByIdentity GetRowIndexBySearch The ISimpleTableRead2 interface supports getting the column values of any row in the read cache, obtaining basic meta about the table and its columns, and finding a row by primary key identity in the read cache. Once you obtain a table from the table dispenser, you can interact with it via ISimpleTableRead2.  An ISimpleTableRead2 pointer conceptually encapsulates a read cache containing the rows which matched your query.  The read cache is in-memory and in-process.  Thus, when reading, the only roundtrip to the datastore itself occurs when executing the query.  Iterating over the resulting rows and their column values occurs entirely in the caller s process. Think of the read cache as an array of rows which met your query criteria.  These rows are indexed from 0 to count of rows - 1.  If your query resulted in a single row, that row will be at index 0 in the read cache.  Besides iterating over rows in their retrieved order, you can also look up a row by specifying its primary key identity. The column values of any row in the read cache can be obtained singly, as a specified subset, or all together.  Column values are fetched by giving the caller pointers directly into the values inside the read cache.  This alleviates the need to allocate/copy/de-allocate when fetching column values.  Obviously the caller must obey lifetime rules on these pointers and must never overwrite the values to which they point. // ================================================================== // Getting column values: ISimpleTableRead2:: HRESULT GetColumnValues ([in] ULONG i_iRow, [in] ULONG i_cColumns, [in] ULONG* i_aiColumns,  [out] ULONG* o_acbSizes, [out] LPVOID* o_apvValues); Obtain pointers to one or more requested column values on the specified row in the read cache. Pointers remain valid only until the simple table is released.  The values are owned by the simple table: no copying takes place.  Attempting to modify the value is a programming error.  While not of concern to most callers, certain advanced or control methods also invalidate pointers obtained via GetColumnValues: Query re-execution via ISimpleTableAdvanced::PopulateCache. Cache reshaping via ISimpleTableController::ShapeCache. Read cache alteration via ISimpleTableController::PrePopulateCache/PostPopulateCache. i_iRow: Specifies the index of the row in this read cache on which to fetch column values.  Row indexes range from 0 to count of rows - 1. i_cColumns: Specifies the count of column values to be retrieved.  The count can range from 1 to count of columns.  For a given table, a fixed order to the columns is guaranteed, as specified by the schema. i_aiColumns: Specifies the array of column indexes for which to retrieve values.  i_cColumns indicates the count of column indexes in this array.  The following possibilities are supported: Retrieve a single specific value.  i_cColums is 1 and i_aiColumms is a one element array containing the single column index of interest. Retrieve a specific set of values.  i_cColums is the count of values of interest and i_aiColumms is an array of the indexes for the columns of interest. Retrieve the values for column indexes 0 to n.  i_cColumns is n and i_aiColumns is NULL. Retrieve the values of all columns.  i_cColumns equals the actual count of columns and i_aiColumns is NULL. o_apvValues: Specifies an array of pointers for the requested column values.  On success, these will point to the column values requested.  For a given table, all values for a column are guaranteed to be of the type specified for that column by the schema.  The column s value can be NULL, and if so, that pointer will be NULL.  The value pointers themselves need not be set to NULL before calling.  The following possibilities are supported: When retrieving a single specific value, o_apvValues is the address of a pointer to hold the specified value. When retrieving the first n column values or all column values, o_apvValues is an array of pointers of count i_cColumns. When retrieving a specific set of values, o_apvValues must be an array of pointers whose count is the largest column index in the set + 1.  The array of pointers will be sparsely filled.  Only those at indexes requested will be pointed to column values.  This approach allows efficient subsequent lookup of each value. o_acbSizes: Optionally specifies an array of sizes of the requested column values (always in count of bytes).  Callers typically do not need to know the size because it is either fixed according to the column type or meta (eg: DBTYPE_GUID, or fST_COLUMN_FIXEDLENGTH), or easily determined by the data (eg: DBTYPE_WSTR).  NULL is specified when the caller is not interested obtaining sizes.  If the caller does request sizes, they need not initialize their size variable to 0 before calling.  The same possibilities for o_apvValues apply to o_acbSizes when specified. HRESULT errors:  On any error, the caller s value pointers and requested sizes are guaranteed to be set to NULL and 0 respectively when possible. E_ST_NOMOREROWS: Specified row index was invalid.  Either the read cache is empty or the specified row index is out of range. E_ST_NOMORECOLUMS: The specified column count or a column index was out of range. E_INVALIDARG: The address supplied by the caller for their array of value pointers is NULL. E_ST_INVALIDCALL: Getting column values attempted while populating the read cache  (not applicable for normal callers: this error can occur internally in bad table implementations). // ================================================================== // Discovering meta: ISimpleTableRead2:: HRESULT GetTableMeta [out] ULONG* o_pcBaseVersion, [out] DWORD* o_pfTable, [out] ULONG * o_pcRows, [out] ULONG * o_pcColumns HRESULT GetColumnMetas [in] ULONG i_cColumns, [in] ULONG* i_aiColumns, [out] SimpleColumnMeta* o_aColumnMetas); Provide basic meta information about a table and its columns.  All information is optionally available, so NULL may be specified for anything not of interest to the caller.  To obtain richer meta information, see the  Dynamic Schema Adaptation  section. o_pfTable: The table meta flags.  See the  Reference: The Meta Database  details about these meta flags. o_pcBaseVersion: The base version of this table.  Table columns are ordered.  The table version only changes if existing columns are re-ordered in the schema (which occurs either by re-ordering existing columns, deleting existing columns, or inserting a new column among existing columns).  The table version does not change when new columns are added after existing columns.  Column re-ordering affects callers who have compiled constants for the column indices, requiring such callers to re-compile.  However, re-ordering existing columns only occurs during the development cycle and rarely at that.  The base version is useful simply for such callers to assert that their column constants are valid. o_pcRows, o_pcColumns: The count of rows and count of columns respectively.  The count of rows refers to the number of rows currently in the read cache which resulted from the last execution of the caller s query.  Obviously if the query was not yet executed (because the fST_LOS_UNPOPULATED level-of-service was specified and the table has not been subsequently populated), or the query was executed and no matching rows were found, the row count will be 0.  The count of columns is determined from the table s schema and only changes if the schema itself is changed. i_cColumns:  Count of columns for which to fetch meta.  See the reference for the i_cColumns parameter of GetColumnValues. i_aiColumns:  Array of column indexes for which to fetch meta.  See the reference for the i_aiColumns parameter of GetColumnValues for supported possibilities. o_aColumnMetas: An array of simple column meta structures for the columns requested.  Simple column meta is defined as: typedef struct { DWORD dbType; ULONG cbSize; DWORD fMeta; } SimpleColumnMeta; dbType: The column type.  See the  Reference: The Meta Database  for details about column types. cbSize: The column size, always in count of bytes.  If the column type is a fixed-length type, or the column s meta indicates the column values will be of fixed-length (fST_COLUMN_FIXEDLENGTH), this is guaranteed to be the size of any value for this column.  If the column s meta instead indicate the column values will be of a maximum size, this size is that maximum.  The actual size of any given column value will vary up that maximum inclusively.  If none of the above is true, the size will be ~0, indicating that column values will be of variable and unlimited length.  When a column s size is not fixed, the actual size of any given column value can be optionally obtained from GetColumnValues. fMeta: Column meta flags.  See the  Reference: The Meta Database  for details about these flags. See the reference for the o_apvValues parameter of GetColumnValues for supported possibilities. HRESULT errors: On any error, the caller s column meta structures are guaranteed to be zeroed when possible. E_ST_NOMORECOLUMS: For GetColumnMetas, the specified column count or an index was out of range.  E_ST_INVALIDCALL: GetTableMeta attempted while populating the read cache  (not applicable for normal callers: this error can occur internally in bad table implementations). // ================================================================== // Locating rows by identity: ISimpleTableRead2:: HRESULT  GetRowIndexByIdentity ([in] ULONG* i_acb, [in] LPVOID* i_apv, [out] ULONG* o_piRow); Get the index of a row in the read cache by searching for its primary key identity.  Lookup by identity is rare compared to lookup by row index.  Rather than navigate by identity, callers interested in certain identities more commonly query for a single identity or set of identities when obtaining the table. i_apv: Specifies an array of pointers to primary key values.  Primary keys may be composed of multiple columns, and those columns are known via the table s meta and ordered relative to each other.  Therefore, the count of pointers in this array must be the count of columns in the primary key, the pointers must be ordered in the relative order of the primary key columns, and the types to which the pointers point must be the types of the corresponding columns.  E.g.: For a table whose meta indicates columns 0, 1, and 10 are primary key columns, and they are a guid, string, and integer, an array of 3 pointers to a guid, string, and integer in that order would be supplied. i_acb: Specifies an optional array of sizes matching the values above, almost always NULL.  If all primary key columns are either of fixed-length data-types, or their size can be easily determined from the data (eg: DBTYPE_WSTR), or their meta specifies a fixed length even though the type is variable length, the array of sizes must be NULL.  If one of the columns is truly a variable length which cannot be determined by the type, meta, or data (extremely unusual for a primary key column), the array of sizes is required.  The array of sizes must then correspond to the array of pointers, but all elements will be ignored except for the columns which truly require a caller-specified size. o_piRow:  The returned index to the row in this read cache matching the specified primary key identity.  ~0 if not found. HRESULT errors: E_ST_NOMOREROWS: Specified row identity was not found.  The row index returned will be ~0. E_INVALIDARG: Array of sizes was required but caller specified NULL, array of sizes was not required but caller specified non-NULL, array of pointers was NULL, at least one of the pointers in the array of pointers was NULL, or the pointer for the row index was NULL. E_ST_INVALIDCALL: Row navigation attempted while populating the read cache (not applicable for normal callers: this error can occur internally in bad table implementations). // ================================================================== // Locating rows by column values: ISimpleTableRead2:: HRESULT  GetRowIndexBySearch ([in] ULONG i_iStartingRow, [in] ULONG i_cColumns, ULONG* i_aiColumns,   [in] ULONG i_acbSizes, [in] LPVOID* i_apvValues, ULONG *o_piRow) Get the index of a row in the read cache by searching for particular column values. Lookup by column values is rare compared to lookup by row index.  Rather than navigate by identity, callers interested in certain identities more commonly query for a single identity or set of identities when obtaining the table. i_iStartingRow Specifies the row in the read cache where the search should start. Because it is possible that there are multiple elements that match the column values, we need to indicate how to find the next match. This can be done by changing the i_iStartingRow paramter. i_cColumns:  Count of columns for which to compare information.  See the reference for the i_cColumns parameter of GetColumnValues. i_aiColumns:  Array of column indexes for which we need to compare information.  See the reference for the i_aiColumns parameter of GetColumnValues for supported possibilities. i_acbSizes: Optionally specifies an array of sizes of the requested column values (always in count of bytes).  Callers typically do not need to know the size because it is either fixed according to the column type or meta (eg: DBTYPE_GUID, or fST_COLUMN_FIXEDLENGTH), or easily determined by the data (eg: DBTYPE_WSTR).  NULL is specified when the caller is not interested obtaining sizes.  If the caller does request sizes, they need not initialize their size variable to 0 before calling.  The same possibilities for i_apvValues apply to i_acbSizes when specified. i_apvValues: Specifies an array of pointers for the column values.  They point to the values that are used in the compare.  When comparing a single specific value, i_apvValues is the address of a pointer to hold the specified value. When comparing the first n column values or all column values, i_apvValues is an array of pointers of count i_cColumns. When comparing a specific set of values, i_apvValues must be an array of pointers whose count is the largest column index in the set + 1.  The array of pointers will be sparsely filled.  Only those at indexes requested will be pointed to column values. o_piRow:  The returned index to the row in this read cache matching the specified column values. ~0 if not found. HRESULT errors: E_ST_NOMOREROWS: No row was found that matches the column values.  The row index returned will be ~0. E_INVALIDARG: Array of sizes was required but caller specified NULL, array of sizes was not required but caller specified non-NULL, array of pointers was NULL, at least one of the pointers in the array of pointers was NULL, or the pointer for the row index was NULL. E_ST_INVALIDCALL: Row navigation attempted while populating the read cache (not applicable for normal callers: this error can occur internally in bad table implementations). Reference: Writing Via Tables  (a.k.a. More Than You Wanted to Know about Writing Via Tables) Be sure to understand the  Reference: Reading From Tables  section before reading this reference section. // ================================================================== ISimpleTableWrite2: ISimpleTableRead2:: AddRowForInsert AddRowForUpdate AddRowForDelete GetWriteColumnValues SetWriteColumnValues UpdateStore GetWriteRowIndexByIdentity GetWriteRowIndexBySearch The ISimpleTableWrite2 interface contains methods for inserting, deleting, and updating rows, methods for getting and setting column values in the write cache, a method for updating the datastore with all the  pending  changes in the write cache, and a method for finding a row by primary key identity in the write cache. Recall that the read cache of a simple table contains the rows resulting from the query executed by ISimpleTableDispenser2::GetTable.  The ISimpleTableRead2 interface pointer encapsulates that in-process, in-memory read cache.  Thus, when reading, the only roundtrip to the datastore itself occurs when executing the query.  Iterating over the resulting rows and their column values occurs entirely within the caller s process.  Writing via simple tables follows a similar pattern.   The ISimpleTableWrite2 interface derives from the ISimpleTableRead2 interface.  Because of this derivation, you can do everything with the write interface that you can with the read interface, and more.  Obtaining a table from the dispenser via its GetTable method either supplies an ISimpleTableRead2 interface pointer (by default) or an ISimpleTableWrite2 interface pointer (if the read-write level-of-service is requested). The ISimpleTableWrite2 interface pointer conceptually encapsulates a read and a write cache.  The write cache contains all the pending changes made by the caller until they tell the simple table to update the underlying datastore with those pending changes.  Thus, when writing, the only roundtrip to the datastore itself occurs when the caller wants to push a set of pending changes out to storage.  Each row insertion, row update, row deletion, and column change in that set of   pending  changes occurs entirely within the caller s process. The write cache consists of an ordered list of marked rows.  Each row is marked either for deletion, insertion, or update.  Rows marked for insertion or update contain various columns whose values have been changed.  A row in the write cache can also be marked to be ignored, in which case that row is entirely ignored when updating the datastore with the pending changes.  Pending changes are applied to storage in the order they were made by the caller. Having a separate cache for pending writes as opposed to making the changes in place in the   cache has important advantages.  Accessing column values via simple tables occurs by pointer directly into the cache.  Having a separate write cache guarantees that the caller s pointers into the read cache will be valid until they either re-populate or release the table.  If changes were made directly into the read cache, pointers to any column values might become invalid with every single change, and the invalidation scenarios would be implementation specific.  Also, having a read and write cache allows comparison between original and changed values.  While not of interest to most callers, this capability is critical to some. // ================================================================== // Adding a row for insertion, update, or deletion: ISimpleTableWrite2:: HRESULT  AddRowForInsert ([out] ULONG* o_piWriteRow); HRESULT  AddRowForUpdate ([in] ULONG i_iReadRow, [out] ULONG* o_piWriteRow); HRESULT  AddRowForDelete ([in] ULONG i_iReadRow); Add a row to the write cache marked for insertion, update, or deletion. AddRowForInsert adds a new row to the write cache marked for insertion.  Meta specified defaults for column values are applied.  The index in the write cache of the new row is returned.  AddRowForUpdate copies a row from the read cache, given its index, into the write cache, and marks it for update.  The index in the write cache of the copied row is returned.  AddRowForDelete copies a row from the read cache, given its index, into the write cache, and marks it for deletion. On a row added for insertion, values for all columns which do not have defaults must be specified, primary key columns included.  On a row added for update, since the row was copied from the read cache, all columns already have values.  On rows added for update, the primary key columns may not be changed.   Note that when inserting rows, having data-driven defaults instead of schema-driven defaults might be desired.  This can easily be accomplished assuming that a row containing those defaults can be queried for.  Given that, the caller can simply transfer the defaults from the queried row to the new row.  This operation can be encapsulated as logic specific to the applicable set of tables. i_iReadRow: The index of the row in the read cache to be added to the write cache for update or deletion. o_piWriteRow: The index of the row added to the write cache for insertion or update. HRESULT errors: E_ST_NOMOREROWS: The read cache index specified by the caller is invalid.  No changes are made to the write cache. E_OUTOFMEMORY: Insufficient memory to add the row to the write cache.  Pack up and go home. // ================================================================== // Setting and getting column values: ISimpleTableWrite2:: HRESULT GetWriteColumnValues [in] ULONG i_iRow,  [in] ULONG i_cColumns, [in] ULONG* i_aiColumns,  [out] DWORD* o_afStatus,  [out] ULONG* o_acbSizes, [out] LPVOID* o_apvValues); HRESULT SetWriteColumnValues [in] ULONG i_iRow,  [in] ULONG i_cColumns, [in] ULONG* i_aiColumns,  [in] ULONG* i_acbSizes, [in] LPVOID* i_apvValues Get and set one or more requested column values on the specified row in the write cache. Value pointers obtained from GetWriteColumnValues are invalidated by any subsequent ISimpleTableWrite2 method call or by releasing the simple table.  The values are owned by the simple table: no copying takes place.  Attempting to modify a value is a programming error.  While not of concern to most callers, certain advanced or control methods also invalidate pointers obtained via GetWriteColumnValues: Cache reshaping via ISimpleTableController::ShapeCache. Read cache alteration via ISimpleTableController::PrePopulateCache/PostPopulateCache. Discarding the write cache via ISimpleTableController::DiscardPendingWrites. i_iRow: Specifies the index of the row in the write cache on which to fetch column values.  Row indexes range from 0 to count of rows - 1. i_cColumns: See the reference for the i_cColumns parameter of GetColumnValues. i_aiColumns: See the reference for the i_aiColumns parameter of GetColumnValues. o_apvValues: See the reference for the o_apvValues parameter of GetColumnValues. o_acbSizes: Optional.  See the reference for the o_acbSizes parameter of GetColumnValues. o_afStatus: Optional array of column status flags.  The caller need not initialize their status variables to 0 before calling.  Be sure to use bit AND ing (not equality) to check for flags.  The exposed column status flags are: fST_COLUMNSTATUS_CHANGED: The column value has been changed by the caller.  The flag will not be set if the column value has not yet changed.  Schema-specified defaults applied to column values on AddRowForInsert do not show up as changes.  Note that all column values (unless the meta specifies otherwise) are guaranteed to be written to the datastore on row insertions or updates. The same possibilities for o_apvValues and o_cbSizes apply to o_afStatus  when specified. i_apvValues:  Array of pointers to values to be set on the specified row in the write cache.  These values are copied by SetWriteColumnValues.  The same possibilities for o_apvValues are supported. i_apvValues:  Array of sizes corresponding to the values specified in i_apvValues.  The same possibilities for o_acbSizes are supported.  When the size of a value can be determined by the column type, meta, or value itself, the size specified in this array is guaranteed to be ignored (i.e. 0 can be supplied in most cases).  If this is the case for all column values specified, this array can be NULL. HRESULT errors: Note that on any error from GetWriteColumnValues specifically, the caller s value pointer, requested status and size are guaranteed to be set to NULL and 0 respectively when possible. E_ST_NOMOREROWS: The row index specified is out of range.  No change occurs. E_ST_NOMORECOLUMNS: The column index specified is out of range.  No change occurs. E_ST_SIZENEEDED: The caller did not specify the size of a column value passed to SetWriteColumnValues whose size cannot be determined by the column type, meta, or value itself. E_ST_SIZEEXCEEDED: The column value specified in the call to SetWriteColumnValues was determined to be greater in size than the maximum or fixed size specified by meta.  No change occurs. E_ST_VALUEINVALID: The value specified by the caller for a column is invalid according the meta. E_ST_PKNOTCHANGEABLE: The column specified in the call to SetWriteColumnValues while adding a row for update was a primary key which cannot be changed during update.  No change occurs. E_INVALIDARG: : The address supplied by the caller for their array of value pointers is NULL. E_OUTOFMEMORY: Insufficient memory to set column values.  Pack up and go home. // ================================================================== // Updating the store: ISimpleTableWrite2:: HRESULT UpdateStore Apply all pending changes in the write cache to the datastore.   The row updates, insertions, and deletions made by the caller are guaranteed to be applied in the order specified by the caller.  The write cache is cleared of pending changes, unless E_ST_DETAILEDERRORS is returned, in which case all pending changes remain.  If detailed errors occur, the caller may investigate those errors and clear the write cache of pending changes via ISimpleTableAdvanced. UpdateStore is guaranteed to iterate over all pending row changes even when detailed errors (i.e.: errors specific to a row or column, which are typically failed validations) occur.  This allows the caller to see all the errors found while attempting to process their pending changes, as opposed to the first problem only.  This does not mean that in a mix of failed and successful changes, some of the changes are applied.  By convention, when any detailed errors occur, none of the pending changes are written to the datastore.  This convention does not mean that the datastore itself is fully transactional.  It simply means that the set of pending changes will be applied together, as a unit, if and only if no detailed errors were detected.  If the underlying datastore is not itself transactional, unavoidable failures can occur when actually persisting the changes. More sophisticated validation requires evaluating the changes to a row as a whole and even validating those changes against other tables.  These validations will occur during UpdateStore. When inserting or updating a row in the datastore, all column values are guaranteed to be written (unless their meta specifies otherwise). HRESULT errors: E_ST_LOSNOTSUPPORTED: The caller tried UpdateStore on a table instance but did not request the fST_LOS_READWRITE level-of-service when they obtained the table. E_ST_DETAILEDERRORS: While updating the store with the pending changes in the write cache, errors occurred specific to one or more of the row changes.  Use ISimpleTableAdvanced to obtain detailed error information.  Common detailed errors include: E_ST_VALUENEEDED: On a row marked for insertion, the caller was required to specify a value for a particular column (because a default value was not specified in the meta), but failed to do so.  The specific column or columns will be indicated as part of the detailed error. E_ST_VALUEINVALID: The value specified by the caller for a column is invalid according to validation rules.  The specific column or columns will be indicated as part of the detailed error. E_ST_ROWALREADYEXISTS: Inserting a row was attempted and that row already exists.  E_ST_ROWDOESNOTEXIST: Updating a row was attempted and that row does not exist. E_ST_ROWALREADYUPDATED: Updating a row was attempted but that row was already updated between the time the caller read the row and applied their changes.  By default, overlapping updates are allowed.  (Preventing overlapping updates is possible, but currently no need exists.  The infrastructure will not be plumbed to support this until a consumer drives it based on a concrete need.) E_ST_FKDOESNOTEXIST: An inserted row includes a foreign key to another table whose corresponding primary key does not exist but must exist according to meta. E_ST_INVALIDCALL: Call attempted while populating the read cache (not applicable for normal callers: this error can occur internally in bad table implementations). Other errors may be returned which are table implementation specific. // ================================================================== // Locating rows by identity: ISimpleTableWrite2:: HRESULT GetWriteRowIndexByIdentity ([in] ULONG* i_acbSizes, [in] LPVOID* i_apvValues, [out] ULONG* o_piRow); Get the index of a row in the write cache by searching for its primary key identity.  See the reference for GetRowIndexByIdentity.  The two methods are semantically identical except that one is for the read cache and one is for the write cache, and that E_ST_INVALIDCALL does not apply to GetWriteRowIndexByIdentity. // ================================================================== // Locating rows in write cache by column values: ISimpleTableRead2:: HRESULT  GetWriteRowIndexBySearch ([in] ULONG i_iStartingRow, [in] ULONG i_cColumns, ULONG* i_aiColumns,   [in] ULONG i_acbSizes, [in] LPVOID* i_apvValues, ULONG *o_piRow) Get the index of a row in the write cache by searching for column values.  See the reference for GetRowIndexBySearch.  The two methods are semantically identical except that one is for the read cache and one is for the write cache, and that E_ST_INVALIDCALL does not apply to GetWriteRowIndexBySearch. Reference: Advanced Table Usage  (a.k.a. Stuff Most Callers Who Work With Simple Tables Will Never Need) Use of certain simple table features are historically rare but very necessary for a small set of sophisticated callers.  This reference section assumes a working knowledge of previous sections. // ================================================================== ISimpleTableAdvanced:: PopulateCache GetDetailedErrorCount GetDetailedError The ISimpleTableAdvanced interface provides a method for re-executing the query on an existing table instance, reloading the read cache with the new results, and also provides methods for obtaining detailed errors.  Logic implementers aside, the configuration API is currently the only caller requiring these capabilities. Before detailing the methods, let s discuss concurrency semantics.  Making the same request to the table dispenser twice effectively yields two table instances, each with its own read cache and possibly its own write cache.  The table instances are independent and the results in each read cache will differ if the data in underlying storage changed between calls. Sophisticated callers may want to share one read cache among multiple threads.  First the caller must obtain the table instance via the table dispenser which executes their query and populates the read cache with the resulting rows.  The caller can then give out references to this table instance to multiple threads.  These threads can then read the results safely.  On a particular thread the caller can either make changes via the table object or listen on applicable notifications.  When the caller pushes accumulated changes to storage or receives notification, they can request another table instance from the table dispenser to obtain the latest results from those changes.  The caller can then release their reference to the old copy and notify the other threads that a new copy is available.  This approach allows threads using the old copy to release their references independently and when the last thread does so the old copy will be automatically cleaned up.  Callers must of course obey the lifetime rules on pointers they obtain into the read and write cache as outlined in the references for GetColumnValues and GetWriteColumnValues. // ================================================================== // Re-populating the read cache ISimpleTableAdvanced:: HRESULT PopulateCache When the caller obtains a table instance from the table dispenser, the read cache is typically already populated with the results from their query.  PopulateCache discards the existing results (if any) from the read cache, re-executes the query, and populates the read cache with the resulting rows. HRESULT errors: E_ST_LOSNOTSUPPORTED: The caller tried PopulateCache on a table instance but did not request the fST_LOS_REPOPULATE level-of-service when they obtained the table. E_ST_DETAILEDERRORS: Errors occurred during population which are available via detailed errors.  See the reference on UpdateStore for common detailed errors. // ================================================================== // Obtaining detailed errors ISimpleTableAdvanced:: HRESULT GetDetailedErrorCount ([out] ULONG* o_pcErrs); HRESULT GetDetailedError ([in] ULONG i_iErr, [out] STErr* o_pSTErr); Obtain the count of detailed errors and the detailed errors themselves.  Detailed errors can occur on ISimpleTableDispenser2::GetTable, ISimpleTableWrite2::UpdateStore, and ISimpleTableAdvanced::PopulateCache.  The detailed errors apply to whichever of these calls was made last. o_pcErrs: The count of detailed errors.  0 when no detailed errors were encountered. i_iErr: The index of the detailed error to obtain.  Detailed error indexes range from 0 to count of errors - 1. o_pSTErr: The detailed error information requested.  The fields need not be initialized by the caller.  A detailed error structure is defined as: typedef struct { ULONG iRow; HRESULT ULONG iColumn; } STErr; iRow: The row index to which the detailed error applies.  iST_ERROR_ALLROWS means the error applies to all rows.  If the detailed errors resulted from UpdateStore, this is an index into the write cache, and otherwise this is an index into the read cache. iColumn: The column index to which the detailed error applies.  iST_ERROR_ALLCOLUMNS means the error applies to all columns on the denoted row. hr: The error code for the detailed error, expressed as an HRESULT. HRESULT errors:  On error, the caller s detailed error structure will be zeroed when possible. E_INVALIDARG: o_pcErrs or o_pSTErr was NULL. E_ST_NOMOREERRRORS: i_iErr was out of range. Part II: Schema Evolution Extending Schema  (a.k.a. Give Me My New Configuration Properties Now!) Dynamic Schema Adaptation  (a.k.a. How NOT to Go Insane During the Development Cycle) <todo/>A simple example of printing the contents of any table <notes> Detail the differences between generic table code and specific table code Note schema versioning policies I can pre-determine the schema for columns of interest either statically or dynamically; dynamically I can do it from the table or a meta table. The table dispenser is an example of a piece of code which dynamically evolves so is the shapeable fast cache. Table name assumes fixed ordered subset of columns: callers which only need those can hard code... Note that primary keys must always be unique!  Multi-column ok. DT/LT-specific meta now obtained via query rather than modified table ID Note that for hard-coded values, table version assertions are useful What about meta enforcement while pre-to-post populating the read cache? </notes> Reference: The Meta Database  (a.k.a. All You Need To Know About All You Can Know) Be sure to read the  Dynamic Schema Adaptation  introductory sections before reading this reference section.   // ================================================================== METADATABASE: DATABASEMETA TABLEMETA COLUMNMETA TAGMETA RELATIONMETA QUERYMETA INDEXMETA The meta database is a collection of tables regarding meta.  The databases known to the catalog, their tables, the columns in those tables are all described (as well as the legal enumerations or flags for enumeration and flag columns).  The relationships between the tables, the queries supported by each table, and the indexes available on each table are also described. Recall that a database, in simple table terms, is a logical collection of tables.  Those tables need not all come from one physical datastore or location, and typically they don t.  In simple table terms, databases are virtual collections of tables, datastores are places where table information is persisted.  Simple tables encapsulate the datastore details from callers. The meta database is a collection of meta information tables which are obtained via the table dispenser and readable as simple tables.  The table implementation serving up meta database tables is read-only and extremely efficient.  Writing to the meta database occurs via an out-of-band compilation from a XML-based source format.  Many simple table consumers can and should use the meta database to insure they dynamically adapt to schema changes.   The meta database can answer all sorts of interesting questions, like: What are the databases known to the catalog? What are the tables in a database? What are the columns in a table? What is the type, size, and attributes of a column? What are the relationships between tables? This reference succinctly describes each meta table and its columns.  The meta tables themselves are fully self-described via the meta database. // ================================================================== DATABASEMETA: InternalName DBTYPE_WSTR PRIMARYKEY PublicName DBTYPE_WSTR BaseVersion DBTYPE_UI4 ExtendedVersion DBTYPE_UI4 CountOfTables DBTYPE_UI4 DATABASEMETA describes each database known to the catalog. InternalName: The internal name of the database.  Internal database constants are generated from this. The table dispenser recognizes databases by their internal names. PublicName: The public name of the database.  Used by the administration api and public media. BaseVersion: The base version of this database.   Each time tables are removed, the base version increments.  The base version must not change when tables are added.  Therefore, the base version guarantees a well-known minimum subset of tables. ExtendedVersion: The extended version of this database.   The extended version increments whenever tables are added or removed. CountOfTables: The count of tables in this database (derived from the TABLEMETA table). // ================================================================== TABLEMETA: Database DBTYPE_WSTR PRIMARYKEY | FOREIGNKEY InternalName DBTYPE_WSTR PRIMARKKEY PublicName DBTYPE_WSTR PublicRowName DBTYPE_WSTR BaseVersion DBTYPE_UI4 ExtendedVersion DBTYPE_UI4 NameColumn DBTYPE_UI4 NavColumn DBTYPE_UI4 CountOfColumns DBTYPE_UI4 MetaFlags DBTYPE_UI4 SchemaGeneratorFlags DBTYPE_UI4 TABLEMETA describes each table known to the catalog. Database: The internal name of the one database to which this table belongs. InternalName: The internal name of the table, from which internal table and column constants are built.  The table dispenser recognizes tables by their internal names. PublicName: The public name of the table.  Used by the administration api and public media. PublicRowName: The public name of the rows in the table. BaseVersion: The base version of this table. Each time existing columns are re-ordered (either by re-ordering, inserting new columns, deleting existing columns) or the meta any existing columns is fundamentally changed, the base version increments.  The version must not change when new columns are added.  Therefore, a version guarantees a well-known subset of columns having well-known meta. ExtendedVersion: The extended version of this table: increments whenever table or column meta changes. NameColumn: The column in the table whose value is the public name for the row.   The administrative api displays the names of the rows from this column.  The name column must be of type DBTYPE_WSTR. NavColumn: The column in the table used by the administrative api for hierarchical navigation.   This column must be one of the a primary key columns. CountOfColumns: The count of columns in this table (derived from the COLUMNMETA table). MetaFlags: The meta flags for the table.   When a flag represents a boolean choice, the flag specifies the less common choice, and the absence of the flag specifies the common choice. fTABLEMETA_INTERNAL: The table is not publically exposed by the administrative api. fTABLEMETA_NOLISTENING: The notification system will never listen for changes on this table. fTABLEMETA_RELATIONINTEGRITY: The integrity logic table is needed either to relational integrity.  The integrity table uses the RELATIONSMETA table for enforcing relational integrity. fTABLEMETA_ROWINTEGRITY: The integrity logic table will be used to enforce row integrity during UpdateStore (inserting a row fails if the row already exists; updating a row fails if the row does not exist). fTABLEMETA_UNKNOWNSIZES: The table has at least one column where the sizes of its values cannot be determined from the type, meta, or data directly (meaning the size must be requested when getting the column values and must be specified when setting them).  Derived from column meta. fTABLEMETA_HASDIRECTIVE: The table has a column for merge directives: derived from column meta. fTABLEMETA_NOPUBLICINSERT: The administrative api will block row insertions into this table.  Never set for internal tables. fTABLEMETA_NOPUBLICUPDATE: The administrative api will block row updates into this table.  Never set for internal tables. fTABLEMETA_NOPUBLICDELETE: The administrative api will block row deletes into this table.  Never set for internal tables. fTABLEMETA_HIDDEN: The table is hidden by the administrative api. This can be used to exclude tables from WMI. SchemaGeneratorFlags:The schema generator flags for the table. fTABLEGENERATOR_XMLSCHEMA: Generate XML schema for the table. fTABLEGENERATOR_CLBSCHEMA: Generate CLB schema for the table. // ================================================================== COLUMNMETA: Table DBTYPE_WSTR PRIMARYKEY | FOREIGNKEY Index DBTYPE_UI4 PRIMARYKEY InternalName DBTYPE_WSTR PublicName  DBTYPE_WSTR DBTYPE_UI4 DBTYPE_UI4 MetaFlags DBTYPE_UI4 DefaultValue DBTYPE_BYTES FlagsMask DBTYPE_UI4 StartingNumber DBTYPE_UI4 EndingNumber DBTYPE_UI4 CharacterSet DBTYPE_WSTR COLUMNMETA describes the columns of each table known to the catalog. Table: The internal name of the table to which this column belongs. Index: The column index.  Indexes must range from 0 to count of columns - 1. InternalName:  The internal name of the column.  Internal column constants are built using this name. PublicName:  The public name of the column.  Used by the administration api and public media. Type: The column type: DBTYPE_UI4: A 32-bit value (futher qualified by column meta as a range, bool, flags, enums, etc). DBTYPE_GUID: A 16-byte guid. DBTYPE_WSTR: A unicode string. DBTYPE_BYTES: A byte array. DBTYPE_DBTIMESTAMP: A DBTIMESTAMP structure, consisting of year, month, day, hour, minute, second, and fraction. DBTYPE_VARIANT: A variant.  Supported on a case-by-case basis for specific tables only. Size:  The size, in count of bytes, of the column s values.   If the column type is a fixed-length type, or column type allows variable sizes but the meta specifies a fixed length, all column values (except NULL) are guaranteed to be of this size.  If the type and meta specify a variable length, the size indicates the maximum length.  A size of ~0 indicates unlimited length. MetaFlags: The meta flags for the column.   When a flag represents a boolean choice, the flag specifies the less common choice, and the absence of the flag specifies the common choice. Column classifications: fCOLUMNMETA_PRIMARYKEY: The column is part of the primary key. fCOLUMNMETA_FOREIGNKEY: The column is refers to a primary key column in another table.  This information is derived from the RELATIONSMETA table. fCOLUMNMETA_NAMECOLUMN: This is the name column.  Derived from table meta. fCOLUMNMETA_NAVCOLUMN: This is the navigation column.  Derived from table meta. fCOLUMNMETA_DIRECTIVE: The column is the merge directive for the table. Type modifiers: fCOLUMNMETA_BOOL: Column values are boolean (DBTYPE_UI4 only). fCOLUMNMETA_FLAG: Column values are flags (DBTYPE_UI4 only): see TAGMETA. fCOLUMNMETA_ENUM: Column values are enums (DBTYPE_UI4 only): see TAGMETA. Write restrictions (write always is the default): fCOLUMNMETA_WRITENEVER: Value changes to this column are never written. fCOLUMNMETA_WRITEONCHANGE: Only write this column value when the caller changes it. fCOLUMNMETA_WRITEONINSERT: Only write this column value when the row is first inserted. Public exposure restrictions (public is the default; not public is always set for internal tables): fCOLUMNMETA_NOTPUBLIC: Column not exposed via the administrative api. fCOLUMNMETA_NOTDOCD: Column exposed via the administrative api but not documented. Public write restrictions (read/write is the default): fCOLUMNMETA_PUBLICREADONLY: Column value cannot be modified via the administrative api. fCOLUMNMETA_PUBLICWRITEONLY: Column value write-able but not readable via administrative api. Insert rules: fCOLUMNMETA_INSERTDEFAULT: Column value has a specified default on insertion. fCOLUMNMETA_INSERTGENERATE: Column value is generated on insertion (DBTYPE_GUID only). fCOLUMNMETA_INSERTUNIQUE: Column value on insertion must not duplicate any existing values.  fCOLUMNMETA_INSERTPARENT: Parent value will be used for this column value on insertion.  This functionality is only implemented by the administrative api. Edit rules: fCOLUMNMETA_NOTNULLABLE: NULL is not an acceptable value for this column.  Applicable to any type since all values are passed by pointer.  Always specified for fST_COLUMNSTATUS_PRIMARYKEY. fCOLUMNMETA_FIXEDLENGTH: The size of all values for this column are fixed.  This flag is set automatically for fixed-length types.  Invalid when an unlimited length is specified for the size. fCOLUMNMETA_HASNUMERICRANGE: Column values are limited to a specified contiguous range (DBTYPE_UI4 only). fCOLUMNMETA_HASLEGALCHARS: Only specified legal characters allowed (DBTYPE_WSTR only). fCOLUMNMETA_HASILLEGALCHARS: Specified characters not allowed (DBTYPE_WSTR only). MetaFlagsEx: Additional MetaFlags fCOLUMNMETA_HIDDEN: The column will be hidden by the administrative API (i.e. not exposed via WMI). DefaultValue: Pointer to the default value for the column on insertion.  Can be NULL.   Ignored and NULL when fST_COLUMNMETA_INSERTDEFAULT is not specified. FlagsMask: Mask of acceptable flags for an fST_COLUMNMETA_FLAG column.   The mask is derived from the flags in the TAGMETA table.  0 when this column meta flag is not specified. StartingNumber: Continuous range start for an fST_COLUMNMETA_HASNUMERICRANGE column.   0 and ignored when this column meta flag is not specified. EndingNumber: Continuous range end for an fST_COLUMNMETA_HASNUMERICRANGE column.   0 and ignored when this column meta flag is not specified. CharacterSet: The illegal or legal character set. Applicable for a fST_COLUMNMETA_HASLEGALCHARACTERS or fST_COLUMNMETA_HASILLEGALCHARACTERS column. // ================================================================== TAGMETA: Table DBTYPE_WSTR PRIMARYKEY | FOREIGNKEY ColumnIndex DBTYPE_UI4 PRIMARYKEY | FOREIGNKEY InternalName DBTYPE_WSTR PRIMARYKEY PublicName DBTYPE_WSTR Value DBTYPE_UI4 TAGMETA describes the supported enumerations or flags for a given enumeration or flag column. Table: The internal name of the table to which this tag belongs. ColumnIndex: The column index to which this tag belongs. InternalName:  The internal name of the tag.  Internal tag constants are built using this name. PublicName:  The public name of the tag.  Used by the administration api and public media. Value:  The value of the tag. // ================================================================== RELATIONMETA: PrimaryTable DBTYPE_WSTR PRIMARYKEY | FOREIGNKEY PrimaryColumns DBTYPE_BYTES ForeignTable DBTYPE_WSTR PRIMARYKEY | FOREIGNKEY ForeignColumns DBTYPE_BYTES MetaFlags DBTYPE_UI4 RELATIONMETA describes the relationships between tables. PrimaryTable: The internal name of the primary table in this relation. PrimaryColumns: The primary columns for this relation. ForeignTable: The internal name of the foreign table in this relation. ForeignColumns: The foreign columns matching the primary columns in this relation. MetaFlags: The meta flags for this relation.   When a flag represents a boolean choice, the flag specifies the less common choice, and the absence of the flag specifies the common choice. fRELATIONMETA_CASCADEDELETE: Cascade delete children as part of parent deletion. fRELATIONMETA_PRIMARYREQUIRED: Parent specified by child must exist on insertion. fRELATIONMETA_HIDDEN: The relation will not be exposed via the administrative API (i.e. Hidden for WMI) // ================================================================== QUERYMETA: Table  DBTYPE_WSTR PRIMARYKEY | FOREIGNKEY InternalName DBTYPE_WSTR PRIMARYKEY PublicName DBTYPE_WSTR Order DBTYPE_UI4 CellName DBTYPE_UI4 Operator DBTYPE_UI4 MetaFlags DBTYPE_UI4 QUERYMETA describes the supported queries for a given table.  This meta describes cell-based queries. Table: The internal name of the table to which this query applies. InternalName:  The internal name of the query.  Internal tag constants are built using this name. PublicName:  The public name of the query.  Used by the administration api and public media. Order: The order of the cell. CellName: The cell name.  Typically the internal column name. Operator: The cell operator. MetaFlags: The meta flags for this query:   fQUERYMETA_ALL: Indicates the table supports requests for all rows (i.e. select *). fQUERYMETA_ANY: Indicates the table supports any cell-based query. // ================================================================== INDEXMETA: Table DBTYPE_WSTR PRIMARYKEY | FOREIGNKEY InternalName DBTYPE_WSTR PRIMARYKEY PublicName DBTYPE_WSTR Column DBTYPE_UI4 PRIMARYKEY | FOREIGNKEY MetaFlags DBTYPE_UI4 INDEXMETA describes the indexes on a given table. Table: The internal name of the table to which this index applies. InternalName:  The internal name of the index.  Internal tag constants are built using this name. The table dispenser recognizes indexes by their internal names. PublicName:  The public name of the index.  Used by the administration api and public media. Column:  The internal column name of a column contributing to this index. MetaFlags: The meta flags for this index.   When a flag represents a boolean choice, the flag specifies the less common choice, and the absence of the flag specifies the common choice. fINDEXMETA_UNIQUE: The combined column values in the index are unique. fINDEXMETA_SORTED: A sorted as opposed to hashed index. fINDEXMETA_INSENSITIVE A case insensitive as opposed to case sensitive index. Here is the self-description of the meta database itself and the relationships among its tables: // ================================================================== DATABASEMETA: InternalName: METADATABASE PublicName: MetaDatabase BaseVersion: ExtendedVersion: CountOfTables: RELATIONMETA: PrimaryTable PrimaryColumns ForeignTable ForeignColumns MetaFlags DATABASEMETA InternalName TABLEMETA Database PRIMARYREQUIRED TABLEMETA InternalName COLUMNMETA Table PRIMARYREQUIRED TABLEMETA InternalName QUERYMETA Table PRIMARYREQUIRED TABLEMETA InternalName INDEXMETA Table PRIMARYREQUIRED COLUMNMETA Table, Index TAGMETA Table, ColumnIndex PRIMARYREQUIRED Reference: The Meta Source  (a.k.a. How To Describe And Compile Your Schema) Assuming you read the pre-requisite section  Reference: The Meta Database , you are probably hoping that you need not specify all of that meta each time you need a new table or a new column on an existing table.  Fear not, for reasonable defaults exist for most meta.  New meta is expressed via an XML-based source format.  This source format is very tolerant, allowing expression of your meta requirements as minimally as possible.  Astute readers probably also noted that several dependencies and redundancies exist across the meta database.  A meta compiler generates the meta database from the XML-based source format.  The compiler takes care synchronizing those dependencies and redundancies. The meta source begins with the following header: <?xml version=1.0?> <MetaData xmlns= x-schema:catmeta.xms where catmeta.xms is the XML schema for the meta source. Recall that databases contain tables, tables contain columns, and enum and flag columns contain tags.  Tables also contain queries and indexes.  Relations span tables.  The containment hierarchy for the meta source is: <DatabaseMeta  <TableMeta  <ColumnMeta  <TagMeta  </ColumnMeta> <QueryMeta  <IndexMeta  </TableMeta> </DatabaseMeta> <RelationMeta  The minimal containment necessary to describe a new table is that the table must belong to a database and the columns in the table must be specified.  The meta compiler minimally requires the internal names of the database, table, and columns, the types of the columns, and at least one column denoted as a primary key.  Reasonable defaults for all other meta can be derived from this information.  For example: <DatabaseMeta InternalName= URTConfig <TableMeta InternalName= Applications <ColumnMeta InternalName= Type= DBTYPE_WSTR  MetaFlags= PRIMARYKEY <ColumnMeta InternalName= Description Type= DBTYPE_WSTR <ColumnMeta InternalName= Type= DBTYPE_UI4 </TableMeta> </DatabaseMeta> The attributes supported on each type of meta are outlined below.  See the  Reference: The Meta Database  section for descriptions.  Some attributes and flags are never specified since the meta compiler can always correctly derive them.  Those attributes and flags appear in comments. <DatabaseMeta  InternalName string PublicName string BaseVersion ExtendedVersion <!--CountOfTables derived from TableMeta --> <TableMeta  InternalName string PublicName string PublicRowName string BaseVersion ExtendedVersion MetaFlags INTERNAL NOLISTENING RELATIONINTEGRITY ROWINTEGRITY      NOPUBLICINSERT NOPUBLICUPDATE NOPUBLICDELETE SchemaGeneratorFlags XMLSCHEMA CLBSCHEMA <!-- Database  derived from containing element --> <!-- NameColumn derived from ColumnMeta --> <!-- NavColumn derived from ColumnMeta --> <!--CountOfColumns  derived from ColumnMeta --> <!--HASUNKNOWNSIZES and HASDIRECTIVES derived from ColumnMeta --> <ColumnMeta  InternalName string PublicName string UI4 GUID WSTR BYTES DBTIMESTAMP MetaFlags PRIMARYKEY FOREIGNKEY NAMECOLUMN NAVCOLUMN DIRECTIVE      BOOL FLAG ENUM      WRITENEVER WRITEONCHANGE WRITEONINSERT      NOTPUBLIC NOTDOCD      PUBLICREADONLY PUBLICWRITEONLY      INSERTDEFAULT INSERTGENERATE INSERTUNIQUE INSERTPARENT      NOTNULLABLE FIXEDLENGTH HASNUMERICRANGE      HASLEGALCHARS HASILLEGALCHARS DefaultValue StartingNumber EndingNumber CharacterSet string <!-- Table derived from containing element --> <!-- Index derived from position --> <!-- FlagMask derived from TagMeta --> <TagMeta  InternalName string PublicName string Value 0...n <!-- Table derived from containing element --> <!-- Index derived from containing element --> <QueryMeta  InternalName string PublicName string CellName string Operator EQUAL NOTEQUAL MetaFlags ALL ANY <!-- Table derived from containing element --> <!-- Order derived from position --> <IndexMeta  InternalName string PublicName string Column string MetaFlags NONUNIQUE SORTED INSENSITIVE <!-- Table derived from containing element --> <RelationMeta  PrimaryTable string PrimaryColumns 0..n 0..n  ForeignTable string ForeignColumns 0..n 0..n  MetaFlags CASCASEDELETE PRIMARYREQUIRED catutil.exe can validate the meta source.  Supported validation usages include: CATUTIL catmeta.xml CATUTIL /VALIDATE catmeta.xml The former verifies catmeta.xml is well formed XML.  The latter validates catmeta.xml against an available DTD or XML schema.  Both the verification and validation work with any XML file. catutil.exe also compiles the meta source.  The typical meta compilation usage is: CATUTIL /COMPILE /meta=catmeta.xml /wire=catwire.xml /header=catmeta.h /schema=catalog.xms /dll=catalog.dll /COMPILE:  Indicates this is a compile. /meta:  The meta source XML. /wire:  The wiring source XML (see  Part III: Stores And Logic /header:  The name for the generated header file. /schema:  The name for the generated XML schema file. /dll:  The name of the catalog dll into which the meta and wiring databases will be compiled. If the files catmeta.xml, catwire.xml, and catalog.dll are present in the same directory as catutil.exe, and catmeta.h and catalog.xms are acceptable filenames, the compilation syntax may be shortened to: CATUTIL /COMPILE The generated header creates C constant names for all databases, tables, columns, tags and other meta processed.  Constant names are generated as follows: Database constant names are generated by concatenating  wszDATABASE_  with the database internal name.  Table constant names are generated by concatenating  wszTABLE_  with the table internal name. Column constant names are generated by concatenating  , the internal name of the table in which the column exists,  , and the column internal name. Column value flag constant names are generated by concatenating  , the column internal name,  , and the tag internal name of the flag.  Column value enum constant names are generated by concatenating  , the column internal name,  , and the tag internal name of the enumeration. Part III: Stores And Logic The Wiring Process  (a.k.a. !!!) Easily Plugging in Stores  (a.k.a. !!!) Easily Plugging in Logic  (a.k.a. !!!) Virtual Tables  (a.k.a. !!!) Plug-ins, Implementation Dispensers, and Table Implementations (a.k.a. This is What Makes Simple Tables So Cool) Interceptors Defining a new interceptor To create a new interceptor, follow the following steps: Edit src\catinproc\catmeta_core.xml and find the collection SERVERWIRINGMETA Add a new enum value to the interceptor property, i.e. <Enum InternalName= MyDummyInterceptor  Value= Go to your meta-file (i.e. URTMeta.xml), find the table you want to use the new interceptor, and add the following line: <ServerWiring Interceptor= MyDummyInterceptor  DLLName= MyDLL Implement the new interceptor in MyDLL.dll. Rebuild the catalog The above assumes that the interceptor lives in its own DLL. In case the interceptor lives in catalog.dll, we have to do the following after step 4: In catinproc.cpp, find DllGetSimpleObjectByID and add a new case statement for the new interceptor. Implement the GetMyDummyInterceptro function in catinproc.cpp Rebuild the catalog. How does ServerWiring work It is possible to define multiple interceptors for a single table. To find out which interceptors are invoked for a table, we have to distinguish between two different interceptor types: Store interceptors Store interceptors abstract a configuration store (i.e. abstract where the data is stored). A store interceptor is identified by metaflag  First  in the SERVERWIRING element. Logic interceptors Logic interceptors to additional validation of data after it is read from the configuration store and before it is written to the configuration store.. A logic interceptor is identified by metaflag   in the SERVERWIRING element To figure out which store interceptor to use the following logic is used: Find the first store interceptor, and call Intercept on it. If this call succeeds, use this interceptor, and ignore all other interceptors. If this call fails with E_OMITDISPENSER, we try the next store interceptor. If no other interceptor is found an error is returned After we have found a valid store interceptor, all logic interceptors are added in the order they are defined. Each logic interceptor will be called in succession during PopulateCache and OnUpdateStore. For instance, suppose I have the following serverwiring for a table: <SERVERWIRING Interceptor= MergeInterceptor  MetaFlags= First <SERVERWIRING Interceptor= XMLInterceptor  MetaFlags= First <SERVERWIRING ReadPlugin= ReadPlugin1  MetaFlags= <SERVERWIRING ReadPlugin= ReadPlugin2  MetaFlags= The order in which things are tried is: Try the merge interceptor. If that succeeds use that as store interceptor. If that fails with E_OMITDISPENSER, try the next dispensor. Any other error code is a hard error. Try the XML interceptor. If that succeeds use that as store interceptor. Add Readplugin1 Add Readplugin2 As you can see, the readplugins are always added, i.e. they are independent of the underlying configuration store (store interceptor). Read/Write Plug-ins When you want additional validation of data beyond that what is available via the underlying interceptors, Plug-ins can be used to verify that data read or data written is valid according to certain constraints. For instance, suppose that I want to validate that a certain string is a social security number, and the format of the string should be XXX-XX-XXXX. The catalog itself does not have support for this, however a plugin can be used to verify that the string is of that particular format. Currently, two  types of plugins are supported: Read-plugins These plugins verify that data that is read is valid. For instance, when the XML Interceptor is used, a read plugin validates that the data that is specified in the XML is valid according to the constraint defined by the plugin. Read-plugins are called during PopulateCache after the interceptor has populated the cache, and the plugin is called for each row in the fastcache. When the validation fails for an individual row, PopulateCache fails, and the client gets an error. Write plugins These plugins verify that data is valid before it is written to a configuration store. For instance, when the XML Interceptor is used, the write plugin validates that the data is in the correct format (according to the constraints defined by the plugin), and only writes the information to the XML file when it is in the correct format. Write plugins are called during UpdateStore for each row in the write cache, just before the data is returned from the fastcache to an XML Interceptor (i.e. before an interceptor has a change to write the data to disk). When one of the rows in invalid, an error is returned and none of the data is written to disk. How to create Read/Write Plugins To create plugins, the following steps need to be followed: Edit src/inc/catmeta_core.xml, and find the SERVERWIRINGMETA collection Add a new enum value to either the ReadPlugin or WritePlugin property (or both in case you want a plugin to be executed for both reading and writing). Note that you cannot use the same enum name for a read and write plugin, because catutil will fail if this is the case. Add a new serverwiring element to your schema that has a ReadPlugin (or WritePlugin) attribute. If you have a serverwiring element with just ReadPlugin/WritePlugin, but no interceptor, you want to set the MetaFlags attribute to   to indicate that this ServerWiring element indicates a logical interceptor. Create a class that implements the ISimplePlugin interface. Add code to catinproc.cpp that creates this new class in case the class lives in catalog.dll, or create a new DLL that implements this class. In case of a new dll, you also have to implement the GetObjectByID function. Rebuild the catalog ISimplePlugin Interface interface ISimplePlugin : IUnknown HRESULT OnInsert([in] ISimpleTableDispenser2* i_pDisp2, [in] LPCWSTR i_wszDatabase, [in] LPCWSTR i_wszTable,   [in] DWORD i_fLOS, [in] ULONG iRow, [in] ISimpleTableWrite2* i_pISTW2); HRESULT OnUpdate([in] ISimpleTableDispenser2* i_pDisp2, [in] LPCWSTR i_wszDatabase, [in] LPCWSTR i_wszTable,      [in] DWORD i_fLOS, [in] ULONG iRow, [in] ISimpleTableWrite2* i_pISTW2); HRESULT OnDelete([in] ISimpleTableDispenser2* i_pDisp2, [in] LPCWSTR i_wszDatabase, [in] LPCWSTR i_wszTable,     [in] DWORD i_fLOS, [in] ULONG iRow, [in] ISimpleTableWrite2* i_pISTW2); When a row is added to the write cached for insert, OnInsert is called, when a row is added to the write cache for update, OnUpdate is called, and OnDelete is called when a row is added to the write cache and should be deleted. OnInsert is the only method called for a read-plugin. When implementing a plugin, keep in mind that you are always working on rows in the write cache, even during read. This is because the plugin is invoked before the fastcache copies the rows from the write cache to the read cache. <todo/>Note the set of interfaces all table objects must implement and then note plug-in support <todo>Document LogDetailedErrors on the table dispenser</todo> <todo>Doc reserved cells and hint behavior (not required for PK or single column queries)</todo> Need to doc valid call sequences (done for reading and writing usage above) t forget to doc the internal implementation interfaces! Dealing with query cells: ignore what you don t recognize. Semantics: For read-only requests, must provide an ISimpleTableRead2 interface and reject QueryInterfaces on ISimpleTableWrite2. For unpopulated tables, must work the same as 0 results from query. Dispenser guarantees populatecache will be called before supplying to caller.  Subsequent calls must populate when fST_LOS_UNPOPULATED was specified. By default, when calling CompleteAddRow, column values which did not have a default should result in detailed errors Do not UpdateStore when logic table detailed errors are found.  DT should support atomic units of work, but not required. Ease of writing a new data table: 3 methods. Error handling policy: continue to fail after first error or continue processing for maximum error feedback? Note the impact of side-by-side support on table implementations. Obviously some of the errors returned by the table dispenser come from the implementation dispenser: doc em! PLUGINS: These require either plumbing the interfaces into data/logic tables or a default logic table which plumbs them. Why not do the same thing for data tables?  I.e.: PROPOSAL #2: ISimplePluginForUpdateStoreLogic:: OnRowInsert (i_pISTWrite, iRow) OnRowUpdate (i_pISTWrite, iRow) OnRowDelete (i_pISTWrite, iRow) ISimplePluginForStorage:: OnInitialize (did, tid, qd, qm, qf, los, o_pfUseMe) OnPopulateCache (i_pISTWrite) OnUpdateStore (i_pISTWrite) Note the few caches, many data tables concept, and detail the template. HRESULT policy: must comply to spec. Doc all HRESULTs here Call sequence policy: must comply to spec. The Wiring Configuration, Cookdown, and Database (a.k.a. !!!) Simplify existing wiring database if possible Basic wiring should include the data table and at most one or two logic tables. We should drop the extended wiring since this can instead be supported in the implementation dispenser. Implementation dispensers should probably have a combined interface instead of one for logic and one for data tables. The notion of client tables should be probably be removed from the basic wiring.  However, client-side logic tables still need faulted in on a per-table basis.   Client data tables should be faulted in based on particular query cells being present in the query or particular flags being present in the level-of-service request.  So the client table for the catalog server would be faulted in when the query included a computer name cell or when the configtime level-of-service was requested. Issue: when writes are restricted to within the administrative process, we deny the read-write level of service outside the administrative process except for the client table.  How does this get generically specified and implemented? Note the impact of side-by-side support on the wiring database. The advantage of specifying a data table default for a database id is that new tables can be added without updating the wiring. Need a table wiring flag which blocks tables being requested from the client Tables must specify whether writes can occur outside the admin process / whether config-time isolation need not go through the admin process did+tid: datastore handler; update handler; row change handler. Add support for lookup overrides based on query / LOS flags. Add LogDetailedErrors support. Advanced service requests: fST_LOS_CLIENTSIDE: Internally supplied by the table dispenser to inform the implementation dispenser that the request is being made on the client.  Not valid for callers to specify. fST_LOS_DISABLERELATIONALINTEGRITY: Don t cascade delete, don t require primary. fST_LOS_UPDATEREADCACHEONUPDATE???  For administrative api t forget to doc the internal implementation interfaces! Table Control Usage  (a.k.a. The Big Leagues of Table Implementations and Power Users!) <todo>Intro</todo> // ================================================================== ISimpleTableController:: HRESULT ShapeCache [in] DWORD i_fTable,  [in] ULONG i_cColumns,  [in] SimpleColumnMeta* i_acolmetas // <todo>Alter ShapeCache to use meta database</todo> HRESULT  PrePopulateCache ([in] DWORD i_fControl); HRESULT  PostPopulateCache HRESULT  DiscardPendingWrites HRESULT  GetMarshallingInterface  ([out] IID * o_piid, [out, iid_is(o_piid)] LPVOID * o_ppItf); HRESULT  BeginChangeWriteRow HRESULT  ChangeWriteRowAction (DWORD i_eAction); HRESULT  ChangeWriteColumnStatus (ULONG i_iColumn, DWORD i_fStatus); // works while adding too. HRESULT  AddDetailedError ([in] STErr* o_pSTErr); // Note how they get cleared <todo>Reference</todo> <todo/>GetMarshallingInterface must take the IID in and supply the ITF if supported (multi marshal support) <todo>Note that ISimpleTableController inherits from ISimpleTableAdvanced</todo> <todo>Add invalid call error codes</todo> <todo>Note E_NOTIMPL error codes since both advanced and controller mix read/write methods</todo> <todo>Need to add level-of-service requests for altering the cache, changing queries, etc</todo> <todo>Doc semantics of the write interface methods when using the advanced or controller interfaces</todo> <todo> PopulateCache re-executes the query specified when the table was obtained, emptying the current contents of the read cache before doing so. CloneCursor supplies an ISimpleTableRead2 interface pointer to a new cursor positioned at the same place as the cursor through which the request was made.  CloneCursor can be called even when the current read cursor is not currently on a row. </todo> Part IV: The Catalog Performance Requirements TableDispenser::GetTable GetTable (specifically for fixed table too) PopulateCache (specifically for fixed table too) GetColumnValues (specifically for fixed table too) GetColumnValues:  No level of service requires; 1000 iterations on same row, all supported types of determinable sizes, sizes not requested: Single column fetches:  Fast cache and complib cache data tables: No more than 400 cycles on average per call. Fixed cache data tables: No more than 100 cycles on average per call. Whole row fetches: Fast cache and complib cache data tables: No more than 100 cycles on average per call. Fixed cache data tables: No more than 60 cycles on average per call. GetColumnValue implementations when no level-of-service requests are made should, over the course of 1000 iterations, with a variety of types/meta whose sizes are caller determinable, take no more than 400 cycles on average (fixed data should take less than 100 cycles on average). We need to experiment with GetRowValues!!! Equivalent or better performance than in COM+ 1.0 for the following scenarios Need to evaluate performance of a per-process table dispenser. Need to evaluate performance of a single global map of files to ICR pointers. Working set requirements Here is a run-down of the perf of some of our data tables, populating and getting columns, when creating 5 new applications in COM+ 1.0: Method #calls avg cycles per call ================================== ======= ============== CLTOneToMulti::PopulateCache 785940 CSLTComs::PopulateCache 363194 CSimpleTable::PopulateCache 105653 CRegSDT::PopulateCache  58562 CSLTClust::PopulateCache      5  53063 CSimpleTable::PopulateCache  27368 CSDTFxd::PopulateCache    171 CSimpleTable::GetColumn   1772 CSLTComs::GetColumn    571 CSimpleTable::GetColumn    489 CSLTShapeless::GetColumn    396 CSDTFxd::GetColumn            111121     92 Remoting, Security, Transactions, and Notifications Note however that if the underlying datastore supports DTC coordinated transactions, and the work above is done within an encompassing transaction, all three UpdateStore calls will result in a single combined update in the datastore! Describe notification logic table and events... Side-by-Side Usage How several teams can pickup different drops Appendices Appendix A: Basic Database Vocabulary (a.k.a. People Solved These Problems over a Decade Ago?) For those unfamilar with database concepts, think of a database as a collection of tables, and a table as a two-dimensional grid of rows and columns where all rows in a given table have the same columns.  Note that rows may be inserted, deleted, or updated.  Column values may be changed.  In object-oriented terms, a table is a collection of objects, a row is an individual object, and columns are the properties on the object.  So I might have an applications table, where each row describes one application, and columns describe information like the name and description of the application, whether to run its components in the caller's process or in an isolated process, and so forth.  A schema describes the "shape" of a table, meaning the expected columns, their types, sizes, ordering, names, and so forth.  DTD, for example, is a "schema" for XML which describes the valid structure of an XML "document".   Database implementations come in 3 basic flavors: flat, hierarchical, and relational, each more powerful than the previous.  INI files are flat databases, the Windows registry is a hierarchical database, and the COM+ regdb and SQL Server are a relational databases.  Relationships express how the various tables in a database relate to one another.  In a hierarchical database, tables are actually stored using a fixed hierarchy of relationships: working outside that fixed hierarchy is difficult and complex.  In a relational database, tables are related to each other.  One-to-one relationships express the fact that one row in a table is related to one row in another table.  One-to-many relationships express that one row in a table is related to many rows in another table.  Many-to-many relationships mean one-to-many relationships exist both ways.  These relationships allow for many different relationship hierarchies and graphs.  A hierarchical view can easily be projected atop a relational database.   So I might have a table of applications, a table of components, and a table of interfaces.  Hierarchically I might say applications contain components which contain interfaces.  While other relationships exist outside this hierarchy, querying for them can be difficult if not impossible.  Relationally I might say there is a one-to-many relationship between applications and components, and a many-to-many relationship between components and interfaces.  So far I have just defined 3 tables and 2 relationships.  With that information I can easily dynamically create the abovementioned hierarchical relationship.  I can query for all applications, then for all components in an application, and then for all interfaces of a component.  But I can also query for all interfaces in an application, for all applications whose components use a particular interface, for all components period, and so forth. A primary key typically identifies rows in a particular table.  A primary key may consist of multiple columns, and is most typically unique.  When unique, each row in a table is uniquely identified by its primary key.  A foreign key is simply your primary key in someone else's table.  So a components table might use the clsids column as the primary key, and a classmethods table might use the clsid, iid, and method index columns as the primary key, where the clsid and iid are actually foreign keys from the components and interfaces tables respectively.  Referential integrity refers to maintaining consistency among related tables, typically by enforcing one or more rules.  For example, when a row is deleted in one table, and its primary key appears as foreign keys in other tables, you might want to automatically delete none, some, or all rows in those other tables.  So if I delete application A from my applications table, and the application id is a foreign key in my components table, and a one-to-many relationship exists between the applications and components table, that delete could automatically delete components X, Y, and Z from my components table, since they reside in application A. An index can be built on any column in a database, and is used to accelerate searches on that particular column.  Primary keys are great candidates for indexing, and might be automatically indexed.  So in my components table, the clsid is the primary key, and I want searches by clsid to be fast, so naturally I want to index that column.  However, my progid column is not part of the primary key, but because progid lookups are common, I also want to index that column.  Indexes increase disk footprint, can increase working set, and can slow writes.  The progid and clsid sections of the registry are a great example of grafting indexing atop a hierarchical store which does not support them.  This requires keeping the same information in two separate places, and exposing that duplication to users, and requiring them to handle its maintenance.  This approach stores the same information in multiple places, and results in non-normalized data.  A relational database supports this internally.  So from the user perspective, good relational databases appear to be normalized: that is, no data is stored in more than one place. Selected subsets of rows in a given table can be retrieved via queries.  Queries select rows based on a criteria which may include identity (eg: primary key values), relationships (eg: foreign key values), and other values (eg: other columns in the table).  Very powerful general-purpose databases like SQL Server allow arbitrarily complex queries.  These queries may involve joins: where rows from two or more tables are combined into a new temporary  table  satisfying the query.  Queries are expressed via a variety of formats, like ISAM keys and OLEDB query cells.  Entire languages exist for queries, SQL being the most well known. Databases remain consistent via transactions.  A transaction enforces ACID semantics: atomicity, consistency, isolation, and durability.  Transactions are used to arbitrarily combine multiple changes into a single operation.  Atomicity means either all changes within the transaction occur or do not occur; some changes never occur.  This incredibly powerful semantic enables programmers to make rich transformations without ever worrying about the failure of each transformation.  Consistency means the database state is always transformed from one consistent state to another; when consistency is violated, the enforcement code simply aborts the transaction.  Isolation means that transactions executing in parallel appear after the fact to have occured serially.  Isolation is a complicated topic.  Isolation levels describe the degree to which one transaction sees its own and others' changes.  Deadlocks can result from concurrent transactions and are influenced by the isolation level, so deadlock resolution strategies are necessary.  Remote batch updates lead to further isolation difficulties.  Optimistic concurrency is one approach helpful in resolving those difficulties.  Durability means that no matter what else happens, once a transaction is commited, the changes will be persisted.  This requirement must be met even in the face of any machine or network crashes which occur after the transaction commits.  Transactions require databases to implement logging, and those logging facilities must be extremely robust to achieve durability.  Businesses learned long ago to always use transactions to transform the data on which the business depends. Distributed transactions enable databases on multiple machines and/or multiple different databases to participate in the transaction.  Databases are also referred to as resource managers, because they are responsible for durable resources.  Such transaction coordination requires a transaction manager.  Microsoft DTC (Distributed Transaction Coordinator) is an excellent example of a transaction manager.  A transaction manager must also log reliably.  Just about every major line-of-business database in the world can now participate in DTC coordinated transactions. Client-server architectures, which distribute work among personal "client" computers and shared "server" computers, come in 2 basic flavors: 2-tier and 3-tier.  A 2-tier architecture consists of a presentation tier talking to a data tier.  OLEDB is a great example of a 2-tier architecture.  A 3-tier architecture consists of a presentation tier talking to a middle aka business tier talking to a data tier.  CORBA is a good example of a component model specification which failed to specify a 3-tier architecture.  WinDNA is a good example of a vision based on the 3-tier architecture.  Line-of-business software refers to software on which the business itself depends, as opposed to personal productivity software, on which individuals depend.  Office is a good example of personal productivity software.  Years ago, the line-of-business software community realized that the 3-tier architecture was a great way of scaling to support huge numbers of clients. Appendix B: Design Considerations (a.k.a. Wow!  You Thought of All That?<g>) Getting multiple column values in one call: We are evaluating whether or not to replace or supplement the GetColumn call with a method which gets all column values at once...   Methods which currently work on a per-column basis include: ISimpleTableRead::GetColumn, ISimpleTableRead::GetColumnMeta, ISimpleTableWrite::GetWriteColumn, ISimpleTableWrite::SetWriteColumn, ISimpleTableControl::ChangeWriteColumn status.  All methods which work with columns currently do so on a per-column basis.  A multi-column behavior change would either require breaking this commonality or converting all column methods from per-column to multi-column.   The primary assumed benefit of of multi-column methods is performance improvement.  Is this assumption accurate?  First, recall that getting column values in Simple Tables involves pointing the caller to the actual data, not copying the data itself.  Basically, when getting n column values, this would eliminate n-1 in-process double-indirected function calls, which basically boils down to parameter pushes and a call and return, since the function pointer tends to end up in a register.  Also note that the function call will typically be in the CPU cache.  n-1 iterations of parameter checking would also be eliminated.  Making use of such a method does require allocating n pointers, where n should be determined based on meta information.  This actually adds a heap allocation in many cases where we currently just re-use a single pointer on the stack, and in those cases the heap allocation could very well result in worst performance than the n per-column gets without a heap allocation.  In order to see any gain, the multi-column method would need to be designed such that it did not itself require an allocation, and callers would need to write their code so that their array of pointer allocations were per table or per process as opposed to per row. The majority of code in the COM+ 1.0 product actually gets and sets only a few of the column values per row.  Converting from a per-column to all-column approach would likely degrade performance in those scenarios.  Speaking to developers who have used simple tables a lot, the general consensus was that they liked the per-column approach for their usages, and viewed an all-column approach as complicating their code.  So we would need to support getting a subset of column values or single column value too. More performance considerations.  I investigated an icecap report in a writing scenario.  Several GetColumn implementations were profiled.  5 of 7 implementations ranged from 300 to 600 cycles per call, so gains would have to be pulled from that range of cycles.  The other 2 implementations averaged 92 and 1772 cycles respectively.  Better gains might be achieved simply by optimizing the implementations.  These proportionally low cycle counts are offset by the potential number of calls.  Note that the count of columns for any table will not be huge: O(100) is a safe bet.  The largest count in COM+ 1.0 is just under 40.  However, the number of rows can be huge.  This scaling however is offset by that fact that scenarios where we query for the total set of rows and then get all column values are a bit artificial, seldomly occuring in the rather large code base for COM+ 1.0.  The typical queries and operations tend to scope the count of rows to small numbers. Note that because the disk is involved in write scenarios, not to mention OOP or even network calls, performance gains in getting and setting column values in read and write caches have a negligible effect on overall performance.  Also note that catalog code has never shown up in the top performance bottlenecks in runtime scenarios for the COM+ 1.0 product.  Since the main reason for the proposed change is an assumed performance gain, and since COM+ 1.0 performance tests have not shown the current design to be a bottleneck, one approach to this issue would be to not change or replace the current design until we measure a real performance scenario in which the current per-column approach shows up as a bottleneck. There are costs to converting to a multi-column approach.  As mentioned, given that all column methods are currently per-column, we would either need to update all of them or live with the introduced inconsistency.  Also, since we still need to support per-column and multi-column as opposed to just all-column usages, we would be complicating the model by introducing more than one way to accomplish the same thing.  Note that any approach other than supplying an array of pointers would make calling code very brittle to schema extensions.  While we can argue that is acceptable because our schema freezes when we ship, the COM+ 1.0 experience has shown that dealing with schema changes where the such brittleness exists is very costly, and that schema evolves rapidly, and that schema changes after beta releases. For now, we have decided to retain the per-column approach to all interactions with columns in Simple Tables (4/6/99). P.S.: Here are some perf results from COM+ 1.0 for getting column values in the scenario of creating 5 new applications with one component each: Data table #calls avg cycles per call ================================== ======= ============== (read only regdb) CSimpleTable::GetColumn (fast cache regdb) CSimpleTable::GetColumn (fast cache) CSLTShapeless::GetColumn (fixed) CSDTFxd::GetColumn 111121 The fixed data table obviously screams.  Interestingly though, the read-only regdb (which implements its own cache) is 4.5 times slower than the fast-cache implementation employed by most of the other data tables.  The read-write regdb sits atop the fast-cache and is only about 0.25 times slower.  The read-only regdb implementation takes locks and (at least sometimes) allocates and copies.  This clearly evidences the expense of doing doing so (5/20/99). I have re-opened this issue.  I have asked Wenjunq to investigate the poor performance in the abovementioned scenario of the read-only regdb data table.  I have also dug deeper into the icecap and noticed that with the fast-cache implementation, about 33% of the time appears to be consumed in the virtual GetColumn method on the simple table which wraps the non-virtual InternalGetColumn method of the fast cache.  This indicates that the fast cache (and the fixed cache) are sufficiently fast that the call cost may come into play as significant.  I have asked Varshaj to implement and performance test a GetRowValues method on the fixed and fast caches (5/25/99). <todo>The exciting results Enabling the getting and setting of multiple row </todo> Query format issues: Are query cells still sufficient?  Are other operators besides equality and inequality necessary?  Can we drop the type and size specifier for query cells passed to the table dispenser?  Should we go with copy/no copy this time? Given an array of query cells, more than one cell containing the same cell identifier implies an OR expression among those cells, and cells with different cell identifiers implies an AND expression among those cells.  Therefore, query cells only support OR ing expressions applied to the same column and AND ing expressions applied across columns.  One additional field in the cell structure would be required to increase flexibility: namely a connector indicating whether to AND or OR two adjacent cells.  This however does not buy much, queries involving that level of complexity also typically require parenthetical expressions too.  A query language would be more appropriate in those scenarios. Query cells have some big advantages over a query language: Because they are significantly simpler, they are significantly easier to implement.  Therefore they make a great least-common-denominator query format across all table implementations. An array of query cells is already parsed, eliminating the need for and overhead of a parser.  Queries executed at runtime as part of the execution environment are typically simple and must be extremely fast. Query cells are powerful enough in most cases.  COM+ 1.0 demonstrated this.  Raid usage on the COM+ team also demonstrates that most raid queries are expressible as query cells (and those that are not are well expressed with SQL). For now, we will continue to use query cells as the least-common-denominator query format for simple tables.  This of course does not preclude supporting query languages in selected scenarios or across the board in the future (5/11/99). For now we will continue to support the equality and non-equality operators.  Additional operators can be supported as actual demands arise.  We will continue to require that the caller specify the column/cell type in their query cells.  This simplifies and speeds up the table dispenser because the dispenser need not determine types via meta lookup (which can require roundtrips to the server on clients).  The type must be known to marshal the query.  The size however can easily be determined either the type is a fixed-length type or for strings where wcslen can be used.  In these cases the size need not be specified.  For DBTYPE_BYTES, the size is required even when the meta specifies a fixed length, because the dispenser would need to perform a meta lookup to determine that.  After discussion with development team today (people who used simple tables extensively for COM+ 1.0), we decided that the query will be copied within the table dispenser s GetTable call.  Conceptually the dispenser makes the copy, but really it is the underlying data table.  This allows developers the convenience of updating and re-using their query cell array between GetTable calls and eliminates the confusion with the old lifetime issues (ie: the caller had to keep their query unchanged until releasing the table) (5/11/99). Is MoveToRowByIdentity necessary?  Is it sufficient? MoveToRowByIdentity, while less common than positional row navigation, is used quite a bit in COM+ 1.0.  MoveToRowByIdentity seeks through the read cache for a single row by its unique primary key identity.  Single rows however are more commonly (and efficiently in most cases) sought by specifying their identity in the query.  MoveToRowByIdentity could be expanded to seek for a row by arbitrary criteria instead of just by primary key.  The semantics of this are much more complicated, and so is the implementation.  Basically, you would end up supporting querying within the cache.  And if you are going to do that, you might as well do it right: i.e.: implement filters and views.  We have considered filtering, viewing, and sorting in the past.  They were deemed too complicated for COM+ 1.0 and were not sorely missed.  These advanced usages can be done above the cache anyway.  If we ever do support these, they will require a new interface, as opposed to just some changes to one method (ie: MoveToRowByIdentity), so for now the plan is to just keep the existing call as is (5/12/99). Should we strongly differentiate inserts vs updates and enforce the implications? AddRowForInsert and AddRowForUpdate are inconsistenly named with AddRowForDelete.  The latter actually adds a row marked for deletion to the write cache, whereas the former begins adding the row for insert or update to the write cache, but does not complete it until SetRow is called.  Also, we have seen the need to abort a row change as opposed to complete it.  Currently the change must completed and then marked to be ignored via the simpl table control interface.  However, validation logic on SetRow may fail by calling it prematurely, where such failure is not desired. The only difference between the two methods is that AddRowForInsert does not copy the row from the read cursor, and marks the row for insertion instead of update.  Even though AddRowForUpdate copies the row from the read cursor, it does not necessarily imply an update to that row: all the caller needs to do is change the primary key columns.  Perhaps we should restrict the case of updating rows to disallow primary key changes? Perhaps we should allow the case of inserting to do so from a copy of the row from the read cursor, as opposed to just restricting it to a totally new row?  This gets into the issue of applying defaults.  In COM+ 1.0, the admin api had default values as part of its meta.  Since we are adding defaults to the schema, those defaults will be automatically supplied to new rows for insertion.  However, IIS5 has a different model for URL properties: when you add a new URL, you inherit all the properties set on the ancestors.  The COM+ 1.0 model can be described as: when inserting a row, apply the defaults from the schema.  The IIS5 model can be generalized to: when inserting a row, apply the defaults from some data.  The difference between the two models is that in the first, defaults come from the schema, whereas in the other, defaults come from some data. So we need to decide whether we want to support picking up defaults from the schema only, or also from   data.  We already know we ll support defaults in schema.  A simple way to support defaults from some data would be to express an operation which creates a new row for insertion from the read cursor row.  This row can be chosen by arbitrary querying.  This supports both the IIS5 URL property approach of obtaining defaults from an inheritance chain, as well as an approach where a user specifies their own prefered defaults. After a bit of discussion, the above issues have filtered down to: Do we semantically differentiate inserts from updates? In version 1, we initially did not do that, since we allowed inserting rows which already existed and updating rows which did not.  This semantic was useful for internal logic.  An insert or update in one table could trigger further changes to other tables.  With this semantic it was un-necessary for the code triggering the further changes to first determine which operation was appropriate: insert or update.  More importantly though, it was simpler to implement because it did not require existence checking.  During the COM+ 1.0 development cycle, we realized we did need to distinguish between insert and update in many cases.  Thus, insert behavior when the row already exists and update behavior when it does not became a choice and therefore became part of the meta.  And because this enforce was done via an integrity logic table which worked across all tables, the issue of existence checking in many places became a non-issue.  The issue at hand is whether or not choice in this case is really necessary.  We know we cannot live with just the original behavior.  Can we live with just the newer behavior? Upon consulting with the various developers, it seems we can live with inserts and updates being semantically different.  This has some important implications.   First, inserting a row which already exists always fails and updating a row which does not exist always fails.  Second, when inserting a row, the primary key columns can and must be set (but the meta may specify a default setting via guid generation for example), and when updating a row, the primary key columns cannot be changed.  Note that power developers can work around these restrictions simply by using the controller interface to change the row action.  Third, the means for changing the identity (ie: altering primary key columns) of an existing row becomes clear.  Originally, one could mistakenly assume that this change would occur by doing a row update and altering the primary key (this would instead just add another row, although a logic table could intercept the request and remove the old row).  Now it becomes clear.  The caller must add the row for insert and alter the identity in the inserted row and must also add the row for deletion.  This leads to the fourth implication: callers must be able to add a new row for inserting, or add an existing row for inserting (where they alter its identity) to pickup all the existing properties.  While this could be accomplished with a choice parameter on AddRowForInsert, it can just as easily be accomplished without altering the existing interfaces by moving to the appropriate read row, adding a row for insert, and transfering the read row properties via manually via GetColumnValue/SetWriteColumnValue. There are some problems with enforcing insert and update semantics always.  Perf, who does it, and legacy.  The perf concern is that enforcing this behavior obviously costs more: the question is how much.  The concensus for now is that we can always special case internally and only if it evidences itself as a common bottleneck do we need to add the option to the meta.  The  who does it  concern is that the enforcer can either be the datastore, data table/logic table, or integrity table.  Basically in the meta we need to express whether the integrity table is expected to enforce it.  Obviously the cheapest means of enforcement is in the datastore itself.  The legacy concern is what code do we break which already requires the old semantic?  It looks like the old semantic is required by component install, but this is simply because the joined class table schema did not originally adequately express the notion of classically-registered vs self-described and non-configured vs configured; also, roles could originally be added if they already existed, but this was corrected later in the dev cycle. A more appropriate naming convention for the insert/update methods would therefore be:  BeginAddRowForInsert  BeginAddRowForUpdate CompleteAddRow AbortAddRow (5/18/99). Should we support bulk deletes and updates? We already support bulk reading by query.  The concept of bulk deletes and updates here means you specify a query, and indicate that all rows resulting from the query should either be deleted or updated.  The critical feature is that the query is not actually executed and the read cache is not actually populated in order to perform the bulk operation.  This is a performance optimization.  However, given that you can bulk query, and we can already marshal all the results in one trip, and that you can add all the rows for update or deletion entirely in process to the write cache, and that the pending changes are all marshalled in bulk back to the server in one trip, bulk deletes and updates is already fairly optimized.  Further gains by eliminate the initial population and marshaling are offset by signficant problems with insuring that logic still gets faulted in during these bulk operations. We extensively discussed a couple means of accomplishing this extra optimization and their implications.  The first means was to support methods for adding all rows for deletion or update to the write cache without actually requiring population of the read cache.  This approached ended in a dead-end because logic tables sitting atop the data table would not see the changes on UpdateStore if the call was initiated from the server.  Even when initiated from the client, a solid amount of marshalling trickery would be necessary to make it all work. The second means was having a query cell which indicated the resulting rows should be deleted.  This would be implemented by actually carrying out the update on the server during the GetTable call.  While this insured the write cache would properly reflect the changes (the write cache needs to have all the deletes or updates so that logic can process each individually as it normally does) whether the call was initiated on the client or server, significant marshalling issues were still present specifically when handling detailed errors.  Not only would detailed errors need marshalled back during the GetTable, since the errors could have been either with the population or resulting update, the read or write cache would also need marshalled back.  While we can see how to make these changes to the code, it is a lot of work, and there are no doubt further unforeseen implications. The need for such a bulk delete mechanism was obvious with MTS2, but this was because the cost of populating was far too high.  While both populating and updating performance has been vastly improved with the simple table implementation in COM+ 1.0, the admin api is still navigation based, meaning in order to perform certain bulk deletes, n populates and updates need performed to do so, resulting in plenty of roundtrips.  Simple tables supports much richer quering, and with the plan for the admin api to do the same, these cases disappear or become extremely rare.  Also, the population which occurs when doing huge amounts of changes on very large registrations has not been in the bottleneck list recently in the COM+ 1.0 implementation.  For all these reasons, supporting bulk deletes/updates without initial population has been postponed for now (5/19/99). Also getting and setting column values by name? While internal code gets and sets column values by index (significantly more efficient than by string), the admin api gets and sets by name.  The admin api in COM+ 1.0 has a fast map between name and index.  Those fast maps are filled in by the admin api s own hard-coded meta.  With simple tables v2, those maps can and must be built from the column meta dynamically.  We enterained the idea of supporting get/set column methods by name in the tables themselves.  This adds 3 new methods which every data and logic table must implement and means every table needs to load and retain strings.  This was deemed too much overhead since the map could be built from the meta database on the fly for the few consumers that actually require it (5/20/99). Ditch CompleteAddRow/AbortAddRow? Radu, Emily, and I, in discussing edit rules as part of the meta database today, slipped into a continuing discussion on the admin api using simple table caching directly rather than rolling more caching on top.  That discussion led to the following (simplifying) proposal: Ditch the model for inserting and updating rows where one BeginAddRowForUpdate/Insert is followed by n SetWriteColumnValues and conclude by one CompleteAddRow/AbortAddRow.  The new and simpler model is to do away with CompleteAddRow/AbortAddRow altogether.  The add-row methods become: AddRowForDelete, AddRowForUpdate, and AddRowForInsert.  Each of these methods positions the write row cursor on a new row in the write cache.  SetWriteColumnValues can be called at any time while the cursor remains on the row. What does this buy us?  Two big advantages: This allows the administrative api to support its current model where a caller can roam the collection and change any of the objects in any order (including partially changing one, changing another, and completing the first) up until saving their changes. This also eliminates the need for internal callers to retain buffers for all their value changes until calling Complete/AbortAddRow.  This need to retain those buffers has bit just about every first time user of simple tables. What do we lose?  The original two reasons for supporting CompleteAddRow were: A performance optimization to minimize allocations and copies.  The intention was to allow implementations to do a single allocation per row rather than per column.  Our fast cache implementation, the primary cache used for writing, actually does much better than this.  It maintains two buffers, one for fixed data and one for variable data, and each time it needs to grow a buffer it doubles its size.  The net effect is that the implementation is already doing significantly less allocations than one per row.  There is a cost of additional un-necessary copying, which also adds dead data to the variable buffer, in a very limited scenario.  Namely, on an AddRowForUpdate, each variable length column value changed by the caller would be copied twice, once from the read cache, and once from the caller's data, whereas each was previously copied only once.  However, this extra cost can be eliminated by doing this fixup in the fast cache in PreUpdateStore. A place to inject validation logic.  Validating a row as a whole cannot be done on column sets, since the validation needs to occur once the caller is done.  The one standard validation which needs a home is validating that all non-nullable column values were set on an inserted row.  We still need to perform this validation, but will probably instead end-up doing it on UpdateStore.  This validation would need to occur on the client-side. The caller needs discard their pointers into the write cache when calling AddRowFor* or even SetWriteColumnValues, since any of those calls might require buffer re-allocation.  <todo>This needs formally defined as part of the write cache semantics.</todo> (6/8/99). Making proper use of COM? Radu, Wenjun, Murat and I discussed today why we use CoCreateInstance in the binding process.  Originally, the binding process was entirely CoCreateInstance-based.  In COM+ 1.0, since we had to run inside the SCM and since we had to service CoCreateInstance requests, we had to run in a mode where CoCreateInstance would not be used in the binding process (otherwise we would infinitely recurse).  The wiring database contains initial mapping information which the table dispenser uses to select an implementation dispenser which can choose the appropriate table implementation for the job.  Really what this means is that we have an idenity-to-implementation mapping database, just like the COM HKEY_CLASSES_ROOT registry, but  idenity  is a more granular, sophisticated, domain specific concept, as are the mappings.  What we did originally was store the CLSID for the implementation dispenser.  To support operation without COM CoCreateInstance, we also stored the module name, and then did what CoCreateInstance itself does: load the module and call DllGetClassObject with the CLSID to get the class factory for the implementation dispenser.  However, we also wanted to leverage COM+ transactions and role-based security.  To do so, we needed to also be able to CoCreateInstance everything to flow the transaction and security information, or so we thought. As it turns out, due to the in-process semantic and concurrency semantic fundamental to simple tables, we always run in the caller s context and therefore never  block  the flow of transaction and security information during the binding process, so CoCreateInstance is totally un-necessary during the binding process.  All we have to do to insure that context information flows is to use CoCreateInstance when we go out of context, which we already do.  Namely, when the client table, used by the admin api, wants to talk to the catalog server, it (naturally) CoCreateInstances it.  Thus context information flows across the context boundary.  What all this means is that we actually do not need to use COM CoCreateInstance at all for the binding process (since we have our own  registry , the wiring database, so therefore indirecting to another  registry  is artificial anyway). Since we don t need to use CoCreateInstance, what would not using it buy us?  Actually quite a bit. We would not need to implement DllRegisterServer/DllUnregisterServer. We could opt to use a different entry point than DllGetClassObject which would also allows to drop class factories from the binding process.  Class factories are pretty irritating because they just cost us without buying anything, since implementation dispensers are a special sort of class factory anyway.  We actually ended up implementing the class factory on the implementation dispenser itself to eliminate creating yet another object (well actually several when you consider common binding scenarios).  Instead, we could implement DllGetDispenser (REFGUID i_clsid, REFGUID i_iid, LPVOID* o_ppv). Thus we would not need to implement class factories. We would eliminate the overhead of CoCreateInstance, which is important, given that it is un-necessary, and given our performance requirements. Minor: we would always run in the caller s context.  You couldn t mistakenly run in another context by declaring the wrong threading model. Supporting side-by-side drops becomes a lot less complicated (because we would not need to register (n+1)*(count of implementation dispensers) in the registry). Bootstrapping is still necessary to obtain the table dispenser itself.  Callers link with a lib which implements the GetSimpleTableDispenser api.  This api needs to choose the right implementation for the product.  See the discussion regarding side-by-side support for how this works in detail (6/17/99). Providing side-by-side drops of simple tables: Should we do it and how? The catalog will be used in both the URT and AS.  We are already providing private drops to specific teams.  DLL hell comes from shared components and the catalog is a  shared  component.  Because simple tables have their own  registry  mechanism (the wiring database), side-by-side drops are certainly do-able.  Since the URT and AS will be installed on the same machines, and since both will evolve throughout the development cycle, and since both depend on the catalog, it makes sense to isolate them from incompatibilities between their catalog drops. Here is how we can do it (see the discussion on the proper use of COM first): Each product gets its own copy of the primary catalog dll, appropriately renamed for the product.  During product setup, this dll must be copied into a location on the path.  Setup must LoadLibrary the primary catalog dll, and call the exported function RegisterCatalogByProduct (HINSTANCE i_hinst, DWORD i_eProduct). RegisterCatalogByProduct, under a well-known key in the registry, it adds the product ID as a named value and its own base file name as the value. Simple table callers link to a static lib which implements GetSimpleTableDispenser.  When they call this api with their product ID, the code looks up the product ID in the registry, calls GetModuleHandle to see whether the dll is already loaded, and if not, calls LoadLibrary.  The exported function GetTableDispenser (HINSTANCE i_hinstance, LPVOID* o_ppv) is called to obtain the table dispenser, a singleton. The implementation dispenser supporting the wiring database is a well-known CLSID assumed to be accessible in the same dll as the dispenser.  GetImplementationDispenser (REFGUID i_clsid, REFGUID i_iid, LPVOID* o_ppv) to obtain the wiring database. Each product will need its own meta and wiring configuration file.  The modules specified will need to be those specific to the product.  The cookdown utility will simply need to know the name of the dll into which to embed the meta and wiring database from the specified configuration file. (6/18/99). Drop the multiple stateful cursors approach in favor of stateless  cursoring Radu and I were discussing how the table dispenser could be built as a singleton.  Unless we decided to obtain the meta tables on the stack, we would need to clone the cursor for each separate caller.  Radu suggested adding a non-cursor-based hack to the meta table implementation specifically.  I noted that if this was a problem for the table dispenser it was potentially a problem for any singleton using simple tables.  I then began investigating whether or not we discard the cursor oriented approach altogether.  After going through all the interfaces and the fast cache and fixed cache implementations (and checking with Wenjun regarding the CLB cache implementation), it looks like we can dramatically simplify the interfaces and cache implementations by eliminating the cursor-based approach.  The row navigation methods (which are by index) will be eliminated completely.  Row navigation by identity will simply return a row index.  Getting and setting column values will requiring specifying the row index as well.  Clone cursor will be dropped.  This will allow multiple threads into one read cache, for example, without requiring a cursor per thread.  Of course, since we hand out pointers into the cache directly, the caller will still need to manage locking everyone out should the cache need repopulated (6/21/99). Is a super lightweight version of the fast cache of value? The fast cache implementation is fast, but since it supports both read-only and read-write scenarios, as well as multi-cursor scenarios, it is fatter than need be for a runtime read-only fetch.  The question is: is it worth making a super-lightweight version of the fast cache with super-lightweight data table shell atop, optimized for read-only, populate-once fetches of one or a few rows?  Would this benefit runtime scenarios which currently cache again atop simple tables?  Could it alleviate some of the secondary caching? Should an instance of the table dispenser be created on each GetSimpleTableDispenser call or should it be created once per process or should it be created once per scope? Spoke with Wenjun and we agreed her need for scoping should be implemented inside the implementation dispenser for CLB rather than be exposed to either the table dispenser or callers. <TODO/> Optimistic concurrency: Will it really meet our needs? <TODO/> What about queries for matches in a table against another table where no direct primary-foreign key relationship exists? <TODO/> Do we support the configured component in many applications scenario with cascading deletes?  I.e.: Do we support reference counting and cleanup on shared resources?  Yes to both. <TODO/> Do we need a MoveToRowByIdentity on the write cache too? <TODO/> Need to investigate SQL-like query support in WMI scripting. How real is it?  How complicated is it to implement?  Is there a minimum baseline of support required of all providers and if so what is it? </TODO>  Appendix C: Changes From Simple Tables v1 (a.k.a. I m Already a Simple Table Guru, Just Tell Me What Changed In general All the clsids and iids have been rev ed, even for interfaces which did not change, to allow side-by-side operation with COM+ 1.0 in W2K.  Various minor name changes have occurred (eg: reserved cell indexes are now named iST_CELL_* instead of iST_COLUMN_*: the original did not make much sense, since reserved cells are not really columns in any table).  The name changes made were done for clarity moving forward.  Error codes have been improved and expanded as well and some common detailed errors have been specified.  See the discussion  Regarding constants and structures  for details. Regarding obtaining tables GetSimpleTableDispenser api now takes a product ID for side-by-side isolation of the simple table core.  CoCreateInstance of the table dispenser is no longer supported. The caller no longer requests a client vs server table via ISimpleTableDispenser::GetClientTable/GetServerTable.  All tables now obtained via one call: ISimpleTableDispenser2::GetTable.  Whether or not a client table is chosen now depends on whether the level-of-service specifies runtime work (the default) or configuration-time work (via fST_LOS_CONFIGWORK) and whether the query requires going off computer (eg: iST_CELL_COMPUTER or iST_CELL_CLUSTER is used in the query).  If configuration-time work is specified, the caller will always receive a client-side table and all populates and updates will pass through the administration process.  If the query requires going off computer, a client table will also be automatically supplied.  Otherwise, a server table will be provided. The level-of-service flags have been altered such that the most common usages are assumed by default (eg: to obtain a read-only table, you originally requested the fST_TABLE_READONLY level-of-service, whereas now a read-only table is the default, and to request a read-write table you specify fST_LOS_READWRITE).  Increasing the level-of-service also decreases the maximum potential performance, so no level-of-service requests naturally allows for the highest potential performance.  See the discussion  Regarding constants and structures  for details. Databases and tables are now identified by UNICODE strings rather than GUID types. The caller need not specify the size of the data in their query cells if the table dispenser can easily determine it.  The array of query cells passed to the table dispenser are now copied within the GetTable call, allowing the caller to either discard or alter their copy once the call returns.  Previously the caller had to retain their copy as-is until they released the table obtained from GetServer/ClientTable.  The query meta for query cells now takes the address of the count of cells rather than the count of cells directly.  The new query format with these changes is eST_QUERYFORMAT_CELLS. Regarding working with tables (reading) The table returned by GetTable is already populated unless the fST_TABLE_UNPOPULATED flag is specified. The cursor-based approach has been eliminated.  The row index of interest is now simply specified when obtaining column values.  This allowed elimination of ISimpleTableRead methods RestartRow, MoveToNextRow, MoveToRowByIndex, and CloneCursor.  MoveToRowByIdentity is replaced by GetRowIndexByIdentity which takes the row identity as before but now simply supplies the corresponding row index.  The cursor-less approach results in fewer methods, simpler and faster implementations, and less surface area for testing. ISimpleTableRead::GetColumn call has been replaced by GetColumnValues to support obtaining multiple column values at once.  Column values are still obtained via pointers, not copying.  Support includes obtaining one column value per call, a specific set of column values per call, a range of column values per call, or all column values in one call.  The count of column values of interest is always specified, along with an array of column indexes of interest (which can be NULL, which simply fetches column values for column s 0 to count of columns - 1).  An optional array of sizes is specified which will be filled in if specified.  An array of pointers must be supplied which will point to the column values requested.  For single column value requests, this is just a pointer to one pointer.  Otherwise, this is an array of pointers whose count must be highest column index requested + 1.  When a subset of column values is requested, only those pointers will be filled. PopulateCache is no longer necessary unless the caller wants to re-execute the query or delay query execution, and almost no callers do that.  This is therefore an advanced method and has been moved to the new ISimpleTableAdvanced interface. GetTableMeta no longer supplies the database/table identity, query, and service level.  These were never requested in the COM+ 1.0 source, the caller knows them anyway, and the actual query retained by the table and service level requested can both change during the binding process (to be correct, the call should supply exactly what the caller specified, and that would requiring keeping it around and flowing it all the way down).  Eliminating the need to provide the database and table identity allows lightweight implementations to not store them.  GetTableMeta now supplies table properties, similar to how GetColumnMeta supplies column properties (a.k.a. column meta flags) and the table version (actually the base version). Regarding working with tables (writing) As for reading, the cursor-based approach has been eliminated, allowing removal of RestartWriteRow and MoveToNextWriteRow.  GetWriteRowIndexByIdentity has been added to match the corresponding method available on the read cache.  To support the cursor-less approach, AddRowForInsert now supplies the write row index of the added row, AddRowForUpdate now takes a read row index and supplied the write row index of the copied row, and AddRowForDelete now takes a read row index. The SetRow method has been removed.  Thus, there is no longer an  adding  state for changing rows added for insertion or update.  Calling AddRowFor* simply adds a new row to the write cache.  Column values can be set on the row at any time.  All row-level validations previously done in SetRow must instead occur during UpdateStore. The semantic differences between inserting and updating a row has been strengthened and made formal.  For the insertion of row into the datastore to succeed, the row must not already be present (previously either behavior was supported on a case-by-case basis, with the opposite semantic being the default).  For the update of a row in the datastore to success, the row must be present (previously either behavior was supported on a case-by-case basis, with the opposite semantic being the default).  When adding a row into the write cache for insert, the primary key columns must be specified unless they are already defaulted by the meta.  When adding a row into the write cache for update, the primary key columns cannot be changed. SetWriteColumn and GetWriteColumn have been replaced by SetWriteColumnValues and GetWriteColumnValues, with equivalent semantics to GetColumnValues.  All values supplied during a SetWriteColumnValues call are copied during the call: previously, the caller was required to retain their copy of each changed value until SetRow was called.  The SetWriteColumnValues semantic for the size parameter has changed from requiring the size to be 0 when the size can be determined from the type, meta, or data to guaranteeing that the size will simply be ignored when the size can be determined from the type, meta, or data. Not halting processing of the write cache on the first detailed error has been formally defined as a requirement for UpdateStore implementations.  Applying none of the pending changes in the write cache whenever any detailed errors occur has also been formally defined as a requirement for implementations.  Another formalization regards writing column values to the datastore on inserts and updates: all column values are guaranteed to be written regardless of whether the caller changed them (unless the meta specifies otherwise). Regarding working with tables (advanced) A new interface, ISimpleTableAdvanced, contains methods which certain advanced callers other than storage and logic implementers require.  As mentioned, ISimpleTableRead::PopulateCache has been moved here because the first population is typically done by the table dispenser internally.  The GetDetailedErrorCount and GetDetailedErrrors methods from ISimpleTableControl are also moved here. Eliminating the cursor-based approach has also made concurrency semantics simpler.  See the reference section on advanced table usage for details. Working with meta <todo/> Storage and logic plug-ins <todo/>Implementation dispensers <todo/>ChangeQuery eliminated Regarding constants and structures Level of service flags were prefixed with fST_TABLE_ and are now prefixed with fST_LOS_ (or fST_LOSI_ for internal level of service flags).  Most of the existing flags have been inverted, since in v1, specifying a flag was required to degrade service and increase performance, and in v2, specifying a flag increases services and potentially decreases performance. fST_TABLE_READONLY is inverted to fST_LOS_READWRITE. fST_TABLE_NONMARSHALLABLE is inverted to fST_LOS_MARSHALLABLE. fST_TABLE_SINGLECURSOR has been eliminated.  Simple tables are now cursorless. fST_TABLE_INCOMING and fST_TABLE_EMPTY have been eliminated.  They are not used due since fST_TABLE_UNPOPULATED fills the same purpose. fST_TABLE_NOLOGIC remains the same. fST_TABLE_CLIENTSIDE is an internal level of service and is thus renamed fST_LOSI_CLIENTSIDE. fST_TABLE_ALWAYSMARSHALLREAD was un-used and has been removed. The wiring information request enums (eST_WIRING_SERVER and eST_WIRING_CLIENT) were un-used and have been removed. The column meta flags were prefixed with fST_COLUMN_ and are now more appropriately prefixed with fST_COLUMNMETA. fST_COLUMN_INDEX is now fST_COLUMNMETA_CASEINDEX to indicate a case-sensitive index. fST_COLUMN_CASEINSENSITIVE was simply OR d with fST_COLUMN_INDEX to indicate a case-insensitive index.  fST_COLUMNMETA_NOCASEINDEX replaces this. fST_COLUMNSTATUS_DONTWRITE was a workaround hack and has been removed.  This is really column meta information.  The new column meta supports this concept. All simple table errors continue to be prefixed with E_ST_.  All error numbers themselves are new, even for errors which retain the same constant name (note that some error numbers were publicly exposed but the constant names were not). E_ST_NOMORE has been expanded into E_ST_NOMOREROWS, E_ST_NOMORECOLUMNS, and E_ST_NOMOREERRORS. E_ST_NOTNULLABLE has been replaced by E_ST_VALUEINVALID. E_ST_INVALIDCACHESTATE has been replaced by E_ST_INVALIDCALL. E_ST_LENGTHTOOBIG has been replaced by E_ST_SIZEEXCEEDED. E_ST_FOREIGNKEYMISSING has been replaced by E_ST_FKDOESNOTEXIST. E_ST_MISSINGROW has been replaced by E_ST_ROWDOESNOTEXIST. The detailed error indices iST_ROW_ALL and iST_COLUMN_ALL have been renamed iST_ERROR_ALLROWS and iST_ERROR_ALLCOLUMNS respectively. The population control flags were prefixed with fST_CONTROL_ and are now prefixed with fST_POPCONTROL: The fST_CONTROL_APPLYTOCACHE control flag was not used and has been removed. eST_QUERYFORMAT_1, which was the query cell array, is replaced.  eST_QUERYFORMAT_CELLS is a slight variation on the same query format: i_QueryMeta is now the address of the count of cells rather than the count of cells.  eST_QUERYFORMAT_2 was not used and has been removed. The query cell operators were prefixed with eST_OPERATOR_ and are now prefixed with eST_OP_. The reserved cell indexes were prefixed with iST_COLUMN_ and are now prefixed with iST_CELL_. iST_COLUMN_CMPNAME is now iST_CELL_COMPUTER. iST_COLUMN_DSNAME is now iST_CELL_CLUSTER. iST_COLUMN_JOINHINT was a bad design (the caller should never be required to specify from which direction to perform a table join) and has been removed. iST_COLUMN_SPECIAL_CUSTOM is renamed iST_CELL_SPECIAL. iST_COLUMN_TID, now iST_CELL_TID, will be removed once the meta database work is complete. The STQueryCell::iColumn member has been renamed iCell. PAGE   PAGE   KT&mH qaNE< KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& _o_oO?/ KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& wgWgWgG7 KT&d& KT&d& KT&d& o^oN> KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& KT&d& rSrSrSr?rSr? KT&d& KT&d& KT&d& KT&d& ~n~n^M<3 KT&d& KT&d& KT&d&
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\urt configuration beta 1.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Configuration in URT Beta 1 Title _PID_HLINKSConfiguration in URT Beta 1 Markus Horstmann This document summarizes URT Configuration in the Beta 1 timeframe. COM+ Template.dot Markus Horstmann Microsoft Word 9.0su9X^ 1b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 >[.mN krmx_ @\\red-prn-12\CORP0066 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 Letter \\red-prn-12\CORP0066 LetterID="{221120B7-CC55-47E1-A9C3-0298DF25FD3F}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" VersionCompatible32="393222000" CMG="4F4D9A6DA6F3F1F7F1F7F1F7F1F7" DPB="9E9C4B3ED5C225C325C325" GC="EDEF388BC8DBC9DBC924" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmannf! Normal.NewMacros.ExtractStyleTextft   ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmanna Extract all paragraphs with style:  Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Normal VGlobal! Pre decla lateDeri $CustomN\W*>O Win16 Win32 Project- stdole MSFormsC TemplateProject Office ThisDocument< _Evaluate NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal Normal DocumentjProject \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> DD452EE 1-E08F-1 01A-8 2608C4D0 DFM20 .DLL#Mic rosoft  ibrary/ 00}#0  6D08A20 3-7015-1@1D1-89 080C74D4 -TEMP \VBE\ Templa C\\marku thared gram F iles\ UOf fice\ s\ COM+  G{2DF8D0 4C-5BFA @B-BDE5@tA ;`MSO97  x8.0L  _alc ThisDocu mentGbjbjU title  Configuration in URT Beta 1 May 9, 2000, Draft Rev 0.6,   AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document summarizes URT Configuration in the Beta 1 timeframe.  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc482532721"  Overall URT Configuration Inventory, by Feature Area  PAGEREF _Toc482532721 \h   HYPERLINK \l "_Toc482532722"  COR (Lightning)  PAGEREF _Toc482532722 \h   HYPERLINK \l "_Toc482532723"  1.1.1 Config.cfg / <exe_modulename>.cfg  PAGEREF _Toc482532723 \h   HYPERLINK \l "_Toc482532724"  1.1.2 machine.cfg  PAGEREF _Toc482532724 \h   HYPERLINK \l "_Toc482532725"  1.1.3 security.cfg  PAGEREF _Toc482532725 \h   HYPERLINK \l "_Toc482532726"  ASP+ / Managed Properties  PAGEREF _Toc482532726 \h   HYPERLINK \l "_Toc482532727"  1.2.1 config.web:  PAGEREF _Toc482532727 \h   HYPERLINK \l "_Toc482532728"  NetClasses  PAGEREF _Toc482532728 \h   HYPERLINK \l "_Toc482532729"  Configuration APIs  PAGEREF _Toc482532729 \h   HYPERLINK \l "_Toc482532730"  System.Configuration  PAGEREF _Toc482532730 \h   HYPERLINK \l "_Toc482532731"  2.1.1 Selectors  PAGEREF _Toc482532731 \h   HYPERLINK \l "_Toc482532732"  2.1.2 Generic Access (IConfigItem/IConfigCollection)  PAGEREF _Toc482532732 \h   HYPERLINK \l "_Toc482532733"  2.1.3 Read/Write APIs (Config Manager)  PAGEREF _Toc482532733 \h   HYPERLINK \l "_Toc482532734"  2.1.4 ADO+ Data Adaptor  PAGEREF _Toc482532734 \h   HYPERLINK \l "_Toc482532735"  2.1.5 Strongly typed accessor classes  PAGEREF _Toc482532735 \h   HYPERLINK \l "_Toc482532736"  2.1.6 Interceptors  PAGEREF _Toc482532736 \h   HYPERLINK \l "_Toc482532737"  2.1.7 Extensibility  PAGEREF _Toc482532737 \h   HYPERLINK \l "_Toc482532738"  2.1.8 Native WMI Provider  PAGEREF _Toc482532738 \h   HYPERLINK \l "_Toc482532739"   PAGEREF _Toc482532739 \h   HYPERLINK \l "_Toc482532740"  System.Web.Config  PAGEREF _Toc482532740 \h   HYPERLINK \l "_Toc482532741"  2.3.1 Extensibility: Section Handlers  PAGEREF _Toc482532741 \h   HYPERLINK \l "_Toc482532742"  COR Security Policy  PAGEREF _Toc482532742 \h   HYPERLINK \l "_Toc482532743"  Configuration in Beta 1  PAGEREF _Toc482532743 \h   HYPERLINK \l "_Toc482532744"  Configuration system features  PAGEREF _Toc482532744 \h   HYPERLINK \l "_Toc482532745"  3.1.1 Reading, writing, querying URT system configuration:  PAGEREF _Toc482532745 \h   HYPERLINK \l "_Toc482532746"  3.1.2 Programming model for configuration:  PAGEREF _Toc482532746 \h   HYPERLINK \l "_Toc482532747"  3.1.3 Manageability through WMI  PAGEREF _Toc482532747 \h   HYPERLINK \l "_Toc482532748"  Benefits of configuration system approach  PAGEREF _Toc482532748 \h   HYPERLINK \l "_Toc482532749"  3.2.1 Text-based configuration  PAGEREF _Toc482532749 \h   HYPERLINK \l "_Toc482532750"  3.2.2 Remote, text-based configuration  PAGEREF _Toc482532750 \h   HYPERLINK \l "_Toc482532751"  3.2.3 Simple, efficient access through strongly typed classes  PAGEREF _Toc482532751 \h   HYPERLINK \l "_Toc482532752"  3.2.4 Generic consumers  PAGEREF _Toc482532752 \h   HYPERLINK \l "_Toc482532753"  3.2.5 ADO+ Data Binding/Data Designer support  PAGEREF _Toc482532753 \h   HYPERLINK \l "_Toc482532754"  3.2.6 Command-line scriptability (through WMI provider)  PAGEREF _Toc482532754 \h   HYPERLINK \l "_Toc482532755"  3.2.7 Exposure to WMI-enabled management tools  PAGEREF _Toc482532755 \h   HYPERLINK \l "_Toc482532756"  3.2.8 Access through WMI+  PAGEREF _Toc482532756 \h   HYPERLINK \l "_Toc482532757"  3.2.9 Programmatic remote administration through WMI  PAGEREF _Toc482532757 \h   HYPERLINK \l "_Toc482532758"  3.2.10 Extensibility  PAGEREF _Toc482532758 \h   HYPERLINK \l "_Toc482532759"  3.2.11 Configuration system for app developers  PAGEREF _Toc482532759 \h   HYPERLINK \l "_Toc482532760"  Revision History  PAGEREF _Toc482532760 \h  Overall URT Configuration Inventory, by Feature Area COR (Lightning) Config.cfg / <exe_modulename>.cfg Every Application Domain can have a configuration file, that lives in the root directory of the application domain.  If the host does not explicitly specify an application configuration file name, Fusion will automatically look for an <Appbase>\config.cfg file. => StevenPr/AlanShi This configuration information is accessible through the URT Configuration System (System.Configuration).    <AppDomain        PrivatePath="bin;bin2;foo"        SharedPath="http://sharedpath;bin"        ShadowCopy="True"     />    <BindingMode>       <AppBindingMode Mode="normal"/>    </BindingMode>    <BindingPolicy>       <BindingRedir Name="g_SglAsm_SglMod1.dll"                     Originator="8e47bf1a5ed0ec84"                     Version="*" VersionNew="3.3.3.3"                     UseLatestBuildRevision="no"/>    </BindingPolicy>    <Assemblies>       <CodeBaseHint Name="g_SglAsm_SglMod1.dll"                     Originator="8e47bf1a5ed0ec84"                     Version="3.3.3.3"                     CodeBase="http://codebasehint/foo.dll"/>    </Assemblies> Details in   HYPERLINK "http://comrtime/specs/admin/versioning.doc"  http://comrtime/specs/admin/versioning.doc Need sample code here! Do we want an AppDomainSelector? machine.cfg This configuration file resides in %windir%\complus\<build#>\config. It can contain all the entries defined in 1.1.1, which will be used as machine-wide binding/download policy. The machine configuration file can be accessed through the URT Configuration System (System.Configuration). The location of the machine configuration file can be obtained through System.Configuration.ConfigManager.GetMachineConfigDirectory. Need sample code! Do we want a LocalMachineSelector? security.cfg This configuration file resides in ???. It can not be accessed through the URT Configuration System. <Permission class= System.Security.Permissions.EnvironmentPermission <Read> ;FILES</Read> <Write>ACCESS; My;var </Write> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.FileDialogPermission <Read>c:\Temp<Read/> <Append>c:\Temp<Append/> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.FileIOPermission <Read>C:\Temp;D:\MyFiles\document.doc<Read/>   <Append/>D:\MyFiles\document.doc</Append>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.IsostorePermission <Limit>160000</Limit> <CanRoam/> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.NetIOPermission <NetPermission Host= www.microsoft.com  Ports=  Access= <NetPermission Host= localhost  Ports=  Access= Read,Write,Accept,Listen,Open <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.RegistryPermission <Read> some keys,values separated by semicolon</Read>  <Append></Append> <Write></Write> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.SecurityPermission <Execution/>  <UnmanagedCode/>  <SkipVerification/>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.UIPermission <SafeTopLevelWindows/>  <AllClipboard/>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <!-- Custom permission example --> <Permission class= MyApp.Permissions.MyDBPermission <DB Name= PayRecords  Access= <VersionTag>XMLNotationV1</VersionTag> </Permission> <PermissionSet class= System.Security.NamedPermissionSet> <Permission   class= System.Security.Permissions.SecurityPermission <SafeTopLevelWindows/>  <AllClipboard/>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission class= System.Security.Permissions.FileIOPermission <Unrestricted/> <VersionTag>XMLNotationV1</VersionTag> </Permission> <Permission   class= System.Security.Permissions.SecurityPermission <Execution/>  <VersionTag>XMLNotationV1</VersionTag> </Permission> <Name>MyPermissionSet</Name> <Description>Allows clipboard and some Windows UI as well as full file IO and execurion of code</Description>  </PermissionSet> <CodeGroup class="System.Security.Policy.CodeGroup"> <IMembershipCondition class="System.Security.Policy.ZoneMembershipCondition">         <Zone>Trusted</Zone> <PermissionSet class="System.Security.NamedPermissionSet">                <Name>ForInternet</Name> </PermissionSet> </IMembershipCondition> <CodeGroup class="System.Security.Policy.CodeGroup"> <IMembershipCondition class="System.Security.Policy.ZoneMembershipCondition"> <Zone>Untrusted</Zone> <PermissionSet class="System.Security.NamedPermissionSet">                  <Name>Nothing</Name> </PermissionSet>                </IMembershipCondition> </CodeGroup> </CodeGroup> Details in   HYPERLINK "http://comrtime/specs/Security/securityadmin.doc"  http://comrtime/specs/Security/securityadmin.doc Need to track down remoting config for Beta 1! ASP+ / Managed Properties config.web: This configuration file can reside in the application root directory of an ASP+ application or in the %windir%\complus\<build#>\ directory. Should this be in the Config sub-directory to avoid accidental access to binaries? Configuration information in this file can be accessed through System.Web.Configuration or System.Configuration or   at runtime   through System.ASP.HttpRequest. Need to make sure the schema is up-to-date. => MarkusH/RajeshMi Need sample code! Need to sync with XSP team on samples/demos/test!      <httpmodules> <add type="System.Web.State.CookielessSessionModule" /> <add type="System.Web.OutputCacheModule" /> <add type= System.Web.State.SessionStateModule <add type= ScottGu.dll#FooClass      </httpmodules>      <httphandlers> <add verb=  path= Foobar.Scott  type= Foobar.dll#Foobar.Scott <add verb=  path= Foobar.Baz  type= Foobar.dll#Foobar.Baz      </httphandlers>       <httphandlerfactories> <add verb= GET,POST,PUT  path="*.aspx" type="System.Web.Pages.PageFactory" /> <add verb=  path="*.scottgu" type="Scottgu.dll#ScottGuFactory" /> <add verb=  path="*.asax" type="System.Web.RestrictedResourceHandler" />       </httphandlerfactories>      <sessionstate inproc=  cookieless="true" timeout="20" server="localhost" port="42424"/>      <globalization requestencoding= us-ascii  responseencoding= iso-8859-1      <compilation>           <compilers defaultlanguage=   <compiler language=  extension=  type= MSVSA.dll#Microsoft.VB.Compiler   <compiler language=  extension= .cool  type= COOL.dll#Microsoft.COOL.Compiler   <compiler language=  extension=  type=  COOL.dll#Microsoft.COOL.Compiler           </compilers>           <assemblies>   <add assembly= Microsoft.WFC.dll   <add assembly= ADODB.dll   <add assembly="*" />           </assemblies>      </compilation>      <tracing enabled= false  requestlimit=  pageoutput=     <security>           <authentication mode= Cookie                <cookie cookie= 401kApp  loginurl= /login.aspx  decryptionkey= 1!#$$                      <credentials passwordformat=                          <user name=  password= GASDFSA9823423BSD                          <user name=  password= ZA#$34343443BSD44                          <user name=  password= IFSKDSJFSLKFJKDLS##                      </credentials>                </cookie>    <roles>                       <role name= Admin                            <user name=                            <user name=                       </role>                       <role name= Peasant                            <user name=                       </role>               </roles>           </authentication>           <authorization>     <allow roles= Admins           </authorization>           <identity>     <impersonation enable= false     <codeaccess permissionset= foo.xml           </identity>     </security>     <processmodel  enable= timeout= idletimeout= shutdowntimeout= requestlimit= requestqueuelimit= memorylimit= usecpuaffinity=     <browsercaps> <result type="System.Web.HttpBrowserCapabilities" /> <use var="HTTP_USER_AGENT" />      browser=Unknown      version=0.0      majorver=0      minorver=0      frames=false      tables=false <filter>        <case match="Windows 95|Win95">                  platform=Win95        </case>        <case match="Windows NT|WinNT">                  platform=WinNT        </case> </filter>     </browsercaps>  HYPERLINK "http://urtframeworks/specs/xsp/configuration_beta1.doc"  http://urtframeworks/specs/xsp/configuration_beta1.doc  for details. NetClasses Need to track this down. Configuration APIs System.Configuration Can read and write COR AppDomain/Binding policy. Can technically read and write all ASP+ section handlers, except for browsercaps. Can not read COR security policy. Selectors public abstract class System.Configuration.Selector { String ToString(); String Prefix { get; }; P3: Remove , use selector s Type instead. public class System.Configuration.URLSelector : System.Configuration.Selector { URLSelector(String url);  // supported URLs:  HYPERLINK "http://<argument"  http://<argument  HYPERLINK "file://<argument"  file://<argument String Argument; String Prefix { get; }; String ToString(); P3: Add  Prefix  property to URLSelector class; remove Type public class System.Configuration.FileSelector : System.Configuration.Selector { FileSelector(String FileName); // UNC path String Prefix {get ;} ;  // returns   HYPERLINK "file://<argument"  file://<argument String FileName {get; set;} ; // returns Path String ToString();  // returns  file:// +Path P3: Add file selector class. public class System.Configuration.AppDomainSelector : System.Configuration.Selector { AppDomain(); String Prefix { get ; } ; // returns  appdomain String ToString(); // returns  appdomain:// P3: Add app domain selector class. public class System.Configuration.LocalMachineSelector : System.Configuration.Selector { LocalMachineSelector(); String Prefix { get ; }; // returns  localmachine String ToString(); // returns  localmachine:// P3: Add local machine selector class. public enum System.Configuration.QueryCellOp { Equal   public class System.Configuration.QueryCell { public int Index; public QueryCellOp Operator; public Object Value; public class System.Configuration.ConfigQuerySelector : System.Configuration.Selector { public ConfigQueryQuerySelector(); // Takes a query string (without  query://  prefix) public ConfigQuerySelector(String Query);  public ConfigQuerySelector(String Query, String FileNameSelector);  public ConfigQuerySelector(String Query, Selector Selector);  P4: Add support for using property names instead of indexes to QuerySelector P6: Add support for query cell string parsing to QuerySelector. Px: Add support for  SELECT *  syntax to QuerySelector. public String FileName{ get; }; // Shortcut for specifying  Selector=<selector.ToString>  as a query cell public String Selector Selector { get; set;}; P3: Change  FileName Selector  on QuerySelector class  P3: support  Selector  as a query cell property name P4: (Internal) Support ConfigType as a query cell and property on the query selector public String Query { get; };  // returns the query string (without the  query://  prefix public QueryCell this[int Index]{ get; set; } public void Add(QueryCell cell); public void Add(int Index, QueryCellOp Operator, Object Value); public void Remove(int nIndex); public int Count; public override String ToString();  // returns: query://<querystringcell> // <querystring> := <querycells> // <querycells> := <querycell> [ AND <querycell> ] // <querycell> := <propname>   <value> @FileName=  <path> String Prefix { get; }; // returns  query P3: Add  Prefix  to query selector class public class System.Configuration.NullSelector : System.Configuration.Selector { NullSelector(); String Prefix { get ; } ; // returns  String ToString(); // returns  null:// Generic Access (IConfigItem/IConfigCollection) interface IConfigItem : IList { // fixed-size list: can t Add/Remove object this[String PropertyName]; object this[int PropertyIndex]; int Count; String ConfigType { get; set}; // set only allowed if not frozen P6: Derive IConfigItem from IList: implement applicable IList methods Selector Selector { get; set}; // set only allowed if not frozen IConfigCollection Collection; // IList methods Boolean Contains(object value);  // returns true iff any of the properties is equal to value: prop.Equals(value)==true. int IndexOf(object value); // returns the index of the property with the lowest index equal to value  Boolean IsReadOnly; Boolean IsSynchronized; Object SyncRoot; void CopyTo(Array array, int index); IEnumerator GetEnumerator(); // IList methods, not applicabable to fixed-size lists: int Add(Object value); void Clear(); void Insert(int index, object value); void Remove(object value); void RemoveAt(int index); interface IConfigCollection : IList { P6: Derive IConfigCollection from IList: implement applicable IList methods IConfigItem this[int Index]; IConfigItem this[String Key]; int Count; String ConfigType {get;set} ; Selector Selector {get; set}; // set only allowed when not frozen. IConfigItem FindByKey(String Key); IConfigItem FindByKey(Object[] Key); // IList methods int IndexOf(IConfigItem item); Boolean Contains(IConfigItem item); Boolean IsReadOnly; Boolean IsSynchronized; Object SyncRoot; void CopyTo(Array array, int index); IEnumerator GetEnumerator(); // Only usable if los=Write was specified void Add(IConfigItem item); void RemoveAt(int Index); void Remove(IConfigItem item); void Insert(int Index, IConfigItem item); void Clear(); P6: Rename  IConfigCollection.Delete  method to  RemoveAt Px: Add RemoveByKey to IConfigCollection void RemoveByKey(String Key); void RemoveByKey(Object[] Key); Read/Write APIs (Config Manager) Design considerations APIs on Config Manager vs. Selector Selector ConfigManager Code: new selector and call get on it New selector, pass to config manager Config Manager not exposed (one less class) One more class to document New approach Reviewed/tested approach Closer to managed properties model, new WMI models (Whistler, scopes, WMI+) Closer to current WMI models For Beta 1: leave on ConfigManager, mainly due to dev/test cost considerations. Insert/Update vs. single Put method Some stores require the distinction. Native config system currently does. WMI offers the option as a flag on a single Put method. For Beta 1: Single Put method with flag. Batch updates /   method Currently can t mix inserts, updates and deletes in a single file/store update operation. Punt for Beta 1 Query vs. Enumeration (aka QuerySelector vs. QueryClass) Main problem is confusion of concepts for people trying to do simple things. For Beta 1: address by renaming QuerySelector to ConfigQuery, but leave it as inheriting from Selector. public class System.Configuration.LevelOfService { public static int None =  0x00000000; // Read-Only public static int Reserved =  0x00000001; public static int Write =  0x00000002; public static int Read =  0x0001; public static int Write =  0x0002; public static int Delete =  0x0004; // not used in B1 public static int Empty = 0x0008; // not used in B1 public static int NoValidation =  0x0010; public static int NoInheritance =  0x0020; public static int DoNotCacheResult =  0x0040; // not implemented in B1 public static int BypassCache =  0x0080; // not implemented in B1 public static int UseBaseCollection = 0x0100; public static int DoNotApplyDefaults = 0x0200; public class System.Configuration.PutFlags { public static int UpdateOnly = 0x00000001; public static int CreateOnly =  0x00000002; class System.Configuration.ConfigManager { public static IConfigCollection Get(String configType, String Sel); // Sel: must have a prefix corresponding to a selector (file:, appdomain:, query:) // if no prefix, treat as  file: // los: defaults to 0 (read-only) // If the selector has a non-null, non-empty ConfigType property, the configtype   // parameter must be either identical or NULL or an empty string public static IConfigCollection Get(String configType, String Ssel, int los); public static IConfigCollection Get(String configType, Selector sel); public static IConfigCollection Get(String configType, Selector sel, int los); // returns an item in a singleton collection public static IConfigItem GetItem(String configType, String Pathsel); public static IConfigItem GetItem(String configType, String Path sel, int los); public static IConfigItem GetItem(String configType, Selector sel); public static IConfigItem GetItem(String configType, Selector sel, int los); // returns a property from an item in a singleton collection public static Object GetProperty(String configType, String sel,  String PropertyName); public static Object GetProperty(String configType, Selector sel,  String PropertyName); public static void WritePut(String selector, IConfigCollection cc, Flags f); // Can only perform updates. Will fail if any item in the collection does not // already exist. public static void WritePut(Selector selector, IConfigCollection cc, Flags int flags); // Fflags: CreateOnly or UpdateOnly. May support CreateOrUpdate for Beta 2. // - PutFlags.CreateOnly: fails if any item in the collection already exists // - PutFlags.UpdateOnly: fails if any item in the collection does not already //   exist. public static void WriteItemPutItem(String selector, IConfigItem ci, Flags f); public static void WriteItemPutItem(Selector selector, IConfigItem ci, int Fflags f); public static void WritePropertyPutProperty(String configType, String selector,  String PropertyName, Object Value); public static void WritePropertyPutProperty(String configType, Selector selector,  String PropertyName, Object Value); public static void Delete(IConfigCollection cc); public static void DeleteItem(IConfigItem ci); // Resets the property to it s default value public static void DeleteProperty(String configType, String sel, String PropertyName); public static void DeleteProperty(String configType, Selector sel, String PropertyName); // Methods for deletion without prior read: public static void Delete(String ConfigType, String sel); public static void Delete(String ConfigType, Selector sel); // Selector must provide at least a ConfigType, often also a Selector property public static void Delete(String sel); public static void Delete(Selector sel); public static IConfigCollection GetEmptyCollection(String configType); public static IConfigItem GetEmptyItem(String configType); Examples: AppDomainSelector ad = new AppDomainSelector(); IConfigItem appdomainconfig = ConfigManager.GetItem("AppDomain"); Boolean bShadowCopy = (Boolean) appdomainconfig["ShadowCopy"]; appdomainconfig["ShadowCopy"]=False; Ad.WriteItem("AppDomain", appdomainconfig); IConfigCollection bindingpolicies = ad.Get("BindingPolicy"); foreach (IConfigItem bindingpolicy in bindingpolicies) { String name = (String) bindingpolicy["Name"]; String Version  = (String) bindingpolicy["Version"]; IConfigItem bindingpolicy = ad.GetEmptyItem("BindingPolicy"); Bindingpolicy["Name"]="MyAssembly"; Bindingpolicy["Version"]="1.1.3.0"; bindingpolicies.Add(bindingpolicy); ad.Write("BindingPolicy", bindingpolicies); ADO+ Data Adaptor There will be no data adapter in Beta 1.What exactly are the demo scenarios we enable with this? (Sample only!) We need to change the build order to build config after DNA, so that we can use the data set in our build. public static void Load(DataSet ds, String configType, Selector sel, int los); public static void Update(DataSet ds); Example: AppDomainSelector ad = new AppDomainSelector(); DataSet data = new DataSet(); ad.Load(data, "BindingPolicy"); DataTable bindingpolicies = data.Tables["BindingPolicy"]; foreach (DataRow bindingpolicy in Bindingpolicies.Rows) { String name= (String) bindingpolicy["Name"]; String version= (String) bindingpolicy["Version"]; Strongly typed accessor classes class System.Configuration.RuntimeSystem.AppDomainConfigItem : IConfigItem { String PrivatePath; String SharedPath; Boolean ShadowCopy; class BindingModeConfigItem {}; class BindingPolicyConfigItem {}; class AssembliesConfigItem {}; class WindowsInstallerConfigItem {}; Examples: AppDomainSelector ad = new AppDomainSelector(); AppDomainConfigItem appdomainconfig = ad.GetItem("AppDomain"); Boolean bShadowCopy = appdomainconfig.ShadowCopy; appdomainconfig.ShadowCopy=False; ad.WriteItem("AppDomain", appdomainconfig); BindingPolicyConfigCollection bindingpolicies = ad.Get("BindingPolicy"); foreach (bindingpolicy in bindingpolicies) { String name = bindingpolicy.Name; String Version  = bindingpolicy.Version; BindingPolicyConfigItem bindingpolicy = ad.GetEmptyItem("BindingPolicy"); bindingpolicy.Name="MyAssembly"; bindingpolicy.Version="1.1.3.0"; bindingpolicies.Add(bindingpolicy); ad.Write("BindingPolicy", bindingpolicies); Interceptors Metabase Hierarchy Interceptor P34: Compute merge hierarchy for XSP host. (MarkusH/sample) Shell Hierarchy Interceptor P34: Compute merge hierarchy for EXE host. (MarkusH/sample) Merge Interceptors PropertyOverride ListAppend ListPrepend ListMerge Extensibility Schema P52: Allow for extensible schema: Read XML schema in table dispenser etc. Interceptors Remove mwiring.xml public interface IConfigReader { Object Read(String configType, Selector selector, int los, Object currentObject); enum ConfigWriterFlags { Insert = 1, Update = 2, Delete = 3 interface IConfigWriter { IConfigCollection Write(String configType, Selector sel, IConfigCollection cc, ConfigWriterFlags flags); // Both configType and sel may be NULL, in which case the cc s ConfigType/Selector must be used // if flags==ConfigWriterFlags.Delete, cc can be NULL, in which case both configType and sel must be non-NULL: all items that match the configType/sel will be deleted. // An interceptor may return a modified (or even unmodified) IConfigCollection, if // it is part of an interceptor chain (i.e. performs validation etc. without  // actually storing items) P5: Add support for (custom) write interceptors. public interface IConfigMerger { Object Merger(Object parent, Object child, String ConfigType, Selector selector, int los); public struct RequestParams{ public String configType; public Selector selector; public int los; public interface IConfigTransformer { RequestParams Transform(String configType, Selector selector, int los); Native WMI Provider Details see   HYPERLINK "http://wmig/vss/specifications/Quasar/program%20Management/MiniQuasar%20WMI+%20(PM%20Spec).doc"  http://wmig/vss/specifications/Quasar/program%20Management/MiniQuasar%20WMI+%20(PM%20Spec).doc WMI+   HYPERLINK "http://appcenter/feature_teams/complus2/specs/"  http://appcenter/feature_teams/complus2/specs  and http://wmig/vss/specifications/Quasar/program%20Management/MiniQuasar%20WMI+%20(PM%20Spec).doc. System.Web.Config class System.Web.HttpContext { HttpConfigRecord GetCompleteConfig(); HttpConfigRecord GetCompleteConfig(String path); Object GetContext(String name); Object GetContext(String name, String path); Extensibility: Section Handlers interface System.Web.Config.IConfigSectionHandler { ConfigOutput Create (Object parent, ConfigInput[] input, String path); Registered in config.web file:      <configsections> <add name="httpmodules" type="System.Web.Config.HttpModuleConfigHandler      </configsections> COR Security Policy Permission classes, policy classes etc. Configuration in Beta 1 The goals of the configuration system support in Beta 1 is to  Facilitate gathering customer feedback on the overall URT config offering. Demonstrate to URT teams that the configuration system is real and provides many features "for free". Configuration system features Reading, writing, querying URT system configuration: Binding Policy AppDomain policy XSP config NOT covered:  Code access security Remoting config JIT/Debugging config Benefits: target application authors, not management tool authors Minimal number of  lines of code  / concepts for app authors Strongly typed classes In-process Programming model for configuration: Custom schema   XCOPY deployability Custom resolution: hierarchies, merges, stores   modularity for provider authoring Manageability through WMI Cover management tools through WMI and WMI+. WMI+: through native WMI provider to native config system only! Benefits of configuration system approach We (MarkusH) will provide a set of samples that illustrate the following benefits of the configuration system. These sample will be part of the COM+ 2.0 SDK. Text-based configuration Sample/Demo: Assembly version problems An app uses V1 of an assembly. V2 comes along and breaks the app upon installation. Open the config file for the app in notepad, add a line to force the app to bind against V1 of the assembly. The app works. Remote, text-based configuration Sample/Demo: The assembly versioning demo. The problem is fixed by connecting to the machine from a Linux box and editing the config file. Simple, efficient access through strongly typed classes Sample 1: Assembly binding policy configuration (as EXE). Sample 2: ASP+ <processmodel> configuration (as ASP+ app?) These samples will use the strongly typed accessor classes to illustrate: Compile-time type checking Auto-complete in the IDE Ability to read and write relatively complex XML files through a few lines of code. Generic consumers Sample: Configuration Browser (as ASP+ app?) This sample will use the IConfigItem/IConfigCollection interfaces to illustrate: Discoverability of configuration through schema Navigation through nested configuration (if ASP+ <security> can be accessed) Ability to write generic configuration UI ADO+ Data Binding/Data Designer support Sample: Binding Policy in the Data grid This sample will use the ADO+ Data Adaptor to illustrate: The ability to do data binding against configuration information. The ability to discover configuration information through the VS7 data browser. The ability to do simultaneous updates to multiple pieces of configuration information (if supported). Command-line scriptability (through WMI provider) This depends on the availability/quality of the WMI provider. MarkusH following up with TravisM. Sample: VBS script to fix assembly version problem Scenario above: Customer calls PSS. PSS sends a VBS script in e-mail. Customer clicks on the script and the app starts working. The sample uses the native WMI provider to illustrate: The lack of managed-code command-line script engines in VS7/COM+ 2.0. The benefit of a WMI provider for configuration information, and the scriptability of WMI. Exposure to WMI-enabled management tools Sample: CIM browser? Working with TravisM (WMI) to get a third-party WMI app that is (or could be made) COM+ 2.0 aware. If this doesn't work, we'll have to use the generic WMI/CIM browser This sample illustrates how The configuration system makes COM+ 2.0 config accessible to the WMI world (at no extra cost for the developer). Access through WMI+ Programmatic remote administration through WMI Sample: CIM browser This sample illustrates how The configuration system enables programmatic remote access to URT configuration information (at no extra cost for the developer). Extensibility This depends on us providing a schema extensibility mechanism; unknown cost at this time. We could use an embedded schema in the config file and change the table dispenser to fall back to the XML interceptor if it doesn't find schema through the fixed interceptor  Better to have customers ask for this feature (it's pretty obvious). Sample: Licensing limit of simultaneous users? Sample: Window Positions? Sample: MSMQ / DSN configuration? These samples would illustrate how Configuration is part of the core programming model for COM+ 2.0. Developers can get all the benefits of configuration "for free". Configuration system for app developers Guide devs towards recommended way of doing config. Get benefits (appcenter repl, wmi, APIs, text-based admin etc.). Rules/guidelines for schema? App-specific  island ? Suggested schema? Logical/Physical  mapper : adapt an app to a specific environment (AC 2.0). Revision History April 14, 2000 Rev 0.1 (MarkusH). April 18, 2000 Rev 0.2 (MarkusH): Added NullSelector, changed FileSelector.Path to FileName. May 1, 2000 Rev 0.3 (MarkusH): Added Selector and ConfigType property to QuerySelector, constructor with Selector to QuerySelector. Added IConfigCollection.RemoveByKey. Added URLSelector, making FileSelector second priority. Added query string parsing support/defined query string syntax (including configtype/selector). Change Selector.Type back to Prefix string. Added ConfigType/Selector to IConfigItem. Added Selector property to IConfigCollection. Change ConfigManager.Write to  , added ConfigManager.Delete methods. Removed DataAdaptor for Beta 1. Added MB/Shell hierarchy interceptors. Added schema/interceptor extensibility. May 1, 2000 Rev 0.4 (MarkusH): Incorporated/captured feedback from spec review: query vs. enum, APIs on config manager vs. selector, Put vs Insert/Update, batch updates, feature list for Beta 1. Updated priorities of issues. May 2, 2000 Rev 0.5 (MarkusH): Clarified that there are two flavors of the   methods, with and without flags. Added definition of PutFlags. Added Delete methods that take a ConfigType in addition to a Selector.  May 9, 2000 Rev 0.6 (MarkusH): Changed  Remove RemoveAt . Made  ConfigType  on ConfigQuery and  Select * from <configtype>  a lower priority (P4). Derived IConfigCollection and IConfigItem from IList (P4). Added IConfigWriter definition. Page   PAGE   NUMPAGES  LEF0J mfmfm {t{t{ hsLEF hgLEF htLEF hfLEF hoLEF hnLEF5 nLEF\ hnLEF hsLEF5 sLEF\ hrLEF5 sLEF\ hrLEF huLEF htLEF hqLEF hsLEF hpLEF
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\urt configuration system architecture.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft COM+ 2.0 Configuration System Architecture Title _PID_HLINKSCOM+ 2.0 Configuration System Architecture Markus Horstmann This document describes the architecture of the COM+ 2.0 configuration system, including the configuration manager, configuration objects and configuration interceptors. Refer to the COM+ 2.0 Configuration System specification for an introduction to using or extending the configuration system.  COM+ Template Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @HP DeskJet 720C Series LPT1: HPFDJC06 HP DeskJet 720C Series HP DeskJet 720C Series HP DeskJet 720C Series LPT1: HP DeskJet 720C Series HP DeskJet 720C Series LPT1:ID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  COM+ 2.0 Configuration System Architecture November 14, 1999, Draft Rev 0.8  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes the architecture of the COM+ 2.0 configuration system, including the configuration manager, configuration objects and configuration interceptors. Refer to the COM+ 2.0 Configuration System specification for an introduction to using or extending the configuration system. TOC \o "1-3" Goals  PAGEREF _Toc467269478 \h  Requirements  PAGEREF _Toc467269479 \h  Configuration Manager  PAGEREF _Toc467269480 \h  Concepts  PAGEREF _Toc467269481 \h  3.1.1 Configuration Type: ConfigType  PAGEREF _Toc467269482 \h  3.1.2 Configuration location: Selector  PAGEREF _Toc467269483 \h  Configuration Manager Class  PAGEREF _Toc467269484 \h  3.2.1 Caching  PAGEREF _Toc467269485 \h  Behavior information  PAGEREF _Toc467269486 \h  Configuration Objects  PAGEREF _Toc467269487 \h  Configuration Schema  PAGEREF _Toc467269488 \h  4.1.1 Collections  PAGEREF _Toc467269489 \h  4.1.2 Items  PAGEREF _Toc467269490 \h  4.1.3 Primary Key  PAGEREF _Toc467269491 \h  4.1.4 Item Name  PAGEREF _Toc467269492 \h  4.1.5 Relations  PAGEREF _Toc467269493 \h  4.1.6 Obtaining Schema Information  PAGEREF _Toc467269494 \h  Configuration Item and Configuration Collection  PAGEREF _Toc467269495 \h  4.2.1 Configuration Item: IConfigItem interface  PAGEREF _Toc467269496 \h  4.2.2 Configuration Collection: IConfigCollection interface  PAGEREF _Toc467269497 \h  4.2.3 Base Configuration Objects  PAGEREF _Toc467269498 \h  4.2.4 Strongly typed Configuration Objects  PAGEREF _Toc467269499 \h  4.2.5 Custom Configuration Objects  PAGEREF _Toc467269500 \h  Arbitrary Custom Objects in the Configuration Manager  PAGEREF _Toc467269501 \h  Configuration Interceptors  PAGEREF _Toc467269502 \h  Read operations  PAGEREF _Toc467269503 \h  Write operations  PAGEREF _Toc467269504 \h  Methods in details  PAGEREF _Toc467269505 \h  Typical usage patterns for Configuration Interceptors  PAGEREF _Toc467269506 \h  5.4.1 Single interceptor for a Key/Protocol combination  PAGEREF _Toc467269507 \h  5.4.2 1 of n  interceptors for a Key/Protocol combination  PAGEREF _Toc467269508 \h  5.4.3 Chain of n interceptors for a Key/Protocol combination  PAGEREF _Toc467269509 \h  5.4.4 Hierarchy Interceptors  PAGEREF _Toc467269510 \h  5.4.5 Merge Interceptors  PAGEREF _Toc467269511 \h  5.4.6 Storage Interceptors  PAGEREF _Toc467269512 \h  Generally useful Interceptors  PAGEREF _Toc467269513 \h  5.5.1 Native Catalog Storage Interceptor  PAGEREF _Toc467269514 \h  5.5.2 Schema Validation Interceptor  PAGEREF _Toc467269515 \h  Administrative Interfaces  PAGEREF _Toc467269516 \h  Utility Classes  PAGEREF _Toc467269518 \h  Related Specs  PAGEREF _Toc467269519 \h  Open Issues  PAGEREF _Toc467269520 \h  Revision History  PAGEREF _Toc467269521 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Goals Please refer to the overview presentation on   HYPERLINK "http://appcenter/config/Slides/URT%20Configuration.ppt"  http://appcenter/config/Slides/URT%20Configuration.ppt  for the high level goals of the URT configuration system. Requirements Please refer to the requirements document on   HYPERLINK "http://appcenter/config/specs/URT1/URTConfigSysReq.htm"  http://appcenter/config/specs/URT1/URTConfigSysReq.htm  for a detailed list of requirements, broken up by consuming URT team.  Configuration Manager The Configuration Manager orchestrates discovery, retrieval, caching and update of configuration information. It is the core of an extensible architecture in which all specific functionality is implemented in the form of   mostly reusable   modules called Interceptors. Concepts In order to identify a specific piece of configuration information, two concepts are introduced: the ConfigurationType  and the Selector. Configuration Type: ConfigType The Configuration Type  (short Config Type) indicates the type of configuration information.  Examples:  Applications ScriptMaps Permissions Version Policies Configuration location: Selector In many cases, multiple instances of configuration information exist for a given Config Type, for example the Config Type  Application  may have an instance for the  401K App  and another instance for the  Payroll App When requesting configuration information the caller indicates the instance(s) of configuration for a specific Config Type using a  Selector . This selector is dependent on and scoped by the Config Type. The selector is often a URL, but whoever defines the Config Type is free to define one or more arbitrary URI s or even custom objects as selectors for this Config Type. The only limitation on the Selector is that it must have a protocol prefix.  In order to enable more efficient handling of selectors (pre-parsing of protocol prefix, handling of complex queries etc.), an abstract Selector class is defined: public abstract class System.Config.Selector {   public String  Protocol { abstract get;} The Configuration Manager is able to handle arbitrary classes derived from the Selector class.  However, some of its methods have special knowledge of the UrlSelector class: public class System.Config.URLSelector : Selector {   public  URLSelector(String s);   public String  Protocol{ override get };   public String  Argument{ get, set };   public bool  IsRootURL{ get, set };   public override String ToString(); class System.Config.UrlSelector : Selector { public:  UrlSelector(String s);  override String ToString(); String Protocol { override get, set };  String Argument { get, set }; Need to change code to UrlSelector (lower-case "rl") to conform to URT naming conventions. Another selector class, which is commonly used by administrative interfaces, is given here merely as an example to motivate the choice of introducing Selectors as objects: // Syntax:  configquery:<name1><op><value1>;<name2><op><value2> public enum System.Config.QueryCellOp { Equal,  NotEqual };  public class System.Config.QueryCell { String  Name; QueryCellOp  Operator; Object  Value; class System.Config.QuerySelector : Selector {   public:  enum QueryCellOp { Equal,  NotEqual };   struct QueryCell { String  Name; QueryCellOp  Operator; String  Value; public QuerySelector();   public QuerySelector(String s);   public String Protocol { override get; set };   public String FileName { get; set };   public String  override  ToString();   public  QueryCell  this[int Index] { get; set};    public void Add(QueryCell cell);   public void  Add(int Index, QueryCellOp Operator, Object Value){   public void Remove(int nIndex);   public int  Count { get }; Will callers typically have the URL as a single string, or will the prefix already be available separately? In the latter case, it might be good to provide a method with two separate parameters (Protocol, Selector) to avoid parsing/allocations. Configuration Manager Class  The Configuration Manager Class provides a simple set of functions to consumers of configuration information. Consumers range from administrative tools to the system runtimes themselves. enum System.Config.LevelOfService { Read =  0x0001; Write =  0x0002; Delete =  0x0004; Empty = 0x0008; NoValidation =  0x0010; NoInheritance =  0x0020; DoNotCacheResult =  0x0040; BypassCache =  0x0080; // others Need to validate this list! class System.Config.ConfigManager { public:  Object Get(String ConfigType, String selector, LevelOfService LoS);  Object Get(String ConfigType, Selector selector, LevelOfService LoS);  // The first flavor of the Get method assumes that the selector string is a UrlSelector.   // For all other selectors, the caller must create/cast to desired Selector class and  // call the second flavor of the Get method . Admin/Write methods are not currently implemented!  // Admin interfaces are not currently implemented  // IAdminCollection GetAdmin(String ConfigType, String selector, LevelOfService LoS);  // IAdminCollection GetAdmin(String ConfigType, Selector selector, LevelOfService LoS); // void Write(IAdminCollection Config); // void Write(IAdminCollection Config, LevelOfService los); // Utility methods primarily for use by interceptors  Object GetEmptyConfigCollection(String ConfigType, Selector selector, LevelOfService LoS);  Object GetEmptyConfigItem (String ConfigType, Selector selector, LevelOfService LoS);  Bool IsObjectCached(String ConfigType, Selector selector, LevelOfService LoS); Caching The Configuration Manager caches results of previous requests based on ConfigType and Selector. The LevelOfService parameter controls the caching behavior of a request. All objects returned from the cache must be read-only, in order to guarantee consistency of the running system. How exactly do we invalidate the cache? Do we have separate read and write caches? Do we even need a write cache? Can we use the XSP cache classes? Should wiring/meta indicate the possible/default caching behaviors for a config type? Behavior Wiring information The Configuration Manager uses the behavior Wiring information to determine how to return a representation of the configuration information being requested. The wiring behavior information maps a combination of ConfigType and Selector to a chain of managed classes that is to be invoked in order to render a configuration object. The Configuration Manager invokes each class in the chain of managed classes in order until one of the classes indicates that it has returned a fully rendered configuration object. These chained managed classes are referred to as Configuration Interceptors and are described in detail below. Example: <InterceptorWiring  ConfigType= Applications  Protocol=  InterceptorOrder =               InterceptorClass =  System.Config.Core.FileNameInterceptor               InterceptorType="Reader" /> <InterceptorWiring  ConfigType= Applications  Protocol=  InterceptorOrder =               InterceptorClass =  System.Config.Core.ComplibInterceptor              InterceptorType="Reader" /> Should we allow more than one chain for a type/selector combination to facilitate consumers with different rendering requirements for the same config information? Examples: runtime vs. admin, two different runtimes (DT/XSP) with different perf/access requirements. Behavior Wiring information is described in more detail in the   HYPERLINK "http://appcenter/config/specs/urt1/Schema & Behavior.doc"  Schema & Behavior specification section   REF _Ref465510285 \r   REF _Ref465510238 \p \h  below Configuration Objects Configuration objects provide an in-memory representation of configuration information, tuned to the requirements of the primary consumer of the configuration information. Configuration objects are returned by the Configuration Manager  and  GetEmpty  methods and consumed by the  Write  methods. Although the Configuration Interceptors invoked by the configuration manager can return any managed class, the requirements of administrative tools for a generic representation of configuration information can only be satisfied if the configuration object implements the generic configuration object interfaces defined below and thus provides a Configuration Schema for the configuration information. Configuration Schema The schema for configuration objects is typically described in an XML-data document. The format of the XML-data representation of configuration schemas is defined in the XML schema definition document ( HYPERLINK "http://appcenter/config/specs/urt1/Schema & Behavior.doc" http://appcenter/config/specs/urt1/Schema & Behavior.doc Collections Like XML Data, the schema represents configuration information as groups of typed and named properties. A group of properties is in turn named using a string, which corresponds to the Config Type as defined above. Example 1: Config Type:  Application Properties:   (String),  Location  (String),  AppEnabled  (Bool) Example 2: Config Type:  Machine Policy Properties:  JITCompiler  (enum ( Standard JIT Econo JIT CodeBufferMax  (DWORD) Items Some Config Types may have only a single instance (Example 2 above: there is only one  JITCompiler  property on a given machine), while others by nature contain many different instances (Example 1 above: Each application has a different  Location  etc.). These instances are hereafter referred to as  Configuration Items  or short  Items , a set of Configuration Items is referred to as a  Configuration Collection  or short  Collection TODO: add description of PublicRowName etc.  Primary Key In order to distinguish between different Items belonging to a specific Config Type, the schema declares one or more properties in the group as establishing the identity of the item. This set of properties is hereafter referred to as the  Primary Key  of the Config Type (the definition) or the  Primary Key  of the Item (the specific set of values). The Primary Key is often specified as part of the Selector to request a single instance of configuration information for a given Config Type. Example 1: Primary key:  Location Example 2: Primary key: N/A. Item Name Often, an Item must be referred to in a human readable form. In order to address this requirement, the schema designates one of the properties as the   of an Item. The property establishing the Name may or may not be part of the Primary Key, but should be  sufficiently unique  (for UI purposes) across different Item instances. Relations Often, two Config Types are related to each other, in the sense that the Items in one Config Type contain references to the Items in another Config Type, typically by listing the values of the Primary Key of these Items. The schema can capture these relations between Config Types to facilitate navigation between Config Types in administrative tools and to enable consistency checks. Obtaining Schema Information The schema for a given Config Type can be retrieved through the Configuration Manager, by using the Config Type  System.Config.Schema , and using the Config Type for which the schema is to be retrieved as the Selector string. Should this be the Config Type for schema? What s the Selector prefix? Example (using strongly typed Configuration Objects, see Section   REF _Ref463772039 \n \p \h  4.2.4 below  for details): SchemaCollection Schema=ConfigManager.Get( System.Config.Schema Applications for (int i=0; I<Schema.Count(); i++) Console.WriteLine(Schema[i].Name+ +Schema[i].Type+ // Resulting output: //    Name (String) Location (String) AppEnabled (Bool) Similarly, the Config Type  System.Config.Relations  retrieves relationship information: RelationCollection Relation=ConfigManager.Get( System.Config.Relation Applications For details on the available properties in the Schema and Relations collections, please refer to the XML schema definition document. Configuration Item and Configuration Collection The concepts defined by the schema (Config Type, Item Collection, Item) are expressed in the form of interfaces, in order to ensure that all configuration information can be accessed by administrative tools in a generic manner.   Configuration Item: IConfigItem interface public interface System.Config.IConfigItem : ICloneable {  Object this[int PropertyIndex] {get,set};  // the value of a Property Count {get}; // the number of properties  void Freeze(); // Makes the item read-only  bool IsFrozen { get }; // indicates if the item is read-only TODO: add detailed description of all the methods Should we make access to related config types obligatory? Configuration Collection: IConfigCollection interface public interface System.Config.IConfigCollection : ICloneable {  void  Add(IConfigItem Item);  // Adds an Item to the Collection  IConfigItem this[int Index] {get,set}; // Retrieves the Item   void Insert(int Index, IConfigItem Item); // Inserts an Item at position Index  void Remove(int Index);  // Removes an Item IndexOf(IConfigItem Item); // retrieves the index of a config item  void Clear();  // Removes all Items from the Collection  Count {get};  void  Freeze(); // makes the collection read-only  bool IsFrozen(); // indicates if the collection is read-only TODO: add detailed description of all the methods Need to sync up with new IList interface. Should we use code access security to protect the system from untrusted callers (i.e Clone before returning a cached config object)? How do we expose the schema itself for totally generic/late bound consumers? Of course  Schema ) just works but we may want an easier mechanism to discover properties, maybe on the collection object? Should we make access to related config types obligatory? A Config Collection that contains a single Config Item can be implicitly cast into a Config Item object. This enables intuitive coding for queries that always return a single Config Item (Example: query by full primary key). Can we make this cast part of the interface definition?  Base Configuration Objects The Configuration System provides a standard implementation of both Configuration Collection and Item objects: class System.Config.BaseConfigItem : IConfigItem, ICollectionICloneable public BaseConfigItem(LevelOfService losint ObjectCount); // all IConfigItem / ICollection methods class System.Config.BaseConfigCollection : IConfigCollection, ICollection public BaseConfigCollection(LevelOfService los); // all IConfigCollection / ICollection methods The Base Configuration Objects require that a Config Type be provided (via the IConfigCollection.ConfigType field), and that a schema for this Config Type be available through the Configuration Manager. If the behavior Wiring information does not specify a class to be used for a specific Config Type, the configuration manager returns Base Configuration Objects upon requests for this Config Type. Level Of Service The valid flags for Configuration Objects and their semantics are: LevelOfService Collection Allow reading of data Allow reading of data Write Allow changes to property values Allow addition of items Delete Invalid (Exception) Allow deletion of items from a collection NoValidation Performs no validation of property changes against edit rules in the schema Performs no validation of referential integrity (Primary Key semantics are still enforced) All other flags Invalid (Exception) Invalid (Exception) Do we want to use LoS for this or should we define another enumeration? TODO: need to spec out the exact semantics for property and relation validation. Strongly typed Configuration Objects The Configuration System generates two managed classes for each Config Type defined in the schema: A Configuration Item class with name  <ConfigType>Config  and a Configuration Collection class with name  <ConfigType>Collection . The Item class has fields for each of the properties and the fields are typed according to the type of the property. The Collection class has overridden methods for every method in IConfigCollection that uses IConfigItem, using the Item collection class instead of IConfigItem. <ConfigType> should really be the  PublicRowName PublicTableName . Need to update schema section accordingly. The generated classes derive from the ConfigItem and ConfigCollection base classes respectively. The behavior Wiring information for this Config Type must indicate the name of the Item and Collection class so that the Configuration Manager can instantiate and return the correct class(es). Generating Strongly Typed Configuration Objects The Configuration System provides a class (name and methods tbd) that generates strongly typed Configuration Objects for a specific Config Type. The classes are generated into a regular assembly (a DLL), that can be deployed as any other COM+ 2.0 class. The assembly must be within the assembly resolution scope of the Application Domain in which the Configuration Manager is invoked. A command line utility is provided that enables creating the objects at build time, typically at schema compilation time. Although technically feasible, no requirements are known to generate these objects automatically (on the fly) upon request. Custom Configuration Objects Any class that implements the IConfigItem or the IConfigCollection interfaces can be used with the Configuration System. Most interceptors interact with the Configuration Objects only through these interfaces. However it is possible to write specific interceptors that interact with Custom Configuration through arbitrary custom interfaces and methods. Custom configuration objects can derive from the Base Configuration Objects, the Strongly typed Configuration Objects or simply implement the IConfigItem/IConfigCollection interfaces in whichever way they see fit. Need to test that the generic interceptors work with arbitrary IConfigItem/IConfigCollection implementations. Should we provide utility classes that make it easy to add validation functionality to custom IConfig* implementations? If many scenarios require storing config information in completely customized/optimized data representations, this may be a good approach. Another approach is to provide a rich set of base config object implementations that provide common data structures. Should we allow custom objects to be instantiated from a config collection instead of forcing them to also be the collection object? Arbitrary Custom Objects in the Configuration Manager It is possible to use arbitrary objects (i.e. not implementing IConfigItem or IConfigCollection) within the Configuration System. Many standard interceptors may not work with these objects, but the Configuration Manager is largely agnostic of specific signatures of the objects returned from the last interceptor in the chain. Specifically caching of request results works also for arbitrary objects. Administrative tools will not be able to deal with arbitrary objects, nor is it guaranteed that the configuration information that these objects represent can be discovered via schema. Need to test that arbitrary objects work. How can we ensure that arbitrary objects in the cache are read-only? Configuration Interceptors The behavior Wiring information defines a chain of interceptors to be used for each Config Type. The Configuration Manager invokes the interceptors for Get and Write requests. Interceptors are stateless classes, i.e. they do not retain any invocation-specific state between method invocations. The Configuration Manager will create one or more interceptor instances and reuse them as it sees fit. The interceptors are responsible for their own synchronization. Interceptors must provide a default constructor. We really only use one instance at this time. Will we ever want to use more than one? Do we need/want to support a wiring flag that indicates that an interceptor wants to be stateful? Singleton interceptors (i.e. guaranteed at most one instance per app domain)? interface System.Config.Interceptors.IConfigReaderInterceptor {  Object Read( String ConfigType, Selector Selector, LevelOfService LoS, Object currentPreviousObjectConfig, // for chained interceptors: config read by previous // interceptor. NULL for store interceptors //interface System.Config.Interceptors.IConfigWriterInterceptor { //void  Write(IAdminCollectionObject adminConfigCollection, LevelOfService Los); Write interceptors are not currently implemented. public struct System.Config.Interceptors.RequestParams{ public String configType; public Selector selector; public LevelOfService los; interface System.Config.Interceptors.IConfigTransformerInterceptor {    voidRequestParams  Transform(ByRef String ConfigTypeKey, ByRef Selector Selector, ByRef LevelOfService LoS);  Should we use a struct as a return value instead of using ByRef? These method names are still under discussion. Should we split these into separate interfaces and refer to the resulting interceptor types more formally? Read operations A read operation read (i.e. an invocation of ConfigManager.Get or ConfigManager.GetEmpty) consists of three separate stages: A transform stage, in which zero or more interceptors can modify Config Type, Selector and LevelOfService before any data is retrieved. A read stage, in which at most one interceptor creates an initial, typically writeable Config Object and typically populates it with configuration data. A validation stage, in which zero or more interceptors can validate or modify the initial Config Object Need a better term for  validate , since these interceptors can do much more than just validation The behaviorWiring information for a Config Type declares the stages in which an interceptor is to participate.  The Configuration Manager controls the read operation and performs the three stages in order. In each of the stages the Configuration Manager only invokes interceptors that match the Config Type and Selector prefix being requested. It first invokes the interceptors for the Transform stage, in the order indicated in the Wiring behavior information. After invoking each interceptor it validates if the Config Type or Selector have changed, and if either have changed, it restarts the read operation for the new Config Type / Selector. If the Transform stage is completed without Config Type/Selector changes, the Configuration Manager invokes the interceptors that are marked to participate in the Read stage, again in the order indicated in the wiring behavior information.  As soon as one of the interceptor returns a Config Object, the Configuration Manager finishes the Read stage. If none of the interceptors return a Config Object, the entire read operation fails and the Configuration Manager raises an exception. The Configuration Manager then invokes the interceptors marked to participate in the Validation stage, again in the order indicated in the Wiring behavior information. After the Validation stage, the Configuration Manager sets the Selector and Config Type on the resulting Config Object (iff the Config Object implements the IConfigCollection or IConfigItem interface). If the LevelOfService indicates read-only, the Config Manager then converts the Config Object into read-only (by calling the ConvertToReadOnly method), before adding it to its cache (again obeying the LevelOfService). Write operations Need to add description of write details. Tbw (Stages: Transform, Validate, Write) Methods in details Need to describe the methods and their parameters. Typical usage patterns for Configuration Interceptors Need to fill these in. Single interceptor for a Key/Protocol combination 1 of n  interceptors for a Key/Protocol combination Chain of n interceptors for a Key/Protocol combination Hierarchy Interceptors Merge Interceptors Storage Interceptors Generally useful Interceptors Native Catalog Storage Interceptor This interceptor allows the managed config manager to obtain information from the native catalog. This is used to bootstrap the managed config system without the need to port the existing native interceptors (XML, CLB etc.). Schema Validation Interceptor This interceptor can be used in the validation stage to validate the contents of a config collection against the schema constraints for the config type, i.e. primary key, edit rules, relations to other collections etc.  Administrative Interfaces This section is just a collection of thoughts/fragments. Need to flesh out. The interfaces use the following class to facilitate handling of Primary Keys: class System.Config.ItemKey {  ItemKey(String PrimaryKey); // String of the form  <Name>=<Value>;<Name>=<Value>;...  Implicit op (String PrimaryKey);  Object [String Name] [get,set];  String ToString(); Can/should we use a Dictionary class instead? Is this class merely derived from Dictionary? public interface System.Config.IAdminItem {  ItemKey  PrimaryKey [get]; // the values of the properties making up the // Primary Key of the Item  String Name {get}; // the value of the Name property of the Item  Object this[String PropertyName] {get,set}; public interface System.Config.IAdminCollection {  void  Add(IConfigDataItem Item);  // Adds an Item to the Collection  IConfigItem  Add(ItemKey PrimaryKey);  // Adds a new Item to the Collection, // setting the Primary Key to the values  // in  PrimaryKey  IConfigItem this[ItemKey PrimaryKey]; // Retrieves the Item whose Primary // Key matches  PrimaryKey  void Remove(ItemKey PrimaryKey);  // Removes the Item matching  PrimaryKey // from the Collection (or marks the Item for  // deletion, if LevelOfService & Delete). // In either case, the deleted Item is not visible through the standard // collection methods, only through the  GetDeletedItems  enumerator.  void Remove(IConfigItem Item); // Removes the   from the Collection // (or marks it for deletion)  void Clear();  // Removes all Items from the Collection  // (or marks them for deletion)  String ConfigType [get, set]; // Config Type of all Items in this Collection  String Selector [get, set];  // Selector used to retrieve the Collection Count();  IEnumerator  GetEnumerator(bool AllowRemove);  IEnumerator  GetChangeList (bool AllowRemove); // Returns the Items that have been // marked for deletion using on of the Remove methods or the Clear method  IConfigCollection GetRelated(String RelatedConfigType, ItemKey PrimaryKey);  // Retrieves the Collection related to the Item  PrimaryKey  in this Collection  IConfigCollection GetRelated(String RelatedConfigType, IConfigItem Item); // Retrieves the Collection related to the Item   in this Collection  Object Clone(); // Creates an independent Clone of the Collection object Wiring Information Details Wiring information is defined in the form of a Configuration Collection. The schema for the wiring information is as follows: <CollectionMeta InternalName="Wiring" PublicRowName="Wiring">  <PropertyMeta InternalName="ConfigType"  Type="WSTR" MetaFlags="PRIMARYKEY"/>  <PropertyMeta InternalName="InterceptorOrder"  Type="UI4"  MetaFlags="PRIMARYKEY"/>  <PropertyMeta InternalName="Protocol"  Type="WSTR" MetaFlags="PRIMARYKEY"/>  <PropertyMeta InternalName="Interceptor"  Type="WSTR"   <PropertyMeta InternalName="InterceptorStages" Type="UI4"     <EnumMeta InternalName="Read" Value="0x0001" />    <EnumMeta InternalName="Write"     Value="0x0002    <EnumMeta InternalName="Transform" Value="0x0004" />    <EnumMeta InternalName="Validate"  Value="0x0008" />    <EnumMeta InternalName="Merge"     Value="0x0010" />  </PropertyMeta>  <PropertyMeta InternalName= Flags  Type=    <EnumMeta InternalName="ApplyDuringRead" Value="0x0001" />    <EnumMeta InternalName="ApplyDuringWrite"     Value="0x0002    <EnumMeta InternalName="ApplyWhenNoValidation" Value="0x0004" /> </PropertyMeta> </CollectionMeta> This is not the final wiring schema. Utility Classes Need to define these. PrimaryKeyFromItem (ConfigType, IConfigItem) NameOfItem(ConfigType, IConfigItem) ValidateCollection GetPropertyIndexFromName Related Specs Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History October 4, 1999 Rev 0.1 (MarkusH): Created. October 13, 1999 Rev 0.2 (MarkusH): Updated to reflect current state of discussions: Key -> Config Type, Selector object, Transform/Read/Write/Validate, clarified read/write stages, castability of singleton collections into items, added rudimentary caching section. October 18, 1999 Rev 0.3 (MarkusH): Trimmed down IConfigCollection/Item interfaces. Moved other functionality to IAdminCollection/Item interfaces. Added Selector, URLSelector, QuerySelector class details. Added section on utility classes. October 20, 1999 Rev 0.4 (MarkusH): Added Count/IsFrozen methods to IConfigItem. October 22, 1999 Rev 0.5 (MarkusH): Added IsObjectCached and GetEmptyConfigCollection/Item methods. Added Clone method to config objects (Merge interceptor needs to clone the parent config). Changed interceptor methods, factored into separate interfaces. Added RequestContext object to support intermediate result registration for merge interceptors. Added InterceptorStages to wiring info. Changed of classes capitalization to mixed case (UrlSelector). Added clarification that interceptors are stateless. October 25, 1999 Rev 0.6 (MarkusH): Moved RequestContext to implementation detail section in Hierarchy/merge spec. Added Flags property for wiring info section. Clarified Selector base class and selector handling. Added section on generally useful interceptors. Changed title to  URT Config System Architecture November 2, 1999 Rev 0.7 (MarkusH): Incorporated initial feedback: custom methods for runtime consumers on separate objects?; Selector object overhead. IList interface. November 14, 1999 Rev 0.8 (MarkusH): Changed Wiring to Behavior. Updated classes/interfaces to reflect implementation.  The ConfigType was previously referred to as the  , but this terminology was multiply overloaded (Primary Key, ICollection method etc.).  In fact, the configuration system treats the schema information as just another piece of configuration information, and obtains it through the exact same extensibility mechanisms that apply to other configuration information. Only the  schema for the schema  is hard coded in most parts of the Configuration System. The Configuration System uses this flexibility to compile a core schema - that is known to the system at  ship time into a compact, binary representation stored inside the system binaries themselves. Other schema information is merged with the core schema using the standard configuration system mechanisms.  Even though typically the incoming config object is just modified and returned, an interceptor can also choose to create a new config object and populate it in whatever way it sees fit, including copying data from the incoming config object. Page   PAGE   NUMPAGES  o~h~aWa x;&0J x;&cH x;&cH
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\urt configuration.ppt ===
URT Configuration Markus Horstmann Lead Program Manager The Problem Space Fragmented application model Web apps, COM apps etc Fragile integration due to duplication of data Unspecific consistency rules No single point of admin (Ex.: IIS5/COM+) Multiple management APIs exposed to customers Duplication of effort between teams Stores, logic, APIs, tools The Problem Space Goals for URT Config Zero-admin for the end-user (wherever possible) Zero-install: just browse to the app Simplicity for the (server) administrator Small number of complementary concepts Text based configuration files, notepad editable  Zero registration, "XCOPY" deployment URT Config Goals (2) URT Config Goals (3) Uniform config model across URT features Avoid fragmentation of the Win32 platform! Same concepts, same text format, same config API etc. Isolate core system routines from specific stores and transformation logic Avoid redundancy: UI, config interface, system Strategy for URT Config Use Catalog abstraction for all URT configuration information Single namespace, common concepts etc. Single configuration API built on top of catalog Single administrative UI Catalog Separate transformation logic from physical store Data store abstraction technology Storage abstraction: relational data model Location abstraction: query can change location Merge/validation logic abstraction Enhanced schema (XML schema/data based) Edit rules for Config API, relationships etc. Configuration Store implementations Configuration API Managed code, collection/dictionary oriented Catalog in the URT Configuration Stores Text files: XML data URT meta-data engine: module/assembly meta-data CompLib 1.0: relational store (binary format) RegDB: transactional store, built on CompLib Under investigation for URT 1.0: IIS meta-base (XSP needs to run on IIS5) Directives (XML? INI-style?) Store for dynamic state (i.e. Subscriptions) Secure (encrypted) store: passwords, code access etc Registry: legacy? Interop? Configuration Logic Attribute consistency enforced by logic tables Every virtual table defined in schema has  1 data table, N logic tables Specified in wiring DB Allows logic to be plugged together / reused Catalog Configuration Merge Hierarchy of XML files (containers) Machine -> site -> application -> directory Contribute to logical tables (entities) Merge/inheritance semantics Override/final: policies (bandwidth, security) Add/remove/clear: ScriptMaps etc Others can be added via logic tables Configuration Caching What Does the Catalog Team Provide? Query abstraction layer (table dispenser, wiring) Managed & Unmanaged Core data stores (XML, RegDB, DLLs, etc.) Common, reusable logic Merging/inheritance rules (final/override, add/remove) Persistent caching Change notification Others as identified based on requirements Configuration APIs Work with URT teams to ensure config coherency What Does Each URT Team Provide? Catalog Status Drops have been given to Ducttape, OP and fusion Starting broader, daily builds/drops on 8/2: XML extensible schema / wiring XML extensible config cook down Logic table plug-ins (three method for typical LT) Managed and unmanaged catalog APIs CompLib (binary) & RegDB (binary + Tx) stores Change notification Details on http://appsrv/asconfig. Alias: URTConf Towards URT November Release Summary URT Config Status (1) URT Config Status (2) URT Config Status (3) VS7 Config Status Questions? Web site: http://appsrv/asconfig Alias: URTConf Contacts: MarkusH, RCraig, VanVan Click to edit Master title style Click to edit Master text styles Second level Third level Fourth level Fifth level System Runtimes  (Managed/Unmanaged) Data Store Abstraction (Unmanaged) Validation / Merge Logic (Unmanaged) Applications (Managed) Config APIs (Managed) Config Files Catalog API (Managed/Unmanaged) Other Config stores (cache, volatile data, secure, legacy) Assemblies & DLLs Config Schema AS Replication, AS UI etc. Data Table Store Validation Logic Caching Logic Notification Logic Merge Logic Catalog Slide Not defined Managed? Need definition Security Not defined Managed Need definition Context Start work post M10 Not defined Unmanaged Loader Catalog Drop Schema Access Design in progress Managed Design in progress Managed Same as XSP? WebServer Catalog Drop Schema Access Integrating Defined Unmanaged DuctTape Catalog Drop Schema Access Some defined Managed Messaging Integrated Defined Managed Needs definition Managed Remoting Managed WFC Managed Properties? Managed Message Queue Objects Managed XDO DSNs URT Configuration Markus Horstmann Markus Horstmann Microsoft PowerPoint Times New Roman URT Configuration Times New Roman Markus Horstmann& Lead Program Manager "System On-screen Show Microsoft Internal Times New Roman Symbol Default Design URT Configuration The Problem Space The Problem Space Goals for URT Config URT Config Goals (2) URT Config Goals (3) Strategy for URT Config Catalog Catalog in the URT Configuration Stores Configuration Logic Catalog Configuration Merge Configuration Caching What Does the Catalog Team Provide? What Does Each URT Team Provide? Catalog Status Towards URT November Release Summary URT Config Status (1) URT Config Status (2) URT Config Status (3) VS7 Config Status Questions? Fonts Used Design Template Slide Titles _PID_HLINKS Markus Horstmann
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\src\core\catinproc_iiscfg\binplace.txt ===
iiscfg.dll    retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\urtconfigurationrecipe.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Introduction Title _PID_GUIDIntroduction Robert Craig Normal.dot Robert Craig Microsoft Word 8.0S5&,S6S5&+S6URT Configuration Recipe  (a.k.a. Making A Bunch of Silos Look Like One Product) Robert Craig Microsoft Confidential  TOC \o "1-3"  Introduction  PAGEREF _Toc453518200 \h  Part I: Ducttape  PAGEREF _Toc453518201 \h  The Configuration Manager  PAGEREF _Toc453518202 \h  The Cook-Down Process  PAGEREF _Toc453518203 \h  The XML-based Configuration Files  PAGEREF _Toc453518204 \h  Introduction (a.k.a. Why Text?  Why Binary?  Why Both?) The plan moving forward is to express configuration in text-based configuration files.  These text-based files become the  database of record  for configuration on a system.  Text-based configuration is attractive for numerous reasons: Configuration can be altered simply by editting text files: learning an api and writing code is not necessary. Configuration can be easily copied from one computer to another. Configuration can easily be backed up and restored. Configuration can manipulated remotely from extremely thin clients via tools as telnet. Configuration can be checked into a source control system as part of a development effort. Changes to configuration can be easily diff ed provided a history of snap-shots are maintained. Of course, a purely text-based configuration approach has various problems too: Not all configuration required by the underlying system can be expressed in text. The performance of reading configuration from text totally sucks. The performance of reading configuration from multiple text files sucks more. Each time configuration is read from text, that configuration must be fully validated. A user can totally cripple a system with innocent mistakes. Implementation/computer-specific configuration should not be exposed to users (provided it can be derived). To retain the advantages of text-based configuration and balance out the disadvantages, we employ a cookdown process, where text-based configuration is validated and cooked into one or more efficient, compact, binary, persisted caches.  The key design points of this cookdown model include: Text-based configuration is the  database of record The text-based configuration does not expose  implementation-specific  configuration which is derivable from implementation-agnostic configuration. Cooking the text-based configuration into the cooked-down format does full validation as part of the cooking. The cooked-down format is produced exclusively from the text format.  The cooked down format cannot itself be otherwise re-configured.   The cooked down format is not exposed to customers except via an encapsulating api. A cookdown process which fails because the configuration is totally bogus never results in the invalidation of a previous good cookdown. The details of this cookdown process and when it happens is encapsulated from the runtime system consuming the configuration. The runtime system consuming configuration only consumes from the cooked-down format. The cooked-down format consumed by the runtime system is always guaranteed to be  correct .  This means that vast volumes of code attempting to deal with bogus-ness need not be scattered throughout the runtime system. This cookdown approach retains the advantages of a text-based configuration approach and corrects the disadvantages: Configuration not expressible in text is still consumable by the runtime system. The performance of reading configuration text and reading from multiple files can be vastly improved. The process of performance improvements is encapsulated from the runtime system. Configuration validation only occurs during cookdown and cookdown need not happen each time configuration must be read. A user cannot cripple the system with bogus configuration provided a previously good cooking exists. Implementation- and computer-specific internal configuration is not exposed to users. Simple tables are used to both implement and encapsulate this cookdown process.  They encapsulate validation and transformation logic.  They also serve up the cooked configuration to the runtime system.  Because they encapsulate storage, callers are insulated from storage dependencies.  The runtime system sees the expected configuration.  Users can alter configuration either via editing text directly or via a helpful api.  This approach allows the runtime system to focus on being a runtime system, while the configuration system does its job. Part I: Ducttape The Configuration Manager (a.k.a. Encapsulating Configuration Further) The configuration manager (config_manager.cxx) encapsulates the process of extracting configuration for sites, application pools, and applications from the metabase and feeding that configuration into the ul-and-worker manager in the kernel.  When the ducttape service starts, the configuration manager is initialized.  Within this initialization, the configuration manager feeds the configuration for all application pools (one at a time), then all sites (one at a time), then all applications in each site (one at a time) into the ul-and-worker manager. The configuration manager is currently tied to the metabase.  It also implements a lot of validation logic.  The goal is to encapsulate this code from configuration storage, the cookdown process, and validation logic.  Here is a proposed code snippet which accomplishes this encapsulation via simple tables (error handling omitted): #define cAPPPOOLS_BASEVERSION #define cSITES_BASEVERSION #define cAPPS_BASEVERSION static const ULONG aiAppPoolColumns [] = {  iAPPPOOL_NAME,  iAPPPOOL_PERIODIC_RESTART_TIME, iAPPPOOL_PERIODIC_RESTART_REQUESTS, iAPPPOOL_MAXPROCESSES, iAPPPOOL_PINGING, iAPPPOOL_IDLETIMEOUT, iAPPPOOL_RAPIDFAIL_PROTECTION static const ULONG cAppPoolColumns = sizeof (aiAppPoolColumns) / sizeof (ULONG); static const ULONG cmaxAppPoolColumns = iAPPPOOL_RAPIDFAIL_PROTECTION + 1; static const ULONG aiSiteColumns [] = {  iSITE_ID,  iSITE_BINDINGS static const ULONG cSiteColumns = sizeof (aiSiteColumns) / sizeof (ULONG); static const ULONG cmaxSiteColumns = iSITE_BINDINGS + 1; static const ULONG aiAppColumns [] = {  iAPP_SITE,  iAPP_APPPOOL, iAPP_URL static const ULONG cAppColumns = sizeof (aiAppColumns) / sizeof (ULONG); static const ULONG cmaxAppColumns = iAPP_URL + 1; CComPtr<ISimpleTableDispenser2> pISTDisp; ULONG cBaseVersion; ULONG HRESULT CComPtr<ISimpleTableRead2> pISTAppPools; void* apvAppPoolValues [cmaxApppoolColumns]; WCHAR* wszAppPoolName; APP_POOL_CONFIG AppPoolConfig; CComPtr<ISimpleTableRead2> pISTSites; void* apvSiteValues [cmaxSiteColumns]; ULONG* acbSiteValues [cmaxSiteColumns]; CComPtr<ISimpleTableRead2> pISTApps; void* apvAppValues [cmaxAppColumns]; hr = GetSimpleTableDispenser (ePRODUCT_URT, fST_LOS_READONLY, &pISTDisp); hr = pISTDisp->GetTable ( didURTGLOBAL, tidAPPPOOLS,  0, 0, eST_QUERYFORMAT_CELLS, fST_LOS_COOK, (void**) &pISTAppPools #ifdef _DEBUG hr = pISTAppPools->GetTableMeta (&cBaseVersion, NULL, NULL, NULL); if (cAPPPOOLS_BASEVERSION != cBaseVersion) return E_UNEXPECTED; #endif // _DEBUG for (i = 0;; i++) hr = pISTAppPools->MoveToRowByIndex (i); if (E_ST_NOMOREROWS == hr) break; hr = pISTAppPools->GetColumnValues (cAppPoolColumns, aiAppPoolColumns, NULL, apvAppPoolValues); wszAppPoolName = (WCHAR*) apvAppPoolValues[iAPPPOOL_NAME]; AppPoolConfig.PeriodicProcessRestartPeriodInMinutes = ((ULONG)*(apvAppPoolValues[iAPPPOOL_PERIODIC_RESTART_TIME])); AppPoolConfig. PeriodicProcessRestartRequestCount = ((ULONG)*(apvAppPoolValues[iAPPPOOL_PERIODIC_RESTART_REQUESTS])); AppPoolConfig.MaxSteadyStateProcessCount = ((ULONG)*(apvAppPoolValues[iAPPPOOL_MAXPROCESSES])); AppPoolConfig.PingingEnabled = ((ULONG)*(apvAppPoolValues[iAPPPOOL_PINGING])); AppPoolConfig.IdleTimeoutInMinutes = ((ULONG)*(apvAppPoolValues[iAPPPOOL_IDLETIMEOUT])); AppPoolConfig.RapidFailProtectionEnabled = ((ULONG)*(apvAppPoolValues[iAPPPOOL_RAPIDFAIL_PROTECTION])); hr = GetWebAdminService()->GetUlAndWorkerManager()->CreateAppPool (wszAppPoolName, &AppPoolConfig); hr = pISTDisp->GetTable ( didURTGLOBAL, tidSITES,  0, 0, eST_QUERYFORMAT_CELLS, fST_LOS_COOK, (void**) &pISTSites #ifdef _DEBUG hr = pISTSites->GetTableMeta (&cBaseVersion, NULL, NULL, NULL); if (cSITES_BASEVERSION != cBaseVersion) return E_UNEXPECTED; #endif // _DEBUG for (i = 0;; i++) hr = pISTSites->MoveToRowByIndex (i); if (E_ST_NOMOREROWS == hr) break; hr = pISTSites->GetColumnValues (cSiteColumns, aiSiteColumns, acbSiteValues, apvSiteValues); hr = GetWebAdminService()->GetUlAndWorkerManager()->CreateAppPool ( ((ULONG)*(apvSiteValues[iSITE_ID])), (BYTE*) apvSiteValues[iSITE_BINDINGS], acbSiteValues [iSITE_BINDINGS] hr = pISTDisp->GetTable ( didURTGLOBAL, tidAPPS,  0, 0, eST_QUERYFORMAT_CELLS, 0, (void**) &pISTApps #ifdef _DEBUG hr = pISTApps->GetTableMeta (&cBaseVersion, NULL, NULL, NULL); if (cAPPS_BASEVERSION != cBaseVersion) return E_UNEXPECTED; #endif // _DEBUG for (i = 0;; i++) hr = pISTApps->MoveToRowByIndex (i); if (E_ST_NOMOREROWS == hr) break; hr = pISTApps->GetColumnValues (cAppColumns, aiAppColumns, NULL, apvAppValues); hr = GetWebAdminService()->GetUlAndWorkerManager()->CreateApplication ( ((DWORD)*(apvAppValues[iAPP_SITE])), (WCHAR*) apvAppValues[iAPP_URL], (WCHAR*) apvAppValues[iAPP_APPPOOL] Here is a brief description of what the code snippet above does.  First note that 3 simple tables are used: the sites, apppools, and apps tables.  No query is specified in GetTable for any of the tables, meaning that all sites, all app pools, and all apps respectively are retrieved. For each table, the expected base version is verified in debug builds using GetTableMeta.  This is required to insure none of the expected columns were re-ordered or removed. For each table, we navigate to each row (ie: each app pool, site, or app) with MoveToRowByIndex.  For each row, we retrieve all column values of interest with GetColumnValues.  Values of interest are appropriate cast or copied, and the configuration for each row is passed into the ul-and-worker manager. The Cook-Down Process (a.k.a. Under the Covers) So far as the configuration manager is concerned, all sites, app pools, and apps are extracted from the persisted cooked cache via simple tables.  What happens under the covers though?  Basically, when the cooked cache is read, we want allow for the opportunity to re-cook the cache if the configuration changed.  All the configuration manager does to indicate this behavior is specify the fST_LOS_COOK level-of-service.  The cook-down magic occurs in the table s implementation dispenser, which is invoked during the binding process within the GetTable calls. In general, if the text-based configuration has not changed, the configuration is simply served directly from the cooked cache.  Here is the algorithm used: If fST_LOS_COOK is not provided, just fetch the configuration from the cooked cache.  Otherwise: If the cooked cache does not exist (ie: either this is a clean product installation or it was deleted), cook the configuration from the database-of-record into version 1 of the cooked cache and store the date-time stamp of the database-of-record, then serve up the configuration from the cooked cache.  Otherwise: Check the database-of-record against the date-time stamp in the cooked cache, and if it changed, begin a new cookdown process into a new version of the cooked cache: If the cookdown succeeds, eliminate the old cache, and serve up the configuration from the new cache, again recording the date-time stamp. If the cookdown fails catastrophically, discard the new cache, update the date-time stamp in the old cache, and serve up the configuration from the old cache. Otherwise, if the date-time stamp is still current, simply serve up the information from the persisted cache. During the cookdown, rich validation of the configuration occurs, as well as any necessary transformations and expansions.  Problems with the configuration for individual sites, app pools, or apps are logged in detail.  If the problem is severe enough, the particular site, app pool, or app does not get cooked and therefore does not appear at runtime.  Only for catastrophic problems is the cookdown abandoned entirely. The XML-based Configuration Files (a.k.a. Show Me The Text!) Here are snippets of the relevant configuration files.  Note that properties which are optional and which were omitted are properly defaulted. Sites configuration (from one or more *.sites files located at the well-known root): <SitesConfiguration xmlns="x-schema:SitesConfiguration.Schema"> <SiteConfiguration Name= MySite PathRoot= c:\mysite <Binding Sting= </SiteConfiguration> </SitesConfiguration> Application pools configuration (from one *.apppools file located at the well-known root): <ApplicationPoolsConfiguration xmlns="x-schema:ApplicationPoolsConfiguration.Schema"> <ApplicationPoolConfiguration Name= MyPool RestartTime= MaxProcesses= Pinging= </ApplicationPoolsConfiguration> Application configuration (from multiple *.appcfg files distributed throughout the file system): <ApplicationsConfiguration xmlns="x-schema:ApplicationsConfiguration.Schema"> <ApplicationConfiguration Name= MyApp ApplicationPool= MyPool </ApplicationsConfiguration> Sites configuration can be kept in 1 to n files, where n is the number of sites.  Any .sites file can have one or more sites configurations.  One factor in the decision of how few or how many .sites files to have is security.  (For example, assume 10 sites.  If each were owned by a different person/group, each site configuration should be in its own file so that it can be secured such that only the owner(s) and system administrator can change it.  If the same group owned 7 sites, the configuration for those 7 sites could all be in one file.) <todo/> Discuss security of XML files and CLB Validation Rules And Transformation Logic (a.k.a. !!!) <todo/> PAGE   PAGE   ~vnfc`Z }ztqnkheb_\YV
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\urtconfdec.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft URT Configuration in the December release Title _PID_HLINKSURT Configuration in the December release Markus Horstmann This documents collects the configurable items in the URT December'99 release. COM+ Template.dot Markus Horstmann Microsoft Word 9.06X[Xh ;X[Xh 1b<z+ u<X[Xh boIZA alJlR MX[Xh 0rUz~ VX[Xh TGNa8 Tf"f  cRl:6 krmx_ pX[Xh ,Lyvo: @\\red-prn-12\CORP0066 44E/1MC1 NPI632532 Ne00: winspool \\red-prn-12\CORP0066 44E/1MC1 NPI632532 \\red-prn-12\CORP0066 44E/1MC1  Letter \\red-prn-12\CORP0066 44E/1MC1  LetterID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  URT Configuration in the December release October 15, 1999, Draft Rev 0.4  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This documents collects the configurable items in the URT (COM+ 2.0) December '99 release. TOC \o "1-3" Goals  PAGEREF _Toc464647425 \h  Current files/layout  PAGEREF _Toc464647426 \h  Machine-level configuration files  PAGEREF _Toc464647427 \h  Per-user configuration files  PAGEREF _Toc464647428 \h  Per-application configuration files  PAGEREF _Toc464647429 \h  Per-directory configuration files  PAGEREF _Toc464647430 \h  Per endpoint configuration files  PAGEREF _Toc464647431 \h  Per-assembly  PAGEREF _Toc464647432 \h  Suggested layout  PAGEREF _Toc464647433 \h  Machine-level configuration files  PAGEREF _Toc464647434 \h  Per-user configuration files  PAGEREF _Toc464647435 \h  Per-application configuration files  PAGEREF _Toc464647436 \h  Per-directory configuration files  PAGEREF _Toc464647437 \h  Per-endpoint configuration files  PAGEREF _Toc464647438 \h  Per-assembly  PAGEREF _Toc464647439 \h  Changes per team  PAGEREF _Toc464647440 \h  Configuration (MarkusH)  PAGEREF _Toc464647441 \h  Ducttape (EricDe)  PAGEREF _Toc464647442 \h  XSP (GaryBu)  PAGEREF _Toc464647443 \h  Lightning (StevenPr)  PAGEREF _Toc464647444 \h  Messaging (ChrisWhi)  PAGEREF _Toc464647445 \h  Assembly Loader / Fusion (MarkusH/StevenPr)  PAGEREF _Toc464647446 \h  Open Issues  PAGEREF _Toc464647447 \h  Revision History  PAGEREF _Toc464647448 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Goals This document tries to  Provide an overview for users of the December release of what needs to be configured where. Identify potential for unification Current files/layout Machine-level configuration files %windir%\admin.cfg: Fusion assembly version policy %windir%\xspdt\global.xml: Ducttape/WebServer. Directory is really install location of catalog.dll %windir%\System.messaging.cfg: Messaging %windir%\xspdt\.webconfig: XSP. Directory is really the install location of system.ASP.dll ?\op.clb: OP. Binary file, edited through WONS APIs and /or NSADMIN.EXE tool. %windir%\system32\security.cfg: Lightning code access security policy Per-user configuration files %USERPROFILE%\security.cfg: Lightning code access security policy Per-application configuration files <appdomain root dir>\app.cfg: Fusion assembly version policy <appdomain root dir>\appcfg.xml: Ducttape application configuration <appdomain root dir>\.dirconfig: XSP application/directory configuration Per-directory configuration files <appdomain root dir>\<relative URL>\.dirconfig: XSP directory configuration Per endpoint configuration files <app root dir>\<relative URL>\<filename>.mms: messaging endpoint configuration. File may or may not physically exist. Per-assembly <assembly root dir>\<assembly name>.cfg: Managed properties Suggested layout Still need final word on setup locations. Machine-level configuration files All machine-level configuration files reside under the URT installation directory in a  Config  sub-directory. Tentative default installation for URT: %windir%\COMPlus. The machine configuration directory would thus be %windir%\COMPlus\Config, unless overridden by the user. Hereafter we refer to this directory using <machineconfigdir>.  Managed code should obtain this location by calling System.Configuration.ConfigManager.GetMachineConfigDirectory (in MngdIst.dll), rather than hardcoding any paths. Unmanaged code should call the GetMachineConfigDirectory API (catalog.h header, link to cat.lib). <machineconfigdir>\machine.cfg:  Fusion assembly version policy Ducttape/WebServer configuration. XSP configuration when running under Ducttape. Example of a machine configuration file: <?xml version="1.0"?> <configuration xmlns="x-schema:catalog.xms">   <AppPoolList>     <AppPool AppPoolID="AppPool32"               PeriodicRestartTime="211" PeriodicRestartRequests="212" MaxProcesses="213"              PingingEnabled="214" IdleTimeout="115" RapidFailProtection="216"/>   </AppPoolList>   <SiteList>     <Site SiteID="304" DefaultAppPoolID="AppPool32"           HomeDirectory="%systemroot%\xspdt_invalid">       <BindingList>         <Binding Name="URLPre34"/>       </BindingList>     </Site>   </SiteList>   <webconfig xmlns=     <!-- xmlns=  only needed when xmlns is specified in <configuration> root element --> <!-- XSP configuration -->   </webconfig>   <BindingPolicy>     <BindingRedir Name="wininet" PK="" Version="0.5.0.10" VersionNew="0.7.0.1"                   NoPublisherPolicy="no"/>   </BindingPolicy> </configuration> <machineconfigdir>\web.cfg: XSP configuration, when running under IIS. <machineconfigdir>\System.messaging.cfg: Messaging configuration <machineconfigdir>\security.cfg: Lightning code access security policy ?\COMPlus\op.clb: OP. Binary file, edited through WONS APIs and /or NSADMIN.EXE tool. Per-user configuration files %USERPROFILE%\Config.cfg: Lightning code access security policy Per-application configuration files <appdomain root dir> is the Application Home directory defined in the Application Domain. All teams use the same semantics. <appdomain root dir>\Config.cfg:  Fusion assembly version policy Ducttape application configuration XSP app/dir configuration Example of an application configuration file ( config.cfg <?xml version ="1.0"?> <configuration xmlns="x-schema:Catalog.xms">   <webconfig xmlns=     <!-- xmlns=  only needed when xmlns is specified in <configuration> root element -->     <!-- XSP configuration goes here -->   </webconfig>   <Application     IsApp="TRUE"     AppEnabled="TRUE"/>   <BindingMode>     <AppBindingMode Mode="normal"/>   </BindingMode>   <BindingPolicy>     <BindingRedir Name="wininet" PK="" Version="0.5.0.10" VersionNew="0.6.0.0" NoPublisherPolicy="no"/>   </BindingPolicy>   <CodeBase>     <CodeBaseHint Name="wininet" PK="" Version="0.5.0.10" CodeBase="http://ie" />   </CodeBase> </configuration> Per-directory configuration files <appdomain root dir>\<relative URL>\Config.cfg: XSP directory configuration Per-endpoint configuration files <app root dir>\<relative URL>\<filename>.mms: messaging endpoint configuration. File may or may not physically exist. Per-assembly <assembly root dir>\<assembly name>.cfg: Managed properties Changes per team Configuration (MarkusH) Rename/move ducttape global configuration file to <machineconfigdir>\machine.cfg. Implement the System.Configuration.ConfigManager.GetMachineConfigDirectory method (to be checked in on 10/13, available in 10/14 config system build). Rename Ducttape app configuration file to  Config.cfg Change root node from  XMLDataStore configuration . Coordinate change with Fusion and Ducttape (default files) and OP (XML schema). Add <web> node under <configuration> node with open schema. Ducttape (EricDe) Rename global configuration file to  machine.cfg : prevent accidental download,  global  sounds like  enterprise global Move  machine.cfg  into <machineconfigdir>. Rename app configuration file to  Config.cfg : prevent accidental download. Change default files in build/setup. Coordinate content with other teams. Requires coordinated checkin with config team. XSP (GaryBu) Rename app/dir configuration file to  Config.cfg Read config from <Configuration> <web  ></web> <configuration/> node. Config team will change their schema to allow for an open <web> element.  Change default files in build/setup. Move machine config file into <machineconfigdir>. Lightning (StevenPr) Move machine security policy to <machineconfigdir>. Potentially: store machine policy in  machine.cfg  file (pending config team investigation, and design of storing serialized classes). Rename user security policy to  Config.cfg . Potentially: adjust format to be the same as machine.cfg format. Messaging (ChrisWhi) Move messaging machine configuration into <machineconfigdir>. Assembly Loader / Fusion (MarkusH/StevenPr) Rename Fusion application configuration file to  Config.cfg : shared with Ducttape, both using catalog => should  just work Move Fusion machine configuration file to <machineconfigdir>. Rename Fusion machine configuration file to  machine.cfg Need to coordinate contents of default files with other teams (if any). Setup Install default machine config file(s) into %windir%\COMPlus\Config directory. Write new registry keys for catalog DLL and machine config directory (per   HYPERLINK "http://appcenter/config/specs/urt1/using urt config.htm"  http://appcenter/config/specs/urt1/using urt config.htm What is the default install location for COM+ 2.0 binaries? Assuming %windir%\COMPlus Needs final sign off from setup team. Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History October 6, 1999 Rev 0.1 (MarkusH): Created. October 8, 1999 Rev 0.2 (MarkusH): Added suggestions from config meeting. Added suggested file layout. Added required changes per-team with owners. October 12, 1999 Rev 0.3 (MarkusH): Resolved last issues. Changed per-app/directory files for  Config.cfg . Added GetMachineConfigDirectory API. Clarified <web> sub-node for XSP config. October 15, 1999 Rev 0.4 (MarkusH): Changed <web> to <webconfig> (on request from XSP). Clarified syntax for <webconfig> tag when using schema validation. Clarified use of web.cfg by XSP only when running under IIS. Added section for Setup changes. All teams (except Setup) have now signed off on this.  Microsoft Confidential Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\old\config beta 1 workitems.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corp. P3: Remove , use prefix instead TitleP3: Remove , use prefix instead Markus Horstmann Normal.dot Markus Horstmann Microsoft Word 9.0bjbjU Feature (done) P1: Check in schema for ASP+ config. Write (done) P1: ConfigManager: Change Write to Put. Add PutItem, PutProperty. P1: Add Delete methods to config manager. P1: Add  ConfigType  and  Selector  property  to IConfigItem P1: Add  Selector  to IConfigCollection Programming model (5/16) P2: Allow for extensible schema: Read XML schema in table dispenser etc. Query vs. Selector cleanup (5/19) P3: Change  FileName Selector  on QuerySelector class  P3: Support  Selector  as a query cell property name P3: Add  Prefix  to query selector class P3: Remove , use selector s Type instead. P3: Add  Prefix  property to URLSelector class; remove Type P3: Add file selector class. P3: Add app domain selector class. P3: Add local machine selector class. Query usability P4: Add support for using property names instead of property indexes to QuerySelector P4: (Internal) Support ConfigType as a query cell and property on the query selector Hierarchy Interceptors P4: Compute merge hierarchy for XSP host. (MarkusH) P4: Compute merge hierarchy for EXE host. (MarkusH) P5: Add support for custom write interceptors. P5: Make InterceptorType part of the PK of MWIRING. Px: Write to a merged view: always write to innermost config file. Px: Retrieve file list for a merged view? Convenience P6: Derive IConfigItem from IList: implement applicable IList methods P6: Derive IConfigCollection from IList: implement applicable IList methods P6: Add support for query cell string parsing to QuerySelector. P6: Rename  IConfigCollection.Delete  method to  RemoveAt Px: Add RemoveByKey to IConfigCollection Px: clean up LevelOfService enum values Px: Add support for  SELECT *  syntax to QuerySelector. DataAdaptor P7: Load/Update methods: do as sample => MarkusH
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\info\old\project 42 administrative framework.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Project 42 Administrative Framework Title _PID_HLINKSProject 42 Administrative Framework Markus Horstmann This document describes the overall architecture for meta-data required by the different parts of URT 1.0. It also describes the actual meta-data attributes for each of the different URT consumers. COM+ Template.dot Markus Horstmann Microsoft Word 9.01b<z+ alJlR 0rUz~ TGNa8 Tf"f  cRl:6 krmx_ @\\red-prn-12\CORP0066 44E/1MC1 NPI632532 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\red-prn-12\CORP0066 44E/1MC1  Letter \\red-prn-12\CORP0066 44E/1MC1  LetterID="{D1F15909-B792-11D1-8998-0080C74D4A95}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9C9E35F35DA361A361A361A361" DPB="5052F9FAFAFAFAFA" GC="0406AD1BD5CED6CED631" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument NewMacrosMacro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText s Ho@ ewMa@  ExtractStyleText Macro  Macro recorded 01/24/98 by Markus Horstmann Extract all paragraphs with style:   MakeCellRed Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellGreen Macro  Macro recorded 02/02/98 by Markus Horstmann  MakeCellYellow Macro  Macro recorded 02/02/98 by Markus Horstmann Attribut e VB_Nam e = "New Macros" Sub Ext ractStyl eText() cription  recor ded 01/2 4/98 by  Markus H orstmann ZProcDa fInvok@e_Func rmal. CInputBo  paragra phs with : ",  Selec -Scree nUpdatin .False Documen@ts.Add indows(1 +Finish d.Clear 'C6s(IJ .Repplace TruHB wdA9pStop atchCas Whole Sound End A[ PB=Exe Copyk Pas)R oop Whil e Not e E`wd}"Attribut e VB_Nam e = "Thi sDocumen 1Templa teProjec hCreat rFals Predec$la "Expose Deriv Customiz14350492a6 1c350492c4 Win16 Win32 COM+ Registration System stdole MSFormsC ThisDocument< _Evaluate TemplateProject Office Project- Module1b NewMacros ExtractStyleText ExtractStyle InputBox SelectionZ Style ScreenUpdating! Documents Windows Activate Finished Findn ClearFormatting ActiveDocument Styles Replacement Forward WrapWy wdFindStop'f MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY Paste EndOf wdStyleNormal MakeCellRed Cells ShadingA Texture wdTextureNone% ForegroundPatternColorIndex wdAutoKV BackgroundPatternColorIndex~ wdRed Options DefaultBorderLineStyle wdLineStyleSingle DefaultBorderLineWidtho wdLineWidth050pt DefaultBorderColorIndex` MakeCellGreen wdGreenb MakeCellYellow wdYellow _B_var_ExtractStyle!1 _B_var_ScreenUpdating1 _B_var_Finished Documentj*\CC:\Program Files\Microsoft Office\Templates\COM+ Template.dotrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\StdOle2.tlb stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office ExtractStyleText VBA332.DLL Extract all paragraphs with style: Macro recorded 01/24/98 by Markus Horstmann Normal.NewMacros.ExtractStyleText^Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> FD31D 1263-0F7 F80C74D04A95 WD#Micro soft   Libprary 08A203-7(015 PTEMP\VB$E\ @"Templ r@Yj@ gram @Files\GKO@ffice\E s@\COM+  .0dotI {2DF8D04 C-5BFA-1 01B-BDE5 ;MSO97. Document" NewMabjbjU title  Project 42 Administrative Framework July 16, 1999 Draft Rev 0.7a  AUTHOR  \* MERGEFORMAT  Markus Horstmann  COMMENTS  \* MERGEFORMAT  This document describes the overall architecture for meta-data required by the different parts of URT 1.0. It also describes - at a high level - the actual meta-data attributes for each of the different URT attribute consumers. TOC \o "1-3" Introduction  PAGEREF _Toc456767064 \h  Guiding Principles  PAGEREF _Toc456767065 \h  Scenarios  PAGEREF _Toc456767066 \h  Web Application ( Parcel Delivery  aka FedEx)  PAGEREF _Toc456767067 \h  Standalone Client App (  PAGEREF _Toc456767068 \h  Browser  PAGEREF _Toc456767069 \h  Object Remoting/Messaging  PAGEREF _Toc456767070 \h  3.4.1 Client to Server  PAGEREF _Toc456767071 \h  3.4.2 Server to Server  PAGEREF _Toc456767072 \h  3.4.3 Cross-Process ( ActiveX EXE  PAGEREF _Toc456767073 \h  Requirements  PAGEREF _Toc456767074 \h  URT 1.0 Administrative Framework  PAGEREF _Toc456767075 \h  Attribute Containers  PAGEREF _Toc456767076 \h  5.1.1 Machine Configuration  PAGEREF _Toc456767077 \h  5.1.2 Site Definition  PAGEREF _Toc456767078 \h  5.1.3 Site Configuration  PAGEREF _Toc456767079 \h  5.1.4 Application Configuration  PAGEREF _Toc456767080 \h  5.1.5 Application Definition  PAGEREF _Toc456767081 \h  5.1.6 Directory  PAGEREF _Toc456767082 \h  5.1.7 Assembly  PAGEREF _Toc456767083 \h  5.1.8 Module  PAGEREF _Toc456767084 \h  Attributed Entities  PAGEREF _Toc456767085 \h  5.2.1 Machine  PAGEREF _Toc456767086 \h  5.2.2 Virtual Site  PAGEREF _Toc456767087 \h  5.2.3 Application Pool  PAGEREF _Toc456767088 \h  5.2.4 Application  PAGEREF _Toc456767089 \h  5.2.5 Assembly  PAGEREF _Toc456767090 \h  5.2.6 Directory  PAGEREF _Toc456767091 \h  5.2.7 Virtual Directory  PAGEREF _Toc456767092 \h  5.2.8 Page / File  PAGEREF _Toc456767093 \h  5.2.9 Module  PAGEREF _Toc456767094 \h  5.2.10 Class  PAGEREF _Toc456767095 \h  5.2.11 Interface  PAGEREF _Toc456767096 \h  5.2.12 Method  PAGEREF _Toc456767097 \h  Container Relationships  PAGEREF _Toc456767098 \h  5.3.1 Containment  PAGEREF _Toc456767099 \h  5.3.2 Inheritance and Override Rules  PAGEREF _Toc456767100 \h  Implementing the Framework: Catalog  PAGEREF _Toc456767101 \h  Configuration APIs  PAGEREF _Toc456767102 \h  Storage Abstraction: Simple Tables and Table Dispensers  PAGEREF _Toc456767103 \h  6.2.1 Table Schema  PAGEREF _Toc456767104 \h  6.2.2 Table Dispenser / Wiring Database  PAGEREF _Toc456767105 \h  6.2.3 Data Tables  PAGEREF _Toc456767106 \h  6.2.4 Logic Tables  PAGEREF _Toc456767107 \h  Runtime APIs  PAGEREF _Toc456767108 \h  Attributes  PAGEREF _Toc456767109 \h  DuctTape  PAGEREF _Toc456767110 \h  7.1.1 M4 Implementation plans  PAGEREF _Toc456767111 \h  7.1.2 Scenario 2: Application Config  PAGEREF _Toc456767112 \h   PAGEREF _Toc456767113 \h  7.2.1 Resource Constraints:  PAGEREF _Toc456767114 \h  7.2.2 Location Settings:  PAGEREF _Toc456767115 \h  7.2.3 Security Settings:  PAGEREF _Toc456767116 \h  7.2.4 Application Runtime Settings:  PAGEREF _Toc456767117 \h  7.2.5 Misc Configuration Settings:  PAGEREF _Toc456767118 \h  7.2.6 ISV Licensing Restrictions  PAGEREF _Toc456767119 \h  Runtime (Lightning)  PAGEREF _Toc456767120 \h  7.3.1 Application Domain & Application Config  PAGEREF _Toc456767121 \h  7.3.2 Assembly Cache (Fusion)  PAGEREF _Toc456767122 \h  7.3.3 Context  PAGEREF _Toc456767123 \h  7.3.4 Channels  PAGEREF _Toc456767124 \h  7.3.5 Security  PAGEREF _Toc456767125 \h  7.3.6 Component Categories?  PAGEREF _Toc456767126 \h  7.3.7 COM Interop  PAGEREF _Toc456767127 \h  7.3.8 Custom Registrar?  PAGEREF _Toc456767128 \h  7.3.9 File Extensions/MIME Types?  PAGEREF _Toc456767129 \h  WebObjects  PAGEREF _Toc456767130 \h  7.4.1 Remoting  PAGEREF _Toc456767131 \h  7.4.2 Naming Service (WONS)  PAGEREF _Toc456767132 \h  7.4.3 Transactions  PAGEREF _Toc456767133 \h  7.4.4 Object Persistence  PAGEREF _Toc456767134 \h  7.4.5 Eventing  PAGEREF _Toc456767135 \h  7.4.6 Example: COM+ 1.0 Attributes  PAGEREF _Toc456767136 \h  Distributed Message Bus (Messaging)  PAGEREF _Toc456767137 \h  7.5.1 Server side  PAGEREF _Toc456767138 \h  7.5.2 Client side  PAGEREF _Toc456767139 \h  7.5.3 Publish/Subscribe  PAGEREF _Toc456767140 \h  IIS 5.0  PAGEREF _Toc456767141 \h  7.6.1 Application Roots?  PAGEREF _Toc456767142 \h  7.6.2 Virtual Directories?  PAGEREF _Toc456767143 \h  Fusion Settings  PAGEREF _Toc456767144 \h   PAGEREF _Toc456767145 \h  7.8.1 Managed Properties  PAGEREF _Toc456767146 \h  7.8.2 Others?  PAGEREF _Toc456767147 \h  Others  PAGEREF _Toc456767148 \h  7.9.1  PAGEREF _Toc456767149 \h  7.9.2 XML Parser?  PAGEREF _Toc456767150 \h  7.9.3 Net Classes?  PAGEREF _Toc456767151 \h  7.9.4  PAGEREF _Toc456767152 \h  7.9.5 IMDB?  PAGEREF _Toc456767153 \h  Related Specs  PAGEREF _Toc456767154 \h  Open Issues  PAGEREF _Toc456767155 \h  Revision History  PAGEREF _Toc456767156 \h  Note: This document is an early release of the final specification. It is meant to specify and accompany software that is still in devel opment. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the func tionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights. Introduction As all reasonably rich platforms, the Project 42/URT platform consists of a set of technologies that are designed and developed by independent teams, often on different schedules and usually with different backgrounds and scenarios in mind. In order to avoid the fragmentation of the current Windows 2000/WinDNA platform, it is necessary to coordinate the different technologies in terms of the programming model(s), as well as the administrative model. This document is concerned about the latter. Guiding Principles simplicity for the administrator, zero-administration for the end-user  zero registration, "XCOPY" deployment  text based configuration files, Notepad editable  uniform model across all URT features  uniform, simple (scriptable), remoteable configuration API (read/write)  application isolation: make applications discoverable and replicatable ("XCOPY *.* /s") Scenarios Need to drive app model(s) to closure! -> MaryKir Web Application ( Parcel Delivery  aka FedEx) A web application has a single application configuration file that always resides in the root directory of the web application. URL Namespace File System  HYPERLINK "http://updserver"  http://updserver C:\wwwroot\updserver Updserver.cfg /Tracking \Tracking Tracking.XSP Tracking.XSP /Order \Order Order.XSP Order.XSP Order_Template.HTML Order.DLL Tracking.DLL Standalone Client App ( The assumption in this document is that a single application configuration file is deployed in the same directory as the EXE and the configuration file name can be derived from the EXE file name (i.e.  foo.exe.cfg Browser Object Remoting/Messaging Client to Server Server to Server Cross-Process ( ActiveX EXE Requirements Support replication Can shared assemblies be exported/redistributed out of the assembly cache? Support  XCOPY  deployment (aka zero-registration) Support secure, application-local storage of sensitive information (passwords etc.). The meta-data interface must accommodate changes to the meta-data schema without requiring a recompile of catalog infrastructure, runtime interfaces, admin interfaces or consumers. The runtime interfaces must be easy/efficient to use for common usage scenarios, i.e. not requiring multiple requests and negotiations/discovery steps for activation. Extensibility for URT Context properties and their attributes  Third party extensibility (app specific settings) Third party extensibility for infrastructure (?) Is this a requirement for URT? URT 1.0 Administrative Framework The URT 1.0 Administrative Framework is built around three top-level concepts: Attribute: a named value, potentially arbitrarily complex. Entity: an entity to which one or more attributes can be applied. Container: a physical location at which attributes are stored. Attribute Containers Attribute containers represent the different physical locations in which attributes are actually stored. The URT 1.0 Administrative Framework distinguishes between different attribute containers. Are there other containers? Per-user? Policy per assembly cache? Machine Configuration Some attributes can be specified for all application on a machine. Some of these attributes provide default values in case an application does not specify a value. Other attributes configure entities that exist only once per machine. Machine level attributes should be avoided whenever possible, because as soon as two application require different values for a machine level attribute, customers are forced to use two separate machines. Site Definition IIS / Ducttape have the concept of a site, that establishes a root URL to use for a set of file system directories and applications. In a typical administrative scenario, a machine administrator (example:  ) creates one or more sites for use by site/application administrators. The machine administrator often wants to specify certain attributes (ex. Bandwidth throttling) that the site/app administrator cannot modify. This needs more discussion with Ducttape / XSP. Site Configuration The Site Config file provides a clean way for the site/application administrator to specify site level attributes, without having access to the machine wide  site directory  and the site definition file. Application Configuration An application in the most general form is defined as the collection of code and it s data running in a URT Application Domain. Hosting environments like XSP, Browsers and the Win32 EXE  Loader  establish application scope by creating an application domain. In many scenarios, a root assembly and all its dependencies do not fully define an application. In XSP/scripting scenarios for example, a script is dynamically compiled and executed without ever formally being authored as an assembly. Every application domain has exactly one configuration file that carries all the configurable attributes for any assemblies that might get loaded into the application domain. The configuration file location is determined at application domain creation time as an explicit parameter to the application domain creation API. Need to get this into the appdomain API! The configuration file is an XML file that can be freely edited using arbitrary tools (including text editors like NotePad). Is there really a one-to-one relationship to Application/Application Domain? Can we provide programmatic control over app configuration to the app domain creator? Through general purpose APIs? In certain dynamic hosting scenarios (Scripting etc.) assemblies are created in memory and on the fly. It wouldn t make sense to force a temporary config file for these cases Is this a separate file from the fusion settings file and the WFC Managed Properties files? How does the configuration file get created? How does the configuration file get updated when new assemblies are copied into the  Application ? In most scenarios updates to the config file should not be required unless the new assembly needs to be configured! How do we secure the configuration file? Signing? File system security? Most scenarios can not require signing of the config file Application Definition Do we need the concept of an application definition that captures the immutable aspects of an app? Is this just a regular assembly (manifest) that is marked (or even implicitly treated) as the root of an application (domain)? It must be possible to add assemblies to an app without explicitly adding them to neither app definition nor app config file! How does an application tie into the assembly cache dependency tracking/refcounting? Directory In web scenarios, certain attributes can be specified to apply to all files in a directory. The directory container holds these attributes. Do we need dedicated physical containers for directories or are directory attributes specified in the application container? Where do file attributes get specified? NTFS file streams have been proposed as one mechanism Are directories always scoped within an application?  Assembly Assemblies group one or more modules into a single logical unit. Every module must be in an assembly as the names of all entities in a module are scoped by the name of the assembly. Assemblies and assembly attributes are generated by development tools and cannot be configured. However, many assembly attributes are merged with and validated against configuration information of the hosting application domain. In URT 1.0, assembly meta-data is stored in a Component Library ( Assembly Manifest ). The Component Library can be stored inside a Win32 PE image or left as a stand-alone file. More details on   HYPERLINK "http://lightning/Specs/admin/Default.htm"  http://lightning/Specs/admin/Default.htm It has been agreed that there are no assembly level configuration files. However, some documents still talk about these Module Attributes can be stored within the module that carries the attributed entities. Modules and module attributes are generated by development tools. Again, module attributes cannot be configured, but do get merged with and validated against configuration information. In URT 1.0, module meta-data is stored in a Component Library inside a PE image. More details on   HYPERLINK "http://lightning/Specs/Formats/default.htm"  http://lightning/Specs/Formats/default.htm Attributed Entities Attributes apply to one or more entities, whose semantics they modify. This section lists the logical entities that can be attributed in Project 42. Are there more entities? Need to add detail for each entity. Each logical entity corresponds to a logical tables (in some case more than one) in the catalog. The attributes associated with each entity correspond to the columns in this table. The actual rows in the table are typically the result of a merge of the attributes as specified in one or more physical containers. Section   REF _Ref456167495 \r \h   talks more about container relationships and merge semantics. Machine Virtual Site Application Pool Application Assembly Directory Virtual Directory Page / File Module Always scoped within an assembly. Class Always scoped within an assembly. Interface Interface Definition Scoped within an assembly. Interface Implementation Scoped within a class. Method Method Definition Scoped within an interface definition. Method Implementation Scoped within a class or an interface implementation. Container Relationships The merge follows specific semantics, which often depend on the attribute itself, the container that it is specified in or the way it is specified. The catalog provides a set of common merge semantics, which can be selected declaratively at different levels (global schema, in the configuration file itself, in a parent configuration file). The catalog infrastructure is also extensible using multiple mechanisms (custom virtual tables, table interceptors etc.). These mechanisms can be used to implement arbitrary merge semantics. Do we need to provide third-party extensibility for merge semantics in URT V1? Do we need to generalize containment relationships? Do we need to generalize inheritance between containers? Containment Machine Config contains  Site Config Site Config contains Application Config Application Config contains Application Definition (may be implicit) Application Definition contains Assembly Assembly contains  Module Inheritance and Override Rules Along the containment hierarchy of the different containers, some attributes can be inherited from parent to child while others can be inherited from child to parent. Inheritable attributes can be marked as  Final: Containers that are lower in the inheritance graph cannot modify the attribute. Overridable: Containers that are lower in the inheritance graph can freely override the attribute; effectively the attribute represents a default value. Constrainable: Containers that are lower in the inheritance graph can only constrain the attribute. Example: Bandwidth throttling specified at the site level can only be reduced at the application level. Do we unify Fusion  inheritance  with IIS/Ducttape inheritance? Likely not, but how do we rationalize this for the dev/admin? XSP proposes an attribute merging mechanism similar to the Apache Module mechanism. Implementing the Framework: Catalog In order to ensure a common approach to configuration, all URT features will consume any configurable attributes through a common configuration infrastructure, the URT Catalog. Configuration APIs Configuration files can obviously be created through arbitrary means, as they are text files and their format is fully documented. In addition, the URT Catalog provides higher-level configuration APIs that allow read/write access to configuration files and other storage containers. The Configuration APIs are designed for use by administrative tools. They will be broadly documented ( Platform SDK ). The AS 2.0 Administrative Tools are written exclusively to the configuration APIs. All attributes will be exposed through a single set of APIs. The catalog team owns defining and implementing this API.  The configuration APIs allow queries and enumeration over all configuration data. They also provide validated write access to configuration data. The configuration APIs also allow secure remote access to configuration data. The configuration API is exposed as a set of managed classes. Refer to   HYPERLINK "http://appsrv/asconfig/specs/urt1/AppServerConfigRequirements.doc"  http://appsrv/asconfig/specs/urt1/AppServerConfigRequirements.doc  for more details. The configuration API builds on the lower level configuration system, which is why all URT configuration must be exposed through the catalog infrastructure. Binaries also carry fixed meta-data, which is provided by the developer (and the development tools). Development tools use low-level meta-data creation APIs when generating modules and assemblies. The meta-data creation APIs will be publicly documented, but probably in a limited fashion  ( tools developer SDK ). The runtime team owns the module and assembly meta-data creation APIs (IMetaDataEmit*, see   HYPERLINK "http://lightning/Specs/Formats/default.htm"  http://lightning/Specs/Formats/default.htm  for details). Storage Abstraction: Simple Tables and Table Dispensers The URT Catalog is built around a relational database abstraction. All configuration information is broken into a set of tables.  For details refer to the implementation spec at   HYPERLINK "http://appsrv/asconfig/specs/urt1/simpletablesV2.doc"  http://appsrv/asconfig/specs/urt1/simpletablesV2.doc Table Schema All tables are described with rich schema information. In addition to standard table/column/type information, the schema carries other information, including hints to the (generic) configuration APIs, such as allowable values for an attribute, enumerations, relations between tables etc. Every table has a unique name (a Table ID). Table Dispenser / Wiring Database The table dispenser maps queries to a specific COM component (hereafter called a table implementation) that will render the contents of the table as described in the schema, in whatever way it sees fit. The mapping mechanism is fully customizable using custom table dispensers, and can consider: The table ID being requested. The query being passed in. The level of service (read-only, read-write, remote etc.) being requested. Any arbitrary criteria the custom table dispenser sees fit. For a given table, multiple implementations may exist; for example if a client requests read-only access, an in-process implementation may be chosen, while for write access a transactional implementation running in a protected system process may be chosen. The standard table dispenser allows selection of table implementations based on table ID and level of service. It uses the wiring database to map TableID/Level of Service to specific table implementations. Data Tables Some table implementations are physical tables, i.e. they are immediately backed by some persistent store and perform only minimal - mainly syntactic - validation of the data.  The catalog team provides a set of data table implementations, which include  XML data table CompLib data table RegDB data table Data tables under consideration are: IIS meta base data table Registry data table Internal URT teams can write their own data tables and plug them into the catalog framework using the catalog s wiring database. Logic Tables Other table implementations do not serve data with a direct physical representation but are merely logical tables (also called virtual tables): they are created as the result of applying some form of custom logic to one or more physical tables. Like data tables, logic tables are also implemented as COM components. Examples of such custom logic are:  Joins of hard-coded attributes (class meta-data) with configuration information into a single  Class  table.  Merges of configuration attributes along a containment hierarchy.  Calculation of internally required information based on a set of publicly exposed attributes. Validation of semantic consistency of attributes. Internal URT teams can write their own logic tables and combine them with data tables or other logic tables in a generic way using the catalog s wiring database, or in a completely customized way. A key goal of the catalog architecture is to keep the configuration logic separate from the consuming (system runtime) code, in order to Allow the config APIs and the UI to be driven of the same logic as the system, Enable the system to adapt to changes in the configuration logic by changing a well-isolated body of code, Enable the system to adapt to changes in the underlying store. Runtime APIs The system runtimes that consume configuration information will typically want to transform the relational data into specific, in-memory representations, that are optimized for a specific usage pattern. Often, consumers will want to cache this in-memory representation for the lifetime of a process. Currently, it is up to each consumer to build their runtime API set on top of the catalog s table abstraction and implement their own in-memory caching (if needed). Who writes the runtime interfaces for each of the consumers? Each consumer? The app server admin team? What pieces (caching, persistence of preprocessed attributes) are common across all runtime interfaces and should be provided by the catalog team? In URT 1.0, the catalog - including all data and logic tables - is implemented in unmanaged code. However, the table dispenser and table access interfaces are exposed as a set of managed code interfaces. Logic table implementers can of course invoke managed code if required. Attributes In order to further facilitate synergy between the different users of catalog technology, this section tracks the high-level config and attributes requirements for each of the URT teams. This section focuses on configurable attributes, but includes development time attributes whenever those need to be merged with or validated against configurable attributes.  DuctTape  Items with a  are to be supported in the initial M4 catalog drop (6/21) to DuctTape. Attribute Logical Entity Physical Container String Application Pool Machine *PeriodicRestartTime DWORD Application Pool Machine *PeriodicRestartRequestTimeOut DWORD Application Pool Machine *MaxProcessCount DWORD Application Pool Machine *PingingEnabled DWORD Application Pool Machine *IdleTimeout Application Pool Machine MaxSimultaneousRequests Application Pool Machine PingInterval Application Pool Machine CPUAffinity Application Pool Machine *ServerBindings MULTI_SZ Metabase:  ip-address:ip-port:host-name UL: "[http|https]://[ip-address|host-name|*]:ip-port" Virtual Site Machine *SecureServerBindings MULTI_SZ Virtual Site Machine String Virtual Site Machine Bandwidth Throttling Virtual Site Machine Caching Policy? Class? Application? Config? Assembly? Module? Page?? SingleProcess? Indicates if more than one process can host this app Application Application *ApplicationPath This attribute maps an application to a VirtualSite (common URL prefix) String Application Machine *ApplicationPool String Application Machine M4 Implementation plans  Scenario 1: Machine config Preliminary implementation spec/plan (from RCraig): The plan is to deliver the necessary code for scenario #1 by 6/21/99, immediately thereafter to convert the config manager code to use it, and demonstrate the scenario in a private build derived from a good ducttape M3 snapshot. Scenario #1 is: Specify all site, app pool, and app information consumed by the config manager in XML. The config manager code is revised to fetch all information from simple tables, which always pulls from a persisted cache. Under the covers... The first time the server is started, the XML config is validated and cooked into a persisted cache (CLB1) which also retains a date/time stamp of the XML file. The second time the server is started, provided the XML is not changed (according to the date/time stamp), the config comes from the persisted cache. The third time it starts, assuming the XML has changed, the XML is cooked again into CLB2.  Assuming validation succeeds, CLB1 is removed. The fourth time, assume the XML config for a particular site is hosed.  During the validation process, appropriate logging occurs, and the cookdown process succeeds, producing CLB3, which is however missing the hosed site.  (Do we keep CLB2?) The fifth time, the XML config is totally hosed.  During the validation process, since cooking CLB4 fails, CLB4 goes away, and the config is served up from CLB3. [Seth Pollack]  should log an event in this case. Schedule and dates to be established for scenario #2 and #3.  Scenario #2 will involve adding an app by copying its files into the directory tree.  Scenario #3 will involve change notification while the system is up and running on a per site and apppool basis. [Seth Pollack]  or per app. Scenario 2: Application Config Do we require that all UL configuration be read in at UL startup time? Are there mechanisms for on-demand reading? How do we do (incremental) updates to configuration? What are the performance/scalability implications (incremental runtime hits vs. cost of pre-calc)? What are the implications of allowing on-disk and in-use/cooked down configurations to be out of sync? Replication (does replication fail? Use the cooked down config? The potentially flaky on-disk config?), PSS (troubleshooting implications). Ducttape/XSP configuration file structure Global configuration All machine-wide configuration information is stored in a single, well-known directory location (i.e.  c:\inetpub Global Policy The global configuration file ( c:\inetpub\global.cfg ) defines the default policy for all sites and all applications, directories and files on a machine. Site Definition A set of site definition files ( c:\inetpub\*.sitedef ) define the virtual sites on a machine.  Each site definition file establishes one or more virtual sites ( server binding , root directory), defines the name of the site configuration file if any, defines global policy for all apps, directories and files in the site. The site definition file can limit the set of applications in the site by listing the locations in which application configuration files can be stored. The locations are specified in the form of a search path; each part of the search path can be  A relative path to a specific application configuration file. A relative path to a directory under which to search for application configuration files. The site definition file can limit the set of virtual directory configuration files by listing the locations in which vdir configuration files can be stored. The locations are specified in the form of a search path, that follows the same rules as the application search path. Site Configuration A site can have a site configuration file ( c:\inetpub\wwwroot\mysite\mysite.sitecfg ), which allows the machine administrator to delegate some of the site configuration to a separate site administrator. There can be at most one site configuration file for a site; it must reside in the site s root directory and the site configuration file name must be explicitly specified in the site definition file.  The site configuration file configures a site within the limits of the global policy and the site definition. The site configuration file can specify and refine the policy for all apps/dirs/files in the site. The site configuration file can refine the application and vdir search paths specified in the site definition file. Application Configuration Each application has exactly one application configuration file ( c:\inetpub\wwwroot\mysite\myapp\myapp.appcfg , or  c:\inetpub\wwwroot\mysite\mysite.appcfg ). A directory can have at most one application configuration file. Unless the site definition or site configuration file s application search path indicates a path to a specific application configuration file, the application configuration file must have the same root name as the directory in which it resides and must carry the .appcfg file extension. This avoids problems introduced by maliciously or carelessly adding arbitrary files with a  .appcfg  file extension to a directory. The application configuration file establishes the scope of an application within both the UNC and URL name spaces. The location of the application configuration file determines the root URL/UNC path for the application. URL/UNC paths that share a common prefix with the root URL/UNC path of the application, and do not share a longer common prefix with any other application s URL/UNC path are said to be within the scope of the application. The application configuration file provides configuration for an application within the policy defined by the global, site definition and site configuration files (if any). An application does NOT inherit any settings from any application configuration files that reside in a parent directory outside of the scope of the application. All items (DLLs, scripts etc.) that reside in a directory within the scope of an application do inherit the application configuration from the application configuration file in the root of the application. The application configuration file specifies the location(s) in which the URT searches for privately installed assemblies. The location(s) for private assemblies are specified in the form of a search path; each part of the search path can be  A relative path to a directory under which to search for assemblies. The relative path must point to a directory within the scope of the application. An absolute path to a directory under which to search for assemblies. To avoid fragility introduced by search path order, only the first directory in the search path may contain assemblies with simple names. Virtual Directory Configuration *.vdircfg   establishes exactly one virtual directory. More than one per directory. By default, file name is used as the relative URL for the vdir, can be overridden in the .vdircfg file. Directory and File Configuration .dircfg   configures a directory. One per directory. Can exclude sub-directories from URL namespace. Can exclude individual files from URL namespace. Can mention specific .dircfg files in sub-directories. Can specify file config for individual files or groups of files (wildcard). .filecfg   configures one file. For each file, <file>.<ext>.filecfg is used first Processing the Configuration Files GaryBu proposes to do directive based processing rather than declarative/relational merging. The information contained in the configuration files is parsed into a set of logical tables: Global Sites Applications Virtual Directories Directories Files The Global table is a direct representation of the global configuration file. The Sites table is computed as a merge of the following files: Global Site Definition Site Configuration The Applications table is computed as a merge of the following files: Global Site Definition Site Configuration Application Configuration The Virtual Directories table is computed as a merge of the following files: Global Site Definition Site Configuration Virtual Directory Configuration (recursion here) The Directories table is computed as a merge of the following files: Global Site Definition Site Configuration Directory Configuration (recursion here) The Files table is computed as a merge of the following files: Global Site Definition Site Configuration Directory Configuration (recursion here) File Configuration Each configuration file indicates the context for each attribute (= into which of the logical tables the attribute should be merged). Using XML this could be expressed by defining an additional table (call them  config file tables ) corresponding to each of the logical tables, and scoping the attributes within these tables. Controlling the merging process This part is currently under design/discussion, together with the directives based config proposal. The merging process can be further controlled via additional tags on individual attributes.  Each attribute can be tagged using one of the following options: Final : differing values in subsequent configuration files are ignored (warning logged). This is the default. Specializable : subsequent configuration files can only specify values that further specialize this value (Examples: MaxBandwidth at the site def level, can be reduced, but not expanded at the site config level). Overrideable : subsequent configuration files can completely replace this value. : this attribute should be added to a multi-value attribute. Remove : this attribute should be removed from a multi-value attribute. Custom_Merge : a URT class (or a catalog logic table) is invoked to perform the merge. The name of the class is specified in the tag. Aliases for commonly used classes can be declared in any configuration file. Input to the class is the set of logical tables as parsed so far and the configuration file to be merged into them. Output is a new set of logical tables. In XML these tags could be expressed as additional, optional columns in the config file tables, using the attribute name as a root name and appending  _merge , i.e.  We need a better way to express tags in XML. <site MaxBandWidth=1000 MaxBandWidth_merge= final <file  ScriptMap= ScriptMap_merge= Remove In SiteCfg: <application MyDSN= server=\\mysql;uid=xyz;pwd=blah MyDSN_merge= myassembly#DSNMerge In AppCfg: <application MyDSN= database=Customer MyDSN_merge= myassembly#DSNMerge Result: MyDSN= server=\\mysql;database=Customer;database=Customer;uid=xyz;pwd=blah Based on preliminary info from ScottGu. Physical container association (= dev vs. admin) by MarkusH. Do we want directive-based config? How do we configure pipeline modules? Do we need third-party extensibility for pipeline modules? Attribute Logical Entity Physical Container Cache Size Tbd (MB) Application App Config App Def (minimum size) Session State Size Tbd (MB) Application App Config App Def? (Minimum size)  Assembly? (hint: required size per session) Session State Timeout Tbd (minutes) Application App Config MaxExecutionTimeout Tbd (seconds) Application App Config App Def? (Minimum timeout) Session State Provider Tbd (Machine & Port) Application App Config App Def? (functionality required?) Application Root Directory Application App Config (implicy in location!) Application Assembly Cache Application App Config? App Def (relative path) Site (Default? Valid locations to choose from?) App Sandboxing Settings How does this relate to trust grant in assembly cache? Application App Config User Roles Application? App Def App Config? (Add more roles) Authorization Accounts Application App Config Application Class Application App Def Pipeline Modules Application Debug vs. Retail Application App Config? Automatic Application Restart Application App Config? Automatic Failure Recovery Application App Def? Extension/Verb Mapping to IHTTPHandlerFactories Application App Def? Administrator Contact String Application App Config? Default Script Language Application App Def? Custom Error Messages Application App Def? Site? Debugging Settings (Security) Application App Config? Output Buffering Application App Config? Resource Constraints: Cache Size -- Total amount of cache space (in Mb) available to the app Session State Size -- Total amount of session state storage (in Mb.) to use with session state Session State Timeout -- Default timeout (in mins) for session state Max Execution Timeout -- Number of seconds request is allowed to run before COM+ automatically kills it (protects against infinite loops, runnaway requests, etc) Location Settings: Session State Provider -- Machine and port of session state provider Application Root Directory -- Specifies the root filesystem directory of the application Application Assembly Cache -- Filesystem directory containing the application assembly cache Security Settings: App Sandboxing Settings -- Security restrictions for app (file system + network access, etc) User Roles -- List of application roles that accounts will be mapped to Authorization Accounts -- Differents accounts (NTLM, SQL, Text File) to map to roles Application Runtime Settings: Application Class -- Code that handles module events (onSessionStart, OnApplicationStart, etc). Pipeline Modules -- Modules (and their ordering) within the pipeline Debug vs. Retail -- Indicates whether debug or retail binaries + compilation should be used Automatic Application Restart -- Amount of time (or number of requests) that should elapse before application automatically cycles itself (ala Apache) Automatic Failure Recovery -- Number of times an application can fail within a 30 second window before server assumes a serious problem is happening and stops trying to restart  Extension/Verb Mapping to IHTTPHandlerFactories -- Allows multiple extension types to be handled (.soap, .page, etc) Misc Configuration Settings: Administrator Details -- Contact information for administrator (email, pager, etc) for automatic notification of problems/issues Default Script Language -- Default language compiler for declarative file format Custom Error Messages -- What error messages should be displayed when specific errors occur Debugging Settings -- Restrictions/ACLs for debugging apps  Output Buffering -- Specifies whether buffering is on or off by default ISV Licensing Restrictions (From ScottGu) Some other XSP Application settings that I've been thinking of include ISV Licensing restrictions -- restrictions on the maximum number of active sessions, web-farm support (how many machines allowed in a cluster), maximum number of individual users (restrict security database), etc.  Note that these would all be settings that would not be administerable by a customer -- only the origionating software vendor. These are likely candidates for an (immutable, signed) application definition file. We d need some rudimentary mechanism to disallow usage of the assemblies (or XSP files?) in such an app without a proper app definition file. It probably doesn t have to be bullet proof (see COM/ActiveX Control licensing mechanism: proof of intent is sufficient). Runtime (Lightning) Most runtime attributes - except for some context related attributes - are specified at development time and are created and consumed using the  HYPERLINK "http://comrtime/Specs/Formats/COR Metadata Interfaces.doc" IMetaDataEmit and IMetaDataImport interfaces What about the reg keys defined in   HYPERLINK "http://comrtime/Specs/Miscellaneous/regkeys_used_in_com.htm"  http://comrtime/Specs/Miscellaneous/regkeys_used_in_com.htm Application Domain & Application Config Need to be able to attach configuration to an application domain! -> CraigSi/StevenPr Assembly Cache (Fusion) Should the assembly cache be accessible via config APIs/catalog? Context Waiting for context and activation specs from the VOS and app model teams. -> GopalK, ShawnWoo/SatishT URT Context requirements: System Context policies (Tx, Sync etc.) must have developer friendly attribute syntax System Context policies must be replaceable by third parties Context policies and their parameters can be specified by the developer (= compiled into the module) or by an application integrator/administrator (= in the application configuration file) It must be possible to add arbitrary third party context policies and their parameters Do we special case the system context policies (to make them  friendly ) or do we provide a general mechanism to abstract policy internals from the attributes? It must be possible to override (some) developer specified attributes in the app config file. Which attributes must be overridable? It must be possible to enforce override rules between developer specified attributes and configured attributes. It must be possible to validate consistency between different context attributes (i.e. tx and sync etc.). What are these rules/validations? Who codes them? Channels It must be possible to enumerate all the channels/endpoints on which to listen for a given machine It must be possible to select certain channels as part of the application configuration. It must be possible to specify endpoints for preinstalled channels as part of the application configuration (per app). It must be possible to configure channels/endpoints at the machine level (policy: turn of all HTTP channels). It must be possible to add new channels as part of an application or on a machine wide basis. A Component Category-style approach is being proposed, but this mechanism doesn t allow specifying parameters (endpoints etc.). Can this be another  binding  in the .global or .site file? If we use the  cookdown  mechanism for channel/context config, what are the performance requirements? Do we need an additional layer of caching or can the  regdb cache  be used directly? What is the mechanism to bootstrap a listener for non-Ducttape protocols? Security => LorenK Attribute Logical Entity Physical Container Permission Class Interface Method Module Application? Permission Reference  (in code? declarative?) Module Group Reference (in code? declarative?) Module Group Machine Application? Config Machine? Application? GroupMember Collection of User Identities and Groups Group PermissionGrant Collection of Permissions Group Application? Config Machine User Identity Assembly Trusted Bool? Assembly Machine? Certificate Trust Certificate Machine? How common will new permissions be? Do only infrastructure providers write new permissions or does each application define a set of permission, in replacement of   one aspect of   MTS/COM+ 1.0 security roles? How can permissions be versioned? Are permissions scoped in any way? It seems to be a requirement to have permissions that span applications. How are groups named/scoped? How are user identities stored/named/scoped? Do we need to capture dependencies between permissions, i.e.  cash withdrawal  requires  database access How do we provide MTS-style declarative security? Auto-gen a permission for each class/method? Would this require (administrative) structure/hierarchy on permissions? Do we need policy on permissions? (LorenK) COM+ 1.0 Role-based Security This section expresses the COM+ 1.0 role-based security attributes in the URT 1.0 administrative framework. It is merely meant to be an illustration of attribute usage for those familiar with COM+ 1.0 role-based security. Attribute Logical Entity Physical Container [Role Definition] [String, scoped by assembly] Application [implied: superset of all role references and role access attributes in the application] Role Reference String Class Module Role Access String Class Interface Method Module Role Membership Collection of User Identities/Groups Application Config Role Alias (?) String + Collection of Roles Application Assembly (?) Config Security Enabled Application Class Config Role-base Security required Assembly Assembly Role Definition Roles are a development time abstraction for security principals. At deployment time, roles are associated with real security principals, like Windows NT user accounts or user groups. Roles are defined at development time. Their visibility is scoped by an application (domain). Roles are named by the developer using simple, unstructured strings. At deployment time and runtime, role names are disambiguated using the assembly identity that defined the role string. Roles can only be defined through Role Access and Role Reference attributes in a module. Roles can only be associated with classes, interfaces or methods through Role Access attributes in a module. Do we need a mechanism to enable role definition/assignment at the assembly or configuration level? Role Access This attributes indicates that the system is to allow access to a class, interface or method to members of a specified role. Multiple roles can be granted access to a particular class, interface or method. Role permissions are cumulative:  If a role is granted access to a class, members of this role can access all methods in this class.  If a role is granted access to an interface, members of this role can access all methods in this interface. Do we need to worry about fields and statics? Assumption: fields   yes, statics   no. Likely depends on remoteability of fields/statics. Role Access attributes can only be specified at the module level (= module compilation time!). Role Reference This attribute indicates that the implementation of a class performs programmatic checks if the current caller is a member of one or more specific roles. The class will typically behave differently depending on the role membership of the caller. Role References can only be applied to classes, not individual interfaces or methods. Expressing a role membership does not automatically grant access role members access to the class; this must be done through an additional Role Access attribute. Role Reference attributes can only be specified at the module level (= module compilation time!). Role Alias (?) A Role Alias combines one or more developer-defined roles into a single role for administrative purposes. Role Aliases   just a like Role Definitions   are scoped by an application (domain). A developer-defined role can be a member of at most one Role Alias.  If a developer-defined role is a member of a role alias, no role membership can be defined for the developer-defined role; the system treats all members of the role alias as members of the developer-defined role. Do we really want/need this mechanism? Role Membership The Role Membership attribute maps one or more security principals (example: NT user accounts or groups) to a Role Definition or a Role Alias. Role Membership attributes can only be specified in the Application Configuration (= Application Domain). Component Categories? A mechanism to categorize assemblies/classes is being defined. Should this be available through config APIs/catalog? COM Interop All COM interop attributes are specified at development time and are captured in the   HYPERLINK "http://comrtime/Specs/Interop/Default.htm"  COM Interop specification Need to confirm with DennisAn. OLE clipboard formats? Short User Name? Icons? ProgID etc? COMCAT? Custom Registrar? File Extensions/MIME Types? WebObjects Remoting Waiting for Remoting spec from app model team. -> ShawnWoo/SatishT RemoteServerName, library vs. server app? Activation Key concepts:  Level objects Level object Properties (= interceptors) Activators Activation Messages A hierarchy of level objects needs to be established. For each level object, the set of properties must be determined:  the set of properties is established dynamically, based on specific activation requests.  It is interesting to specify a fixed set of properties.  Each property can have it s own set of configurable parameter (Property bag? String?). For each level object, the set of activators must be determined: The set of activators is established dynamically, based on specific activation requests. One of the activators is special and handles the  FindOrCreate  functionality for the level. How does the runtime determine if a class should be  activated  vs. just created (remoteable flag in assembly meta-data?)? Naming Service (WONS) The Web Object Naming Service provides a distributed location service. Where is the line between config and WONS? Does WONS go through catalog for it s internal config needs? How do WONS APIs and config APIs relate/complement each other? Transactions Waiting for Transaction spec from app model team. -> ShawnWoo/SatishT Assumption: The tx attributes will be identical for the COM+ 1.0 tx attributes. This attribute indicates if   and if so in which way   the implementation of a class depends on automatic transactions for correctness. Attribute Logical Entity Physical Container Transaction Enum: Supported, Required, Requires New, Not supported, Not Specified Class Module Transaction Timeout DWORD Class Will this be per class or per app? Config [Default Transaction Timeout] DWORD Class Module [Assembly/App?] Default Transaction Timeout DWORD Machine Machine If the value is  not specified  the registration system will assume that the component will ignore transactions in the context but will not interact with any transaction protected resource (value  Transaction Ignored NoVote Must run in callers context Synchronization? Is this provided by the runtime team (CBrumme)? Waiting for spec from App model team -> ShawnWoo. Attribute Logical Entity Physical Container Synchronization Enum: Supported, Required, Requires New, Not supported, Not Specified Class Module Object Persistence Eventing Example: COM+ 1.0 Attributes Process Attributes Attribute Logical Entity Physical Container Process-level Security Required? Application Config Authentication Level? Application Config Do we need a dev time attribute? Impersonation Level? Application Config Do we need a dev time attribute? Identity? String Application Config Would  Interactive User  be a dev time attribute? Identity Password? String Application Config (LSA!) Shutdown? DWORD Process Config Disable Changes? Application Config Debugger path? String Process Config Enable CRM? Process Module This should become  Requires CRM Enabled 3GB support? Process Just-In-Time Activation (JITA) Waiting for JITA spec from WebObjects team. -> ShawnWoo/SatishT . It looks like there will be no JITA in URT 1.0. Just-in-Time Activation enables the system to do proactive state management for classes to which callers maintain long-lived references. In order to support JITA, a class must call state management functions (SetComplete, SetAbort) or use the Auto Done attribute to inform the system when any internal state an instance of a class might carry can be safely discarded ( the instance has become stateless Attribute Logical Entity Physical Container JIT Activation Enum (Supported, Not Supported, Not Specified) Class Module Auto Done Method Module JIT Activation Does the concept of a class  not supporting  JITA make sense? If the class never calls the state management APIs, it will still behave correctly Do we need a concept of  requiring JITA  (or better: requiring deletion) for cases where a class does not guarantee state cleanup if it is reused for the same or other callers?  Auto Done This method-level attribute indicates the system that upon return from a call to this method, the class instance can be considered stateless. The Auto Done attribute can only be specified in a module (= at compilation time). Object Pooling It looks like there will be no Object Pooling in URT 1.0. Object Pooling allows class instances to be reused for different callers. It is often used in conjunction with JIT Activation. A class that supports Object Pooling guarantees that any state that it maintains when being reused for a different caller is safe (i.e. does not leak confidential state like credit card numbers, does not violate the atomicity rule of transaction etc.). Attribute Logical Entity Physical Container Object Pooling Enum (Supported, Not Supported, Not Specified) Class Module Object Pooling Enabled Class Config Object Pool Size Min/Max DWORD, DWORD Class Config Do we need to support specifying default values in the module/assembly? Object Pool Creation Timeout DWORD Class Config Do we need to support specifying a default value in the module/assembly? Object Constructor String? Waiting for spec from App model team -> ShawnWoo Will this be subsumed by WFC s Managed Properties? Attribute Logical Entity Physical Container Object Constructor Enum (Supported, Required, Not Supported, Not Specified) Class Module Object Construction Enabled Class Config Object Constructor String String Class Config Tracking? Waiting for spec from App model team -> ShawnWoo Attribute Logical Entity Physical Container Tracking Enabled Class Config Queuing? Waiting for spec from App model team -> ShawnWoo Attribute Logical Entity Physical Container Queuing Enum (Supported, Not supported, Not specified) Interface Do we need this at method/class level? Module Queuing Enabled Application Interface Config Listener Enabled Application Config Exception Class ClassRef Class Module Load balancing (?) Will this be supported in URT 1.0? This attributes indicates if a class can be used as part of a load-balancing cluster. In order to support load-balancing a class must not rely on any machine specific state between instance creations, and can not share any state with other classes in the same module, process or machine, which is not accessible to other instances of these classes.  Attribute Logical Entity Physical Container Load balancing Enum (Supported, Not supported, Not specified) Class Module Load balancing Enabled Machine Class Config Context Attribute Logical Entity Physical Container Must be activated in caller s context Class Module Distributed Messaging Bus Bricks vs. Activators Path, PathManager? Durable Channels? Server side In URT 1.0, messaging will exclusively use the universal listener (Ducttape) on the server side. Very likely the proposed Ducttape file structure will meet messaging requirements. Messaging endpoints map to URLs in the Ducttape world. How do XSP and Messaging relate? Are they layered? How does Ducttape choose one or the other if not? How does an admin/dev specify which one they want? Additional logical entities are: Endpoint (=URLs) Brick Path (of Bricks) How does the path relate to XSP pipeline and Remoting level objects?  Channel An initial bootstrap scenario (FedEx messaging demo) for messaging/catalog integration drives the following attributes: Need to incorporate more requirements, like message types and inheritance. Attribute Logical Entity Physical Container Channel Name String? Channel Durable Channel InboundPath Foreign key -> Path Channel OutboundPath Foreign key -> Path Channel SendToURL String Channel [SourceURL] String Channel Implicit Channel Timeout DWORD? Channel Message Timeout DWORD? Channel PathID QoS (aggregated) PathID URL? Machine?  PathName String? URL? Machine?  Quality of Service Flags? Strings? URL? Machine?  PathID Configured Brick URL? Machine?  BrickName Assembly/classref? Configured Brick URL? Machine?  BrickParameters Name/Value pairs? Configured Brick URL? Machine? Order DWORD? Configured Brick URL? Machine?  Quality of Service consists of multiple values that can be or d together. For each endpoint (URL), multiple QoS can be specified. Message Types: incoming and outgoing. In V1 likely just a collection of strings (URIs?). Path of Server Bricks: internal to the server! QoS is related to Brick path, but one cannot necessarily just be derived from the other. Some validation can be performed (i.e. declared QoS is actually supported by the brick path).  For ease of administration inheritance can be interesting (a requirement for Pub/Sub, see below). Securing which classes are allowed to run as bricks is interesting, although likely a V2 feature (we didn't discuss this, but Lescek mentioned it at the URTSec meeting). What is the scalability/performance requirement for channels? How many channels per machine? How often do durable channels get updated? => Scot Boyd Are transient channels stored through catalog mechanisms? Depends on performance requirements for V1. What store will be used for durable channels? RCraig. Depends on perf requirements for V1. Client side For the initial scenario the same server attributes seem to be sufficient. How do we attach paths/channels/endpoint config to client apps? EXEs? WebApps? Browser? Need to be able to discover endpoints and their (public) attributes. Likely via naming service. Unclear if endpoints need to be externally configurable on the client side. This is definitely a remoting requirement, but not currently a messaging requirement. URTMsg (DCole?) to follow up with the remoting team. Publish/Subscribe We briefly touched Pub/Sub, but didn't go into much detail. In V1, subscriptions will be stored on the server only (= broker always lives on the server). Subscription by URL prefix is a Pri 1 requirement (aka inherit subscriptions from parent URL nodes). IIS 5.0 Current plan for URT 1.0 seems to be that XSP must run on both IIS 5.0 and Ducttape/ universal listener. It may be necessary to map some of the ducttape/XSP config back into the metabase Application Roots? Virtual Directories? Fusion Settings (= Application specific configuration information). => HariKris Are we going to have both Fusion settings and managed properties in URT 1.0? -> HariKris (Fusion), StefanPh (WFC) Is there a single settings file per application? How does the settings file get created? Managed Properties Need to engage with Cdias/ StefanPh. WFC Managed Properties (  HYPERLINK "http://vs/documents/cdias/managedproperties.doc"  http://vs/documents/cdias/managedproperties.doc ) are a mechanism to store arbitrary configuration state for COM+ Classes.  Server WFC uses managed properties to store configuration for system elements like Queue Components. Should these be stored in the same XML file as the configuration file? Same as settings file? Do these participate in (persistent) caching of attributes? How do these related to Fusion settings? What is the admin UI for managed properties? Should the system configuration aspects of managed properties be changed to use the URT admin framework? Others? Others DataLink admin? -> LaraD/PatD XML Parser? Net Classes? Can we assume that COM+ 1.0 Admin will be used? IMDB? Can we assume that COM+ 1.0 Admin will be used? Related Specs This document does not define the URT application model, although the scenarios, attributes and other concepts described in this document are closely related to the URT application model. Refer to ? -> MaryKir This document does not describe the Project42 configuration APIs. Refer to the Project 42 Configuration API Requirements spec for more details (location tbd). This document does not describe the Project42 catalog infrastructure. For details refer to the implementation specs on   HYPERLINK "http://appsrv/asconfig"  http://appsrv/asconfig , specifically   HYPERLINK "http://appsrv/ASConfig/specs/urt1/simpletablesV2.doc"  http://appsrv/ASConfig/specs/urt1/simpletablesV2.doc Open Issues In addition to the issues outlined throughout the document, the following items require further attention: Revision History May 17, 1999 Rev 0.1 (MarkusH): Created. May 19, 1999 Rev 0.2 (MarkusH): Added Attribute vs. Container vs. Entity matrix. Added more potential consumers. Added more details to container/entity/attribute terminology. May 24, 1999 Rev 0.3 (MarkusH): Added preliminary info about URT Security. May 27, 1999 Rev 0.4 (MarkusH): Added preliminary Ducttape attributes, including initial attribute set for M4 drop. Added Ducttape entities (app pool, virtual site, page). Added M4 scenario for Ducttape. Clarified COM+ 1.0 attributes used as examples. June 3, 1999 Rev 0.5 (MarkusH): Added preliminary XSP attributes. Added Site Config container. June 8, 1999 Rev 0.6 (MarkusH): Added preliminary notes on Ducttape/XSP site configuration. Incorporated feedback from XSP: clarified that HTML templates are optional; clarified that config manifest does not have to be signed; clarified that an assembly does not need to be  registered  in app config/definition in order to work; added ISV Licensing attributes.  July 13, 1999 Rev 0.7 (MarkusH): Added issue around in-use and actual config getting out of sync. Added info on context and channel config. Added info on messaging config. Updated XSP/Ducttape scenarios/issues. Fleshed out the introduction/framework/catalog sections. Added section about naming service. July 16, 1999 Rev 0.7a (MarkusH): Clarified that messaging is a top-level feature, not thought of as part of WebObjects. Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\src\core\catinproc_iiscfg\iiswire.xml ===
<?xml version ="1.0"?>
<configuration xmlns="x-schema:IISCfg.xms">
</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\src\inc\catmeta_core.xml ===
<?xml version ="1.0"?>
<MetaData   xmlns="x-schema:CatMeta.xms">


    <DatabaseMeta           InternalName="META">                    
        <ServerWiring       Interceptor="Core_FixedPackedInterceptor"/>
        <Collection         InternalName="COLUMNMETA"   PublicName="Property"   MetaFlags="INTERNAL NOLISTENING">
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="Index"                    Type="UI4"      MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="Type"                     Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Enum       InternalName="Boolean"                  Value="19"      />
                <Enum       InternalName="Bool"                     Value="19"      />
                <Enum       InternalName="StrictBool"               Value="19"      />
                <Enum       InternalName="Enum"                     Value="19"      />
                <Enum       InternalName="Flag"                     Value="19"      />
                <Enum       InternalName="int32"                    Value="19"      />
                <Enum       InternalName="ByteBracketBracket"       Value="128"     PublicName="Byte[]"/>
                <Enum       InternalName="String"                   Value="130"     />
                <Enum       InternalName="UI4"                      Value="19"      />
                <Enum       InternalName="GUID"                     Value="72"      />
                <Enum       InternalName="BYTES"                    Value="128"     />
                <Enum       InternalName="WSTR"                     Value="130"     />
                <Enum       InternalName="DBTIMESTAMP"              Value="135"     />
                <Enum       InternalName="DWORD_METADATA"           Value="19"      PublicName="DWORD"                    />
                <Enum       InternalName="STRING_METADATA"          Value="130"     PublicName="STRING"                   />
                <Enum       InternalName="BINARY_METADATA"          Value="128"     PublicName="BINARY"                   />
                <Enum       InternalName="EXPANDSZ_METADATA"        Value="130"     PublicName="EXPANDSZ"                 />
                <Enum       InternalName="MULTISZ_METADATA"         Value="130"     PublicName="MULTISZ"                  />
                <Enum       InternalName="BOOL_BITMASK"             Value="19"      />
                <Enum       InternalName="MIMEMAP"                  Value="130"     />
                <Enum       InternalName="IPSECLIST"                Value="128"     />
                <Enum       InternalName="NTACL"                    Value="128"     />
                <Enum       InternalName="HTTPERRORS"               Value="130"     />
                <Enum       InternalName="HTTPHEADERS"              Value="130"     />
                <Enum       InternalName="XMLBLOB"                  Value="130"     />
            </Property>
            <Property       InternalName="Size"                     Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Flag       InternalName="PRIMARYKEY"               Value="        1"/>
                <Flag       InternalName="FOREIGNKEY"               Value="        2"/>
                <Flag       InternalName="NAMECOLUMN"               Value="        4"/>
                <Flag       InternalName="NAVCOLUMN"                Value="        8"/>
                <Flag       InternalName="DIRECTIVE"                Value="       16"/>
                <Flag       InternalName="BOOL"                     Value="       32"/>
                <Flag       InternalName="FLAG"                     Value="       64"/>
                <Flag       InternalName="ENUM"                     Value="      128"/>
                <Flag       InternalName="WRITENEVER"               Value="      256"/>
                <Flag       InternalName="WRITEONCHANGE"            Value="      512"/>
                <Flag       InternalName="WRITEONINSERT"            Value="     1024"/>
                <Flag       InternalName="NOTPUBLIC"                Value="     2048"/>
                <Flag       InternalName="NOTDOCD"                  Value="     4096"/>
                <Flag       InternalName="PUBLICREADONLY"           Value="     8192"/>
                <Flag       InternalName="PUBLICWRITEONLY"          Value="    16384"/>
                <Flag       InternalName="LOCALIZABLE"				Value="    32768"/>
                <Flag       InternalName="INSERTGENERATE"           Value="    65536"/>
                <Flag       InternalName="INSERTUNIQUE"             Value="   131072"/>
                <Flag       InternalName="INSERTPARENT"             Value="   262144"/>
                <Flag       InternalName="NOTNULLABLE"              Value="   524288"/>
                <Flag       InternalName="FIXEDLENGTH"              Value="  1048576"/>
                <Flag       InternalName="HASNUMERICRANGE"          Value="  2097152"/>
                <Flag       InternalName="LEGALCHARSET"             Value="  4194304"/>
                <Flag       InternalName="ILLEGALCHARSET"           Value="  8388608"/>
                <Flag       InternalName="NOTPERSISTABLE"           Value=" 16777216"/>
                <Flag       InternalName="MULTISTRING"              Value=" 33554432"/>
                <Flag       InternalName="EXPANDSTRING"             Value=" 67108864"/>
                <Flag       InternalName="UNKNOWNSIZE"              Value="134217728"/>
                <Flag       InternalName="VARIABLESIZE"             Value="268435456"/>
                <Flag       InternalName="CASEINSENSITIVE"          Value="536870912"/>
                <Flag       InternalName="TOLOWERCASE"              Value="1073741824"/>
            </Property>                                           
            <Property       InternalName="DefaultValue"             Type="BYTES"    />
            <Property       InternalName="FlagMask"                 Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="StartingNumber"           Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="EndingNumber"             Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="-1"/>
            <Property       InternalName="CharacterSet"             Type="WSTR"     />
            <Property       InternalName="SchemaGeneratorFlags"     Type="UI4"      MetaFlags="NOTNULLABLE" PublicName="MetaFlagsEx">
                <Flag       InternalName="CACHE_PROPERTY_MODIFIED"  Value="         1"/>
                <Flag       InternalName="CACHE_PROPERTY_CLEARED"   Value="         2"/>
                <!-- EXTENDEDTYPE0,EXTENDEDTYPE1,EXTENDEDTYPE2 & EXTENDEDTYPE3 are used to describe IISSynID -->
                <!-- The Property's type is mapped to a SynID as follows:                                    -->
                <!-- DWORD         1                                                                         -->
                <!-- STRING        2                                                                         -->
                <!-- EXPANDSZ      3                                                                         -->
                <!-- MULTISZ       4                                                                         -->
                <!-- BINARY        5                                                                         -->
                <!-- BOOL          6                                                                         -->
                <!-- BOOL_BITMASK  7                                                                         -->
                <!-- MIMEMAP       8                                                                         -->
                <!-- IPSECLIST     9                                                                         -->
                <!-- NTACL        10                                                                         -->
                <!-- HTTPERRORS   11                                                                         -->
                <!-- HTTPHEADERS  12                                                                         -->
                <!-- So I've reserved 4 bits (which are inferred, they shouldn't be specified in ColumnMeta).-->
                <!-- To map from MetaFlagsEx to SynID:  SynID=(MetaFlagsEx>>2)&0x0F;  This macro is defined  -->
                <!-- in CatMeta.h: SynIDFromMetaFlagsEx(MetaFlagsEx) ((MetaFlagsEx>>2)&0x0F)                 -->
                <Flag       InternalName="EXTENDEDTYPE0"                          Value="         4"/>
                <Flag       InternalName="EXTENDEDTYPE1"                          Value="         8"/>
                <Flag       InternalName="EXTENDEDTYPE2"                          Value="        16"/>      
                <Flag       InternalName="EXTENDEDTYPE3"                          Value="        32"/>      
                <Flag       InternalName="PROPERTYISINHERITED"                    Value="        64"/>
                <Flag       InternalName="USEASPUBLICROWNAME"                     Value="       128"/>
                <!-- EXTENDED properties are shipped properties that have been       -->
                <!-- modified.  This flag is NOT mutually exclusive from USERDEFINED -->
                <!-- as it is in TableMeta (because MetaFlagsEx can be overridden)   -->
                <Flag       InternalName="EXTENDED"                               Value="       256"/>
                <!-- MANDATORY is an ADSI requirement and is NOT enforced by IST     -->
                <Flag       InternalName="MANDATORY"                              Value="       512"/>
                <!-- USERDEFINED properties are defined by the user                  -->
                <!-- this flag should never be set in the meta file, it is inferred. -->
                <Flag       InternalName="USERDEFINED"                            Value="      1024"/>
                <Flag       InternalName="WAS_NOTIFICATION"                       Value="      2048"/>
                <!-- XMLBLOB indicates that the column does not exist as an attribute, but rather as the     -->
                <!-- entire element and its contents.  XMLBLOB columns may NOT be primary keys.              -->
                <Flag       InternalName="XMLBLOB"                                Value="      4096"/>
                <Flag       InternalName="HIDDEN"                                 Value="     65536"/>
                <Flag       InternalName="WAS_NOTIFICATION_ON_NO_CHANGE_IN_VALUE" Value="      8192"/>
                <Flag       InternalName="VALUEINCHILDELEMENT"                    Value="     16384"/>
            </Property>
            <Property       InternalName="ID"                       Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="UserType"                 Type="UI4"      MetaFlags="NOTNULLABLE">
                <Enum       InternalName="UNKNOWN_UserType"         Value="  0"/>
                <Enum       InternalName="IIS_MD_UT_SERVER"         Value="  1"/>
                <Enum       InternalName="IIS_MD_UT_FILE"           Value="  2"/>
                <Enum       InternalName="IIS_MD_UT_WAM"            Value="100"/>
                <Enum       InternalName="ASP_MD_UT_APP"            Value="101"/>
            </Property>
            <Property       InternalName="Attributes"               Type="UI4"      MetaFlags="NOTNULLABLE">
                <Flag       InternalName="NO_ATTRIBUTES"       Value="  0"/>
                <Flag       InternalName="INHERIT"             Value="  1"/>
                <Flag       InternalName="PARTIAL_PATH"        Value="  2"/>
                <Flag       InternalName="SECURE"              Value="  4"/>
                <Flag       InternalName="REFERENCE"           Value="  8"/>
                <Flag       InternalName="VOLATILE"            Value=" 16"/>
                <Flag       InternalName="ISINHERITED"         Value=" 32"/>
                <Flag       InternalName="INSERT_PATH"         Value=" 64"/>
                <Flag       InternalName="LOCAL_MACHINE_ONLY"  Value="128"/>
            </Property>
            <Property       InternalName="Description"               Type="WSTR"     />
            <Property       InternalName="PublicColumnName"          Type="WSTR"     />
            <QueryMeta      InternalName="AllColumns"               MetaFlags="ALL" />
            <QueryMeta      InternalName="AllColumnsInATable"       CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AColumnInATable"          CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AColumnInATable"          CellName="Index"        Operator="EQUAL"                />
            <IndexMeta      InternalName="ByName"                   ColumnInternalName="Table"          MetaFlags="UNIQUE"  />
            <IndexMeta      InternalName="ByName"                   ColumnInternalName="InternalName"   MetaFlags="UNIQUE"  />
            <IndexMeta      InternalName="ByID"                     ColumnInternalName="Table"                              />
            <IndexMeta      InternalName="ByID"                     ColumnInternalName="ID"                                 />
        </Collection>                                                
        <Collection         InternalName="DATABASEMETA" PublicName="DatabaseMetas"  MetaFlags="INTERNAL NOLISTENING"         >
            <Property       InternalName="InternalName"             Type="WSTR"     Size="32"                               MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="BaseVersion"              Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="ExtendedVersion"          Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="CountOfTables"            Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="Description"            Type="WSTR"                     />
            <QueryMeta      InternalName="AllDatabases"             MetaFlags="ALL" />
            <QueryMeta      InternalName="ADatabase"                CellName="InternalName" Operator="EQUAL"                />
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>                                                
        <Collection         InternalName="INDEXMETA"    PublicName="IndexMetas"     MetaFlags="INTERNAL NOLISTENING"         >
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="ColumnIndex"              Type="UI4"      MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="ColumnInternalName"       Type="WSTR"     MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Flag       InternalName="UNIQUE"                   Value="     1"  />
                <Flag       InternalName="SORTED"                   Value="     2"  />
            </Property>
            <QueryMeta      InternalName="AllIndexes"               MetaFlags="ALL" />
            <QueryMeta      InternalName="AllIndexesOfATable"       CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AnIndexOfATable"          CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AnIndexOfATable"          CellName="InternalName" Operator="EQUAL"                />
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>
        <Collection         InternalName="TABLEMETA"    PublicName="Collection"     MetaFlags="INTERNAL NOLISTENING"         >
            <Property       InternalName="Database"                 Type="WSTR"     Size="32"                               MetaFlags="CASEINSENSITIVE"/>
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="PublicRowName"            Type="WSTR"     MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="BaseVersion"              Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="ExtendedVersion"          Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="0"/>
            <Property       InternalName="NameColumn"               Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="NavColumn"                Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="CountOfColumns"           Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE" >
                <Flag       InternalName="INTERNAL"                 Value="       1"  />
                <Flag       InternalName="NOLISTENING"              Value="       2"  />
                <Flag       InternalName="RELATIONINTEGRITY"        Value="       4"  />
                <Flag       InternalName="ROWINTEGRITY"             Value="       8"  />
                <Flag       InternalName="HASUNKNOWNSIZES"          Value="      16"  />
                <Flag       InternalName="NOPUBLICINSERT"           Value="      32"  />
                <Flag       InternalName="NOPUBLICUPDATE"           Value="      64"  />
                <Flag       InternalName="NOPUBLICDELETE"           Value="     128"  />
                <Flag       InternalName="REQUIRESQUERY"            Value="     256"  />
                <Flag       InternalName="HASDIRECTIVES"            Value="     512"  />
                <Flag       InternalName="STOREDELTAS"              Value="    1024"  />
                <Flag       InternalName="AUTOGENITEMCLASS"         Value="    2048"  />
                <Flag       InternalName="AUTOGENCOLLECTIONCLASS"   Value="    4096"  />
                <Flag       InternalName="OVERRIDEITEMCLASS"        Value="    8192"  />
                <Flag       InternalName="OVERRIDECOLLECTIONCLASS"  Value="   16384"  />
                <Flag       InternalName="NAMEVALUEPAIRTABLE"       Value="   32768"  />
                <Flag       InternalName="HIDDEN"                   Value="   65536"  />
                <!-- OVERWRITEALLROWS means that, when UpdateSotre is called, the entire contents of the table are wiped out, and are    -->
                <!-- replaced my the contents in the Write Cache.  This means, a single row Delete will result in the entire table being -->
                <!-- deleted.  A single row insert will result in a table containing only that row.  And Updates are NOT allowed.        -->
                <!-- These kinds of table may NOT be queried by anything but Special query cells (Because what does it mean to insert two-->
                <!-- rows to a table containing five rows; but only one matches the query?  Do we wipe out the five rows and insert the  -->
                <!-- two?  Or do we only delete the one row that matches the query, then insert the two?  We'll avoid this confusion by  -->
                <!-- only allowing queries when the table is requested as Read only.                                                     -->
                <Flag       InternalName="OVERWRITEALLROWS"         Value="  131072"  />
            </Property>                                           
            <Property       InternalName="SchemaGeneratorFlags"     Type="UI4"      MetaFlags="NOTNULLABLE" PublicName="MetaFlagsEx">
                <Flag       InternalName="EMITXMLSCHEMA"            Value="         1"/>
                <Flag       InternalName="EMITCLBBLOB"              Value="         2"/>
                <Flag       InternalName="ISCONTAINED"              Value="         4"/>
                <Flag       InternalName="NOTSCOPEDBYTABLENAME"     Value="         8"/>
                <Flag       InternalName="GENERATECONFIGOBJECTS"    Value="        16"/>
                <Flag       InternalName="NOTABLESCHEMAHEAPENTRY"   Value="        32"/>
                <!-- CONTAINERCLASS is used by the metabase.  It is inferred as true -->
                <!-- when the ContainerClassList is not NULL                         -->
                <Flag       InternalName="CONTAINERCLASS"           Value="        64"/>
                <!-- EXTENDED properties are shipped properties that have been       -->
                <!-- modified.  This flag is mutually exclusive from USERDEFINED     -->
                <Flag       InternalName="EXTENDED"                 Value="       256"/>
                <!-- USERDEFINED properties are defined by the user                  -->
                <!-- this flag should never be set in the meta file, it is inferred. -->
                <Flag       InternalName="USERDEFINED"              Value="      1024"/>
            </Property>                                       
            <Property       InternalName="ConfigItemName"           PublicName="ItemClass"  Type="WSTR"     />
            <Property       InternalName="ConfigCollectionName"     PublicName="ItemCollection" Type="WSTR"     />
            <Property       InternalName="PublicRowNameColumn"      Type="UI4"      />
            <Property       InternalName="ContainerClassList"       Type="WSTR"     />
            <Property       InternalName="Description"              Type="WSTR"     />
            <Property       InternalName="ChildElementName"         Type="WSTR"     />
            <QueryMeta      InternalName="AllTables"                MetaFlags="ALL" />
            <QueryMeta      InternalName="AllTablesInADatabase"     CellName="Database"     Operator="EQUAL"                />
            <QueryMeta      InternalName="ATablesInADatabase"       CellName="Database"     Operator="EQUAL"                />
            <QueryMeta      InternalName="ATablesInADatabase"       CellName="InternalName" Operator="EQUAL"                />
        </Collection>                                                
        <Collection         InternalName="TAGMETA"      PublicName="TagMetas"       MetaFlags ="INTERNAL NOLISTENING"        >
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="ColumnIndex"              Type="UI4"      MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="Value"                    Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="ID"                       Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <QueryMeta      InternalName="AllTags"                  MetaFlags="ALL" />
            <QueryMeta      InternalName="AllTagsInATables"         CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AllTagsInAColumn"         CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AllTagsInAColumn"         CellName="ColumnIndex"  Operator="EQUAL"                />
            <QueryMeta      InternalName="ATagsInAColumn"           CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="ATagsInAColumn"           CellName="ColumnIndex"  Operator="EQUAL"                />
            <QueryMeta      InternalName="ATagsInAColumn"           CellName="InternalName" Operator="EQUAL"                />
            <IndexMeta      InternalName="ByTableAndTagNameOnly"    ColumnInternalName="Table"                              />
            <IndexMeta      InternalName="ByTableAndTagNameOnly"    ColumnInternalName="InternalName"                       />
            <IndexMeta      InternalName="ByTableAndColumnIndexOnly" ColumnInternalName="Table"                             />
            <IndexMeta      InternalName="ByTableAndColumnIndexOnly" ColumnInternalName="ColumnIndex"                       />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndNameOnly" ColumnInternalName="Table"                      />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndNameOnly" ColumnInternalName="ColumnIndex"                />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndNameOnly" ColumnInternalName="InternalName"               />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndValueOnly" ColumnInternalName="Table"                     />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndValueOnly" ColumnInternalName="ColumnIndex"               />
            <IndexMeta      InternalName="ByTableAndColumnIndexAndValueOnly" ColumnInternalName="Value"                     />
            <IndexMeta      InternalName="ByTableAndTagIDOnly"      ColumnInternalName="Table"                              />
            <IndexMeta      InternalName="ByTableAndTagIDOnly"      ColumnInternalName="ID"                                 />
        </Collection>                                                
        <Collection         InternalName="RELATIONMETA" PublicName="RelationMeta"  MetaFlags="INTERNAL NOLISTENING" MetaFlagsEx="GENERATECONFIGOBJECTS" ItemClass="System.Configuration.Schema.RelationMeta"         >
            <Property       InternalName="PrimaryTable"             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="PrimaryColumns"           Type="BYTES"    Size="-1" MetaFlags="NOTNULLABLE"       />
            <Property       InternalName="ForeignTable"             Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="ForeignColumns"           Type="BYTES"    Size="-1" MetaFlags="NOTNULLABLE"       />
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Flag       InternalName="CASCADEDELETE"            Value="1"       />
                <Flag       InternalName="PRIMARYREQUIRED"          Value="2"       />
                <Flag       InternalName="USECONTAINMENT"           Value="4"       />
                <Flag       InternalName="CONTAINASSIBLING"         Value="8"       />
                <Flag       InternalName="HIDDEN"                   Value="65536"       />
            </Property>
            <QueryMeta      InternalName="AllRelations"             MetaFlags="ALL" />
            <QueryMeta      InternalName="RelationsOfAPrimaryTable" CellName="PrimaryTable" Operator="EQUAL"                />
            <QueryMeta      InternalName="ARelationOfAPrimaryTable" CellName="PrimaryTable" Operator="EQUAL"                />
            <QueryMeta      InternalName="ARelationOfAPrimaryTable" CellName="ForeignTable" Operator="EQUAL"                />
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>
        <Collection         InternalName="QUERYMETA"    PublicName="QueryMeta"     MetaFlags="INTERNAL NOLISTENING" MetaFlagsEx="GENERATECONFIGOBJECTS" ItemClass="System.Configuration.Schema.QueryMeta"         >
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="InternalName"             Type="WSTR"     MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="PublicName"               Type="WSTR"     MetaFlags="NOTNULLABLE NAMECOLUMN"      />
            <Property       InternalName="Index"                    Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="CellName"                 Type="WSTR"     MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="Operator"                 Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="EQUAL">
                <Enum       InternalName="EQUAL"                    Value="0"       />
                <Enum       InternalName="NOTEQUAL"                 Value="1"       />
            </Property>
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <Flag       InternalName="ALL"                      Value="1"       />
                <Flag       InternalName="ANY"                      Value="2"       />
            </Property>
            <QueryMeta      InternalName="AllQueries"               MetaFlags="ALL" />
            <QueryMeta      InternalName="AllQueriesOfATable"       CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AQueryOfATable"           CellName="Table"        Operator="EQUAL"                />
            <QueryMeta      InternalName="AQueryOfATable"           CellName="InternalName" Operator="EQUAL"                />
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>
        <Collection         InternalName="SERVERWIRINGMETA"  PublicName="ServerWiring"   MetaFlags="INTERNAL NOLISTENING">
            <Property       InternalName="Table"                    Type="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"  />
            <Property       InternalName="Order"                    Type="UI4"      MetaFlags="PRIMARYKEY"                  />
            <Property       InternalName="ReadPlugin"               Type="UI4"      MetaFlags="NOTNULLABLE"                  >
            <!-- Readplugin Enums start at 1000 -->
                <Enum       InternalName="RPNone"                                   Value="0"       />
                <Enum       InternalName="RPDucttape_CFGValidationPlugin"           Value="1001"       />
                <Enum       InternalName="RPTracer"   Value="1002"       />
                <Enum       InternalName="AddRemoveClearReadPlugin"   Value="1003"    />
                <Enum       InternalName="AppCenter_ASAITablePlugin"  Value="1004"    />
            </Property>
            <Property       InternalName="ReadPluginDLLName"                  Type="WSTR"     MetaFlags="CASEINSENSITIVE"             />
            <Property       InternalName="WritePlugin"              Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <!-- WritePlugin Enums start at 2000 -->
                <Enum       InternalName="WPNone"                                   Value="0"       />
                <Enum       InternalName="WPTracer"           Value="2001"       />
                <Enum       InternalName="AddRemoveClearWritePlugin"   Value="2002"       />
            </Property>
            <Property       InternalName="WritePluginDLLName"                  Type="WSTR"     MetaFlags="CASEINSENSITIVE"             />
            <Property       InternalName="Interceptor"              Type="UI4"      MetaFlags="NOTNULLABLE"                  >
                <!-- Interceptor Enums start at 0 -->
                <Enum       InternalName="NoInterceptor"                            Value="0"       />
                <Enum       InternalName="TableDispenser"                           Value="1"       />
                <Enum       InternalName="Core_FixedInterceptor"                    Value="2"       />
                <Enum       InternalName="Core_ComplibInterceptor"                  Value="3"       />
                <Enum       InternalName="Core_XMLInterceptor"                      Value="4"       />
                <Enum       InternalName="Core_EventInterceptor"                    Value="5"       />
                <Enum       InternalName="Core_MemoryInterceptor"                   Value="6"       />
                <Enum       InternalName="Core_MergeDirectivesInterceptor"          Value="7"       />
                <Enum       InternalName="Core_AssemblyInterceptor"                 Value="8"       />
                <Enum       InternalName="Core_AssemblyInterceptor2"                Value="9"       />
                <Enum       InternalName="Core_FixedPackedInterceptor"              Value="10"      />
                <Enum       InternalName="Ducttape_FileNameInterceptor"             Value="11"      />
                <Enum       InternalName="WebServer_ValidationInterceptor"          Value="12"      />
                <Enum       InternalName="Ducttape_WriteInterceptor"                Value="13"      />
                <Enum       InternalName="Core_MetabaseInterceptor"                 Value="14"      />
                <Enum       InternalName="Core_MetabaseDifferencingInterceptor"     Value="15"      />
                <Enum       InternalName="Core_MetaMergeInterceptor"                Value="16"      />
                <Enum       InternalName="Core_DetailedErrorInterceptor"            Value="17"      />
                <Enum       InternalName="Core_MergeInterceptor"                    Value="18"      />
                <Enum       InternalName="AppCenter_ASAIInterceptor"                Value="19"      />
                <Enum       InternalName="AppCenter_ListToRowsPlugin"               Value="20"      />                
            </Property>
            <Property       InternalName="InterceptorDLLName"                  Type="WSTR"     MetaFlags="CASEINSENSITIVE"             />
            <Property       InternalName="MetaFlags"                Type="UI4"      MetaFlags="NOTNULLABLE"                 DefaultValue="First" >
                <Flag       InternalName="First"                    Value="1"       />
                <Flag       InternalName="Next"                     Value="2"       />
                <Flag       InternalName="Last"                     Value="4"       />
                <Flag       InternalName="NoNext"                   Value="8"       />
                <Flag       InternalName="WireOnWriteOnly"          Value="16"      />
                <Flag       InternalName="WireOnReadWrite"          Value="32"      />
                <Flag       InternalName="ReadOnly"                 Value="64"      />
            </Property>
            <Property       InternalName="Locator"                  Type="WSTR"     MetaFlags="CASEINSENSITIVE"             />
            <Property       InternalName="Reserved"                 Type="UI4"      MetaFlags="NOTNULLABLE"                 />
            <Property       InternalName="Merger"               Type="UI4"
MetaFlags="NOTNULLABLE"   >
                        
                <!-- Merger Enums start at 3000 -->
                <Enum   InternalName="ListAppend"       Value="3001"       /> 
                <Enum   InternalName="PropertyOverride" Value="3002"       /> 
                <Enum   InternalName="ListMerge"        Value="3003"       /> 
            </Property>
            <Property       InternalName="MergerDLLName" Type="WSTR"     MetaFlags="CASEINSENSITIVE" />
        </Collection>
    </DatabaseMeta>
    <DatabaseMeta           InternalName="ERRORS">
        <ServerWiring       Interceptor="Core_DetailedErrorInterceptor"/>
        <Collection         InternalName="DETAILEDERRORS"           PublicName="DetailedErrors"     MetaFlags="INTERNAL NOLISTENING">
            <!--ErrorID is a generated unique identifier-->
            <Property       InternalName="ErrorID"                  Type="UI4"      MetaFlags="NOTPERSISTABLE PRIMARYKEY INSERTGENERATE"/>
            <!--Description is the message string WITH the insertions strings added in-->
            <Property       InternalName="Description"              Type="WSTR"     MetaFlags="NOTNULLABLE"/>
            <Property       InternalName="Date"                     Type="WSTR"     />
            <Property       InternalName="Time"                     Type="WSTR"     />
            <Property       InternalName="SourceModuleName"         Type="WSTR"     MetaFlags="NOTNULLABLE"/>
            <!--MessageString is the entry from the MC file WITHOUT the insertion strings (the %1,%2 etc are still in the MessageString)-->
            <Property       InternalName="MessageString"            Type="WSTR"     />
            <!--CategoryString is the category from the MC file, ReportEvent maps the Category to its string; but other logger may need this-->
            <Property       InternalName="CategoryString"           Type="WSTR"     />
            <!--Source is the Source that appears in the NT EventLog.  It's usually just the Product ID followed by ' Config' (i.e. 'IIS Config')-->
            <Property       InternalName="Source"                   Type="WSTR"     MetaFlags="NOTNULLABLE"     DefaultValue="COM+ Config"/>
            <Property       InternalName="Type"                     Type="UI4"      MetaFlags="NOTNULLABLE"     DefaultValue="ERROR">
                <Enum       InternalName="SUCCESS"                  Value="0"       />
                <Enum       InternalName="ERROR"                    Value="1"       />
                <Enum       InternalName="WARNING"                  Value="2"       />
                <Enum       InternalName="INFORMATION"              Value="4"       />
                <Enum       InternalName="AUDIT_SUCCESS"            Value="8"       />
                <Enum       InternalName="AUDIT_FAILURE"            Value="16"      />
            </Property>
            <Property       InternalName="Category"                 Type="UI4"      />
            <!--User comes from the Windows API GetUserName-->
            <Property       InternalName="User"                     Type="WSTR"     />
            <!--Computer comes from the Windows API GetComputerName-->
            <Property       InternalName="Computer"                 Type="WSTR"     />
            <!--Data is used to provide an array of bytes that might be userful in diagnosing a problem-->
            <Property       InternalName="Data"                     Type="BYTES"    />
            <!--Event is the event number as defined in the MC file, that corresponds to the event message-->
            <Property       InternalName="Event"                    Type="UI4"      MetaFlags="NOTNULLABLE"/>
            <!-- All Detailed error must have an entry in the MC file (corresponding to the Event).  The MC message must contain a place for
                 exactly 5 strings (no more / no less).  The first four string (denoted by %1 %2 %3 %4) will be filled with the columns:
                 String1, String2, String3, String4.  The fifth string will be filled with each of the column PublicNames (located after String4)
                 followed by a colon and its value and a newline character. -->
            <Property       InternalName="String1"                  Type="WSTR"     />
            <Property       InternalName="String2"                  Type="WSTR"     />
            <Property       InternalName="String3"                  Type="WSTR"     />
            <Property       InternalName="String4"                  Type="WSTR"     />
            <Property       InternalName="String5"                  Type="WSTR"     />
            <!--ErrorCode is usually just an HRESULT-->
            <Property       InternalName="ErrorCode"                Type="UI4"      />
            <!--Interceptor is a numeric indication of which Interceptor generated the error.  This could be mapped to a string by looking it up in ServerWiringMeta-->
            <Property       InternalName="Interceptor"              Type="UI4"      />
            <!--InterceptorSource is usually the C++ source code filename.  It should NOT be reported in FREE builds.-->
            <Property       InternalName="InterceptorSource"        Type="WSTR"     />
            <Property       InternalName="OperationType"            Type="UI4"      DefaultValue="Unspecified">
                <Enum       InternalName="Unspecified"              Value="0"       />
                <Enum       InternalName="Populate"                 Value="1"       />
                <Enum       InternalName="UpdateStore"              Value="2"       />
            </Property>
            <Property       InternalName="Table"                    Type="WSTR"     />
            <!--ConfigurationSource is the XML config file name-->
            <Property       InternalName="ConfigurationSource"      Type="WSTR"     />
            <!--Row is usually either the Row in the table (in the case if UpdateStore errors), or the file line number (in the case of Populate errors)-->
            <Property       InternalName="Row"                      Type="UI4"      />
            <!--Column (see Row)-->
            <Property       InternalName="Column"                   Type="UI4"      />
            <!--MajorVersion is the IIS Metabase MajorVersion.  It could be overloaded to mean the Table BaseVersion or whatever makes sense-->
            <Property       InternalName="MajorVersion"             Type="UI4"      />
            <Property       InternalName="MinorVersion"             Type="UI4"      />
        </Collection>
    </DatabaseMeta>

    <DatabaseMeta           InternalName="PACKEDSCHEMA">
        <ServerWiring       Interceptor="Core_FixedPackedInterceptor"/>
        <Collection         InternalName="COLLECTION_META"          MetaFlags="INTERNAL NOLISTENING"    InheritsPropertiesFrom="TABLEMETA"/>
        <Collection         InternalName="PROPERTY_META"            MetaFlags="INTERNAL NOLISTENING"    InheritsPropertiesFrom="COLUMNMETA"/>
        <Collection         InternalName="SERVERWIRING_META"        MetaFlags="INTERNAL NOLISTENING"    InheritsPropertiesFrom="SERVERWIRINGMETA"/>
        <Collection         InternalName="TAG_META"                 MetaFlags ="INTERNAL NOLISTENING"   InheritsPropertiesFrom="TAGMETA"/>
    </DatabaseMeta>

   <DatabaseMeta           InternalName="CONFIGSYS">
        <ServerWiring       Interceptor="Core_XMLInterceptor"/>
        <Collection         InternalName="ManagedWiring"    PublicName="InterceptorWiring"   MetaFlagsEx="EMITXMLSCHEMA"    PublicRowName="Intercept" MetaFlags="INTERNAL" >
            <Property       InternalName="ConfigType"               Type="WSTR"     MetaFlags="PRIMARYKEY"          />
            <Property       InternalName="Protocol"                 Type="WSTR"     MetaFlags="PRIMARYKEY"          />
            <Property       InternalName="Order"                    Type="UI4"      MetaFlags="PRIMARYKEY"          />
            <Property       InternalName="InterceptorClass"         Type="WSTR"     />
            <Property       InternalName="InterceptorType"          Type="UI4"      MetaFlags="NOTNULLABLE" >
                <Enum       InternalName="Reader"                   Value="     1"  />
                <Enum       InternalName="Writer"                   Value="     2"  />
                <Enum       InternalName="Transformer"              Value="     3"  />
                <Enum       InternalName="Merger"                   Value="     4"  />
                <Enum       InternalName="Validator"                Value="             5" />
            </Property>
            <Property       InternalName="InterceptorFlags"         Type="UI4"      />
            <QueryMeta      InternalName="All"                      MetaFlags="ALL" />
        </Collection>                                                                

        <Collection         InternalName="SchemaFiles"                            MetaFlagsEx="EMITXMLSCHEMA GENERATECONFIGOBJECTS"    PublicRowName="SchemaFile" ItemClass="System.Configuration.Schema.SchemaFile"         >
            <Property       InternalName="Name"                     Type="WSTR"     MetaFlags="PRIMARYKEY"          />
            <Property       InternalName="Path"                     Type="WSTR"                                     />
            <QueryMeta      InternalName="All"                      MetaFlags="ALL" />
        </Collection>                                                                
    </DatabaseMeta>

    <DatabaseMeta           InternalName="MEMORY">
        <ServerWiring       Interceptor="Core_MemoryInterceptor"/>
        <Collection         InternalName="MEMORY_SHAPEABLE" MetaFlags="INTERNAL">
            <QueryMeta      InternalName="All"                      MetaFlags="ALL"                                     />
        </Collection>
    </DatabaseMeta>
    <DatabaseMeta   InternalName="FIXED">
	    <ServerWiring       Interceptor="Core_FixedInterceptor"/>
		<Collection     InternalName="TRANSFORMER_META" PublicRowName="TransformerWiring"    MetaFlags="INTERNAL" MetaFlagsEx="EMITXMLSCHEMA">
			<ServerWiring       Interceptor="Core_FixedInterceptor"/>
            <Property   InternalName="TF_Protocol"  Type="WSTR"      MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="TF_Type"      Type ="UI4"      MetaFlags="NOTNULLABLE">
                <!-- Transformer Enum starts at 4000 --> 
                <Enum    InternalName="FileTransformer" Value="4000"/>
                <Enum    InternalName="WebHierarchyTransformer" Value="4001"/>
                <Enum    InternalName="AppDomainTransformer" Value="4002"/>
                <Enum    InternalName="LocalMachineTransformer" Value="4003"/>
                <Enum    InternalName="ConfigTransformer" Value="4004"/>
                <Enum    InternalName="ShellTransformer" Value="4005"/>
            </Property>
            <Property   InternalName="DllName"      Type="WSTR"/>
            <ServerWiring   Interceptor="Core_FixedInterceptor"/>
        </Collection>
    </DatabaseMeta>
    <DatabaseMeta   InternalName="MOFGENERATOR">
        <ServerWiring       Interceptor="Core_XMLInterceptor"/>
        <Collection     InternalName="ASSOC_META"   PublicRowName="Association"  MetaFlags="INTERNAL" MetaFlagsEx="EMITXMLSCHEMA">
            <Property   InternalName="Type"     Type="WSTR"      MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
            <Property   InternalName="TableName"    Type ="WSTR"     MetaFlags="PRIMARYKEY CASEINSENSITIVE"/>
        </Collection>
    </DatabaseMeta>
    

    <RelationMeta   PrimaryTable="DATABASEMETA"     PrimaryColumns="InternalName"       ForeignTable="TABLEMETA"                ForeignColumns="Database"                />
    <RelationMeta   PrimaryTable="TABLEMETA"        PrimaryColumns="InternalName"       ForeignTable="COLUMNMETA"               ForeignColumns="Table"                   />
    <RelationMeta   PrimaryTable="TABLEMETA"        PrimaryColumns="InternalName"       ForeignTable="QUERYMETA"                ForeignColumns="Table"                   />
    <RelationMeta   PrimaryTable="TABLEMETA"        PrimaryColumns="InternalName"       ForeignTable="INDEXMETA"                ForeignColumns="Table"                   />
    <RelationMeta   PrimaryTable="COLUMNMETA"       PrimaryColumns="Table Index"        ForeignTable="INDEXMETA"                ForeignColumns="Table ColumnIndex"       />
    <RelationMeta   PrimaryTable="COLUMNMETA"       PrimaryColumns="Table Index"        ForeignTable="TAGMETA"                  ForeignColumns="Table ColumnIndex"       />
    
</MetaData>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\config\src\inc\iismeta.xml ===
<?xml version ="1.0"?>
<MetaData xmlns="x-schema:CatMeta.xms">

    <DatabaseMeta       InternalName ="METABASE">
        <ServerWiring   Interceptor  ="Core_XMLInterceptor"/>
        <Collection     InternalName ="MetabaseBaseClass"               MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" MetaFlags="HIDDEN" >
            <Property   InternalName ="Location"                            ID="9989"   Type="WSTR"   MetaFlags="PRIMARYKEY"/>
        </Collection>
        <Collection     InternalName ="IIsConfigObject"                 MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" MetaFlags="HIDDEN" >
            <Property   InternalName ="KeyType"                             ID="1002"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlags="PRIMARYKEY" MetaFlagsEx="CACHE_PROPERTY_MODIFIED"    DefaultValue=""/>
            <Property   InternalName ="AdminACL"                            ID="6027"   Type="NTACL"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT | SECURE | REFERENCE"   MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="AdminACLBin"                         ID="6286"   Type="BINARY"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT | SECURE | REFERENCE"   MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="AdminEmail"                          ID="45060"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="AdminName"                           ID="45061"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="AdminServer"                         ID="2115"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"/>
            <Property   InternalName ="AllowAnonymous"                      ID="5005"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AllowClientPosts"                    ID="45062"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="0"/>
            <Property   InternalName ="AllowControlMsgs"                    ID="45064"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="0"/>
            <Property   InternalName ="AllowFeedPosts"                      ID="45063"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="0"/>
            <Property   InternalName ="AllowKeepAlive"                      ID="6038"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AllowPathInfoForScriptMappings"      ID="2095"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AlwaysUseSsl"                        ID="36924"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AnonymousOnly"                       ID="5006"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AnonymousPasswordSync"               ID="6022"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AnonymousUserName"                   ID="6020"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="AnonymousUserPass"                   ID="6021"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="AppAllowClientDebug"                 ID="7019"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AppAllowDebugging"                   ID="7018"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AppFriendlyName"                     ID="2102"   Type="STRING"       UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="AppIsolated"                         ID="2104"   Type="DWORD"        UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue="2"            EndingNumber="0"/>
            <Property   InternalName ="AppOopRecoverLimit"                  ID="2110"   Type="DWORD"        UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AppPackageID"                        ID="2106"   Type="STRING"       UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue=""/>
            <Property   InternalName ="AppPackageName"                      ID="2107"   Type="STRING"       UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue=""/>
            <Property   InternalName ="AppPoolId"                           ID="9101"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlags="CASEINSENSITIVE LOCALIZABLE"                         MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="AppPoolIdentityType"                 ID="9021"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="2"            StartingNumber="0"   EndingNumber="3"/>
            <Property   InternalName ="AppPoolCommand"                      ID="9026"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="VOLATILE"                       MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           StartingNumber="1"          EndingNumber="2"/>
            <Property   InternalName ="AppPoolState"                        ID="9027"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="VOLATILE"                       MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           StartingNumber="1"          EndingNumber="4"/>
            <Property   InternalName ="AppPoolAutoStart"                    ID="9028"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"/>
            <Property   InternalName ="AppRoot"                             ID="2103"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue=""/>
            <Property   InternalName ="AppWamClsid"                         ID="2105"   Type="STRING"       UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ArticleTableFile"                    ID="45158"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="AspAllowOutOfProcComponents"         ID="7014"   Type="BOOL"         UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspAllowSessionState"                ID="7011"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspBufferingOn"                      ID="7000"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspCodepage"                         ID="7016"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AspDiskTemplateCacheDirectory"       ID="7036"   Type="EXPANDSZ"     UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="%Windir%\System32\inetsrv\ASP Compiled Templates"/>
            <Property   InternalName ="AspEnableApplicationRestart"         ID="7027"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspEnableAspHtmlFallback"            ID="7021"   Type="BOOL"         UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AspEnableChunkedEncoding"            ID="7022"   Type="BOOL"         UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspEnableParentPaths"                ID="7008"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AspEnableTypelibCache"               ID="7023"   Type="BOOL"         UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspErrorsToNTLog"                    ID="7024"   Type="BOOL"         UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AspExceptionCatchEnable"             ID="7015"   Type="BOOL"         UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspKeepSessionIDSecure"              ID="7043"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"/>
            <Property   InternalName ="AspLCID"                             ID="7042"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AspLogErrorRequests"                 ID="7001"   Type="BOOL"         UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspMaxDiskTemplateCacheFiles"        ID="7040"   Type="DWORD"        UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="2000"         EndingNumber="0"/>
            <Property   InternalName ="AspPartitionID"                      ID="7048"   Type="STRING"       UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="AspSxsName"                          ID="7049"   Type="STRING"       UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="AspProcessorThreadMax"               ID="7025"   Type="DWORD"        UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="10"           EndingNumber="0"/>
            <Property   InternalName ="AspQueueConnectionTestTime"          ID="7028"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="3"            EndingNumber="0"/>
            <Property   InternalName ="AspQueueTimeout"                     ID="7013"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspRequestQueueMax"                  ID="7026"   Type="DWORD"        UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="500"          EndingNumber="0"/>
            <Property   InternalName ="AspScriptEngineCacheMax"             ID="7005"   Type="DWORD"        UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="250"          EndingNumber="0"/>
            <Property   InternalName ="AspScriptErrorMessage"               ID="7003"   Type="STRING"       UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="An error occurred on the server when processing the URL. Please contact the system administrator."/>
            <Property   InternalName ="AspScriptErrorSentToBrowser"         ID="7002"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspScriptFileCacheSize"              ID="7004"   Type="DWORD"        UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="500"          EndingNumber="0"/>
            <Property   InternalName ="AspScriptLanguage"                   ID="7012"   Type="STRING"       UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="Vbscript"/>
            <Property   InternalName ="AspScriptTimeout"                    ID="7006"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="90"           EndingNumber="0"/>
            <Property   InternalName ="AspSessionMax"                       ID="7029"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AspSessionTimeout"                   ID="7007"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="10"           EndingNumber="0"/>
            <Property   InternalName ="AspTrackThreadingModel"              ID="7020"   Type="BOOL"         UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AspExecuteInMTA"                     ID="7041"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="AspRunOnEndAnonymously"              ID="7051"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="0"/>
            <Property   InternalName ="AuthTurnList"                        ID="36966"  Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="IIs5IsolationModeEnabled"            ID="9203"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"/>
            <Property   InternalName ="BadMailDirectory"                    ID="36909"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="CacheControlCustom"                  ID="6043"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="CacheControlMaxAge"                  ID="6042"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="CacheControlNoCache"                 ID="6041"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="CacheISAPI"                          ID="6034"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="CertCheckMode"                       ID="2160"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="CGITimeout"                          ID="6033"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="300"          EndingNumber="0"/>
            <Property   InternalName ="ChangeNumber"                        ID="9997"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"/>
            <Property   InternalName ="ClientPostHardLimit"                 ID="45165"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="ClientPostSoftLimit"                 ID="45166"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="ClusterEnabled"                      ID="1025"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="CollectionComment"                   ID="9990"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="ConnectionTimeout"                   ID="1013"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="120"          EndingNumber="2147483647"/>
            <Property   InternalName ="ContentIndexed"                      ID="6039"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="CPUAction"                           ID="9022"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="3"/>
            <Property   InternalName ="CPULimit"                            ID="9023"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="100000"/>
            <Property   InternalName ="CPUResetInterval"                    ID="2144"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="1440"/>
            <Property   InternalName ="CreateCGIWithNewConsole"             ID="6036"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="CreateProcessAsUser"                 ID="6035"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="CSideEtrnDomains"                    ID="36968"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="CustomErrorDescriptions"             ID="2120"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="DefaultDoc"                          ID="6006"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="default.htm"/>
            <Property   InternalName ="DefaultDocFooter"                    ID="6009"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="DefaultDomain"                       ID="36908"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="DefaultLogonDomain"                  ID="6012"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="DefaultModeratorDomain"              ID="45065"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="DirectoryLevelsToScan"               ID="1022"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="2"            EndingNumber="0"/>
            <Property   InternalName ="DisableNewNews"                      ID="45068"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="DisableSocketPooling"                ID="1029"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="DisallowOverlappingRotation"         ID="9015"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="DisallowRotationOnConfigChange"      ID="9018"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="DomainRouting"                       ID="36920"  Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue=""/>
            <Property   InternalName ="DoMasquerade"                        ID="36913"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="DontLog"                             ID="6023"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="DownlevelAdminInstance"              ID="1021"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="DropDirectory"                       ID="36882"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HistoryMajorVersionNumber"           ID="9994"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"/>
            <Property   InternalName ="XMLSchemaTimeStamp"                  ID="9992"   Type="BINARY"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"/>
            <Property   InternalName ="BINSchemaTimeStamp"                  ID="9991"   Type="BINARY"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"/>
            <Property   InternalName ="EnableHistory"                       ID="9996"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="EnableDocFooter"                     ID="6010"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="EnableEditWhileRunning"              ID="9998"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="EnableReverseDns"                    ID="6029"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="EnableReverseDnsLookup"              ID="36884"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="EtrnDays"                            ID="36918"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="ExitMessage"                         ID="5001"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="FeedPostHardLimit"                   ID="45167"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="FeedPostSoftLimit"                   ID="45168"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="FeedReportPeriod"                    ID="45180"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="FilterDescription"                   ID="2045"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="FilterEnableCache"                   ID="2046"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="FilterEnabled"                       ID="2043"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="FilterLoadOrder"                     ID="2040"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="FilterPath"                          ID="2041"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="FilterState"                         ID="2042"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="FrontPageWeb"                        ID="2072"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="FtpDirBrowseShowLongDate"            ID="5010"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="FullyQualifiedDomainName"            ID="36935"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="BannerMessage"                       ID="5011"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="UserIsolationMode"                   ID="5012"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="2"/>
            <Property   InternalName ="FtpLogInUtf8"                        ID="5013"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="GreetingMessage"                     ID="5002"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="GroupHelpFile"                       ID="45156"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="GroupListFile"                       ID="45157"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="GroupVarListFile"                    ID="45182"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HeaderWaitTimeout"                   ID="9204"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="HcCacheControlHeader"                ID="2211"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="max-age=86400"/>
            <Property   InternalName ="HcCompressionBufferSize"             ID="2223"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="8192"         EndingNumber="0"/>
            <Property   InternalName ="HcCompressionDirectory"              ID="2210"   Type="EXPANDSZ"     UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="%Windir%\IIS Temporary Compressed Files"/>
            <Property   InternalName ="HcCompressionDll"                    ID="2237"   Type="EXPANDSZ"     UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HcCreateFlags"                       ID="2243"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="HcDoDiskSpaceLimiting"               ID="2216"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="HcDoDynamicCompression"              ID="2213"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="HcDoOnDemandCompression"             ID="2215"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="HcDoStaticCompression"               ID="2214"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="HcDynamicCompressionLevel"           ID="2241"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="HcExpiresHeader"                     ID="2212"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HcFileExtensions"                    ID="2238"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HcFilesDeletedPerDiskFree"           ID="2225"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="256"          EndingNumber="0"/>
            <Property   InternalName ="HcIoBufferSize"                      ID="2222"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="8192"         EndingNumber="0"/>
            <Property   InternalName ="HcMaxDiskSpaceUsage"                 ID="2221"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1000000"      EndingNumber="0"/>
            <Property   InternalName ="HcMaxQueueLength"                    ID="2224"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1000"         EndingNumber="0"/>
            <Property   InternalName ="HcMinFileSizeForComp"                ID="2226"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="256"          EndingNumber="0"/>
            <Property   InternalName ="HcNoCompressionForHttp10"            ID="2217"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="HcNoCompressionForProxies"           ID="2218"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="HcNoCompressionForRange"             ID="2219"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="HcOnDemandCompLevel"                 ID="2242"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="10"           EndingNumber="0"/>
            <Property   InternalName ="HcPriority"                          ID="2240"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="0"/>
            <Property   InternalName ="HcScriptFileExtensions"              ID="2244"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HcSendCacheHeaders"                  ID="2220"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="HistoryTableFile"                    ID="45159"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HonorClientMsgIds"                   ID="45058"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="0"/>
            <Property   InternalName ="HopCount"                            ID="36886"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="10"           EndingNumber="0"/>
            <Property   InternalName ="HttpCustomHeaders"                   ID="6004"   Type="MULTISZ"      UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HttpErrors"                          ID="6008"   Type="MULTISZ"      UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HttpExpires"                         ID="6002"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="D, 0x15180"/>
            <Property   InternalName ="HttpPics"                            ID="6003"   Type="MULTISZ"      UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="HttpRedirect"                        ID="6011"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="IdleTimeout"                         ID="9005"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="20"           EndingNumber="4294967295"/>
            <Property   InternalName ="ImapClearTextProvider"               ID="49375"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDefaultDomain"                   ID="49368"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDsAccount"                       ID="49383"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDsBindType"                      ID="49379"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDsDataDirectory"                 ID="49377"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDsDefaultMailRoot"               ID="49378"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDsHost"                          ID="49381"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDsNamingContext"                 ID="49382"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDsPassword"                      ID="49384"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapDsSchemaType"                    ID="49380"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapExpireDelay"                     ID="49370"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1440"         EndingNumber="0"/>
            <Property   InternalName ="ImapExpireMail"                      ID="49373"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="ImapExpireStart"                     ID="49371"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="ImapMailExpirationTime"              ID="49153"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="ImapRoutingDll"                      ID="49369"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ImapRoutingSources"                  ID="49366"  Type="MULTISZ"      UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue=""/>
            <Property   InternalName ="ImapRoutingTableType"                ID="49376"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="LDAP"/>
            <Property   InternalName ="ImapServiceVersion"                  ID="49652"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="InProcessIsapiApps"                  ID="2073"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="IPSecurity"                          ID="6019"   Type="IPSECLIST"    UserType="IIS_MD_UT_FILE"   Attributes="INHERIT | REFERENCE"            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="LimitRemoteConnections"              ID="36926"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="ListFile"                            ID="45172"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="LocalRetryAttempts"                  ID="36896"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="48"           EndingNumber="0"/>
            <Property   InternalName ="LocalRetryInterval"                  ID="36897"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="60"           EndingNumber="0"/>
            <Property   InternalName ="LogAnonymous"                        ID="5007"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="LogCustomPropertyDataType"           ID="4505"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="LogCustomPropertyHeader"             ID="4502"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="LogCustomPropertyID"                 ID="4503"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="LogCustomPropertyMask"               ID="4504"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="LogCustomPropertyName"               ID="4501"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="LogCustomPropertyServicesString"     ID="4506"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="W3Svc | MSFTPSvc | SmtpSvc | NNTPSvc"/>
            <Property   InternalName ="LogCustomPropertyNodeID"             ID="4508"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="LogFileDirectory"                    ID="4001"   Type="EXPANDSZ"     UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="%Windir%\System32\LogFiles"/>
            <Property   InternalName ="LogFileLocaltimeRollover"            ID="4015"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="LogFilePeriod"                       ID="4003"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="4"/>
            <Property   InternalName ="LogFileTruncateSize"                 ID="4004"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="2000000"      EndingNumber="4294967295"/>
            <Property   InternalName ="LogInUTF8"                           ID="9206"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="LogModuleId"                         ID="4005"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="LogModuleList"                       ID="4012"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="NCSA Common Log File Format, Microsoft IIS Log File Format, W3C Extended Log File Format"/>
            <Property   InternalName ="LogModuleUiId"                       ID="4006"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="LogNonAnonymous"                     ID="5008"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="LogOdbcDataSource"                   ID="4007"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="HTTPLOG"/>
            <Property   InternalName ="LogOdbcPassword"                     ID="4010"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="LogOdbcTableName"                    ID="4008"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="InternetLog"/>
            <Property   InternalName ="LogOdbcUserName"                     ID="4009"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="InternetAdmin"/>
            <Property   InternalName ="LogonMethod"                         ID="6013"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="3"            EndingNumber="3"/>
            <Property   InternalName ="LogPluginClsid"                      ID="4011"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="LogType"                             ID="4000"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="1"/>
            <Property   InternalName ="MasqueradeDomain"                    ID="36912"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="MaxErrorFiles"                       ID="9988"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="10"/>
            <Property   InternalName ="MaxHistoryFiles"                     ID="9995"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="10"/>
            <Property   InternalName ="MaxBandwidth"                        ID="1000"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"/>
            <Property   InternalName ="MaxBandwidthBlocked"                 ID="1003"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="MaxBatchedMessages"                  ID="36871"  Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="MaxClientsMessage"                   ID="5003"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="MaxConnections"                      ID="1014"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="MaxEndpointConnections"              ID="1024"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="MaxGlobalBandwidth"                  ID="9201"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"/>
            <Property   InternalName ="MaxMessageSize"                      ID="36891"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="33554432"     EndingNumber="0"/>
            <Property   InternalName ="MaxOutConnections"                   ID="36894"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="MaxOutConnectionsPerDomain"          ID="36925"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="MaxProcesses"                        ID="9003"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            StartingNumber="1"  EndingNumber="4294967295"/>
            <Property   InternalName ="MaxRecipients"                       ID="36895"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="100"          EndingNumber="0"/>
            <Property   InternalName ="MaxSearchResults"                    ID="45181"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="MaxSessionSize"                      ID="36892"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="268435456"    EndingNumber="0"/>
            <Property   InternalName ="MaxSmtpLogonErrors"                  ID="36945"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4"            EndingNumber="0"/>
            <Property   InternalName ="MD_0"                                ID="0"      Type="STRING"       UserType="UNKNOWN_UserType" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="MD_1001"                             ID="1001"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="PostmasterName"                      ID="36916"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"/>
            <Property   InternalName ="PostmasterEmail"                     ID="36917"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"/>
            <Property   InternalName ="LocalDomains"                        ID="36919"  Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"/>
            <Property   InternalName ="ShutdownLatency"                     ID="45070"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="MD_APP_LAST_OUTPROC_PID"             ID="2108"   Type="STRING"       UserType="IIS_MD_UT_WAM"    Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="AuthChangeURL"                       ID="2060"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           Description="This is the URL that is invoked, if the user entered a new password"/>
            <Property   InternalName ="AuthExpiredUnsecureURL"              ID="2067"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           Description="IIS should redirect to this URL, if the following is true: 1. IIS detected that the users password expired. 2. Bit 0 of PasswordChangeFlags is 1. 3. Bit 1 of PasswordChangeFlags is 0."/>
            <Property   InternalName ="AuthExpiredURL"                      ID="2061"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           Description="IIS should redirect to this secure URL (HTTPS), if the following is true: 1. IIS detected that the users password expired. 2. Bit 0 of PasswordChangeFlags is 0. 3. Bit 1 of PasswordChangeFlags is 0."/>
            <Property   InternalName ="AuthNotifyPwdExpURL"                 ID="2062"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           Description="IIS should redirect to this secure URL (HTTPS), if  the following is true: 1. IIS detected that the users password expires sooner than the PasswordExpirePreNotifyDays settings 2. Bit 0 of PasswordChangeFlags is 0. 3. Bit 1 of PasswordChangeFlags is 0. 4. Bit 2 of PasswordChangeFlags is 0."/>
            <Property   InternalName ="AuthNotifyPwdExpUnsecureURL"         ID="2069"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           Description="IIS should redirect to this URL, if  the following is true: 1. IIS detected that the users password expires sooner than the PasswordExpirePreNotifyDays settings. 2. Bit 0 of PasswordChangeFlags is 1. 3. Bit 1 of PasswordChangeFlags is 0. 4. Bit 2 of PasswordChangeFlags is 0."/>
            <Property   InternalName ="MD_ETAG_CHANGENUMBER"                ID="2039"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="MD_IISADMIN_EXTENSIONS"              ID="1028"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="MD_ISM_ACCESS_CHECK"                 ID="6269"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="MD_METADATA_ID_REGISTRATION"         ID="1030"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="MD_SERVER_CAPABILITIES"              ID="1103"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="ServerCommand"                       ID="1012"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="VOLATILE"                       MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="MD_SERVER_PLATFORM"                  ID="1100"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="HIDDEN"/>
            <Property   InternalName ="MajorIIsVersionNumber"               ID="1101"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"/>
            <Property   InternalName ="MinorIIsVersionNumber"               ID="1102"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"/>
            <Property   InternalName ="MimeMap"                             ID="6015"   Type="MIMEMAP"      UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="MinFileBytesPerSec"                  ID="9205"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="240"/>
            <Property   InternalName ="ModeratorFile"                       ID="45160"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="MSDOSDirOutput"                      ID="5004"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="NntpCommandLogMask"                  ID="45067"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="NewsDropDirectory"                   ID="45176"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="NewsFailedPickupDirectory"           ID="45174"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="NewsPickupDirectory"                 ID="45173"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="NntpServiceVersion"                  ID="45175"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="NntpUucpName"                        ID="45170"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="NTAuthenticationProviders"           ID="6032"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="OrphanActionExe"                     ID="9031"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="OrphanActionParams"                  ID="9032"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="OrphanWorkerProcess"                 ID="9009"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="PasswordCacheTTL"                    ID="2064"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="600"          EndingNumber="0"/>
            <Property   InternalName ="PasswordExpirePrenotifyDays"         ID="2063"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="Path"                                ID="3001"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="PeriodicRestartRequests"             ID="9002"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="10000"        EndingNumber="4294967295"/>
            <Property   InternalName ="PeriodicRestartSchedule"             ID="9020"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="PeriodicRestartTime"                 ID="9001"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="60"           EndingNumber="71582"/>
            <Property   InternalName ="PeriodicRestartMemory"               ID="9024"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="512000"       EndingNumber="4194303"/>
            <Property   InternalName ="PeriodicRestartPrivateMemory"        ID="9038"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            StartingNumber="0"  EndingNumber="3145728"/>
            <Property   InternalName ="PickupDirectory"                     ID="36880"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="PingingEnabled"                      ID="9004"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"/>
            <Property   InternalName ="PingInterval"                        ID="9013"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="30"          StartingNumber="1"  EndingNumber="4294967"/>
            <Property   InternalName ="PingResponseTime"                    ID="9014"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="60"           StartingNumber="1"  EndingNumber="4294967"/>
            <Property   InternalName ="PoolIdcTimeout"                      ID="6037"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="Pop3ClearTextProvider"               ID="41182"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DefaultDomain"                   ID="41176"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DsAccount"                       ID="41190"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DsBindType"                      ID="41186"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DsDataDirectory"                 ID="41184"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DsDefaultMailRoot"               ID="41185"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DsHost"                          ID="41188"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DsNamingContext"                 ID="41189"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DsPassword"                      ID="41191"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3DsSchemaType"                    ID="41187"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3ExpireDelay"                     ID="41178"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1440"         EndingNumber="0"/>
            <Property   InternalName ="Pop3ExpireMail"                      ID="41181"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="Pop3ExpireStart"                     ID="41179"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="Pop3MailExpirationTime"              ID="40961"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="Pop3RoutingDll"                      ID="41177"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="Pop3RoutingSources"                  ID="41174"  Type="MULTISZ"      UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue=""/>
            <Property   InternalName ="Pop3RoutingTableType"                ID="41183"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="LDAP"/>
            <Property   InternalName ="Pop3ServiceVersion"                  ID="41460"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="PrettyNamesFile"                     ID="45178"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="NntpClearTextProvider"               ID="45179"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ProcessNTCRIfLoggedOn"               ID="2070"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="QueueDirectory"                      ID="36875"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="RapidFailProtection"                 ID="9006"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"/>
            <Property   InternalName ="RapidFailProtectionInterval"         ID="9029"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="5"            StartingNumber="1"  EndingNumber="71582"/>
            <Property   InternalName ="RapidFailProtectionMaxCrashes"       ID="9030"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="5"            StartingNumber="1"/>
            <Property   InternalName ="Realm"                               ID="6001"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="RedirectHeaders"                     ID="6044"   Type="MULTISZ"      UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="RelayForAuth"                        ID="36973"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="RelayIpList"                         ID="36970"  Type="IPSECLIST"    UserType="IIS_MD_UT_FILE"   Attributes="INHERIT | REFERENCE"            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="RemoteRetryAttempts"                 ID="36898"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="48"           EndingNumber="0"/>
            <Property   InternalName ="RemoteRetryInterval"                 ID="36899"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="60"           EndingNumber="0"/>
            <Property   InternalName ="RemoteSmtpPort"                      ID="36914"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="25"           EndingNumber="0"/>
            <Property   InternalName ="RemoteSmtpSecurePort"                ID="36929"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="465"          EndingNumber="0"/>
            <Property   InternalName ="RemoteTimeout"                       ID="36921"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="RevocationFreshnessTime"             ID="2161"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="86400"/>
            <Property   InternalName ="RevocationURLRetrievalTimeout"       ID="2162"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="RouteAction"                         ID="36946"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="RouteActionString"                   ID="36947"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="RoutePassword"                       ID="36949"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="RouteUserName"                       ID="36948"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="RoutingDll"                          ID="36883"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="RoutingSources"                      ID="36910"  Type="MULTISZ"      UserType="IIS_MD_UT_WAM"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue=""/>
            <Property   InternalName ="SaslLogonDomain"                     ID="36940"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ScriptMaps"                          ID="6014"   Type="MULTISZ"      UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SecureBindings"                      ID="2021"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SendBadTo"                           ID="36923"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SendNdrTo"                           ID="36922"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ServerAutoStart"                     ID="1017"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"/>
            <Property   InternalName ="ServerBindings"                      ID="1023"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ServerComment"                       ID="1015"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="ServerListenBacklog"                 ID="1019"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="40"           EndingNumber="0"/>
            <Property   InternalName ="ServerListenTimeout"                 ID="1020"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="120"/>
            <Property   InternalName ="ServerSize"                          ID="1018"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="0"/>
            <Property   InternalName ="ServerState"                         ID="1016"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="VOLATILE"                       MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue="4"/>
            <Property   InternalName ="SessionKey"                          ID="9999"   Type="BINARY"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"/>
            <Property   InternalName ="ShouldDeliver"                       ID="36881"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1"            EndingNumber="0"/>
            <Property   InternalName ="ShutdownTimeLimit"                   ID="9012"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="90"           StartingNumber="1"  EndingNumber="4294967"/>
            <Property   InternalName ="SmartHost"                           ID="36906"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmartHostType"                       ID="36905"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SMPAffinitized"                      ID="9007"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"/>
            <Property   InternalName ="SMPProcessorAffinityMask"            ID="9008"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"/>
            <Property   InternalName ="SmtpAdvQueueDll"                     ID="36987"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpAuthTimeout"                     ID="37006"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpBdatTimeout"                     ID="37005"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpClearTextProvider"               ID="36942"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpCommandLogMask"                  ID="36864"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpConnectTimeout"                  ID="37001"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpDataTimeout"                     ID="37004"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpDsAccount"                       ID="36957"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDsBindType"                      ID="36953"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDsDataDirectory"                 ID="36951"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDsDefaultMailRoot"               ID="36952"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDsDomain"                        ID="36993"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDsFlags"                         ID="37024"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpDsHost"                          ID="36955"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDsNamingContext"                 ID="36956"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDSNLanguageID"                   ID="37022"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpDSNOptions"                      ID="37021"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpDsPassword"                      ID="36958"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDsPort"                          ID="37023"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpDsSchemaType"                    ID="36954"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpDsUseCat"                        ID="36994"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpFlushMailFile"                   ID="36866"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpHeloTimeout"                     ID="37012"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpInboundCommandSupportOptions"    ID="36998"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="7697601"      EndingNumber="0"/>
            <Property   InternalName ="SmtpLocalDelayExpireMinutes"         ID="37017"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="60"           EndingNumber="0"/>
            <Property   InternalName ="SmtpLocalNDRExpireMinutes"           ID="37018"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="2880"         EndingNumber="0"/>
            <Property   InternalName ="SmtpMailFromTimeout"                 ID="37002"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpOutboundCommandSupportOptions"   ID="36999"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="7697601"      EndingNumber="0"/>
            <Property   InternalName ="SmtpRcptToTimeout"                   ID="37003"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpRemoteDelayExpireMinutes"        ID="37019"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="60"           EndingNumber="0"/>
            <Property   InternalName ="SmtpRemoteNDRExpireMinutes"          ID="37020"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="2880"         EndingNumber="0"/>
            <Property   InternalName ="SmtpRemoteProgressiveRetry"          ID="36996"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpRemoteRetryThreshold"            ID="36995"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="3"            EndingNumber="0"/>
            <Property   InternalName ="SmtpRoutingTableType"                ID="36950"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="LDAP"/>
            <Property   InternalName ="SmtpRsetTimeout"                     ID="37010"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpSaslTimeout"                     ID="37007"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpServer"                          ID="45059"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SmtpServiceVersion"                  ID="36931"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue="0"            EndingNumber="0"    StartingNumber="1"/>
            <Property   InternalName ="SmtpTurnTimeout"                     ID="37009"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SmtpIpRestrictionFlag"               ID="37031"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            Description="It allows SMTP connections to be accepted based on IP address or valid authentication credentials."/>
            <Property   InternalName ="SSIExecDisable"                      ID="6028"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="SSLCertHash"                         ID="5506"   Type="BINARY"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_CLEARED"                            DefaultValue=""/>
            <Property   InternalName ="SSLStoreName"                        ID="5511"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="SslUseDsMapper"                      ID="5519"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="1"/>
            <Property   InternalName ="SSLAlwaysNegoClientCert"             ID="5521"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="1"/>
            <Property   InternalName ="StartupTimeLimit"                    ID="9011"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="90"           StartingNumber="1"   EndingNumber="4294967"/>
            <Property   InternalName ="AppPoolQueueLength"                  ID="9017"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="1000"         StartingNumber="10"  EndingNumber="65535"/>
            <Property   InternalName ="UNCPassword"                         ID="3003"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="UNCUserName"                         ID="3002"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue=""/>
            <Property   InternalName ="DisableStaticFileCache"              ID="3007"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="1"/>
            <Property   InternalName ="UploadReadAheadSize"                 ID="6045"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="49152"        EndingNumber="0"/>
            <Property   InternalName ="UseDigestSSP"                        ID="6047"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="VrDriverClsid"                       ID="46156"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="VrDriverProgid"                      ID="46157"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FsPropertyPath"                      ID="46158"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="VrUseAccount"                        ID="46160"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="VrDoExpire"                          ID="46161"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="0"            EndingNumber="0"/>
            <Property   InternalName ="ExMdbGuid"                           ID="46162"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="VrOwnModerator"                      ID="46163"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="ArticleTimeLimit"                    ID="45056"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="HistoryExpiration"                   ID="45057"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="NewsCrawlerTime"                     ID="45069"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="NntpOrganization"                    ID="45171"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="SmtpUseTcpDns"                       ID="36997"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpDotStuffPickupDirFiles"          ID="37030"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpDomainValidationFlags"           ID="36992"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpSSLRequireTrustedCA"             ID="37025"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpSSLCertHostnameValidation"       ID="37026"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="MaxMailObjects"                      ID="36873"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="ShouldPickupMail"                    ID="36876"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="MaxDirChangeIOSize"                  ID="36878"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="NameResolutionType"                  ID="36885"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="MaxSmtpErrors"                       ID="36887"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="ShouldPipelineIn"                    ID="36902"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="ShouldPipelineOut"                   ID="36901"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="ConnectResponse"                     ID="36907"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="UpdatedFQDN"                         ID="36936"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="UpdatedDefaultDomain"                ID="36937"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="EtrnSubdomains"                      ID="36938"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpMaxRemoteQThreads"               ID="36964"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpDisableRelay"                    ID="36974"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpHeloNoDomain"                    ID="36981"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpMailNoHelo"                      ID="36982"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpAqueueWait"                      ID="36990"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="AddNoHeaders"                        ID="37000"  Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="SmtpEventlogLevel"                   ID="37027"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                           DefaultValue="4294967295"   EndingNumber="0"/>
            <Property   InternalName ="FeedServerName"                      ID="45456"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FeedType"                            ID="45457"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedNewsgroups"                      ID="45458"  Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FeedSecurityType"                    ID="45459"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedAuthenticationType"              ID="45460"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedAccountName"                     ID="45461"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FeedPassword"                        ID="45462"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="SECURE"                         MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FeedStartTimeHigh"                   ID="45463"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedStartTimeLow"                    ID="45464"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedInterval"                        ID="45465"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedAllowControlMsgs"                ID="45466"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedCreateAutomatically"             ID="45467"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedDisabled"                        ID="45468"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedDistribution"                    ID="45469"  Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FeedConcurrentSessions"              ID="45470"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedMaxConnectionAttempts"           ID="45471"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedUucpName"                        ID="45472"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FeedTempDirectory"                   ID="45473"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FeedNextPullHigh"                    ID="45474"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedNextPullLow"                     ID="45475"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedPeerTempDirectory"               ID="45476"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="FeedPeerGapSize"                     ID="45477"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedOutgoingPort"                    ID="45478"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedFeedpairId"                      ID="45479"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedHandshake"                       ID="45480"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedAdminError"                      ID="45481"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="FeedErrParmMask"                     ID="45482"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="ExpireSpace"                         ID="45656"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="ExpireTime"                          ID="45657"  Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       EndingNumber="0"/>
            <Property   InternalName ="ExpireNewsgroups"                    ID="45658"  Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="ExpirePolicyName"                    ID="45659"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"/>
            <Property   InternalName ="DoStaticCompression"                 ID="2256"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="0"                EndingNumber="0"/>
            <Property   InternalName ="DoDynamicCompression"                ID="2255"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="0"                EndingNumber="0"/>
            <Property   InternalName ="WAMUserName"                         ID="7501"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""/>
            <Property   InternalName ="WAMUserPass"                         ID="7502"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""/>
            <Property   InternalName ="Win32Error"                          ID="1099"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="VOLATILE"                       MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="0"/>
            <Property   InternalName ="XoverTableFile"                      ID="45161"  Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""/>
            <Property   InternalName ="ADConnectionsUserName"               ID="5014"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="FTP property. Username needed to connect to AD store."/>
            <Property   InternalName ="ADConnectionsPassword"               ID="5015"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT | SECURE"               MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="FTP property. Password needed to connect to AD store."/>
            <Property   InternalName ="PassivePortRange"                    ID="5016"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="FTP property. Range of ports to be used in response to PASV commands."/>
            <Property   InternalName ="IsapiRestrictionList"                ID="2163"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       Description="List of DLLs that are either allowed or denied to run."/>
            <Property   InternalName ="CgiRestrictionList"                  ID="2164"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                       Description="List of EXEs that are either allowed or denied to run."/>
            <Property   InternalName ="LoadBalancerCapabilities"            ID="9034"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="2"                StartingNumber="1" EndingNumber="2" Description="Controls the type of behavior that IIS will display in certain situations to control responses."/>
            <Property   InternalName ="AutoShutdownAppPoolExe"              ID="9035"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="Command to execute when apppool is shutdown through Rapid Fail Protection or when CPU limits have been exceeded."/>
            <Property   InternalName ="AutoShutdownAppPoolParams"           ID="9036"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="Parameters to accept when a command is specified if the apppool is shutdown through Rapid Fail Protection or when CPU limits have been exceeded."/>
            <Property   InternalName ="RestrictionListCustomDesc"           ID="2165"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       Description="Custom pair of descriptions and binary files used to describe restriction list."/>
            <Property   InternalName ="ApplicationDependencies"             ID="2167"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="List of comma-separated strings that contain the web service extensions that must be enabled for an installed application to run."/>
            <Property   InternalName ="WebSvcExtRestrictionList"            ID="2168"   Type="MULTISZ"      UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="List of comma-separated strings that contain allow/deny information for both ISAPI extensions and CGIs."/>
            <Property   InternalName ="CentralBinaryLoggingEnabled"         ID="4016"   Type="BOOL"         UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="0"                Description="Global flag to denote that IIS will generate one centralized binary log file rather than a separate file per web site."/>
            <Property   InternalName ="AzEnable"                            ID="6048"   Type="BOOL"         UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="0"                Description="URL Authorization."/>
            <Property   InternalName ="AzStoreName"                         ID="6049"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="Path to auth store."/>
            <Property   InternalName ="AzScopeName"                         ID="6050"   Type="STRING"       UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""                 Description="Auth scope name."/>
            <Property   InternalName ="AzImpersonationLevel"                ID="6053"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="0"                EndingNumber="2"    Description="Identity to execute the request after URLAUTHZ executed the request."/>
            <Property   InternalName ="SslCtlIdentifier"                    ID="5512"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""/>
            <Property   InternalName ="SslCtlStoreName"                     ID="5517"   Type="STRING"       UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue=""/>
            <Property   InternalName ="AspBufferingLimit"                   ID="7052"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="4194304"/>
            <Property   InternalName ="MaxRequestEntityAllowed"             ID="6051"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="4294967295"       Description="Maximum number of bytes allowed for the entity body."/>
            <Property   InternalName ="AspMaxRequestEntityAllowed"          ID="7053"   Type="DWORD"        UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="200000"           Description="ASP maximum number of bytes allowed for the entity body."/>
            <Property   InternalName ="DemandStartThreshold"                ID="9207"   Type="DWORD"        UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                  MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="4294967295"       StartingNumber="10" EndingNumber="4294967295"   Description="Maximum number of active demand-starts."/>
            <Property   InternalName ="PassportRequireADMapping"            ID="6052"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="1"                StartingNumber="0"  EndingNumber="2"            Description="Controls how the Passport PUID is mapped to an AD account."/>
            <Property   InternalName ="AspCalcLineNumber"                   ID="7050"   Type="BOOL"         UserType="ASP_MD_UT_APP"    Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="1"                Description="Enable calculation of line numbers."/>
            <Property       InternalName ="AccessFlags"                     ID="6016"   Type="DWORD"        UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                        MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                       DefaultValue="AccessRead"       EndingNumber="0">
                <Flag       InternalName ="AccessExecute"                           Value="4"           ID="6209"   />
                <Flag       InternalName ="AccessSource"                            Value="16"          ID="6282"   />
                <Flag       InternalName ="AccessRead"                              Value="1"           ID="6207"   />
                <Flag       InternalName ="AccessWrite"                             Value="2"           ID="6208"   />
                <Flag       InternalName ="AccessScript"                            Value="512"         ID="6211"   />
                <Flag       InternalName ="AccessNoRemoteExecute"                   Value="8192"        ID="6232"   />
                <Flag       InternalName ="AccessNoRemoteRead"                      Value="4096"        ID="6231"   />
                <Flag       InternalName ="AccessNoRemoteWrite"                     Value="1024"        ID="6230"   />
                <Flag       InternalName ="AccessNoRemoteScript"                    Value="16384"       ID="6233"   />
                <Flag       InternalName ="AccessNoPhysicalDir"                     Value="32768"       ID="6308"   />
            </Property>
            <Property       InternalName ="AccessSSLFlags"                  ID="6030"   Type="DWORD"    UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                   DefaultValue="0"                    EndingNumber="0">
                <Flag       InternalName ="AccessSSL"                               Value="8"           ID="6213"   />
                <Flag       InternalName ="AccessSSL128"                            Value="256"         ID="6217"   />
                <Flag       InternalName ="AccessSSLNegotiateCert"                  Value="32"          ID="6214"   />
                <Flag       InternalName ="AccessSSLRequireCert"                    Value="64"          ID="6215"   />
                <Flag       InternalName ="AccessSSLMapCert"                        Value="128"         ID="6216"   />
            </Property>
            <Property       InternalName ="AuthFlags"                       ID="6000"   Type="DWORD"    UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                   DefaultValue="AuthAnonymous"        EndingNumber="0">
                <Flag       InternalName ="AuthBasic"                               Value="2"           ID="6219"   />
                <Flag       InternalName ="AuthAnonymous"                           Value="1"           ID="6218"   />
                <Flag       InternalName ="AuthNTLM"                                Value="4"           ID="6220"   />
                <Flag       InternalName ="AuthMD5"                                 Value="16"          ID="6221"   />
                <Flag       InternalName ="AuthPassport"                            Value="64"          ID="6299"   />
            </Property>
            <Property       InternalName ="AuthPersistence"                 ID="6031"   Type="DWORD"    UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                   DefaultValue="AuthPersistSingleRequest" EndingNumber="0">
                <Flag       InternalName ="AuthPersistSingleRequest"                Value="64"          ID="6283"   />
            </Property>
            <Property       InternalName ="DirBrowseFlags"                  ID="6005"   Type="DWORD"    UserType="IIS_MD_UT_FILE"   Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                   DefaultValue="DirBrowseShowDate | DirBrowseShowTime | DirBrowseShowSize | DirBrowseShowExtension | EnableDefaultDoc"            EndingNumber="0">
                <Flag       InternalName ="EnableDirBrowsing"                       Value="2147483648"  ID="6205"   />
                <Flag       InternalName ="DirBrowseShowDate"                       Value="2"           ID="6200"   />
                <Flag       InternalName ="DirBrowseShowTime"                       Value="4"           ID="6201"   />
                <Flag       InternalName ="DirBrowseShowSize"                       Value="8"           ID="6202"   />
                <Flag       InternalName ="DirBrowseShowExtension"                  Value="16"          ID="6203"   />
                <Flag       InternalName ="DirBrowseShowLongDate"                   Value="32"          ID="6204"   />
                <Flag       InternalName ="EnableDefaultDoc"                        Value="1073741824"  ID="6206"   />
            </Property>
            <Property       InternalName ="FilterFlags"                     ID="2044"   Type="DWORD"    UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                      MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                   DefaultValue="0"                    EndingNumber="0">
                <Flag       InternalName ="NotifySecurePort"                        Value="1"           ID="6253"   />
                <Flag       InternalName ="NotifyNonSecurePort"                     Value="2"           ID="6254"   />
                <Flag       InternalName ="NotifyReadRawData"                       Value="32768"       ID="6255"   />
                <Flag       InternalName ="NotifyPreProcHeaders"                    Value="16384"       ID="6256"   />
                <Flag       InternalName ="NotifyAuthentication"                    Value="8192"        ID="6257"   />
                <Flag       InternalName ="NotifyUrlMap"                            Value="4096"        ID="6258"   />
                <Flag       InternalName ="NotifyAccessDenied"                      Value="2048"        ID="6259"   />
                <Flag       InternalName ="NotifySendResponse"                      Value="64"          ID="6260"   />
                <Flag       InternalName ="NotifySendRawData"                       Value="1024"        ID="6261"   />
                <Flag       InternalName ="NotifyLog"                               Value="512"         ID="6262"   />
                <Flag       InternalName ="NotifyEndOfRequest"                      Value="128"         ID="6263"   />
                <Flag       InternalName ="NotifyEndOfNetSession"                   Value="256"         ID="6264"   />
                <Flag       InternalName ="NotifyOrderHigh"                         Value="524288"      ID="6265"   />
                <Flag       InternalName ="NotifyOrderMedium"                       Value="262144"      ID="6266"   />
                <Flag       InternalName ="NotifyOrderLow"                          Value="131072"      ID="6267"   />
                <Flag       InternalName ="NotifyAuthComplete"                      Value="67108864"    ID="6290"   />
            </Property>
            <Property       InternalName ="LogExtFileFlags"                 ID="4013"   Type="DWORD"    UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"                            MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                   DefaultValue="LogExtFileTime | LogExtFileClientIp | LogExtFileMethod | LogExtFileUriStem | LogExtFileHttpStatus"            EndingNumber="0">
                <Flag       InternalName ="LogExtFileDate"                          Value="1"           ID="6234"   />
                <Flag       InternalName ="LogExtFileHost"                          Value="1048576"     ID="6287"   />
                <Flag       InternalName ="LogExtFileTime"                          Value="2"           ID="6235"   />
                <Flag       InternalName ="LogExtFileClientIp"                      Value="4"           ID="6236"   />
                <Flag       InternalName ="LogExtFileUserName"                      Value="8"           ID="6237"   />
                <Flag       InternalName ="LogExtFileSiteName"                      Value="16"          ID="6238"   />
                <Flag       InternalName ="LogExtFileComputerName"                  Value="32"          ID="6239"   />
                <Flag       InternalName ="LogExtFileServerIp"                      Value="64"          ID="6240"   />
                <Flag       InternalName ="LogExtFileMethod"                        Value="128"         ID="6241"   />
                <Flag       InternalName ="LogExtFileUriStem"                       Value="256"         ID="6242"   />
                <Flag       InternalName ="LogExtFileUriQuery"                      Value="512"         ID="6243"   />
                <Flag       InternalName ="LogExtFileHttpStatus"                    Value="1024"        ID="6244"   />
                <Flag       InternalName ="LogExtFileWin32Status"                   Value="2048"        ID="6245"   />
                <Flag       InternalName ="LogExtFileBytesSent"                     Value="4096"        ID="6246"   />
                <Flag       InternalName ="LogExtFileBytesRecv"                     Value="8192"        ID="6247"   />
                <Flag       InternalName ="LogExtFileTimeTaken"                     Value="16384"       ID="6248"   />
                <Flag       InternalName ="LogExtFileServerPort"                    Value="32768"       ID="6249"   />
                <Flag       InternalName ="LogExtFileUserAgent"                     Value="65536"       ID="6250"   />
                <Flag       InternalName ="LogExtFileCookie"                        Value="131072"      ID="6251"   />
                <Flag       InternalName ="LogExtFileReferer"                       Value="262144"      ID="6252"   />
                <Flag       InternalName ="LogExtFileProtocolVersion"               Value="524288"      ID="6268"   />
                <Flag       InternalName ="LogExtFileHttpSubStatus"                 Value="2097152"     ID="6309"   />
            </Property>
            <Property       InternalName ="PasswordChangeFlags"             ID="2068"   Type="DWORD"    UserType="IIS_MD_UT_SERVER"     Attributes="INHERIT"   MetaFlagsEx="CACHE_PROPERTY_MODIFIED"    EndingNumber="0">
                <Flag       InternalName ="AuthChangeUnsecure"                          Value="1"       ID="6292"   />
                <Flag       InternalName ="AuthChangeDisable"                           Value="2"       ID="6293"   />
                <Flag       InternalName ="AuthAdvNotifyDisable"                        Value="4"       ID="6294"   />
            </Property>
            <Property       InternalName ="ServerConfigFlags"               ID="1027"   Type="DWORD"    UserType="IIS_MD_UT_SERVER" Attributes="NO_ATTRIBUTES"                      MetaFlagsEx="CACHE_PROPERTY_MODIFIED"                                                   DefaultValue="0"                    EndingNumber="0">
                <Flag       InternalName ="ServerConfigSSL40"                       Value="1"           ID="6223"   />
                <Flag       InternalName ="ServerConfigSSL128"                      Value="2"           ID="6224"   />
                <Flag       InternalName ="ServerConfigSSLAllowEncrypt"             Value="4"           ID="6225"   />
                <Flag       InternalName ="ServerConfigAutoPWSync"                  Value="8"           ID="6226"   />
            </Property>
            <Property       InternalName ="AspAppServiceFlags"              ID="7044"   Type="DWORD"    UserType="ASP_MD_UT_APP"    Attributes="INHERIT"     MetaFlagsEx="CACHE_PROPERTY_MODIFIED" DefaultValue="0">
                <Flag       InternalName ="AspEnableTracker"                        Value="1"           ID="7045"   />
                <Flag       InternalName ="AspEnableSxs"                            Value="2"           ID="7046"   />
                <Flag       InternalName ="AspUsePartition"                         Value="4"           ID="7047"   />
            </Property>
            <Property   InternalName ="LogEventOnRecycle"                   ID="9037"   Type="DWORD"    UserType="IIS_MD_UT_SERVER" Attributes="INHERIT"     MetaFlagsEx="CACHE_PROPERTY_MODIFIED" DefaultValue="AppPoolRecycleMemory">
                <Flag       InternalName ="AppPoolRecycleTime"                      Value="1"           ID="6300"   />
                <Flag       InternalName ="AppPoolRecycleRequests"                  Value="2"           ID="6301"   />
                <Flag       InternalName ="AppPoolRecycleSchedule"                  Value="4"           ID="6302"   />
                <Flag       InternalName ="AppPoolRecycleMemory"                    Value="8"           ID="6303"   />
                <Flag       InternalName ="AppPoolRecycleIsapiUnhealthy"            Value="16"          ID="6304"   />
                <Flag       InternalName ="AppPoolRecycleOnDemand"                  Value="32"          ID="6305"   />
                <Flag       InternalName ="AppPoolRecycleConfigChange"              Value="64"          ID="6306"   />
                <Flag       InternalName ="AppPoolRecyclePrivateMemory"             Value="128"         ID="6307"   />
            </Property>
        </Collection>
        <Collection         InternalName ="IIsInheritedProperties"  InheritsPropertiesFrom="IIsConfigObject" MetaFlags="HIDDEN" >
        </Collection>
        <Collection         InternalName ="IIsObject"    MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY" ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass">
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
        </Collection>
        <Collection         InternalName ="IIsComputer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsWebService,IIsFtpService,IIsMimeMap,IIsNntpService,IIsSmtpService,IIsPop3Service,IIsImapService"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages global metabase properties that determine how IIS operates" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidthBlocked"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_1001"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableHistory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxHistoryFiles"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableEditWhileRunning"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxErrorFiles"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsWebService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsWebInfo,IIsWebServer,IIsFilters,IIsApplicationPools"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages inheritable metabase properties for Web sites and Web virtual directories." >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowKeepAlive"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDoc"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheISAPI"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DirectoryLevelsToScan"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CertCheckMode"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DownlevelAdminInstance"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingOn"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspLogErrorRequests"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorSentToBrowser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowOutOfProcComponents"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptFileCacheSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspDiskTemplateCacheDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxDiskTemplateCacheFiles"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptEngineCacheMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableParentPaths"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowSessionState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptLanguage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspExceptionCatchEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspCodepage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspLCID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableAspHtmlFallback"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableChunkedEncoding"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableTypelibCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspErrorsToNTLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspProcessorThreadMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspTrackThreadingModel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspRequestQueueMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableApplicationRestart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueConnectionTestTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppRoot"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppIsolated"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowDebugging"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowClientDebug"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordExpirePrenotifyDays"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordCacheTTL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordChangeFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppWamClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DirBrowseFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableStaticFileCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ProcessNTCRIfLoggedOn"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowPathInfoForScriptMappings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:InProcessIsapiApps"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SslUseDsMapper"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLAlwaysNegoClientCert"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:WAMUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:WAMUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthChangeURL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthExpiredURL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthNotifyPwdExpURL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthExpiredUnsecureURL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthNotifyPwdExpUnsecureURL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_APP_LAST_OUTPROC_PID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_ETAG_CHANGENUMBER"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminServer"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IIs5IsolationModeEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxGlobalBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MinFileBytesPerSec"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HeaderWaitTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogInUTF8"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionMaxCrashes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspPartitionID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSxsName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAppServiceFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspKeepSessionIDSecure"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RevocationFreshnessTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RevocationURLRetrievalTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspExecuteInMTA"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CentralBinaryLoggingEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspRunOnEndAnonymously"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzImpersonationLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspCalcLineNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ApplicationDependencies"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:WebSvcExtRestrictionList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DemandStartThreshold"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PassportRequireADMapping"/>
        </Collection>
        <Collection         InternalName ="IIsFtpService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsFtpInfo,IIsFtpServer"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages the metabase properties that control FTP sites and FTP virtual directories."  >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogNonAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ExitMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:GreetingMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxClientsMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MSDOSDirOutput"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DirectoryLevelsToScan"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FtpDirBrowseShowLongDate"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DownlevelAdminInstance"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:BannerMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UserIsolationMode"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FtpLogInUtf8"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ADConnectionsUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ADConnectionsPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerCommand"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PassivePortRange"/>
        </Collection>
        <Collection         InternalName ="IIsWebServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsCertMapper,IIsFilters,IIsWebVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages metabase properties that apply to a specific Web virtual server, and to set inheritable metabase properties for virtual directories, Web directories, and Web files." >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowKeepAlive"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheISAPI"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FrontPageWeb"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDoc"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CertCheckMode"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingOn"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspLogErrorRequests"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorSentToBrowser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowOutOfProcComponents"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptFileCacheSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspDiskTemplateCacheDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxDiskTemplateCacheFiles"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptEngineCacheMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableParentPaths"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowSessionState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptLanguage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspExceptionCatchEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspCodepage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspLCID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableAspHtmlFallback"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableChunkedEncoding"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableTypelibCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspErrorsToNTLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspProcessorThreadMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspTrackThreadingModel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspRequestQueueMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableApplicationRestart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueConnectionTestTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppRoot"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppIsolated"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppOopRecoverLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowDebugging"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowClientDebug"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ClusterEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordExpirePrenotifyDays"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordCacheTTL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PasswordChangeFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidthBlocked"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppWamClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DirBrowseFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableStaticFileCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLAlwaysNegoClientCert"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ProcessNTCRIfLoggedOn"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowPathInfoForScriptMappings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerCommand"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_ISM_ACCESS_CHECK"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspPartitionID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSxsName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAppServiceFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspKeepSessionIDSecure"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RevocationFreshnessTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RevocationURLRetrievalTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspExecuteInMTA"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspRunOnEndAnonymously"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzImpersonationLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspCalcLineNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SslCtlIdentifier"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SslCtlStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PassportRequireADMapping"/>
        </Collection>
        <Collection         InternalName ="IIsFtpServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsFtpVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Manages metabase properties that apply to a specific FTP server and to set inheritable metabase properties for FTP virtual directories." >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogNonAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ExitMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:GreetingMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxClientsMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MSDOSDirOutput"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ClusterEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileLocaltimeRollover"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FtpDirBrowseShowLongDate"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:BannerMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UserIsolationMode"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FtpLogInUtf8"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ADConnectionsUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ADConnectionsPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerCommand"/>
        </Collection>
        <Collection         InternalName ="IIsWebFile"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY"    Description="Manages metabase key values that apply to a file in a Web directory for a Web server." >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpRedirect"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableStaticFileCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzImpersonationLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PassportRequireADMapping"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
        </Collection>
        <Collection         InternalName ="IIsWebDirectory"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsWebDirectory,IIsWebVirtualDir,IIsWebFile,IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass"    Description="Is used to set metabase properties that apply to one or more Web directories for a Web server." >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppRoot"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppOopRecoverLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppIsolated"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheISAPI"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowDebugging"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowClientDebug"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpRedirect"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDoc"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FrontPageWeb"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppWamClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableStaticFileCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingOn"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspLogErrorRequests"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorSentToBrowser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowOutOfProcComponents"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptFileCacheSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspDiskTemplateCacheDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxDiskTemplateCacheFiles"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptEngineCacheMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableParentPaths"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowSessionState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptLanguage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspExceptionCatchEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspCodepage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspLCID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableAspHtmlFallback"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableChunkedEncoding"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableTypelibCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspErrorsToNTLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspProcessorThreadMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspTrackThreadingModel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspRequestQueueMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableApplicationRestart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueConnectionTestTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DirBrowseFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspPartitionID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSxsName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAppServiceFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspKeepSessionIDSecure"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspExecuteInMTA"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspRunOnEndAnonymously"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzImpersonationLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspCalcLineNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PassportRequireADMapping"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
        </Collection>
        <Collection         InternalName ="IIsWebVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsWebDirectory,IIsWebFile,IIsWebVirtualDir,IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" Description="Manages metabase properties that apply to one or all virtual directories for a Web site." >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UseDigestSSP"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppRoot"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppFriendlyName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppOopRecoverLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppIsolated"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPackageID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheISAPI"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowDebugging"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppAllowClientDebug"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CGITimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpExpires"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpPics"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpCustomHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpErrors"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDocFooter"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HttpRedirect"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDoc"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlMaxAge"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlNoCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CacheControlCustom"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateProcessAsUser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PoolIdcTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RedirectHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UploadReadAheadSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FrontPageWeb"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableStaticFileCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppWamClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthPersistence"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ScriptMaps"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSIExecDisable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDns"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CreateCGIWithNewConsole"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingOn"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspLogErrorRequests"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorSentToBrowser"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptErrorMessage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowOutOfProcComponents"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptFileCacheSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspDiskTemplateCacheDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxDiskTemplateCacheFiles"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptEngineCacheMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableParentPaths"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAllowSessionState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspScriptLanguage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspExceptionCatchEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspCodepage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspLCID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableAspHtmlFallback"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableChunkedEncoding"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableTypelibCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspErrorsToNTLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspProcessorThreadMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspTrackThreadingModel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspRequestQueueMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspEnableApplicationRestart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspQueueConnectionTestTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSessionMax"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DirBrowseFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolId"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoStaticCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoDynamicCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspPartitionID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspSxsName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspAppServiceFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspKeepSessionIDSecure"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspExecuteInMTA"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspRunOnEndAnonymously"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspBufferingLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzImpersonationLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspCalcLineNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AspMaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRequestEntityAllowed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PassportRequireADMapping"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
        </Collection>
        <Collection         InternalName ="IIsFtpVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsFtpVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass"     Description="Manages metabase properties that apply to one or all FTP virtual directories for an FTP server." >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FtpDirBrowseShowLongDate"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsFilter"    ContainerClassList="IIsFilter,IIsCompressionSchemes,IIsCompressionScheme"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY">
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FilterPath"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FilterDescription"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FilterFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FilterState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FilterEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FilterEnableCache"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsFilters"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsFilter,IIsCompressionSchemes"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FilterLoadOrder"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsCompressionScheme"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoDynamicCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoStaticCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoOnDemandCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcCompressionDll"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcFileExtensions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcScriptFileExtensions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcPriority"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcDynamicCompressionLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcOnDemandCompLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcCreateFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsCompressionSchemes"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsCompressionScheme"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcCompressionDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcCacheControlHeader"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcExpiresHeader"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoDynamicCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoStaticCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoOnDemandCompression"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcDoDiskSpaceLimiting"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcNoCompressionForHttp10"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcNoCompressionForProxies"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcNoCompressionForRange"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcSendCacheHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcMaxDiskSpaceUsage"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcIoBufferSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcCompressionBufferSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcMaxQueueLength"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcFilesDeletedPerDiskFree"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HcMinFileSizeForComp"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsCertMapper"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY"    Description="Maps client certificates to Windows user accounts." >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsMimeMap"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MimeMap"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsLogModules"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsLogModule,IIsCustomLogModule"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsLogModule"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleId"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleUiId"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsCustomLogModule"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY">
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyHeader"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyMask"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyDataType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyServicesString"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogCustomPropertyNodeID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsWebInfo"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY">
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerConfigFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CustomErrorDescriptions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminServer"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MajorIISVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MinorIISVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_CAPABILITIES"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_PLATFORM"/>
        </Collection>
        <Collection         InternalName ="IIsFtpInfo"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY">
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_PLATFORM"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MajorIISVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MinorIISVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_CAPABILITIES"/>
        </Collection>
        <Collection         InternalName ="IIsNntpService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsNntpInfo,IIsNntpServer"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DirectoryLevelsToScan"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HonorClientMsgIds"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpServer"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminEmail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowClientPosts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowFeedPosts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowControlMsgs"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultModeratorDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NntpCommandLogMask"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableNewNews"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ClientPostHardLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ClientPostSoftLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPostHardLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPostSoftLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedReportPeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSearchResults"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NntpServiceVersion"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownLatency"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ArticleTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HistoryExpiration"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NewsCrawlerTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:GroupVarListFile"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
        </Collection>
        <Collection         InternalName ="IIsNntpServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsNntpVirtualDir,IIsNntpRebuild,IIsNntpSessions,IIsNntpFeeds,IIsNntpExpiration,IIsNntpGroups"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ClusterEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HonorClientMsgIds"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpServer"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminEmail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowClientPosts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowFeedPosts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowControlMsgs"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultModeratorDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NntpCommandLogMask"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableNewNews"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ClientPostHardLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ClientPostSoftLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPostHardLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPostSoftLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NewsPickupDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NewsFailedPickupDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NewsDropDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedReportPeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSearchResults"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NntpUucpName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NntpServiceVersion"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:GroupHelpFile"         MetaFlagsEx="MANDATORY"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:GroupListFile"         MetaFlagsEx="MANDATORY"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ArticleTableFile"      MetaFlagsEx="MANDATORY"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HistoryTableFile"      MetaFlagsEx="MANDATORY"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ListFile"              MetaFlagsEx="MANDATORY"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ModeratorFile"         MetaFlagsEx="MANDATORY"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:XoverTableFile"        MetaFlagsEx="MANDATORY"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PrettyNamesFile"       MetaFlagsEx="MANDATORY"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:GroupVarListFile"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ArticleTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HistoryExpiration"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NewsCrawlerTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownLatency"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NntpOrganization"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NntpClearTextProvider"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
        </Collection>
        <Collection         InternalName ="IIsNntpVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsNntpVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ContentIndexed"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:VrDoExpire"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:VrUseAccount"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:VrOwnModerator"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:VrDriverProgid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FsPropertyPath"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ExMdbGuid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:VrDriverClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsNntpInfo"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_PLATFORM"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MajorIISVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MinorIISVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_CAPABILITIES"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsSmtpInfo,IIsSmtpServer"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpServiceVersion"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDnsLookup"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldDeliver"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AlwaysUseSsl"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LimitRemoteConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmartHostType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoMasquerade"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteSmtpPort"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteSmtpSecurePort"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HopCount"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxOutConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxOutConnectionsPerDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxMessageSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSessionSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRecipients"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LocalRetryInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteRetryInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LocalRetryAttempts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteRetryAttempts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EtrnDays"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBatchedMessages"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmartHost"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FullyQualifiedDomainName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DropDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:BadMailDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PickupDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:QueueDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MasqueradeDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SendNdrTo"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SendBadTo"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RoutingDll"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RoutingSources"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DomainRouting"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RouteAction"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RouteUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RoutePassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SaslLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpClearTextProvider"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteProgressiveRetry"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpLocalDelayExpireMinutes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpLocalNDRExpireMinutes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteDelayExpireMinutes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteNDRExpireMinutes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteRetryThreshold"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDSNOptions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDSNLanguageID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAdvQueueDll"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpInboundCommandSupportOptions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpOutboundCommandSupportOptions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpCommandLogMask"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpFlushMailFile"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RelayIpList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RelayForAuth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpConnectTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMailFromTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRcptToTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDataTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpBdatTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAuthTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSaslTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpTurnTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRsetTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpHeloTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LocalDomains"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpUseTcpDns"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDotStuffPickupDirFiles"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDomainValidationFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSSLRequireTrustedCA"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSSLCertHostnameValidation"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxMailObjects"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPickupMail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxDirChangeIOSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NameResolutionType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSmtpErrors"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPipelineIn"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPipelineOut"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectResponse"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UpdatedFQDN"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UpdatedDefaultDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EtrnSubdomains"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMaxRemoteQThreads"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDisableRelay"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpHeloNoDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMailNoHelo"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAqueueWait"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AddNoHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpEventlogLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpIpRestrictionFlag"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsSmtpVirtualDir,IIsSmtpRoutingSource,IIsSmtpDomain,IIsSmtpSessions"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ClusterEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpServiceVersion"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EnableReverseDnsLookup"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldDeliver"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AlwaysUseSsl"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LimitRemoteConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmartHostType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DoMasquerade"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteSmtpPort"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteSmtpSecurePort"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HopCount"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxOutConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxOutConnectionsPerDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxMessageSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSessionSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxRecipients"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LocalRetryInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteRetryInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LocalRetryAttempts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RemoteRetryAttempts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EtrnDays"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBatchedMessages"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmartHost"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FullyQualifiedDomainName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DropDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:BadMailDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PickupDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:QueueDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MasqueradeDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SendNdrTo"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SendBadTo"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RoutingDll"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RoutingSources"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DomainRouting"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RouteAction"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RouteUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RoutePassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SaslLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpClearTextProvider"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteProgressiveRetry"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpLocalDelayExpireMinutes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpLocalNDRExpireMinutes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteDelayExpireMinutes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteNDRExpireMinutes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRemoteRetryThreshold"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDSNOptions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDSNLanguageID"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpInboundCommandSupportOptions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpOutboundCommandSupportOptions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RelayIpList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RelayForAuth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpConnectTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMailFromTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRcptToTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDataTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpBdatTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAuthTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSaslTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpTurnTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRsetTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpHeloTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PostmasterName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PostmasterEmail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LocalDomains"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisableSocketPooling"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpUseTcpDns"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDotStuffPickupDirFiles"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDomainValidationFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSSLRequireTrustedCA"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpSSLCertHostnameValidation"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxMailObjects"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPickupMail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxDirChangeIOSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NameResolutionType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxSmtpErrors"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPipelineIn"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShouldPipelineOut"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectResponse"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UpdatedFQDN"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UpdatedDefaultDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:EtrnSubdomains"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMaxRemoteQThreads"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDisableRelay"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpHeloNoDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpMailNoHelo"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpAqueueWait"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AddNoHeaders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpEventlogLevel"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousPasswordSync"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Realm"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpIpRestrictionFlag"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsSmtpVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpDomain"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsSmtpDomain"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RouteAction"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RouteActionString"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RouteUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RoutePassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RelayIpList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RelayForAuth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthTurnList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CSideEtrnDomains"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpRoutingSource"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpRoutingTableType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsDataDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsDefaultMailRoot"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsBindType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsSchemaType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsHost"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsNamingContext"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsAccount"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsUseCat"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsPort"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SmtpDsFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpInfo"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MajorIISVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MinorIISVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_PLATFORM"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_SERVER_CAPABILITIES"/>
        </Collection>
        <Collection         InternalName ="IIsPop3Service"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsPop3Info,IIsPop3Server"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ServiceVersion"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireMail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireDelay"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3MailExpirationTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ClearTextProvider"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DefaultDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingDll"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingSources"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
        </Collection>
        <Collection         InternalName ="IIsPop3Server"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsPop3VirtualDir,IIsPop3RoutingSource,IIsPop3Sessions"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ServiceVersion"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireMail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireDelay"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3MailExpirationTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ClearTextProvider"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DefaultDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingDll"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingSources"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
        </Collection>
        <Collection         InternalName ="IIsPop3VirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsPop3VirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3ExpireMail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3MailExpirationTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsPop3RoutingSource"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3RoutingTableType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsDataDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsDefaultMailRoot"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsBindType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsSchemaType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsHost"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsNamingContext"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsAccount"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Pop3DsPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsPop3Info"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsImapService"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsImapInfo,IIsImapServer"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapServiceVersion"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireMail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireDelay"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapMailExpirationTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapClearTextProvider"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDefaultDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingDll"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingSources"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
        </Collection>
        <Collection         InternalName ="IIsImapServer"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsImapVirtualDir,IIsImapRoutingSource,IIsImapSessions"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxBandwidth"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ConnectionTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxEndpointConnections"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SecureBindings"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DefaultLogonDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:NTAuthenticationProviders"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogPluginClsid"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFilePeriod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogFileTruncateSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogExtFileFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcDataSource"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcTableName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogOdbcPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerListenBacklog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapServiceVersion"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireMail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireDelay"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapMailExpirationTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapClearTextProvider"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDefaultDomain"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingDll"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingSources"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SSLCertHash"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
        </Collection>
        <Collection         InternalName ="IIsImapVirtualDir"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject,IIsImapVirtualDir"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Path"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:UNCPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DontLog"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessSSLFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapExpireMail"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapMailExpirationTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsImapRoutingSource"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapRoutingTableType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsDataDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsDefaultMailRoot"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsBindType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsSchemaType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsHost"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsNamingContext"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsAccount"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ImapDsPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsImapInfo"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsObject"    InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogModuleList"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsNntpRebuild"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsNntpSessions"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsNntpFeeds"    ContainerClassList="IIsNntpFeed"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPeerTempDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsNntpFeed"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedServerName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedNewsgroups"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedSecurityType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedAuthenticationType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedAccountName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPassword"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedStartTimeHigh"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedStartTimeLow"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedAllowControlMsgs"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedCreateAutomatically"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedDisabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedDistribution"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedConcurrentSessions"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedMaxConnectionAttempts"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedUucpName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedTempDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedNextPullHigh"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedNextPullLow"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPeerTempDirectory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedPeerGapSize"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedOutgoingPort"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedFeedpairId"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedHandshake"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedAdminError"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:FeedErrParmMask"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsNntpExpiration"    ContainerClassList="IIsNntpExpire"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsNntpExpire"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ExpireSpace"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ExpireTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ExpireNewsgroups"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ExpirePolicyName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsNntpGroups"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpSessions"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsPop3Sessions"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsImapSessions"    ContainerClassList=""    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIS_FTP_TEMPLATE"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AnonymousOnly"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AllowAnonymous"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
        </Collection>
        <Collection         InternalName ="IIS_FTP_TEMPLATESETTINGS"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
        </Collection>
        <Collection         InternalName ="IIS_WEB_TEMPLATE"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ServerComment"/>
        </Collection>
        <Collection         InternalName ="IIS_WEB_TEMPLATESETTINGS"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IPSecurity"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AccessFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AuthFlags"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzEnable"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzStoreName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzScopeName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AzImpersonationLevel"/>
        </Collection>
        <Collection         InternalName ="IIS_ADMIN"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_IISADMIN_EXTENSIONS"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_METADATA_ID_REGISTRATION"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIS_EVENTMANAGER"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MD_0"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIS_ROOT"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
        </Collection>
        <Collection         InternalName ="IIS_Global"      InheritsPropertiesFrom="MetabaseBaseClass" MetaFlags="HIDDEN" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SessionKey"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ChangeNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:HistoryMajorVersionNumber"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:XMLSchemaTimeStamp"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:BINSchemaTimeStamp"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpAlias"    InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpDL"       InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsSmtpUser"     InheritsPropertiesFrom="MetabaseBaseClass" MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsApplicationPool"  MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"   ContainerClassList="" InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartRequests"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxProcesses"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PingingEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IdleTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtection"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SMPAffinitized"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SMPProcessorAffinityMask"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:StartupTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PingInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PingResponseTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisallowOverlappingRotation"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisallowRotationOnConfigChange"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:OrphanWorkerProcess"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolQueueLength"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CPUAction"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CPUResetInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolIdentityType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:WAMUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:WAMUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartMemory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartPrivateMemory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolCommand"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolState"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartSchedule"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionMaxCrashes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:OrphanActionExe"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:OrphanActionParams"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LoadBalancerCapabilities"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AutoShutdownAppPoolExe"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AutoShutdownAppPoolParams"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogEventOnRecycle"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>
        <Collection         InternalName ="IIsApplicationPools" MetaFlagsEx="CONTAINERCLASS NOTABLESCHEMAHEAPENTRY"    ContainerClassList="IIsApplicationPool"  InheritsPropertiesFrom="MetabaseBaseClass" >
            <Property       InheritsPropertiesFrom ="IIsConfigObject:KeyType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartRequests"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:MaxProcesses"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PingingEnabled"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:IdleTimeout"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtection"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SMPAffinitized"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:SMPProcessorAffinityMask"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:StartupTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:ShutdownTimeLimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PingInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PingResponseTime"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisallowOverlappingRotation"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:DisallowRotationOnConfigChange"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:OrphanWorkerProcess"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolQueueLength"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CPUAction"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CPULimit"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:CPUResetInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolIdentityType"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:WAMUserName"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:WAMUserPass"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogonMethod"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartMemory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartPrivateMemory"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AppPoolAutoStart"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:PeriodicRestartSchedule"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionInterval"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:RapidFailProtectionMaxCrashes"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:Win32Error"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:OrphanActionExe"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:OrphanActionParams"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LoadBalancerCapabilities"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AutoShutdownAppPoolExe"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AutoShutdownAppPoolParams"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:LogEventOnRecycle"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACL"/>
            <Property       InheritsPropertiesFrom ="IIsConfigObject:AdminACLBin"/>
        </Collection>

<!--    V1_0 First version  -->
<!--    Versioning Rules:   -->
<!--        Increment ExtendedVersion when a new IIsConfigObject property is added -->
<!--        Increment BaseVersion when IIsConfigObject properties are renamed or removed    -->
<!--    V2_0 Removed OrphanAction (was replaced by OrphanActionExecutable & OrphanActionParameter) -->

        <Collection         InternalName ="MBProperty" MetaFlags="HIDDEN" BaseVersion="54" ExtendedVersion="0">
            <Property       InternalName ="Name"                        Type="WSTR"  MetaFlags="PRIMARYKEY"/>
            <Property       InternalName ="Type"                        Type="UI4">
                <Enum       InternalName ="DWORD"                       Value="1"/>
                <Enum       InternalName ="STRING"                      Value="2"/>
                <Enum       InternalName ="BINARY"                      Value="3"/>
                <Enum       InternalName ="EXPANDSZ"                    Value="4"/>
                <Enum       InternalName ="MULTISZ"                     Value="5"/>
            </Property>
            <Property       InternalName ="Attributes"                  Type="UI4"  DefaultValue="NO_ATTRIBUTES">
                <Flag       InternalName ="NO_ATTRIBUTES"               Value="0"/>
                <Flag       InternalName ="INHERIT"                     Value="1"/>
                <Flag       InternalName ="SECURE"                      Value="4"/>
                <Flag       InternalName ="REFERENCE"                   Value="8"/>
                <Flag       InternalName ="VOLATILE"                    Value="16"/>
                <Flag       InternalName ="INSERT_PATH"                 Value="64"/>
                <Flag       InternalName ="LOCAL_MACHINE_ONLY"          Value="128"/>
            </Property>
            <Property       InternalName ="Value"                       Type="BYTES"/>
            <Property       InternalName ="Location"                    Type="WSTR"  MetaFlags="PRIMARYKEY"/>
            <Property       InternalName ="ID"                          Type="UI4"  />
            <Property       InternalName ="UserType"                    Type="UI4"   DefaultValue="UNKNOWN_UserType">
                <Enum       InternalName ="UNKNOWN_UserType"            Value="0"   />
                <Enum       InternalName ="IIS_MD_UT_SERVER"            Value="1"   />
                <Enum       InternalName ="IIS_MD_UT_FILE"              Value="2"   />
                <Enum       InternalName ="IIS_MD_UT_WAM"               Value="100" />
                <Enum       InternalName ="ASP_MD_UT_APP"               Value="101" />
            </Property>
            <Property       InternalName ="LocationID"                  Type="UI4"   MetaFlags="NOTPERSISTABLE"/>
            <Property       InternalName ="Group"                       Type="UI4"   MetaFlags="PRIMARYKEY">
                <Enum       InternalName ="IIsConfigObject"/>
                <Enum       InternalName ="IIsObject"/>
                <Enum       InternalName ="IIsComputer"/>
                <Enum       InternalName ="IIsWebService"/>
                <Enum       InternalName ="IIsFtpService"/>
                <Enum       InternalName ="IIsWebServer"/>
                <Enum       InternalName ="IIsFtpServer"/>
                <Enum       InternalName ="IIsWebFile"/>
                <Enum       InternalName ="IIsWebDirectory"/>
                <Enum       InternalName ="IIsWebVirtualDir"/>
                <Enum       InternalName ="IIsFtpVirtualDir"/>
                <Enum       InternalName ="IIsFilter"/>
                <Enum       InternalName ="IIsFilters"/>
                <Enum       InternalName ="IIsCompressionScheme"/>
                <Enum       InternalName ="IIsCompressionSchemes"/>
                <Enum       InternalName ="IIsCertMapper"/>
                <Enum       InternalName ="IIsMimeMap"/>
                <Enum       InternalName ="IIsLogModule"/>
                <Enum       InternalName ="IIsLogModules"/>
                <Enum       InternalName ="IIsCustomLogModule"/>
                <Enum       InternalName ="IIsWebInfo"/>
                <Enum       InternalName ="IIsFtpInfo"/>
                <Enum       InternalName ="IIsNntpService"/>
                <Enum       InternalName ="IIsNntpServer"/>
                <Enum       InternalName ="IIsNntpVirtualDir"/>
                <Enum       InternalName ="IIsNntpInfo"/>
                <Enum       InternalName ="IIsSmtpService"/>
                <Enum       InternalName ="IIsSmtpServer"/>
                <Enum       InternalName ="IIsSmtpVirtualDir"/>
                <Enum       InternalName ="IIsSmtpDomain"/>
                <Enum       InternalName ="IIsSmtpRoutingSource"/>
                <Enum       InternalName ="IIsSmtpInfo"/>
                <Enum       InternalName ="IIsPop3Service"/>
                <Enum       InternalName ="IIsPop3Server"/>
                <Enum       InternalName ="IIsPop3VirtualDir"/>
                <Enum       InternalName ="IIsPop3RoutingSource"/>
                <Enum       InternalName ="IIsPop3Info"/>
                <Enum       InternalName ="IIsImapService"/>
                <Enum       InternalName ="IIsImapServer"/>
                <Enum       InternalName ="IIsImapVirtualDir"/>
                <Enum       InternalName ="IIsImapRoutingSource"/>
                <Enum       InternalName ="IIsImapInfo"/>
                <Enum       InternalName ="IIsNntpRebuild"/>
                <Enum       InternalName ="IIsNntpSessions"/>
                <Enum       InternalName ="IIsNntpFeeds"/>
                <Enum       InternalName ="IIsNntpFeed"/>
                <Enum       InternalName ="IIsNntpExpire"/>
                <Enum       InternalName ="IIsNntpExpiration"/>
                <Enum       InternalName ="IIsNntpGroups"/>
                <Enum       InternalName ="IIsSmtpSessions"/>
                <Enum       InternalName ="IIsPop3Sessions"/>
                <Enum       InternalName ="IIsImapSessions"/>
                <Enum       InternalName ="IIS_Global"/>
                <Enum       InternalName ="IIS_ROOT"/>
                <Enum       InternalName ="IIS_FTP_TEMPLATE"/>
                <Enum       InternalName ="IIS_FTP_TEMPLATESETTINGS"/>
                <Enum       InternalName ="IIS_WEB_TEMPLATE"/>
                <Enum       InternalName ="IIS_WEB_TEMPLATESETTINGS"/>
                <Enum       InternalName ="IIS_ADMIN"/>
                <Enum       InternalName ="IIS_EVENTMANAGER"/>
                <Enum       InternalName ="IIsSmtpAlias"/>
                <Enum       InternalName ="IIsSmtpDL"/>
                <Enum       InternalName ="IIsSmtpUser"/>
                <Enum       InternalName ="IIsApplicationPool"/>
                <Enum       InternalName ="IIsApplicationPools"/>
                <Enum       InternalName ="IIsInheritedProperties"/>
                <Enum       InternalName ="Custom"/>
            </Property>
            <ServerWiring   Interceptor ="Core_MetabaseInterceptor"/>
        </Collection>
        <Collection         InternalName ="MBPropertyDiff" MetaFlags="HIDDEN" >
            <Property       InheritsPropertiesFrom ="MBProperty:Name"/>
            <Property       InheritsPropertiesFrom ="MBProperty:Type"/>
            <Property       InheritsPropertiesFrom ="MBProperty:Attributes"/>
            <Property       InheritsPropertiesFrom ="MBProperty:Value"/>
            <Property       InheritsPropertiesFrom ="MBProperty:Location"/>
            <Property       InheritsPropertiesFrom ="MBProperty:ID"/>
            <Property       InheritsPropertiesFrom ="MBProperty:UserType"/>
            <Property       InheritsPropertiesFrom ="MBProperty:LocationID"/>
            <Property       InternalName ="Directive"                   Type="UI4"  >
                <Enum       InternalName="Insert"                       Value="1"   />
                <Enum       InternalName="Update"                       Value="2"   />
                <Enum       InternalName="Delete"                       Value="3"   />
                <Enum       InternalName="DeleteNode"                   Value="4"   />
            </Property>
            <Property       InheritsPropertiesFrom ="MBProperty:Group"/>
            <ServerWiring   Interceptor ="Core_MetabaseDifferencingInterceptor"/>
        </Collection>
    </DatabaseMeta>
</MetaData>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

bldinc		... place to build all generated header files
inc		... shared include files
lib		... shared lib files
import		... headers and libs snapshoted from other teams
sdk		... public include files and libraries
rtl		... user-mode runtime library
xsp		... xsp dll

http		... (henrysa)
ul		... universal listener (keithmo)
core		... core user-mode portion of web server (muralik)

misc		... chaos zone
prototypes	... prototypes go here
website		... the duct-tape web site goes here
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Dec 01, 1998

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory core
     and details related to "Duct-Tape User-mode processes"

File            Description

README.txt      This file.

ap\             Admin Process
wp\             Worker Process
inc\            Include files for user-mode components
common\         Common shared DLLs/libraries
setup\          Setup related scripts 


Implementation Details

Contents:
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\ap\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

ap - IIS admin process components

was     ... web admin service
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\ap\was\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

was - IIS Web Admin Service

dll         ... primary service dll sources
test        ... test app sources
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\ap\was\dll\todo.txt ===
CODEWORK: Here are a number of things we need to do in WAS (and in IIS+
more generally in some cases) before ship:


Review all metabase settings we inherited from IIS5, to make sure we implement
them in IIS+ (or explicitly choose to punt). 

Rename everything (dlls, event source name, service name, etc.) to final 
product names.

Sync up iisutil sources to the final, shipping IIS5 sources from which they
were forked (has this already been done??).

Adjust all default configuration settings to the desired values for ship. This 
includes default values for settings read from the config store, but also values
for things that are hardwired in the code (low mem limits, etc.).

Review all strings that show to the customer, for example event log messages.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\ap\was\test\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

test - Web Admin Service test code

fakewp  ... temporary, fake worker process exe
upmbtodt... tool to upgrade an existing IIS metabase to duct-tape, by adding app pool information
w3control... tool to test the w3 site and app control interface
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\iisres\partitioning.txt ===
Numbers in decimal (base10)

Message file partitioning (.MC)

asp - aspevent.mc 1->500
ftp - ftpmsg.mc 1->14 (no conflict because types of message are different than asp).  
httpodbc - odbc.mc 2600->2616
ssinc - ssincmsg.mc 2500->2530
w3core - w3core.mc - 2201->2267
w3ctrs - w3ctrs.mc - 2000->2002
iisw3adm - wasmsg.mc - 1000->1070


STRING resource partitioning
IISRES.RC - extra strings - 100000->100010
ulw3.rc - 12000->12147
asp.rc - 1->10000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\util\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Nov 17, 1998

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory core\common\util
     and details related to IIS Utilities Functions


File            Description

README.txt      This file.



Implementation Details:

Most of the files here were copied from elsewhere in the IIS source tree.
The code supports utility functions for the IIS User-mode processes.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\util\acache\readme.txt ===
Name:
    iis_acache

Synopsis:
    Allocation cache implementation extracted from iisutil

Initialization:
    ALLOC_CACHE_HANDLER::Initialize()
    ALLOC_CACHE_HANDLER::SetLookasideCleanupInterval() - start the periodic cleanup thread

Termination
    ALLOC_CACHE_HANDLER::ResetLookasideCleanupInterval();  - remove the periodic cleanup thread
    ALLOC_CACHE_HANDLER::Cleanup();

Dependencies on other iisutil modules
    requires static library iis_dbgutil
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\util\dbgutil\readme.txt ===
Name:
    iis_dbgutil

Synopsis:
    Debugging utilities DBGPRINTF, DBG_ASSERT ...

Initialization:
    No explicit initialization routine needs to be called prior to use

Dependencies on other iisutil modules
    iis_string
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\util\etwtrace\readme.txt ===
Name:
    iis_etwtrace

Synopsis:
    Windows event tracing wrapper

Initialization:
    No explicit initialization routine needs to be called prior to use

Dependencies on other iisutil modules
    none
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\util\reftrace\readme.txt ===
Name:
    iis_reftrace

Synopsis:
    Reftracing support to be used for debugging reftracing issues

Initialization:
    No explicit initialization routine needs to be called prior to use

Dependencies on other iisutil modules
    requires static library iis_dbgutil
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\util\locks\readme.txt ===
Name:
    iis_locks

Synopsis:
    variety of locks - lightweight spinlocks, RW locks ...

Initialization:
    Locks_Initialize();

Termination
    Locks_Cleanup();

Dependencies on other iisutil modules
    requires static library iis_dbgutil
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\util\lkrhash\readme.txt ===
Name:
    iis_lkrhash

Synopsis:
    Scalable hash table implementation

Initialization:
    LKRHashTableInit();
Termination
    LKRHashTableUninit();

Dependencies on other iisutil modules
    requires static libraries iis_dbgutil and iis_locks
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\common\util\string\readme.txt ===
Name:
    iis_string

Synopsis:
    String implementation extracted from iisutil

Initialization:
    No explicit initialization routine needs to be called prior to use

Dependencies on other iisutil modules
    requires static library iis_dbgutil
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\prfshmem\todo.txt ===
Performance Counters Shared Memory Todo List:

1)  Reader needs to be able to swap to the second piece of memory.
2)  Reader needs to care about version numbers.
3)  Wrap around of version numbers (skip zero).
4)  Any Reader Locking?
5)  Outline why WAS is safe without locking.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\core\w3ctrs\w3ctrs.ini ===
[info]
drivername=W3SVC
symbolfile=w3ctrs.h
trusted=

[languages]
009=English
000=Neutral

[objects]
W3_COUNTER_OBJECT_009_NAME=Web Service
W3_GLOBAL_COUNTER_OBJECT_009_NAME=Web Service Cache

[text]
W3_COUNTER_OBJECT_009_NAME=Web Service
W3_COUNTER_OBJECT_009_HELP=The Web Service object includes counters specific to the World Wide Web Publishing Service.

W3_BYTES_SENT_COUNTER_009_NAME=Total Bytes Sent
W3_BYTES_SENT_COUNTER_009_HELP=Total Bytes Sent is the number of data bytes that have been sent by the Web service (since service startup).

W3_BYTES_SENT_PER_SEC_009_NAME=Bytes Sent/sec
W3_BYTES_SENT_PER_SEC_009_HELP=Bytes Sent/sec is the rate data bytes are being sent by the Web service.

W3_BYTES_RECEIVED_COUNTER_009_NAME=Total Bytes Received
W3_BYTES_RECEIVED_COUNTER_009_HELP=Total Bytes Received is the number of data bytes that have been received by the Web service (since service startup).

W3_BYTES_RECEIVED_PER_SEC_009_NAME=Bytes Received/sec
W3_BYTES_RECEIVED_PER_SEC_009_HELP=Bytes Received/sec is the rate that data bytes are received by the Web service.

W3_BYTES_TOTAL_COUNTER_009_NAME=Total Bytes Transfered
W3_BYTES_TOTAL_COUNTER_009_HELP=Total bytes either received or sent by the Web service (since service startup).

W3_BYTES_TOTAL_PER_SEC_009_NAME=Bytes Total/sec
W3_BYTES_TOTAL_PER_SEC_009_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the Web service.

W3_FILES_SENT_COUNTER_009_NAME=Total Files Sent
W3_FILES_SENT_COUNTER_009_HELP=Total Files Sent is the total number of files sent by the Web service (since service startup).

W3_FILES_SENT_SEC_009_NAME=Files Sent/sec
W3_FILES_SENT_SEC_009_HELP=The rate files are sent by the Web service.

W3_FILES_RECEIVED_COUNTER_009_NAME=Total Files Received
W3_FILES_RECEIVED_COUNTER_009_HELP=Total Files Received is the total number of files received by the Web service (since service startup).

W3_FILES_RECEIVED_SEC_009_NAME=Files Received/sec
W3_FILES_RECEIVED_SEC_009_HELP=The rate files are received by the Web service.

W3_FILES_TOTAL_COUNTER_009_NAME=Total Files Transferred
W3_FILES_TOTAL_COUNTER_009_HELP=Total Files Transferred is the sum of Files Sent and Files Received (since service startup).

W3_FILES_SEC_009_NAME=Files/sec
W3_FILES_SEC_009_HELP=The rate files are transferred, that is, sent and received by the Web service.

W3_CURRENT_ANONYMOUS_COUNTER_009_NAME=Current Anonymous Users
W3_CURRENT_ANONYMOUS_COUNTER_009_HELP=Current Anonymous Users is the number of users who currently have an anonymous connection using the Web service.

W3_CURRENT_NONANONYMOUS_COUNTER_009_NAME=Current NonAnonymous Users
W3_CURRENT_NONANONYMOUS_COUNTER_009_HELP=Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the Web service.

W3_TOTAL_ANONYMOUS_COUNTER_009_NAME=Total Anonymous Users
W3_TOTAL_ANONYMOUS_COUNTER_009_HELP=Total Anonymous Users is the total number of users who established an anonymous connection with the Web service (since service startup).

W3_ANONYMOUS_USERS_SEC_009_NAME=Anonymous Users/sec
W3_ANONYMOUS_USERS_SEC_009_HELP=The rate users are making anonymous connections to the Web service.

W3_TOTAL_NONANONYMOUS_COUNTER_009_NAME=Total NonAnonymous Users
W3_TOTAL_NONANONYMOUS_COUNTER_009_HELP=Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the Web service (since service startup).

W3_NON_ANONYMOUS_USERS_SEC_009_NAME=NonAnonymous Users/sec
W3_NON_ANONYMOUS_USERS_SEC_009_HELP=The rate users are making non-anonymous connections to the Web service.

W3_MAX_ANONYMOUS_COUNTER_009_NAME=Maximum Anonymous Users
W3_MAX_ANONYMOUS_COUNTER_009_HELP=Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the Web service (since service startup).

W3_MAX_NONANONYMOUS_COUNTER_009_NAME=Maximum NonAnonymous Users
W3_MAX_NONANONYMOUS_COUNTER_009_HELP=Maximum NonAnonymous Users is the maximum number of concurrent non-anonymous connections to the Web service (since service startup).

W3_CURRENT_CONNECTIONS_COUNTER_009_NAME=Current Connections
W3_CURRENT_CONNECTIONS_COUNTER_009_HELP=Current Connections is the current number of connections established with the Web service.

W3_MAX_CONNECTIONS_COUNTER_009_NAME=Maximum Connections
W3_MAX_CONNECTIONS_COUNTER_009_HELP=Maximum Connections is the maximum number of concurrent connections established with the Web service (since service startup).

W3_CONNECTION_ATTEMPTS_COUNTER_009_NAME=Total Connection Attempts (all instances)
W3_CONNECTION_ATTEMPTS_COUNTER_009_HELP=Total Connection Attempts is the number of connections that have been attempted using the Web service (since service startup).  This counter is for all instances listed.

W3_CONNECTION_ATTEMPTS_SEC_009_NAME=Connection Attempts/sec
W3_CONNECTION_ATTEMPTS_SEC_009_HELP=The rate that connections to the Web service are being attempted.

W3_LOGON_ATTEMPTS_COUNTER_009_NAME=Total Logon Attempts
W3_LOGON_ATTEMPTS_COUNTER_009_HELP=Total Logon Attempts is the number of logons attempts to the Web Service (since service startup).

W3_LOGON_ATTEMPTS_SEC_009_NAME=Logon Attempts/sec
W3_LOGON_ATTEMPTS_SEC_009_HELP=The rate that logons to the Web service are being attempted.

W3_TOTAL_OPTIONS_COUNTER_009_NAME=Total Options Requests
W3_TOTAL_OPTIONS_COUNTER_009_HELP=Total Options Requests is the number of HTTP requests using the OPTIONS method (since service startup).

W3_TOTAL_OPTIONS_SEC_009_NAME=Options Requests/sec
W3_TOTAL_OPTIONS_SEC_009_HELP=The rate HTTP requests using the OPTIONS method are made.

W3_TOTAL_GETS_COUNTER_009_NAME=Total Get Requests
W3_TOTAL_GETS_COUNTER_009_HELP=Total Get Requests is the number of HTTP requests using the GET method (since service startup).  Get requests are the most common HTTP request.

W3_TOTAL_GETS_SEC_009_NAME=Get Requests/sec
W3_TOTAL_GETS_SEC_009_HELP=The rate HTTP requests using the GET method are made.  Get requests are the most common HTTP request.

W3_TOTAL_POSTS_COUNTER_009_NAME=Total Post Requests
W3_TOTAL_POSTS_COUNTER_009_HELP=Total Post Requests is the number of HTTP requests using the POST method (since service startup).

W3_TOTAL_POSTS_SEC_009_NAME=Post Requests/sec
W3_TOTAL_POSTS_SEC_009_HELP=The rate HTTP requests using the POST method are made.

W3_TOTAL_HEADS_COUNTER_009_NAME=Total Head Requests
W3_TOTAL_HEADS_COUNTER_009_HELP=Total Head Requests is the number of HTTP requests using the HEAD method (since service startup).  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.

W3_TOTAL_HEADS_SEC_009_NAME=Head Requests/sec
W3_TOTAL_HEADS_SEC_009_HELP=The rate HTTP requests using the HEAD method are made.  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.

W3_TOTAL_PUTS_COUNTER_009_NAME=Total Put Requests
W3_TOTAL_PUTS_COUNTER_009_HELP=Total Put Requests is the number of HTTP requests using the PUT method (since service startup).

W3_TOTAL_PUTS_SEC_009_NAME=Put Requests/sec
W3_TOTAL_PUTS_SEC_009_HELP=The rate HTTP requests using the PUT method are made.

W3_TOTAL_DELETES_COUNTER_009_NAME=Total Delete Requests
W3_TOTAL_DELETES_COUNTER_009_HELP=Total Delete Requests is the number of HTTP requests using the DELETE method (since service startup).  Delete requests are generally used for file removals.

W3_TOTAL_DELETES_SEC_009_NAME=Delete Requests/sec
W3_TOTAL_DELETES_SEC_009_HELP=The rate HTTP requests using the DELETE method are made.  Delete requests are generally used for file removals.

W3_TOTAL_TRACES_COUNTER_009_NAME=Total Trace Requests
W3_TOTAL_TRACES_COUNTER_009_HELP=Total Trace Requests is the number of HTTP requests using the TRACE method (since service startup).  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.

W3_TOTAL_TRACES_SEC_009_NAME=Trace Requests/sec
W3_TOTAL_TRACES_SEC_009_HELP=The rate HTTP requests using the TRACE method are made.  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.

W3_TOTAL_MOVE_COUNTER_009_NAME=Total Move Requests
W3_TOTAL_MOVE_COUNTER_009_HELP=Total Move Requests is the number of HTTP requests using the MOVE method (since service startup).  Move requests are used for moving files and directories.

W3_TOTAL_MOVE_SEC_009_NAME=Move Requests/sec
W3_TOTAL_MOVE_SEC_009_HELP=The rate HTTP requests using the MOVE method are made.  Move requests are used for moving files and directories.

W3_TOTAL_COPY_COUNTER_009_NAME=Total Copy Requests
W3_TOTAL_COPY_COUNTER_009_HELP=Total Copy Requests is the number of HTTP requests using the COPY method (since service startup).  Copy requests are used for copying files and directories.

W3_TOTAL_COPY_SEC_009_NAME=Copy Requests/sec
W3_TOTAL_COPY_SEC_009_HELP=The rate HTTP requests using the COPY method are made.  Copy requests are used for copying files and directories.

W3_TOTAL_MKCOL_COUNTER_009_NAME=Total Mkcol Requests
W3_TOTAL_MKCOL_COUNTER_009_HELP=Total Mkcol Requests is the number of HTTP requests using the MKCOL method (since service startup).  Mkcol requests are used to create directories on the server.

W3_TOTAL_MKCOL_SEC_009_NAME=Mkcol Requests/sec
W3_TOTAL_MKCOL_SEC_009_HELP=The rate HTTP requests using the MKCOL method are made.  Mkcol requests are used to create directories on the server.

W3_TOTAL_PROPFIND_COUNTER_009_NAME=Total Propfind Requests
W3_TOTAL_PROPFIND_COUNTER_009_HELP=Total Propfind Requests is the number of HTTP requests using the PROPFIND method (since service startup).  Propfind requests retrieve property values on files and directories.

W3_TOTAL_PROPFIND_SEC_009_NAME=Propfind Requests/sec
W3_TOTAL_PROPFIND_SEC_009_HELP=The rate HTTP requests using the PROPFIND method are made.  Propfind requests retrieve property values on files and directories.

W3_TOTAL_PROPPATCH_COUNTER_009_NAME=Total Proppatch Requests
W3_TOTAL_PROPPATCH_COUNTER_009_HELP=Total Proppatch Requests is the number of HTTP requests using the PROPPATCH method (since service startup).  Proppatch requests set property values on files and directories.

W3_TOTAL_PROPPATCH_SEC_009_NAME=Proppatch Requests/sec
W3_TOTAL_PROPPATCH_SEC_009_HELP=The rate HTTP requests using the PROPPATCH method are made.  Proppatch requests set property values on files and directories.

W3_TOTAL_SEARCH_COUNTER_009_NAME=Total Search Requests
W3_TOTAL_SEARCH_COUNTER_009_HELP=Total Search Requests is the number of HTTP requests using the SEARCH method (since service startup).  Search requests are used to query the server to find resources that match a set of conditions provided by the client.

W3_TOTAL_SEARCH_SEC_009_NAME=Search Requests/sec
W3_TOTAL_SEARCH_SEC_009_HELP=The rate HTTP requests using the SEARCH method are made.  Search requests are used to query the server to find resources that match a set of conditions provided by the client.

W3_TOTAL_LOCK_COUNTER_009_NAME=Total Lock Requests
W3_TOTAL_LOCK_COUNTER_009_HELP=Total Lock Requests is the number of HTTP requests using the LOCK method (since service startup).  Lock requests are used to lock a file for one user so that only that user can modify the file.

W3_TOTAL_LOCK_SEC_009_NAME=Lock Requests/sec
W3_TOTAL_LOCK_SEC_009_HELP=The rate HTTP requests using the LOCK method are made.  Lock requests are used to lock a file for one user so that only that user can modify the file.

W3_TOTAL_UNLOCK_COUNTER_009_NAME=Total Unlock Requests
W3_TOTAL_UNLOCK_COUNTER_009_HELP=Total Unlock Requests is the number of HTTP requests using the UNLOCK method (since service startup).  Unlock requests are used to remove locks from files.

W3_TOTAL_UNLOCK_SEC_009_NAME=Unlock Requests/sec
W3_TOTAL_UNLOCK_SEC_009_HELP=The rate HTTP requests using the UNLOCK method are made.  Unlock requests are used to remove locks from files.

W3_TOTAL_OTHERS_COUNTER_009_NAME=Total Other Request Methods
W3_TOTAL_OTHERS_COUNTER_009_HELP=Total Other Request Methods is the number of HTTP requests that are not OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, SEARCH, LOCK or UNLOCK methods (since service startup).

W3_TOTAL_OTHERS_SEC_009_NAME=Other Request Methods/sec
W3_TOTAL_OTHERS_SEC_009_HELP=The rate HTTP requests are made that do not use the OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, SEARCH, LOCK or UNLOCK methods.

W3_TOTAL_REQUESTS_COUNTER_009_NAME=Total Method Requests
W3_TOTAL_REQUESTS_COUNTER_009_HELP=Total Method Requests is the number of all HTTP requests (since service startup).

W3_TOTAL_REQUESTS_SEC_009_NAME=Total Method Requests/sec
W3_TOTAL_REQUESTS_SEC_009_HELP=The rate HTTP requests are received.

W3_TOTAL_CGI_REQUESTS_COUNTER_009_NAME=Total CGI Requests
W3_TOTAL_CGI_REQUESTS_COUNTER_009_HELP=Total CGI requests is the total number of CGI requests (since service startup).

W3_CGI_REQUESTS_SEC_009_NAME=CGI Requests/sec
W3_CGI_REQUESTS_SEC_009_HELP=The rate CGI requests are received by the Web service.

W3_TOTAL_BGI_REQUESTS_COUNTER_009_NAME=Total ISAPI Extension Requests
W3_TOTAL_BGI_REQUESTS_COUNTER_009_HELP=Total ISAPI Extension Requests received (since service startup).

W3_BGI_REQUESTS_SEC_009_NAME=ISAPI Extension Requests/sec
W3_BGI_REQUESTS_SEC_009_HELP=The rate that ISAPI Extension requests are received by the Web service.

W3_TOTAL_NOT_FOUND_ERRORS_COUNTER_009_NAME=Total Not Found Errors
W3_TOTAL_NOT_FOUND_ERRORS_COUNTER_009_HELP=Total Not Found Errors is the number of requests that couldn't be satisfied by the server because the requested document could not be found (since service startup).  These are generally reported as an HTTP 404 error code to the client.

W3_TOTAL_NOT_FOUND_ERRORS_SEC_009_NAME=Not Found Errors/sec
W3_TOTAL_NOT_FOUND_ERRORS_SEC_009_HELP=The rate of errors due to requests that couldn't be satisfied by the server because the requested document could not be found.  These are generally reported as an HTTP 404 error code to the client.

W3_TOTAL_LOCKED_ERRORS_COUNTER_009_NAME=Total Locked Errors
W3_TOTAL_LOCKED_ERRORS_COUNTER_009_HELP=Total Locked Errors is the number of requests that couldn't be satisfied by the server because the requested was locked (since service startup).  These are generally reported as an HTTP 423 error code to the client.

W3_TOTAL_LOCKED_ERRORS_SEC_009_NAME=Locked Errors/sec
W3_TOTAL_LOCKED_ERRORS_SEC_009_HELP=The rate of errors due to requests that couldn't be satisfied by the server because the requested document was locked.  These are generally reported as an HTTP 423 error code to the client.

W3_CURRENT_CGI_COUNTER_009_NAME=Current CGI Requests
W3_CURRENT_CGI_COUNTER_009_HELP=Current CGI Requests is the current number of CGI requests being simultaneously processed by the Web service.

W3_CURRENT_BGI_COUNTER_009_NAME=Current ISAPI Extension Requests
W3_CURRENT_BGI_COUNTER_009_HELP=Current ISAPI Extension Requests is the current number of ISAPI requests being simultaneously processed by the Web service.

W3_MAX_CGI_COUNTER_009_NAME=Maximum CGI Requests
W3_MAX_CGI_COUNTER_009_HELP=Maximum CGI Requests is the maximum number of CGI requests simultaneously processed by the Web service (since service startup).

W3_MAX_BGI_COUNTER_009_NAME=Maximum ISAPI Extension Requests
W3_MAX_BGI_COUNTER_009_HELP=Maximum ISAPI Extension Requests is the maximum number of ISAPI requests simultaneously processed by the Web service (since service startup).

W3_CURRENT_CAL_AUTH_COUNTER_009_NAME=Current CAL count for authenticated users
W3_CURRENT_CAL_AUTH_COUNTER_009_HELP=This counter is no longer valid. Value will always be zero.

W3_MAX_CAL_AUTH_COUNTER_009_NAME=Maximum CAL count for authenticated users
W3_MAX_CAL_AUTH_COUNTER_009_HELP=This counter is no longer valid. Value will always be zero.

W3_TOTAL_FAILED_CAL_AUTH_COUNTER_009_NAME=Total count of failed CAL requests for authenticated users
W3_TOTAL_FAILED_CAL_AUTH_COUNTER_009_HELP=This counter is no longer valid. Value will always be zero.

W3_CURRENT_CAL_SSL_COUNTER_009_NAME=Current CAL count for SSL connections
W3_CURRENT_CAL_SSL_COUNTER_009_HELP=This counter is no longer valid. Value will always be zero.

W3_MAX_CAL_SSL_COUNTER_009_NAME=Maximum CAL count for SSL connections
W3_MAX_CAL_SSL_COUNTER_009_HELP=This counter is no longer valid. Value will always be zero.

W3_TOTAL_FAILED_CAL_SSL_COUNTER_009_NAME=Total count of failed CAL requests for SSL connections
W3_TOTAL_FAILED_CAL_SSL_COUNTER_009_HELP=This counter is no longer valid. Value will always be zero.

W3_ALLOWED_REQUESTS_COUNTER_009_NAME=Total Allowed Async I/O Requests
W3_ALLOWED_REQUESTS_COUNTER_009_HELP=Total requests allowed by bandwidth throttling settings (since service startup).

W3_BLOCKED_REQUESTS_COUNTER_009_NAME=Total Blocked Async I/O Requests
W3_BLOCKED_REQUESTS_COUNTER_009_HELP=Total requests temporarily blocked due to bandwidth throttling settings (since service startup).

W3_REJECTED_REQUESTS_COUNTER_009_NAME=Total Rejected Async I/O Requests
W3_REJECTED_REQUESTS_COUNTER_009_HELP=Total requests rejected due to bandwidth throttling settings (since service startup).

W3_CURRENT_BLOCKED_REQUESTS_COUNTER_009_NAME=Current Blocked Async I/O Requests
W3_CURRENT_BLOCKED_REQUESTS_COUNTER_009_HELP=Current requests temporarily blocked due to bandwidth throttling settings.

W3_MEASURED_BANDWIDTH_COUNTER_009_NAME=Measured Async I/O Bandwidth Usage
W3_MEASURED_BANDWIDTH_COUNTER_009_HELP=Measured bandwidth of asynchronous I/O averaged over a minute.

W3_TOTAL_BLOCKED_BANDWIDTH_BYTES_COUNTER_009_NAME=Total blocked bandwidth bytes.
W3_TOTAL_BLOCKED_BANDWIDTH_BYTES_COUNTER_009_HELP=Total bytes blocked due to bandwidth throttling settings (since service startup).

W3_CURRENT_BLOCKED_BANDWIDTH_BYTES_COUNTER_009_NAME=Current blocked bandwidth bytes.
W3_CURRENT_BLOCKED_BANDWIDTH_BYTES_COUNTER_009_HELP=Current bytes temporarily blocked due to bandwidth throttling settings.

W3_SERVICE_UPTIME_COUNTER_009_NAME=Service Uptime
W3_SERVICE_UPTIME_COUNTER_009_HELP=The length of time the Web Service has been running.

W3_COUNTER_OBJECT_000_NAME=Web Service
W3_COUNTER_OBJECT_000_HELP=The Web Service object includes counters specific to the World Wide Web Publishing Service.

W3_BYTES_SENT_COUNTER_000_NAME=Total Bytes Sent
W3_BYTES_SENT_COUNTER_000_HELP=Total Bytes Sent is the number of data bytes that have been sent by the Web service (since service startup).

W3_BYTES_SENT_PER_SEC_000_NAME=Bytes Sent/sec
W3_BYTES_SENT_PER_SEC_000_HELP=Bytes Sent/sec is the rate that data bytes are sent by the Web service.

W3_BYTES_RECEIVED_COUNTER_000_NAME=Total Bytes Received
W3_BYTES_RECEIVED_COUNTER_000_HELP=Total Bytes Received is the number of data bytes that have been received by the Web service (since service startup).

W3_BYTES_RECEIVED_PER_SEC_000_NAME=Bytes Received/sec
W3_BYTES_RECEIVED_PER_SEC_000_HELP=Bytes Received/sec is the rate that data bytes are received by the Web service.

W3_BYTES_TOTAL_COUNTER_000_NAME=Total Bytes Transfered
W3_BYTES_TOTAL_COUNTER_000_HELP=Total bytes either received or sent by the Web service (since service startup).

W3_BYTES_TOTAL_PER_SEC_000_NAME=Bytes Total/sec
W3_BYTES_TOTAL_PER_SEC_000_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the Web service.

W3_FILES_SENT_COUNTER_000_NAME=Total Files Sent
W3_FILES_SENT_COUNTER_000_HELP=Total Files Sent is the total number of files sent by the Web service (since service startup).

W3_FILES_SENT_SEC_000_NAME=Files Sent/sec
W3_FILES_SENT_SEC_000_HELP=The rate files are sent by the Web service.

W3_FILES_RECEIVED_COUNTER_000_NAME=Total Files Received
W3_FILES_RECEIVED_COUNTER_000_HELP=Total Files Received is the total number of files received by the Web service (since service startup).

W3_FILES_RECEIVED_SEC_000_NAME=Files Received/sec
W3_FILES_RECEIVED_SEC_000_HELP=The rate files are received by the Web service.

W3_FILES_TOTAL_COUNTER_000_NAME=Total Files Transferred
W3_FILES_TOTAL_COUNTER_000_HELP=Total Files Transferred is the sum of Files Sent and Files Received (since service startup).

W3_FILES_SEC_000_NAME=Files/sec
W3_FILES_SEC_000_HELP=The rate files are transferred, that is, sent and received by the Web service.

W3_CURRENT_ANONYMOUS_COUNTER_000_NAME=Current Anonymous Users
W3_CURRENT_ANONYMOUS_COUNTER_000_HELP=Current Anonymous Users is the number of users who currently have an anonymous connection using the Web service.

W3_CURRENT_NONANONYMOUS_COUNTER_000_NAME=Current NonAnonymous Users
W3_CURRENT_NONANONYMOUS_COUNTER_000_HELP=Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the Web service.

W3_TOTAL_ANONYMOUS_COUNTER_000_NAME=Total Anonymous Users
W3_TOTAL_ANONYMOUS_COUNTER_000_HELP=Total Anonymous Users is the total number of users who established an anonymous connection with the Web service (since service startup).

W3_ANONYMOUS_USERS_SEC_000_NAME=Anonymous Users/sec
W3_ANONYMOUS_USERS_SEC_000_HELP=The rate users are making anonymous connections to the Web service.

W3_TOTAL_NONANONYMOUS_COUNTER_000_NAME=Total NonAnonymous Users
W3_TOTAL_NONANONYMOUS_COUNTER_000_HELP=Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the Web service (since service startup).

W3_NON_ANONYMOUS_USERS_SEC_000_NAME=NonAnonymous Users/sec
W3_NON_ANONYMOUS_USERS_SEC_000_HELP=The rate users are making non-anonymous connections to the Web service.

W3_MAX_ANONYMOUS_COUNTER_000_NAME=Maximum Anonymous Users
W3_MAX_ANONYMOUS_COUNTER_000_HELP=Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the Web service (since service startup).

W3_MAX_NONANONYMOUS_COUNTER_000_NAME=Maximum NonAnonymous Users
W3_MAX_NONANONYMOUS_COUNTER_000_HELP=Maximum NonAnonymous Users is the maximum number of concurrent non-anonymous connections to the Web service (since service startup).

W3_CURRENT_CONNECTIONS_COUNTER_000_NAME=Current Connections
W3_CURRENT_CONNECTIONS_COUNTER_000_HELP=Current Connections is the current number of connections established with the Web service.

W3_MAX_CONNECTIONS_COUNTER_000_NAME=Maximum Connections
W3_MAX_CONNECTIONS_COUNTER_000_HELP=Maximum Connections is the maximum number of concurrent connections established with the Web service (since service startup).

W3_CONNECTION_ATTEMPTS_COUNTER_000_NAME= Total Connection Attempts (all instances)
W3_CONNECTION_ATTEMPTS_COUNTER_000_HELP=Total Connection Attempts is the number of connections that have been attempted using the Web service (since service startup).  This counter is for all instances listed.

W3_CONNECTION_ATTEMPTS_SEC_000_NAME=Connection Attempts/sec
W3_CONNECTION_ATTEMPTS_SEC_000_HELP=The rate that connections to the Web service are being attempted.

W3_LOGON_ATTEMPTS_COUNTER_000_NAME=Total Logon Attempts
W3_LOGON_ATTEMPTS_COUNTER_000_HELP=Total Logon Attempts is the number of logons attempts to the Web Service (since service startup).

W3_LOGON_ATTEMPTS_SEC_000_NAME=Logon Attempts/sec
W3_LOGON_ATTEMPTS_SEC_000_HELP=The rate that logons to the Web service are being attempted.

W3_TOTAL_OPTIONS_COUNTER_000_NAME=Total Options Requests
W3_TOTAL_OPTIONS_COUNTER_000_HELP=Total Options Requests is the number of HTTP requests using the OPTIONS method (since service startup).

W3_TOTAL_OPTIONS_SEC_000_NAME=Options Requests/sec
W3_TOTAL_OPTIONS_SEC_000_HELP=The rate HTTP requests using the OPTIONS method are made.

W3_TOTAL_GETS_COUNTER_000_NAME=Total Get Requests
W3_TOTAL_GETS_COUNTER_000_HELP=Total Get Requests is the number of HTTP requests using the GET method (since service startup).  Get requests are the most common HTTP request.

W3_TOTAL_GETS_SEC_000_NAME=Get Requests/sec
W3_TOTAL_GETS_SEC_000_HELP=The rate HTTP requests using the GET method are made.  Get requests are the most common HTTP request.

W3_TOTAL_POSTS_COUNTER_000_NAME=Total Post Requests
W3_TOTAL_POSTS_COUNTER_000_HELP=Total Post Requests is the number of HTTP requests using the POST method (since service startup).

W3_TOTAL_POSTS_SEC_000_NAME=Post Requests/sec
W3_TOTAL_POSTS_SEC_000_HELP=The rate HTTP requests using the POST method are made.

W3_TOTAL_HEADS_COUNTER_000_NAME=Total Head Requests
W3_TOTAL_HEADS_COUNTER_000_HELP=Total Head Requests is the number of HTTP requests using the HEAD method (since service startup).  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.

W3_TOTAL_HEADS_SEC_000_NAME=Head Requests/sec
W3_TOTAL_HEADS_SEC_000_HELP=The rate HTTP requests using the HEAD method are made.  Head requests generally indicate a client is querying the state of a document they already have to see if it needs to be refreshed.

W3_TOTAL_PUTS_COUNTER_000_NAME=Total Put Requests
W3_TOTAL_PUTS_COUNTER_000_HELP=Total Put Requests is the number of HTTP requests using the PUT method (since service startup).

W3_TOTAL_PUTS_SEC_000_NAME=Put Requests/sec
W3_TOTAL_PUTS_SEC_000_HELP=The rate HTTP requests using the PUT method are made.

W3_TOTAL_DELETES_COUNTER_000_NAME=Total Delete Requests
W3_TOTAL_DELETES_COUNTER_000_HELP=Total Delete Requests is the number of HTTP requests using the DELETE method (since service startup).  Delete requests are generally used for file removals.

W3_TOTAL_DELETES_SEC_000_NAME=Delete Requests/sec
W3_TOTAL_DELETES_SEC_000_HELP=The rate HTTP requests using the DELETE method are made.  Delete requests are generally used for file removals.

W3_TOTAL_TRACES_COUNTER_000_NAME=Total Trace Requests
W3_TOTAL_TRACES_COUNTER_000_HELP=Total Trace Requests is the number of HTTP requests using the TRACE method (since service startup).  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.

W3_TOTAL_TRACES_SEC_000_NAME=Trace Requests/sec
W3_TOTAL_TRACES_SEC_000_HELP=The rate HTTP requests using the TRACE method are made.  Trace requests allow the client to see what is being received at the end of the request chain and use the information for diagnostic purposes.

W3_TOTAL_MOVE_COUNTER_000_NAME=Total Move Requests
W3_TOTAL_MOVE_COUNTER_000_HELP=Total Move Requests is the number of HTTP requests using the MOVE method (since service startup).  Move requests are used for moving files and directories.

W3_TOTAL_MOVE_SEC_000_NAME=Move Requests/sec
W3_TOTAL_MOVE_SEC_000_HELP=The rate HTTP requests using the MOVE method are made.  Move requests are used for moving files and directories.

W3_TOTAL_COPY_COUNTER_000_NAME=Total Copy Requests
W3_TOTAL_COPY_COUNTER_000_HELP=Total Copy Requests is the number of HTTP requests using the COPY method (since service startup).  Copy requests are used for copying files and directories.

W3_TOTAL_COPY_SEC_000_NAME=Copy Requests/sec
W3_TOTAL_COPY_SEC_000_HELP=The rate HTTP requests using the COPY method are made.  Copy requests are used for copying files and directories.

W3_TOTAL_MKCOL_COUNTER_000_NAME=Total Mkcol Requests
W3_TOTAL_MKCOL_COUNTER_000_HELP=Total Mkcol Requests is the number of HTTP requests using the MKCOL method (since service startup).  Mkcol requests are used to create directories on the server.

W3_TOTAL_MKCOL_SEC_000_NAME=Mkcol Requests/sec
W3_TOTAL_MKCOL_SEC_000_HELP=The rate HTTP requests using the MKCOL method are made.  Mkcol requests are used to create directories on the server.

W3_TOTAL_PROPFIND_COUNTER_000_NAME=Total Propfind Requests
W3_TOTAL_PROPFIND_COUNTER_000_HELP=Total Propfind Requests is the number of HTTP requests using the PROPFIND method (since service startup).  Propfind requests retrieve property values on files and directories.

W3_TOTAL_PROPFIND_SEC_000_NAME=Propfind Requests/sec
W3_TOTAL_PROPFIND_SEC_000_HELP=The rate HTTP requests using the PROPFIND method are made.  Propfind requests retrieve property values on files and directories.

W3_TOTAL_PROPPATCH_COUNTER_000_NAME=Total Proppatch Requests
W3_TOTAL_PROPPATCH_COUNTER_000_HELP=Total Proppatch Requests is the number of HTTP requests using the PROPPATCH method (since service startup).  Proppatch requests set property values on files and directories.

W3_TOTAL_PROPPATCH_SEC_000_NAME=Proppatch Requests/sec
W3_TOTAL_PROPPATCH_SEC_000_HELP=The rate HTTP requests using the PROPPATCH method are made.  Proppatch requests set property values on files and directories.

W3_TOTAL_SEARCH_COUNTER_000_NAME=Total Search Requests
W3_TOTAL_SEARCH_COUNTER_000_HELP=Total Search Requests is the number of HTTP requests using the SEARCH method (since service startup).  Search requests are used to query the server to find resources that match a set of conditions provided by the client.

W3_TOTAL_SEARCH_SEC_000_NAME=Search Requests/sec
W3_TOTAL_SEARCH_SEC_000_HELP=The rate HTTP requests using the SEARCH method are made.  Search requests are used to query the server to find resources that match a set of conditions provided by the client.

W3_TOTAL_LOCK_COUNTER_000_NAME=Total Lock Requests
W3_TOTAL_LOCK_COUNTER_000_HELP=Total Lock Requests is the number of HTTP requests using the LOCK method (since service startup).  Lock requests are used to lock a file for one user so that only that user can modify the file.

W3_TOTAL_LOCK_SEC_000_NAME=Lock Requests/sec
W3_TOTAL_LOCK_SEC_000_HELP=The rate HTTP requests using the LOCK method are made.  Lock requests are used to lock a file for one user so that only that user can modify the file.

W3_TOTAL_UNLOCK_COUNTER_000_NAME=Total Unlock Requests
W3_TOTAL_UNLOCK_COUNTER_000_HELP=Total Unlock Requests is the number of HTTP requests using the UNLOCK method (since service startup).  Unlock requests are used to remove locks from files.

W3_TOTAL_UNLOCK_SEC_000_NAME=Unlock Requests/sec
W3_TOTAL_UNLOCK_SEC_000_HELP=The rate HTTP requests using the UNLOCK method are made.  Unlock requests are used to remove locks from files.

W3_TOTAL_OTHERS_COUNTER_000_NAME=Total Other Request Methods
W3_TOTAL_OTHERS_COUNTER_000_HELP=Total Other Request Methods is the number of HTTP requests that are not OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, SEARCH, LOCK or UNLOCK methods (since service startup).

W3_TOTAL_OTHERS_SEC_000_NAME=Other Request Methods/sec
W3_TOTAL_OTHERS_SEC_000_HELP=The rate HTTP requests are made that do not use the OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, SEARCH, LOCK or UNLOCK methods.

W3_TOTAL_REQUESTS_COUNTER_000_NAME=Total Method Requests
W3_TOTAL_REQUESTS_COUNTER_000_HELP=Total Method Requests is the number of all HTTP requests (since service startup).

W3_TOTAL_REQUESTS_SEC_000_NAME=Total Method Requests/sec
W3_TOTAL_REQUESTS_SEC_000_HELP=The rate HTTP requests are received.

W3_TOTAL_CGI_REQUESTS_COUNTER_000_NAME=Total CGI Requests
W3_TOTAL_CGI_REQUESTS_COUNTER_000_HELP=Total CGI requests is the total number of CGI requests (since service startup).

W3_CGI_REQUESTS_SEC_000_NAME=CGI Requests/sec
W3_CGI_REQUESTS_SEC_000_HELP=The rate CGI requests are received by the Web service.

W3_TOTAL_BGI_REQUESTS_COUNTER_000_NAME=Total ISAPI Extension Requests
W3_TOTAL_BGI_REQUESTS_COUNTER_000_HELP=Total ISAPI Extension Requests received (since service startup).

W3_BGI_REQUESTS_SEC_000_NAME=ISAPI Extension Requests/sec
W3_BGI_REQUESTS_SEC_000_HELP=The rate that ISAPI Extension requests are received by the Web service.

W3_TOTAL_NOT_FOUND_ERRORS_COUNTER_000_NAME=Total Not Found Errors
W3_TOTAL_NOT_FOUND_ERRORS_COUNTER_000_HELP=Total Not Found Errors is the number of requests that couldn't be satisfied by the server because the requested document could not be found (since service startup).  These are generally reported as an HTTP 404 error code to the client.

W3_TOTAL_NOT_FOUND_ERRORS_SEC_000_NAME=Not Found Errors/sec
W3_TOTAL_NOT_FOUND_ERRORS_SEC_000_HELP=The rate of errors due to requests that couldn't be satisfied by the server because the requested document could not be found.  These are generally reported as an HTTP 404 error code to the client.

W3_TOTAL_LOCKED_ERRORS_COUNTER_000_NAME=Total Locked Errors
W3_TOTAL_LOCKED_ERRORS_COUNTER_000_HELP=Total Locked Errors is the number of requests that couldn't be satisfied by the server because the requested was locked (since service startup).  These are generally reported as an HTTP 423 error code to the client.

W3_TOTAL_LOCKED_ERRORS_SEC_000_NAME=Locked Errors/sec
W3_TOTAL_LOCKED_ERRORS_SEC_000_HELP=The rate of errors due to requests that couldn't be satisfied by the server because the requested document was locked.  These are generally reported as an HTTP 423 error code to the client.

W3_CURRENT_CGI_COUNTER_000_NAME=Current CGI Requests
W3_CURRENT_CGI_COUNTER_000_HELP=Current CGI Requests is the current number of CGI requests being simultaneously processed by the Web service.

W3_CURRENT_BGI_COUNTER_000_NAME=Current ISAPI Extension Requests
W3_CURRENT_BGI_COUNTER_000_HELP=Current ISAPI Extension Requests is the current number of ISAPI requests being simultaneously processed by the Web service.

W3_MAX_CGI_COUNTER_000_NAME=Maximum CGI Requests
W3_MAX_CGI_COUNTER_000_HELP=Maximum CGI Requests is the maximum number of CGI requests simultaneously processed by the Web service (since service startup).

W3_MAX_BGI_COUNTER_000_NAME=Maximum ISAPI Extension Requests
W3_MAX_BGI_COUNTER_000_HELP=Maximum ISAPI Extension Requests is the maximum number of ISAPI requests simultaneously processed by the Web service (since service startup).

W3_CURRENT_CAL_AUTH_COUNTER_000_NAME=Current CAL count for authenticated users
W3_CURRENT_CAL_AUTH_COUNTER_000_HELP=This counter is no longer valid. Value will always be zero.

W3_MAX_CAL_AUTH_COUNTER_000_NAME=Maximum CAL count for authenticated users
W3_MAX_CAL_AUTH_COUNTER_000_HELP=This counter is no longer valid. Value will always be zero.

W3_TOTAL_FAILED_CAL_AUTH_COUNTER_000_NAME=Total count of failed CAL requests for authenticated users
W3_TOTAL_FAILED_CAL_AUTH_COUNTER_000_HELP=This counter is no longer valid. Value will always be zero.

W3_CURRENT_CAL_SSL_COUNTER_000_NAME=Current CAL count for SSL connections
W3_CURRENT_CAL_SSL_COUNTER_000_HELP=This counter is no longer valid. Value will always be zero.

W3_MAX_CAL_SSL_COUNTER_000_NAME=Maximum CAL count for SSL connections
W3_MAX_CAL_SSL_COUNTER_000_HELP=This counter is no longer valid. Value will always be zero.

W3_TOTAL_FAILED_CAL_SSL_COUNTER_000_NAME=Total count of failed CAL requests for SSL connections
W3_TOTAL_FAILED_CAL_SSL_COUNTER_000_HELP=This counter is no longer valid. Value will always be zero.

W3_ALLOWED_REQUESTS_COUNTER_000_NAME=Total Allowed Async I/O Requests
W3_ALLOWED_REQUESTS_COUNTER_000_HELP=Total requests allowed by bandwidth throttling settings (since service startup).

W3_BLOCKED_REQUESTS_COUNTER_000_NAME=Total Blocked Async I/O Requests
W3_BLOCKED_REQUESTS_COUNTER_000_HELP=Total requests temporarily blocked due to bandwidth throttling settings (since service startup).

W3_REJECTED_REQUESTS_COUNTER_000_NAME=Total Rejected Async I/O Requests
W3_REJECTED_REQUESTS_COUNTER_000_HELP=Total requests rejected due to bandwidth throttling settings (since service startup).

W3_CURRENT_BLOCKED_REQUESTS_COUNTER_000_NAME=Current Blocked Async I/O Requests
W3_CURRENT_BLOCKED_REQUESTS_COUNTER_000_HELP=Current requests temporarily blocked due to bandwidth throttling settings.

W3_MEASURED_BANDWIDTH_COUNTER_000_NAME=Measured Async I/O Bandwidth Usage
W3_MEASURED_BANDWIDTH_COUNTER_000_HELP=Measured bandwidth of asynchronous I/O averaged over a minute.

W3_TOTAL_BLOCKED_BANDWIDTH_BYTES_COUNTER_000_NAME=Total blocked bandwidth bytes.
W3_TOTAL_BLOCKED_BANDWIDTH_BYTES_COUNTER_000_HELP=Total bytes blocked due to bandwidth throttling settings (since service startup).

W3_CURRENT_BLOCKED_BANDWIDTH_BYTES_COUNTER_000_NAME=Current blocked bandwidth bytes.
W3_CURRENT_BLOCKED_BANDWIDTH_BYTES_COUNTER_000_HELP=Current bytes temporarily blocked due to bandwidth throttling settings.

W3_SERVICE_UPTIME_COUNTER_000_NAME=Service Uptime
W3_SERVICE_UPTIME_COUNTER_000_HELP=The length of time the Web Service has been running.

W3_GLOBAL_COUNTER_OBJECT_009_NAME=Web Service Cache
W3_GLOBAL_COUNTER_OBJECT_009_HELP=The Web Service Cache Counters object includes cache counters specific to the World Wide Web Publishing Service.

W3_GLOBAL_CURRENT_FILES_CACHED_COUNTER_009_NAME=Current Files Cached
W3_GLOBAL_CURRENT_FILES_CACHED_COUNTER_009_HELP=Current number of files whose content is in the user-mode cache.

W3_GLOBAL_TOTAL_FILES_CACHED_COUNTER_009_NAME=Total Files Cached
W3_GLOBAL_TOTAL_FILES_CACHED_COUNTER_009_HELP=Total number of files whose content was ever added to the user-mode cache (since service startup).

W3_GLOBAL_FILE_CACHE_HITS_COUNTER_009_NAME=File Cache Hits
W3_GLOBAL_FILE_CACHE_HITS_COUNTER_009_HELP=Total number of successful lookups in the user-mode file cache (since service startup).

W3_GLOBAL_FILE_CACHE_MISSES_COUNTER_009_NAME=File Cache Misses
W3_GLOBAL_FILE_CACHE_MISSES_COUNTER_009_HELP=Total number of unsuccessful lookups in the user-mode file cache (since service startup).

W3_GLOBAL_FILE_CACHE_HIT_RATIO_COUNTER_009_NAME=File Cache Hits %
W3_GLOBAL_FILE_CACHE_HIT_RATIO_COUNTER_009_HELP=The ratio of user-mode file cache hits to total cache requests (since service startup).

W3_GLOBAL_FILE_CACHE_FLUSHES_COUNTER_009_NAME=File Cache Flushes
W3_GLOBAL_FILE_CACHE_FLUSHES_COUNTER_009_HELP=The number of files removed from the user-mode cache (since service startup).

W3_GLOBAL_CURRENT_FILE_CACHE_MEMORY_USAGE_COUNTER_009_NAME=Current File Cache Memory Usage
W3_GLOBAL_CURRENT_FILE_CACHE_MEMORY_USAGE_COUNTER_009_HELP=Current number of bytes used for the user-mode file cache.

W3_GLOBAL_MAX_FILE_CACHE_MEMORY_USAGE_COUNTER_009_NAME=Maximum File Cache Memory Usage
W3_GLOBAL_MAX_FILE_CACHE_MEMORY_USAGE_COUNTER_009_HELP=Maximum number of bytes used for user-mode file cache (since service startup).

W3_GLOBAL_ACTIVE_FLUSHED_FILES_COUNTER_009_NAME=Active Flushed Entries
W3_GLOBAL_ACTIVE_FLUSHED_FILES_COUNTER_009_HELP=Active Flushed Entries are file handles cached in user-mode that will be closed when all current transfers complete.

W3_GLOBAL_TOTAL_FLUSHED_FILES_COUNTER_009_NAME=Total Flushed Files
W3_GLOBAL_TOTAL_FLUSHED_FILES_COUNTER_009_HELP=Total Flushed Files is the number of file handles that have been removed from the user-mode cache (since service startup).

W3_GLOBAL_CURRENT_URIS_CACHED_COUNTER_009_NAME=Current URIs Cached
W3_GLOBAL_CURRENT_URIS_CACHED_COUNTER_009_HELP=URI information blocks currently in the user-mode cache.

W3_GLOBAL_TOTAL_URIS_CACHED_COUNTER_009_NAME=Total URIs Cached
W3_GLOBAL_TOTAL_URIS_CACHED_COUNTER_009_HELP=Total number of URI information blocks added to the user-mode cache (since service startup).

W3_GLOBAL_URI_CACHE_HITS_COUNTER_009_NAME=URI Cache Hits
W3_GLOBAL_URI_CACHE_HITS_COUNTER_009_HELP=Total number of successful lookups in the user-mode URI cache (since service startup).

W3_GLOBAL_URI_CACHE_MISSES_COUNTER_009_NAME=URI Cache Misses
W3_GLOBAL_URI_CACHE_MISSES_COUNTER_009_HELP=Total number of unsuccessful lookups in the user-mode URI cache (since service startup).

W3_GLOBAL_URI_CACHE_HIT_RATIO_COUNTER_009_NAME=URI Cache Hits %
W3_GLOBAL_URI_CACHE_HIT_RATIO_COUNTER_009_HELP=The ratio of user-mode URI Cache Hits to total cache requests (since service startup).

W3_GLOBAL_URI_CACHE_FLUSHES_COUNTER_009_NAME=URI Cache Flushes
W3_GLOBAL_URI_CACHE_FLUSHES_COUNTER_009_HELP=User-mode URI Cache flushes (since service startup).

W3_GLOBAL_TOTAL_FLUSHED_URIS_COUNTER_009_NAME=Total Flushed URIs
W3_GLOBAL_TOTAL_FLUSHED_URIS_COUNTER_009_HELP=The number of URI information blocks that have been removed from the user-mode cache (since service startup).

W3_GLOBAL_CURRENT_METADATA_CACHED_COUNTER_009_NAME=Current Metadata Cached
W3_GLOBAL_CURRENT_METADATA_CACHED_COUNTER_009_HELP=Current number of metadata information blocks currently in the user-mode cache.

W3_GLOBAL_TOTAL_METADATA_CACHED_COUNTER_009_NAME=Total Metadata Cached
W3_GLOBAL_TOTAL_METADATA_CACHED_COUNTER_009_HELP=Total number of metadata information blocks added to the user-mode cache (since service startup).

W3_GLOBAL_METADATA_CACHE_HITS_COUNTER_009_NAME=Metadata Cache Hits
W3_GLOBAL_METADATA_CACHE_HITS_COUNTER_009_HELP=Total number of successful lookups in the user-mode metadata cache (since service startup).

W3_GLOBAL_METADATA_CACHE_MISSES_COUNTER_009_NAME=Metadata Cache Misses
W3_GLOBAL_METADATA_CACHE_MISSES_COUNTER_009_HELP=Total number of unsuccessful lookups in the user-mode metadata cache (since service startup).

W3_GLOBAL_METADATA_CACHE_HIT_RATIO_COUNTER_009_NAME=Metadata Cache Hits %
W3_GLOBAL_METADATA_CACHE_HIT_RATIO_COUNTER_009_HELP=The ratio of user-mode metadata cache hits to total cache requests (since service startup).

W3_GLOBAL_METADATA_CACHE_FLUSHES_COUNTER_009_NAME=Metadata Cache Flushes
W3_GLOBAL_METADATA_CACHE_FLUSHES_COUNTER_009_HELP=The number of user-mode metadata cache flushes (since service startup).

W3_GLOBAL_TOTAL_FLUSHED_METADATA_COUNTER_009_NAME=Total Flushed Metadata
W3_GLOBAL_TOTAL_FLUSHED_METADATA_COUNTER_009_HELP=Total Flushed Metadata is the number of Metadata information blocks that have been removed from the user-mode cache (since service startup).

W3_GLOBAL_KERNEL_CURRENT_URIS_CACHED_COUNTER_009_NAME=Kernel: Current URIs Cached
W3_GLOBAL_KERNEL_CURRENT_URIS_CACHED_COUNTER_009_HELP=URI information blocks currently cached by the kernel.

W3_GLOBAL_KERNEL_TOTAL_URIS_CACHED_COUNTER_009_NAME=Kernel: Total URIs Cached
W3_GLOBAL_KERNEL_TOTAL_URIS_CACHED_COUNTER_009_HELP=Total number of URI information blocks added to the kernel cache (since service startup).

W3_GLOBAL_KERNEL_URI_CACHE_HITS_COUNTER_009_NAME=Kernel: URI Cache Hits
W3_GLOBAL_KERNEL_URI_CACHE_HITS_COUNTER_009_HELP=Total number of successful lookups in the kernel URI cache (since service startup).

W3_GLOBAL_KERNEL_URI_CACHE_HITS_PER_SEC_009_NAME=Kernel: Uri Cache Hits/sec
W3_GLOBAL_KERNEL_URI_CACHE_HITS_PER_SEC_009_HELP=The rate of kernel URI Cache hits.

W3_GLOBAL_KERNEL_URI_CACHE_MISSES_COUNTER_009_NAME=Kernel: URI Cache Misses
W3_GLOBAL_KERNEL_URI_CACHE_MISSES_COUNTER_009_HELP=Total number of unsuccessful lookups in the kernel URI cache (since service startup).

W3_GLOBAL_KERNEL_URI_CACHE_HIT_RATIO_COUNTER_009_NAME=Kernel: URI Cache Hits %
W3_GLOBAL_KERNEL_URI_CACHE_HIT_RATIO_COUNTER_009_HELP=The ratio of kernel URI cache hits to total cache requests (since service startup).

W3_GLOBAL_KERNEL_URI_CACHE_FLUSHES_COUNTER_009_NAME=Kernel: URI Cache Flushes
W3_GLOBAL_KERNEL_URI_CACHE_FLUSHES_COUNTER_009_HELP=Kernel URI Cache Flushes (since server startup).

W3_GLOBAL_KERNEL_TOTAL_FLUSHED_URIS_COUNTER_009_NAME=Kernel: Total Flushed URIs
W3_GLOBAL_KERNEL_TOTAL_FLUSHED_URIS_COUNTER_009_HELP=The number of URI information blocks that have been removed from the kernel cache (since service startup).

W3_GLOBAL_COUNTER_OBJECT_000_NAME=Web Service Cache
W3_GLOBAL_COUNTER_OBJECT_000_HELP=The Web Service Cache Counters object includes cache counters specific to the World Wide Web Publishing Service.

W3_GLOBAL_CURRENT_FILES_CACHED_COUNTER_000_NAME=Current Files Cached
W3_GLOBAL_CURRENT_FILES_CACHED_COUNTER_000_HELP=Current number of files whose content is in the user-mode cache.

W3_GLOBAL_TOTAL_FILES_CACHED_COUNTER_000_NAME=Total Files Cached
W3_GLOBAL_TOTAL_FILES_CACHED_COUNTER_000_HELP=Total number of files whose content was ever added to the user-mode cache (since service startup).

W3_GLOBAL_FILE_CACHE_HITS_COUNTER_000_NAME=File Cache Hits
W3_GLOBAL_FILE_CACHE_HITS_COUNTER_000_HELP=Total number of successful lookups in the user-mode file cache (since service startup).

W3_GLOBAL_FILE_CACHE_MISSES_COUNTER_000_NAME=File Cache Misses
W3_GLOBAL_FILE_CACHE_MISSES_COUNTER_000_HELP=Total number of unsuccessful lookups in the user-mode file cache (since service startup).

W3_GLOBAL_FILE_CACHE_HIT_RATIO_COUNTER_000_NAME=File Cache Hits %
W3_GLOBAL_FILE_CACHE_HIT_RATIO_COUNTER_000_HELP=The ratio of user-mode file cache hits to total cache requests (since service startup).

W3_GLOBAL_FILE_CACHE_FLUSHES_COUNTER_000_NAME=File Cache Flushes
W3_GLOBAL_FILE_CACHE_FLUSHES_COUNTER_000_HELP=The number of files removed from the user-mode cache (since service startup).

W3_GLOBAL_CURRENT_FILE_CACHE_MEMORY_USAGE_COUNTER_000_NAME=Current File Cache Memory Usage
W3_GLOBAL_CURRENT_FILE_CACHE_MEMORY_USAGE_COUNTER_000_HELP=Current number of bytes used for the user-mode file cache.

W3_GLOBAL_MAX_FILE_CACHE_MEMORY_USAGE_COUNTER_000_NAME=Maximum File Cache Memory Usage
W3_GLOBAL_MAX_FILE_CACHE_MEMORY_USAGE_COUNTER_000_HELP=Maximum number of bytes used for user-mode file cache (since service startup).

W3_GLOBAL_ACTIVE_FLUSHED_FILES_COUNTER_000_NAME=Active Flushed Entries
W3_GLOBAL_ACTIVE_FLUSHED_FILES_COUNTER_000_HELP=Active Flushed Entries are file handles cached in user-mode that will be closed when all current transfers complete.

W3_GLOBAL_TOTAL_FLUSHED_FILES_COUNTER_000_NAME=Total Flushed Files
W3_GLOBAL_TOTAL_FLUSHED_FILES_COUNTER_000_HELP=Total Flushed Files is the number of file handles that have been removed from the user-mode cache (since service startup).

W3_GLOBAL_CURRENT_URIS_CACHED_COUNTER_000_NAME=Current URIs Cached
W3_GLOBAL_CURRENT_URIS_CACHED_COUNTER_000_HELP=URI information blocks currently in the user-mode cache.

W3_GLOBAL_TOTAL_URIS_CACHED_COUNTER_000_NAME=Total URIs Cached
W3_GLOBAL_TOTAL_URIS_CACHED_COUNTER_000_HELP=Total number of URI information blocks added to the user-mode cache (since service startup).

W3_GLOBAL_URI_CACHE_HITS_COUNTER_000_NAME=URI Cache Hits
W3_GLOBAL_URI_CACHE_HITS_COUNTER_000_HELP=Total number of successful lookups in the user-mode URI cache (since service startup).

W3_GLOBAL_URI_CACHE_MISSES_COUNTER_000_NAME=URI Cache Misses
W3_GLOBAL_URI_CACHE_MISSES_COUNTER_000_HELP=Total number of unsuccessful lookups in the user-mode URI cache (since service startup).

W3_GLOBAL_URI_CACHE_HIT_RATIO_COUNTER_000_NAME=URI Cache Hits %
W3_GLOBAL_URI_CACHE_HIT_RATIO_COUNTER_000_HELP=The ratio of user-mode URI Cache Hits to total cache requests (since service startup).

W3_GLOBAL_URI_CACHE_FLUSHES_COUNTER_000_NAME=URI Cache Flushes
W3_GLOBAL_URI_CACHE_FLUSHES_COUNTER_000_HELP=User-mode URI Cache flushes (since service startup).

W3_GLOBAL_TOTAL_FLUSHED_URIS_COUNTER_000_NAME=Total Flushed URIs
W3_GLOBAL_TOTAL_FLUSHED_URIS_COUNTER_000_HELP=The number of URI information blocks that have been removed from the user-mode cache (since service startup).

W3_GLOBAL_CURRENT_METADATA_CACHED_COUNTER_000_NAME=Current Metadata Cached
W3_GLOBAL_CURRENT_METADATA_CACHED_COUNTER_000_HELP=Current number of metadata information blocks currently in the user-mode cache.

W3_GLOBAL_TOTAL_METADATA_CACHED_COUNTER_000_NAME=Total Metadata Cached
W3_GLOBAL_TOTAL_METADATA_CACHED_COUNTER_000_HELP=Total number of metadata information blocks added to the user-mode cache (since service startup).

W3_GLOBAL_METADATA_CACHE_HITS_COUNTER_000_NAME=Metadata Cache Hits
W3_GLOBAL_METADATA_CACHE_HITS_COUNTER_000_HELP=Total number of successful lookups in the user-mode metadata cache (since service startup).

W3_GLOBAL_METADATA_CACHE_MISSES_COUNTER_000_NAME=Metadata Cache Misses
W3_GLOBAL_METADATA_CACHE_MISSES_COUNTER_000_HELP=Total number of unsuccessful lookups in the user-mode metadata cache (since service startup).

W3_GLOBAL_METADATA_CACHE_HIT_RATIO_COUNTER_000_NAME=Metadata Cache Hits %
W3_GLOBAL_METADATA_CACHE_HIT_RATIO_COUNTER_000_HELP=The ratio of user-mode metadata cache hits to total cache requests (since service startup).

W3_GLOBAL_METADATA_CACHE_FLUSHES_COUNTER_000_NAME=Metadata Cache Flushes
W3_GLOBAL_METADATA_CACHE_FLUSHES_COUNTER_000_HELP=The number of user-mode metadata cache flushes (since service startup).

W3_GLOBAL_TOTAL_FLUSHED_METADATA_COUNTER_000_NAME=Total Flushed Metadata
W3_GLOBAL_TOTAL_FLUSHED_METADATA_COUNTER_000_HELP=Total Flushed Metadata is the number of Metadata information blocks that have been removed from the user-mode cache (since service startup).

W3_GLOBAL_KERNEL_CURRENT_URIS_CACHED_COUNTER_000_NAME=Kernel: Current URIs Cached
W3_GLOBAL_KERNEL_CURRENT_URIS_CACHED_COUNTER_000_HELP=URI information blocks currently cached by the kernel.

W3_GLOBAL_KERNEL_TOTAL_URIS_CACHED_COUNTER_000_NAME=Kernel: Total URIs Cached
W3_GLOBAL_KERNEL_TOTAL_URIS_CACHED_COUNTER_000_HELP=Total number of URI information blocks added to the kernel cache (since service startup).

W3_GLOBAL_KERNEL_URI_CACHE_HITS_COUNTER_000_NAME=Kernel: URI Cache Hits
W3_GLOBAL_KERNEL_URI_CACHE_HITS_COUNTER_000_HELP=Total number of successful lookups in the kernel URI cache (since service startup).

W3_GLOBAL_KERNEL_URI_CACHE_HITS_PER_SEC_000_NAME=Kernel: Uri Cache Hits/sec
W3_GLOBAL_KERNEL_URI_CACHE_HITS_PER_SEC_000_HELP=The rate of kernel URI Cache hits.

W3_GLOBAL_KERNEL_URI_CACHE_MISSES_COUNTER_000_NAME=Kernel: URI Cache Misses
W3_GLOBAL_KERNEL_URI_CACHE_MISSES_COUNTER_000_HELP=Total number of unsuccessful lookups in the kernel URI cache (since service startup).

W3_GLOBAL_KERNEL_URI_CACHE_HIT_RATIO_COUNTER_000_NAME=Kernel: URI Cache Hits %
W3_GLOBAL_KERNEL_URI_CACHE_HIT_RATIO_COUNTER_000_HELP=The ratio of kernel URI cache hits to total cache requests (since service startup).

W3_GLOBAL_KERNEL_URI_CACHE_FLUSHES_COUNTER_000_NAME=Kernel: URI Cache Flushes
W3_GLOBAL_KERNEL_URI_CACHE_FLUSHES_COUNTER_000_HELP=Kernel URI Cache Flushes (since server startup).

W3_GLOBAL_KERNEL_TOTAL_FLUSHED_URIS_COUNTER_000_NAME=Kernel: Total Flushed URIs
W3_GLOBAL_KERNEL_TOTAL_FLUSHED_URIS_COUNTER_000_HELP=The number of URI information blocks that have been removed from the kernel cache (since service startup).
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\img\common\exclude.txt ===
tips.dat
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\img\extcomp.ini ===
[ASP]
Location=..\..\ASP\*

[CRW]
Location=CRW
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\img\common\binplace.txt ===
logtemp.sql   retail
msacal70.ocx  retail
IIsApp.vbs    retail
iisback.vbs   retail
IIsCnfg.vbs   retail
IIsFtp.vbs    retail
IIsFtpdr.vbs  retail
IIsScHlp.wsc  retail
iisvdir.vbs   retail
iisext.vbs    retail
iisweb.vbs    retail
iisseclk.htm  retail
iismscs.htm   winnt32\compdata
iismscs.txt   winnt32\compdata
appsrv.msc    retail
appsrv64.msc  retail
iisdswww.htm  winnt32\compdata
iisdswww.txt  winnt32\compdata
iisfat.txt    winnt32\compdata
iisfat.htm    winnt32\compdata
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\iisrearc\inc\readme.txt ===
This is the SLM project for IIS Rearchitecture Team.

inc -- shared include files directory
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\img\compat\iisdswww.txt ===
IIS World Wide Web Publishing Service (WWW service) Is Disabled During Upgrade

To protect your server from attacks by malicious users, the World Wide Web Publishing Service (WWW service) will be disabled during upgrade. Microsoft Windows 2000 Server installs Internet Information Services (IIS) by default, and requires administrators to secure IIS to prevent attacks.

The IIS Lockdown Tool has not been run on this Windows 2000 server. If you do not want to allow the WWW service to be disabled, you must download and run the IIS Lockdown Tool, or add the override registry key. Otherwise, you can continue with the upgrade and re-enable the WWW service after the upgrade has completed.

Important: If you use the World Wide Web Publishing Service (WWW service), we strongly recommend that you run the IIS Lockdown Tool before upgrading to a product in the Windows Server 2003 family. The IIS Lockdown Tool will help secure your computer by disabling or removing unnecessary features that are present in your Windows 2000 Server installation. These features would otherwise have remained on your machine after upgrading, leaving your server vulnerable to attacks. Using the IIS Lockdown Tool instead of using the override registry key or re-enabling the WWW service after installation allows you to fine-tune the level of security to your particular needs.

When upgrading to a member of the Windows Server 2003 family, the WWW service will NOT be disabled if any of the following conditions are present:

- You have already run the IIS Lockdown Tool on your Windows 2000 Server before starting the upgrade process. The IIS Lockdown Tool reduces surface attack by disabling unnecessary features, and it allows you to decide which features to enable for your site. The IIS Lockdown Tool is available at IIS Lockdown Tool (http://go.microsoft.com/fwlink/?LinkId=8599). 
- The registry key RetainW3SVCStatus has been added to the registry under HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC. Under RetainW3SVCStatus you can add any value and then assign a DWORD value to it. For example, you can create the key HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC\RetainW3SVCStatus\do_not_disable with the DWORD value of 1. 
- In the unattended install case, an entry "DisableWebServiceOnUpgrade = false" exists in the unattended install script.

After the upgrade is completed, you can enable the WWW service using either IIS Manager or the Services snap-in.

To start the WWW service after upgrade

In IIS Manager:

1. From the Start menu, point to Administrative Tools, and then click Internet Information Services (IIS) Manager. 
2. Expand the local computer, expand the Web Sites folder, right-click the Web site you want to start, and then click Start. 
3. Click Yes to enable the WWW service and start the Web site. 

In the Services snap-in:

1. From the Start menu, point to Administrative Tools, and then click Services. 
2. In the list of services, right-click World Wide Web Publishing Service, and then click Properties. 
3. On the General tab, in the Startup type list, click Automatic, and then click OK. 
4. In the list of services, right-click World Wide Web Publishing Service, and then click Start.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\img\compat\iisfat.txt ===
IIS is being installed on a FAT volume. This will disable IIS security features. Please consider converting the partition from FAT to NTFS.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\img\compat\iismscs.txt ===
The IIS 4.0 and IIS 5.0 Web site and FTP site cluster resources are not compatible with IIS 6.0 and will be disabled during the upgrade. Prior to upgrading to IIS 6.0, you should review the "Upgrading on Cluster Nodes" chapter in the Getting Started manual that came with your Microsoft Windows Server 2003 operating system. You can also access the Getting Started Guide text files in the \Docs folder on your Windows Server 2003 operating system installation CD. After upgrading to IIS 6.0, you will then need to migrate your Web site and FTP site cluster resources.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\inc\facility.txt ===
A range of FACILITY_INTERNET has been reserved for IIS components. IIS
components may use values between 0xc800 and 0xcbff in the "code" field
of an HRESULT.

Since there is no automated way to enforce this range (and protect against
duplicate codes) this text file tracks code usage. Whenever a new component
needs to allocate codes within the IIS range, please update this file.

.MC files used to generate HRESULTs allocated from this range should be of
the following format:

    SeverityNames=(Success=0x0,
                   CoError=0x2
                   )

    FacilityNames=(Internet=0xc
                  )

    Messageid=0xc??? Facility=Internet Severity=CoError SymbolicName=WHATEVER
    Language=English
    Your message goes here.
    .

Also, ensure the .MC file is compiled with "mc -o {other_switches}". The
-o switch tells MC.EXE to generate an "OLE-style" header file.


Range       Component       Path to .MC file
~~~~~       ~~~~~~~~~       ~~~~~~~~~~~~~~~~
c800-c80f   metadata.dll    iis\svcs\infocomm\metadata\interfac\mdmsg.mc
c810-cbff   {available}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\inc\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        28 July, 1995

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory internet\svcs\inc
     and details related to Internet Servers Common Headers


File            Description

README.txt      This file.
atq.h           Asyncronous Thread queue (ATQ) interface
buffer.hxx      BUFFER class for raw buffer objects
cachecfg.hxx    DISK cache configuration object
cpsock.h        Connection Packet Sockets interface
dbgutil.h       Debug utilities header (Template only)
eventlog.hxx    EVENT_LOG class for interfacing with event log module
fsconst.h       File system type constants
gsvcinfo.hxx    IGSVC_INFO Internet gateway service interface definition
igateway.hxx    Internet GATEWAY process interface
inetamsg.mc     Internet Svcs common dll message file
inetlog.w       Internet common Log interface
isvcinfo.hxx    ISVC_INFO  internet services common info interface
makefile
makefile.inc
mimemap.hxx     MIME_MAP class for MIME mapping
odbcconn.hxx    ODBC_CONNETION and other ODBC interface classes
parse.hxx       INET_PARSE module for parsing strings
pudebug.h       Program utility interface for debugging
sources         description file for NT Build
string.hxx      STRING class 
tcpcons.h       Internet services common constants defined.
tcpdata.h       Internet services common data
tcpdebug.h      Internet services (OLD ) debug interface (DEFUNCT)
tcpdll.hxx      Internet services include files header
tcpproc.h       Internet services procedures header
tscache.hxx     Internet Services Cache interface 
tsres.hxx       Internet services  resource class definition
tsunami.hxx     Internet Services TSUNAMI.LIB interface
tsvcinfo.hxx    Publishing services common interface 
xportcon.hxx    Internet services transport independent connections.


Implementation Details


Contents:

1. ISVC_INFO
2. Eventlog
3. RequestLog


1. ISVC_INFO:
        This is the common base class for all the Internet services. It
consists of information that is generic to all the services. The data consists
of 
  Supplied Data:
        ServiceName
        ServiceId
        Registry key name for parameters of service
        Module Name ( the dll name of service for resources)

  Internal Data:
        EventLog object
        Request Log Oject (InetLog)
        ModuleHandle
        fValid -- indicating if this object is valid
        tsLock -- resource lock
        AdminName name of administrator  (from registry)
        AdminEmail email for administrator (from registry)
        AdminComment comment about this server (from registry)


 From the ISVC_INFO object we derive two kinds of objects
        IGSVC_INFO  -- Internet Gateway service info object
        IPSVC_INFO  -- Internet Publishing service info object
  ( At present IPSVC_INFO is also called TSVC_INFO (old name))

 IPSVC_INFO:
        This object consists of common information for all Internet Publishing
services. Currently the services include Gopher, FTP and WWW services. The
data maintained by this object includes all those in ISVC_INFO and the
following:
  Supplied Data:
        Anonymous User Name
        Anonymous Password Secret Name
        Virtual Roots Secret Name
        Function pointer for initialization of service
        Function pointer for cleanup of service on termination
        
  Internal Data:
        fValid -- if this object is valid
        AnonymousUserToken
        tsCache - cache object for cached objects
        Accept IP address list ( from registry)
        Deny IP address list (from registry)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\last\iis_last_placefile.txt ===
admex.h         inetsrv\iissamp\sdk\include
        iadmw.h         inetsrv\iissamp\sdk\include
        iiis.h          inetsrv\iissamp\sdk\include
        iiscnfg.h       inetsrv\iissamp\sdk\include
        ilogobj.hxx     inetsrv\iissamp\sdk\include
        mdcommsg.h      inetsrv\iissamp\sdk\include
        mddefw.h        inetsrv\iissamp\sdk\include
        mdmsg.h         inetsrv\iissamp\sdk\include
        iadmext.h       inetsrv\iissamp\sdk\include
        asptlb.h        inetsrv\iissamp\sdk\include
        httpext.h       inetsrv\iissamp\sdk\include
        httpfilt.h      inetsrv\iissamp\sdk\include
	isrdns.lib      staxpt\iis\lib
	asp.tlb         staxpt\iis\inc
	keyring.h       staxpt\iis\inc
	wrapmb.h        staxpt\iis\inc
        wrapmb_a.lib    staxpt\iis\lib
        wrapmb_u.lib    staxpt\iis\lib
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\lkrhash\readme.txt ===
LKRhash: Larson-Krishnan-Reilly Hash Tables
===========================================

LKRhash is a fast, thread-safe, scalable, multiprocessor-friendly,
processor cache-friendly hashtable based on P.-A. Larson's linear hash
tables.  See lkrhash.h for details.

http://GeorgeRe/work/LKRhash/ is the official MS-internal
website for LKRhash. Please check there occasionally for
updates.

LKRhash can be redistributed to customers in binary format
only. Do not distribute the source outside of Microsoft.

Use VC 6.0 to build lkrhash.dsw.  This will build lkrhash.dll,
which contains the implementation of the hashtable, and
hashtest.exe, a test program.  To run, use
    .\release\hashtest.exe words.ini      (or files.ini)
(words.* and files.* can be found in data.zip)

Alternatively, if you're using the NT build environment, adapt
the `dirs' and `sources' files to your needs.

To make LKRhash work with other code, you'll need to
    #define USE_DEBUG_CRTS
before #including <irtldbg.h>, which is #included by <lkrhash.h>.
If you don't, you're likely to see a complaint from the compiler
that it can't find <pudebug.h>.

If you're using LKRhash in the same module where you're building
it, you'll need to add the following two lines to your .cpp files
before you include <lkrhash.h>
    #define DLL_IMPLEMENTATION
    #define IMPLEMENTATION_EXPORT
    #include <lkrhash.h>

Namespaces are now turned on by default. All functions declared
in <lkrhash.h> are declared in the `LKRhash' namespace, and all
functions declared in <hashfn.h> are in the `HashFn' namespace.
If you don't want this behavior, you'll need to add the following
two lines to your .cpp files before you include <lkrhash.h>
    #define __LKRHASH_NO_NAMESPACE__
    #define __HASHFN_NO_NAMESPACE__
    #include <lkrhash.h>
Alternatively, you can add the following
    using namespace LKRhash;
    using namespace HashFn;

LKRhash now comes with an NTSD debugger extension DLL,
lkrdbg. Since debugger extensions can't be used with msdev,
there's no msdev-style .dsp for lkrdbg. You'll have to build it
with the NT build environment (or build a makefile by hand). See
lkrdbg\readme.txt for more details.

/George V. Reilly  <GeorgeRe@microsoft.com>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\lkrhash\lkrdbg\readme.txt ===
LKRDBG is an NTSD debugger extension for LKRhash. You must
install it in a directory on your path, such as
%SystemRoot%\system32.

Help
====
!lkrdbg.help                help summary
!lkrdbg.help lkrhash        help on !lkrdbg.lkrhash

!lkrdbg.lkrhash
===============
!lkrhash [options] [<addr>] Dump LKRhash table at <addr>
    -g[0-2]                 Dumps global list of all the LKRhash tables
                            in the process, at verbosity level N
    -l[0-2] <addr>          Dump <addr> at verbosity level N
    -v <addr>               Dump <addr> very Verbosely

ToDo
====
Provide an extension mechanism for dumping different
instantiations of LKRhash differently
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\setup\imh6\dirmake.txt ===
[TEXT: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\setup\imh6\empty.txt ===
[TEXT: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\setup\acwebsvc\readme.txt ===
Notes about using AcWebSvc.dll
------------------------------
In order for AcWebSvc.dll to hook a process, two things must happen:
 - AcWebSvc.dll must be copied into the %windir%\apppatch directory.
 - An entry must be made in the App Compat database.

To create the entry in the App Compat database, it's necessary
to create an xml file describing the process to be hooked.

Below is sample xml that describes a pretty contrived scenario.  It
basically hooks notepad.exe and associates it with an IIS application
called "Notepad IIS App!".  This fake application includes two ISAPI
extensions called, GetClientInfo.dll and ReadEntity.dll, which are
installed in a path that can be acquired by reading a key from the
registry.  It has a dependency on its own ISAPI extensions and also
something (that is also made up) called IISASP60.  Finally, the sample
uses a setup indicator file, called "file.txt" to determine whether
the app is installed or not (note that this entry is optional in the
xml, and if a SetupIndicatorFile is not present, the shim will use
the presence of any of the listed extensions to determine if the
shimmed process installed or uninstalled.)  Finally, the shim is
able to force enable all dependencies of this application, including
both its own extensions and any dependent applications.  To do this,
set the "HonorDisabledExtensionsAndApplications" setting to "FALSE".
Note that this violates our suggested best practices for app
installation, and will enable all dependencies even if the administrator
for the server intentionally disabled them for security reasons.

To insert the xml into the database, first create a database file
by running the following command, which produces a file called
notepad.sdb:

     shimdbc custom notepad.xml notepad.sdb

Finally, to include the notepad.sdb file into the database, run
the following command:

     sdbinst notepad.sdb

Once these steps are done, any processes called "notepad.exe" will
inject AcWebSvc.dll and hook on process exit.

To remove the entry from the AppCompat database, run the
following command:

     sdbinst -u notepad.exe

For more information about creating xml to describe a "real"
application, see the following:

     http://winwebsites/AppCompat/Development.

For more information about how the DATA tags work with
the IIS lockdown mechanism, see section 4.1.2.1 of the
following:

     http://iis6/Specs/SecurityConsoleMetadata.doc


-----Sample XML-----
<?xml version="1.0" encoding="Windows-1252"?>
<DATABASE NAME="IIS Database"> 

    <LIBRARY> 

        <SHIM NAME="EnableIIS" FILE="AcWebSvc.dll"/> 

    </LIBRARY> 

    <APP NAME="Sample XML Using Notepad" VENDOR="Microsoft"> 

        <EXE NAME="NOTEPAD.EXE"> 

            <SHIM NAME="EnableIIS" COMMAND_LINE="%DbInfo%"> 

                <INCLUDE MODULE="*"/> 
                <INCLUDE MODULE="%EXE%"/> 

                <DATA NAME="AppName" VALUETYPE="STRING" VALUE="Notepad IIS App!"/>
                <DATA NAME="BasePath" VALUETYPE="STRING" VALUE="HKEY_LOCAL_MACHINE\Software\WadeH\InstallPath"/>
                <DATA NAME="PathType" VALUETYPE="STRING" VALUE="1"/>
                <DATA NAME="WebSvcExtensions" VALUETYPE="STRING" VALUE="GetClientInfo.dll,ReadEntity.dll"/>
                <DATA NAME="GroupID" VALUETYPE="STRING" VALUE="NPISA"/>
                <DATA NAME="GroupDesc" VALUETYPE="STRING" VALUE="Way Cool Notepad IIS Stuff!"/>
                <DATA NAME="EnableExtGroups" VALUETYPE="STRING" VALUE="IISASP60"/>
                <DATA NAME="SetupIndicatorFile" VALUETYPE="STRING" VALUE="file.txt"/>
                <DATA NAME="HonorDisabledExtensionsAndDependencies" VALUETYPE="STRING" VALUE="TRUE"/>

            </SHIM> 

        </EXE> 

    </APP> 

</DATABASE>
-----Sample XML-----
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\setup\imh6\readme.txt ===
info on things to watch out for when adding a file to iis
---------------------------------------------------------

Adding a binary file to iis

1. You have to change iisend.inx
   as well as iismid_*.inx
   as well as iisend_*.inx to make the file install

2. you'll have to change nt\inetsrv\iis\placefil.txt to make the file binplace to the binaries dir
   or nt\inetsrv\iis\placefil5.txt if it's for the iis51 built only binaries

3. you'll have to add the file to hardcode.lst
   (so that postbuild info on this file is created and so that localization knows that it must localizes this file)
   localization looks in this file to determine which files it needs to localize that are outside of the cabs...

4. You'll have to modify nt\mergedcomponents\setupinfs\layout.inx
   and make sure that the file gets downloaded during winnt32.exe for the right SKU (and only for those sku's!)

5. if the file is in regard to inetmgr, then adminpak needs to get notifed of any changes!

6. if the file is another counter then, have to investigate if it's a ia64 counter that needs to be installed in the syswow64 directory on ia64 machines!
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\staxinc\build\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;
; If you add a new file to the list, please refrain from creating your own
; special section.  Doing so makes it difficult to detect duplicates.  If
; you're unable to add your image due to a collision with an existing name,
; work it out with the other developer.  Options include creating another
; placefil.txt for your project or using the ALT_PROJECT_TARGET macro in your
; sources file to change the base of the distribution point (doing so means
; your project will not install as part of base NT).
;
;     sort /+17 < placefil.txt > placefil.srt
;
; will generate a list sorted by class name if you want.

adsiisex.dll    retail
aqadmin.dll		retail
aqadmcli.exe	staxpt\utest
aqdbgext.dll    staxpt\debug
aqueue.dll      retail
cachtest.exe    staxpt\utest
cachtstx.exe    staxpt\utest
cat.dll         retail
chkcab.cmd      staxpt\dump
ciutest.exe     staxpt\utest
ddrop.dll       retail
dirwatch.exe    staxpt\utest
dnsdiag.exe     reskit\bin
drive.exe       retail
dt_ctrl.dll     retail
dumpmsg.exe     staxpt\debug
exifstst.exe    staxpt\utest
exstrace.dll    retail
fcachdll.dll    retail
staxmem.dll     retail
fcachtst.exe    staxpt\utest
fhashex.exe     staxpt\utest
hashctst.exe    staxpt\utest
heapdet.dll     staxpt\utest
heaptst.exe     staxpt\utest
histtest.exe    staxpt\utest
ims.lst         symbolcd\cablists
imsg.dll        retail
imsinsnt.dll    retail
infomsg.nws     staxpt
ins.lst         symbolcd\cablists
isrpc.dll       retail
mailmsg.dll     retail
makecab.cmd     staxpt\dump
makecab1.cmd    staxpt\dump
mimefilt.dll    retail
mmdbgext.dll    staxpt\debug
nntp.mib        retail
nntpadm.dll     retail
nntpapi.dll     retail
nntpbld.exe     retail
nntpctrs.dll    retail
nntpctrs.h      retail
nntpctrs.ini    retail
nntpdbg.dll		staxpt\debug
nntpdrv.dll     retail
nntpfilt.dll    retail
nntpfs.dll      retail
nntphdr.ddf     staxpt\dump
nntphdr.inf     staxpt\dump
nntpinf.csv     staxpt\dump
nntpmib.dll     retail
nntpsnap.dll    unloc
nntpsnap.dbg    symbols\unloc\dll    ; Exchange - NNTP
nntpsnap.pdb    symbols\unloc\dll    ; Exchange - NNTP

nntpsvc.dll     retail
ntfsdrv.dll     retail
ntfsdrct.h		retail
ntfsdrct.ini	retail
qrydb.dll       retail
qryobj.dll      retail
qryxlate.exe    staxpt\utest
regfilt.vbs     staxpt
regtrace.exe    retail
rwexe.exe       staxpt\utest
rwnh.dll        retail
rwnhdll.dll     staxpt\utest
rwutest.exe     staxpt\utest
seo.dll         retail
seos.dll        retail
smtp.mib        retail
smtpadm.dll     retail
smtpapi.dll     retail
smtpctrs.dll    retail
smtpctrs.h      retail
smtpctrs.ini    retail
smtpdbg.dll		staxpt\debug
smtphdr.ddf     staxpt\dump
smtphdr.inf     staxpt\dump
smtpinf.csv     staxpt\dump
smtpmd.exe      retail
smtpmib.dll     retail
smtpsnap.dll    unloc
smtpsnap.dbg    symbols\unloc\dll    ; Exchange - SMTP
smtpsnap.pdb    symbols\unloc\dll    ; Exchange - SMTP
smtpsvc.dll     retail
snprfdll.dll	retail
testart.exe     staxpt\utest
testff.exe      staxpt\utest
testfix.exe     staxpt\utest
testhash.exe    staxpt\utest
testprop.exe    staxpt\utest
testvr.exe      staxpt\utest
timetest.exe    staxpt\utest
tptest.exe      staxpt\utest
xovertst.exe    staxpt\utest
xtest.exe       staxpt\utest
smtpsnap.hlp    retail
smtpsnap.cnt    retail
nntpsnap.hlp    retail
nntpsnap.cnt    retail

NNTP_Service_Srv_{AC7092C9-747F-46AC-AD81-63CC8F249673}.sld     mantis
SMTP_Service_Pro_{FC78D5AB-EA05-46A2-AD15-C58A01152B26}.sld     mantis
SMTP_Service_Srv_{CB4224F7-2A1D-4806-9599-07AF98396F69}.sld     mantis
Mime_filter_{B3F97AC6-FD67-4762-92F1-F626E517B007}.sld		mantis
NNTP_Service_Administration_{27E72AF4-926B-4C6D-B8DA-6F4016205523}.sld	mantis
SMTP_Service_Administration_{5F4B7384-0E2D-4057-B55F-08B39D4D3D43}.sld	mantis
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\cmp\readme.txt ===
This directory contains the sources for Active Service Pages and the core SSO.

Directory	Purpose
asp		Source for Active Server Pages DLL
doc		Documents related to Active Server Pages
easp		Source for tools for encrypting Active Server Pages
lib		Library binaries peculiar to ASP
makevers	Source for version stamping tool. Update this when the version # changes
misc		Queries for Deanli Raid database
perfmon		Source for Active Server Pages Performance Monitoring DLL
sso		Source for core Server Side Objects (adrot, browscap, nextlink)
supplied	binaries peculiar to ASP supplied by other groups (vbscrpt, jscript, etc)
tools		source, binaries, and batch files for tools useful to building ASP.DLL


To build everything, just type 'build' or 'build -c' in this directory.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\cmp\aspcmp\browser\browscap.ini ===
;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Microsoft Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 1.x
[IE 1.5]
browser=IE
version=1.5
majorver=1
minorver=5
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
beta=False
Win16=False

[Mozilla/1.22 (compatible; MSIE 1.5; Windows NT)]
parent=IE 1.5
platform=WinNT

[Mozilla/1.22 (compatible; MSIE 1.5; Windows 95)]
parent=IE 1.5
platform=Win95


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 2.x
[IE 2.0]
browser=IE
version=2.0
majorver=2
minorver=0
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
beta=False
Win16=False

[Mozilla/1.22 (compatible; MSIE 2.0; Mac_68000)]
parent=IE 2.0
platform=Mac68K

[Mozilla/1.22 (compatible; MSIE 2.0; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC

[Mozilla/1.22 (compatible; MSIE 2.0B; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.0B

[Mozilla/1.22 (compatible; MSIE 2.0B; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.0; Mac_68000)]
parent=IE 2.0
platform=Mac68K

[Mozilla/2.0 (compatible; MSIE 2.0; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC

[Mozilla/2.0 (compatible; MSIE 2.0B; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.0B; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.0B

[Mozilla/2.0 (compatible; MSIE 2.1;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.1
minorver=#1
frames=True

[Mozilla/2.0 (compatible; MSIE 2.1; Mac_68000)]
parent=IE 2.0
platform=Mac68K
version=2.1
minorver=#1
Frames=True

[Mozilla/2.0 (compatible; MSIE 2.1; Mac_PowerPC)]
parent=IE 2.0
platform=MacPPC
version=2.1
minorver=#1
frames=True

[Mozilla/2.0 (compatible; MSIE 2.5;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.5
minorver=#5

[Mozilla/2.0 (compatible; MSIE 2.5b;  Windows 3.1)]
parent=IE 2.0
platform=Win16
Win16=True
version=2.5b
minorver=#5
beta=True

[Mozilla/1.22 (compatible; MSIE 2.0; Windows 95)]
parent=IE 2.0
platform=Win95

[Mozilla/1.22 (compatible; MSIE 2.0c; Windows 95)]
parent=IE 2.0
platform=Win95
version=2.0c


[Mozilla/1.22 (compatible; MSIE 2.01; Windows NT)]
parent=IE 2.0
platform=WinNT
version=2.01
minorver=#01

[Mozilla/1.22 (compatible; MSIE 2.0d; Windows NT)]
parent=IE 2.0
platform=WinNT
version=2.0d


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x
[IE 3.0]
browser=IE
Version=3.0
majorver=3
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=TRUE
Win16=False
beta=False
AK=False
SK=False
AOL=False
Crawler=False

[Mozilla/2.0 (compatible; MSIE 3.01; Windows 3.1)]
parent=IE 3.0
platform=Win16
Win16=true
ActiveXControls=false

[Mozilla/2.0 (compatible; MSIE 3.0a; Windows 3.1)]
parent=IE 3.0
platform=Win16
Win16=true
javaapplets=false
ActiveXControls=false

[Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows 95)]
parent=IE 3.0
platform=Win95
AK=True

[Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows NT)]
parent=IE 3.0
platform=WinNT
AK=True

[Mozilla/2.0 (compatible; MSIE 3.0; AOL 3.0; Windows 95)]
parent=IE 3.0
platform=Win95
AOL=True

[Mozilla/2.0 (compatible; MSIE 3.0; SK; Windows 95)]
parent=IE 3.0
platform=Win95
SK=True

[Mozilla/2.0 (compatible; MSIE 3.0; SK; Windows NT)]
parent=IE 3.0
platform=WinNT
SK=True

[Mozilla/2.0 (compatible; MSIE 3.0; Win 32)]
parent=IE 3.0
platform=Win32

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95) Modified]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows 95;*)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0; Windows NT)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.0; Windows NT;*)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.0A; Windows 95)]
parent=IE 3.0
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.0B3; Windows 95)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B3; Windows NT)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Win32)]
parent=IE 3.0
platform=Win32
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows 95;*)]
parent=IE 3.0
platform=Win95
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows NT)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.0B; Windows NT;*)]
parent=IE 3.0
platform=WinNT
beta=True

[Mozilla/2.0 (compatible; MSIE 3.1; Windows NT)]
parent=IE 3.0
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.01*; Windows 95)]
parent=IE 3.0
version=3.01
minorver=01
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.01*; Windows NT)]
parent=IE 3.0
version=3.01
minorver=01
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.01*; Mac_PowerPC)]
parent=IE 3.0
version=3.01
minorver=01
vbscript=false
platform=MacPPC

[Mozilla/2.0 (compatible; MSIE 3.01*; Mac_68000)]
parent=IE 3.0
version=3.01
minorver=01
vbscript=false
platform=Mac68K

;;ie 3.02
[Mozilla/2.0 (compatible; MSIE 3.02; Windows 95)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win95

;;ie 3.02
[Mozilla/2.0 (compatible; MSIE 3.02; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32

[Mozilla/2.0 (compatible; MSIE 3.02; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT

[Mozilla/2.0 (compatible; MSIE 3.02; AK; Windows 95)]
parent=IE 3.0
version=3.02
minorver=02
AK=True
platform=Win95

[Mozilla/2.0 (compatible; MSIE 3.02; AK; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
AK=True
platform=WinNT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x Authenticode update
[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Windows 95)]
minorver=02
version=3.02
parent=IE 3.0
platform=Win95
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; Windows NT)]
minorver=02
version=3.02
parent=IE 3.0
platform=WinNT
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Win32)]
parent=IE 3.0
version=3.02
minorver=02
platform=Win32
AK=true
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Windows 95)]
minorver=02
version=3.02
parent=IE 3.0
platform=Win95
AK=true
AuthenticodeUpdate=a

[Mozilla/2.0 (compatible; MSIE 3.02; Update a; AK; Windows NT)]
parent=IE 3.0
version=3.02
minorver=02
platform=WinNT
AK=true
AuthenticodeUpdate=a

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 3.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/2.0 (compatible; MSIE 3*)]
parent=IE 3.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 4.x
[IE 4.0]
browser=IE
Version=4.0
majorver=4
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=TRUE
Win16=False
beta=False
AK=False
SK=False
AOL=False
crawler=False
cdf=True

;;ie 4 beta 1
[Mozilla/4.0 (compatible; MSIE 4.0b1; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
crawler=True
cdf=False

[Mozilla/4.0 (compatible; MSIE 4.0b1 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
crawler=True
cdf=False

;;ie 4 beta 2.  This is not a commitment to a beta 2, but is being provided as a placeholder if needed.
[Mozilla/4.0 (compatible; MSIE 4.0b2; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 4.0b2; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 4.0b2 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=True
crawler=True

[Mozilla/4.0 (compatible; MSIE 4.0b2 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=True
crawler=True

;;ie 4 final release
[Mozilla/4.0 (compatible; MSIE 4.0; Windows 95)]
parent=IE 4.0
platform=Win95
beta=False

[Mozilla/4.0 (compatible; MSIE 4.0; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=False

[Mozilla/4.0 (compatible; MSIE 4.0 Crawler; Windows 95)]
parent=IE 4.0
platform=Win95
beta=False
crawler=True

[Mozilla/4.0 (compatible; MSIE 4.0 Crawler; Windows NT)]
parent=IE 4.0
platform=WinNT
beta=False
crawler=True

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 4.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/4.0 (compatible; MSIE 4.*)]
parent=IE 4.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 5.0
[IE 5.0]
browser=IE
Version=5.0
majorver=5
minorver=0
frames=True
tables=True
cookies=True
backgroundsounds=True
vbscript=True
javaapplets=True
javascript=True
ActiveXControls=True
Win16=False
beta=True
AK=False
SK=False
AOL=False
Update=False

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 95*)]
parent=IE 5.0
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 98*)]
parent=IE 5.0
platform=Win98
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows NT*)]
parent=IE 5.0
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 2000*)]
parent=IE 5.0
platform=Win2000
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*)]
parent=IE 5.0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 5.5
[IE 5.5]
browser=IE
Version=5.5
majorver=5
minorver=5
frames=True
tables=True
cookies=True
backgroundsounds=True
vbscript=True
javaapplets=True
javascript=True
ActiveXControls=True
Win16=False
beta=True
AK=False
SK=False
AOL=False
Update=False

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 95*)]
parent=IE 5.5
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 98*)]
parent=IE 5.5
platform=Win98
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows NT*)]
parent=IE 5.5
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*; Windows 2000*)]
parent=IE 5.5
platform=Win2000
beta=True

[Mozilla/4.0 (compatible; MSIE 5.*)]
parent=IE 5.5


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; IE 6.0
[IE 6.0]
browser=IE
Version=6.0
majorver=#6
minorver=#0
frames=True
tables=True
cookies=True
backgroundsounds=True
vbscript=True
javaapplets=True
javascript=True
ActiveXControls=True
Win16=False
beta=True
AK=False
SK=False
AOL=False
Update=False

[Mozilla/4.0 (compatible; MSIE 6.*; Windows 95*)]
parent=IE 6.0
platform=Win95
beta=True

[Mozilla/4.0 (compatible; MSIE 6.*; Windows 98*)]
parent=IE 6.0
platform=Win98
beta=True

[Mozilla/4.0 (compatible; MSIE 6.*; Windows NT*)]
parent=IE 6.0
platform=WinNT
beta=True

[Mozilla/4.0 (compatible; MSIE 6.*)]
parent=IE 6.0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Pocket IE
[Microsoft Pocket Internet Explorer/0.6]
browser=PIE
Version=1.0
majorver=1
minorver=0
frames=FALSE
tables=TRUE
cookies=FALSE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
ActiveXControls=FALSE
Win16=False
beta=False
AK=False
SK=False
AOL=False
platform=WinCE

[Mozilla/1.1 (compatible; MSPIE 1.1; Windows CE)]
browser=PIE
Version=1.1
majorver=1
minorver=1
frames=FALSE
tables=TRUE
cookies=TRUE
backgroundsounds=TRUE
vbscript=FALSE
javascript=FALSE
javaapplets=FALSE
ActiveXControls=FALSE
Win16=False
beta=False
AK=False
SK=False
AOL=False
platform=WinCE


; Pocket PC (aka Rapier)
[Mozilla/2.0 (compatible; MSIE 3.02; Windows CE; 240x320)]
browser=Pocket IE
version=4.0
majorver=#4
minorver=#0
platform=Windows CE
width=240
height=320
cookies=TRUE
frames=TRUE
backgroundsounds=TRUE
javaapplets=FALSE
javascript=TRUE
vbscript=FALSE
tables=TRUE
activexcontrols=TRUE

; Pocket PC (aka Merlin)
[Mozilla/2.0 (compatible; MSIE 3.02; Windows CE; PPC; JavaScript; 240x320)]
browser=Pocket IE
version=4.1      
majorver=#4
minorver=#1
platform=Windows CE
width=240
height=320
cookies=TRUE
frames=TRUE
backgroundsounds=TRUE
javaapplets=FALSE
javascript=TRUE
vbscript=FALSE
tables=TRUE
activexcontrols=TRUE  

; Smartphone (aka Stinger)
[Mozilla/2.0 (compatible; MSIE 3.02; Windows CE; Smartphone; JavaScript; *)]
browser=Pocket IE
version=4.1
majorver=#4
minorver=#1
platform=Windows CE
cookies=TRUE     
frames=FALSE
backgroundsounds=TRUE   
javaapplets=FALSE
javascript=TRUE
vbscript=FALSE
tables=TRUE
activexcontrols=TRUE   


;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Netscape Browsers ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 4.x
[Netscape 4.00]
browser=Netscape
version=4.00
majorver=4
minorver=00
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=True

[Mozilla/4.0b1 (Win95; I)]
parent=Netscape 4.00
platform=Win95

[Mozilla/4.0b1 (WinNT; I)]
parent=Netscape 4.00
platform=WinNT

[Mozilla/4.0b2 (Win95; I)]
parent=Netscape 4.00
platform=Win95

[Mozilla/4.0b2 (WinNT; I)]
parent=Netscape 4.00
platform=WinNT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 4.x WILDCARD (IF ALL ABOVE FAIL)
[Mozilla/4.0*]
parent=Netscape 4.00

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Navigator 3.x
[Netscape 3.01]
browser=Netscape
version=3.01
majorver=3
minorver=01
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=False

[Mozilla/3.01Gold (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01Gold (Macintosh; U; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01Gold (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01Gold (Macintosh; U; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01Gold*(Win95; I)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01Gold*(Win95; U)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01Gold*(WinNT; I)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01Gold*(WinNT; U)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01Gold*(Win16; I)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01Gold*(Win16; U)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01*(Win95; I)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01*(Win95; U)]
parent=Netscape 3.01
platform=Win95

[Mozilla/3.01*(WinNT; I)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01*(WinNT; U)]
parent=Netscape 3.01
platform=WinNT

[Mozilla/3.01*(Win16; I)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01*(Win16; U)]
parent=Netscape 3.01
platform=Win16

[Mozilla/3.01 (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01 (Macintosh; U; 68K)]
parent=Netscape 3.01
platform=Mac68K

[Mozilla/3.01 (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01 (Macintosh; U; PPC)]
parent=Netscape 3.01
platform=MacPPC

[Mozilla/3.01b1 (Win95; I)]
parent=Netscape 3.01
platform=Win95
beta=True

[Mozilla/3.01b1 (WinNT; I)]
parent=Netscape 3.01
platform=WinNT
beta=True

[Mozilla/3.01b1 (Win16; I)]
parent=Netscape 3.01
platform=Win16
Win16=True
beta=True

[Mozilla/3.01b1 (Macintosh; I; 68K)]
parent=Netscape 3.01
platform=Mac68K
beta=True

[Mozilla/3.01b1 (Macintosh; I; PPC)]
parent=Netscape 3.01
platform=MacPPC
beta=True

[Netscape 3.0]
browser=Netscape
version=3.0
majorver=3
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
ActiveXControls=FALSE
beta=False

[Mozilla/3.0Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K


[Mozilla/3.0Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0Gold (Macintosh; U; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0Gold (Macintosh; U; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0Gold*(Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0Gold*(Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0Gold*(Win95; I)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0Gold*(Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0Gold*(Win95; U)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0Gold*(Win95; U; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0Gold*(WinNT; I)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0Gold*(WinNT; U)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0 (Macintosh; U; 68K)]
parent=Netscape 3.0
platform=Mac68K

[Mozilla/3.0 (Macintosh; U; PPC)]
parent=Netscape 3.0
platform=MacPPC

[Mozilla/3.0*(Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0*(Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0*(Win95; I)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0*(Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0*(Win95; U)]
parent=Netscape 3.0
platform=Win95

[Mozilla/3.0*(Win95; U; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True

[Mozilla/3.0*(WinNT; I)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0*(WinNT; U)]
parent=Netscape 3.0
platform=WinNT

[Mozilla/3.0b3 (Win16; I)]
parent=Netscape 3.0
platform=Win16
beta=True

[Mozilla/3.0b3 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b3 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b3Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b4 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b4 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b4 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b4Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b4Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b4Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b4Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b4Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b4Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b5 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b5 (Win16; I)]
parent=Netscape 3.0
platform=Win16
beta=True
Win16=True

[Mozilla/3.0b5 (Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5 (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5 (WinNT; U)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b5Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b5Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True


[Mozilla/3.0b5Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5a (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True

[Mozilla/3.0b5a (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5a (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b5a (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b5aGold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b5aGold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b5aGold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b5aGold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b6 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b6 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b6 (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b6Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b6Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b6Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b6a (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b6a (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b6aGold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b6aGold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7 (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b7 (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7 (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b7 (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7 (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b7 (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b7Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b7Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b7Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b7Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True

[Mozilla/3.0b7Gold (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b7a (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b7a (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Mozilla/3.0b8Gold (Macintosh; I; 68K)]
parent=Netscape 3.0
platform=Mac68K
beta=True

[Mozilla/3.0b8Gold (Macintosh; I; PPC)]
parent=Netscape 3.0
platform=MacPPC
beta=True

[Mozilla/3.0b8Gold (Win16; I)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b8Gold (Win16; U)]
parent=Netscape 3.0
platform=Win16
Win16=True
beta=True

[Mozilla/3.0b8Gold (Win95; I)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b8Gold (Win95; I; 16bit)]
parent=Netscape 3.0
platform=Win95
Win16=True
beta=True


[Mozilla/3.0b8Gold (Win95; U)]
parent=Netscape 3.0
platform=Win95
beta=True

[Mozilla/3.0b8Gold (WinNT; I)]
parent=Netscape 3.0
platform=WinNT
beta=True

[Netscape 2.0]
browser=Netscape
version=2.0
majorver=2
minorver=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=FALSE
javascript=TRUE
javaapplets=TRUE
beta=False
Win16=False

[Mozilla/2.0 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.0 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.0 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.0 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.0 (16bit; I)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.0 (16bit; U)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.0 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.0 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.0 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.0 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.0 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.0 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.0 (Windows; I; 32bit)]
parent=Netscape 2.0
platform=Windows


[Mozilla/2.01 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.01 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.01 (16bit; I)]
parent=Netscape 2.0
platform=16bit
Win16=True

[Mozilla/2.01 (16bit; U)]
parent=Netscape 2.0
platform=Win16
Win16=TRue

[Mozilla/2.01 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.01 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.01 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01Gold (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01Gold (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01Gold (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01Gold (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.01GoldA1 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.01I (16bit; I)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.01I (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.01I (WinNT; I)]
parent=Netscape 2.0
platform=WinNT


[Mozilla/2.02 (Macintosh; I; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.02 (Macintosh; I; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.02 (Macintosh; U; 68K)]
parent=Netscape 2.0
platform=Mac68K

[Mozilla/2.02 (Macintosh; U; PPC)]
parent=Netscape 2.0
platform=MacPPC

[Mozilla/2.02 (16bit; I)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.02 (16bit; U)]
parent=Netscape 2.0
platform=Win16
Win16=True

[Mozilla/2.02 (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02 (Win95; I; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.02 (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02 (Win95; U; 16bit)]
parent=Netscape 2.0
platform=Win95
Win16=True

[Mozilla/2.02 (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02 (WinNT; U)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02Gold (Win95; I)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02Gold (Win95; U)]
parent=Netscape 2.0
platform=Win95

[Mozilla/2.02Gold (WinNT; I)]
parent=Netscape 2.0
platform=WinNT

[Mozilla/2.02Gold (WinNT; U)]
parent=Netscape 2.0
platform=WinNT



;;;;;;;;;;;;;;;;;;;;;;
;;; Oracle Browser ;;;
;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Oracle 1.x
[Oracle 1.5]
browser=Power Browser
version=1.5
majorver=1.5
minover=0
frames=TRUE
tables=TRUE
cookies=TRUE
backgroundsounds=FALSE
vbscript=TRUE
javascript=TRUE
javaapplets=TRUE

[Mozilla/2.01 (Compatible) Oracle(tm) PowerBrowser(tm)/1.0a]
parent=Oracle 1.5
platform=Win95

;;;;;;;;;
; Opera ;
;;;;;;;;;

[Opera Common]
browser=Opera
version=3
majorver=3
minorver=60
platform=Win32
frames=True 
tables=True
cookies=True
backgroundsounds=True
vbscript=False
javascript=True
javaapplets=True
activexcontrols=False
AK=False
SK=False
AOL=False
beta=False
Win16=False
Crawler=False
CDF=False

[Opera 2.0]
parent=Opera Common
browser=Opera
version=2
majorver=2
minorver=0
javaapplets=False

[Mozilla/2.1 (compatible; Opera/2.12; Windows 3.1)]
parent=Opera 2.0
version=2.12
minorver=12
platform=Win16
Win16=True;

[Mozilla/2.1 (compatible; Opera/2.12; Windows*)]
parent=Opera 2.0
version=2.12
minorver=12

;  fallback
[Mozilla/2.* (compatible; Opera/2.*)]
parent=Opera 2.0
platform=unknown


[Opera 3.0]
parent=Opera Common
version=3
majorver=3
minorver=0
javaapplets=False

[Opera 3.21]
parent=Opera 3.0
version=3.21
majorver=3
minorver=21

[Mozilla/3.0 (compatible; Opera/3.0; Windows 3.1)*]
parent=Opera 3.0
platform=Win31

[Mozilla/3.0 (compatible; Opera/3.0; Windows*)*]
parent=Opera 3.0

[Mozilla/3.0 (compatible; Opera/3.0; Windows 3.1) 3.21*]
parent=Opera 3.21
platform=Win16
win16=true

[Mozilla/3.0 (compatible; Opera/3.0; Windows*) 3.21*]
parent=Opera 3.21

[Opera 3.50]
parent=Opera Common
version=3.50
majorver=3
minorver=50

[Opera 3.51]
parent=Opera Common
version=3.51
majorver=3
minorver=51

; Matches both Mozilla 3 and 4 (and others :-)

[Mozilla/?.0 (compatible; Opera/3.0; Windows 3.1) 3.50*]
parent=Opera 3.50
platform=Win16
Win16=True
javaapplets=False

[Mozilla/?.0 (compatible; Opera/3.0; Windows*) 3.50*]
parent=Opera 3.50

[Mozilla/?.0 (compatible; Opera/3.0;*) 3.50*]
parent=Opera 3.50
platform=unknown

[Mozilla/?.0 (compatible; Opera/3.0; Windows 3.1) 3.51*]
parent=Opera 3.51
platform=Win16
Win16=True
javaapplets=False

[Mozilla/?.0 (compatible; Opera/3.0; Windows*) 3.51*]
parent=Opera 3.51

[Mozilla/?.0 (compatible; Opera/3.0;*) 3.51*]
parent=Opera 3.51
platform=unknown

[Opera 3.60]
parent=Opera Common
version=3.60
majorver=3
minorver=60

[Opera unknown system]
parent=Opera 3.60
platform=unknown

[Mozilla/?.0 (Windows 3.1;US) Opera 3.60b* ]
parent=Opera 3.60
platform=Win16
win16=true
javaapplets=False
beta=true

[Mozilla/?.0 (Windows*;US) Opera 3.60b* ]
parent=Opera 3.60
beta=true

[Mozilla/?.0 (*;US) Opera 3.60b* ]
parent=Opera 3.60
platform=unknown
beta=true

[Mozilla/?.0 (Windows 3.1;US) Opera 3.60*]
parent=Opera 3.60
platform=Win16
win16=true
javaapplets=False

[Mozilla/?.0 (Windows*;US) Opera 3.60*]
parent=Opera 3.60

[Mozilla/?.0 (*;US) Opera 3.60*]
parent=Opera 3.60
platform=unknown

[Mozilla/?.0 (Windows 3.1;US) Opera 3.*]
parent=Opera 3.60
platform=Win16
win16=true
javaapplets=False

[Mozilla/?.0 (Windows*;US) Opera 3.*]
parent=Opera 3.60

[Mozilla/?.0 (*;US) Opera 3.*]
parent=Opera 3.60
platform=unknown

[Opera 4.0]
parent=Opera Common
version=4
majorver=4
minorver=0

[Mozilla/?.0 (Windows 3.1;US) Opera 4*]
parent=Opera 4.0
platform=Win16
win16=true
javaapplets=False

[Mozilla/?.0 (Windows*;US) Opera 4*]
parent=Opera 4.0

[Mozilla/?.0 (*;US) Opera 4*]
parent=Opera 4.0
platform=unknown

; Fallbacks

[Mozilla/?.0 (compatible; Opera/3.0;*)]
parent=Opera unknown system

[Mozilla/?.0 (*;US) Opera*]
parent=Opera unknown system

[*Opera*]
parent=Opera unknown system

;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Default Browser    ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;
[*]
browser=Default
Version=0.0
majorver=#0
minorver=#0
frames=False 
tables=True
cookies=False 
backgroundsounds=False
vbscript=False
javascript=False
javaapplets=False
activexcontrols=False
AK=False
SK=False
AOL=False
beta=False
Win16=False
Crawler=False
CDF=False
AuthenticodeUpdate=
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\cmp\perfmon\axperf.ini ===
;//*===================================================================
;//Microsoft Denali
;//
;//Microsoft Confidential.
;//Copyright 1997-2000 Microsoft Corporation. All Rights Reserved.
;//
;//Component: ASP - Active Server Pages
;//
;//File: axperf.ini
;//
;//	Description:
;//		drivername:  The name of the application found under the 
;//					CurrentControlSet\Services Key
;//
;//		symbolfile:	An .H file containing symbolic offset of counters.  
;//					The performance DLL also uses the offsets in this file
;//					along with the First Counter and First Help Registry values
;//					to determine the indexes of the various counters and counter
;//					objects.
;//
;//		languages:	An ID corresponding to the language subkey in the Registry.
;//
;//		offset:		A symbolic constant defined in SymbolFile.  Offsets must be consecutive
;//					even numbers beginning with zero.  These offsets determine
;//					the order in which the counters are installed in the Counters
;//					and Help values in the Registry.
;//
;//

[info]
drivername=ASP
symbolfile=axctrnm.h
trusted=

[languages]
009=English
000=Neutral

[objects]
AXSOBJ_009_NAME=Active Server Pages

[text]
AXSOBJ_009_NAME=Active Server Pages
AXSOBJ_009_HELP=The Active Server Pages Object Type handles the Active Server Pages device on your system.

DEBUGDOCREQ_009_NAME=Debugging Requests
DEBUGDOCREQ_009_HELP=Number of debugging document requests.

REQERRRUNTIME_009_NAME=Errors During Script Runtime
REQERRRUNTIME_009_HELP=Number of requests failed due to runtime errors.

REQERRPREPROC_009_NAME=Errors From ASP Preprocessor
REQERRPREPROC_009_HELP=Number of requests failed due to preprocessor errors.

REQERRCOMPILE_009_NAME=Errors From Script Compilers
REQERRCOMPILE_009_HELP=Number of requests failed due to script compilation errors.

REQERRORPERSEC_009_NAME=Errors/Sec
REQERRORPERSEC_009_HELP=The number of errors per second.

REQTOTALBYTEIN_009_NAME=Request Bytes In Total
REQTOTALBYTEIN_009_HELP=The total size, in bytes, of all requests.

REQTOTALBYTEOUT_009_NAME=Request Bytes Out Total
REQTOTALBYTEOUT_009_HELP=The total size, in bytes, of responses sent to clients. This does not include standard HTTP response headers.

REQEXECTIME_009_NAME=Request Execution Time
REQEXECTIME_009_HELP=The number of milliseconds that it took to execute the most recent request.

REQWAITTIME_009_NAME=Request Wait Time
REQWAITTIME_009_HELP=The number of milliseconds the most recent request was waiting in the queue.

REQCOMFAILED_009_NAME=Requests Disconnected
REQCOMFAILED_009_HELP=The number of requests that were disconnected due to communication failure.

REQBROWSEREXEC_009_NAME=Requests Executing
REQBROWSEREXEC_009_HELP=The number of requests currently executing.

REQFAILED_009_NAME=Requests Failed Total
REQFAILED_009_HELP=The total number of requests failed due to errors, authorization failure, and rejections.

REQNOTAUTH_009_NAME=Requests Not Authorized
REQNOTAUTH_009_HELP=Number of requests failed due to insufficient access rights.

REQNOTFOUND_009_NAME=Requests Not Found
REQNOTFOUND_009_HELP=The number of requests for files that were no found.

REQCURRENT_009_NAME=Requests Queued
REQCURRENT_009_HELP=The number of requests waiting for service from the queue.

REQREJECTED_009_NAME=Requests Rejected
REQREJECTED_009_HELP=The total number of requests not executed because there were insufficient resources to process them.

REQSUCCEEDED_009_NAME=Requests Succeeded
REQSUCCEEDED_009_HELP=The number of requests that executed successfully.

REQTIMEOUT_009_NAME=Requests Timed Out
REQTIMEOUT_009_HELP=The number of requests that timed out.

REQTOTAL_009_NAME=Requests Total
REQTOTAL_009_HELP=The total number of requests since the service was started.

REQPERSEC_009_NAME=Requests/Sec
REQPERSEC_009_HELP=The number of requests executed per second.

SCRIPTFREEENG_009_NAME=Script Engines Cached
SCRIPTFREEENG_009_HELP=The number of script engines in cache.

SESSIONLIFETIME_009_NAME=Session Duration
SESSIONLIFETIME_009_HELP=The number of milliseconds that the most recent session persisted.

SESSIONCURRENT_009_NAME=Sessions Current
SESSIONCURRENT_009_HELP=The current number of sessions being serviced.

SESSIONTIMEOUT_009_NAME=Sessions Timed Out
SESSIONTIMEOUT_009_HELP=The number of sessions timed out.

SESSIONSTOTAL_009_NAME=Sessions Total
SESSIONSTOTAL_009_HELP=The total number of sessions since the service was started.

TEMPLCACHE_009_NAME=Templates Cached
TEMPLCACHE_009_HELP=The number of templates currently cached.

TEMPLCACHEHITS_009_NAME=Template Cache Hit Rate
TEMPLCACHEHITS_009_HELP=Percent of requests found in template cache.

TEMPLFLUSHES_009_NAME=Template Notifications
TEMPLFLUSHES_009_HELP=The number of templates invalidated in the cache due to change notification.

TRANSABORTED_009_NAME=Transactions Aborted
TRANSABORTED_009_HELP=The number of transactions aborted.

TRANSCOMMIT_009_NAME=Transactions Committed
TRANSCOMMIT_009_HELP=The number of transactions committed.

TRANSPENDING_009_NAME=Transactions Pending
TRANSPENDING_009_HELP=Number of transactions in progress.

TRANSTOTAL_009_NAME=Transactions Total
TRANSTOTAL_009_HELP=The total number of transactions since the service was started.

TRANSPERSEC_009_NAME=Transactions/Sec
TRANSPERSEC_009_HELP=Transactions started per second.

MEMORYTEMPLCACHE_009_NAME=In Memory Templates Cached
MEMORYTEMPLCACHE_009_HELP=The number of compiled templates cached in memory.

MEMORYTEMPLCACHEHITS_009_NAME=In Memory Template Cache Hit Rate
MEMORYTEMPLCACHEHITS_009_HELP=Percent of requests found in cached in memory.

ENGINECACHEHITS_009_NAME=Script Engine Cache Hit Rate
ENGINECACHEHITS_009_HELP=Percent of requests found in script engine cache.

ENGINEFLUSHES_009_NAME=Engine Flush Notifications
ENGINEFLUSHES_009_HELP=The number of engines invalidated in the cache due to change notification.

AXSOBJ_000_NAME=Active Server Pages
AXSOBJ_000_HELP=The Active Server Pages Object Type handles the Active Server Pages device on your system.

DEBUGDOCREQ_000_NAME=Debugging Requests
DEBUGDOCREQ_000_HELP=Number of debugging document requests.

REQERRRUNTIME_000_NAME=Errors During Script Runtime
REQERRRUNTIME_000_HELP=Number of requests failed due to runtime errors.

REQERRPREPROC_000_NAME=Errors From ASP Preprocessor
REQERRPREPROC_000_HELP=Number of requests failed due to preprocessor errors.

REQERRCOMPILE_000_NAME=Errors From Script Compilers
REQERRCOMPILE_000_HELP=Number of requests failed due to script compilation errors.

REQERRORPERSEC_000_NAME=Errors/Sec
REQERRORPERSEC_000_HELP=The number of errors per second.

REQTOTALBYTEIN_000_NAME=Request Bytes In Total
REQTOTALBYTEIN_000_HELP=The total size, in bytes, of all requests.

REQTOTALBYTEOUT_000_NAME=Request Bytes Out Total
REQTOTALBYTEOUT_000_HELP=The total size, in bytes, of responses sent to clients. This does not include standard HTTP response headers.

REQEXECTIME_000_NAME=Request Execution Time
REQEXECTIME_000_HELP=The number of milliseconds that it took to execute the most recent request.

REQWAITTIME_000_NAME=Request Wait Time
REQWAITTIME_000_HELP=The number of milliseconds the most recent request was waiting in the queue.

REQCOMFAILED_000_NAME=Requests Disconnected
REQCOMFAILED_000_HELP=The number of requests that were disconnected due to communication failure.

REQBROWSEREXEC_000_NAME=Requests Executing
REQBROWSEREXEC_000_HELP=The number of requests currently executing.

REQFAILED_000_NAME=Requests Failed Total
REQFAILED_000_HELP=The total number of requests failed due to errors, authorization failure, and rejections.

REQNOTAUTH_000_NAME=Requests Not Authorized
REQNOTAUTH_000_HELP=Number of requests failed due to insufficient access rights.

REQNOTFOUND_000_NAME=Requests Not Found
REQNOTFOUND_000_HELP=The number of requests for files that were no found.

REQCURRENT_000_NAME=Requests Queued
REQCURRENT_000_HELP=The number of requests waiting for service from the queue.

REQREJECTED_000_NAME=Requests Rejected
REQREJECTED_000_HELP=The total number of requests not executed because there were insufficient resources to process them.

REQSUCCEEDED_000_NAME=Requests Succeeded
REQSUCCEEDED_000_HELP=The number of requests that executed successfully.

REQTIMEOUT_000_NAME=Requests Timed Out
REQTIMEOUT_000_HELP=The number of requests that timed out.

REQTOTAL_000_NAME=Requests Total
REQTOTAL_000_HELP=The total number of requests since the service was started.

REQPERSEC_000_NAME=Requests/Sec
REQPERSEC_000_HELP=The number of requests executed per second.

SCRIPTFREEENG_000_NAME=Script Engines Cached
SCRIPTFREEENG_000_HELP=The number of script engines in cache.

SESSIONLIFETIME_000_NAME=Session Duration
SESSIONLIFETIME_000_HELP=The number of milliseconds that the most recent session persisted.

SESSIONCURRENT_000_NAME=Sessions Current
SESSIONCURRENT_000_HELP=The current number of sessions being serviced.

SESSIONTIMEOUT_000_NAME=Sessions Timed Out
SESSIONTIMEOUT_000_HELP=The number of sessions timed out.

SESSIONSTOTAL_000_NAME=Sessions Total
SESSIONSTOTAL_000_HELP=The total number of sessions since the service was started.

TEMPLCACHE_000_NAME=Templates Cached
TEMPLCACHE_000_HELP=The number of templates currently cached.

TEMPLCACHEHITS_000_NAME=Template Cache Hit Rate
TEMPLCACHEHITS_000_HELP=Percent of requests found in template cache.

TEMPLFLUSHES_000_NAME=Template Notifications
TEMPLFLUSHES_000_HELP=The number of templates invalidated in the cache due to change notification.

TRANSABORTED_000_NAME=Transactions Aborted
TRANSABORTED_000_HELP=The number of transactions aborted.

TRANSCOMMIT_000_NAME=Transactions Committed
TRANSCOMMIT_000_HELP=The number of transactions committed.

TRANSPENDING_000_NAME=Transactions Pending
TRANSPENDING_000_HELP=Number of transactions in progress.

TRANSTOTAL_000_NAME=Transactions Total
TRANSTOTAL_000_HELP=The total number of transactions since the service was started.

TRANSPERSEC_000_NAME=Transactions/Sec
TRANSPERSEC_000_HELP=Transactions started per second.

MEMORYTEMPLCACHE_000_NAME=In Memory Templates Cached
MEMORYTEMPLCACHE_000_HELP=The number of compiled templates cached in memory.

MEMORYTEMPLCACHEHITS_000_NAME=In Memory Template Cache Hit Rate
MEMORYTEMPLCACHEHITS_000_HELP=Percent of requests found in cached in memory.

ENGINECACHEHITS_000_NAME=Script Engine Cache Hit Rate
ENGINECACHEHITS_000_HELP=Percent of requests found in script engine cache.

ENGINEFLUSHES_000_NAME=Engine Flush Notifications
ENGINEFLUSHES_000_HELP=The number of engines invalidated in the cache due to change notification.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\cmp\webdav\file.version.list.as.reviewed.txt ===
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_cnvt/base64.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_cnvt/cnvt.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_cnvt/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_cnvt/sources#5 - edit change 8603 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_crc/calcrc.c#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_crc/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_crc/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/_davprs.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/_davprs.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/appmain.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/body.cpp#6 - edit change 12664 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/content.cpp#7 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/content.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/custerr.cpp#7 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/custerr.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/davcom.cpp#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/davmb.cpp#10 - edit change 12693 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/ecb.cpp#9 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/emitting.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/evtlog.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/header.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/header.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/htmlmap.cpp#5 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/if.cpp#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/instdata.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/instdata.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/langtocpid.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/lockmeta.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/method.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/methutil.cpp#8 - edit change 10216 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/partial.cpp#2 - delete change 5486 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/perfctrs.cpp#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/request.cpp#8 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/response.cpp#9 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/scrptmps.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/security.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/sources#7 - integrate change 11932 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/stm.cpp#2 - delete change 5486 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/sz.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/szsrc.cpp#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/traces.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/traces.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_davprs/url.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_dbg/caldbg.c#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_dbg/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_dbg/sources#5 - edit change 8603 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_dbg/vmem.c#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_evntlog/_evntlog.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_evntlog/_evntlog.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_evntlog/evntlog.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_evntlog/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_evntlog/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_except/_except.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_except/_except.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_except/except.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_except/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_except/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_exo/exo.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_exo/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_exo/nonimpl.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_exo/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_idlethd/idlethrd.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_idlethd/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_idlethd/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_langid/langid.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_langid/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_langid/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_locks/_locks.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_locks/_locks.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_locks/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_locks/sources#5 - edit change 8603 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_locks/statetok.cpp#6 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/_pclib.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/_pclib.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/ctripc.cpp#7 - edit change 10216 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/pclibdef.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/pclibmc.mc#6 - edit change 9800 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/pclibmon.cpp#6 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/perfutil.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/perfutil.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pclib/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pipeline/_pipeline.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pipeline/_pipeline.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pipeline/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pipeline/pipeline.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_pipeline/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_rgiter/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_rgiter/rgiter.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_rgiter/sources#5 - edit change 8603 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shlkcache/_shlkcache.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shlkcache/_shlkcache.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shlkcache/initobj.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shlkcache/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shlkcache/shlkcache.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shlkcache/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/_rdwrlck.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/_shmem.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/_shmem.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/_smblckh.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/_smheap.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/_smqutil.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/_smseg.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/rdwrlock.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/smblockh.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/smheap.cpp#5 - integrate change 9457 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/smqutil.cpp#5 - edit change 10216 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/smseg.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_shmem/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_synchro/_synchro.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_synchro/_synchro.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_synchro/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_synchro/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_synchro/synchro.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_thrdpl/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_thrdpl/sources#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_thrdpl/thrdpool.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_vroot/_vroot.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_vroot/_vroot.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_vroot/cvroot.cpp#5 - edit change 8161 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_vroot/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_vroot/sources#5 - integrate change 11932 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_vroot/vrenum.cpp#6 - edit change 8161 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/_xml.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/_xml.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/chartype.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/chartype.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/sources#6 - integrate change 11932 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/var.cpp#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/xatom.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/xemit.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/xfind.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/xlock.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/xmlparser_i.c#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/xout.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/xpatch.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xml/xsearch.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/_xmllib.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/_xmllib.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/atomcache.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/base64.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/cnvt.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/sources#5 - edit change 8603 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/xemit2.cpp#5 - edit change 8400 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/xnode.cpp#6 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/_xmllib/xprs.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/davcdata/_davcdata.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/davcdata/_davcdata.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/davcdata/davcdata.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/davcdata/davcdata.rc#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/davcdata/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/davcdata/sources#5 - integrate change 11932 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/dirs#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_davfs.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_davfs.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_diriter.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_fsimpl.h#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_fslock.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_fsmeta.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_fsmvcpy.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_fsri.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_fssrch.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_fsutil.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_shlkmgr.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_sof.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/_voltype.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/crtfile.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/davfs.cpp#2 - delete change 5486 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/davprsmc.mc#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/davutil.cpp#7 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/diriter.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/entry.cpp#7 - edit change 8603 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsbase.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsetag.cpp#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsget.cpp#7 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsguid.c#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fslnkfx.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fslock.cpp#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsmeta.cpp#7 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsmvcpy.cpp#6 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsnoimpl.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsput.cpp#9 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fssearch.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/fsutil.cpp#7 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/httpext.def#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/httpext.rc#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/lockutil.cpp#6 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/makefile#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/mem.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/shlkmgr.cpp#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/sof.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/sources#7 - integrate change 11932 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/statcode.s#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/traces.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/traces.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/urlmap.cpp#9 - edit change 10216 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/httpext/voltype.cpp#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/align.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/autoptr.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/body.h#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/buffer.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/caldbg.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/calpc.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/calrc.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/crc.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/crcsz.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/cvroot.h#5 - edit change 8161 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/dav.rh#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/davimpl.h#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/davmb.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/davsc.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ecb.h#8 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ecbimpl.h#8 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/etag.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/eventlog.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/astream.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/atomcache.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/autoptr.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/buffer.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/calcom.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/cnvt.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/exmem.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/gencache.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/hdriter.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/idlethrd.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/nmspc.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/oldhack.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/refcnt.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/refhandle.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/reg.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/rgiter.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/stackbuf.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/synchro.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/sz.h#7 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/xemit.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/xml.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/xmldata.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/ex/xprs.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/except.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/exguid.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/exo.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/gencache.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/htmlmap.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/impldef.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/implstub.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/instobj.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/langid.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/langtocpid.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/mem.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/memx.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/msidxs.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/nonimpl.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/pclib.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/perfctrs.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/pipeline.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/profile.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/replpropshack.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/request.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/response.h#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/safeobj.h#5 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/scrptmps.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/security.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/sgstruct.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/shlkcache.h#6 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/singlton.h#5 - edit change 9970 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/smh.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/spinlock.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/statcode.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/statetok.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/stm.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/synchro.h#7 - edit change 10239 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/sz.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/szsrc.h#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/thrdpool.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/url.h#6 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/util.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/vrenum.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/xatom.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/xemit.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/xlock.h#5 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/xmeta.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/xprs.h#4 - integrate change 7386 (text)
//depot/private/jasbr/inetsrv/iis/svcs/cmp/webdav/inc/xsearch.h#4 - integrate change 7386 (text)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\ftp\perfmon\ftpctrs.ini ===
[info]
drivername=MSFTPSVC
symbolfile=ftpctrs.h
trusted=

[languages]
009=English
000=Neutral

[objects]
FTPD_COUNTER_OBJECT_009_NAME=FTP Service

[text]
FTPD_COUNTER_OBJECT_009_NAME=FTP Service
FTPD_COUNTER_OBJECT_009_HELP=The FTP Service object includes counters specific to the FTP Publishing Service.

FTPD_BYTES_SENT_COUNTER_009_NAME=Bytes Sent/sec
FTPD_BYTES_SENT_COUNTER_009_HELP=Bytes Sent/sec is the rate that data bytes are sent by the FTP service.

FTPD_BYTES_RECEIVED_COUNTER_009_NAME=Bytes Received/sec
FTPD_BYTES_RECEIVED_COUNTER_009_HELP=Bytes Received/sec is the rate that data bytes are received by the FTP service.

FTPD_BYTES_TOTAL_COUNTER_009_NAME=Bytes Total/sec
FTPD_BYTES_TOTAL_COUNTER_009_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the FTP service.

FTPD_FILES_SENT_COUNTER_009_NAME=Total Files Sent
FTPD_FILES_SENT_COUNTER_009_HELP=Total Files Sent is the total number of files sent by the FTP service since service startup.

FTPD_FILES_RECEIVED_COUNTER_009_NAME=Total Files Received
FTPD_FILES_RECEIVED_COUNTER_009_HELP=Total Files Received is the total number of files received by the FTP service since service startup.

FTPD_FILES_TOTAL_COUNTER_009_NAME=Total Files Transferred
FTPD_FILES_TOTAL_COUNTER_009_HELP=Total Files Transferred is the sum of Files Sent and Files Received.  This is the total number of files transferred by the FTP service since service startup.

FTPD_CURRENT_ANONYMOUS_COUNTER_009_NAME=Current Anonymous Users
FTPD_CURRENT_ANONYMOUS_COUNTER_009_HELP=Current Anonymous Users is the number of users who currently have an anonymous connection using the FTP service.

FTPD_CURRENT_NONANONYMOUS_COUNTER_009_NAME=Current NonAnonymous Users
FTPD_CURRENT_NONANONYMOUS_COUNTER_009_HELP=Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the FTP service.

FTPD_TOTAL_ANONYMOUS_COUNTER_009_NAME=Total Anonymous Users
FTPD_TOTAL_ANONYMOUS_COUNTER_009_HELP=Total Anonymous Users is the total number of users who established an anonymous connection with the FTP service (since service startup).

FTPD_TOTAL_NONANONYMOUS_COUNTER_009_NAME=Total NonAnonymous Users
FTPD_TOTAL_NONANONYMOUS_COUNTER_009_HELP=Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the FTP service (since service startup).

FTPD_MAX_ANONYMOUS_COUNTER_009_NAME=Maximum Anonymous Users
FTPD_MAX_ANONYMOUS_COUNTER_009_HELP=Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the FTP service (since service startup).

FTPD_MAX_NONANONYMOUS_COUNTER_009_NAME=Maximum NonAnonymous Users
FTPD_MAX_NONANONYMOUS_COUNTER_009_HELP=Maximum NonAnonymous Users is the maximum number of users who established concurrent non-anonymous connections using the FTP service (since service startup).

FTPD_CURRENT_CONNECTIONS_COUNTER_009_NAME=Current Connections
FTPD_CURRENT_CONNECTIONS_COUNTER_009_HELP=Current Connections is the current number of connections established with the FTP service.

FTPD_MAX_CONNECTIONS_COUNTER_009_NAME=Maximum Connections
FTPD_MAX_CONNECTIONS_COUNTER_009_HELP=Maximum Connections is the maximum number of simultaneous connections established with the FTP service.

FTPD_CONNECTION_ATTEMPTS_COUNTER_009_NAME=Total Connection Attempts (all instances)
FTPD_CONNECTION_ATTEMPTS_COUNTER_009_HELP=Total Connection Attempts is the number of connections that have been attempted using the FTP service (since service startup).  This counter is for all instances listed.

FTPD_LOGON_ATTEMPTS_COUNTER_009_NAME=Total Logon Attempts
FTPD_LOGON_ATTEMPTS_COUNTER_009_HELP=Total Logon Attempts is the number of logons that have been attempted using the FTP service (since service startup).

FTPD_SERVICE_UPTIME_COUNTER_009_NAME=FTP Service Uptime
FTPD_SERVICE_UPTIME_COUNTER_009_HELP=FTP Serive and FTP site uptime in seconds.

FTPD_COUNTER_OBJECT_000_NAME=FTP Service
FTPD_COUNTER_OBJECT_000_HELP=The FTP Service object includes counters specific to the FTP Publishing Service.

FTPD_BYTES_SENT_COUNTER_000_NAME=Bytes Sent/sec
FTPD_BYTES_SENT_COUNTER_000_HELP=Bytes Sent/sec is the rate that data bytes are sent by the FTP service.

FTPD_BYTES_RECEIVED_COUNTER_000_NAME=Bytes Received/sec
FTPD_BYTES_RECEIVED_COUNTER_000_HELP=Bytes Received/sec is the rate that data bytes are received by the FTP service.

FTPD_BYTES_TOTAL_COUNTER_000_NAME=Bytes Total/sec
FTPD_BYTES_TOTAL_COUNTER_000_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the FTP service.

FTPD_FILES_SENT_COUNTER_000_NAME=Total Files Sent
FTPD_FILES_SENT_COUNTER_000_HELP=Total Files Sent is the total number of files sent by the FTP service since service startup.

FTPD_FILES_RECEIVED_COUNTER_000_NAME=Total Files Received
FTPD_FILES_RECEIVED_COUNTER_000_HELP=Total Files Received is the total number of files received by the FTP service since service startup.

FTPD_FILES_TOTAL_COUNTER_000_NAME=Total Files Transferred
FTPD_FILES_TOTAL_COUNTER_000_HELP=Total Files Transferred is the sum of Files Sent and Files Received.  This is the total number of files transferred by the FTP service since service startup.

FTPD_CURRENT_ANONYMOUS_COUNTER_000_NAME=Current Anonymous Users
FTPD_CURRENT_ANONYMOUS_COUNTER_000_HELP=Current Anonymous Users is the number of users who currently have an anonymous connection using the FTP service.

FTPD_CURRENT_NONANONYMOUS_COUNTER_000_NAME=Current NonAnonymous Users
FTPD_CURRENT_NONANONYMOUS_COUNTER_000_HELP=Current NonAnonymous Users is the number of users who currently have a non-anonymous connection using the FTP service.

FTPD_TOTAL_ANONYMOUS_COUNTER_000_NAME=Total Anonymous Users
FTPD_TOTAL_ANONYMOUS_COUNTER_000_HELP=Total Anonymous Users is the total number of users who established an anonymous connection with the FTP service (since service startup).

FTPD_TOTAL_NONANONYMOUS_COUNTER_000_NAME=Total NonAnonymous Users
FTPD_TOTAL_NONANONYMOUS_COUNTER_000_HELP=Total NonAnonymous Users is the total number of users who established a non-anonymous connection with the FTP service (since service startup).

FTPD_MAX_ANONYMOUS_COUNTER_000_NAME=Maximum Anonymous Users
FTPD_MAX_ANONYMOUS_COUNTER_000_HELP=Maximum Anonymous Users is the maximum number of users who established concurrent anonymous connections using the FTP service (since service startup).

FTPD_MAX_NONANONYMOUS_COUNTER_000_NAME=Maximum NonAnonymous Users
FTPD_MAX_NONANONYMOUS_COUNTER_000_HELP=Maximum NonAnonymous Users is the maximum number of users who established concurrent non-anonymous connections using the FTP service (since service startup).

FTPD_CURRENT_CONNECTIONS_COUNTER_000_NAME=Current Connections
FTPD_CURRENT_CONNECTIONS_COUNTER_000_HELP=Current Connections is the current number of connections established with the FTP service.

FTPD_MAX_CONNECTIONS_COUNTER_000_NAME=Maximum Connections
FTPD_MAX_CONNECTIONS_COUNTER_000_HELP=Maximum Connections is the maximum number of simultaneous connections established with the FTP service.

FTPD_CONNECTION_ATTEMPTS_COUNTER_000_NAME=Total Connection Attempts (all instances)
FTPD_CONNECTION_ATTEMPTS_COUNTER_000_HELP=Total Connection Attempts is the number of connections that have been attempted using the FTP service (since service startup).  This counter is for all instances listed.

FTPD_LOGON_ATTEMPTS_COUNTER_000_NAME=Total Logon Attempts
FTPD_LOGON_ATTEMPTS_COUNTER_000_HELP=Total Logon Attempts is the number of logons that have been attempted using the FTP service (since service startup).

FTPD_SERVICE_UPTIME_COUNTER_000_NAME=FTP Service Uptime
FTPD_SERVICE_UPTIME_COUNTER_000_HELP=FTP Serive and FTP site uptime in seconds.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\ftp\perfmon\ftpctrs.txt ===
I.  PURPOSE

      This document details a simple test plan for the Windows NT FTP Server
      Performance Counters.


 II.  OVERVIEW

      The Windows NT FTP Server Performance Counters may be installed from
      \\KAYAK\RESKIT\FTPCTRS.  INSTALL.BAT will install the counters, and
      REMOVE.BAT will remove the counters.  These .BAT files *MUST* be run
      from the FTPCTRS directory.

      Running INSTALL.BAT will install the performance counters.  These
      counters are used by PERFMON.EXE to monitor the activity of the
      Windows NT FTP Server.  The following attributes may be monitored:

           0.  Bytes Sent/sec

               This is the rate that data bytes are sent by the FTP
               Server.

           1.  Bytes Received/sec

               This is the rate that data bytes are received by the
               FTP Server.

           2.  Bytes Total/sec

               This is sum of Bytes Sent/sec and Bytes Received/sec.
               This is the total rate of bytes transferred by the
               FTP Server.

           3.  Files Sent

               This is the total number of files sent by the FTP
               Server.

           4.  Files Received

               This is the total number of files received by the
               FTP Server.

           5.  Files Total

               This is sum of Files Sent and Files Received.  This
               is the total number of files transferred by the FTP
               Server.

           6.  Current Anonymous Users

               This is number of anonymous users currently connected
               to the FTP Server.

           7.  Current NonAnonymous Users

               This is number of non-anonymous users currently
               connected to the FTP Server.

           8.  Total Anonymous Users

               This is total number of anonymous users that have
               ever connected to the FTP Server.

           9.  Total NonAnonymous Users

               This is total number of non-anonymous users that have
               ever connected to the FTP Server.

          10.  Maximum Anonymous Users

               This is maximum number of anonymous users
               simultaneously connected to the FTP Server.

          11.  Maximum NonAnonymous Users

               This is maximum number of non-anonymous users
               simultaneously connected to the FTP Server.

          12.  Current Connections

               This is the current number of connections to the FTP
               Server.

          13.  Maximum Connections

               This is maximum number of simultaneous connections to
               the FTP Server.

          14.  Connection Attempts

               This is the number of connection attempts that have
               been made to the FTP Server.

          15.  Logon Attempts

               This is the number of logon attempts that have been
               made to the FTP Server.

          16.  Service Uptime

               Number in seconds since service was started. Accounted 
               for FTP sites also. Pausing is not accounted.


III.  TESTING

      These tests assume the test machine has TCP/IP installed, but
      does *NOT* yet have the FTP Server installed.  Also, LODCTR.EXE,
      UNLODCTR.EXE, and REGINI.EXE must be on the path.

      These tests also assume the user knows how to run PerfMon.


           0.  Run INSTALL.BAT from some directory other than FTPCTRS
               (i.e. cd to K:\FOO then execute \FTPCTRS\INSTALL).  This
               should fail with an appropriate error message (must be
               run from FTPCTRS directory).

           1.  Do the same thing with REMOVE.BAT.  This should also fail.

           2.  From the FTPCTRS directory, run REMOVE.BAT.  This should
               fail.

           3.  From the FTPCTRS directory, run INSTALL.BAT.  This should
               fail with an appropriate error message (FTP Server not
               installed).

               NOTE:  This will succeed on an IDW installation.

           4.  Run NCPA and install the FTP Server.  Reboot.

           5.  From the FTPCTRS directory, run REMOVE.BAT.  This should
               fail.

           6.  From the FTPCTRS directory, run INSTALL.BAT.  This should
               succeed.

           8.  Run PerfMon & verify that the counters are working.
               Select the FTP Server object and the default counter.
               Then connect to the target machine via the FTP client and
               verify the Bytes Total/sec counter is responding.

               Also, verify that each of the counters listed in section II
               are visible.

           7.  Run INSTALL.BAT again.  This should also succeed.

           9.  Run PerfMon again to verify nothing messed up.

          10.  Run REMOVE.BAT.  This should succeed.

          11.  Run PerfMon to verify the FTP Server object is no longer
               displayed in the "objects" combo box.

          12.  Run INSTALL.BAT again.  This should succeed.

          13.  Run PerfMon to verify the counters were reinstalled.

          14.  While PerfMon is running, stop the FTP Server with
               either NET.EXE or the Services applet.  PerfMon should
               continue chugging along with no FTP activity displayed.

               There will be no other indication in PerfMon that the
               service has been stopped.

          15.  While PerfMon is still running, restart the service.
               Verify that PerfMon is now displaying service activity
               by connecting to the server with the FTP client.

          16.  While PerfMon is running, run REMOVE.BAT.  This should
               succeed.

               PerfMon will still allow you to add/remove FTP Server
               counters until you exit the PerfMon app.

          17.  Exit & restart PerfMon.  The FTP Server counters should
               not be available.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\ftp\server\history.txt ===
This file contains the version history of the Windows NT FTP Server Service.


Date        Details
--------    -------

03/08/93    Starting coding.

07/30/93    Initial release, part of Windows NT Product 1.0.

09/10/93    Fixed problem with aggressive client firewalls refusing
            connections from sockets bound to nonreserved ports.
            QFE Bug #3633.

09/13/94    Added integrated path canonicalization code so that I could
            remove the "lock/chdir/fileopen/unlock" stuff that was such
            a huge bottleneck on MP machines. For Power PC release.

12/06/94    If user doesn't specify a domain name, pass the local machine's
            primary domain into LsaLogonUser. Previous versions would pass
            in an empty string, which would cause LSA to search for known
            accounts, which is NOT what we want it to do.

08/15/95    Initial Beta for Gibraltar High-Performance FTP server (MuraliK)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\ftp\server\ftpsvc.ini ===
//
//  This is the default hive definition for the FTP Server
//
//   Author: MuraliK
//   Created: 21-March-1995
//


\registry\machine
  SYSTEM
    CurrentControlSet
        Services
            FtpSvc
                DependOnService = REG_MULTI_SZ  TCPIP
                DisplayName     = REG_SZ     Microsoft FTP Server( MuraliK 95)
                ErrorControl   = REG_DWORD   0x1
                ImagePath      = REG_EXPAND_SZ %SystemRoot%\System32\inetsvcs.exe
                ObjectName     = REG_SZ        LocalSystem
                Start          = REG_DWORD     0x3
                Type           = REG_DWORD     0x20

                //
                //  Gopher parameters are kept under the parameters key
                //

                Parameters

                    //
                    //  Port to run the service on
                    //

                    Port                = REG_DWORD 0x15

                    HomeDirectory       = REG_SZ c:\internet

                    Virtual Roots
                        /               = REG_SZ c:\internet
                        /gophroot       = REG_SZ c:\internet\gophroot

                    //
                    //   Security related parameters
                    //
                    EnableDataConnTo3rdIP= REG_DWORD 0
                    AllowAnonymous       = REG_DWORD 1
                    LogAnonymous         = REG_DWORD 0
                    LogNonAnonymous      = REG_DWORD 0
                    AnonymousUserName    = REG_SZ   Internet


                    //
                    //  Specifies when to timeout connection (in seconds)
                    //

                    ConnectionTimeout    = REG_DWORD  900

                    //
                    //  Maximum number of simultaneous connections allowed
                    //

                    MaxConnections        = REG_DWORD 0x00000014

                    //
                    //  Access Masks
                    //
                    ReadAccessMask        = REG_DWORD  0x4
                    WriteAccessMask       = REG_DWORD  0x0

                    //
                    //  Log Configuration for Gopher Service
                    //  Size is set to 4 MegaBytes
                    //

                    LogType               = REG_DWORD  1
                    LogFileDirectory      = REG_EXPAND_SZ %SystemRoot%\System32
                    LogFileTruncateSize   = REG_DWORD  4000000000
                    LogFilePeriod         = REG_DWORD  1
                    LogSqlDataSource      = REG_SZ     TSLOG
                    LogSqlTableName       = REG_SZ     gophlog
                    LogSqlUserName        = REG_SZ     InternetAdmin
                    LogSqlPassword        = REG_SZ     sqllog

                    //
                    //  For tracing debug output
                    //

                    DebugFlags            = REG_DWORD 0x80000000

                    //
                    //  Path name specifies location of the SNMP MIB DLL
                    //
                    Pathname            = REG_EXPAND_SZ %systemroot%\system32
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\ftp\server\reply.txt ===
These are the replys that may be sent from the FTP Server to an FTP Client.

Text enclosed in square brackets (such as [(guest access)]) may optionally
appear in the output stream.

Text enclosed within percent signs (such as %user_name%) are placeholders for
run-time dependent values (such as keithmo).  These values are:

        %anonymous_id%

                This is the identification sent as a "password"
                when an anonymous user logs in.

        %b1,b2,b3,b4,p1,p2%

                This is part of the response from a request to
                enter passive mode.  b1-b4 specify the local IP
                address for the passive data socket.  p1-p2
                specify the local port for the passive data
                socket.  All values are in network byte order.

        %command_name%

                The name of a command sent by the FTP client.

        %command_text%

                The entire text of a command sent by the FTP
                client.

        %connection_timeout%

                The idle-user timeout value (in seconds).

        %current_directory_name%

                A user's current directory.

        %custom_exit_message%

                The custom single-line exit message to send
                when a client QUITs.

        %custom_greeting_line_x%

                The custom multi-line greeting message to send
                when a new client connects.

        %directory_name%

                A directory name.

        %file_name%

                A file name.

        %form%

                A transfer form type.  This will always be
                "Nonprint".

        %host_name%

                The name of the local FTP Server host.

        %long_directory_listing%

                A long format directory listing.

        %major_ftp_server_version%

                The major FTP Server version number.

        %minor_ftp_server_version%

                The minor FTP Server version number.

        %ftp_server_version%

                %major_ftp_server_version%.%minor_ftp_server_version%

        %major_windows_version%

                The major Windows NT version number.

        %minor_windows_version%

                The minor Windows NT version number.

        %mode_type%

                A transfer mode type.  This will always be
                "STREAM".

        %struct%

                A transfer structure type.  This will always be
                "File".

        %type%

                A transfer type.  This will be either "ASCII" or
                "BINARY".

        %users_host_name%

                The connected FTP client's host name.

        %users_ip_address%

                The connected FTP client's IP address (in dot
                notation).

        %user_name%

                The connected users's name.

        %win32_error_text%

                A string of text from WINERROR.MC that describes
                a specific Win32 error condition (such as "Access
                is denied.").


*************************************
***                               ***
***  POSITIVE PRELIMINARY REPLIES ***
***                               ***
*************************************

125 Data connection already open; transfer starting.

        Indicates that a passive mode transfer has been initiated.

150 Opening %mode_type% mode data connection for %file_name%.

        Indicates that the server is opening a new data
        connection for the transfer of %file_name%.  Whenever a
        directory listing is requested, this message is sent with
        %file_name% set to "file list".

************************************
***                              ***
***  POSITIVE COMPLETION REPLIES ***
***                              ***
************************************

200 NOOP command successful.

        The NOOP command completed.

200 PORT command successful.

        The NOOP command completed.

200 Type set to %type%.

        The transfer type was set.

200 STRU %struct% ok.

        The transfer structure type was set.

200 MODE %mode_type% ok.

        The transfer mode was set.

200 ALLO command successful.

        The ALLO command completed.

202 ACCT command not implemented.

        The ACCT command is superfluous at this site.

202 SMNT command not implemented.

        The SMNT command is superfluous at this site.

202 SITE command not implemented.

        The SITE command is superfluous at this site.

211-%host_name% Windows NT FTP Server status:
    Version %major_ftp_server_version%.%minor_ftp_server_version%
    Connected to %users_host_name or %users_ip_address%
    Logged in as %user_name%
    TYPE: %type%, FORM: %form%, STRUcture: %struct%, transfer MODE: %mode_type%
    {No data connection or Data connection established}
211 End of status.

        This multi-line reply is sent whenever a STAT command is
        received with no arguments.  It indicates the general
        status of the FTP server and the current connection.

213-status of %file_or_directory_name%
%long_directory_listing%
213 End of Status.

        This multi-line reply is sent whenever a STAT command is
        received with an argument.  This functions similarly to
        DIR {arg}, except that the directory listing is sent over
        the command socket; a new data transfer socket is not
        created for the listing.

214-The following commands are recognized (* =>'s unimplemented).
   USER    PASS    ACCT    CWD     XCWD    CDUP    XCUP    SMNT
   QUIT    REIN    PORT    PASV    TYPE    STRU    MODE    RETR
   STOR    STOU    APPE    ALLO    REST*   RNFR    RNTO    ABOR*
   DELE    RMD     XRMD    MKD     XMKD    PWD     XPWD    LIST
   NLST    SITE    SYST    STAT    HELP    NOOP
214 HELP command successful.

        This multi-line reply is sent whenever a HELP command is
        received with no arguments.  It lists all available
        FTP Server commands.

214 Syntax: USER <sp> username

        This reply is sent whenever a HELP USER command is
        received.

214 Syntax: PASS <sp> password

        This reply is sent whenever a HELP PASS command is
        received.

214 Syntax: ACCT (specify account)

        This reply is sent whenever a HELP ACCT command is
        received.

214 Syntax: CWD [ <sp> directory-name ]

        This reply is sent whenever a HELP CWD command is
        received.

214 Syntax: XCWD [ <sp> directory-name ]

        This reply is sent whenever a HELP XCWD command is
        received.

214 Syntax: CDUP change to parent directory

        This reply is sent whenever a HELP CDUP command is
        received.

214 Syntax: XCUP change to parent directory

        This reply is sent whenever a HELP XCUP command is
        received.

214 Syntax: SMNT <sp> pathname

        This reply is sent whenever a HELP SMNT command is
        received.

214 Syntax: QUIT (terminate service)

        This reply is sent whenever a HELP QUIT command is
        received.

214 Syntax: REIN (reinitialize server state)

        This reply is sent whenever a HELP REIN command is
        received.

214 Syntax: PORT <sp> b0,b1,b2,b3,b4,b5

        This reply is sent whenever a HELP PORT command is
        received.

214 Syntax: PASV (set server in passive mode)

        This reply is sent whenever a HELP PASV command is
        received.

214 Syntax: TYPE <sp> [ A | E | I | L ]

        This reply is sent whenever a HELP TYPE command is
        received.

214 Syntax: STRU (specify file structure)

        This reply is sent whenever a HELP STRU command is
        received.

214 Syntax: MODE (specify transfer mode)

        This reply is sent whenever a HELP MODE command is
        received.

214 Syntax: RETR <sp> file-name

        This reply is sent whenever a HELP RETR command is
        received.

214 Syntax: STOR <sp> file-name

        This reply is sent whenever a HELP STOR command is received.


214 Syntax: STOU (store unique file)

        This reply is sent whenever a HELP STOU command is
        received.

214 Syntax: APPE <sp> file-name

        This reply is sent whenever a HELP APPE command is
        received.

214 Syntax: ALLO (allocate storage vacuously)

        This reply is sent whenever a HELP ALLO command is
        received.

214 Syntax: REST <sp> marker

        This reply is sent whenever a HELP REST command is
        received.

214 Syntax: RNFR <sp> file-name

        This reply is sent whenever a HELP RNFR command is
        received.

214 Syntax: RNTO <sp> file-name

        This reply is sent whenever a HELP RNTO command is
        received.

214 Syntax: ABOR (abort operation)

        This reply is sent whenever a HELP ABOR command is
        received.

214 Syntax: DELE <sp> file-name

        This reply is sent whenever a HELP DELE command is
        received.

214 Syntax: RMD <sp> path-name

        This reply is sent whenever a HELP RMD command is
        received.

214 Syntax: XRMD <sp> path-name

        This reply is sent whenever a HELP XRMD command is
        received.

214 Syntax: MKD <sp> path-name

        This reply is sent whenever a HELP MKD command is
        received.

214 Syntax: XMKD <sp> path-name

        This reply is sent whenever a HELP XMKD command is
        received.

214 Syntax: PWD (return current directory)

        This reply is sent whenever a HELP PWD command is
        received.

214 Syntax: XPWD (return current directory)

        This reply is sent whenever a HELP XPWD command is
        received.

214 Syntax: LIST [ <sp> path-name ]

        This reply is sent whenever a HELP LIST command is
        received.

214 Syntax: NLST [ <sp> path-name ]

        This reply is sent whenever a HELP NLST command is
        received.

214 Syntax: SITE (site-specific commands)

        This reply is sent whenever a HELP SITE command is
        received.

214 Syntax: SYST (get operating system type)

        This reply is sent whenever a HELP SYST command is
        received.

214 Syntax: STAT (get server status)

        This reply is sent whenever a HELP STAT command is
        received.

214 Syntax: HELP [ <sp> <string> ]

        This reply is sent whenever a HELP HELP command is
        received.

214 Syntax: NOOP

        This reply is sent whenever a HELP NOOP command is
        received.

214-The following SITE commands are recognized (* =>'s unimplemented).
   DIRSTYLE    CKM         HELP
214 HELP command successful.

        This multi-line reply is sent whenever a SITE HELP command is
        received with no arguments.  It lists all available
        site-specific FTP Server commands.

214 Syntax: SITE DIRSTYLE (toggle directory format)

        This reply is sent whenever a SITE HELP DIRSTYLE command
        is received.

214 Syntax: SITE CKM (toggle directory comments)

        This reply is sent whenever a SITE HELP CKM command
        is received.

214 Syntax: SITE HELP [ <sp> <string>]

        This reply is sent whenever a SITE HELP HELP command
        is received.

215 Windows_NT version %major_windows_version%.%minor_windows_version%

        This is sent as a response to the SYST command.

220-%host_name% Windows NT FTP Server (%ftp_server_version%)
 %custom_greeting_line_1%
 %custom_greeting_line_2%
            .
            .
            .
 %custom_greeting_line_N%
220 Service ready for new user.

        This multi-line reply is sent whenever a new FTP client
        connects to the server.  The custom greeting, if any,
        comes from the registry.

220 Service ready for new user.

        This single-line reply is sent after a connection has
        been reinitialized via the REIN command.

221 Goodbye.

        This is the default exit message sent in response to a
        QUIT command.

221 %custom_exit_message%

        This is the custom exit message sent in response to a
        QUIT command.

226 Transfer complete.

        This is sent after a successful data transfer.

227 Entering passive mode %b1,b2,b3,b4,p1,p2%

        This is sent after a PASV command has successfully
        created a new data socket.

230 Anonymous user logged in as %anonymous_id% [(guest access)].

        This indicates that an anonymous logon has succeeded.
        (guest access) will be displayed if the user has guest
        access.

230 User %user_name% logged in [(guest access)].

        This indicates that a non-anonymous logon has succeeded.
        (guest access) will be displayed if the user has guest
        access.

250 CWD command successful.

        Indicates the CWD command has completed.

250 RNTO command successful.

        Indicates the RNTO command has completed.

250 DELE command successful.

        Indicates the DELE command has completed.

250 RMD command successful.

        Indicates the RMD command has completed.

250 MKD command successful.

        Indicates the MKD command has completed.

257 "%current_directory_name%" is current directory.

        This is sent in response to a PWD command.


**************************************
***                                ***
***  POSITIVE INTERMEDIATE REPLIES ***
***                                ***
**************************************

331 Anonymous access allowed, send identity (e-mail name) as password.

        This indicates that a USER command with a user-name of
        "Anonymous" has been received and accepted.  This prompts
        the user to enter an identity (e-mail name) instead of
        a password.

331 Password required for %user_name%.

        This indicates that a USER command with a user-name other
        than "Anonymous" has been received and accepted.  This
        prompts the user to enter a password.

350 File exists, ready for destination name.

        Indicates that a RNFR command has completed.


**********************************************
***                                        ***
***  TRANSIENT NEGATIVE COMPLETION REPLIES ***
***                                        ***
**********************************************

421 Service not available, closing control connection.

        Indicates that the FTP Server is unable to accept new
        connections at this time.

421 Terminating connection.

        This is sent after a user has been forcibly disconnected.

421 Timeout (%connection_timeout% seconds): closing control connection.

        Indicates that the idle-user timeout period has expired
        for this connection.

425 Can't open data connection.

        Indicates that a new data connection could not be
        established to the FTP client.

426 Connection closed; transfer aborted.

        Indicates that an error occurred during a data transfer
        and the transfer was aborted.


**********************************************
***                                        ***
***  PERMANENT NEGATIVE COMPLETION REPLIES ***
***                                        ***
**********************************************

500 %command_text%: comamnd not understood.

        Either an unknown command was received by the FTP Server
        or the command had invalid parameters.

501 Unknown command %command_name%.

        A HELP command was received with a parameter specifying
        an unknown command.

502 %command_text% command not implemented.

        The specified command is not implemented by this
        FTP Server.

503 Bad sequence of commands.

        A RNTO command was received before a RNFR command.  A
        RNFR command must always preceed a RNTO command.

503 Login with USER first.

        A PASS command was received before a corresponding USER
        command.

504 Form must be N or T.

        An invalid form type was received in the TYPE command.

504 Type E not implemented.

        The E type was specified in a TYPE command.

504 Byte size must be 8.

        A byte size other than 8 was specified in a TYPE command.

504 Unimplemented STRU type.

        A structure type other than File was received in a STRU
        command.

504 Unimplemented MODE type.

        A mode type other than Stream was received in a MODE
        command.

530 Please login with USER and PASS.

        An unacceptable command was received before the user
        logged in.

530 User %user_name% cannot log in.

        The specified user cannot log in at this time.

530 User %user_name% cannot log in, home directory inaccessible.

        The specified user cannot log in because their home
        directory is inaccessible.

530 User %user_name% cannot log in, license quota exceeded.

        The specified user cannot log in due to license quota
        restrictions.

530 User %user_name% cannot log in, guest access not allowed.

        The specified user cannot log in because they provided a
        "guest" account, and guest access has been disabled.

550 %directory_name%: No such file or directory.

        The specified directory cannot be found.

550 %directory_name%: %win32_error_text%

        The specified directory cannot be accessed.

550 %file_name%: No such file or directory.

        The specified file cannot be found.

550 %file_name%: %win32_error_text%

        The specified file cannot be accessed.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\ftp\server\registry.txt ===
This file details the registry structure & specific values used by the
FTP Server service.


All FTP Server parameters "live" under the following key:

    HKEY_LOCAL_MACHINE
        System
            CurrentControlSet
                Services
                    FtpSvc
                        Parameters

The following values may exist under the Parameters key:

    Name:       AllowAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then anonymous logons are allowed.
                Otherwise (value IS zero) anonymous logons are not allowed.
    Default:    1 (allow anonymous logons)

    Name:       AllowGuestAccess
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then guest-access logons are
                allowed.  Otherwise (value IS zero) guest-access logons
                are not allowed.  (Note that guest-access has nothing to
                do with the "Guest" account; guest-access is granted if
                the local machine's user rights policy states that
                "Everyone" may access the machine from the network.  Any
                user that tries to logon with an unknown account will be
                granted guest-access.)
    Default:    1 (allow guest-access)

    Name:       AnnotateDirectories
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then everytime a user changes
                directories (sends the server a CWD command) an attempt is
                made to open a file called "~FTPSVC~.CKM" in the new
                directory.  If this file is found, its contents are sent
                to the user as part of the successful reply to the CWD
                command.  This may be used to attach "annotations" to
                specific directories.

                This value is used as a default for new users.  Users can
                toggle their own personal "annotate directories" flag with
                the site-specific CKM command (SITE CKM).
    Default:    0 (don't annotate directories)

    Name:       AnonymousOnly
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then only anonymous logons are
                allowed.  Otherwise (value IS zero) then non-anonymous
                logons are allowed as well.
    Default:    0 (non-anonymous logons allowed).

    Name:       AnonymousUserName
    Type:       REG_SZ
    Meaning:    Anonymous logon alias.  When a user attempts an anonymous
                logon, the username specified ("anonymous") is mapped to
                this registry value for the purposes off authentication
                and impersonation.  The password for this account is stored
                in an LSA secret object named "FTPD_ANONYMOUS_DATA".
    Default:    "Guest"

    Name:       ConnectionTimeout
    Type:       REG_DWORD
    Meaning:    The time (in seconds) to allow clients to remain idle before
                forcibly disconnecting them.  This prevents idle clients
                from consuming server resources indefinitely.

                This value may be set to zero if timeouts are not to be
                enforced.  If set to zero, idle clients *can* remain connected
                indefinitely.
    Default:    600 (10 minutes)

    Name:       DebugFlags
    Type:       REG_DWORD
    Meaning:    This value is used only by the debugging (checked) builds of
                the FTP Server.  It controls the output of various debugging
                information.  This value is unused by retail builds.
    Default:    0 (no debug output)

    Name:       DefaultLogonDomain
    Type:       REG_SZ
    Meaning:    The domain name to use when validating user logon requests
                if the user did not specify a domain.  If this value does
                not exist in the registry, then the FTP Server will use the
                local machine's primary logon domain instead.
    Default:    NULL (use the local machine's primary logon domain)

    Name:       DisableExtendedCharFilenames
    Type:       REG_DWORD
    Meaning:    RFC 0959 says only 7bi ASCII characters can be used to specify
                file names in FTP commands. DeFacto, 8bit chars are being used
                to specify extended char names and DBCS encoding. If this value
                does not exists, or if it exists but set to 0, extended chars
                are being accepted. If the value is 1, extended char file names
                are rejected.
    Default:    Not created. (extended chars enabled)

    Name:       ExitMessage
    Type:       REG_SZ
    Meaning:    This is the signoff message sent to a client upon receipt
                of a QUIT command.
    Default:    "Goodbye."

    Name:       GreetingMessage
    Type:       REG_MULTI_SZ
    Meaning:    This message (if it exists in the registry) is sent to new
                clients after their account has been validated.  In accordance
                with "de facto" Internet behaviour, if a client logs on as
                anonymous and specifies an identity starting with '-' (minus),
                then this greeting message is NOT sent.
    Default:    NULL (no special greeting)

    Name:       BannerMessage
    Type:       REG_MULTI_SZ
    Meaning:    This message (if it exists in the registry) is sent to new
                clients when they connect, right after the service name.
    Default:    NULL (no special greeting)

    Name:       HomeDirectory
    Type:       REG_EXPAND_SZ
    Meaning:    This is the initial "home" directory for new clients.  After
                a new client is validated, an attempt is made to CHDIR to
                this directory.  If this directory is inaccessible, the client
                is refused FTP services.  If the CHDIR is successful, then
                an attempt is made to CHDIR to a directory with the same name
                as the client's username.  If this fails, an attempt is made
                to CHDIR to a directory called "Default".  If this fails,
                the current directory is left at "home".

                If a user finds that the home directory is inaccessible,
                then an event is written to the event log indiciating such.
    Default:    "C:\"

    Name:       ListenBacklog
    Type:       REG_DWORD
    Meaning:    This is the "backlog" parameter passed into the listen()
                API.  This sets the maximum number of unaccepted connections
                that can be queued against the socket that listens on the
                main FTP port.
    Default:    5

    Name:       LogAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all successful anonymous
                logons are logged in the system event log.  Otherwise
                (value IS zero) successful anonymous logons are not logged.
    Default:    0 (don't log successful anonymous logons)

    Name:       LogFileAccess
    Type:       REG_DWORD
    Meaning:    This value controls the logging of file accesses.  This value
                can be one of the following:

                        0 = Don't log file accesses
                        1 = Log file accesses to FTPSVC.LOG
                        2 = Log file accesses to FTyymmdd.LOG, where yy
                                is the year, mm is the month, and dd is
                                the day.  A new log file will be opened
                                every day as necessary.
    Default:    0 (don't log file accesses)

    Name:       LogFileDirectory
    Type:       REG_SZ
    Meaning:    This value specifies the target directory for log files.
                This value is only used if LogFileAccess is !0.
    Default:    %SystemRoot%\System32

    Name:       LogNonAnonymous
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all successful nonanonymous
                logons are logged in the system event log.  Otherwise
                (value IS zero) successful nonanonymous logons are not logged.
    Default:    0 (don't log successful nonanonymous logons)

    Name:       LowercaseFiles
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then all file names returned by
                LIST and NLST commands for non-case-preserving filesystems
                will be mapped to lowercase.  If this value is zero, then
                all file names will be unaltered.
    Default:    0 (don't map filenames to lowercase)

    Name:       MaxClientsMessage
    Type:       REG_SZ
    Meaning:    This message (if it exists) is sent to a client if the maximum
                number of clients has been reached/exceeded.  This indicates
                that the server is currently servicing the maximum number of
                simultaneous clients and is refusing addtional clients.
    Default:    "Maximum clients reached, service unavailable."

    Name:       MaxConnections
    Type:       REG_DWORD
    Meaning:    This is the maximum number of simultaneous clients the server
                will service.

                This value may be set to zero if there is to be no limit on
                simultaneous clients.
    Default:    20

    Name:       MsdosDirOutput
    Type:       REG_DWORD
    Meaning:    If this value is non-zero, then the output of the LIST
                command (usually sent as a result of a DIR from the client)
                will look like the output of the MS-DOS DIR command.
                Otherwise (value IS zero) then the output of the LIST command
                will look like the output of the UNIX LS command.

                This value also controls "slash flipping" in the path
                sent by the PWD command.  If this value is non-zero, the path
                will contain backward "\" slashes.  If this value IS zero, the
                path will contain forward "/" slashes.
    Default:    1 (directory listings like MS-DOS)

    Name:       ReadAccessMask
    Type:       REG_DWORD
    Meaning:    This value is a bitmask and controls the "readability" of
                the various disk volumes in the system.  Drive A: corresponds
                to bit zero, drive B: is bit 1, drive C: is bit 2, etc.  A
                user may only read from a specific volume if the corresponding
                bit is set.
    Default:    0 (all read access denied)

    Name:       WriteAccessMask
    Type:       REG_DWORD
    Meaning:    This value is a bitmask and controls the "writability" of
                the various disk volumes in the system.  Drive A: corresponds
                to bit zero, drive B: is bit 1, drive C: is bit 2, etc.  A
                user may only write to a specific volume if the corresponding
                bit is set.
    Default:    0 (all write access denied)


There is an additional (optional) key that may exist under the Parameters
key.  After a user's account/password has been validated and the server is
impersonating that user, an attempt is made to open a key named "AccessCheck".
If this key exists, and the user cannot open it, then the user is denied
access to the FTP Server.  If this key exists, and the user can only open it
for read access, then the user is given read-only access to the FTP Server.
This way, an administrator can create this "AccessCheck" key and attach
specific ACLs to the key. These ACLs will then control access to the FTP
Server.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\infocomm\readme.txt ===
ROADMAP.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        April 09, 1996

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory svcs\infocomm
     and details related to Internet Services Common DLL.


File            Description

README.txt      This file.
atq\            ATQ (Asynchronous Thread Queue) module
tsstr\          inTernet Services STRing module
cache\          Cache Module for Internet Services
common\         Common Functionality used by Internet Services
dbgext\         Debug Extensions for ATQ
dirlist\        HTML direcotry listing
festrcnv\       Far Eastern Conversion Routines
info\           INFOCOMM client/server dlls
sec\            Security support functions
spud\           User stubs for spud.sys


Contents:

1) Dependency between sub-Modules in INFOCOMM

Level 1:   atq\   tsstr\  cache\  sec\  dirlist\
 These modules should have dependencies within themselves.
 Should not depend on outside modules.

Level 2:  dbgext\  common\ festrcnv\
 These modules can depend on Level 1 modules.

Level 3:  info\
 These modules can depend on Level 1 & Level 2.

Please maintain the proper dependencies and do not introduce any circular
 dependencies.

Note: spud is not in the dirs file because it has dependencies on the
ntos project. To build uspud.lib you must cd into the spud directory
then check out the version of uspud.lib under the platform subdirectory
for which you are building. You can then build uspud.lib.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\infocomm\atq\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Jan 6, 1997

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------


Summary :
 This file describes the files in the directory svcs\infocomm\atq
     and details related to ISATQ - Internet Services Async Thread Queue module


File        Owner    Description

README.txt   MuraliK   This file.
abw.hxx      MuraliK  Bandwidth throttler declarations
abw.cxx      MuraliK  Bandwidth throttler for ATQ
acache.cxx   MuraliK  Alloc Cache module
atqbmon.cxx  MCourage Listen backlog monitor
atqbmon.hxx  MCourage Listen backlog monitor header
atqcport.cxx JohnsonA Fake Completion port for Win95
atqcport.hxx JohnsonA Fake Completion port for Win95 header

atqendp.cxx  MuraliK  Atq Endpoint manager
atqmain.cxx  MuraliK  Exposed ATQ entrypoints
atqprocs.hxx MuraliK  Internal Function Prototypes
atqsupp.cxx  MuraliK  Atq Support Functions - timeout, thread pool, etc.
atqtypes.hxx MuraliK  Atq Internal Types

atqxmit.cxx  JohnsonA Internal routines for TransmitFile()
auxctrs.hxx  MuraliK  Auxiliar counters - for internal analysis
dbgutil.h    MuraliK  Debug support definitions
dllmain.cxx  MuraliK  Dll Entry points
isatq.def    MuraliK  .def file

isatq.hxx    MuraliK  pre-compiled header file
isatq.rc     MuraliK  Resource file
sched.cxx    MuraliK  IIS Scheduler - internal thread pool for scheduling
sched.hxx    MuraliK  Scheduler data structures

timeout.cxx  MuraliK  ATQ Contexts Timeout Logic
timer.cxx    MuraliK  Time measurement support code
xmitnt.cxx   JohnsonA obsolete file - replaced by atqxmit.cxx

----------------------------------------------------------------------

Implementation Details

Contents:

ATQ based Bandwidth Throttle
 Author: MuraliK
 Date:   25-May-1995

Goal:
 Given a specified bandwidth which should be used as threshold,
the ATQ module shall throttle traffic, gracefully. Minimum CPU impact
should be seen; Minor variations above specified threshold is
allowed. Performance in the fast cause (no throttle) should be high
and involve less stuff in the critical path.

Given:
  M -- an administrator specified bandwidth which should not be
exceeded in most cases. (assume to be specified through a special API
interface added to ATQ module)

Solution:
 Various solutions are possible based on measurements and metrics
chosen. Whenever two possible solutions are possible, we pick the
simplest one to avoid complexity and performance impact. (Remember to
K.I.S.S.)

 Sub Problems:
1) Determination of Exisiting Usage:
  At real time determining existing usage exactly is computationally
intensive. We resort to approximate measures whenever possible.
Idea is:  Estimated Bandwidth = (TotalBytesSent / PeriodOfObservation).

 solution a)
	Use a separate thread for sampling and calculating the
bandwidth. Whenever an IO operation completes (we return from
GetQueuedCompletionStatus()), increment the TotalBytesSent for the
period under consideration.  The sampling thread wakes up at regular
intervals and caclulates the bandwidth effective at that time. The solution
also uses histogramming to smooth out sudden variations in the bandwidth.
This solution is:
 + good, since it limits complexity in calculating bandwidth
 - ignores completion of IO simultaneously => sudden spikes are possible.
 - ignores the duration took for actual IO to complete (results could be
misleading)
 - requires separate sampling thread for bandwidth calculation.

 solution b)
   	This solution uses a running approximation of time taken for
completing an i/o of standard size viz., 1 KB transfer. Initially we start
with an approximation of 0 Bytes sent/second (reasonable, since we just
started). When an IO completes, the time taken for transfer then is
calculated from the count of bytes sent and time required from inception to
end of IO. Now we do a simple average of existing approximation and the
newly caculated time. This gives the next approximation for bandwidth/time
taken. Successively the calculations refine the effective usage measurement
made. (However, we must note, by so simplifying, we offset ourselves from
worrying about the concurrency in IO processing.) In case of concurrent
transfers time taken for data transfer is larger than the actual time only
for the particular transfer. Hence, the solution makes conservative
estimates based on this measured value.

 +  no separate thread for sampling
 + simple interface & function to calculate bandwidth.
 - avoids unusaual spikes seen in above solution.


2) Determination of Action to be performed:
  The allowed operations in ATQ module include Read, Write and
TransmitFile. When a new operation is submitted, we need to evaluate if it
is safe(allow), marginally safe(block) or unsafe(reject) to perform the
operation. Evaluation of "safety"ness  is tricky and involves knowledge
about the operations, buffers used, CPU overhead for the operation setup,
and estimated and specified bandwidths.
 Assume M and B as specified and estimated bandwidths respectively. Let
R,W, and T stand for the operations Read, Write and TransmitFile. In
addition assume that s and b are used as suffixes for small and big
transfers. Definition of small and big are arbitrary and should be fixed
empirically. Please refer the following table for actions to be performed.

Action Table:
------------------------------------------------------------------------------
        \ Action  |
Bandwidth\ to be  |  Allow            Block               Reject
comparison\ Done  |
------------------------------------------------------------------------------
  M > B              R,W,T              -                   -

  M ~= B             W, T               R                   -
(approx. equal)                 (reduces future traffic)

  M < B              Ws, Ts          Wb, Tb                 R
                                              (reject on LongQueue)

------------------------------------------------------------------------------

 Rationale:
   case M > B:  In this case, the services are not yet hitting the limits
specified, so it is acceptable to allow all the operations to occur without
any blockage.

   case M ~= B:  (i.e.  -delta <= |(M - B)| <= +delta
[Note:  We use approximation, since exact equal is costly to calculate.]
 At this juncture, the N/w usage is at the brink of specified bandwidth. It
is good to take some steps to reduce future traffic. Servers operate on
serve-a-request basis -- they receive requests from clients and act upon
them. It is hence worthwhile to limit the number of requests getting
submitted to the active queue banging on the network. By delaying the Read,
processing of requests are delayed artificially, leading to delayed load on
the network. By the time delayed reads proceed, hopefully the network is
eased up and hence server will stabilise. As far as write and transmit
goes, certain amount of CPU processing is done and it is worthwhile to
perform them, rather than delaying and queueing, wasting CPU usage.

 Another possibility is: Do Nothing. In most cases, the load may be coming
down, in which case the bandwidth utilized will naturally get low. To the
contrary allowing reads to proceed may result in resulting Write and
Transmit loads. Due to this potential danger, we dont adopt this solution.

 case M < B:
 The bandwidth utilization has exceeded the specified limit. This is an
important case that deserves regulation. Heavy gains are achieved by
adopting reduced reads and delaying Wb and Tb. Better yet, reads can be
rejected indicating that the server is busy or network is busy. In most
cases when the server goes for a read operation, it is at the starting
point of processing any future request from client (exception is: FTP
server doing control reads, regularly.) Hence, it is no harm rejecting the
read request entirely. In addition, blocking Wb and Tb delays their impact
on the bandwidth, and brings down the bandwidth utilization faster than
possible only by rejecting Reads. We dont want to reject Wb or Tb, simply
because the amount of CPU work done for the same may be too high. By
blocking them, most of the CPU work does not go waste.


Implementation:
 To be continued later.


 The action table is simplified as shown below to keep the implementation
simpler.

Action Table:
------------------------------------------------------------------------------
        \ Action  |
Bandwidth\ to be  |  Allow            Block               Reject
comparison\ Done  |
------------------------------------------------------------------------------
  M > B              R,W,T              -                   -

  M ~= B             W, T               R                   -
(approx. equal)                 (reduces future traffic)

  M < B              W,                T                   R
------------------------------------------------------------------------------

Status and Entry point Modifications:

 We keep track of three global variables, one each for each of the
operations: Read, Write and XmitFile. The values of these variables
indicate if the operation is allowed, blocked or rejected. The entry points
AtqReadFile(), AtqWriteFile() and AtqXmitFile() are modified to check the
status and do appropriate action. If the operation is allowed, then
operation proceeds normally. If the operation is blocked, then we store
the context in a blocked list. The parameters of the entry points, which
are required for restarting the operation are also stored along with
context. The operation is rejected, if the status indicates rejection. All
these three global variables are read, without any synchronization
primitives around them. This will potentially lead to minor
inconsistencies, which is acceptable. However, performance is improved
since there is no syncronization primitive that needs to be accessed.( This
assertion however is dependent upon SMP implementations and needs to be
verified. It is deferred for current implementation.)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\infocomm\common\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Feb 16, 1995

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------
25-May-95          MuraliK     Added info about new files + Bandwidth Throttle

Summary :
 This file describes the files in the directory  internet\svcs\dll\server
     and details related to Internet Common Services DLL


File            Description

README.txt      This file.
atq.c           Asynchronous Thread Queue implementation

buffer.cxx      Raw level BUFFER class used by STRING
string.cxx      Implementation of STRING class

cpsock.c        Connection Protocol Sockets.

datetime.cxx    Functions for generating date and time from
                 given data structures.
debug.cxx       Code for Degbugging functions

eventlog.cxx    Implementation of EVENT_LOG class
globals.c       Globals for tcpsvcs.dll
igateway.cxx    Implementation of API for Internet services Gateway calls.

ilogcls.hxx     Internet Logging services Class Declarations.
ilogcls.cxx     Internet Logging services Class Definitions
                ( File and Basic logging)
inetlog.cxx     Internet Logging services C APIs.
ilogsql.cxx     Internet Logging to SQL using ODBC. Defines INET_SQL_LOG class.
odbcconn.hxx    Declares a stand alone ODBC connection class.
odbcconn.cxx    Defines member functions for ODBC connection class.

main.cxx        DLL initialization function

iisbind.cxx     Server binding management.
iisassoc.cxx    Server instance association object.

mimemap.cxx     Mime map class member functions definition.
mimeutil.cxx    Initialization and Cleanup functions for global mimemap object.

registry.txt    Defines the layout for registry values common to all services.
rpcsupp.cxx     Defines the RPC functions common for Internet Services.
security.cxx    Defines the Security related logon functions.

sources
makefile        files for NT build.

tcputil.cxx     miscellaneous Util functions for Internet Services dll.
tscache.cxx     defines the member functions for TS_CACHE.
tsvcinfo.cxx    defines member functions for TSVC_INFO object -- which acts
                as an interface for each of the service that is allowed.


Implementation Details

<To be filled in when time permits. See individual files for comments section >

Contents:

1. TSVC_INFO
2. EVENT_LOG
3. Internet Gateway processes
4. STRING and BUFFER classes
5. ODBC_CONNECTION class
6. Internet Logging APIs
7. MIME_MAP class and MimeMapping
8. Secuirty Functions.
9. ATQ functionality
10. ATQ based Bandwidth Throttle



10. ATQ based Bandwidth Throttle
 Author: MuraliK
 Date:   25-May-1995


Goal:
 Given a specified bandwidth which should be used as threshold,
the ATQ module shall throttle traffic, gracefully. Minimum CPU impact
should be seen; Minor variations above specified threshold is
allowed. Performance in the fast cause (no throttle) should be high
and involve less stuff in the critical path.

Given:
  M -- an administrator specified bandwidth which should not be
exceeded in most cases. (assume to be specified through a special API
interface added to ATQ module)

Solution:
 Various solutions are possible based on measurements and metrics
chosen. Whenever two possible solutions are possible, we pick the
simplest one to avoid complexity and performance impact. (Remember to
K.I.S.S.)

 Sub Problems:
1) Determination of Exisiting Usage:
  At real time determining existing usage exactly is computationally
intensive. We resort to approximate measures whenever possible.
Idea is:  Estimated Bandwidth = (TotalBytesSent / PeriodOfObservation).

 solution a)
    Use a separate thread for sampling and calculating the
bandwidth. Whenever an IO operation completes (we return from
GetQueuedCompletionStatus()), increment the TotalBytesSent for the
period under consideration.  The sampling thread wakes up at regular
intervals and caclulates the bandwidth effective at that time. The solution
also uses histogramming to smooth out sudden variations in the bandwidth.
This solution is:
 + good, since it limits complexity in calculating bandwidth
 - ignores completion of IO simultaneously => sudden spikes are possible.
 - ignores the duration took for actual IO to complete (results could be
misleading)
 - requires separate sampling thread for bandwidth calculation.

 solution b)
    This solution uses a running approximation of time taken for
completing an i/o of standard size viz., 1 KB transfer. Initially we start
with an approximation of 0 Bytes sent/second (reasonable, since we just
started). When an IO completes, the time taken for transfer then is
calculated from the count of bytes sent and time required from inception to
end of IO. Now we do a simple average of existing approximation and the
newly caculated time. This gives the next approximation for bandwidth/time
taken. Successively the calculations refine the effective usage measurement
made. (However, we must note, by so simplifying, we offset ourselves from
worrying about the concurrency in IO processing.) In case of concurrent
transfers time taken for data transfer is larger than the actual time only
for the particular transfer. Hence, the solution makes conservative
estimates based on this measured value.

 +  no separate thread for sampling
 + simple interface & function to calculate bandwidth.
 - avoids unusaual spikes seen in above solution.


2) Determination of Action to be performed:
  The allowed operations in ATQ module include Read, Write and
TransmitFile. When a new operation is submitted, we need to evaluate if it
is safe(allow), marginally safe(block) or unsafe(reject) to perform the
operation. Evaluation of "safety"ness  is tricky and involves knowledge
about the operations, buffers used, CPU overhead for the operation setup,
and estimated and specified bandwidths.
 Assume M and B as specified and estimated bandwidths respectively. Let
R,W, and T stand for the operations Read, Write and TransmitFile. In
addition assume that s and b are used as suffixes for small and big
transfers. Definition of small and big are arbitrary and should be fixed
empirically. Please refer the following table for actions to be performed.

Action Table:
------------------------------------------------------------------------------
        \ Action  |
Bandwidth\ to be  |  Allow            Block               Reject
comparison\ Done  |
------------------------------------------------------------------------------
  M > B              R,W,T              -                   -

  M ~= B             W, T               R                   -
(approx. equal)                 (reduces future traffic)

  M < B              Ws, Ts          Wb, Tb                 R
                                              (reject on LongQueue)

------------------------------------------------------------------------------

 Rationale:
   case M > B:  In this case, the services are not yet hitting the limits
specified, so it is acceptable to allow all the operations to occur without
any blockage.

   case M ~= B:  (i.e.  -delta <= |(M - B)| <= +delta
[Note:  We use approximation, since exact equal is costly to calculate.]
 At this juncture, the N/w usage is at the brink of specified bandwidth. It
is good to take some steps to reduce future traffic. Servers operate on
serve-a-request basis -- they receive requests from clients and act upon
them. It is hence worthwhile to limit the number of requests getting
submitted to the active queue banging on the network. By delaying the Read,
processing of requests are delayed artificially, leading to delayed load on
the network. By the time delayed reads proceed, hopefully the network is
eased up and hence server will stabilise. As far as write and transmit
goes, certain amount of CPU processing is done and it is worthwhile to
perform them, rather than delaying and queueing, wasting CPU usage.

 Another possibility is: Do Nothing. In most cases, the load may be coming
down, in which case the bandwidth utilized will naturally get low. To the
contrary allowing reads to proceed may result in resulting Write and
Transmit loads. Due to this potential danger, we dont adopt this solution.

 case M < B:
 The bandwidth utilization has exceeded the specified limit. This is an
important case that deserves regulation. Heavy gains are achieved by
adopting reduced reads and delaying Wb and Tb. Better yet, reads can be
rejected indicating that the server is busy or network is busy. In most
cases when the server goes for a read operation, it is at the starting
point of processing any future request from client (exception is: FTP
server doing control reads, regularly.) Hence, it is no harm rejecting the
read request entirely. In addition, blocking Wb and Tb delays their impact
on the bandwidth, and brings down the bandwidth utilization faster than
possible only by rejecting Reads. We dont want to reject Wb or Tb, simply
because the amount of CPU work done for the same may be too high. By
blocking them, most of the CPU work does not go waste.


Implementation:
 To be continued later.


 The action table is simplified as shown below to keep the implementation
simpler.

Action Table:
------------------------------------------------------------------------------
        \ Action  |
Bandwidth\ to be  |  Allow            Block               Reject
comparison\ Done  |
------------------------------------------------------------------------------
  M > B              R,W,T              -                   -

  M ~= B             W, T               R                   -
(approx. equal)                 (reduces future traffic)

  M < B              W,                T                   R
------------------------------------------------------------------------------

Status and Entry point Modifications:

 We keep track of three global variables, one each for each of the
operations: Read, Write and XmitFile. The values of these variables
indicate if the operation is allowed, blocked or rejected. The entry points
AtqReadFile(), AtqWriteFile() and AtqXmitFile() are modified to check the
status and do appropriate action. If the operation is allowed, then
operation proceeds normally. If the operation is blocked, then we store
the context in a blocked list. The parameters of the entry points, which
are required for restarting the operation are also stored along with
context. The operation is rejected, if the status indicates rejection. All
these three global variables are read, without any synchronization
primitives around them. This will potentially lead to minor
inconsistencies, which is acceptable. However, performance is improved
since there is no syncronization primitive that needs to be accessed.( This
assertion however is dependent upon SMP implementations and needs to be
verified. It is deferred for current implementation.)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\infocomm\dcomadm\includes\pubinc.txt ===
iadm.h
iadmw.h
mdcommsg.h
mdmsg.h
mddefw.h
mddef.h
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\infocomm\info\perfmon\infoctrs.ini ===
[info]
drivername=inetinfo
symbolfile=INFOctrs.h
trusted=

[languages]
009=English
000=Neutral

[objects]
INFO_COUNTER_OBJECT_009_NAME=Internet Information Services Global

[text]
INFO_COUNTER_OBJECT_009_NAME=Internet Information Services Global
INFO_COUNTER_OBJECT_009_HELP=The Internet Information Services Global object includes counters that monitor Internet Information Services (the Web service and the FTP service) as a whole.

INFO_ATQ_TOTAL_ALLOWED_REQUESTS_COUNTER_009_NAME=Total Allowed Async I/O Requests
INFO_ATQ_TOTAL_ALLOWED_REQUESTS_COUNTER_009_HELP=Total requests allowed by bandwidth throttling settings (counted since service startup).

INFO_ATQ_TOTAL_BLOCKED_REQUESTS_COUNTER_009_NAME=Total Blocked Async I/O Requests
INFO_ATQ_TOTAL_BLOCKED_REQUESTS_COUNTER_009_HELP=Total requests temporarily blocked due to bandwidth throttling settings (counted since service startup).

INFO_ATQ_TOTAL_REJECTED_REQUESTS_COUNTER_009_NAME=Total Rejected Async I/O Requests
INFO_ATQ_TOTAL_REJECTED_REQUESTS_COUNTER_009_HELP=Total requests rejected due to bandwidth throttling settings (counted since service startup).

INFO_ATQ_CURRENT_BLOCKED_REQUESTS_COUNTER_009_NAME=Current Blocked Async I/O Requests
INFO_ATQ_CURRENT_BLOCKED_REQUESTS_COUNTER_009_HELP=Current requests temporarily blocked due to bandwidth throttling settings.

INFO_ATQ_MEASURED_BANDWIDTH_COUNTER_009_NAME=Measured Async I/O Bandwidth Usage
INFO_ATQ_MEASURED_BANDWIDTH_COUNTER_009_HELP=Measured bandwidth of asynchronous I/O averaged over a minute.

INFO_CACHE_FILES_CACHED_COUNTER_009_NAME=Current Files Cached
INFO_CACHE_FILES_CACHED_COUNTER_009_HELP=Current number of files whose content is in the cache for WWW and FTP services.

INFO_CACHE_TOTAL_FILES_CACHED_COUNTER_009_NAME=Total Files Cached
INFO_CACHE_TOTAL_FILES_CACHED_COUNTER_009_HELP=Total number of files whose content was ever added to the cache for WWW and FTP services

INFO_CACHE_FILES_HIT_COUNTER_009_NAME=File Cache Hits
INFO_CACHE_FILES_HIT_COUNTER_009_HELP=Total number of successful lookups in the file cache.

INFO_CACHE_FILES_MISS_COUNTER_009_NAME=File Cache Misses
INFO_CACHE_FILES_MISS_COUNTER_009_HELP=Total number of unsuccessful lookups in the file cache.

INFO_CACHE_FILE_RATIO_COUNTER_009_NAME=File Cache Hits %
INFO_CACHE_FILE_RATIO_COUNTER_009_HELP=The ratio of File Cache Hits to total cache requests.

INFO_CACHE_FILE_FLUSHES_COUNTER_009_NAME=File Cache Flushes
INFO_CACHE_FILE_FLUSHES_COUNTER_009_HELP=File Cache Flushes since server startup.

INFO_CACHE_CURRENT_FILE_CACHE_SIZE_COUNTER_009_NAME=Current File Cache Memory Usage
INFO_CACHE_CURRENT_FILE_CACHE_SIZE_COUNTER_009_HELP=Current number of bytes used for file cache.

INFO_CACHE_MAXIMUM_FILE_CACHE_SIZE_COUNTER_009_NAME=Maximum File Cache Memory Usage
INFO_CACHE_MAXIMUM_FILE_CACHE_SIZE_COUNTER_009_HELP=Maximum number of bytes used for file cache.

INFO_CACHE_ACTIVE_FLUSHED_FILES_COUNTER_009_NAME=Active Flushed Entries
INFO_CACHE_ACTIVE_FLUSHED_FILES_COUNTER_009_HELP=Active Flushed Entries are cached file handles that will be closed when all current transfers complete.

INFO_CACHE_TOTAL_FLUSHED_FILES_COUNTER_009_NAME=Total Flushed Files
INFO_CACHE_TOTAL_FLUSHED_FILES_COUNTER_009_HELP=Total Flushed Files is the number of file handles that have been removed from the cache since service start up.


INFO_CACHE_URI_CACHED_COUNTER_009_NAME=Current URIs Cached
INFO_CACHE_URI_CACHED_COUNTER_009_HELP=URI information blocks currently in the cache for WWW and FTP services.

INFO_CACHE_TOTAL_URI_CACHED_COUNTER_009_NAME=Total URIs Cached
INFO_CACHE_TOTAL_URI_CACHED_COUNTER_009_HELP=Total number of URI information blocks ever added to the cache for WWW and FTP services

INFO_CACHE_URI_HIT_COUNTER_009_NAME=URI Cache Hits
INFO_CACHE_URI_HIT_COUNTER_009_HELP=Total number of successful lookups in the URI cache.

INFO_CACHE_URI_MISS_COUNTER_009_NAME=URI Cache Misses
INFO_CACHE_URI_MISS_COUNTER_009_HELP=Total number of unsuccessful lookups in the URI cache.

INFO_CACHE_URI_RATIO_COUNTER_009_NAME=URI Cache Hits %
INFO_CACHE_URI_RATIO_COUNTER_009_HELP=The ratio of URI Cache Hits to total cache requests.

INFO_CACHE_URI_FLUSHES_COUNTER_009_NAME=URI Cache Flushes
INFO_CACHE_URI_FLUSHES_COUNTER_009_HELP=URI Cache Flushes since server startup.

INFO_CACHE_TOTAL_FLUSHED_URI_COUNTER_009_NAME=Total Flushed URIs
INFO_CACHE_TOTAL_FLUSHED_URI_COUNTER_009_HELP=Total Flushed URIs is the number of URI information blocks that have been removed from the cache since service start up.


INFO_CACHE_BLOB_CACHED_COUNTER_009_NAME=Current BLOBs Cached
INFO_CACHE_BLOB_CACHED_COUNTER_009_HELP=BLOB information blocks currently in the cache for WWW and FTP services.

INFO_CACHE_TOTAL_BLOB_CACHED_COUNTER_009_NAME=Total BLOBs Cached
INFO_CACHE_TOTAL_BLOB_CACHED_COUNTER_009_HELP=Total number of BLOB information blocks ever added to the cache for WWW and FTP services

INFO_CACHE_BLOB_HIT_COUNTER_009_NAME=BLOB Cache Hits
INFO_CACHE_BLOB_HIT_COUNTER_009_HELP=Total number of successful lookups in the BLOB cache.

INFO_CACHE_BLOB_MISS_COUNTER_009_NAME=BLOB Cache Misses
INFO_CACHE_BLOB_MISS_COUNTER_009_HELP=Total number of unsuccessful lookups in the BLOB cache.

INFO_CACHE_BLOB_RATIO_COUNTER_009_NAME=BLOB Cache Hits %
INFO_CACHE_BLOB_RATIO_COUNTER_009_HELP=The ratio of BLOB Cache Hits to total cache requests.

INFO_CACHE_BLOB_FLUSHES_COUNTER_009_NAME=BLOB Cache Flushes
INFO_CACHE_BLOB_FLUSHES_COUNTER_009_HELP=BLOB Cache Flushes since server startup.

INFO_CACHE_TOTAL_FLUSHED_BLOB_COUNTER_009_NAME=Total Flushed BLOBs
INFO_CACHE_TOTAL_FLUSHED_BLOB_COUNTER_009_HELP=Total Flushed BLOBs is the number of BLOB information blocks that have been removed from the cache since service start up.



INFO_COUNTER_OBJECT_000_NAME=Internet Information Services Global
INFO_COUNTER_OBJECT_000_HELP=The Internet Information Services Global object includes counters that monitor Internet Information Services (the Web service and the FTP service) as a whole.

INFO_ATQ_TOTAL_ALLOWED_REQUESTS_COUNTER_000_NAME=Total Allowed Async I/O Requests
INFO_ATQ_TOTAL_ALLOWED_REQUESTS_COUNTER_000_HELP=Total requests allowed by bandwidth throttling settings (counted since service startup).

INFO_ATQ_TOTAL_BLOCKED_REQUESTS_COUNTER_000_NAME=Total Blocked Async I/O Requests
INFO_ATQ_TOTAL_BLOCKED_REQUESTS_COUNTER_000_HELP=Total requests temporarily blocked due to bandwidth throttling settings (counted since service startup).

INFO_ATQ_TOTAL_REJECTED_REQUESTS_COUNTER_000_NAME=Total Rejected Async I/O Requests
INFO_ATQ_TOTAL_REJECTED_REQUESTS_COUNTER_000_HELP=Total requests rejected due to bandwidth throttling settings (counted since service startup).

INFO_ATQ_CURRENT_BLOCKED_REQUESTS_COUNTER_000_NAME=Current Blocked Async I/O Requests
INFO_ATQ_CURRENT_BLOCKED_REQUESTS_COUNTER_000_HELP=Current requests temporarily blocked due to bandwidth throttling settings.

INFO_ATQ_MEASURED_BANDWIDTH_COUNTER_000_NAME=Measured Async I/O Bandwidth Usage
INFO_ATQ_MEASURED_BANDWIDTH_COUNTER_000_HELP=Measured bandwidth of asynchronous I/O averaged over a minute.

INFO_CACHE_FILES_CACHED_COUNTER_000_NAME=Current Files Cached
INFO_CACHE_FILES_CACHED_COUNTER_000_HELP=Current number of files whose content is in the cache for WWW and FTP services.

INFO_CACHE_TOTAL_FILES_CACHED_COUNTER_000_NAME=Total Files Cached
INFO_CACHE_TOTAL_FILES_CACHED_COUNTER_000_HELP=Total number of files whose content was ever added to the cache for WWW and FTP services

INFO_CACHE_FILES_HIT_COUNTER_000_NAME=File Cache Hits
INFO_CACHE_FILES_HIT_COUNTER_000_HELP=Total number of successful lookups in the file cache.

INFO_CACHE_FILES_MISS_COUNTER_000_NAME=File Cache Misses
INFO_CACHE_FILES_MISS_COUNTER_000_HELP=Total number of unsuccessful lookups in the file cache.

INFO_CACHE_FILE_RATIO_COUNTER_000_NAME=File Cache Hits %
INFO_CACHE_FILE_RATIO_COUNTER_000_HELP=The ratio of File Cache Hits to total cache requests.

INFO_CACHE_FILE_FLUSHES_COUNTER_000_NAME=File Cache Flushes
INFO_CACHE_FILE_FLUSHES_COUNTER_000_HELP=File Cache Flushes since server startup.

INFO_CACHE_CURRENT_FILE_CACHE_SIZE_COUNTER_000_NAME=Current File Cache Memory Usage
INFO_CACHE_CURRENT_FILE_CACHE_SIZE_COUNTER_000_HELP=Current number of bytes used for file cache.

INFO_CACHE_MAXIMUM_FILE_CACHE_SIZE_COUNTER_000_NAME=Maximum File Cache Memory Usage
INFO_CACHE_MAXIMUM_FILE_CACHE_SIZE_COUNTER_000_HELP=Maximum number of bytes used for file cache.

INFO_CACHE_ACTIVE_FLUSHED_FILES_COUNTER_000_NAME=Active Flushed Entries
INFO_CACHE_ACTIVE_FLUSHED_FILES_COUNTER_000_HELP=Active Flushed Entries are cached file handles that will be closed when all current transfers complete.

INFO_CACHE_TOTAL_FLUSHED_FILES_COUNTER_000_NAME=Total Flushed Files
INFO_CACHE_TOTAL_FLUSHED_FILES_COUNTER_000_HELP=Total Flushed Files is the number of file handles that have been removed from the cache since service start up.


INFO_CACHE_URI_CACHED_COUNTER_000_NAME=Current URIs Cached
INFO_CACHE_URI_CACHED_COUNTER_000_HELP=URI information blocks currently in the cache for WWW and FTP services.

INFO_CACHE_TOTAL_URI_CACHED_COUNTER_000_NAME=Total URIs Cached
INFO_CACHE_TOTAL_URI_CACHED_COUNTER_000_HELP=Total number of URI information blocks ever added to the cache for WWW and FTP services

INFO_CACHE_URI_HIT_COUNTER_000_NAME=URI Cache Hits
INFO_CACHE_URI_HIT_COUNTER_000_HELP=Total number of successful lookups in the URI cache.

INFO_CACHE_URI_MISS_COUNTER_000_NAME=URI Cache Misses
INFO_CACHE_URI_MISS_COUNTER_000_HELP=Total number of unsuccessful lookups in the URI cache.

INFO_CACHE_URI_RATIO_COUNTER_000_NAME=URI Cache Hits %
INFO_CACHE_URI_RATIO_COUNTER_000_HELP=The ratio of URI Cache Hits to total cache requests.

INFO_CACHE_URI_FLUSHES_COUNTER_000_NAME=URI Cache Flushes
INFO_CACHE_URI_FLUSHES_COUNTER_000_HELP=URI Cache Flushes since server startup.

INFO_CACHE_TOTAL_FLUSHED_URI_COUNTER_000_NAME=Total Flushed URIs
INFO_CACHE_TOTAL_FLUSHED_URI_COUNTER_000_HELP=Total Flushed URIs is the number of URI information blocks that have been removed from the cache since service start up.


INFO_CACHE_BLOB_CACHED_COUNTER_000_NAME=Current BLOBs Cached
INFO_CACHE_BLOB_CACHED_COUNTER_000_HELP=BLOB information blocks currently in the cache for WWW and FTP services.

INFO_CACHE_TOTAL_BLOB_CACHED_COUNTER_000_NAME=Total BLOBs Cached
INFO_CACHE_TOTAL_BLOB_CACHED_COUNTER_000_HELP=Total number of BLOB information blocks ever added to the cache for WWW and FTP services

INFO_CACHE_BLOB_HIT_COUNTER_000_NAME=BLOB Cache Hits
INFO_CACHE_BLOB_HIT_COUNTER_000_HELP=Total number of successful lookups in the BLOB cache.

INFO_CACHE_BLOB_MISS_COUNTER_000_NAME=BLOB Cache Misses
INFO_CACHE_BLOB_MISS_COUNTER_000_HELP=Total number of unsuccessful lookups in the BLOB cache.

INFO_CACHE_BLOB_RATIO_COUNTER_000_NAME=BLOB Cache Hits %
INFO_CACHE_BLOB_RATIO_COUNTER_000_HELP=The ratio of BLOB Cache Hits to total cache requests.

INFO_CACHE_BLOB_FLUSHES_COUNTER_000_NAME=BLOB Cache Flushes
INFO_CACHE_BLOB_FLUSHES_COUNTER_000_HELP=BLOB Cache Flushes since server startup.

INFO_CACHE_TOTAL_FLUSHED_BLOB_COUNTER_000_NAME=Total Flushed BLOBs
INFO_CACHE_TOTAL_FLUSHED_BLOB_COUNTER_000_HELP=Total Flushed BLOBs is the number of BLOB information blocks that have been removed from the cache since service start up.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\infocomm\info\perfmon\infoctrs.txt ===
I.  PURPOSE

      This document details a simple test plan for the Windows NT INFO Server
      Performance Counters.


 II.  OVERVIEW

      The Windows NT INFO Server Performance Counters may be installed from
      \\KAYAK\RESKIT\INFOCTRS.  INSTALL.BAT will install the counters, and
      REMOVE.BAT will remove the counters.  These .BAT files *MUST* be run
      from the INFOCTRS directory.

      Running INSTALL.BAT will install the performance counters.  These
      counters are used by PERFMON.EXE to monitor the activity of the
      Windows NT INFO Server.  The following attributes may be monitored:

           0.  Bytes Sent/sec

               This is the rate that data bytes are sent by the INFO
               Server.

           1.  Bytes Received/sec

               This is the rate that data bytes are received by the
               INFO Server.

           2.  Bytes Total/sec

               This is sum of Bytes Sent/sec and Bytes Received/sec.
               This is the total rate of bytes transferred by the
               INFO Server.

           3.  Files Sent

               This is the total number of files sent by the INFO
               Server.

           4.  Files Received

               This is the total number of files received by the
               INFO Server.

           5.  Files Total

               This is sum of Files Sent and Files Received.  This
               is the total number of files transferred by the INFO
               Server.

           6.  Current Anonymous Users

               This is number of anonymous users currently connected
               to the INFO Server.

           7.  Current NonAnonymous Users

               This is number of non-anonymous users currently
               connected to the INFO Server.

           8.  Total Anonymous Users

               This is total number of anonymous users that have
               ever connected to the INFO Server.

           9.  Total NonAnonymous Users

               This is total number of non-anonymous users that have
               ever connected to the INFO Server.

          10.  Maximum Anonymous Users

               This is maximum number of anonymous users
               simultaneously connected to the INFO Server.

          11.  Maximum NonAnonymous Users

               This is maximum number of non-anonymous users
               simultaneously connected to the INFO Server.

          12.  Current Connections

               This is the current number of connections to the INFO
               Server.

          13.  Maximum Connections

               This is maximum number of simultaneous connections to
               the INFO Server.

          14.  Connection Attempts

               This is the number of connection attempts that have
               been made to the INFO Server.

          15.  Logon Attempts

               This is the number of logon attempts that have been
               made to the INFO Server.


III.  TESTING

      These tests assume the test machine has TCP/IP installed, but
      does *NOT* yet have the INFO Server installed.  Also, LODCTR.EXE,
      UNLODCTR.EXE, and REGINI.EXE must be on the path.

      These tests also assume the user knows how to run PerfMon.


           0.  Run INSTALL.BAT from some directory other than INFOCTRS
               (i.e. cd to K:\FOO then execute \INFOCTRS\INSTALL).  This
               should fail with an appropriate error message (must be
               run from INFOCTRS directory).

           1.  Do the same thing with REMOVE.BAT.  This should also fail.

           2.  From the INFOCTRS directory, run REMOVE.BAT.  This should
               fail.

           3.  From the INFOCTRS directory, run INSTALL.BAT.  This should
               fail with an appropriate error message (INFO Server not
               installed).

               NOTE:  This will succeed on an IDW installation.

           4.  Run NCPA and install the INFO Server.  Reboot.

           5.  From the INFOCTRS directory, run REMOVE.BAT.  This should
               fail.

           6.  From the INFOCTRS directory, run INSTALL.BAT.  This should
               succeed.

           8.  Run PerfMon & verify that the counters are working.
               Select the INFO Server object and the default counter.
               Then connect to the target machine via the INFO client and
               verify the Bytes Total/sec counter is responding.

               Also, verify that each of the counters listed in section II
               are visible.

           7.  Run INSTALL.BAT again.  This should also succeed.

           9.  Run PerfMon again to verify nothing is messed up.

          10.  Run REMOVE.BAT.  This should succeed.

          11.  Run PerfMon to verify the INFO Server object is no longer
               displayed in the "objects" combo box.

          12.  Run INSTALL.BAT again.  This should succeed.

          13.  Run PerfMon to verify the counters were reinstalled.

          14.  While PerfMon is running, stop the INFO Server with
               either NET.EXE or the Services applet.  PerfMon should
               continue chugging along with no INFO activity displayed.

               There will be no other indication in PerfMon that the
               service has been stopped.

          15.  While PerfMon is still running, restart the service.
               Verify that PerfMon is now displaying service activity
               by connecting to the server with the INFO client.

          16.  While PerfMon is running, run REMOVE.BAT.  This should
               succeed.

               PerfMon will still allow you to add/remove INFO Server
               counters until you exit the PerfMon app.

          17.  Exit & restart PerfMon.  The INFO Server counters should
               not be available.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\infocomm\metadata\dll\readme.txt ===
/*++

Copyright (c) 1996  Microsoft Corporation

Module Name:

    readme.txt

Abstract:

    Readme for metadata.dll source files.

Author:

    Michael W. Thomas            22-Jul-96

Revision History:

--*/

metadata.h: Include file for dll and clients. Includes api declarations and defines.

metabase.cxx, metabase.hxx: The api.

metasub.cxx, metasub.hxx: Worker routines for the api. Much of the work gets done here.

globals.hxx, globals.cxx: Global variables.

gbuf.cxx, gbuf.hxx: Buffer routines.

handle.hxx: Meta handle class.

baseobj.cxx, baseobj.hxx: Meta object class. This is the heart of the matter.

basedata.hxx: Parent data class.

strdata.hxx, bindata.hxx, dwdata.hxx: Data classes derived from basedata.hxx.

cbin.cxx, cbin.hxx: binary buffer class, stolen from string.* and pared back for binary data.

pudebug.c: Debugging routines, stolen code.

resources.cxx: Locking and unlocking routines, stolen code.

mdmsg.mc: Messages.

metabase.rc: Resources.

metadata.def: Def file.

=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\irtl\httphdr\longhdr.txt ===
GET /Scripts/CGI_PARAM.exe
Host: PAG
User-Agent: HttpG
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\irtl\httphdr\test.txt ===
;
;  Sample HTTP Headers - test input for HTTP dictionary
;  Author: Murali R. Krishnan    -  14-Nov-1996
;  Based on real request sniffs
;

; Sample Header 1.  IE 3.0
GET / HTTP/1.0
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
Accept-Language: en
UA-pixels: 1152x882
UA-color: color8
UA-OS: Windows NT
UA-CPU: x86
If-Modified-Since: Fri, 20 Sep 1996 23:36:42 GMT; length=4051
User-Agent: Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows.NT)
Host: muralik
Connection: Keep-Alive

; Sample Header 2.  IE 3.0 with concocted custom-headers

GET /samples/images/background.gif HTTP/1.0
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
Referer: http://muralik0/
Accept-Language: en
UA-pixels: 1152x882
UA-color: color8
UA-OS: Windows NT
UA-CPU: x86
If-Modified-Since: Fri, 20 Sep 1996 23:36:47 GMT; length=10282
User-Agent: Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows.NT)
Host: muralik
Connection: Keep-Alive
MyHeader1: MyValue1
MyHeader2: MyValue2

; Sample Header 3.  IE 3.0 with multiple values for headers 
;   Look at the headers for Connection: and Accept: 
GET / HTTP/1.0
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
Accept-Language: en
Accept-Language: es
UA-pixels: 1152x882
UA-color: color8
UA-OS: Windows NT
UA-CPU: x86
If-Modified-Since: Fri, 20 Sep 1996 23:36:42 GMT; length=4051
User-Agent: Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows.NT)
Host: muralik
Connection: Keep-Alive
Connection: 5m
Accept: text/x-test-app

; Sample Header 4.  IE 3.0 with multiple values for headers & custom headers
;   Look at the headers for MyHeader1:
GET /samples/images/background.gif HTTP/1.0
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
Referer: http://muralik0/
Accept-Language: en
UA-pixels: 1152x882
UA-color: color8
UA-OS: Windows NT
UA-CPU: x86
If-Modified-Since: Fri, 20 Sep 1996 23:36:47 GMT; length=10282
User-Agent: Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows.NT)
Host: muralik
Connection: Keep-Alive
MyHeader1: MyValue1
MyHeader2: MyValue2
MyHeader1: MyValue1_2

; Sample Header 5.  IE 3.0 with multiple values for headers & custom headers
;   Look at the headers for MyHeader1:
GET /samples/images/background.gif HTTP/1.0
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
Referer: http://muralik0/
Accept-Language: en
UA-pixels: 1152x882
UA-color: color8
UA-OS: Windows NT
UA-CPU: x86
If-Modified-Since: Fri, 20 Sep 1996 23:36:47 GMT; length=10282
User-Agent: Mozilla/2.0 (compatible; MSIE 3.0; AK; Windows.NT)
Host: muralik
Connection: Keep-Alive
MyHead2: MyValue2
MyHeader1: MyValue1
MyHeader1: MyValue1_2

; Sample Header 6.  Netscape 3.0 headers for simple request
GET /scripts/asp/test.asp HTTP/1.0
Connection: Keep-Alive
User-Agent: Mozilla/3.0.(WinNT; I)
Pragma: no-cache
Host: phillich1
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*

; Sample Header 6.  Netscape 3.0 headers for simple request with Cookies
GET /scripts/asp/test.asp HTTP/1.0
Connection: Keep-Alive
User-Agent: Mozilla/3.0 (WinNT; I)
Pragma: no-cache
Host: phillich1
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
Cookie: ASPSESSIONID=PVZQGHUMEAYFNRFK

; Sample Header 7.  Long header
GET /regress/bool/test7_AND.ASP?TheRestriction=@bstr_prop1+=%22a%22+AND+@bstr_prop2+=%22zzz+this+is+an+extremely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extermely+long+string+this+is+an+extremely+long+string+this+is+an+extremely+long+string+%22 HTTP/1.0
Pragma: No-Cache
User-Agent: Mozilla/2.0 (compatible; WBCLI)
Referer: WBCLI
Accept: text/html
Accept: text/plain

;
; Sample Header 7.  Poorly formatted Pipelined HTTP/1.1 requests
;
PUT /fs/bvt/newdir/test2.txt HTTP/1.1
connection: close
host: godzilla
content-type: text/txt
UT  /fs/bft/newdir/test2.txt HTTP/1.1
connection: close
host: godzilla
content-type: text/txt
content-length: 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\irtl\httphdr\readme.txt ===
README.txt

Author:         Murali R. Krishnan      (MuraliK)
Created:        Nov 13, 1996

Revisions:
    Date            By               Comments
-----------------  --------   -------------------------------------------
Sept 29, 1997      MuraliK      Moved to svcs\irtl\httphdr
                                Fixed bugs in HTTP_HEADERS::ParseInput()

Summary :
 This file describes the files in the directory irtl\httphdr
     and details related to HTTP Header Dictionary.


File            Description

README.txt      This file.
httphdr.hxx     Header file containing declarations.
httphdr.cxx     Implementation of Header Mapper and Header dictionary.
tdict.cxx       Test program for Dictionary headers.


Implementation Details

Contents:
1. Design of Dictionary and Mapper
2. Replacements for old PARAM_LIST object in w3svc


1. Design of Dictionary and Mapper

 class HTTP_HEADERS
 class HTTP_HEADER_MAPPER

<To Be Done>

2. Replacements for old PARAM_LIST object in w3svc

 O L D                  =>      N E W 

HEADER_MAP::
        Reset()         => HTTP_HEADERS::Reset()
        Store()         => HTTP_HEADERS:FastMapStore()
        Cancel()        => HTTP_HEADERS:FastMapCancel()
        MaxIndex()      => HTTP_HEADERS::FastMapMaxIndex()
        MaxMap()        => HTTP_HEADER_MAPPER::NumItems()
        CheckConcatAndStore() => HTTP_HEADERS::FastMapStoreWithConcat()
        QueryStrValue() => HTTP_HEADERS::FastMapQueryStrValue()
        QueryValue()    => HTTP_HEADERS::FastMapQueryValue()
        IsEmpty()       => Nuked

PARAM_LIST::
        Reset()         => HTTP_HEADERS::Reset()
        GetFastMap()    => No need - use Fast map functions directly
        FindValue()     => HTTP_HEADERS::FindValue()
        RemoveEntry()   => CancelHeader()
        AddEntryUsingConcat() => HTTP_HEADERS::StoreHeader()
        AddEntry()      => filter uses this - StoreHeader() is sufficient
                          -- rewriting code to check fast-map and op, is better


        Enumerator functions:
        NextPair()  => are hard to achieve. Since the "header-name" is 
                        not NULL terminated. We have to work-around this
                        by fixing the users of this call.

                        New Enumerators will return NAME_VALUE_PAIRS
                                FastMapEnumerate(),
                                ChunkEnumerator()
  Nuked:
        GetCount()
        AddParam()
        ParsePairs()
        ParseSimpleList()
        ParseHeaderList()
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\nntp\nntpctrs\nntpctrs.ini ===
;//-- for lodctr.exe ----------------------------------------------------------
;//  IMPORTANT: in order for this file to be localizeable by espresso
;//  	the first comment line must contain the text 'lodctr.exe' (as above)
;//----------------------------------------------------------------------------

[info]
drivername=NNTPSVC
symbolfile=nntpctrs.h

[languages]
009=English

[text]
NNTP_COUNTER_OBJECT1_009_NAME=NNTP Server
NNTP_COUNTER_OBJECT1_009_HELP=The NNTP Server object type includes counters specific to the NNTP Server service.

NNTP_BYTES_SENT_COUNTER_009_NAME=Bytes Sent/sec
NNTP_BYTES_SENT_COUNTER_009_HELP=Bytes Sent/sec is the rate that data bytes are sent by the NNTP Server.

NNTP_BYTES_RECEIVED_COUNTER_009_NAME=Bytes Received/sec
NNTP_BYTES_RECEIVED_COUNTER_009_HELP=Bytes Received/sec is the rate that data bytes are received by the NNTP Server.

NNTP_BYTES_TOTAL_COUNTER_009_NAME=Bytes Total/sec
NNTP_BYTES_TOTAL_COUNTER_009_HELP=Bytes Total/sec is the sum of Bytes Sent/sec and Bytes Received/sec.  This is the total rate of bytes transferred by the NNTP Server.

NNTP_TOTAL_CONNECTIONS_COUNTER_009_NAME=Total Connections
NNTP_TOTAL_CONNECTIONS_COUNTER_009_HELP=Total Connections is the number of connections that have been made to the NNTP Server.

NNTP_TOTAL_SSL_CONNECTIONS_COUNTER_009_NAME=Total SSL Connections
NNTP_TOTAL_SSL_CONNECTIONS_COUNTER_009_HELP=Total SSL Connections is the number of SSL connections that have been made to the NNTP Server.

NNTP_CURRENT_CONNECTIONS_COUNTER_009_NAME=Current Connections
NNTP_CURRENT_CONNECTIONS_COUNTER_009_HELP=Current Connections is the current number of connections to the NNTP Server.

NNTP_MAX_CONNECTIONS_COUNTER_009_NAME=Maximum Connections
NNTP_MAX_CONNECTIONS_COUNTER_009_HELP=Maximum Connections is the maximum number of simultaneous connections to the NNTP Server.

NNTP_CURRENT_ANONYMOUS_COUNTER_009_NAME=Current Anonymous Users
NNTP_CURRENT_ANONYMOUS_COUNTER_009_HELP=Current Anonymous Users is the number of anonymous users currently connected to the NNTP Server.

NNTP_CURRENT_NONANONYMOUS_COUNTER_009_NAME=Current NonAnonymous Users
NNTP_CURRENT_NONANONYMOUS_COUNTER_009_HELP=Current NonAnonymous Users is the number of nonanonymous users currently connected to the NNTP Server.

NNTP_TOTAL_ANONYMOUS_COUNTER_009_NAME=Total Anonymous Users
NNTP_TOTAL_ANONYMOUS_COUNTER_009_HELP=Total Anonymous Users is the total number of anonymous users that have ever connected to the NNTP Server.

NNTP_TOTAL_NONANONYMOUS_COUNTER_009_NAME=Total NonAnonymous Users
NNTP_TOTAL_NONANONYMOUS_COUNTER_009_HELP=Total NonAnonymous Users is the total number of nonanonymous users that have ever connected to the NNTP Server.

NNTP_MAX_ANONYMOUS_COUNTER_009_NAME=Maximum Anonymous Users
NNTP_MAX_ANONYMOUS_COUNTER_009_HELP=Maximum Anonymous Users is the maximum number of anonymous users simultaneously connected to the NNTP Server.

NNTP_MAX_NONANONYMOUS_COUNTER_009_NAME=Maximum NonAnonymous Users
NNTP_MAX_NONANONYMOUS_COUNTER_009_HELP=Maximum NonAnonymous Users is the maximum number of nonanonymous users simultaneously connected to the NNTP Server.

NNTP_TOTAL_OUTBOUND_CONNECTS_COUNTER_009_NAME=Total Outbound Connections
NNTP_TOTAL_OUTBOUND_CONNECTS_COUNTER_009_HELP=Total Outbound Connections is the number of outbound connections that have been made by the NNTP Server.

NNTP_OUTBOUND_CONNECTS_FAILED_COUNTER_009_NAME=Total Outbound Connections Failed
NNTP_OUTBOUND_CONNECTS_FAILED_COUNTER_009_HELP=Total Outbound Connections Failed is the number of unsucessful outbound connections that have been made by the NNTP Server.

NNTP_CURRENT_OUTBOUND_CONNECTS_COUNTER_009_NAME=Current Outbound Connections
NNTP_CURRENT_OUTBOUND_CONNECTS_COUNTER_009_HELP=Current Outbound Connections is the number of current outbound connections being made by the NNTP Server.

NNTP_OUTBOUND_LOGON_FAILED_COUNTER_009_NAME=Failed Outbound Logons
NNTP_OUTBOUND_LOGON_FAILED_COUNTER_009_HELP=Failed Outbound Logons is the number of failed outbound logons made by the NNTP Server.

NNTP_TOTAL_PUSH_FEEDS_COUNTER_009_NAME=Total Push Feeds
NNTP_TOTAL_PUSH_FEEDS_COUNTER_009_HELP=Total Push Feeds is the number of push feeds made by the NNTP Server.

NNTP_TOTAL_PULL_FEEDS_COUNTER_009_NAME=Total Pull Feeds
NNTP_TOTAL_PULL_FEEDS_COUNTER_009_HELP=Total Pull Feeds is the number of pull feeds made by the NNTP Server.

NNTP_TOTAL_PASSIVE_FEEDS_COUNTER_009_NAME=Total Passive Feeds
NNTP_TOTAL_PASSIVE_FEEDS_COUNTER_009_HELP=Total Passive Feeds is the number of passive feeds accepted by the NNTP Server.

NNTP_ARTICLES_SENT_COUNTER_009_NAME=Articles Sent
NNTP_ARTICLES_SENT_COUNTER_009_HELP=Articles Sent is the total number of files sent by the NNTP Server.

NNTP_ARTICLES_RECEIVED_COUNTER_009_NAME=Articles Received
NNTP_ARTICLES_RECEIVED_COUNTER_009_HELP=Articles Received is the total number of files received by the NNTP Server.

NNTP_ARTICLES_TOTAL_COUNTER_009_NAME=Articles Total
NNTP_ARTICLES_TOTAL_COUNTER_009_HELP=Articles Total is the sum of Articles Sent and Articles Received.  This is the total number of files transferred by the NNTP Server.

NNTP_ARTICLES_POSTED_COUNTER_009_NAME=Articles Posted
NNTP_ARTICLES_POSTED_COUNTER_009_HELP=Articles Posted is the number of articles posted to the NNTP Server.

NNTP_ARTICLE_MAP_ENTRIES_COUNTER_009_NAME=Article Map Entries
NNTP_ARTICLE_MAP_ENTRIES_COUNTER_009_HELP=Article Map Entries is the entries inserted into the article mapping table of the NNTP Server.

NNTP_HISTORY_MAP_ENTRIES_COUNTER_009_NAME=History Map Entries
NNTP_HISTORY_MAP_ENTRIES_COUNTER_009_HELP=History Map Entries is the entries inserted into the history mapping table of the NNTP Server.

NNTP_XOVER_ENTRIES_COUNTER_009_NAME=Xover Entries
NNTP_XOVER_ENTRIES_COUNTER_009_HELP=Xover Entries is the number of xover entries in the xover table table of the NNTP Server.

NNTP_CONTROL_MSGS_IN_COUNTER_009_NAME=Control Messages Received  
NNTP_CONTROL_MSGS_IN_COUNTER_009_HELP=Control Messages Received is the total number of control messages received by the NNTP Server.

NNTP_CONTROL_MSGS_FAILED_COUNTER_009_NAME=Control Messages Failed
NNTP_CONTROL_MSGS_FAILED_COUNTER_009_HELP=Control Messages Failed is the total number of control messages failed or not applied by the NNTP Server.        

NNTP_MODERATED_POSTINGS_SENT_COUNTER_009_NAME=Moderated Postings Sent
NNTP_MODERATED_POSTINGS_SENT_COUNTER_009_HELP=Moderated Postings Sent is the total number of moderated postings the NNTP Server attempts to send to an SMTP Server.    

NNTP_MODERATED_POSTINGS_FAILED_COUNTER_009_NAME=Moderated Postings Failed  
NNTP_MODERATED_POSTINGS_FAILED_COUNTER_009_HELP=Moderated Postings Failed is the total number of moderated postings the NNTP Server fails to send to an SMTP Server.    

NNTP_SESS_FLOW_CONTROL_COUNTER_009_NAME=Sessions Flow Controlled
NNTP_SESS_FLOW_CONTROL_COUNTER_009_HELP=Sessions Flow Control is the number of client sessions currently in a flow controlled state in the NNTP Server.

NNTP_ARTICLES_EXPIRED_COUNTER_009_NAME=Articles Deleted
NNTP_ARTICLES_EXPIRED_COUNTER_009_HELP=Articles Deleted is the number of articles deleted on the NNTP Server since it was started.

NNTP_ARTICLES_SENT_PERSEC_COUNTER_009_NAME=Articles Sent/Sec
NNTP_ARTICLES_SENT_PERSEC_COUNTER_009_HELP=Articles Sent/Sec is the total number of files sent per sec by the NNTP Server.

NNTP_ARTICLES_RECEIVED_PERSEC_COUNTER_009_NAME=Articles Received/Sec
NNTP_ARTICLES_RECEIVED_PERSEC_COUNTER_009_HELP=Articles Received/Sec is the total number of files per sec received by the NNTP Server.

NNTP_ARTICLES_POSTED_PERSEC_COUNTER_009_NAME=Articles Posted/Sec
NNTP_ARTICLES_POSTED_PERSEC_COUNTER_009_HELP=Articles Posted/Sec is the number of articles posted per sec to the NNTP Server.

NNTP_ARTICLE_MAP_ENTRIES_PERSEC_COUNTER_009_NAME=Article Map Entries/Sec
NNTP_ARTICLE_MAP_ENTRIES_PERSEC_COUNTER_009_HELP=Article Map Entries/Sec is the entries inserted per sec into the article mapping table of the NNTP Server.

NNTP_HISTORY_MAP_ENTRIES_PERSEC_COUNTER_009_NAME=History Map Entries/Sec
NNTP_HISTORY_MAP_ENTRIES_PERSEC_COUNTER_009_HELP=History Map Entries/Sec is the entries inserted per sec into the history mapping table of the NNTP Server.

NNTP_XOVER_ENTRIES_PERSEC_COUNTER_009_NAME=Xover Entries/Sec
NNTP_XOVER_ENTRIES_PERSEC_COUNTER_009_HELP=Xover Entries/Sec is the number of xover entries inserted per sec in the xover table table of the NNTP Server.

NNTP_ARTICLES_EXPIRED_PERSEC_COUNTER_009_NAME=Articles Deleted/Sec
NNTP_ARTICLES_EXPIRED_PERSEC_COUNTER_009_HELP=Articles Deleted/Sec is the number of articles deleted per sec on the NNTP Server since it was started.

NNTP_COUNTER_OBJECT2_009_NAME=NNTP Commands
NNTP_COUNTER_OBJECT2_009_HELP=The NNTP Commands object includes counters for all NNTP commands processed by the NNTP service.

NNTP_CMDS_ARTICLE_COUNTER_009_NAME=Article Commands
NNTP_CMDS_ARTICLE_COUNTER_009_HELP=Article Commands is the number of ARTICLE commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_ARTICLE_COUNTER_009_NAME=Article Commands/Sec
NNTP_CMDS_PERSEC_ARTICLE_COUNTER_009_HELP=Article Commands/Sec is the number of ARTICLE commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_GROUP_COUNTER_009_NAME=Group Commands
NNTP_CMDS_GROUP_COUNTER_009_HELP=Group Commands is the number of GROUP commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_GROUP_COUNTER_009_NAME=Group Commands/Sec
NNTP_CMDS_PERSEC_GROUP_COUNTER_009_HELP=Group Commands/Sec is the number of GROUP commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_HELP_COUNTER_009_NAME=Help Commands
NNTP_CMDS_HELP_COUNTER_009_HELP=Help Commands is the number of HELP commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_HELP_COUNTER_009_NAME=Help Commands/Sec
NNTP_CMDS_PERSEC_HELP_COUNTER_009_HELP=Help Commands/Sec is the number of HELP commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_IHAVE_COUNTER_009_NAME=IHave Commands
NNTP_CMDS_IHAVE_COUNTER_009_HELP=IHave Commands is the number of IHAVE commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_IHAVE_COUNTER_009_NAME=IHave Commands/Sec
NNTP_CMDS_PERSEC_IHAVE_COUNTER_009_HELP=IHave Commands/Sec is the number of IHAVE commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_LAST_COUNTER_009_NAME=Last Commands
NNTP_CMDS_LAST_COUNTER_009_HELP=Last Commands is the number of LAST commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_LAST_COUNTER_009_NAME=Last Commands/Sec
NNTP_CMDS_PERSEC_LAST_COUNTER_009_HELP=Last Commands/Sec is the number of LAST commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_LIST_COUNTER_009_NAME=List Commands
NNTP_CMDS_LIST_COUNTER_009_HELP=List Commands is the number of LIST commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_LIST_COUNTER_009_NAME=List Commands/Sec
NNTP_CMDS_PERSEC_LIST_COUNTER_009_HELP=List Commands/Sec is the number of LIST commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_NEWGROUPS_COUNTER_009_NAME=Newgroups Commands
NNTP_CMDS_NEWGROUPS_COUNTER_009_HELP=Newgroups Commands is the number of NEWGROUPS commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_NEWGROUPS_COUNTER_009_NAME=Newgroups Commands/Sec
NNTP_CMDS_PERSEC_NEWGROUPS_COUNTER_009_HELP=Newgroups Commands/Sec is the number of NEWGROUPS commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_NEWNEWS_COUNTER_009_NAME=Newnews Commands
NNTP_CMDS_NEWNEWS_COUNTER_009_HELP=Newnews Commands is the number of NEWNEWS commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_NEWNEWS_COUNTER_009_NAME=Newnews Commands/Sec
NNTP_CMDS_PERSEC_NEWNEWS_COUNTER_009_HELP=Newnews Commands/Sec is the number of NEWNEWS commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_NEXT_COUNTER_009_NAME=Next Commands
NNTP_CMDS_NEXT_COUNTER_009_HELP=Next Commands is the number of NEXT commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_NEXT_COUNTER_009_NAME=Next Commands/Sec
NNTP_CMDS_PERSEC_NEXT_COUNTER_009_HELP=Next Commands/Sec is the number of NEXT commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_POST_COUNTER_009_NAME=Post Commands
NNTP_CMDS_POST_COUNTER_009_HELP=Post Commands is the number of POST commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_POST_COUNTER_009_NAME=Post Commands/Sec
NNTP_CMDS_PERSEC_POST_COUNTER_009_HELP=Post Commands/Sec is the number of POST commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_QUIT_COUNTER_009_NAME=Quit Commands
NNTP_CMDS_QUIT_COUNTER_009_HELP=Quit Commands is the number of QUIT commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_QUIT_COUNTER_009_NAME=Quit Commands/Sec
NNTP_CMDS_PERSEC_QUIT_COUNTER_009_HELP=Quit Commands/Sec is the number of QUIT commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_STAT_COUNTER_009_NAME=Stat Commands
NNTP_CMDS_STAT_COUNTER_009_HELP=Stat Commands is the number of STAT commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_STAT_COUNTER_009_NAME=Stat Commands/Sec
NNTP_CMDS_PERSEC_STAT_COUNTER_009_HELP=Stat Commands/Sec is the number of STAT commands per sec received by the NNTP Server since it was started.

NNTP_LOGON_ATTEMPTS_COUNTER_009_NAME=Logon Attempts
NNTP_LOGON_ATTEMPTS_COUNTER_009_HELP=Logon Attempts is the number of logon attempts that have been made to the NNTP Server.

NNTP_LOGON_FAILURES_COUNTER_009_NAME=Logon Failures
NNTP_LOGON_FAILURES_COUNTER_009_HELP=Logon Failures is the number of logons that had failed.

NNTP_LOGON_ATTEMPTS_PERSEC_COUNTER_009_NAME=Logon Attempts/Sec
NNTP_LOGON_ATTEMPTS_PERSEC_COUNTER_009_HELP=Logon Attempts/Sec is the number of logon attempts per sec that have been made to the NNTP Server.

NNTP_LOGON_FAILURES_PERSEC_COUNTER_009_NAME=Logon Failures/Sec
NNTP_LOGON_FAILURES_PERSEC_COUNTER_009_HELP=Logon Failures/Sec is the number of logons per sec that had failed.

NNTP_CMDS_CHECK_COUNTER_009_NAME=Check Commands
NNTP_CMDS_CHECK_COUNTER_009_HELP=Check Commands is the number of CHECK commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_CHECK_COUNTER_009_NAME=Check Commands/Sec
NNTP_CMDS_PERSEC_CHECK_COUNTER_009_HELP=Check Commands/Sec is the number of CHECK commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_TAKETHIS_COUNTER_009_NAME=Takethis Commands
NNTP_CMDS_TAKETHIS_COUNTER_009_HELP=Takethis Commands is the number of TAKETHIS commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_TAKETHIS_COUNTER_009_NAME=Takethis Commands/Sec
NNTP_CMDS_PERSEC_TAKETHIS_COUNTER_009_HELP=Takethis Commands/Sec is the number of TAKETHIS commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_MODE_COUNTER_009_NAME=Mode Commands
NNTP_CMDS_MODE_COUNTER_009_HELP=Mode Commands is the number of MODE commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_MODE_COUNTER_009_NAME=Mode Commands/Sec
NNTP_CMDS_PERSEC_MODE_COUNTER_009_HELP=Mode Commands/Sec is the number of MODE commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_SEARCH_COUNTER_009_NAME=Search Commands
NNTP_CMDS_SEARCH_COUNTER_009_HELP=Search Commands is the number of SEARCH commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_SEARCH_COUNTER_009_NAME=Search Commands/Sec
NNTP_CMDS_PERSEC_SEARCH_COUNTER_009_HELP=Search Commands/Sec is the number of SEARCH commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_XHDR_COUNTER_009_NAME=XHdr Commands
NNTP_CMDS_XHDR_COUNTER_009_HELP=XHdr Commands is the number of XHDR commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_XHDR_COUNTER_009_NAME=XHdr Commands/Sec
NNTP_CMDS_PERSEC_XHDR_COUNTER_009_HELP=XHdr Commands/Sec is the number of XHDR commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_XOVER_COUNTER_009_NAME=XOver Commands
NNTP_CMDS_XOVER_COUNTER_009_HELP=XOver Commands is the number of XOVER commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_XOVER_COUNTER_009_NAME=XOver Commands/Sec
NNTP_CMDS_PERSEC_XOVER_COUNTER_009_HELP=XOver Commands/Sec is the number of XOVER commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_XPAT_COUNTER_009_NAME=XPat Commands
NNTP_CMDS_XPAT_COUNTER_009_HELP=XPat Commands is the number of XPAT commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_XPAT_COUNTER_009_NAME=XPat Commands/Sec
NNTP_CMDS_PERSEC_XPAT_COUNTER_009_HELP=XPat Commands/Sec is the number of XPAT commands per sec received by the NNTP Server since it was started.

NNTP_CMDS_XREPLIC_COUNTER_009_NAME=XReplic Commands
NNTP_CMDS_XREPLIC_COUNTER_009_HELP=XReplic Commands is the number of XREPLIC commands received by the NNTP Server since it was started.

NNTP_CMDS_PERSEC_XREPLIC_COUNTER_009_NAME=XReplic Commands/Sec
NNTP_CMDS_PERSEC_XREPLIC_COUNTER_009_HELP=XReplic Commands/Sec is the number of XREPLIC commands per sec received by the NNTP Server since it was started.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\nntp\server\seo\ddrop\readme.txt ===
DDrop.DLL

This SDK sample handles directory drop.

When a News article arrives, this sample drops a copy of the 
article into the specify drop directory.

To build this sample, you need VC5.

* Modify SDKENV.BAT to reflect the correct root path to your SDK.
  If C:\NNTPSDK is your SDK root path, use "Set NNTPSDK=C:\NNTPSDK"
* Run SDKENV.BAT
* Execute "nmake /a /f makefile.vc" to build this sample.
* Run "REGSVR32 DDROP.DLL" to register this DLL.
* Modify regbind.cmd to bind to the expected event and set appropriate
  properties.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\smtp\smtpctrs\smtpctrs.ini ===
;//-- for lodctr.exe ----------------------------------------------------------
;//  IMPORTANT: in order for this file to be localizeable by espresso
;//  	the first comment line must contain the text 'lodctr.exe' (as above)
;//----------------------------------------------------------------------------

[info]
drivername=SmtpSvc
symbolfile=smtpctrs.h

[languages]
009=English

[text]
SMTP_COUNTER_OBJECT_009_NAME=SMTP Server
SMTP_COUNTER_OBJECT_009_HELP=The counters specific to the SMTP Server.

SMTP_BYTES_SENT_TTL_COUNTER_009_NAME=Bytes Sent Total
SMTP_BYTES_SENT_TTL_COUNTER_009_HELP=The total number of bytes sent.

SMTP_BYTES_SENT_PER_SEC_COUNTER_009_NAME=Bytes Sent/sec
SMTP_BYTES_SENT_PER_SEC_COUNTER_009_HELP=The rate that bytes are sent.

SMTP_BYTES_RCVD_TTL_COUNTER_009_NAME=Bytes Received Total
SMTP_BYTES_RCVD_TTL_COUNTER_009_HELP=The total number of bytes received.

SMTP_BYTES_RCVD_PER_SEC_COUNTER_009_NAME=Bytes Received/sec
SMTP_BYTES_RCVD_PER_SEC_COUNTER_009_HELP=The rate that bytes are received.

SMTP_BYTES_TTL_COUNTER_009_NAME=Bytes Total
SMTP_BYTES_TTL_COUNTER_009_HELP=The total number of bytes sent and received.

SMTP_BYTES_TTL_PER_SEC_COUNTER_009_NAME=Bytes Total/sec
SMTP_BYTES_TTL_PER_SEC_COUNTER_009_HELP=The rate that bytes are sent and received.

SMTP_BYTES_SENT_MSG_COUNTER_009_NAME=Message Bytes Sent Total
SMTP_BYTES_SENT_MSG_COUNTER_009_HELP=The total number of bytes sent in messages.

SMTP_BYTES_SENT_MSG_PER_SEC_COUNTER_009_NAME=Message Bytes Sent/sec
SMTP_BYTES_SENT_MSG_PER_SEC_COUNTER_009_HELP=The rate that bytes are sent in messages.

SMTP_BYTES_RCVD_MSG_COUNTER_009_NAME=Message Bytes Received Total
SMTP_BYTES_RCVD_MSG_COUNTER_009_HELP=The total number of bytes received in messages.

SMTP_BYTES_RCVD_MSG_PER_SEC_COUNTER_009_NAME=Message Bytes Received/sec
SMTP_BYTES_RCVD_MSG_PER_SEC_COUNTER_009_HELP=The rate that bytes are received in messages.

SMTP_BYTES_MSG_COUNTER_009_NAME=Message Bytes Total
SMTP_BYTES_MSG_COUNTER_009_HELP=The total number of bytes sent and received in messages.

SMTP_BYTES_MSG_PER_SEC_COUNTER_009_NAME=Message Bytes Total/sec
SMTP_BYTES_MSG_PER_SEC_COUNTER_009_HELP=The rate that bytes are sent and received in messages.

SMTP_MSG_RCVD_TTL_COUNTER_009_NAME=Messages Received Total
SMTP_MSG_RCVD_TTL_COUNTER_009_HELP=The total number of inbound messages accepted.

SMTP_MSG_RCVD_PER_SEC_COUNTER_009_NAME=Messages Received/sec
SMTP_MSG_RCVD_PER_SEC_COUNTER_009_HELP=The rate that inbound messages are being received.

SMTP_AVG_RCPTS_PER_MSG_RCVD_COUNTER_009_NAME=Avg Recipients/msg Received
SMTP_AVG_RCPTS_PER_MSG_RCVD_COUNTER_009_HELP=The average number of recipients per inbound message received.

SMTP_BASE_AVG_RCPTS_PER_MSG_RCVD_COUNTER_009_NAME=Base Avg Recipients/msg Received
SMTP_BASE_AVG_RCPTS_PER_MSG_RCVD_COUNTER_009_HELP=Base Avg Recipients/msg Received (SHOULD BE HIDDEN)

SMTP_PCT_LCL_RCPTS_PER_MSG_RCVD_COUNTER_009_NAME=% Recipients Local
SMTP_PCT_LCL_RCPTS_PER_MSG_RCVD_COUNTER_009_HELP=The percentage of recipients that will be delivered locally.

SMTP_BASE_PCT_LCL_RCPTS_PER_MSG_RCVD_COUNTER_009_NAME=Base % Recipients Local
SMTP_BASE_PCT_LCL_RCPTS_PER_MSG_RCVD_COUNTER_009_HELP=Base % Recipients Local (SHOULD BE HIDDEN)

SMTP_PCT_RMT_RCPTS_PER_MSG_RCVD_COUNTER_009_NAME=% Recipients Remote
SMTP_PCT_RMT_RCPTS_PER_MSG_RCVD_COUNTER_009_HELP=The percentage of recipients that will be delivered remotely.

SMTP_BASE_PCT_RMT_RCPTS_PER_MSG_RCVD_COUNTER_009_NAME=Base % Recipients Remote
SMTP_BASE_PCT_RMT_RCPTS_PER_MSG_RCVD_COUNTER_009_HELP=Base % Recipients Remote (SHOULD BE HIDDEN)

SMTP_MSG_RCVD_REFUSED_SIZE_COUNTER_009_NAME=Messages Refused for Size
SMTP_MSG_RCVD_REFUSED_SIZE_COUNTER_009_HELP=The total number of messages rejected because they were too big.

SMTP_MSG_RCVD_REFUSED_CADDR_COUNTER_009_NAME=Messages Refused for Address Objects
SMTP_MSG_RCVD_REFUSED_CADDR_COUNTER_009_HELP=The total number of messages refused due to no address objects.

SMTP_MSG_RCVD_REFUSED_MAIL_COUNTER_009_NAME=Messages Refused for Mail Objects
SMTP_MSG_RCVD_REFUSED_MAIL_COUNTER_009_HELP=The total number of messages refused due to no mail objects.

SMTP_MSG_DLVR_TTL_COUNTER_009_NAME=Messages Delivered Total
SMTP_MSG_DLVR_TTL_COUNTER_009_HELP=The total number of messages delivered to local mailboxes.

SMTP_MSG_DLVR_PER_SEC_COUNTER_009_NAME=Messages Delivered/sec
SMTP_MSG_DLVR_PER_SEC_COUNTER_009_HELP=The rate that messages are delivered to local mailboxes.

SMTP_MSG_DLVR_RETRIES_TTL_COUNTER_009_NAME=Message Delivery Retries
SMTP_MSG_DLVR_RETRIES_TTL_COUNTER_009_HELP=The total number of local deliveries that were retried.

SMTP_AVG_RETRIES_PER_MSG_DLVR_COUNTER_009_NAME=Avg Retries/msg Delivered
SMTP_AVG_RETRIES_PER_MSG_DLVR_COUNTER_009_HELP=The average number of retries per local delivery.

SMTP_BASE_AVG_RETRIES_PER_MSG_DLVR_COUNTER_009_NAME=Base Avg Retries/msg Delivered
SMTP_BASE_AVG_RETRIES_PER_MSG_DLVR_COUNTER_009_HELP=Base Avg Retries/msg Delivered (SHOULD BE HIDDEN)

SMTP_MSG_FWD_TTL_COUNTER_009_NAME=Pickup Directory Messages Retrieved Total
SMTP_MSG_FWD_TTL_COUNTER_009_HELP=The total number of messages retrieved from the mail pick-up directory.

SMTP_MSG_FWD_PER_SEC_COUNTER_009_NAME=Pickup Directory Messages Retrieved/sec
SMTP_MSG_FWD_PER_SEC_COUNTER_009_HELP=The rate that messages are being retrieved from the mail pick-up directory.

SMTP_NDR_GENERATED_COUNTER_009_NAME=NDRs Generated
SMTP_NDR_GENERATED_COUNTER_009_HELP=The number of non-delivery reports that have been generated.

SMTP_LOCALQ_LENGTH_COUNTER_009_NAME=Local Queue Length
SMTP_LOCALQ_LENGTH_COUNTER_009_HELP=The number of messages in the local queue.

SMTP_RETRYQ_LENGTH_COUNTER_009_NAME=Local Retry Queue Length
SMTP_RETRYQ_LENGTH_COUNTER_009_HELP=The number of messages in the local retry queue.

SMTP_NUM_MAILFILE_HANDLES_COUNTER_009_NAME=Number of MailFiles Open
SMTP_NUM_MAILFILE_HANDLES_COUNTER_009_HELP=Number of handles to open mail files.

SMTP_NUM_QUEUEFILE_HANDLES_COUNTER_009_NAME=Number of QueueFiles Open
SMTP_NUM_QUEUEFILE_HANDLES_COUNTER_009_HELP=Number of handles to open queue files.

SMTP_CATQ_LENGTH_COUNTER_009_NAME=Categorizer Queue Length
SMTP_CATQ_LENGTH_COUNTER_009_HELP=The number of messages in the categorizer queue.

SMTP_MSG_SENT_TTL_COUNTER_009_NAME=Messages Sent Total
SMTP_MSG_SENT_TTL_COUNTER_009_HELP=The total number of outbound messages sent.

SMTP_MSG_SENT_PER_SEC_COUNTER_009_NAME=Messages Sent/sec
SMTP_MSG_SENT_PER_SEC_COUNTER_009_HELP=The rate that outbound messages are being sent.

SMTP_MSG_SEND_RETRIES_TTL_COUNTER_009_NAME=Message Send Retries
SMTP_MSG_SEND_RETRIES_TTL_COUNTER_009_HELP=The total number of outbound message sends that were retried.

SMTP_AVG_RETRIES_PER_MSG_SEND_COUNTER_009_NAME=Avg Retries/msg Sent
SMTP_AVG_RETRIES_PER_MSG_SEND_COUNTER_009_HELP=The average number of retries per outbound message sent.

SMTP_BASE_AVG_RETRIES_PER_MSG_SEND_COUNTER_009_NAME=Base Avg Retries/msg Sent
SMTP_BASE_AVG_RETRIES_PER_MSG_SEND_COUNTER_009_HELP=Base Avg Retries/msg Sent (SHOULD BE HIDDEN)

SMTP_AVG_RCPTS_PER_MSG_SENT_COUNTER_009_NAME=Avg Recipients/msg Sent
SMTP_AVG_RCPTS_PER_MSG_SENT_COUNTER_009_HELP=The average number of recipients per outbound messages sent.

SMTP_BASE_AVG_RCPTS_PER_MSG_SENT_COUNTER_009_NAME=Base Avg Recipients/msg Sent
SMTP_BASE_AVG_RCPTS_PER_MSG_SENT_COUNTER_009_HELP=Base Avg Recipients/msg Sent (SHOULD BE HIDDEN)

SMTP_REMOTEQ_LENGTH_COUNTER_009_NAME=Remote Queue Length
SMTP_REMOTEQ_LENGTH_COUNTER_009_HELP=The number of messages in the remote queue.

SMTP_DNS_QUERIES_TTL_COUNTER_009_NAME=DNS Queries Total
SMTP_DNS_QUERIES_TTL_COUNTER_009_HELP=The total number of DNS lookups.

SMTP_DNS_QUERIES_PER_SEC_COUNTER_009_NAME=DNS Queries/sec
SMTP_DNS_QUERIES_PER_SEC_COUNTER_009_HELP=The rate of DNS lookups.

SMTP_REMOTE_RETRY_QUEUE_LENGTH_COUNTER_009_NAME=Remote Retry Queue Length
SMTP_REMOTE_RETRY_QUEUE_LENGTH_COUNTER_009_HELP=The number of messages in the retry queue for remote delivery.

SMTP_CONN_IN_TTL_COUNTER_009_NAME=Inbound Connections Total
SMTP_CONN_IN_TTL_COUNTER_009_HELP=The total number of inbound connections received.

SMTP_CONN_IN_CURR_COUNTER_009_NAME=Inbound Connections Current
SMTP_CONN_IN_CURR_COUNTER_009_HELP=The total number of connections currently inbound.

SMTP_CONN_OUT_TTL_COUNTER_009_NAME=Outbound Connections Total
SMTP_CONN_OUT_TTL_COUNTER_009_HELP=The total number of outbound connections attempted.

SMTP_CONN_OUT_CURR_COUNTER_009_NAME=Outbound Connections Current
SMTP_CONN_OUT_CURR_COUNTER_009_HELP=The number of connections currently outbound.

SMTP_CONN_OUT_REFUSED_COUNTER_009_NAME=Outbound Connections Refused
SMTP_CONN_OUT_REFUSED_COUNTER_009_HELP=The number of outbound connection attempts refused by remote sites.

SMTP_ERR_TTL_COUNTER_009_NAME=Total Connection Errors
SMTP_ERR_TTL_COUNTER_009_HELP=The total number of connection errors.

SMTP_ERR_PER_SEC_COUNTER_009_NAME=Connection Errors/sec
SMTP_ERR_PER_SEC_COUNTER_009_HELP=The number of connection errors per second.

SMTP_DIR_DROPS_TTL_COUNTER_009_NAME=Directory Drops Total
SMTP_DIR_DROPS_TTL_COUNTER_009_HELP=The total number of messages placed in a drop directory.

SMTP_DIR_DROPS_PER_SEC_COUNTER_009_NAME=Directory Drops/sec
SMTP_DIR_DROPS_PER_SEC_COUNTER_009_HELP=The number of messages placed in a drop directory per second.

SMTP_RT_LOOKUPS_TTL_COUNTER_009_NAME=Routing Table Lookups Total
SMTP_RT_LOOKUPS_TTL_COUNTER_009_HELP=The total number of routing table lookups.

SMTP_RT_LOOKUPS_PER_SEC_COUNTER_009_NAME=Routing Table Lookups/sec
SMTP_RT_LOOKUPS_PER_SEC_COUNTER_009_HELP=The number of routing table lookups per second.

SMTP_ETRN_MSGS_TTL_COUNTER_009_NAME=ETRN Messages Total
SMTP_ETRN_MSGS_TTL_COUNTER_009_HELP=The total number of ETRN messages received by the server.

SMTP_ETRN_MSGS_PER_SEC_COUNTER_009_NAME=ETRN Messages/sec
SMTP_ETRN_MSGS_PER_SEC_COUNTER_009_HELP=The number of ETRN messages per second.

SMTP_MSG_BADMAIL_NO_RECIPIENTS_COUNTER_009_NAME=Badmailed Messages (No Recipients)
SMTP_MSG_BADMAIL_NO_RECIPIENTS_COUNTER_009_HELP=The number of messages sent to badmail because they had no recipients.

SMTP_MSG_BADMAIL_HOP_COUNT_EXCEEDED_COUNTER_009_NAME=Badmailed Messages (Hop Count Exceeded)
SMTP_MSG_BADMAIL_HOP_COUNT_EXCEEDED_COUNTER_009_HELP=The number of messages sent to badmil becuase they had exceeded the maximum hop count.

SMTP_MSG_BADMAIL_FAILURE_GENERAL_COUNTER_009_NAME=Badmailed Messages (General Failure)
SMTP_MSG_BADMAIL_FAILURE_GENERAL_COUNTER_009_HELP=The number of messages sent to badmail for reasons not associated with a specific counter.

SMTP_MSG_BADMAIL_BAD_PICKUP_FILE_COUNTER_009_NAME=Badmailed Messages (Bad Pickup File)
SMTP_MSG_BADMAIL_BAD_PICKUP_FILE_COUNTER_009_HELP=The number of malformed pickup messages sent to badmail.

SMTP_MSG_BADMAIL_EVENT_COUNTER_009_NAME=Badmailed Messages (Triggered via Event)
SMTP_MSG_BADMAIL_EVENT_COUNTER_009_HELP=The number of messages sent to badmail at the request of a server event sink.

SMTP_MSG_BADMAIL_NDR_OF_DSN_COUNTER_009_NAME=Badmailed Messages (NDR of DSN)
SMTP_MSG_BADMAIL_NDR_OF_DSN_COUNTER_009_HELP=The number of Delivery Status Notifications sent to badmail becuase they could not be delivered.

SMTP_MSG_PENDING_ROUTING_COUNTER_009_NAME=Messages Pending Routing
SMTP_MSG_PENDING_ROUTING_COUNTER_009_HELP=The number of messages that have been categorized but not routed.

SMTP_MSG_PENDING_UNREACHABLE_LINK_COUNTER_009_NAME=Messages Currently Undeliverable
SMTP_MSG_PENDING_UNREACHABLE_LINK_COUNTER_009_HELP=The number of messages that have been reported as currently undeliverable by routing.

SMTP_SUBMITTED_MESSAGES_COUNTER_009_NAME=Total messages submitted
SMTP_SUBMITTED_MESSAGES_COUNTER_009_HELP=The total messages submitted to queuing for delivery.

SMTP_DSN_FAILURES_COUNTER_009_NAME=Total DSN Failures
SMTP_DSN_FAILURES_COUNTER_009_HELP=The total number of failed DSN generation attempts.

SMTP_MSG_IN_LOCAL_DELIVERY_COUNTER_009_NAME=Current Messages in Local Delivery
SMTP_MSG_IN_LOCAL_DELIVERY_COUNTER_009_HELP=The number of messages that are currently being processed by a server event sink for local delivery.

SMTP_CAT_SUBMISSIONS_COUNTER_009_NAME=Cat: Messages submitted
SMTP_CAT_SUBMISSIONS_COUNTER_009_HELP=The total number of messages submitted to the categorizer.

SMTP_CAT_SUBMISSIONS_PER_SEC_COUNTER_009_NAME=Cat: Messages submitted/sec
SMTP_CAT_SUBMISSIONS_PER_SEC_COUNTER_009_HELP=The rate that messages are being submitted to the categorizer.

SMTP_CAT_COMPLETIONS_COUNTER_009_NAME=Cat: Categorizations completed
SMTP_CAT_COMPLETIONS_COUNTER_009_HELP=The total number of messages submitted to categorizer that have finished categorization.

SMTP_CAT_COMPLETIONS_PER_SEC_COUNTER_009_NAME=Cat: Categorizations completed/sec
SMTP_CAT_COMPLETIONS_PER_SEC_COUNTER_009_HELP=The rate of categorizations completed.

SMTP_CAT_CURRENT_CATEGORIZATIONS_COUNTER_009_NAME=Cat: Categorizations in progress
SMTP_CAT_CURRENT_CATEGORIZATIONS_COUNTER_009_HELP=The number of categorizations in progress.

SMTP_CAT_SUCCEEDED_CATEGORIZATIONS_COUNTER_009_NAME=Cat: Categorizations completed successfully
SMTP_CAT_SUCCEEDED_CATEGORIZATIONS_COUNTER_009_HELP=The number of categorizations that completed without any errors.

SMTP_CAT_HARD_FAILURES_COUNTER_009_NAME=Cat: Categorizations failed (non-retryable error)
SMTP_CAT_HARD_FAILURES_COUNTER_009_HELP=The number of categorizations that failed with a hard error (not retryable).

SMTP_CAT_RETRY_FAILURES_COUNTER_009_NAME=Cat: Categorizations failed (retryable error)
SMTP_CAT_RETRY_FAILURES_COUNTER_009_HELP=The number of categorizations that failed with a retryable error.

SMTP_CAT_RETRY_OUTOFMEMORY_COUNTER_009_NAME=Cat: Categorizations failed (Out Of Memory)
SMTP_CAT_RETRY_OUTOFMEMORY_COUNTER_009_HELP=The number of categorizations that failed due to lack of available memory.

SMTP_CAT_RETRY_DSLOGON_COUNTER_009_NAME=Cat: Categorizations failed (DS logon failure)
SMTP_CAT_RETRY_DSLOGON_COUNTER_009_HELP=The number of categorizations that failed due to a DS logon failure

SMTP_CAT_RETRY_DSCONNECTION_COUNTER_009_NAME=Cat: Categorizations failed (DS connection failure)
SMTP_CAT_RETRY_DSCONNECTION_COUNTER_009_HELP=The number of categorizations that failed due to a DS connection failure

SMTP_CAT_RETRY_GENERIC_COUNTER_009_NAME=Cat: Categorizations failed (sink retryable error)
SMTP_CAT_RETRY_GENERIC_COUNTER_009_HELP=The number of categorizations that failed with a generic retryable error

SMTP_CAT_MSGS_OUT_COUNTER_009_NAME=Cat: Messages Categorized
SMTP_CAT_MSGS_OUT_COUNTER_009_HELP=The number of messages categorizer has submitted to queueing.

SMTP_CAT_MSGS_CREATED_COUNTER_009_NAME=Cat: Messages bifurcated
SMTP_CAT_MSGS_CREATED_COUNTER_009_HELP=The number of new messages created by the categorizer (bifurcation).

SMTP_CAT_MSGS_ABORTED_COUNTER_009_NAME=Cat: Messages aborted
SMTP_CAT_MSGS_ABORTED_COUNTER_009_HELP=The number of messages marked to be aborted by the categorizer.

SMTP_CAT_RECIPS_PRECAT_COUNTER_009_NAME=Cat: Recipients before categorization
SMTP_CAT_RECIPS_PRECAT_COUNTER_009_HELP=The number of mailmsg recipients submitted to categorizer.

SMTP_CAT_RECIPS_POSTCAT_COUNTER_009_NAME=Cat: Recipients after categorization
SMTP_CAT_RECIPS_POSTCAT_COUNTER_009_HELP=The number of mailmsg recipients submitted from categorizer to queueing.

SMTP_CAT_RECIPS_NDRD_COUNTER_009_NAME=Cat: Recipients NDRd by categorizer
SMTP_CAT_RECIPS_NDRD_COUNTER_009_HELP=The number of recipients set to be NDRd by the categorizer.

SMTP_CAT_RECIPS_UNRESOLVED_COUNTER_009_NAME=Cat: Recipients NDRd (unresolved)
SMTP_CAT_RECIPS_UNRESOLVED_COUNTER_009_HELP=The number of unresolved recipients (local addresses not found).

SMTP_CAT_RECIPS_AMBIGUOUS_COUNTER_009_NAME=Cat: Recipients NDRd (ambiguous address)
SMTP_CAT_RECIPS_AMBIGUOUS_COUNTER_009_HELP=The number of recipients with addresses that match multiple DS objects.

SMTP_CAT_RECIPS_ILLEGAL_COUNTER_009_NAME=Cat: Recipients NDRd (illegal address)
SMTP_CAT_RECIPS_ILLEGAL_COUNTER_009_HELP=The number of recipients with illegal addresses detected by the categorizer.

SMTP_CAT_RECIPS_LOOP_COUNTER_009_NAME=Cat: Recipients NDRd (forwarding loop)
SMTP_CAT_RECIPS_LOOP_COUNTER_009_HELP=The number of recipients NDRd by the categorizer due to a forwarding loop detection.

SMTP_CAT_RECIPS_GENERICFAILURE_COUNTER_009_NAME=Cat: Recipients NDRd (sink recip errors)
SMTP_CAT_RECIPS_GENERICFAILURE_COUNTER_009_HELP=The number of recipients NDRd by the categorizer due to a generic recipient failure.

SMTP_CAT_RECIPS_INMEMORY_COUNTER_009_NAME=Cat: Recipients in categorization
SMTP_CAT_RECIPS_INMEMORY_COUNTER_009_HELP=The number of recipients the categorizer is currently processing.

SMTP_CAT_SENDERS_UNRESOLVED_COUNTER_009_NAME=Cat: Senders unresolved
SMTP_CAT_SENDERS_UNRESOLVED_COUNTER_009_HELP=The number of senders not found in the DS.

SMTP_CAT_SENDERS_AMBIGUOUS_COUNTER_009_NAME=Cat: Senders with ambiguous addresses
SMTP_CAT_SENDERS_AMBIGUOUS_COUNTER_009_HELP=The number of senders with addresses that match multiple DS objects.

SMTP_CAT_ADDRESS_LOOKUPS_COUNTER_009_NAME=Cat: Address lookups
SMTP_CAT_ADDRESS_LOOKUPS_COUNTER_009_HELP=The number of DS lookups for individual addresses

SMTP_CAT_ADDRESS_LOOKUPS_PER_SEC_COUNTER_009_NAME=Cat: Address lookups/sec
SMTP_CAT_ADDRESS_LOOKUPS_PER_SEC_COUNTER_009_HELP=The number of address lookups dispatched to the DS per second

SMTP_CAT_ADDRESS_LOOKUP_COMPLETIONS_COUNTER_009_NAME=Cat: Address lookup completions
SMTP_CAT_ADDRESS_LOOKUP_COMPLETIONS_COUNTER_009_HELP=The number of address lookup completions processed

SMTP_CAT_ADDRESS_LOOKUP_COMPLETIONS_PER_SEC_COUNTER_009_NAME=Cat: Address lookup completions/sec
SMTP_CAT_ADDRESS_LOOKUP_COMPLETIONS_PER_SEC_COUNTER_009_HELP=The number of address lookup completions processed per second

SMTP_CAT_ADDRESS_LOOKUPS_NOT_FOUND_COUNTER_009_NAME=Cat: Address lookups not found
SMTP_CAT_ADDRESS_LOOKUPS_NOT_FOUND_COUNTER_009_HELP=The number of address lookups that did not find any DS object

SMTP_CAT_MAILMSG_DUPLICATE_COLLISIONS_COUNTER_009_NAME=Cat: mailmsg duplicate collisions
SMTP_CAT_MAILMSG_DUPLICATE_COLLISIONS_COUNTER_009_HELP=The number of times a duplicate recipient address was detected by mailmsg/categorizer.

SMTP_CAT_LDAP_CONNECTIONS_COUNTER_009_NAME=Cat: LDAP connections
SMTP_CAT_LDAP_CONNECTIONS_COUNTER_009_HELP=The total number of LDAP connections opened

SMTP_CAT_LDAP_CONNECTION_FAILURES_COUNTER_009_NAME=Cat: LDAP connection failures
SMTP_CAT_LDAP_CONNECTION_FAILURES_COUNTER_009_HELP=The total number of failures encountered connection to LDAP servers

SMTP_CAT_LDAP_OPEN_CONNECTIONS_COUNTER_009_NAME=Cat: LDAP connections currently open
SMTP_CAT_LDAP_OPEN_CONNECTIONS_COUNTER_009_HELP=The number of LDAP connections currently open

SMTP_CAT_LDAP_BINDS_COUNTER_009_NAME=Cat: LDAP binds
SMTP_CAT_LDAP_BINDS_COUNTER_009_HELP=The total number of successfull LDAP binds performed

SMTP_CAT_LDAP_BIND_FAILURES_COUNTER_009_NAME=Cat: LDAP bind failures
SMTP_CAT_LDAP_BIND_FAILURES_COUNTER_009_HELP=The total number of LDAP bind failures

SMTP_CAT_LDAP_SEARCHES_COUNTER_009_NAME=Cat: LDAP searches
SMTP_CAT_LDAP_SEARCHES_COUNTER_009_HELP=LDAP searches successfully dispatched

SMTP_CAT_LDAP_SEARCHES_PER_SEC_COUNTER_009_NAME=Cat: LDAP searches/sec
SMTP_CAT_LDAP_SEARCHES_PER_SEC_COUNTER_009_HELP=LDAP searches successfully dispatched/sec

SMTP_CAT_LDAP_PAGED_SEARCHES_COUNTER_009_NAME=Cat: LDAP paged searches
SMTP_CAT_LDAP_PAGED_SEARCHES_COUNTER_009_HELP=LDAP paged searches successfully dispatched

SMTP_CAT_LDAP_SEARCH_FAILURES_COUNTER_009_NAME=Cat: LDAP search failures
SMTP_CAT_LDAP_SEARCH_FAILURES_COUNTER_009_HELP=Number of failures to dispatch an async LDAP search

SMTP_CAT_LDAP_PAGED_SEARCH_FAILURES_COUNTER_009_NAME=Cat: LDAP paged search failures
SMTP_CAT_LDAP_PAGED_SEARCH_FAILURES_COUNTER_009_HELP=Number of failures to dispatch an async paged LDAP search

SMTP_CAT_LDAP_SEARCHES_COMPLETED_COUNTER_009_NAME=Cat: LDAP searches completed
SMTP_CAT_LDAP_SEARCHES_COMPLETED_COUNTER_009_HELP=Number of LDAP search completions processed

SMTP_CAT_LDAP_SEARCHES_COMPLETED_PER_SEC_COUNTER_009_NAME=Cat: LDAP searches completed/sec
SMTP_CAT_LDAP_SEARCHES_COMPLETED_PER_SEC_COUNTER_009_HELP=LDAP search completions processed/sec

SMTP_CAT_LDAP_PAGED_SEARCHES_COMPLETED_COUNTER_009_NAME=Cat: LDAP paged searches completed
SMTP_CAT_LDAP_PAGED_SEARCHES_COMPLETED_COUNTER_009_HELP=Number of paged LDAP completions processed

SMTP_CAT_LDAP_SEARCHES_COMPLETED_FAILURE_COUNTER_009_NAME=Cat: LDAP search completion failures
SMTP_CAT_LDAP_SEARCHES_COMPLETED_FAILURE_COUNTER_009_HELP=Number of LDAP searches that completed with a failure

SMTP_CAT_LDAP_PAGED_SEARCHES_COMPLETED_FAILURE_COUNTER_009_NAME=Cat: LDAP paged search completion failures
SMTP_CAT_LDAP_PAGED_SEARCHES_COMPLETED_FAILURE_COUNTER_009_HELP=Number of LDAP paged searches that completed with a failure

SMTP_CAT_LDAP_GENERAL_COMPLETION_FAILURES_COUNTER_009_NAME=Cat: LDAP general completion failures
SMTP_CAT_LDAP_GENERAL_COMPLETION_FAILURES_COUNTER_009_HELP=Number of LDAP completions with a generic failure

SMTP_CAT_LDAP_ABANDONED_SEARCHES_COUNTER_009_NAME=Cat: LDAP searches abandoned
SMTP_CAT_LDAP_ABANDONED_SEARCHES_COUNTER_009_HELP=Number of LDAP searches abandoned

SMTP_CAT_LDAP_PENDING_SEARCHES_COUNTER_009_NAME=Cat: LDAP searches pending completion
SMTP_CAT_LDAP_PENDING_SEARCHES_COUNTER_009_HELP=Number of LDAP searches pending async completon
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\smtp\storedrv\ntfsdrct.ini ===
[info]
drivername=ntfsdrv
symbolfile=ntfsdrct.h

[languages]
009=English

[text]
OBJECT_NTFSDRV_009_NAME=SMTP NTFS Store Driver
OBJECT_NTFSDRV_009_HELP=This object represents global counters for the Exchange NTFS Store driver

NTFSDRV_QUEUE_LENGTH_009_NAME=Messages in the queue directory
NTFSDRV_QUEUE_LENGTH_009_HELP=The current number of messages in the queue directory.

NTFSDRV_NUM_ALLOCS_009_NAME=Messages allocated
NTFSDRV_NUM_ALLOCS_009_HELP=The total number of messages allocated.

NTFSDRV_NUM_DELETES_009_NAME=Messages deleted
NTFSDRV_NUM_DELETES_009_HELP=The total number of messages deleted.

NTFSDRV_NUM_ENUMERATED_009_NAME=Messages enumerated
NTFSDRV_NUM_ENUMERATED_009_HELP=The total number of messages enumerated during startup.

NTFSDRV_MSG_BODIES_OPEN_009_NAME=Open message bodies
NTFSDRV_MSG_BODIES_OPEN_009_HELP=The current number of open message bodies.

NTFSDRV_MSG_STREAMS_OPEN_009_NAME=Open message streams
NTFSDRV_MSG_STREAMS_OPEN_009_HELP=The current number of open message streams.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\staxcore\dbgdumpx\readme.txt ===
Platinum CDB Extension Library:

General Usage:
  -include ptdbgext.h and link with ptdbgext.lib
  -define structure using macros described below
  -define globals ExtensionNames, Extensions, and g_pExtensionInitRoutine
  -Use DEFINE_EXPORTED_FUNCTIONS do define exported functions
  -Export "dump" and "help" from your dll using the def file
  -Copy extension dll to a directory in your path
  -Start CDB and attach to process
  -Type "!<dll name>.help" for help

Demo files:
  - extdemex directory contains sample application to debug
  - extdemdl directory contains sample CDB extension dll

Demo Usage:
  - Attach to process using "cdb /p <pid>"
  - Type "!extdemdl.help"... you'll see the following

Demo CDB debugger extensions
   help -- This command 
   dump <Struct Type Name>@<address expr> 

  - Type "dd extdemex!g_pMyClass l 1"... you'll see something like the following:
00402190  00313240

  - Using the 2nd number, type "!extdemdl.dump CMyClass@0x00313240":
0:001> !extdemdl.dump CMyClass@0x00313240
++++++++++++++++ CMyClass@313240 ++++++++++++++++
<... dump deleted>
    m_MyStruct                     @0x00313248
<... dump deleted>
---------------- CMyClass@313240 ----------------


  - Use the m_MyStruct field to dump the embeded structure 
    by typing "!extdemdl.dump MY_STRUCT@0x00313248"
++++++++++++++++ MY_STRUCT@313248 ++++++++++++++++
    m_cbName                       26              
    m_szName                       This is a MY_STRUCT struct
---------------- MY_STRUCT@313248 ----------------


** Macro usage from _dbgdump.h
//  Usage:
//      Create a head file that includes this file and defines your field
//      descriptors using only the following macros:
//
//      BIT MASKS:
//          BEGIN_BIT_MASK_DESCRIPTOR(BitMaskName) -
//              start bit mask descriptor
//          BIT_MASK_VALUE(Value) -
//              Give a defined value for a bit mask.  Uses #Value 
//              to describe the value.  If your bitmask values are
//              defined using #defines... then only the numerical
//              values will appear in the dump... use BIT_MASK_VALUE2
//              instead.
//          BIT_MASK_VALUE2(Value, Description) -
//              Give a value and description for a bit mask.
//          END_BIT_MASK_DESCRIPTOR
//              Mark the end of a bit mask descriptor
//
//      ENUMS:
//          BEGIN_ENUM_DESCRIPTOR(BitMaskName) -
//              start enum descriptor
//          ENUM_VALUE(Value) -
//              Give a defined value for a enum.  Uses #Value 
//              to describe the value.
//          ENUM_VALUE2(Value, Description) -
//              Give a value and description for a enum.
//          END__DESCRIPTOR -
//              Mark the end of a enum descriptor
//
//      STRUCTURES & CLASSES:
//          BEGIN_FIELD_DESCRIPTOR(FieldDescriptorName) - 
//              start field decscritor
//          FIELD3(FieldType, StructureName, FieldName) - 
//              define non-enum public field
//          FIELD4(FieldType, StructureName, FieldName, AuxInfo) - 
//              define enum public field
//              For FIELD4, you should pass one of the following to
//              to define the aux info:
//                  GET_ENUM_DESCRIPTOR(x)
//                  GET_BITMASK_DESCRIPTOR(x)
//              Where x is one of the values used to define a bit mask
//              or enum.
//              
//          END_FIELD_DESCRIPTOR -
//              Define end of field descriptors for class/struct
//
//      GLOBALS: - Used to tell ptdbgext what class/structures to dump
//          BEGIN_STRUCT_DESCRIPTOR -
//              Marks the begining of the global stuct descriptor
//          STRUCT(TypeName,FieldDescriptor) -
//              Defines a struct to dump.  TypeName is the name of the 
//              type, and FieldDescriptor is a name given in a 
//              BEGIN_FIELD_DESCRIPTOR.
//
//      NOTE: You must define bit masks & enums before classes and structures.  
//      You must also define the global STRUCT_DESCRIPTOR last.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\staxcore\randfail\randfail.txt ===
Randfail can be used to introduce "random" failures into debug builds in
order to test the error paths of your code.  This is done by causing certain
Win32 APIs to fail, or by instrumenting your code.

The following Win32 APIs will be instrumented in a debug build:
	CreateDirectory
	CreateDirectoryEx
	CreateEvent
	CreateFile
	CreateFileMapping
	CreateIoCompletionPort
	CreateMutex
	CreateProcess
	CreateSemaphore
	CreateThread
	GetQueuedCompletionStatus
	OpenEvent
	OpenFileMapping
	OpenMutex
	OpenProcess
	OpenSemaphore
	PostQueuedCompletionStatus
	ReadFile
	WriteFile

When an instrumented Win32 API fails, it will return the failure indicated
by the documentation, but will also SetLastError(ERROR_ARENA_TRASHED).


INSTRUMENTING YOUR CODE

In order for your code to use this library, you must include "randfail.h"
AFTER any other include files.  Also, you must link with exstrace.lib
and call InitAsyncTrace().  By default, the failure of Win32 APIs is
enabled.  If you wish to suppress this behavior, define the
preprocessor symbol NOFAIL_WIN32API.

User code may also be instrumented.  To determine if the failure path should
be taken, call fTimeToFail().  For example:

	#include <windows.h>
	#include "randfail.h"

	BOOL bOK;
	if (fTimeToFail()) {
		bOK = FALSE;
	} else {
		bOK = fMyFunction();
	}

	if (!bOK) {
		// Handle the error here
	}

To suppress the failures in user instrumented code, define NOFAIL_RANDOM.

 

ENABLING RANDOM FAILURES DURING EXECUTION

Before executing your program, you must set the frequency in which you
wish failures to occur in the registry.  Create the following key:

	SOFTWARE\Microsoft\MosTrace\CurrentVersion\DebugAsyncTrace
		FailureRate REG_DWORD nn

where nn is the frequency you wish the errors to occur (every nn calls
to an instrumented api.)  To disable the failures, either delete the
key or set it to zero.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\staxcore\staxmem\exchmem.ini ===
;
;	General memory management configuration parameters.
;
[Memory Management]
	;
	;	Virtual Memory
	;
	;	Turning on Virtual Memory forces all blocks to be aligned at the end of physical pages.  
	;	This will cause GP faults if the memory is accessed beyond it's allocation limit.
	;
	;	If Virtual Memory is enabled, then Virtual Align specifies the alignment of the block.  This MUST
	;	be 4 for non x86 machines (this is enforced internally by EXCHMEM.
	;
	VirtualMemory=0
	VirtualAlign=0

	;
	;	Leak Detection
	;
	;	If AssertLeaks is non 0, EXCHMEM will assert when a leak has been detected.
	;	If DumpLeaks is non 0, EXCHMEM will dump information about the leak to the <program>.MEM file located in the
	;		log path directory.
	;	If DumpLeaksToDebugger is non 0, EXCHMEM will dump information about the leak to the debugger using OutputDebugString.
	;	
	;
	AssertLeaks=0
	DumpLeaks=0
	DumpLeaksToDebugger=1
	
	;
	;	Memory Fill.
	;
	;	If FillMemory is non 0, EXCHMEM will fill allocated memory with the "AllocFillByte", and will fill 
	;	freed memory with the "FreeFillByte".  Note that the high bit should be on in both AllocFillByte 
	;	and FreeFillByte to force a GP fault if freed (or uninitialized) memory is ever accessed.
	;
	FillMemory=0
	AllocFillByte=0xFA
	FreeFillByte=0xCD

	;
	;	Heap monitoring
	;
	;	If MonitorHeap is non 0, and the DLL GLHMON32.DLL is present on the machine, This will invoke 
	;	the MAPI heap monitor on all created heaps.
	;
	MonitorHeap=0

	;
	;	If TrackMemory is non 0, this will cause all allocations and frees to be written to the <program>.TRK file
	;	located in the log path directory.  TrackMemoryInMemory keeps an array of
	;	<n> entries around containing the last memory functions called.  This array
	;	can be dumped using the xmdbgext.lib cdb extension functions DumpLast and
	;	DumpNear.
	;
	TrackMemory=0
	TrackMemoryInMemory=1000

	;	Symbol information
	;
	;	If SymbolLookup is non 0, EXCHMEM will perform a symbol lookup on addresses before dumping
	;	them to either the debugger or to the trace file.
	;
	;	StackFrames specifies the number of stack frames to capture when retrieving the call stack
	;		of allocations (and frees).
	;	SymPath specifies the symbol path to be used when looking for symbols.
	;
	SymbolLookup=1
	StackFrames=12
	SymPath=

	;
	;	If OverWriteDetect is non 0, this causes a 4 byte header and trailer to be added to each allocated
	;	block.  This header is validated on every heap validation, and when memory is freed.
	;
	OverwriteDetect=1

	;
	;	If ValidateMemory is set, then the block passed into every Realloc, Free, or HeapSize API is validated.
	;	If an invalid block is detected, then it is dumped to the <program>.VAL file in the log path directory.
	;
	;	If AssertValid is set, then an assert is raised when an invalid block is detected.
	;	If TrapOnInvalid is set, then a DebugBreak() exception is raised after the block was detected. 
	;
	ValidateMemory=1
	AssertValid=0
	TrapOnInvalid=1
	
	;	
	;	If TrackFreedMemory is set, EXCHMEM does not actually release freed blocks to the heap.  Instead, it keeps
	;	the blocks on a free list and checks to see if a block being freed is on that list.  This allows double
	;	frees to be detected.
	;
	;	FreeMemorySize is the number of freed blocks to maintain.
	;
	TrackFreedMemory=1
	FreedMemorySize=512

	;
	;	LogPath specifies the directory to write the <program>.TRK, <program>,MEM, and <program>.VAL files.
	;
	LogPath=c:\exchsrvr

;
;	Artifical failures.  This describes how often calls to the allocator should fail.
;
[Heap Resource Failures]
	FailuresEnabled=0
	AllocsToFirstFailure=0
	FailureInterval=0
	FailureSize=0
	FaultingAllocationNumber=0
;
;	The "Apps To Track" section specifies the applications that are to run
;	with EXCHMEM debugging enabled.  By default, debugging is NOT enabled.
;

[Apps To Track]
	mad=0
	store=0
	dsamain=0
	emsmta=0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan.ini ===
[options]

UseAllowVerbs=1                ; If 1, use [AllowVerbs] section, else use the
                               ; [DenyVerbs] section.

UseAllowExtensions=0           ; If 1, use [AllowExtensions] section, else use
                               ; the [DenyExtensions] section.

NormalizeUrlBeforeScan=1       ; If 1, canonicalize URL before processing.

VerifyNormalization=1          ; If 1, canonicalize URL twice and reject request
                               ; if a change occurs.

AllowHighBitCharacters=0       ; If 1, allow high bit (ie. UTF8 or MBCS)
                               ; characters in URL.

AllowDotInPath=0               ; If 1, allow dots that are not file extensions.

RemoveServerHeader=0           ; If 1, remove the 'Server' header from response.

EnableLogging=1                ; If 1, log UrlScan activity.

PerProcessLogging=0            ; If 1, the UrlScan.log filename will contain a PID
                               ; (ie. UrlScan.123.log).

AllowLateScanning=0            ; If 1, then UrlScan will load as a low priority
                               ; filter.

PerDayLogging=1                ; If 1, UrlScan will produce a new log each day with
                               ; activity in the form 'UrlScan.010101.log'.

UseFastPathReject=0            ; If 1, then UrlScan will not use the
                               ; RejectResponseUrl or allow IIS to log the request.

LogLongUrls=0                  ; If 1, then up to 128K per request can be logged.
                               ; If 0, then only 1k is allowed.

;
; If UseFastPathReject is 0, then UrlScan will send
; rejected requests to the URL specified by RejectResponseUrl.
; If not specified, '/<Rejected-by-UrlScan>' will be used.
;

RejectResponseUrl=

;
; LoggingDirectory can be used to specify the directory where the
; log file will be created.  This value should be the absolute path
; (ie. c:\some\path).  If not specified, then UrlScan will create
; the log in the same directory where the UrlScan.dll file is located.
;

LoggingDirectory=

;
; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
;

AlternateServerName=

[RequestLimits]

;
; The entries in this section impose limits on the length
; of allowed parts of requests reaching the server.
;
; It is possible to impose a limit on the length of the
; value of a specific request header by prepending "Max-" to the
; name of the header.  For example, the following entry would
; impose a limit of 100 bytes to the value of the
; 'Content-Type' header:
;
;   Max-Content-Type=100
;
; To list a header and not specify a maximum value, use 0
; (ie. 'Max-User-Agent=0').  Also, any headers not listed
; in this section will not be checked for length limits.
;
; There are 3 special case limits:
;
;   - MaxAllowedContentLength specifies the maximum allowed
;     numeric value of the Content-Length request header.  For
;     example, setting this to 1000 would cause any request
;     with a content length that exceeds 1000 to be rejected.
;     The default is 30000000.
;
;   - MaxUrl specifies the maximum length of the request URL,
;     not including the query string. The default is 260 (which
;     is equivalent to MAX_PATH).
;
;   - MaxQueryString specifies the maximum length of the query
;     string.  The default is 2048.
;

MaxAllowedContentLength=30000000
MaxUrl=260
MaxQueryString=2048

[AllowVerbs]

;
; The verbs (aka HTTP methods) listed here are those commonly
; processed by a typical IIS server.
;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST

[DenyVerbs]

;
; The verbs (aka HTTP methods) listed here are used for publishing
; content to an IIS server via WebDAV.
;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

PROPFIND
PROPPATCH
MKCOL
DELETE
PUT
COPY
MOVE
LOCK
UNLOCK
OPTIONS
SEARCH

[DenyHeaders]

;
; The following request headers alter processing of a
; request by causing the server to process the request
; as if it were intended to be a WebDAV request, instead
; of a request to retrieve a resource.
;

Translate:
If:
Lock-Token:
Transfer-Encoding:

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;
; Also note that ASP scripts are denied with the below
; settings.  If you wish to enable ASP, remove the
; following extensions from this list:
;    .asp
;    .cer
;    .cdx
;    .asa
;

; Deny ASP requests
.asp
.cer
.cdx
.asa

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_biztalk.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=0       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=0               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=0            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST
PUT
PROPFIND
MKCOL
DELETE
OPTIONS

[DenyVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

PROPPATCH
COPY
MOVE
LOCK
UNLOCK
SEARCH

[DenyHeaders]

;
; Request headers listed in this section will cause UrlScan to 
; reject any request in which they are present. 
;
; Headers should be listed in the form 
;   Header-Name:
;

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan.txt ===
Description:
------------

UrlScan is an ISAPI filter to analyze and screen HTTP requests being made to
Microsoft Internet Information Services (IIS).  When properly configured,
UrlScan is effective at reducing the exposure of an IIS server to potential
attacks on the internet.

This filter allows the administrator to configure IIS to reject requests based
on the following criteria:

 - The request method (verb)
 - The file extension of the resource requested
 - Suspicious URL encoding
 - Presence of non ASCII characters in the URL
 - Presence of particular character sequences in the URL
 - Presence of particular headers in the request

In the event a request is denied by UrlScan, the action will be logged with
the reason for the denial and information about the request (typically, the
complete URL and IP address of the source of the request will be logged).
When a denial occurs, the response to the client is a simple "404 Object
not found" response.  This response reduces the possibility of inadvertently
disclosing any information about the nature of the server to a possible
attacker.

Also, UrlScan provides the administrator with the option of deleting or
altering the "Server:" header in the response.

It is important to note that the strategy that UrlScan uses to protect a
server from attacks is that it "turns off" functionality that's not being
used by the server.  The default UrlScan.ini file included with this sample
assumes that the server will be serving static content (HTML files, images,
etc.) and ASP pages.  It further assumes that you are not using CGI (.exe)
pages, not publishing content via WebDAV or FrontPage Server Extensions,
not using Index Server, not using Internet Printing, not using Server Side
Includes, etc.  Each of the settings in the sample UrlScan.ini file is
commented to reflect which feature it's associated with.  If you need to
modify the UrlScan.ini file to "turn on" one of these features, it is
important that you search for relevant patches at
http://www.microsoft.com/technet/security.

To Install:
-----------

Use the following steps in Internet Service Manager to install UrlScan as
a global filter (note that UrlScan may be installed as a site filter, but it
is recommended that it be installed as a global filter so that its
functionality applies to the entire server):

1. Copy UrlScan.dll and UrlScan.ini into a local directory on the server.

2. Right Click the server name (not the site name) under Internet Information
Services in MMC and select Properties.

3. Ensure that "WWW Service" is displayed in the Master Properties drop down
list, and click on the Edit button.

4. Choose the "ISAPI Filters" tab and click on the Add button.

5. On the Filter Properties dialog, enter "UrlScan" (without the quotes)
in the Filter Properties box, and enter the full path to UrlScan.dll in the
Executable box.

6. Select "OK" to close each dialog.

7. Restart the web service.

To Run:
-------

After being properly installed, UrlScan will run automatically whenever IIS
is started.  If you would like to confirm UrlScan's operation, locate the
UrlScan.log file in the directory that contians UrlScan.dll.  The log file
will be automatically created by UrlScan (unless UrlScan is configured with
logging disabled), and contains a report of the configured options each
time the server is started.

UrlScan.ini
-----------

UrlScan's operation is controlled by the UrlScan.ini file.  This file should
reside in the same directory as UrlScan.dll, and contains the sections and
options listed below.

Note that UrlScan only reads the ini file at initialization time (for
performance reasons).  It is necessary to stop and start the web service
before any changes to this file will be effective.

Also note that the default options built into UrlScanl.dll will result in
a configuration that will reject all requests to the server.  It is necessary
to provide a UrlScan.ini file for UrlScan to pass requests to be served. A
sample UrlScan.ini file is provided that contains the recommended settings
to defend against known attacks against IIS servers at the time of writing.

The [Options] section configures UrlScan's main options, listed below:

   UseAllowVerbs          - Allowed values are 0 or 1.  If 1, then UrlScan
                            will read the [AllowVerbs] section of the ini
                            file and reject any request containing an HTTP
                            verb that is not explicitly listed.  The
                            [AllowVerbs] section is case sensitive.  If 0,
                            then UrlScan will read the [DenyVerbs] section
                            of the ini file and reject any request
                            containing an HTTP verb listed.  The [DenyVerbs]
                            section is not case sensitive.  The default
                            value for UseAllowVerbs is 1.

   UseAllowExtensions     - Allowed values are 0 or 1.  If 1, then UrlScan
                            will read the [AllowExtensions] section of the
                            ini file and reject any request where the file
                            extension associated with the URL is not
                            explicitly listed.  If 0, then UrlScan will
                            read the [DenyExtensions] section of the ini
                            file and reject any request where the file
                            extension associated with the request is listed.
                            Both the [AllowExtensions] and [DenyExtensions]
                            sections are case insensitive.  The default
                            value for UseAllowExtensions is 0.
                               
   NormalizeUrlBeforeScan - Allowed values are 0 or 1.  If 1, then UrlScan
                            will do all of its analysis on the request URLs
                            after IIS decodes and normalizes them.  If 0,
                            then UrlScan will do all of its analysis on the
                            raw URLs as sent by the client.  The default
                            value for NormalizeUrlBeforeScan is 1.  Note
                            that only advanced users, who are very
                            knowlegeable about URL parsing, should set this
                            option to 0, as doing so will likely expose the
                            IIS server to canonicalization attacks that
                            bypass proper analysis of the URL extensions.

   VerifyNormalization    - Allowed values are 0 or 1.  If 1, then UrlScan
                            will verify normalization of the URL.  This
                            action will defend against canonicalization
                            attacks where a URL contains a double encoded
                            string in the URL (ie. The string "%252e" is
                            a double encoded '.' character because "%25"
                            decodes to a '%' character, the first pass
                            decoding of "%252e" results in "%2e", which
                            can be decoded a second time into '.')  If
                            0, then this verification is not done.  The
                            Default value for VerifyNormalization is 1.
                            Note that this option is dependent on the
                            NormalizeUrlBeforeScan option.

   AllowHighBitCharacters - Allowed values are 0 or 1.  If 1, then UrlScan
                            will allow any byte to exist in the URL.  If 0,
                            then UrlScan will reject any request where the
                            URL contains a character outside of the ASCII
                            character set.  This feature can defend against
                            UNICODE or UTF-8 based attacks, but will also
                            reject legitimate requests on IIS servers that
                            use a non-ASCII codepage.  The default value for
                            AllowHighBitCharacters is 1.

   AllowDotInPath         - Allowed values are 0 or 1.  If 1, then UrlScan
                            will reject any requests containing multiple
                            instances of the '.' character.  If 0, then
                            UrlScan will not perform this test.  Because
                            UrlScan operates at a level where IIS has not
                            yet parsed the URL, it is not possible to
                            determine in all cases whether a '.' character
                            denotes the extension or whether it is a part
                            of the directory path or filename of URL.  For
                            the purposes of extension analysis, UrlScan
                            will always assume that an extension is the
                            part of the URL beginning after the last '.'
                            in the string and ending at the first '?' or
                            '/' character after the '.' or the end of the
                            string.  Setting AllowDotInPath to 1 will
                            defend against the case where an attacker uses
                            a path info to obfuscate the true extension
                            of the request (ie. something like
                            "/path/TrueURL.asp/BogusPart.htm").  Note that
                            this will also cause UrlScan to deny any
                            request that contains a '.' in a directory
                            or file name.  The default value for
                            AllowDotInPath is 0.

   RemoveServerHeader     - Allowed values are 0 or 1.  If 1, then UrlScan
                            will remove the server header on all responses.
                            If 0, then this action will not be performed.
                            The default value for RemoveServerHeader is 0.
                            Note that this feature is only available if
                            UrlScan is installed on IIS 4.0 or later.

   EnableLogging          - Allowed values are 0 or 1.  If 1, then UrlScan
                            will log its actions into a file called
                            UrlScan.log that will be created in the same
                            directory that contains UrlScan.dll.  If 0,
                            then no logging will be done.  The default
                            value for EnableLogging is 1.

   PerProcessLogging      - Allowed values are 0 or 1.  If 1, then UrlScan
                            will append the process ID of the IIS process
                            hosting UrlScan.dll to the log file name (ie.
                            UrlScan.1234.log).  This feature is helpful
                            for IIS versions that can host filters in more
                            than 1 process concurrently (IIS 6.0).  If 0,
                            then the logfile will be UrlScan.log.  The
                            default value of PerProcessLogging is 0.

   AlternateServerName    - Allowed value is a string.  If this setting
                            is present and RemoveServerHeader is 0, then
                            IIS will replace its default "Server:" header
                            in all responses with this string.  The default
                            value for AlternateServerName is an empty string.
                            Note that this feature is only available if
                            UrlScan is installed on IIS 4.0 or later.

   AllowLateScanning      - Allowed values are 0 or 1.  If 1, then UrlScan
                            will register itself as a low priority filter.
                            This allows other filters to modify the URL
                            before UrlScan does its analysis (note that
                            in addition to this switch, it is necessary
                            to ensure that UrlScan is listed lower on
                            the filter list in the MMC "ISAPI Filters"
                            property sheet for the server).  If this
                            value is 0, the UrlScan will run as a high
                            priority filter.  The default value for
                            AllowLateScanning is 0.  Note that Front Page
                            Server Extensions requires that this setting
                            be 1.

The [AllowVerbs] section contains a list of HTTP verbs (methods).  If
UseAllowVerbs=1 is set in the [Options] section, then UrlScan will reject
any request containing a verb not explicitly listed here.  The entries
in this section are case sensitive.

The [DenyVerbs] section contains a lit of HTTP verbs (methods).  If
UseAllowVerbs=0 is set in the [Options] section, the UrlScan will reject
any request containing a verb that is listed here.  The entries in this
section are case insensitive.

The [DenyHeaders] section contains a list of request headers in the form
"header-name:".  Any request containing a request header listed in this
section will be rejected.  The entries in this section are case
insensitive.

The [AllowExtensions] section contains a list of file extensions in the
form of ".xxx".  If UseAllowExtensions=1 is set in the [Options] section,
then any request containing a URL with an extension not explicitly
listed here is rejected.  The entries in this section are case insensitive.

The [DenyExtensions] section contains a list of file extensions in the
form of ".xxx".  If UseAllowExtensions=0 is set in the [Options] section,
then any request containing a URL with an extension listed here is
rejected.  The entries in this section are case insensitive.

Other Files Used by UrlScan:
------------------------------
UrlScan may create the following files in the directory that contains
UrlScan.dll:

     UrlScan.log - Logs UrlScan activity, including initialization and
                   shutdown, and details for any request that is rejected
                   by UrlScan.

     UrlScan.ini - Contains the configuration options used by UrlScan


Disclaimer:
-----------

This utility has been provided "as is".  It has not been tested for use in
a production environment and no support will be provided for use in a
production environment.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_commerce.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=0       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=0               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=0            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
POST
PUT

[DenyVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

PROPFIND
PROPPATCH
MKCOL
DELETE
COPY
MOVE
LOCK
UNLOCK
OPTIONS
SEARCH
HEAD

[DenyHeaders]

;
; Request headers listed in this section will cause UrlScan to 
; reject any request in which they are present. 
;
; Headers should be listed in the form 
;   Header-Name:
;

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_dynamic.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=0       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=0               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=0            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; The verbs (aka HTTP methods) listed here are those commonly
; processed by a typical IIS server.
;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST

[DenyVerbs]

;
; The verbs (aka HTTP methods) listed here are used for publishing
; content to an IIS server via WebDAV.
;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

PROPFIND
PROPPATCH
MKCOL
DELETE
PUT
COPY
MOVE
LOCK
UNLOCK
OPTIONS
SEARCH

[DenyHeaders]

;
; The following request headers alter processing of a
; request by causing the server to process the request
; as if it were intended to be a WebDAV request, instead
; of a request to retrieve a resource.
;

Translate:
If:
Lock-Token:

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_exchange2000.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=1       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=1               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=0            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST
OPTIONS
SEARCH
POLL
PROPFIND
BMOVE
BCOPY
SUBSCRIBE
MOVE
PROPPATCH
BPROPPATCH
DELETE
BDELETE
MKCOL
UNSUBSCRIBE
SUBSCRIPTIONS
COPY
LOCK
UNLOCK
PUT
ACL
NOTIFY

[DenyVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

[DenyHeaders]

;
; Request headers listed in this section will cause UrlScan to 
; reject any request in which they are present. 
;
; Headers should be listed in the form 
;   Header-Name:
;

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_exchange5_5.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=1       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=0               ; if 1, allow dots that are not file extensions
RemoveServerHeader=1           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=0            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST

[DenyVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

PROPFIND
PROPPATCH
MKCOL
DELETE
PUT
COPY
MOVE
LOCK
UNLOCK
OPTIONS
SEARCH

[DenyHeaders]

;
; Request headers listed in this section will cause UrlScan to 
; reject any request in which they are present. 
;
; Headers should be listed in the form 
;   Header-Name:
;

Translate:
If:
Lock-Token:

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_frontpage.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=0       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=0               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=1            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; The verbs (aka HTTP methods) listed here are those commonly
; processed by a typical IIS server.
;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST
OPTIONS

[DenyVerbs]

;
; The verbs (aka HTTP methods) listed here are used for publishing
; content to an IIS server via WebDAV.
;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

PROPFIND
PROPPATCH
MKCOL
DELETE
PUT
COPY
MOVE
LOCK
UNLOCK
SEARCH

[DenyHeaders]

;
; Request headers listed in this section will cause UrlScan to 
; reject any request in which they are present. 
;
; Headers should be listed in the form 
;   Header-Name:
;

If:
Lock-Token:

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_sbs2000.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=1       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=1               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=0            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST
OPTIONS
SEARCH
POLL
PROPFIND
BMOVE
BCOPY
SUBSCRIBE
MOVE
PROPPATCH
BPROPPATCH
DELETE
BDELETE
MKCOL
UNSUBSCRIBE
SUBSCRIPTIONS
COPY
LOCK
UNLOCK
PUT
ACL
NOTIFY

[DenyVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

[DenyHeaders]

;
; Request headers listed in this section will cause UrlScan to 
; reject any request in which they are present. 
;
; Headers should be listed in the form 
;   Header-Name:
;

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
root.exe
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_sharepoint_portal.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=1       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=0               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=0            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST
SUBSCRIBE
OPTIONS
PROPFIND
SEARCH
MOVE
PROPPATCH
DELETE
MKCOL
COPY
LOCK
UNLOCK
PUT
INVOKE
POLL
UNSUBSCRIBE
TRANSLATE

[DenyVerbs]

;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

[DenyHeaders]

;
; Request headers listed in this section will cause UrlScan to 
; reject any request in which they are present. 
;
; Headers should be listed in the form 
;   Header-Name:
;

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_sharepoint_teamservices.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=0       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=0               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=1            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; The verbs (aka HTTP methods) listed here are those commonly
; processed by a typical IIS server.
;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD
POST
OPTIONS

[DenyVerbs]

;
; The verbs (aka HTTP methods) listed here are used for publishing
; content to an IIS server via WebDAV.
;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

PROPFIND
PROPPATCH
MKCOL
DELETE
PUT
COPY
MOVE
LOCK
UNLOCK
SEARCH

[DenyHeaders]

;
; Request headers listed in this section will cause UrlScan to 
; reject any request in which they are present. 
;
; Headers should be listed in the form 
;   Header-Name:
;

If:
Lock-Token:

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.asp
.cer
.cdx
.asa
.htm
.html
.txt
.jpg
.jpeg
.gif
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;

; Deny executables that could run on the server
.exe
.bat
.cmd
.com

; Deny infrequently used scripts
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\filters\urlscan\urlscan_static.ini ===
[options]
UseAllowVerbs=1                ; if 1, use [AllowVerbs] section, else use [DenyVerbs] section
UseAllowExtensions=0           ; if 1, use [AllowExtensions] section, else use [DenyExtensions] section
NormalizeUrlBeforeScan=1       ; if 1, canonicalize URL before processing
VerifyNormalization=1          ; if 1, canonicalize URL twice and reject request if a change occurs
AllowHighBitCharacters=0       ; if 1, allow high bit (ie. UTF8 or MBCS) characters in URL
AllowDotInPath=0               ; if 1, allow dots that are not file extensions
RemoveServerHeader=0           ; if 1, remove "Server" header from response
EnableLogging=1                ; if 1, log UrlScan activity
PerProcessLogging=0            ; if 1, the UrlScan.log filename will contain a PID (ie. UrlScan.123.log)
AllowLateScanning=0            ; if 1, then UrlScan will load as a low priority filter.
PerDayLogging=1                ; if 1, UrlScan will produce a new log each day with activity in the form UrlScan.010101.log
RejectResponseUrl=             ; UrlScan will send rejected requests to the URL specified here. Default is /<Rejected-by-UrlScan>
UseFastPathReject=0            ; If 1, then UrlScan will not use the RejectResponseUrl or allow IIS to log the request

; If RemoveServerHeader is 0, then AlternateServerName can be
; used to specify a replacement for IIS's built in 'Server' header
AlternateServerName=

[AllowVerbs]

;
; The verbs (aka HTTP methods) listed here are those commonly
; processed by a typical IIS server.
;
; Note that these entries are effective if "UseAllowVerbs=1"
; is set in the [Options] section above.
;

GET
HEAD

[DenyVerbs]

;
; The verbs (aka HTTP methods) listed here are used for publishing
; content to an IIS server via WebDAV.
;
; Note that these entries are effective if "UseAllowVerbs=0"
; is set in the [Options] section above.
;

PROPFIND
PROPPATCH
MKCOL
DELETE
PUT
COPY
MOVE
LOCK
UNLOCK
OPTIONS
SEARCH

[DenyHeaders]

;
; The following request headers alter processing of a
; request by causing the server to process the request
; as if it were intended to be a WebDAV request, instead
; of a request to retrieve a resource.
;

Translate:
If:
Lock-Token:

[AllowExtensions]

;
; Extensions listed here are commonly used on a typical IIS server.
;
; Note that these entries are effective if "UseAllowExtensions=1"
; is set in the [Options] section above.
;

.htm
.html
.txt
.jpg
.jpeg
.gif

[DenyExtensions]

;
; Extensions listed here either run code directly on the server,
; are processed as scripts, or are static files that are
; generally not intended to be served out.
;
; Note that these entries are effective if "UseAllowExtensions=0"
; is set in the [Options] section above.
;
; Also note that ASP scripts are denied with the below
; settings.  If you wish to enable ASP, remove the
; following extensions from this list:
;    .asp
;    .cer
;    .cdx
;    .asa
;

; Deny ASP requests
.asp
.cer
.cdx
.asa

; Deny executables that could run on the server
.exe
.bat
.cmd
.com
.dll

; Deny infrequently used scripts
.htw     ; Maps to webhits.dll, part of Index Server
.ida     ; Maps to idq.dll, part of Index Server
.idq     ; Maps to idq.dll, part of Index Server
.htr     ; Maps to ism.dll, a legacy administrative tool
.idc     ; Maps to httpodbc.dll, a legacy database access tool
.shtm    ; Maps to ssinc.dll, for Server Side Includes
.shtml   ; Maps to ssinc.dll, for Server Side Includes
.stm     ; Maps to ssinc.dll, for Server Side Includes
.printer ; Maps to msw3prt.dll, for Internet Printing Services

; Deny various static files
.ini     ; Configuration files
.log     ; Log files
.pol     ; Policy files
.dat     ; Configuration files

[DenyUrlSequences]
..  ; Don't allow directory traversals
./  ; Don't allow trailing dot on a directory name
\   ; Don't allow backslashes in URL
:   ; Don't allow alternate stream access
%   ; Don't allow escaping after normalization
&   ; Don't allow multiple CGI processes to run on a single request
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\w3\gateways\specweb99\readme.txt ===
-------------------------
SPECweb99 ISAPI Overview:                                         
-------------------------                         
                                      
The specweb99 directory contains the complete source code of three ISAPI
extensions which together, implement the dynamic content requirements
of the SPECweb99 webserver software performance benchmark.  (Please refer
to http://www.spec.org/osg/web99 for further explanation of the SPECweb99
benchmark.)

The source code is divided into three subdirectories: specweb99-GET,
specweb99-POST_AND_CMD and specweb99-CAD.  The source code in each of these
directories independently compile and link into separate ISAPI extension
modules, specweb99-GET.dll, specweb99-POST_AND_CMD.dll and specweb99-
CAD.dll, respectively.  specweb99-GET.dll implements handling of the 
SPECweb99 standard dynamic GET request, specweb99-POST_AND_CMD.dll 
implements handling of the SPECweb99 dynamic POST request as well as the
Reset and Fetch housekeeping functions and specweb99-CAD.dll implements 
handling of a SPECweb99 dynamic GET with custom ad rotation request.

In order to use these ISAPI extensions, the registry key "HKEY_LOCAL_
MACHINE\Software\Microsoft\SPECweb99 ISAPI" must exist on the server 
machine and must have settings for the following five values set:

(1) ROOT_DIR

    This is a string value that specifies the absolute path of the webserver
    document root directory.  Note that forward slashes, '/', must be used
    and no trailiing slash may be present (e.g. "D:/inetpub/wwwroot", NOT
    "D:/inetpub/wwwroot/", "D:\inetpub\wwwroot" or "D:\inetpub\wwwroot\").

(2) VECTOR_SEND_IO_MODE_CONFIG

    This is a DWORD value that is used to configure the I/O mode used for
    VectorSend calls.  It is set to 1 to indicate use of synchronous mode,
    to 2 to indicate use of asynchronous mode and 3 to indicate use of
    "adaptive" mode.  With this third option, synchronous mode is used to 
    send a body of data below a certain configurable size threshold and
    asynchronous mode is used to send bodies of data whose size is greater
    than or equal to the specified threshold.

(3) VECTOR_SEND_ASYNC_RANGE_START

    This is a DWORD value that specifies, in bytes, the data size threshold
    to use with adaptive mode VectorSend (see the description for VECTOR_
    SEND_IO_MODE_CONFIG).

(4) READ_FILE_IO_MODE_CONFIG

    This is a DWORD value that is used to configure the I/O mode used for
    VectorSend calls.  It is set to 1 to indicate use of synchronous mode,
    to 2 to indicate use of asynchronous mode and 3 to indicate use of
    "adaptive" mode.  With this third option, synchronous mode is used to 
    send a body of data below a certain configurable size threshold and
    asynchronous mode is used to send bodies of data whose size is greater
    than or equal to the specified threshold.

    Note that this value only needs to be set for specweb99-CAD.dll; 
    specweb99-GET.dll and specweb99-POST_AND_CMD.dll do not make use of it.

(5) READ_FILE_ASYNC_RANGE_START

    This is a DWORD value that specifies, in bytes, the data size threshold
    to use with adaptive mode ReadFile (see the description for VECTOR_SEND_
    IO_MODE_CONFIG).

Please direct any questions about this module to ankur_upadhyaya@hotmail.com.

Ankur Upadhyaya
Software Design Engineer Intern
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\svcs\wam\wamreg\vptool\readme.txt ===
vptool (a simple WAMREG command line tool).

Usage: vptool -Command MetabasePath
Command = CREATEINPROC | CREATEOUTPROC | DELETE | UNLOAD | GETSTATUS

MetabasePath is required for all the commands

CREATEINPROC     - Create an in-proc application on the metabase path
CREATEOUTPROC    - Create an out-proc application on the metabase path
DELETE           - Delete the application on the metabase path if there is one
UNLOAD           - Unload an application on the metabase path from w3svc runtime
					lookup table.
GETSTATUS        - Get status of the application on the metabase path


Purpose:
The vptool is used for unit testing of WAMREG.DLL.  The source code also
provides samples on how to use WamAdmin API in C code.

Files:
	main.cpp	Contains main module
	util.cpp	Contains timing, and command line argument parsing functions
	modules.cpp	Contains basic code that use WamAdmin APIs.
Usage:
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\ui\itools\keyring\setup\setup.ini ===
Nn"NzO"NzVng"NzVng2(Vng2$ I2$ YWM$ YWvNN8YWvNN;4(vNN;4+n_;4+nZvN+nZvNG:9ZvNG:+NG: /yM /ywVMn/ywVnn*wVnn" xxxxxxxxxxxxxxxxx    
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\ui\itools\isadmin\hlp\afxcore.rtf ===
{\rtf1\ansi \deff0\deflang1024{\fonttbl{\f0\froman Tms Rmn;}{\f1\froman Symbol;}{\f2\fswiss Helv;}{\f3\froman Times New Roman;}{\f4\fswiss Arial;}{\f5\fswiss Helvetica;}{\f6\fswiss MS Sans Serif;}} {\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue127;\red0\green127\blue127;\red0\green127\blue0; \red127\green0\blue127;\red127\green0\blue0;\red127\green127\blue0;\red127\green127\blue127;\red192\green192\blue192;}{\stylesheet{\s244 \fs16\up6\lang1033 \sbasedon0\snext0 footnote reference;}{\s245 \fs20\lang1033 \sbasedon0\snext245 footnote text;}{ \s246\li720 \i\fs20\lang1033 \sbasedon0\snext255 heading 9;}{\s247\li720 \i\fs20\lang1033 \sbasedon0\snext255 heading 8;}{\s248\li720 \i\fs20\lang1033 \sbasedon0\snext255 heading 7;}{\s249\li720 \fs20\ul\lang1033 \sbasedon0\snext255 heading 6;}{ \s250\li720 \b\fs20\lang1033 \sbasedon0\snext255 heading 5;}{\s251\li360 \ul\lang1033 \sbasedon0\snext255 heading 4;}{\s252\li360 \b\lang1033 \sbasedon0\snext255 heading 3;}{\s253\sb120 \b\f2\lang1033 \sbasedon0\snext0 heading 2;}{\s254\sb240  \b\f2\ul\lang1033 \sbasedon0\snext0 heading 1;}{\s255\li720 \fs20\lang1033 \sbasedon0\snext255 Normal Indent;}{\fs20\lang1033 \snext0 Normal;}{\s2\fi-240\li480\sb80\tx480 \f5\lang1033 \sbasedon0\snext2 nscba;}{\s3\fi-240\li240\sa20 \f5\lang1033  \sbasedon0\snext3 j;}{\s4\li480\sa20 \f5\lang1033 \sbasedon0\snext4 ij;}{\s5\sb80\sa20 \f5\lang1033 \sbasedon0\snext5 btb;}{\s6\fi-240\li2400\sb20\sa20 \f5\fs20\lang1033 \sbasedon0\snext6 ctcb;}{\s7\fi-240\li480\sa40\tx480 \f5\lang1033  \sbasedon0\snext7 ns;}{\s8\sa120 \f5\fs28\lang1033 \sbasedon0\snext8 TT;}{\s9\fi-240\li2400\sa20 \f5\lang1033 \sbasedon0\snext9 crtj;}{\s10\fi-240\li480\tx480 \f5\lang1033 \sbasedon0\snext10 nsca;}{\s11\sa20 \f5\lang1033 \sbasedon0\snext11 bt;}{ \s12\li240\sb120\sa40 \f5\lang1033 \sbasedon0\snext12 Hf;}{\s13\li240\sb120\sa40 \f5\lang1033 \sbasedon0\snext13 Hs;}{\s14\li480\sb120\sa40 \f5\lang1033 \sbasedon0\snext14 RT;}{\s15\fi-2160\li2160\sb240\sa80\tx2160 \f5\lang1033 \sbasedon0\snext15 c;}{ \s16\li2160\sa20 \f5\lang1033 \sbasedon0\snext16 ct;}{\s17\li240\sa20 \f5\lang1033 \sbasedon0\snext17 it;}{\s18\li480 \f5\fs20\lang1033 \sbasedon0\snext18 nsct;}{\s19\fi-160\li400\sb80\sa40 \f5\lang1033 \sbasedon0\snext19 nscb;}{ \s20\fi-2640\li2880\sb120\sa40\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f5\lang1033 \sbasedon0\snext20 HC2;}{\s21\fi-2640\li2880\sb120\sa20\tx2880 \f5\lang1033 \sbasedon0\snext21 C2;}{\s22\fi-240\li2400\sa20 \f5\fs20\lang1033  \sbasedon0\snext22 ctc;}{\s23\li2160\sb160 \f5\lang1033 \sbasedon0\snext23 crt;}{\s24\li480\sb20\sa40 \f5\lang1033 \sbasedon0\snext24 or;}{\s25\fi-259\li360\sb40\sa40\tx360 \f6\fs20\lang1033 \sbasedon0\snext25 Ln1;}{\s26\li115\sb80\sa80 \f6\fs20\lang1033  \sbasedon0\snext0 *Intro;}{\s27\li115\sb80\sa80\keepn \b\f6\lang1033 \sbasedon252\snext26 *Title;}{\s28\fi-245\li360\sb80 \f6\fs20\lang1033 \snext28 *Jl;}{\s29\li360\sb40\sa40 \f6\fs20\lang1033 \snext0 Lp1;}{\s30\fi-1800\li1915\sb60\sl-240\tx1915  \f6\fs20\lang1033 \sbasedon0\snext30 Tph;}{\s31\li115\sb120\sa80 \b\f6\fs20\lang1033 \snext25 Proch;}}{\info{\title AFXCORE}{\subject MFC Core RTF Help}{\author AFX}{\creatim\yr1992\mo10\dy7\hr11\min4}{\version1}{\edmins2267}{\nofpages1}{\nofwords65536} {\nofchars65536}{\vern16433}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \widowctrl\ftnbj \sectd \linex576\endnhere \pard\plain \sl240 \fs20\lang1033 {\fs16\up6 #{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 #}  main_index}}{\fs16\up6  }{\fs16\up6  }{\plain \b\f2\up6\lang1033 <<YourApp>> Help Index}{\b\f2  \par }{\f5  \par }{\b\f2 How To ...}{\b\f2  \par }{\f2 \tab }{\f2 <<add your application-specific "how to" topics here>>}{\f5\ulw  \par }{\f5\ulw  \par }{\b\f2 Commands}{\b\f2  \par }{\f2 \tab }{\f2\uldb File menu}{\v\f2 menu_file}{\f2  \par }{\f2 \tab }{\f2\uldb Edit menu}{\v\f2 menu_edit}{\f2\uldb  \par }{\f2 \tab }{\f2\uldb Record menu}{\v\f2 menu_record}{\f2  \par }{\f2 \tab }{\f2\uldb View menu}{\v\f2 menu_view}{\f2  \par }{\f2 \tab }{\f2\uldb Window menu}{\v\f2 menu_window}{\f2  \par }{\f2 \tab }{\f2\uldb Help menu}{\v\f2 menu_help}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # menu_file}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} files: managing}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $}  File menu commands}}{\f2  }{\b\f2 File menu commands}{\f2  \par }{\f2  \par }{\f2 The File menu offers the following commands:}{\f2  \par }{\f2  \par }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622\pard \sl240\intbl {\f2\uldb New}{\v\f2 HID_FILE_NEW}{\f2 \cell }{\f2 Creates a new document.}{\f2 \cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622\pard \sl240\intbl { \f2\uldb Open}{\v\f2 HID_FILE_OPEN}{\f2\uldb \cell }{\f2 Opens an existing document.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Close}{\v\f2 HID_FILE_CLOSE}{\f2\uldb \cell }{\f2 Closes an opened document.}{\f2 \cell }\pard \intbl { \f2 \row }\pard \sl240\intbl {\f2\uldb Save}{\v\f2 HID_FILE_SAVE}{\f2\uldb \cell }{\f2 Saves an opened document using the same file name.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Save As}{\v\f2 HID_FILE_SAVE_AS}{\f2\uldb \cell }{ \f2 Saves an opened document to a specified file name.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Print}{\v\f2 HID_FILE_PRINT}{\f2\uldb \cell }{\f2 Prints a document.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb  Print Preview}{\v\f2 HID_FILE_PRINT_PREVIEW}{\f2\uldb \cell }{\f2 Displays the document on the screen as it would appear printed.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Print Setup}{\v\f2 HID_FILE_PRINT_SETUP}{\f2\uldb \cell }{ \f2 Selects a printer and printer connection.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Send...}{\v\f2 HID_FILE_SEND_MAIL}{\f2\uldb \cell }{\f2 Sends the active document through electronic mail.}{\f2 \cell }\pard \intbl {\f2 \row  }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622\pard \sl240\intbl {\f2\uldb Exit}{\v\f2 HID_APP_EXIT}{\f2 \tab }{\f2  \par }{\f2\uldb \cell }{\f2 Exits <<YourApp>>.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # menu_edit}}{\b\f2 Edit m}{\b\f2 enu commands}{\f2  \par }{\f2  \par }{\f2 The Edit menu offers the following commands:}{\f2  \par }\pard \fi-720\li720\sl240 {\f2  \par }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212\pard \sl240\intbl {\f2\uldb Undo}{\v\f2 HID_EDIT_UNDO}{\f2 \cell }{\f2 Reverse previous editing operation.}{\f2 \cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212\pard  \sl240\intbl {\f2\uldb Cut}{\v\f2 HID_EDIT_CUT}{\f2\uldb \cell }{\f2 Deletes data from the document and moves it to the clipboard.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Copy}{\v\f2 HID_EDIT_COPY}{\f2\uldb \cell }{\f2  Copies data from the document to the clipboard.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Paste}{\v\f2 HID_EDIT_PASTE}{\f2\uldb \cell }{\f2 Pastes data from the clipboard into the document.}{\f2 \cell }\pard \intbl {\f2 \row }\pard  \sl240\intbl {\f2\uldb Paste Link}{\v\f2 HID_EDIT_PASTE_LINK}{\f2\uldb \cell }{\f2 Pastes from the clipboard a link to data in another application.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Insert New Object}{\v\f2\uldb  HID_OLE_INSERT_NEW}{\f2\uldb \cell }{\f2 Inserts and embeds an object, such as a chart or an equation in a document.}{\f2 \cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212\pard \sl240\intbl {\f2\uldb Links}{\v\f2  HID_OLE_EDIT_LINKS}{\f2\uldb \cell }{\f2 List and edit links to embedded documents.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \fi-720\li720\sl240 {\f2  \par }\pard \sl240 {\f2 \tab }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # menu_view}}{\b\f2 View}{\b\f2  menu commands}{\f2  \par }{\f2  \par }{\f2 The View menu offers the following commands:}{\f2  \par }{\f2  \par }\trowd \trgaph108\trleft-108 \cellx1272\cellx7452\pard \sl240\intbl {\f2\uldb Toolbar}{\v\f2 HID_VIEW_TOOLBAR}{\f2\uldb \cell }{\f2 Shows or hides the toolbar.}{\f2 \cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1272\cellx7452\pard  \sl240\intbl {\f2\uldb Status Bar}{\v\f2 HID_VIEW_STATUS_BAR}{\f2\uldb \cell }\pard \fi-720\li720\sl240\intbl {\f2 Shows or hides the status bar.}{\f2  \par }\pard \sl240\intbl {\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # menu_window}}{\b\f2 Window m}{\b\f2 enu commands}{\f2  \par }{\f2  \par }{\f2 The Window menu offers the following commands, which enable you to arrange multiple views of multiple documents in the application window:}{\f2  \par }{\f2  \par }\trowd \trgaph108\trleft-108 \cellx1572\cellx7752\pard \sl240\intbl {\f2\uldb New Window}{\v\f2 HID_WINDOW_NEW}{\f2\uldb \cell }{\f2 Creates a new window that views the same document.}{\f2 \cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft-108  \cellx1572\cellx7752\pard \sl240\intbl {\f2\uldb Cascade}{\v\f2 HID_WINDOW_CASCADE}{\f2\uldb \cell }{\f2 Arranges windows in an overlapped fashion.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Tile}{\v\f2 HID_WINDOW_TILE}{\f2\uldb  \cell }{\f2 Arranges windows in non-overlapped tiles.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Arrange Icons}{\v\f2 HID_WINDOW_ARRANGE}{\f2\uldb \cell }\pard \fi-720\li720\sl240\intbl {\f2 Arranges icons of closed windows.}{\f2  \cell }\pard \intbl {\f2 \row }\pard \sl240\intbl {\f2\uldb Split}{\v\f2 HID_WINDOW_SPLIT}{\f2\uldb \cell }\pard \fi-720\li720\sl240\intbl {\f2 Split the active window into panes.}{\f2 \cell }\pard \intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1572 \cellx7752\pard \sl240\intbl {\f2\uldb Window 1, 2, ...}{\v\f2 HID}{\v\f2 _WINDOW_ALL}{\f2\uldb \cell }\pard \fi-720\li720\sl240\intbl {\f2 Goes to specified window.}{\f2 \cell }\pard \intbl {\f2 \row }\pard \fi-720\li720\sl240 {\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # menu_help}}{\b\f2 Help}{\b\f2  menu commands}{\f2  \par }{\f2  \par }{\f2 The Help menu offers the following commands, which provide you assistance with this application: }{\f2  \par }{\f2  \par }\trowd \trgaph108\trleft-108 \cellx1077\cellx7257\pard \sl240\intbl {\f2\uldb Index}{\v\f2 HID_HELP_INDEX}{\f2\uldb \cell }\pard \fi-720\li720\sl240\intbl {\f2 Offers you an index to topics on which you can get help.}{\f2 \cell }\pard \intbl {\f2 \row  }\trowd \trgaph108\trleft-108 \cellx1077\cellx7257\pard \sl240\intbl {\f2\uldb Using Help}{\v\f2 HID_HELP_USING}{\f2\uldb \cell }\pard \fi-720\li720\sl240\intbl {\f2 Provides general instructions on using help.}{\f2 \cell }\pard \intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1077\cellx7257\pard \sl240\intbl {\f2\uldb About}{\v\f2 HID_APP_ABOUT}{\f2\uldb \cell }\pard \fi-720\li720\sl240\intbl {\f2 Displays the version number of this application.}{\f2 \cell }\pard \intbl {\f2 \row }\pard  \fi-720\li720\sl240 {\f2  \par }{\f2  \par }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_FILE_NEW}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} files: managing}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $ } File New command}}{\f2  }{\b\f2 New command (File menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to create a new document in <<YourApp>>.  Select the type of new file you want to create in the }{\f2\uldb File New dialog box}{\v AFX_HIDD_NEWTYPEDLG}.  {\f2  << Remove previous sentence if your application supports only one document type. >>}{\f2  \par }{\f2  \par }{\f2 You can open an existing document with the }{\f2\uldb Open command}{\v HID_FILE_OPEN}{\f2 .}{\f2  \par }{\f2  \par }{\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Toolbar:}{\f2 \tab }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 filenew.bmp}{\f2 \}}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 CTRL+N}{\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDD_NEWTYPEDLG}}{\b\f2 File New dialog box}{\b\f2  \par }{\f2  \par }{\f2 << Delete this help topic if your application supports only one document type. >>}{\f2  \par }{\f2  \par }{\f2 Specify the type of document you wish to create:}{\f2  \par }{\f2 << List your application's document types here >>}{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_FILE_OPEN}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} files: managing}}{\f2  }{\fs16\up6 ${\footnote  \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $} File Open command}}{\f2  }{\b\f2 Open command (File menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to open an existing document in a new window.  You can open multiple documents at once.  Use the Window menu to switch among the multiple open documents.  See }{\f2\uldb Window 1, 2, ... command}{\v\f2 HID_WINDOW_ALL}{\f2 .}{\f2  \par }{\f2  \par }{\f2 You can create new documents with the }{\f2\uldb New command}{\v HID_FILE_NEW}{\f2 .}{\f2  \par }{\f2  \par }{\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Toolbar:}{\f2 \tab }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 fileopen.bmp}{\f2 \}}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 CTRL+O}{\f2  \par }\pard \li360\sl240 {\f2  \par }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDD_FILEOPEN}}{\b\f2 Fi}{\b\f2 le Open dialog box}{\b\f2  \par }{\f2  \par }{\f2 The following options allow you to specify which file to open:}{\f2  \par }\pard \sb60\sl240 {\b\f2 File Name}{\b\f2  \par }\pard \li360\sl240 {\f2 Type or select the filename you want to open.  This box lists files with the extension you select in the List Files of Type box. }{\f2  \par }\pard \sb60\sl240 {\b\f2 List Files of Type}{\b\f2  \par }\pard \li360\sl240 {\f2 Select the type of file you want to open:}{\f2  \par }{\f2 << List your application's file types here. >>}{\f2  \par }\pard \sb60\sl240 {\b\f2 Drives}{\b\f2  \par }\pard \li360\sl240 {\f2 Select the drive in which <<YourApp>> stores the file that you want to open. }{\f2  \par }\pard \sb60\sl240 {\b\f2 Directories}{\b\f2  \par }\pard \li360\sl240 {\f2 Select the directory in which <<YourApp>> stores the file that you want to open.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Network...}{\b\f2  \par }\pard \li360\sl240 {\f2 Choose this button to connect to a network location, assigning it a new drive letter. }{\f2  \par }{\f2  \par }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_FILE_CLOSE}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} files: managing}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 { \fs16\up6 $} File Close command}}{\f2  }{\b\f2 Close command (File menu)}{\f2  \par }{\f2  \par }{\f2  Use this command to close all windows containing the active document.  <<YourApp>> suggests that you save changes to your document before you close it.  If you close a document without saving, you lose all changes made since the last time you saved it.  B }{\f2 efore closing an untitled document, <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2  and suggests that you name and save the document.}{\f2  \par }{\f2  \par }{\f2 You can also close a document by using the Close icon on the document's window, as shown below:}{\f2  \par }{\f2 \{}{\f2 bml hlp}{\f2 \\}{\f2 s}{\f2 cmenu.bmp}{\f2 \}}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_FILE_SAVE}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} files: managing}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $}  File Save command}}{\f2  }{\b\f2 Save command (File menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to save the active document to its current name and directory.  When you save a document for the first time, <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2   so you can name your document.  If you want to change the name and directory of an existing document before you save it, choose the }{\f2\uldb Save As command}{\v HID_FILE_SAVE_AS}{\f2 .}{\f2  \par }{\f2  \par }{\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Toolbar:}{\f2 \tab }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 filesave.bmp}{\f2 \}}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 CTRL+S}{\f2  \par }\pard \li360\sl240 {\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_FILE_SAVE_AS}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} files: managing}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $}  File Save As command}}{\f2  }{\b\f2 Save As command (File menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to save and name the active document.  <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2  so you can name your document.  }{\f2  \par }{\f2  \par }{\f2 To save a document with its existing name and directory, use the }{\f2\uldb Save command}{\v HID_FILE_SAVE}{\f2 .}{\f2  \par }{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_FILE_SEND_MAIL}}{\b\f2 Send}{\b\f2  command (File menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to send the active document through electronic mail.}{\f2   This command}{\f2  presents a mail window with the active document }{\f2 attached to}{\f2   it.  You may then fill out the To: field, Subject: field, etc., and add text to the body of the message if you wish.  When you are finished you may click the "Send" button to send the message.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDD_FILESAVE}}{\b\f2 File Sav}{\b\f2 e As dialog box}{\b\f2  \par }{\f2  \par }{\f2 The following options allow you to specify the name and location of the file you're about to save:}{\f2  \par }\pard \sb60\sl240 {\b\f2 File Name}{\b\f2  \par }\pard \li360\sl240 {\f2 Type a new filename to save a document with a different name.  A filename can}{\f2   contain up to eight characters and an extension of up to three characters.  <<YourApp>> adds the extension you specify in the Save File As Type box.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Drives}{\b\f2  \par }\pard \li360\sl240 {\f2 Select the drive in which you want to store the document.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Directories}{\b\f2  \par }\pard \li360\sl240 {\f2 Select the directory in which you want to store the document.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Network...}{\b\f2  \par }\pard \li360\sl240 {\f2 Choose this button to connect to a network location, assigning it a new drive letter. }{\f2  \par }{\f2  \par }\pard \sl240 {\f2 << Add other File Save As dialog box options depending on which ones your application chooses via the OFN_ flags of }{\f2 the OPENFILENAME structure used by the CFileDialog. >>}{\f2  \par }{\f2 \page }{\fs16\up6 #{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 #} HID_FILE_MRU_FILE1}}{\f2  }{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} files: managing}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245  \fs20\lang1033 {\fs16\up6 $} File 1, 2, 3, 4 command}}{\f2  }{\b\f2 1, 2, 3, 4 command (File menu)}{\f2  \par }{\f2  \par }{\f2 Use the numbers and filenames listed at the bottom of the File menu to open the last four documents you closed.  Choose the number that corresponds with the document you want to open.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_APP_EXIT}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} exit}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $} File Exit command}}{ \f2  }{\b\f2 Exit command (File menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to end your <<YourApp>> session.  You can also use the Close command on the application Control menu.  <<YourApp>> prompts you to save documents with unsaved changes.}{\f2  \par } \par {\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Mouse:}{\f2 \tab }{\f2 Double-click the application's Control menu button.}{\f2  \par }{\f2 \tab }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 appexit.bmp}{\f2 \}}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 ALT+F4}{\f2  \par }\pard \sl240 \page {\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_UNDO}}{\b\f2 Undo}{\b\f2 /Can't Undo command (Edit menu)}{\f2  \par }{\f2  \par }{\f2 << Your application's user interface for Undo may differ from the one described below.  Modify this help text accordingly. >>}{\f2  \par }{\f2  \par }{\f2 Use this command to reverse the last editing action, if possible.   The name of the command changes, depending on what the last action was.  The Undo command changes to Can't Undo on the menu if you cannot reverse your last action.}{\f2  \par }{\f2  \par }{\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Toolbar:}{\f2 \tab }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 editundo.bmp}{\f2 \}}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 CTRL+Z or}{\f2  \par }{\f2 \tab }{\f2 ALT-BACKSPACE}{\f2 \tab  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_REDO}}{\b\f2 Redo}{\b\f2  command (Edit menu)}{\f2  \par }{\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_CUT}}{\b\f2 Cut c}{\b\f2 ommand (Edit menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to remove the currently selected data from the document and put it on the clipboard.  This command is unavailable if there is no data currently selected.}{\f2  \par }{\f2  \par }{\f2 Cutting data to the clipboard replaces the contents previously stored there.}{\f2  \par }{\f2  \par }{\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Toolbar:}{\f2 \tab }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 editcut.bmp}{\f2 \}}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 CTRL+X}{\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_COPY}}{\b\f2 Copy c}{\b\f2 ommand (Edit menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to copy selected data onto the clipboard.  This command is unavailable if there is no data currently selected.}{\f2  \par }{\f2  \par }{\f2 Copying data to the c}{\f2 lipboard replaces the contents previously stored there.}{\f2  \par }{\f2  \par }{\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Toolbar:}{\f2 \tab }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 editcopy.bmp}{\f2 \}}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 CTRL+C}{\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_PASTE}}{\b\f2 Paste c}{\b\f2 ommand (Edit menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to insert a copy of the clipboard contents at the insertion point.  This command is unavailable if the clipboard is empty.}{\f2  \par }{\f2  \par }{\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Toolbar:}{\f2 \tab }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 editpast.bmp}{\f2 \}}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 CTRL+V}{\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_VIEW_TOOLBAR}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} toolbar}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $}  View Toolbar command}}{\f2  }{\b\f2 Toolbar command (View menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to display and hide the Toolbar, which includes buttons for some of the most common commands in <<YourApp>>, such as File Open.  A check mark appears next to the menu item when the Toolbar is displayed.}{\f2  \par }{\f2  \par }{\f2 See }{\f2\uldb Toolbar}{\v\f2 AFX_HIDW_TOOLBAR}{\f2  for help on using the toolbar.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDW_TOOLBAR}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} toolbar}}{\f2  }{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $} toolbar}}{\f2   }{\b\f2 Toolbar}{\f2  \par }{\f2 \{}{\f2 bml hlp}{\f2 \\}{\f2 hlptbar.bmp}{\f2 \}}{\f2  \par }{\f2  \par }{\f2 The toolbar is displayed across the top of the application window, below t}{\f2 he menu bar.  The toolbar provides quick mouse access to many tools used in <<YourApp>>,}{\f2  \par }{\f2  \par }{\f2 To hide or display the Toolbar, choose Toolbar from the View menu (ALT, V, T).}{\f2  \par }{\f2  \par }{\f2 << Add or remove toolbar buttons from the list below according to which ones your application offers. >>}{\f2  \par }{\f2  \par }\pard \sl240\brdrb\brdrs\brdrw15\brsp20 \tx1080 {\b\f2 Click}{\b\f2 \tab }{\b\f2 To}{\f2  \par }\pard \fi-1080\li1080\sl240\tx1080 {\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 filenew.bmp}{\f2 \}}{\f2 \tab }{\f2 Open a new document.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 fileopen.bmp}{\f2 \}}{\f2 \tab }{\f2 Open an existing document.  <<YourApp>> displays the Open dialog box, in which you can locate and open the desired file.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 filesave.bmp}{\f2 \}}{\f2 \tab }{\f2 Save the active document or template with its current name.  If you have not named the document, <<YourApp>> displays the Save As dialog box.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 fileprnt.bmp}{\f2 \}}{\f2 \tab }{\f2 Print the active document.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 editcut.bmp}{\f2 \}}{\f2 \tab }{\f2 Remove selected data from the document and stores it on the clipboard.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 editcopy.bmp}{\f2 \}}{\f2 \tab }{\f2 Copy the selection to the clipboard.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 editpast.bmp}{\f2 \}}{\f2 \tab }{\f2 Insert the contents of the clipboard at the insertion point.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 editundo.bmp}{\f2 \}}{\f2 \tab }{\f2 Reverse the last editing.  Note:  You cannot undo some actions.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 recfirst.bmp}{\f2 \}}{\f2 \tab }{\f2 Go to the first record in the current selection.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 recprev.bmp}{\f2 \}}{\f2 \tab }{\f2 Go to the previous record in the current selection.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 recnext.bmp}{\f2 \}}{\f2 \tab }{\f2 Go to the next record in the current selection.}{\f2  \par }{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 reclast.bmp}{\f2 \}}{\f2 \tab }{\f2 Go to the last record in the current selection.}{\f2  \par }{\f2  \par }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_VIEW_STATUS_BAR}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} status bar}}{\f2  }{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033  $ View Status Bar Command}}{\b\f2 Stat}{\b\f2 us Bar command (View menu)}{\b\f2  \par }{\f2  \par }{\f2  Use this command to display and hide the Status Bar, which describes the action to be executed by the selected menu item or depressed toolbar button, and keyboard latch state. A check mark appears next to the menu item when the Status Bar is displayed.}{ \par }{\f2  \par }{\f2 See }{\f2\uldb Status Bar}{\v\f2 AFX_HIDW_STATUS_BAR}{\f2  for help on using the status bar.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDW_STATUS_BAR}}{\fs16\up6 K{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 K} status bar}}{\f2  }{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ status bar}}{\b\f2 Statu}{ \b\f2 s Bar}{\f2  \par }{\f2 \{}{\f2 bml hlp}{\f2 \\}{\f2 hlpsbar.bmp}{\f2 \}}{\f2  \par }{\f2  \par }{\f2 The status bar is displayed at the bottom of the <<YourApp>> window.  To display or }{\f2 hide the status bar, use the Status Bar command in the View menu.}{\f2  \par }{\f2  \par }{\f2  The left area of the status bar describes actions of menu items as you use the arrow keys to navigate through menus.  This area similarly shows messages that describe the actions of toolbar buttons as you depress them, before releasing them.  If after vie }{\f2 wing the description of the toolbar button command you wish not to execute the command, then release the mouse button while the pointer is off the toolbar button.}{\f2  \par }{\f2  \par }{\f2 The right areas of the}{\f2  status bar indicate which of the following keys are latched down:}{\f2  \par }{\f2  \par }\pard \sl240\tx1440 {\b\f2 Indicator}{\b\f2 \tab }{\b\f2 Description}{\f2  \par }\pard \fi-1440\li1440\sa120\sl240\tx1440 {\f2 CAP}{\f2 \tab }{\f2 The Caps Lock key is latched down.}{\f2  \par }{\f2 NUM}{\f2 \tab }{\f2 The Num Lock key is latched down.}{\f2  \par }{\f2 SCRL}{\f2 \tab }{\f2 The Scroll Lock key is latched down.}{\f2  \par }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_WINDOW_NEW}}{\b\f2 Ne}{\b\f2 w command (Window menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to open a new window with the same contents as the active window.  You can open multiple document windows to display different parts or views of a }{\f2  document at the same time.  If you change the contents in one window, all other windows containing the same document reflect those changes.  When you open a new window, it becomes the active window and is displayed on top of all other open windows.}{\f2  \par }{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_WINDOW_CASCADE}}{\b\f2 Casc}{\b\f2 ade command (Window menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to arrange multiple opened windows in an overlapped fashion. }{\f2  \par }{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_WINDOW_TILE}}{\b\f2 Ti}{\b\f2 le command (Window menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to arrange multiple opened windows in a non-overlappe}{\f2 d fashion.}{\f2  \par }{\f2  \par }{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_WINDOW_TILE_HORZ}}{\b\f2 Tile }{\b\f2 Horizontal command (Window menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to vertically arrange multiple opened windows in a non-overlapped fashion.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_WINDOW_TILE_VERT}}{\b\f2 Tile }{\b\f2 Vertical command (Window menu)}{\f2  \par }{\f2  \par }{\f2 Use this command to arrange multiple opened windows side by side.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_WINDOW_ARRANGE}}{\b\f2 Window }{\b\f2 Arrange Icons Command}{\f2  \par }{\f2  \par }{\f2 Use this command to arrange the icons for minimized windows at the bottom of t}{\f2  he main window.  If there is an open document window at the bottom of the main window, then some or all of the icons may not be visible because they will be underneath this document window.}{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033  # HID_WINDOW_SPLIT}}{\b\f2 Split}{\b\f2  Command (Window menu)}{\b\f2  \par }{\b\f2  \par }{\f2  Use this command to split the active window into panes.  You may then use the mouse or the keyboard arrows to move the splitter bars.  When you are finished, press the mouse button or return to leave the splitter bars in their new location.  Pressing esca }{\f2 pe keeps the sp}{\f2 litter bars in their original location.  << In a single document interface application, this command will appear on the View menu. >>}{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_WINDOW_ALL}}{\b\f2 1}{ \b\f2 , 2, ... command (Window menu)}{\f2  \par }{\f2  \par }{\f2 <<YourApp>> displays a list of currently open document windows at the bottom of the Window menu.  A check mark appears in front of the document name of the active window.  Choose a document from this list to make its window active.  }{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_HELP_INDEX}}{\b\f2 Index c}{\b\f2 ommand (Help menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to display the opening }{\f2 screen of Help.  From the opening screen, you can jump to step-by-step instructions for using <<YourApp>> and various types of reference information.  }{\f2  \par }{\f2  \par }{\f2 Once you open Help, you can click the Contents button whenever you want to return to the opening screen.}{\f2  \par }{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_HELP_USING}}{\b\f2 Using}{\b\f2  Help command (Help menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command for instructions about using Help.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_APP_ABOUT}}{\b\f2 About c}{\b\f2 ommand (Help menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to display the copyright notice and version number of your copy of <<YourApp>}{\f2 >.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_CONTEXT_HELP}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Help Using Help Command}}{\b\f2 Context Help }{\b\f2 command }{\b\f2  \par }{\f2 \{}{\f2 bml hlp}{\f2 \\}{\f2 curhelp.bmp}{\f2 \}}{\f2  \par }{\f2  \par }{\f2  Use the Context Help command to obtain help on some portion of <<YourApp>>.  When you choose the Toolbar's Context Help button, the mouse pointer will change to an arrow and question mark.  Then click somewhere in the <<YourApp>> window, such as another T }{\f2 oolbar button.  The Help topic will be shown for the item you clicked.}{\f2  \par }{\f2  \par }{\b\f2 Shortcut}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Keys:}{\f2 \tab }{\f2 SHIFT+F1}{\f2  \par }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_HT_CAPTION}}{\b\f2 Tit}{\b\f2 le Bar} \par  \par {\f2 << Show your application's title bar here. >>}{\f2  \par }{\f2  \par }\pard\plain \s26\fi-360\li360\tx360 \f6\fs20\lang1033 {\f2 The title bar is located along the top of a window.  It contains the name of the application and document.}{\f2  \par }\pard\plain \fs20\lang1033 {\f2  \par }\pard\plain \s26\fi-360\li360\tx360 \f6\fs20\lang1033 {\f2 To move the window, drag the title bar.  Note: You can also move dialog boxes by dragging their title bars.}{\f2  \par }\pard\plain \fs20\lang1033 {\f2  \par }\pard \fi-360\li360\tx360 {\f2 A title bar may contain the following elements:}{\f2  \par }\pard\plain \s25\fi-360\li360\sb40\sa40\tx360 \f6\fs20\lang1033 {\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 bullet.bmp}{\f2 \}}{\f2 \tab }{\f2 Application Control-menu button}{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 bullet.bmp}{\f2 \}}{\f2 \tab }{\f2 Document Control-menu button}{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 bullet.bmp}{\f2 \}}{\f2 \tab }{\f2 Maximize button}{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 bullet.bmp}{\f2 \}}{\f2 \tab }{\f2 Minimize button}{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 bul}{\f2 let.bmp}{\f2 \}}{\f2 \tab }{\f2 Name of the application}{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 bullet.bmp}{\f2 \}}{\f2 \tab }{\f2 Name of the document}{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 bullet.bmp}{\f2 \}}{\f2 \tab }{\f2 Restore button}{\f2  \par }\pard\plain \sl240 \fs20\lang1033 {\f2 \page }{\fs16\up6 #{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 #} scrollbars}}{\f2  }{\b\f2 Scroll bars}{\f2  \par }{\f2  \par }{\f2 Displayed at the right and bottom edges of the document window.  The scroll boxes inside the scroll bars indicate your vertical and horizontal location in the document.  You can use the mouse to scroll to other parts of the document.}{\f2  \par }{\f2  \par }{\f2 << Describe the actions of the various parts of the scrollbar, according to how they behave in your application. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_SIZE}}{\b\f2 Size c}{\b\f2 ommand (System menu)} \par  \par {\f2 Use this command to display a four-headed arrow so you can size the active window with the arrow keys.}{\f2  \par }{\f2 \{}{\f2 bml hlp}{\f2 \\}{\f2 curarw4.bmp}{\f2 \}}{\f2  \par }{\f2  \par }{\f2 After the pointer changes to the four-headed arrow:}{\f2  \par }\pard \fi-360\li360\sb60\sl240 {\f2 1.}{\f2 \tab }{\f2 Press one of the DIRECTION keys (left, right, up, or down arrow key) to move the pointer to the border you want to move.  }{\f2  \par }{\f2 2.}{\f2 \tab }{\f2 Press a DIRECTION key to move the border.}{\f2  \par }{\f2 3.}{\f2 \tab }{\f2 Press ENTER when the window is the size you want.}{\f2  \par }\pard \sl240 {\f2  \par }{\f2 Note:  This command is unavailable if you maximize the window.}{\f2  \par } \par {\b\f2 Shortcut}{\b  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Mouse:}{\f2 \tab }{\f2 Drag the size bars at the corners or edges of the window.}{\f2  \par }\pard \li360\sl240 {\f2  \par }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_MOVE}}{\b\f2 Move c}{\b\f2 ommand (Control menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to display a four-headed arrow so you can move the active window or dialog box with the arrow keys.}{\f2  \par }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 curarw4.bmp}{\f2 \}}{\f2  \par }{\f2  \par }{\f2 Note:  This command is unavailable if you maximize the window.}{\f2  \par }{\f2  \par }{\b\f2 Shortcut}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Keys:}{\f2 \tab }{\f2 CTRL+F7}{\f2  \par }{\f2  \par }\pard \sl240\tx1440 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_MINIMIZE}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ System Minimize Command}}{\b\f2 Minimi}{\b\f2 ze command (application Control menu)}{\b\f2  \par }\pard \sl240 {\f2  \par }{\f2 Use this command to reduce the <<YourApp>> window to an icon.}{\f2  \par }\pard \fi-360\li360\sl240 {\b  \par }{\b\f2 Shortcut}{\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Mouse:}{\f2 \tab }{\f2 Click the minimize icon }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 scmin.bmp}{\f2 \}}{\f2  on the title bar.}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 ALT+F9}{\f2  \par }\pard \fi-360\li1080\sl240  \par \pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_MAXIMIZE}}{\b\f2 Maximize}{\b\f2  command (System menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to enlarge the active window to fill the available space.}{\f2  \par }\pard \fi-360\li360\sl240 {\b\f2  \par }{\b\f2 Shortcut}{\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Mouse:}{\f2 \tab }{\f2 Click the maximize icon }{\f2 \{}{\f2 bmc hlp}{\f2 \\}{\f2 scmax.bmp}{\f2 \}}{\f2  on the title bar; or double-click the title bar.}{\f2  \par }{\f2 Keys:}{\f2 \tab }{\f2 CTRL+F10 enlarges a document window.}{\f2  \par }\pard \fi-360\li1080\sl240  \par \pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_NEXTWINDOW}}{\b\f2 Next }{\b\f2 Window command (document Control menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to switch to the next open document window.  <<YourApp>> determines which window is next according to the order in which you opened the windows.}{\f2  \par }{\f2  \par }{\b\f2 Shortcut}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Keys:}{\f2 \tab }{\f2 CTRL+F6}{\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_PREVWINDOW}}{\b\f2 Previous}{\b\f2  Window command (document Control menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to switch to the previous open document window.  <<YourApp>> determines which window is previous according to the order in which you opened the windows.}{\f2  \par }{\f2  \par }{\b\f2 Shortcut}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Keys:}{\f2 \tab }{\f2 SHIFT+CTRL+F6}{\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_CLOSE}}{\b\f2 Close c}{\b\f2 ommand (Control menus)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to close the active window or dialog box.}{\f2  \par }{\f2  \par }{\f2 Double-clicking a Control-menu box is the same as choosing the Close command.}{\f2  \par }{\f2 \{}{\f2 bml hlp}{\f2 \\}{\f2 appexit.bmp}{\f2 \}}{\f2  \par }{\f2  \par }{\f2 Note:  If you have multiple windows open for a single document, the Close command on the document Control menu closes only one window at a time.  You can close all windows at once with the Close command on the File menu.}{\f2  \par }{\f2  \par }{\b\f2 Shortcuts}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Keys: }{\f2 \tab }{\f2 CTRL+F4 closes a document window}{\f2  \par }{\f2 \tab }{\f2 ALT+F4 closes the <<YourType>> window or dialog box}{\f2  \par }\pard \sl240 {\f2 \tab }{\f2 \tab }{\f2 \tab }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_RESTORE}}{\b\f2 Restore c}{\b\f2 ommand (Control menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to return the active window to its size and position before you chose the Maximize or Minimize command.}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_SC_TASKLIST}}{\b\f2 Switch to c}{\b\f2 ommand (application Control menu)}{\b\f2  \par }{\f2  \par }{\f2 Use this command to display a list of all open applications.  Use this "Task List" to switch to or close an application on the list.}{\f2  \par }{\f2  \par }{\b\f2 Shortcut}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Keys:}{\f2 \tab }{\f2 CTRL+ESC}{\f2  \par }\pard \sl240 {\f2  \par }{\b\f2 Dialog Box Options}{\b\f2  \par }{\f2 When you choose the Switch To command, you will be presented with a dialog box with the following options:}{\f2  \par }\pard \sb60\sl240 {\b\f2 Task List}{\b\f2  \par }\pard \li360\sl240 {\f2 Select the application you want to switch to or close.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Switch To}{\b\f2  \par }\pard \li360\sl240 {\f2 Makes the selected application active.}{\f2  \par }\pard \sb60\sl240 {\b\f2 End Task}{\b\f2  \par }\pard \li360\sl240 {\f2 Closes the selected application.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Cancel}{\b\f2  \par }\pard \li360\sl240 {\f2 Closes the Task List box.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Cascade}{\b\f2  \par }\pard \li360\sl240 {\f2 Arranges open applications so they overlap and you can see each title bar.  This option does not affect applications reduced to icons.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Tile}{\b\f2  \par }\pard \li360\sl240 {\f2 Arranges open applications into windows that do not overlap.  This option does not affect applications reduced to icons.}{\f2  \par }\pard \sb60\sl240 {\b\f2 Arrange Icons}{\b\f2  \par }\pard \li360\sl240 {\f2 Arranges the icons of all minimized applications across the bottom of the screen.}{\f2  \par }\pard \sl240 {\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_VIEW_RULER}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ View Ruler Command}}{\b\f2 Ruler command (View menu)}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDD_FONT}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Choose Font Dialog}}{\b\f2 C}{\b\f2 hoose Font dialog box}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDD_COLOR}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Choose Color Dialog}}{\b\f2 Choose Color dialog}{\b\f2  box}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_FIND}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Edit Find Command}}{\b\f2 Find command (Edit menu) \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDD_FIND}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Find Dialog}}{\b\f2 Find dialog}{\b\f2  box}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_REPLACE}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Edit Replace Command}}{\b\f2 Replace command (Edit menu) \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDD_REPLACE}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Replace Dialog}}{\b\f2 Replace dialog}{\b\f2  box}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_REPEAT}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Edit Repeat Command}}{\b\f2 Repeat comman}{\b\f2 d (Edit menu)}{\b\f2  \par }{\b\f2  \par }{\f2 Use this command to repeat the last editing command carried out.  The Repeat menu item changes to Can't Repeat if you cannot repeat your last action.}{\f2  \par }{\f2  \par }{\b\f2 Shortcut}{\b\f2  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f2 Key:}{\f2 \tab }{\f2 F4}{\f2  \par }\pard \sl240 {\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_CLEAR}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Edit Clear Command}}{\b\f2 Clear comm}{\b\f2 and (Edit menu)}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_EDIT_CLEAR_ALL}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Edit Clear All}}{\b\f2 Clea}{\b\f2 r All command (Edit menu)}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_NEXT_PANE}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Next Pane Command}}{\b\f2 Nex}{\b\f2 t Pane}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_PREV_PANE}}{\f2 ${\footnote \pard\plain \sl240 \fs20\lang1033 $ Prev Pane Command}}{\b\f2 P}{\b\f2 rev Pane}{\b\f2  \par }{\b\f2  \par }{\f2 << Write application-specific help here. >>}{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HIDR_DOC1TYPE}}{\b\f2 Modifying the Document \par }{\f2  \par }{\f2 << Write application-specific help here that provides an overview of how the user should modify a document using your application.  }{\f2  \par }{\f2  \par }{\f2 If your application supports multiple document types and you want to have a distinct help topic for each, then use the help context i.d. generated by running the MAKEHELP.BAT file produced by AppWizard.  Alternatively, run MAKEHM as follows:}{\f2  \par }{\f2  \par }{\f2 \tab }{\f2 makehm IDR_HIDR_,0x2000 resource.h}{\f2  \par }{\f2  \par }{\f2 If the IDR_ symbol for one of your document types is, for example, IDR_CHARTTYPE, then the help context i.d. generated by MAKEHM will be HIDR_CHARTTYPE.}{\f2  \par }{\f2  \par }{\f2 Note, AppWizard defines the HIDR_DOC1TYPE help context i.d. used by this}{\f2   help topic for the first document type supported by your application.  AppWizard produces an alias in the .HPJ file for your application, mapping HIDR_DOC1TYPE to the HIDR_ produced by MAKEHM for that document type. >>}{\f2  \par }{\f2  \par }{\f2 \page }{\f2  \par }{\f2 \page }{\f2 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_HT_NOWHERE}}{\b\f2 No Help Availab}{\b\f2 le} \par  \par {\f2 No help is available for this area of the window.}{\f2  \par }{\f2 \page }{\fs16\up6 #{\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 #} AFX_HIDP_default \par }}{\f2  }{\b\f2 No Help Available}{\b\f2  \par } \par {\f2 No help is available for this message box.}{\f2  \par } \par {\f2 << If you wish to author help specific to each message box prompt, then remove the AFX_HIDP_xxx values}{\f2   from the [ALIAS] section of your .HPJ file, and author a topic for each AFX_HIDP_xxx value.  For example, AFX_HIDP_INVALID_FILENAME is the help topic for the Invalid Filename message box. >>}{\f2  \par }{\f2  \par }\pard  \par }
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\ui\itools\isadmin\hlp\afxprint.rtf ===
{\rtf1\ansi \deff0\deflang1024{\fonttbl{\f0\froman Times New Roman;}{\f1\froman Symbol;}{\f2\fswiss Arial;}{\f3\froman Tms Rmn;}{\f4\fswiss Helv;}{\f5\fswiss Helvetica;}{\f6\fswiss MS Sans Serif;}} {\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue127;\red0\green127\blue127;\red0\green127\blue0; \red127\green0\blue127;\red127\green0\blue0;\red127\green127\blue0;\red127\green127\blue127;\red192\green192\blue192;}{\stylesheet{\s244 \f3\fs16\up6\lang1033 \sbasedon0\snext0 footnote reference;}{\s245 \f3\fs20\lang1033  \sbasedon0\snext245 footnote text;}{\s246\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 9;}{\s247\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 8;}{\s248\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 7;}{\s249\li720  \f3\fs20\ul\lang1033 \sbasedon0\snext255 heading 6;}{\s250\li720 \b\f3\fs20\lang1033 \sbasedon0\snext255 heading 5;}{\s251\li360 \f3\ul\lang1033 \sbasedon0\snext255 heading 4;}{\s252\li360 \b\f3\lang1033 \sbasedon0\snext255 heading 3;}{\s253\sb120  \b\f4\lang1033 \sbasedon0\snext0 heading 2;}{\s254\sb240 \b\f4\ul\lang1033 \sbasedon0\snext0 heading 1;}{\s255\li720 \f3\fs20\lang1033 \sbasedon0\snext255 Normal Indent;}{\f3\fs20\lang1033 \snext0 Normal;}{\s2\fi-240\li480\sb80\tx480 \f5\lang1033  \sbasedon0\snext2 nscba;}{\s3\fi-240\li240\sa20 \f5\lang1033 \sbasedon0\snext3 j;}{\s4\li480\sa20 \f5\lang1033 \sbasedon0\snext4 ij;}{\s5\sb80\sa20 \f5\lang1033 \sbasedon0\snext5 btb;}{\s6\fi-240\li2400\sb20\sa20 \f5\fs20\lang1033 \sbasedon0\snext6 ctcb;} {\s7\fi-240\li480\sa40\tx480 \f5\lang1033 \sbasedon0\snext7 ns;}{\s8\sa120 \f5\fs28\lang1033 \sbasedon0\snext8 TT;}{\s9\fi-240\li2400\sa20 \f5\lang1033 \sbasedon0\snext9 crtj;}{\s10\fi-240\li480\tx480 \f5\lang1033 \sbasedon0\snext10 nsca;}{\s11\sa20  \f5\lang1033 \sbasedon0\snext11 bt;}{\s12\li240\sb120\sa40 \f5\lang1033 \sbasedon0\snext12 Hf;}{\s13\li240\sb120\sa40 \f5\lang1033 \sbasedon0\snext13 Hs;}{\s14\li480\sb120\sa40 \f5\lang1033 \sbasedon0\snext14 RT;}{\s15\fi-2160\li2160\sb240\sa80\tx2160  \f5\lang1033 \sbasedon0\snext15 c;}{\s16\li2160\sa20 \f5\lang1033 \sbasedon0\snext16 ct;}{\s17\li240\sa20 \f5\lang1033 \sbasedon0\snext17 it;}{\s18\li480 \f5\fs20\lang1033 \sbasedon0\snext18 nsct;}{\s19\fi-160\li400\sb80\sa40 \f5\lang1033  \sbasedon0\snext19 nscb;}{\s20\fi-2640\li2880\sb120\sa40\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f5\lang1033 \sbasedon0\snext20 HC2;}{\s21\fi-2640\li2880\sb120\sa20\tx2880 \f5\lang1033 \sbasedon0\snext21 C2;}{\s22\fi-240\li2400\sa20  \f5\fs20\lang1033 \sbasedon0\snext22 ctc;}{\s23\li2160\sb160 \f5\lang1033 \sbasedon0\snext23 crt;}{\s24\li480\sb20\sa40 \f5\lang1033 \sbasedon0\snext24 or;}{\s25\fi-259\li360\sb40\sa40\tx360 \f6\fs20\lang1033 \sbasedon0\snext25 Ln1;}{\s26\li115\sb80\sa80  \f6\fs20\lang1033 \sbasedon0\snext0 *Intro;}{\s27\li115\sb80\sa80\keepn \b\f6\lang1033 \sbasedon252\snext26 *Title;}{\s28\fi-245\li360\sb80 \f6\fs20\lang1033 \snext28 *Jl;}{\s29\li360\sb40\sa40 \f6\fs20\lang1033 \snext0 Lp1;}{ \s30\fi-1800\li1915\sb60\sl-240\tx1915 \f6\fs20\lang1033 \sbasedon0\snext30 Tph;}{\s31\li115\sb120\sa80 \b\f6\fs20\lang1033 \snext25 Proch;}}{\info{\title AFXPRINT}{\subject MFC Print RTF Help}{\author AFX}{\creatim\yr1992\mo10\dy7\hr12\min33}{\version1} {\edmins45}{\nofpages1}{\nofwords65536}{\nofchars65536}{\vern16504}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \widowctrl\ftnbj \sectd \linex0\endnhere \pard\plain \sl240 \f3\fs20\lang1033 {\f4 \page }{\f4 #{\footnote  \pard\plain \sl240 \f3\fs20\lang1033 # HID_FILE_PRINT}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} printing and print preview}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} File Print command} }{\f4  }{\b\f4 Print command (File menu)}{\b\f4  \par }{\f4  \par }{\f4 Use this command to print a document.   This command presents a }{\f4\uldb Print dialog box}{\v AFX_HIDD_PRINT}{\f4  , where you may specify the range of pages to be printed, the number of copies, the destination printer, and other printer setup options.}{\b\f4  \par }{\b\f4  \par }{\b\f4 Shortcuts}{\b\f4  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f4 Toolbar:}{\f4 \tab }{\f4 \{}{\f4 bmc hlp}{\f4 \\}{\f4 fileprnt.bmp}{\f4 \}}{\f4  \par }{\f4 Keys:}{\f4 \tab }{\f4 CTRL+P}{\f4  \par }\pard \sl240 {\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDD_PRINT}}{\b\f4 Print }{\b\f4 dialog box}{\b\f4  \par }{\f4  \par }{\f4 The following options allow you to specify how the document should be printed:}{\f4  \par }\pard \sb60\sl240 {\b\f4 Printer}{\b\f4  \par }\pard \li360\sl240 {\f4 This is the active printer and printer connection.  Choose the Setup option to change the printer and printer connection.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Setup}{\b\f4  \par }\pard \li360\sl240 {\f4 Displays a }{\f4\uldb Print Setup dialog box}{\v AFX_HIDD_PRINTSETUP}{\f4 , so  you can select a printer and printer connection.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Print Range}{\b\f4  \par }\pard \li360\sl240 {\f4 Specify the pages you want to print:}{\f4  \par }\trowd \trgaph108\trleft402 \cellx1647\cellx8622\pard \sl240\intbl {\b\f4 All}{\b\f4 \cell }{\f4 Prints the entire document.}{\f4 \cell }\pard \intbl {\f4 \row }\trowd \trgaph108\trleft402 \cellx1647\cellx8622\pard \sl240\intbl {\b\f4 Selection\cell }{ \f4 Prints the currently selected text.}{\f4 \cell }\pard \intbl {\f4 \row }\trowd \trgaph108\trleft402 \cellx1647\cellx8622\pard \sl240\intbl {\b\f4 Pages\cell }{\f4 Pri}{\f4 nts the range of pages you specify in the From and To boxes.}{\f4 \cell }\pard  \intbl {\f4 \row }\pard \sb60\sl240 {\b\f4 Copies \par }\pard \li360\sl240 {\f4 Specify the number of copies you want to print for the above page range.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Collate Copies}{\b\f4  \par }\pard \li360\sl240 {\f4 Prints copies in page number order, instead of separated multiple copies of each page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Print Quality}{\b\f4  \par }\pard \li360\sl240 {\f4 Select the quality of the printing.  Generally, lower quality printing takes less time to produce.}{\f4  \par }\pard \sl240 {\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDD_PRINTDLG}}{\b\f4 P}{\b\f4 rint Progress Dialog}{\b\f4  \par }{\f4  \par }{\f4 The Printing dialog box is shown during the time that <<YourApp>> is sending output to the printer.  The page number indicates the progress of the printing.}{\f4  \par }{\f4  \par }{\f4 To abort printing, choose Cancel.}{\f4  \par }{\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # HID_FILE_PRINT_PREVIEW}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} printing and print preview}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245  \f3\fs20\lang1033 {\fs16\up6 $} File Print Preview command}}{\f4  }{\b\f4 Print Preview command (File menu)}{\f4  \par }{\f4  \par }{\f4 Use this command to display the active document as it would appear when printed.  When you choose this command, the main window will be replaced with a print preview window in which one }{\f4  or two pages will be displayed in their printed format.  The }{\f4\uldb print preview toolbar}{\v\f4 AFX_HIDW_PREVIEW_BAR}{\f4   offers you options to view either one or two pages at a time; move back and forth through the document; zoom in and out of pages; and initiate a print job.}{\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDW_PREVIEW_BAR}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} printing and print preview}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245  \f3\fs20\lang1033 {\fs16\up6 $} print preview toolbar}}{\f4  }{\b\f4 Print Preview toolbar}{\b\f4  \par }{\f4  \par }{\f4 The print preview toolbar offers you the following options:}{\f4  \par }\pard \sb60\sl240 {\b\f4 Print}{\b\f4  \par }\pard \li360\sl240 {\f4 Bring up the print dialog box, to start a print job.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Next Page}{\b\f4  \par }\pard \li360\sl240 {\f4 Preview the next printed page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Prev Page}{\b\f4  \par }\pard \li360\sl240 {\f4 Preview the previous printed page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 One Page / Two Page}{\b\f4  \par }\pard \li360\sl240 {\f4 Preview one or two printed pages at a time.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Zoom In}{\b\f4  \par }\pard \li360\sl240 {\f4 Take a closer look at the printed page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Zoom Out}{\b\f4  \par }\pard \li360\sl240 {\f4 Take a larger look at the printed page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Close}{\b\f4  \par }\pard \li360\sl240 {\f4 Return from print preview to the editing window.}{\f4  \par }\pard \sl240 {\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # HID_FILE_PRINT_SETUP}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} printing and print preview}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245  \f3\fs20\lang1033 {\fs16\up6 $} File Print Setup command}}{\f4  }{\b\f4 Print Setup command (File menu)}{\b\f4  \par }{\f4  \par }{\f4 Use this command to select a printer and a printer connection.  This command presents a }{\f4\uldb Print Setup dialog box}{\v AFX_HIDD_PRINTSETUP}{\f4 , where you specify the printer and its connection.}{\b\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDD_PRINTSETUP}}{\b\f4 Print}{\b\f4  Setup dialog box}{\b\f4  \par }{\f4  \par }{\f4 The following options allow you to select the destination printer and its connection.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Printer}{\b\f4  \par }\pard \li360\sl240 {\f4  Select the printer you want to use.  Choose the Default Printer; or choose the Specific Printer option and select one of the current installed printers shown in the box.  You install printers and configure ports using the Windows Control Panel. }{\f4  \par }\pard \sb60\sl240 {\b\f4 Orientation}{\b\f4  \par }\pard \li360\sl240 {\f4 Choose Port}{\f4 rait or Landscape.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Paper Size}{\b\f4  \par }\pard \li360\sl240 {\f4 Select the size of paper that the document is to be printed on.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Paper Source}{\b\f4  \par }\pard \li360\sl240 {\f4 Some printers offer multiple trays for different paper sources.  Specify the tray here.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Options}{\b\f4  \par }\pard \li360\sl240 {\f4 Displays a dialog box where you can make additional choices about printing, specific to the type of printer you have selected.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Network...}{\b\f4  \par }\pard \li360\sl240 {\f4 Choose this button to connect to a network location, assigning it a new drive letter.}{\f4  \par }\pard \sl240 {\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # HID_FILE_PAGE_SETUP}}{\f4 ${\footnote \pard\plain \sl240 \f3\fs20\lang1033 $ File Page Setup Command}}{\b\f4 Page Setup command (File menu)}{\b\f4  \par }{\b\f4  \par }{\f4 << Write application-specific help here. >>}{\f4  \par }\pard  \par }
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\ui\itools\mime\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : MIME
========================================================================


AppWizard has created this MIME application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your MIME application.


MIME.MAK
    This project file is compatible with the Visual C++ development
	environment. 

    It is also compatible with the NMAKE program provided with Visual C++. 

    To build a debug version of the program from the MS-DOS prompt, type
nmake /f MIME.MAK CFG="Win32 Debug"
    or to build a release version of the program, type
nmake /f MIME.MAK CFG="Win32 Release"

MIME.H
    This is the main header file for the application.  It includes other
    project specific headers (including RESOURCE.H) and declares the
    CMimeApp application class.

MIME.CPP
    This is the main application source file that contains the application
    class CMimeApp.

MIME.RC
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in the
    Visual C++ development environment.

RES\MIME.ICO
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file MIME.RC.

RES\MIME.RC2
    This file contains resources that are not edited by the Visual C++
	development environment.  You should place all resources not
	editable by the resource editor in this file.


MIME.CLW
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////

For the main frame window:

mainfrm.H, mainfrm.CPP
    These files contain the frame class CMainFrame, which is derived from
    CFrameWnd and controls all SDI frame features.


/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

mimedoc.H, mimedoc.CPP - the document
    These files contain your CMimeDoc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CMimeDoc::Serialize).

mimeview.H, mimeview.CPP - the view of the document
    These files contain your CMimeView class.
    CMimeView objects are used to view CMimeDoc objects.
    



/////////////////////////////////////////////////////////////////////////////
Other standard files:

STDAFX.H, STDAFX.CPP
    These files are used to build a precompiled header (PCH) file
    named MIME.PCH and a precompiled types file named STDAFX.OBJ.

RESOURCE.H
    This is the standard header file, which defines new resource IDs.
    Visual C++ reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\utils\cfgmnt\readme.txt ===
Issues:
- convert COpQueue into COM interface
- SettingsWatch should be integrated into 
	iis\svcs\infocomm\metadata\dll\comobj.cxx function CreateNotifications
	thereby living within the metabase code. There it should CoCreateInstance 
	a COpQueue interface.
- DirWatch should be intergrated w/ IIS core (johnL)
- CQueueWatch should live in IISAdmin
- CopMD::dome should encrypt data if necessary
- add property pages in MMC
- DirWatch filter out certain file-change notifications:
	- overlapping virtual dir structures
	- certain files that should never be versioned
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\utils\dmdiffs\readme.txt ===
Purpose:
    These are simple tools to produce a summary of changes
    to the file system and the metabase between two states.
    
    To make a snapshot of a state, run 
    
    getit <basename>

    which will generate files <basename>.dir and <basename>.mb 
    in current directory.

    To produce a summary of differences between two states, do
    
    doit <old_snapshot_basename> <new_snapshot_basename>
    
    
    Perl for Win32 can be found, for instance, at 
    
    http://www.activestate.com (binary distribution)
    
    
    Please, direct any comments to akozlov.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\utils\metautil\linttest\readme.txt ===
Use mlinttst.asp to check your metabase for lint.

makelint.bat will put a bunch of lint in your metabase for testing purposes.
cleanlnt.bat will remove it afterwards.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\iis\utils\metautil\metaedit\readme.txt ===
Install:

Run the setup program from install\setup.exe

If you already have a previous version of MetaEdit installed you probably can get away
with copying over MetaEdit.exe and MetaUtil.exe and then regsvr32 metautil.dll.


Bugs, issues, etc:

o Backup/Restore not implemented (planned to add under Metabase Menu)
o Find searches the Metabase in natural order.  Since the tree view and list view are 
  sorted, this causes the search to skip around.
o There is no way to view properties under the root node (key = "")

Send comments to:

t-brianm@microsoft.com
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\intlwb\cht2\readme.txt ===
Contacts: dlee checks in for

myang Michael Yang
jubbyc Jubby Chen
bobbymak Bobby Mak
jordank Jordan Y.C. Kung

IWordBreaker CLSID: {E1B6B375-3412-11D3-A9E2-00AA0059F9F6}
No stemmer
Binaries from \\tcctg\public\wordbrkr\001215
Source from \\tcctg\public\wordbrkr\001215\src\kernel\chtbrkr
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\inetsrv\intlwb\enu\wordbreaker\spanishdict.txt ===
y;2;ya;2;65;4265728;3359637504
yce;4;yace;4;1;71424;3360051200
yaced;5;yaced;5;257;16842752;3360051712
yacr;5;yacer;5;1;80384;3360053504
ypa;4;yapa;4;51;3348224;3361738752
ype;4;yape;4;13;857856;3361755136
yaz;3;yaz;3;1;65536;3363045376
yzga;5;yazga;5;1;71424;3363074176
y;2;ye;2;257;16849408;3376414720
yrga;5;yerga;5;1;72192;3378802816
yrgan;6;yergan;6;257;16849408;3378802872
yrma;5;yerma;5;51;3348992;3378827392
yrme;5;yerme;5;13;858624;3378827904
yrra;5;yerra;5;1;72192;3378847872
yrre;5;yerre;5;5;334336;3378848384
yugul;6;yugula;6;32;2119424;3444528644
ynta;5;yunta;5;1;72448;3445440640
yuntas;6;yuntas;6;1;65536;3445440716
zfa;4;zafa;4;51;3348224;3494645760
zfe;4;zafe;4;13;857856;3494662144
zahir;6;zahira;6;8;546560;3494942980
zmpa;5;zampa;5;51;3348224;3495624832
zmpe;5;zampe;5;13;857856;3495625344
znja;5;zanja;5;51;3348224;3495731328
znje;5;zanje;5;13;857856;3495731840
zpa;4;zapa;4;51;3348224;3495956480
zpe;4;zape;4;13;857856;3495972864
zpea;5;zapea;5;51;3348224;3495972992
zpee;5;zapee;5;13;857856;3495973504
zrpa;5;zarpa;5;51;3348224;3496280192
zrpe;5;zarpe;5;13;857856;3496280704
zrpea;6;zarpea;6;51;3348224;3496280708
zrpee;6;zarpee;6;13;857856;3496280724
zoco;4;zoco;4;1;65536;3553030144
zlla;5;zulla;5;51;3349248;3579363456
zlle;5;zulle;5;13;858880;3579363968
zumac;6;zumaca;6;32;2119424;3579449732
zmba;5;zumba;5;51;3349248;3579453568
zmbe;5;zumbe;5;13;858880;3579454080
zncha;6;zuncha;6;51;3349248;3579589636
znche;6;zunche;6;13;858880;3579589652
zrce;5;zurce;5;1;72448;3580113536
zurcid;6;zurcid;6;257;16842752;3580114064
zurcr;6;zurcir;6;1;84224;3580114120
zrda;5;zurda;5;1;72448;3580117120
zrra;5;zurra;5;59;3873536;3580174464
zrran;6;zurran;6;257;16849664;3580174520
zrre;5;zurre;5;13;858880;3580174976
zurri;6;zurria;6;34;2250496;3580175492
zurz;5;zurza;5;9;608000;3580207232
zrzan;6;zurzan;6;257;16849664;3580207288
;2;a;2;128;8394496;3762290688
me;4;ame;4;1;71424;3764015104
quea;6;equea;6;51;3348992;3781382788
quee;6;equee;6;13;858624;3781382804
a;4;oa;4;1;71680;3824685056
oas;5;oas;5;1;65536;3824687488
;1;a;1;16832;1103103744;134217728
aba;3;aba;3;16;1048576;142737408
ablea;6;abalea;6;51;3352320;142787204
ablee;6;abalee;6;13;861952;142787220
abrca;6;abarca;6;51;3352320;142811524
abrra;6;abarra;6;59;3876608;142813444
abrre;6;abarre;6;13;861952;142813460
abarr;6;abarr;6;256;16777216;142813500
absta;6;abasta;6;51;3352320;142817796
abste;6;abaste;6;13;861952;142817812
abat;5;abata;5;265;17385216;142819456
abtan;6;abatan;6;257;16852736;142819512
abte;5;abate;5;1;75520;142819968
abatid;6;abatid;6;257;16842752;142820496
abatr;6;abatir;6;1;84224;142820552
aba;5;abaa;5;51;3352320;142852224
abe;5;abae;5;13;861952;142852736
abdca;6;abdica;6;51;3356928;143167876
absma;6;abisma;6;51;3352832;143865476
absme;6;abisme;6;13;862464;143865492
abjra;6;abjura;6;51;3357440;144005380
abjre;6;abjure;6;13;867072;144005396
abneg;6;abnega;6;50;3299072;144462724
abba;5;aboba;5;51;3352576;144580736
abbe;5;abobe;5;13;862208;144581248
abca;5;aboca;5;51;3352576;144584832
abga;5;aboga;5;51;3352576;144601216
abgue;6;abogue;6;13;862208;144603796
abolid;6;abolid;6;257;16842752;144622736
abolr;6;abolir;6;1;84224;144622792
ablla;6;abolla;6;51;3352576;144623108
ablle;6;abolle;6;13;862208;144623124
ablsa;6;abolsa;6;35;2304000;144624004
ablse;6;abolse;6;5;337920;144624020
abmba;6;abomba;6;51;3352576;144625924
abmbe;6;abombe;6;13;862208;144625940
abna;5;abona;5;51;3352576;144629888
abne;5;abone;5;13;862208;144630400
abque;6;aboque;6;13;862208;144644756
abrda;6;aborda;6;51;3352576;144646660
abrde;6;aborde;6;13;862208;144646676
abrta;6;aborta;6;51;3352576;144648708
abrte;6;aborte;6;13;862208;144648724
abya;5;aboya;5;51;3352576;144674944
abye;5;aboye;5;13;862208;144675456
abr;4;abra;4;73;4798208;144969728
abrce;6;abrace;6;13;866048;144970132
bran;5;abran;5;257;16844544;144971520
abrsa;6;abrasa;6;51;3356416;144972164
abrse;6;abrase;6;13;866048;144972180
abrza;6;abraza;6;51;3356416;144973060
bre;4;abre;4;1;67328;144986112
abrva;6;abreva;6;51;3357184;144988932
abrve;6;abreve;6;13;866816;144988948
abrid;5;abrid;5;257;16842752;145003008
abrga;6;abriga;6;51;3356928;145003396
abrr;5;abrir;5;1;80128;145004800
abr;4;abro;4;129;8468480;145027072
abrga;6;abroga;6;51;3356672;145027972
abrma;6;abruma;6;51;3357440;145053316
abrme;6;abrume;6;13;867072;145053332
ablta;6;abulta;6;51;3353344;145410564
ablte;6;abulte;6;13;862976;145410580
abnda;6;abunda;6;51;3353344;145416708
abnde;6;abunde;6;13;862976;145416724
abrra;6;aburra;6;9;600832;145434884
abrre;6;aburre;6;5;338688;145434900
absa;5;abusa;5;51;3353344;145436800
abse;5;abuse;5;13;862976;145437312
ac;3;ac;3;16768;1098907648;146931712
acba;5;acaba;5;51;3352320;146940032
acbe;5;acabe;5;13;861952;146940544
acace;6;acaece;6;1;80384;146952596
aclla;6;acalla;6;51;3352320;146982404
aclle;6;acalle;6;13;861952;146982420
acmpa;6;acampa;6;51;3352320;146987012
acmpe;6;acampe;6;13;861952;146987028
acrea;6;acarea;6;51;3352320;147006084
acree;6;acaree;6;13;861952;147006100
acta;5;acata;5;51;3352320;147013760
acatr;6;acatar;6;16384;1073760000;147013832
acte;5;acate;5;13;861952;147014272
acced;6;acceda;6;9;612096;147214852
accde;6;accede;6;1;80384;147214868
acce;5;acece;5;13;862720;147468928
accha;6;acecha;6;51;3353088;147469316
acche;6;aceche;6;13;862720;147469332
acda;5;aceda;5;51;3353088;147472512
acde;5;acede;5;13;862720;147473024
aceta;6;aceita;6;51;3356928;147495428
acete;6;aceite;6;13;866560;147495444
acpa;5;acepa;5;51;3353088;147521664
acpe;5;acepe;5;13;862720;147522176
acpta;6;acepta;6;51;3353088;147524100
acpte;6;acepte;6;13;862720;147524116
acra;5;acera;5;51;3353088;147529856
acrca;6;acerca;6;51;3353088;147530116
acre;5;acere;5;13;862720;147530368
acert;6;acerta;6;50;3299072;147532292
acert;6;acerte;6;8;547328;147532308
acza;5;aceza;5;51;3353088;147562624
achca;6;achaca;6;51;3356416;147853700
achta;6;achata;6;51;3356416;147855876
achte;6;achate;6;13;866048;147855892
achca;6;achica;6;51;3356928;147886468
achna;6;achina;6;51;3356928;147887876
achne;6;achine;6;13;866560;147887892
achca;6;achoca;6;51;3356672;147911044
achla;6;achola;6;51;3356672;147912196
achle;6;achole;6;13;866304;147912212
achte;6;achote;6;1;79872;147913236
achra;6;achura;6;51;3357440;147937540
achre;6;achure;6;13;867072;147937556
aclma;6;aclama;6;51;3356416;148379268
aclme;6;aclame;6;13;866048;148379284
aclra;6;aclara;6;51;3356416;148379908
aclre;6;aclare;6;13;866048;148379924
acloc;6;acloca;6;50;3299072;148435332
accea;6;acocea;6;51;3352576;148779652
accee;6;acocee;6;13;862208;148779668
acda;5;acoda;5;51;3352576;148783232
acde;5;acode;5;16397;1074604032;148783744
acge;5;acoge;5;1;75776;148796032
acoged;6;acoged;6;257;16842752;148796048
acogr;6;acoger;6;1;84480;148796104
acoj;5;acoja;5;9;608000;148807808
acjan;6;acojan;6;257;16852992;148807864
acla;5;acola;5;51;3352576;148816000
acle;5;acole;5;13;862208;148816512
acoll;6;acolla;6;50;3299072;148817412
acoll;6;acolle;6;8;547328;148817428
acpa;5;acopa;5;51;3352576;148832384
acpe;5;acope;5;13;862208;148832896
acpia;6;acopia;6;51;3352576;148833412
acpie;6;acopie;6;13;862208;148833428
acpla;6;acopla;6;51;3352576;148833796
acple;6;acople;6;13;862208;148833812
acord;6;acorda;6;50;3299072;148840964
acord;6;acorde;6;8;547328;148840980
acorn;6;acorna;6;34;2250496;148842244
acrta;6;acorta;6;51;3352576;148843012
acrte;6;acorte;6;13;862208;148843028
acsa;5;acosa;5;51;3352576;148844672
acse;5;acose;5;13;862208;148845184
acost;6;acosta;6;50;3299072;148847108
acost;6;acoste;6;8;547328;148847124
acta;5;acota;5;51;3352576;148848768
acte;5;acote;5;13;862208;148849280
acoto;5;acoto;5;1;65536;148850560
acrce;6;acrece;6;1;80384;149180820
acrba;6;acriba;6;51;3356928;149197060
acrbe;6;acribe;6;13;866560;149197076
actva;6;activa;6;51;3356928;149461764
actve;6;active;6;13;866560;149461780
actu;5;actua;5;50;3294976;149508224
actu;5;actue;5;8;543232;149508736
accha;6;acucha;6;51;3353344;149566468
acche;6;acuche;6;13;862976;149566484
accia;6;acucia;6;51;3353344;149566596
accie;6;acucie;6;13;862976;149566612
acud;5;acuda;5;9;608000;149569664
acdan;6;acudan;6;257;16853760;149569720
acde;5;acude;5;1;76544;149570176
acudid;6;acudid;6;257;16842752;149570704
acudr;6;acudir;6;1;84224;149570760
acuta;6;acuita;6;51;3356928;149592580
acute;6;acuite;6;13;866560;149592596
acla;5;acula;5;51;3353344;149602432
acle;5;acule;5;13;862976;149602944
acna;5;acuna;5;51;3353344;149610624
acne;5;acune;5;13;862976;149611136
acsa;5;acusa;5;51;3353344;149631104
acse;5;acuse;5;13;862976;149631616
aca;5;acua;5;51;3353344;149667968
ace;5;acue;5;13;862976;149668480
d;2;ad;2;16384;1073743616;150994944
adpta;6;adapta;6;51;3352320;151194116
adpte;6;adapte;6;13;861952;151194132
adrga;6;adarga;6;51;3352320;151200644
adrva;6;adarva;6;51;3352320;151202564
adrve;6;adarve;6;13;861952;151202580
adta;5;adata;5;51;3352320;151208064
adte;5;adate;5;13;861952;151208576
adcua;6;adecua;6;51;3353088;151665284
adcue;6;adecue;6;12;797184;151665300
adma;5;adema;5;51;3353088;151703680
adme;5;ademe;5;13;862720;151704192
adeda;6;adeuda;6;51;3357440;151736836
adede;6;adeude;6;13;867072;151736852
adhir;6;adhira;6;8;546560;152082692
adi;4;adia;4;50;3290880;152178688
adi;4;adie;4;264;17316352;152195072
adita;6;adieta;6;51;3357184;152197636
adite;6;adiete;6;13;866816;152197652
admra;6;admira;6;51;3356928;152738052
admre;6;admire;6;13;866560;152738068
admit;6;admita;6;9;612096;152738308
admte;6;admite;6;1;80128;152738324
adba;5;adoba;5;51;3352576;152969344
adbe;5;adobe;5;13;862208;152969856
adpta;6;adopta;6;51;3352576;153029124
adpte;6;adopte;6;13;862208;153029140
adra;5;adora;5;51;3352576;153034880
adre;5;adore;5;13;862208;153035392
adorm;6;adorm;6;256;16777216;153036452
adrna;6;adorna;6;51;3352576;153036548
adrne;6;adorne;6;13;862208;153036564
adsa;5;adosa;5;51;3352576;153038976
adse;5;adose;5;13;862208;153039488
adrce;6;adrice;6;13;866560;153391508
adrza;6;adriza;6;51;3356928;153394436
aduna;6;aduana;6;1;79616;153753348
adce;5;aduce;5;1;76544;153760384
aducid;6;aducid;6;257;16842752;153760912
aducr;6;aducir;6;1;84224;153760968
adua;6;aduea;6;51;3357184;153771524
adue;6;aduee;6;13;866816;153771540
adje;5;aduje;5;1;76544;153789056
adla;5;adula;5;51;3353344;153796736
adlce;6;adulce;6;13;862976;153797012
adle;5;adule;5;13;862976;153797248
adulz;6;adulza;6;59;3888896;153799940
adulz;6;adulz;6;16384;1073741824;153799996
adna;5;aduna;5;51;3353344;153804928
adne;5;adune;5;13;862976;153805440
adurm;6;adurma;6;8;546560;153822852
aduzc;6;aduzca;6;9;612096;153854340
advra;6;advera;6;51;3357184;153901316
advre;6;advere;6;13;866816;153901332
afma;5;afama;5;51;3352320;159568000
afme;5;afame;5;13;861952;159568512
afna;5;afana;5;51;3352320;159572096
afne;5;afane;5;13;861952;159572608
fea;4;afea;4;51;3344128;160043008
afcta;6;afecta;6;51;3353088;160053764
afcte;6;afecte;6;13;862720;160053780
fee;4;afee;4;13;853760;160059392
afeta;6;afeita;6;51;3356928;160078340
afete;6;afeite;6;13;866560;160078356
aflpa;6;afelpa;6;51;3353088;160090116
aflpe;6;afelpe;6;13;862720;160090132
afrra;6;aferra;6;51;3353088;160114948
afrre;6;aferre;6;13;862720;160114964
afla;5;afila;5;51;3352832;160612480
afle;5;afile;5;13;862464;160612992
aflia;6;afilia;6;51;3352832;160613508
aflie;6;afilie;6;13;862464;160613524
afna;5;afina;5;51;3352832;160620672
afnca;6;afinca;6;51;3352832;160620932
afne;5;afine;5;13;862464;160621184
afrma;6;afirma;6;51;3352832;160638596
afrme;6;afirme;6;13;862464;160638612
aflge;6;aflige;6;1;80128;160994196
aflij;6;aflija;6;9;612096;160994564
aflja;6;afloja;6;51;3356672;161019140
aflje;6;afloje;6;13;866304;161019156
aflra;6;aflora;6;35;2308096;161020164
aflre;6;aflore;6;5;342016;161020180
afluid;6;afluid;6;257;16842752;161043600
aflur;6;afluir;6;1;84224;161043656
afluy;6;afluya;6;9;612096;161045636
aflye;6;afluye;6;1;80640;161045652
affa;5;afofa;5;51;3352576;161374336
affe;5;afofe;5;13;862208;161374848
afoll;6;afolla;6;50;3299072;161400324
afoll;6;afolle;6;8;547328;161400340
afnda;6;afonda;6;51;3352576;161407492
afnde;6;afonde;6;13;862208;161407508
afor;5;afora;5;50;3294976;161423488
afor;5;afore;5;8;543232;161424000
afrra;6;aforra;6;51;3352576;161425668
afrre;6;aforre;6;13;862208;161425684
afsca;6;afosca;6;35;2304000;161427844
afura;6;afuera;6;1;80384;162158852
afure;6;afuere;6;5;342528;162158868
agcha;6;agacha;6;51;3352320;163722244
agche;6;agache;6;13;861952;163722260
aglla;6;agalla;6;1;75520;163759620
agrra;6;agarra;6;51;3352320;163784964
agrre;6;agarre;6;13;861952;163784980
agarr;6;agarr;6;256;16777216;163785020
agnte;6;agente;6;1;76288;164293140
agta;5;agita;5;51;3352832;164839552
agte;5;agite;5;13;862464;164840064
agbia;6;agobia;6;51;3352576;165553284
agbie;6;agobie;6;13;862208;165553300
aglpa;6;agolpa;6;51;3352576;165595140
aglpe;6;agolpe;6;13;862208;165595156
agor;5;agora;5;50;3294976;165617792
agor;5;agore;5;8;543232;165618304
agsta;6;agosta;6;51;3352576;165624324
agste;6;agoste;6;13;862208;165624340
agta;5;agota;5;51;3352576;165625984
agte;5;agote;5;13;862208;165626496
agrce;6;agrace;6;13;866048;165941652
agrda;6;agrada;6;51;3356416;165941764
agrde;6;agrade;6;13;866048;165941780
agrma;6;agrama;6;51;3356416;165942916
agrme;6;agrame;6;13;866048;165942932
agrva;6;agrava;6;51;3356416;165944068
agrve;6;agrave;6;13;866048;165944084
agrza;6;agraza;6;51;3356416;165944580
agred;6;agreda;6;9;612096;165958148
agrde;6;agrede;6;1;80384;165958164
agrga;6;agrega;6;51;3357184;165958532
gria;5;agria;5;51;3344128;165974144
grie;5;agrie;5;269;17630976;165974656
agrma;6;agruma;6;51;3357440;166024836
agrme;6;agrume;6;13;867072;166024852
agrpa;6;agrupa;6;51;3357440;166025220
agrpe;6;agrupe;6;13;867072;166025236
agua;4;agua;4;499;32702464;166334464
aguce;6;aguace;6;13;866048;166334868
aguda;6;aguada;6;1;79616;166334980
agun;5;aguan;5;256;16791296;166336256
aguse;6;aguase;6;5;341760;166336916
aguza;6;aguaza;6;51;3356416;166337796
ag;4;ag;4;16392;1074266112;166350848
agra;6;agera;6;1;80384;166353156
agre;6;agere;6;5;342528;166353172
aguja;6;aguija;6;51;3356928;166368516
aguje;6;aguije;6;13;866560;166368532
agja;5;aguja;5;1;76544;166371456
agujas;6;agujas;6;1;65536;166371532
ahcha;6;ahecha;6;51;3353088;168440836
ahche;6;aheche;6;13;862720;168440852
ahlea;6;ahelea;6;51;3353088;168477316
ahlee;6;ahelee;6;13;862720;168477332
ahij;5;ahija;5;50;3294976;168992896
ahij;5;ahije;5;8;543232;168993408
ahil;5;ahila;5;50;3294976;169001088
ahil;5;ahile;5;16392;1074285056;169001600
ahinc;6;ahinca;6;50;3299072;169009540
ahit;5;ahita;5;50;3294976;169033856
ahit;5;ahite;5;8;543232;169034368
ahga;5;ahoga;5;51;3352576;169767040
ahgue;6;ahogue;6;13;862208;169769620
ahnda;6;ahonda;6;51;3352576;169796100
ahnde;6;ahonde;6;13;862208;169796116
ahrca;6;ahorca;6;51;3352576;169812356
ahrma;6;ahorma;6;51;3352576;169813636
ahrme;6;ahorme;6;13;862208;169813652
ahrna;6;ahorna;6;51;3352576;169813764
ahrne;6;ahorne;6;13;862208;169813780
ahrra;6;ahorra;6;51;3352576;169814276
ahrre;6;ahorre;6;13;862208;169814292
ahya;5;ahoya;5;51;3352576;169840768
ahye;5;ahoye;5;13;862208;169841280
ahuch;6;ahucha;6;50;3299072;170537988
ahuca;6;ahueca;6;51;3357184;170545540
ahusa;6;ahuesa;6;51;3357184;170547588
ahuse;6;ahuese;6;13;866816;170547604
ahuva;6;ahueva;6;51;3357184;170547972
ahuve;6;ahueve;6;13;866816;170547988
ahum;5;ahuma;5;50;3294976;170578048
ahum;5;ahume;5;8;543232;170578560
ahus;5;ahusa;5;50;3294976;170602624
air;4;aira;4;50;3290880;174329856
air;4;aire;4;8;539136;174346240
area;5;airea;5;51;3348736;174346368
aree;5;airee;5;13;858368;174346880
aisl;5;aisla;5;50;3294976;174506112
aisl;5;aisle;5;8;543232;174506624
ja;3;aja;3;51;3344128;176291840
je;3;aje;3;13;853760;176816128
ajna;5;ajena;5;1;76288;176873600
ajenas;6;ajenas;6;1;65536;176873676
aj;3;aj;3;16640;1090519040;178126848
ajba;5;ajoba;5;51;3352576;178135168
ajbe;5;ajobe;5;13;862208;178135680
ajta;5;ajota;5;51;3352576;178208896
ajte;5;ajote;5;13;862208;178209408
ajsta;6;ajusta;6;51;3353344;178993668
ajste;6;ajuste;6;13;862976;178993684
alba;5;alaba;5;51;3352320;184688768
albe;5;alabe;5;13;861952;184689280
almpa;6;alampa;6;51;3352320;184735748
almpe;6;alampe;6;13;861952;184735764
alnce;6;alance;6;13;861952;184738196
alnza;6;alanza;6;51;3352320;184741124
alr;4;alar;4;128;8398592;184754176
alrga;6;alarga;6;51;3352320;184755076
alrma;6;alarma;6;51;3352320;184755844
alrme;6;alarme;6;13;861952;184755860
lbea;5;albea;5;51;3344128;184832128
lbee;5;albee;5;13;853760;184832640
lce;4;alce;4;13;853760;184963072
lea;4;alea;4;51;3344128;185208832
lee;4;alee;4;13;853760;185225216
aleg;5;alega;5;179;11749120;185233536
algra;6;alegra;6;51;3353088;185235716
algre;6;alegre;6;13;862720;185235732
algue;6;alegue;6;13;862720;185236116
alja;5;aleja;5;51;3353088;185245824
alje;5;aleje;5;13;862720;185246336
alla;5;alela;5;51;3353088;185254016
alle;5;alele;5;13;862720;185254528
alent;6;alenta;6;50;3299072;185264644
alent;6;alente;6;8;547328;185264660
alrta;6;alerta;6;51;3353088;185281028
alrte;6;alerte;6;13;862720;185281044
altea;6;aletea;6;51;3353088;185287300
altee;6;aletee;6;13;862720;185287316
lfa;4;alfa;4;1;67328;185339904
alfas;5;alfas;5;1;65536;185342336
alhja;6;alhaja;6;51;3356416;185603332
alhje;6;alhaje;6;13;866048;185603348
alha;6;alhea;6;51;3357184;185622020
alhe;6;alhee;6;13;866816;185622036
ali;4;alia;4;50;3290880;185733120
ali;4;alie;4;8;539136;185749504
alina;6;aliena;6;51;3357184;185751300
aline;6;aliene;6;13;866816;185751316
alja;5;alija;5;16435;1077094656;185770112
alje;5;alije;5;13;862464;185770624
alnda;6;alinda;6;51;3352832;185786884
alnde;6;alinde;6;16397;1074604288;185786900
alnea;6;alinea;6;51;3352832;185787012
alnee;6;alinee;6;13;862464;185787028
alsa;5;alisa;5;51;3352832;185806976
alse;5;alise;5;13;862464;185807488
alsta;6;alista;6;51;3352832;185809412
alste;6;aliste;6;13;862464;185809428
alvia;6;alivia;6;51;3352832;185820292
alvie;6;alivie;6;13;862464;185820308
ala;5;alia;5;51;3352832;185843840
ale;5;alie;5;13;862464;185844352
allna;6;allana;6;51;3356416;186128132
allne;6;allane;6;13;866048;186128148
allga;6;allega;6;51;3357184;186143620
al;3;al;3;16640;1090519040;186515456
alca;5;aloca;5;51;3352576;186527872
alja;5;aloja;5;51;3352576;186556544
alje;5;aloje;5;13;862208;186557056
along;6;alonga;6;50;3299072;186573700
alque;6;aloque;6;13;862208;186587796
altra;6;altera;6;51;3357184;187193604
altre;6;altere;6;13;866816;187193620
altva;6;altiva;6;51;3356928;187210500
altve;6;altive;6;13;866560;187210516
alud;5;aluda;5;9;608000;187318400
aldan;6;aludan;6;257;16853760;187318456
alde;5;alude;5;1;76544;187318912
aludid;6;aludid;6;257;16842752;187319440
aludr;6;aludir;6;1;84224;187319496
alna;5;aluna;5;51;3353344;187359360
alne;5;alune;5;13;862976;187359872
lza;4;alza;4;51;3344128;187961344
ama;3;ama;3;16755;1098055680;188874752
amad;5;amada;5;129;8472320;188891264
amga;5;amaga;5;51;3352320;188903552
amags;6;amagos;6;257;16861184;188905420
amgue;6;amague;6;13;861952;188906132
amana;6;amaina;6;51;3356928;188913412
amane;6;amaine;6;13;866560;188913428
amn;4;aman;4;320;20981504;188932096
amnsa;6;amansa;6;51;3352320;188934532
amnse;6;amanse;6;13;861952;188934548
amnte;6;amante;6;1;75520;188934676
amr;4;amar;4;16384;1073751808;188948480
amra;5;amara;5;51;3352320;188948608
amre;5;amare;5;13;861952;188949120
amrga;6;amarga;6;51;3352320;188949380
amar;5;amar;5;128;8388608;188950400
amrra;6;amarra;6;51;3352320;188950788
amrre;6;amarre;6;13;861952;188950804
amsa;5;amasa;5;51;3352320;188952704
amse;5;amase;5;13;861952;188953216
ama;5;amaa;5;51;3352320;188989568
ame;5;amae;5;13;861952;188990080
ambla;6;ambula;6;51;3357440;189093380
amble;6;ambule;6;13;867072;189093396
me;3;ame;3;16461;1078789888;189399040
amlga;6;amelga;6;51;3353088;189449092
amra;5;amera;5;51;3353088;189472896
amre;5;amere;5;13;862720;189473408
amga;5;amiga;5;51;3352832;189952128
amgue;6;amigue;6;13;862464;189954708
amsta;6;amista;6;51;3352832;190003716
amste;6;amiste;6;13;862464;190003732
amol;5;amola;5;50;3294976;190759040
amlda;6;amolda;6;51;3352576;190759428
amlde;6;amolde;6;13;862208;190759444
amol;5;amole;5;8;543232;190759552
amr;4;amor;4;16384;1073752064;190783488
amov;5;amova;5;8;542464;190800000
amoved;6;amoved;6;257;16842752;190800528
amovr;6;amover;6;1;84480;190800584
ampra;6;ampara;6;51;3356416;190847236
ampre;6;ampare;6;13;866048;190847252
ampli;6;amplia;6;50;3299072;190891140
ampli;6;amplie;6;8;547328;190891156
ampta;6;amputa;6;51;3357440;190929412
ampte;6;ampute;6;13;867072;190929428
amula;6;amuela;6;1;80384;191518212
amule;6;amuele;6;5;342528;191518228
amuva;6;amueva;6;1;80384;191519492
amuve;6;amueve;6;1;80384;191519508
amrra;6;amurra;6;51;3353344;191572228
amrre;6;amurre;6;13;862976;191572244
amsga;6;amusga;6;51;3353344;191574916
andea;6;anadea;6;51;3352320;193086084
andee;6;anadee;6;13;861952;193086100
nca;4;anca;4;1;67328;193335296
ancas;5;ancas;5;1;65536;193337728
ncha;5;ancha;5;51;3344128;193364096
nche;5;anche;5;13;853760;193364608
nchoa;6;anchoa;6;1;67328;193365892
ncla;5;ancla;5;51;3344128;193380480
ncle;5;ancle;5;13;853760;193380992
ancra;6;ancora;6;51;3356672;193394948
ancre;6;ancore;6;13;866304;193394964
nda;4;anda;4;51;3344128;193466368
nde;4;ande;4;13;853760;193482752
nea;4;anea;4;51;3344128;193597440
nee;4;anee;4;13;853760;193613824
anga;5;anega;5;51;3353088;193622144
angue;6;anegue;6;13;862720;193624724
anxa;5;anexa;5;51;3353088;193691776
anxe;5;anexe;5;13;862720;193692288
angla;6;angela;6;1;80384;193877508
anhla;6;anhela;6;51;3357184;194008580
anhle;6;anhele;6;13;866816;194008596
anda;5;anida;5;51;3352832;194134144
ande;5;anide;5;13;862464;194134656
anlla;6;anilla;6;51;3352832;194168324
anlle;6;anille;6;13;862464;194168340
anma;5;anima;5;51;3352832;194171008
anme;5;anime;5;13;862464;194171520
ans;4;ans;4;9216;603979776;194195456
anses;6;anises;6;4096;268445952;194196172
ana;5;ania;5;51;3352832;194232448
ane;5;anie;5;13;862464;194232960
an;3;ano;3;16640;1090529280;194904064
anta;5;anota;5;51;3352576;194986112
ante;5;anote;5;13;862208;194986624
ansi;5;ansia;5;50;3294976;195465344
ansi;5;ansie;5;8;543232;195465856
antla;6;antela;6;51;3357184;195581444
antle;6;antele;6;13;866816;195581460
antja;6;antoja;6;51;3356672;195622148
antje;6;antoje;6;13;866304;195622164
anbla;6;anubla;6;51;3353344;195700228
anble;6;anuble;6;13;862976;195700244
anda;5;anuda;5;51;3353344;195707008
ande;5;anude;5;13;862976;195707520
anla;5;anula;5;51;3353344;195739776
anle;5;anule;5;13;862976;195740288
aja;4;aoja;4;51;3348480;198447104
aje;4;aoje;4;13;858112;198463488
ava;4;aova;4;51;3348480;200019968
ave;4;aove;4;13;858112;200036352
apche;6;apache;6;1;75520;201470996
apga;5;apaga;5;51;3352320;201486464
apgue;6;apague;6;13;861952;201489044
aplea;6;apalea;6;51;3352320;201507460
aplee;6;apalee;6;13;861952;201507476
apnda;6;apanda;6;51;3352320;201515524
apnde;6;apande;6;13;861952;201515540
apra;5;apara;5;307;20129536;201531520
aprca;6;aparca;6;51;3352320;201531780
apre;5;apare;5;13;861952;201532032
aprea;6;aparea;6;51;3352320;201532036
apree;6;aparee;6;13;861952;201532052
aparn;6;aparen;6;256;16796160;201532088
aprta;6;aparta;6;51;3352320;201533956
aprte;6;aparte;6;13;861952;201533972
aprva;6;aparva;6;51;3352320;201534212
aprve;6;aparve;6;13;861952;201534228
apaa;5;apaa;5;51;3342336;201572480
ape;5;apae;5;13;861952;201572992
apea;4;apea;4;51;3342336;201986048
apeda;6;apeada;6;1;79616;201986564
pee;4;apee;4;13;853760;202002432
apga;5;apega;5;51;3353088;202010752
apgue;6;apegue;6;13;862720;202013332
apla;5;apela;5;51;3353088;202031232
aple;5;apele;5;13;862720;202031744
apel;5;apel;5;257;16842752;202033024
apna;5;apena;5;51;3353088;202039424
apne;5;apene;5;13;862720;202039936
ape;4;ape;4;16384;1073741824;202043392
apra;5;apera;5;51;3353088;202055808
apre;5;apere;5;13;862720;202056320
apsta;6;apesta;6;51;3353088;202062340
apste;6;apeste;6;13;862720;202062356
apida;6;apiada;6;51;3356416;202510852
apide;6;apiade;6;13;866048;202510868
apina;6;apiana;6;51;3356416;202512132
apine;6;apiane;6;13;866048;202512148
apla;5;apila;5;51;3352832;202555520
aple;5;apile;5;13;862464;202556032
apila;6;apiola;6;51;3356672;202569220
apile;6;apiole;6;13;866304;202569236
apa;5;apia;5;51;3352832;202621056
ape;5;apie;5;13;862464;202621568
aplca;6;aplaca;6;51;3356416;202903940
aplce;6;aplace;6;13;866048;202903956
aplna;6;aplana;6;51;3356416;202905348
aplne;6;aplane;6;13;866048;202905364
aplza;6;aplaza;6;51;3356416;202906884
aplca;6;aplica;6;51;3356928;202936708
aplma;6;aploma;6;51;3356672;202962564
aplme;6;aplome;6;13;866304;202962580
apca;5;apoca;5;51;3352576;203305088
apda;5;apoda;5;51;3352576;203309184
apde;5;apode;5;16397;1074604032;203309696
apque;6;apoque;6;13;862208;203365012
aporc;6;aporca;6;50;3299072;203366788
aprra;6;aporra;6;307;20129792;203368708
aprre;6;aporre;6;13;862208;203368724
aporr;6;aporr;6;257;16842752;203368764
aprta;6;aporta;6;51;3352576;203368964
aprte;6;aporte;6;13;862208;203368980
apost;6;aposta;6;306;20076288;203373060
apost;6;aposte;6;136;8935936;203373076
apya;5;apoya;5;51;3352576;203395200
apye;5;apoye;5;13;862208;203395712
aprsa;6;apresa;6;51;3357184;203708804
aprse;6;aprese;6;13;866816;203708820
apret;6;apreta;6;50;3299072;203708932
apret;6;aprete;6;8;547328;203708948
aprob;6;aproba;6;50;3299072;203747588
aprob;6;aprobe;6;8;547328;203747604
pta;4;apta;4;1;67328;203952128
aptas;5;aptas;5;1;65536;203954560
apnta;6;apunta;6;51;3353344;204139012
apnte;6;apunte;6;13;862976;204139028
apra;5;apura;5;51;3353344;204152960
apre;5;apure;5;13;862976;204153472
apa;5;apua;5;51;3353344;204193920
ape;5;apue;5;13;862976;204194432
apea;6;apuea;6;51;3353344;204194436
apee;6;apuee;6;13;862976;204194452
aquja;6;aqueja;6;51;3357184;208295172
aquje;6;aqueje;6;13;866816;208295188
ra;3;ara;3;51;3344128;209846272
ara;5;araa;5;51;3352320;209961088
are;5;arae;5;13;861952;209961600
arbla;6;arbola;6;51;3356672;210040324
arble;6;arbole;6;13;866304;210040340
rca;4;arca;4;1;67328;210112512
arcas;5;arcas;5;1;65536;210114944
ard;4;arda;4;9;603904;210243584
rdan;5;ardan;5;257;16844544;210245376
rde;4;arde;4;1;67328;210259968
arded;5;arded;5;257;16842752;210260480
ardr;5;arder;5;1;80384;210262272
re;3;are;3;13;853760;210370560
arna;5;arena;5;51;3353088;210428032
arne;5;arene;5;13;862720;210428544
arnga;6;arenga;6;51;3353088;210428804
rfa;4;arfa;4;35;2295552;210505728
rfe;4;arfe;4;5;329472;210522112
argid;6;argid;6;257;16842752;210719888
argr;6;argir;6;1;84224;210719944
arguy;6;arguya;6;9;612096;210721924
argye;6;arguye;6;1;80640;210721940
arite;6;ariete;6;1;80384;210917908
arsca;6;arisca;6;1;76032;210973060
rma;4;arma;4;51;3344128;211423232
rme;4;arme;4;13;853760;211439616
ar;3;ar;3;128;8388608;211681280
arma;5;aroma;5;51;3352576;211734656
arme;5;arome;5;13;862208;211735168
rpa;4;arpa;4;51;3344128;211816448
rpe;4;arpe;4;13;853760;211832832
arpna;6;arpona;6;51;3356672;211875588
arpne;6;arpone;6;13;866304;211875604
rquea;6;arquea;6;51;3344128;212030084
rquee;6;arquee;6;13;853760;212030100
arrs;5;arras;5;9216;603993856;212081024
arrsa;6;arrasa;6;51;3356416;212081028
arrse;6;arrase;6;13;866048;212081044
rrea;5;arrea;5;51;3344128;212095104
rree;5;arree;5;13;853760;212095616
arri;5;arria;5;50;3294976;212111488
arrba;6;arriba;6;51;3356928;212111620
arrbe;6;arribe;6;13;866560;212111636
arri;5;arrie;5;8;543232;212112000
arrma;6;arrima;6;51;3356928;212113028
arrme;6;arrime;6;13;866560;212113044
arrba;6;arroba;6;51;3356672;212136196
arrbe;6;arrobe;6;13;866304;212136212
arrga;6;arroga;6;51;3356672;212136836
arrja;6;arroja;6;51;3356672;212137220
arrje;6;arroje;6;13;866304;212137236
arrpa;6;arropa;6;51;3356672;212137988
arrpe;6;arrope;6;13;866304;212138004
arrya;6;arroya;6;35;2308096;212139140
arrye;6;arroye;6;5;342016;212139156
arru;5;arrua;5;34;2246400;212160640
arrga;6;arruga;6;51;3357440;212161412
arrma;6;arruma;6;51;3357440;212162180
arrme;6;arrume;6;13;867072;212162196
rte;4;arte;4;1;67328;212357120
sa;3;asa;3;115;7538432;214040576
aslta;6;asalta;6;51;3352320;214092292
aslte;6;asalte;6;13;861952;214092308
se;3;ase;3;77;5048064;214564864
sea;4;asea;4;51;3344128;214568960
ascha;6;asecha;6;51;3353088;214578180
asche;6;aseche;6;13;862720;214578196
asda;5;aseda;5;51;3353088;214581376
asde;5;asede;5;13;862720;214581888
asdia;6;asedia;6;51;3353088;214582404
asdie;6;asedie;6;13;862720;214582420
see;4;asee;4;13;853760;214585344
asent;6;asenta;6;50;3299072;214624772
asent;6;asente;6;8;547328;214624788
seos;5;aseos;5;1;67328;214628736
aserr;6;aserra;6;50;3299072;214640900
aserr;6;aserre;6;8;547328;214640916
ass;4;ases;4;256;16787968;214642688
assta;6;asesta;6;51;3353088;214645252
asste;6;aseste;6;13;862720;214645268
asg;4;asga;4;9;603904;214831104
sgan;5;asgan;5;257;16844544;214832896
asid;4;asid;4;257;16842752;215105536
asgna;6;asigna;6;51;3352832;215119620
asgne;6;asigne;6;13;862464;215119636
asla;5;asila;5;51;3352832;215138432
asle;5;asile;5;13;862464;215138944
asint;6;asinta;6;8;546560;215149060
asr;4;asir;4;1;76032;215162880
ass;4;ass;4;256;16777216;215166976
asist;6;asista;6;9;612096;215169540
asste;6;asiste;6;1;76032;215169556
aso;3;aso;3;129;8454144;215875584
ascia;6;asocia;6;51;3352576;215889028
ascie;6;asocie;6;13;862208;215889044
asol;5;asola;5;50;3294976;215924864
asold;6;asolda;6;50;3299072;215925252
asold;6;asolde;6;8;547328;215925268
asol;5;asole;5;8;543232;215925376
aslea;6;asolea;6;51;3352576;215925380
aslee;6;asolee;6;13;862208;215925396
asma;5;asoma;5;51;3352576;215928960
asme;5;asome;5;13;862208;215929472
asrda;6;asorda;6;51;3352576;215949828
asrde;6;asorde;6;13;862208;215949844
spa;4;aspa;4;51;3344128;216010752
spe;4;aspe;4;13;853760;216027136
aspra;6;aspira;6;51;3356928;216045828
aspre;6;aspire;6;13;866560;216045844
squea;6;asquea;6;51;3344128;216224388
squee;6;asquee;6;13;853760;216224404
asum;5;asuma;5;9;608000;216715392
asman;6;asuman;6;257;16853760;216715448
asme;5;asume;5;1;76544;216715904
asumid;6;asumid;6;257;16842752;216716432
asumr;6;asumir;6;1;84224;216716488
asnta;6;asunta;6;51;3353344;216721924
asnte;6;asunte;6;13;862976;216721940
asra;5;asura;5;51;3353344;216735872
asre;5;asure;5;13;862976;216736384
assta;6;asusta;6;51;3353344;216742404
asste;6;asuste;6;13;862976;216742420
ata;3;ata;3;51;3342336;218234880
atbla;6;atabla;6;51;3352320;218244612
atble;6;atable;6;13;861952;218244628
atca;5;ataca;5;51;3352320;218247296
atare;6;ataire;6;1;80128;218274068
atja;5;ataja;5;51;3352320;218275968
atje;5;ataje;5;13;861952;218276480
atque;6;ataque;6;13;861952;218307220
atarn;6;atarn;6;256;16777216;218308792
atrea;6;atarea;6;51;3352320;218309252
atree;6;ataree;6;13;861952;218309268
atsca;6;atasca;6;51;3352320;218313092
atavi;6;atavia;6;50;3299072;218326148
atavi;6;atavie;6;8;547328;218326164
ata;5;ataa;5;1;75520;218349696
atan;6;ataan;6;257;16852736;218349752
ate;5;atae;5;1;75520;218350208
atar;6;ataer;6;1;84480;218350280
te;3;ate;3;269;17630976;218759168
tea;4;atea;4;1;67328;218763264
ateas;5;ateas;5;1;65536;218765696
atce;5;atece;5;13;862720;218772096
aten;4;aten;4;1;65536;218816512
atend;6;atenda;6;8;546560;218817028
atend;6;atende;6;8;547328;218817044
atened;6;atened;6;257;16842752;218817168
atenr;6;atener;6;1;84480;218817224
ateng;6;atenga;6;9;612096;218817412
atent;6;atenta;6;50;3299072;218819076
atent;6;atente;6;8;547328;218819092
atenu;6;atenua;6;50;3299072;218819204
atenu;6;atenue;6;8;547328;218819220
teos;5;ateos;5;1;67328;218823040
ater;5;atera;5;9;608000;218833024
atran;6;ateran;6;257;16853504;218833080
atre;5;atere;5;1;76288;218833536
aterid;6;aterid;6;257;16842752;218834064
aterr;6;aterir;6;1;84224;218834120
atrra;6;aterra;6;51;3353088;218835204
atrre;6;aterre;6;16397;1074604544;218835220
ats;4;ates;4;256;16787968;218836992
atsta;6;atesta;6;51;3353088;218839556
atste;6;ateste;6;13;862720;218839572
atta;5;ateta;5;51;3353088;218841216
atte;5;atete;5;13;862720;218841728
atza;5;ateza;5;51;3353088;218865792
atce;5;atice;5;13;862464;219296384
atine;6;atiene;6;1;80384;219305748
atisa;6;atiesa;6;51;3357184;219306372
atise;6;atiese;6;13;866816;219306388
atlda;6;atilda;6;51;3352832;219333124
atlde;6;atilde;6;13;862464;219333140
atna;5;atina;5;51;3352832;219340928
atne;5;atine;5;13;862464;219341440
atpla;6;atipla;6;51;3352832;219350532
atple;6;atiple;6;13;862464;219350548
atsba;6;atisba;6;51;3352832;219361540
atsbe;6;atisbe;6;13;862464;219361556
atza;5;atiza;5;51;3352832;219390080
at;3;at;3;16384;1073741824;220069888
toa;4;atoa;4;51;3344128;220073984
atcha;6;atocha;6;51;3352576;220083204
atche;6;atoche;6;13;862208;220083220
toe;4;atoe;4;13;853760;220090368
atlla;6;atolla;6;51;3352576;220120580
atlle;6;atolle;6;13;862208;220120596
atnta;6;atonta;6;51;3352576;220129796
atnte;6;atonte;6;13;862208;220129812
atra;5;atora;5;51;3352576;220143744
atre;5;atore;5;13;862208;220144256
atrca;6;atraca;6;51;3356416;220467588
trae;5;atrae;5;1;67328;220467840
atraed;6;atraed;6;257;16842752;220467856
atrar;6;atraer;6;1;84480;220467912
atrpa;6;atrapa;6;51;3356416;220469252
atrpe;6;atrape;6;13;866048;220469268
atrs;5;atrs;5;9216;603979776;220469632
atrsa;6;atrasa;6;51;3356416;220469636
atrse;6;atrase;6;13;866048;220469652
atrev;6;atreva;6;9;612096;220486404
atrve;6;atreve;6;1;80384;220486420
atrja;6;atroja;6;51;3356672;220525828
atrje;6;atroje;6;13;866304;220525844
atron;6;atrona;6;50;3299072;220526340
atron;6;atrone;6;16392;1074289152;220526356
atrpa;6;atropa;6;51;3356672;220526596
atrpe;6;atrope;6;13;866304;220526612
atnes;6;atunes;6;12288;805317376;220914380
aturd;6;aturda;6;9;612096;220930564
atrde;6;aturde;6;1;76544;220930580
atsa;5;atusa;5;51;3353344;220934272
atse;5;atuse;5;13;862976;220934784
augra;6;augura;6;51;3357440;223303940
augre;6;augure;6;13;867072;223303956
aull;5;aulla;5;50;3294976;223920256
aun;4;auna;4;50;3290880;224137216
aun;4;aune;4;8;539136;224153600
aup;4;aupa;4;50;3290880;224399360
aval;4;aval;4;1;65536;226672640
avla;5;avala;5;51;3352320;226672768
avle;5;avale;5;13;861952;226673280
aval;5;aval;5;16384;1073741824;226674560
avalu;6;avalua;6;50;3299072;226675332
avalu;6;avalue;6;8;547328;226675348
avnce;6;avance;6;13;861952;226681236
avnza;6;avanza;6;51;3352320;226684164
av;3;ave;3;16384;1073752576;227147776
avce;5;avece;5;13;862720;227160704
avna;5;avena;5;51;3353088;227205248
avne;5;avene;5;13;862720;227205760
aveng;6;avenga;6;9;612096;227206020
avenid;6;avenid;6;257;16842752;227206288
avenr;6;avenir;6;1;84224;227206344
avent;6;aventa;6;50;3299072;227207684
avent;6;avente;6;8;547328;227207700
averi;6;averia;6;50;3299072;227222660
averi;6;averie;6;8;547328;227222676
avza;5;aveza;5;51;3353088;227254400
avi;4;avia;4;50;3290880;227676160
avi;4;avie;4;8;539136;227692544
avine;6;aviene;6;1;80384;227694356
avsa;5;avisa;5;51;3352832;227750016
avse;5;avise;5;13;862464;227750528
avspa;6;avispa;6;51;3352832;227751940
avspe;6;avispe;6;13;862464;227751956
avsta;6;avista;6;51;3352832;227752452
avste;6;aviste;6;13;862464;227752468
avva;5;aviva;5;51;3352832;227762304
avve;5;avive;5;13;862464;227762816
ya;3;aya;3;1;67328;239206400
ayas;4;ayas;4;1;65536;239284224
ayr;4;ayer;4;129;8464896;239804416
yes;4;ayes;4;12288;805308160;239808512
ayda;5;ayuda;5;51;3353344;241844352
ayde;5;ayude;5;13;862976;241844864
ayna;5;ayuna;5;51;3353344;241885312
ayne;5;ayune;5;13;862976;241885824
aynta;6;ayunta;6;51;3353344;241887748
aynte;6;ayunte;6;13;862976;241887764
azar;5;azara;5;2;149248;243474560
azres;6;azares;6;12288;805316352;243475148
azoca;5;azoca;5;51;3342336;245248128
azga;5;azoga;5;51;3352576;245264512
azgue;6;azogue;6;13;862208;245267092
azlva;6;azolva;6;35;2304000;245287684
azlve;6;azolve;6;5;337920;245287700
azque;6;azoque;6;13;862208;245308052
azra;5;azora;5;51;3352576;245309568
azre;5;azore;5;13;862208;245310080
azrra;6;azorra;6;51;3352576;245311748
azrre;6;azorre;6;13;862208;245311764
azta;5;azota;5;51;3352576;245317760
azte;5;azote;5;13;862208;245318272
azce;5;azuce;5;13;862976;246035072
azfra;6;azufra;6;51;3353344;246049028
azfre;6;azufre;6;13;862976;246049044
azla;5;azula;5;51;3353344;246071424
azle;5;azule;5;13;862976;246071936
azza;5;azuza;5;51;3353344;246128768
aad;5;aada;5;9;608000;251805824
adan;6;aadan;6;257;16852736;251805880
ade;5;aade;5;1;75520;251806336
aadid;6;aadid;6;257;16842752;251806864
aadr;6;aadir;6;1;84224;251806920
aja;5;aeja;5;51;3353088;252354688
aje;5;aeje;5;13;862720;252355200
ala;5;aila;5;51;3352832;252887168
ale;5;aile;5;13;862464;252887680
a;3;ao;3;16384;1073752064;253624320
ara;5;aora;5;51;3352576;253698176
are;5;aore;5;13;862208;253698688
asga;6;ausga;6;51;3353344;254489476
bba;4;baba;4;51;3348224;272896000
bbe;4;babe;4;13;857856;272912384
bbea;5;babea;5;51;3348224;272912512
bbee;5;babee;5;13;857856;272913024
bbeos;6;babeos;6;1;71424;272914380
bga;4;baga;4;35;2299648;273551360
bgue;5;bague;5;5;333568;273633920
bala;5;baila;5;51;3352832;273858688
bale;5;baile;5;13;862464;273859200
bja;4;baja;4;51;3348224;273944576
bje;4;baje;4;13;857856;273960960
bla;4;bala;4;51;3348224;274206720
bald;5;balad;5;16384;1073755904;274207232
bals;5;balas;5;256;16791296;274209152
blda;5;balda;5;51;3348224;274219136
blde;5;balde;5;13;857856;274219648
bldea;6;baldea;6;51;3348224;274219652
bldee;6;baldee;6;13;857856;274219668
bald;5;bald;5;65;4259840;274220928
ble;4;bale;4;13;857856;274223104
blea;5;balea;5;51;3348224;274223232
blee;5;balee;5;13;857856;274223744
balce;6;balice;6;13;866560;274239892
balta;6;balita;6;35;2308352;274242052
balte;6;balite;6;5;342272;274242068
balza;6;baliza;6;51;3356928;274242820
bal;4;bal;4;256;16777216;274264064
balta;6;balota;6;51;3356672;274266628
balte;6;balote;6;13;866304;274266644
bals;5;balsa;5;129;8472320;274280576
bnca;5;banca;5;1;71424;274477184
bancas;6;bancas;6;1;65536;274477260
bnda;5;banda;5;1;71424;274481280
bndea;6;bandea;6;51;3348224;274481796
bndee;6;bandee;6;13;857856;274481812
br;3;bar;3;16384;1073747712;274989056
barja;6;baraja;6;51;3356416;274994436
barje;6;baraje;6;13;866048;274994452
barta;6;barata;6;1;79616;274995716
brba;5;barba;5;51;3348224;274997376
brbe;5;barbe;5;13;857856;274997888
brbea;6;barbea;6;51;3348224;274997892
brbee;6;barbee;6;13;857856;274997908
barb;5;barb;5;256;16777216;274999168
brcia;6;barcia;6;1;71424;275002500
brda;5;barda;5;51;3348224;275005568
brde;5;barde;5;13;857856;275006080
brloa;6;barloa;6;51;3348224;275040132
brloe;6;barloe;6;13;857856;275040148
brra;5;barra;5;59;3872512;275062912
brran;6;barran;6;257;16848640;275062968
brre;5;barre;5;13;857856;275063424
brrea;6;barrea;6;51;3348224;275063428
barred;6;barred;6;257;16842752;275063440
brree;6;barree;6;13;857856;275063444
barrr;6;barrer;6;1;84480;275063496
barr;5;barr;5;256;16777216;275063936
bsa;4;basa;4;51;3348224;275124224
bse;4;base;4;13;857856;275140608
bsta;5;basta;5;51;3348224;275202176
bste;5;baste;5;13;857856;275202688
bstea;6;bastea;6;51;3348224;275202692
bstee;6;bastee;6;13;857856;275202708
bat;4;bata;4;9;603904;275255296
btan;5;batan;5;257;16848640;275257088
bte;4;bate;4;1;71424;275271680
btea;5;batea;5;51;3348224;275271808
btee;5;batee;5;13;857856;275272320
batid;5;batid;5;257;16842752;275288576
batr;5;batir;5;1;80128;275290368
bazca;6;bazuca;6;51;3357440;276124036
ba;4;baa;4;51;3348224;276303872
be;4;bae;4;13;857856;276320256
b;2;be;2;64;4200960;289406976
beb;4;beba;4;9;603904;289673216
bban;5;beban;5;257;16849408;289675008
bbe;4;bebe;4;1;72192;289689600
bebed;5;bebed;5;257;16842752;289690112
bebr;5;beber;5;1;80384;289691904
bca;4;beca;4;1;72192;289804288
becas;5;becas;5;1;65536;289806720
bfa;4;befa;4;1;72192;290197504
befas;5;befas;5;1;65536;290199936
belda;5;belda;5;16;1048576;290996352
bque;5;beque;5;1;72192;291721856
brra;5;berra;5;1;72192;291840128
berras;6;berras;6;1;65536;291840204
brrea;6;berrea;6;51;3348992;291840644
brree;6;berree;6;13;858624;291840660
bsa;4;besa;4;51;3348992;291901440
bse;4;bese;4;13;858624;291917824
besca;6;besuca;6;51;3357440;291983748
betna;6;betuna;6;51;3357440;292116228
betne;6;betune;6;13;867072;292116244
bcha;5;bicha;5;1;71936;306610304
bichas;6;bichas;6;1;65536;306610380
bilda;6;bielda;6;51;3353088;306889220
bilde;6;bielde;6;13;862720;306889236
bilca;6;biloca;6;51;3356672;307818884
bna;4;bina;4;51;3348736;308023296
bne;4;bine;4;13;858368;308039680
brla;5;birla;5;51;3348736;308592768
brle;5;birle;5;13;858368;308593280
bs;3;bis;3;9217;604051712;308674560
bisca;6;biseca;6;51;3357184;308695428
bisla;6;bisela;6;51;3357184;308696580
bisle;6;bisele;6;13;866816;308696596
bta;4;bita;4;1;71936;308809728
bitas;5;bitas;5;1;65536;308812160
bzca;5;bizca;5;51;3348736;309604480
bzma;5;bizma;5;1;71936;309645440
bizmas;6;bizmas;6;1;65536;309645516
bzque;6;bizque;6;13;858368;309664404
blnda;6;blanda;6;1;75520;318956036
bls;4;blas;4;129;8464128;318976000
blnda;6;blinda;6;51;3352832;320004612
blnde;6;blinde;6;13;862464;320004628
blque;6;bloque;6;1;75776;320805524
b;2;bo;2;321;21043200;331350016
bbea;5;bobea;5;51;3348480;331632768
bbee;5;bobee;5;13;858112;331633280
bobna;6;bobina;6;1;80128;331650820
bcea;5;bocea;5;35;2299904;331763840
bocce;6;bocece;6;5;342528;331764116
bcee;5;bocee;5;5;333824;331764352
bocla;6;bocela;6;51;3357184;331765252
bocle;6;bocele;6;13;866816;331765268
bocta;6;boceta;6;51;3357184;331766276
bocte;6;bocete;6;13;866816;331766292
bocza;6;boceza;6;35;2308608;331767044
bcha;5;bocha;5;51;3348480;331776128
bche;5;boche;5;13;858112;331776640
bocna;6;bocina;6;51;3356928;331781892
bocne;6;bocine;6;13;866560;331781908
bfe;4;bofe;4;1;71680;332156928
bga;4;boga;4;51;3348480;332271616
bgue;5;bogue;5;13;858112;332354176
bje;4;boje;4;1;71680;332681216
blea;5;bolea;5;51;3348480;332943488
blee;5;bolee;5;13;858112;332944000
bolta;6;boleta;6;1;80384;332945924
blla;5;bolla;5;51;3348480;332972160
blle;5;bolle;5;13;858112;332972672
blsea;6;bolsea;6;51;3348480;333001348
blsee;6;bolsee;6;13;858112;333001364
bmbea;6;bombea;6;51;3348480;333062788
bmbee;6;bombee;6;13;858112;333062804
bquea;6;boquea;6;51;3348480;333664900
bquee;6;boquee;6;13;858112;333664916
brda;5;borda;5;51;3348480;333725824
brde;5;borde;5;5;333824;333726336
brdea;6;bordea;6;51;3348480;333726340
brdee;6;bordee;6;13;858112;333726356
brla;5;borla;5;51;3348480;333758592
brle;5;borle;5;13;858112;333759104
brnea;6;bornea;6;51;3348480;333767300
brnee;6;bornee;6;13;858112;333767316
brra;5;borra;5;51;3348480;333783168
brre;5;borre;5;13;858112;333783680
bta;4;bota;4;51;3348480;333975552
bte;4;bote;4;13;858112;333991936
bxea;5;boxea;5;51;3348480;334516352
bxee;5;boxee;5;13;858112;334516864
bya;4;boya;4;51;3348480;334630912
bye;4;boye;4;13;858112;334647296
brcea;6;bracea;6;51;3352320;344076932
brcee;6;bracee;6;13;861952;344076948
brma;5;brama;5;51;3352320;344117376
brme;5;brame;5;13;861952;344117888
brsa;5;brasa;5;1;75520;344141952
brasas;6;brasas;6;1;65536;344142028
brsca;6;brasca;6;1;75520;344142212
brvea;6;bravea;6;51;3352320;344154756
brvee;6;bravee;6;13;861952;344154772
brza;5;braza;5;1;75520;344170624
brazas;6;brazas;6;1;65536;344170700
bre;4;brea;4;50;3290880;344592384
brcha;6;brecha;6;1;76288;344601604
bre;4;bree;4;8;539136;344608768
brga;5;brega;5;51;3353088;344617088
brgue;6;bregue;6;13;862720;344619668
brba;5;briba;5;1;76032;345120896
bribas;6;bribas;6;1;65536;345120972
brda;5;brida;5;1;76032;345129088
bridas;6;bridas;6;1;65536;345129164
brlla;6;brilla;6;51;3352832;345163268
brlle;6;brille;6;13;862464;345163284
brnca;6;brinca;6;51;3352832;345170308
brnda;6;brinda;6;51;3352832;345170436
brnde;6;brinde;6;13;862464;345170452
brsa;5;brisa;5;1;76032;345190528
brisas;6;brisas;6;1;65536;345190604
brsca;6;brisca;6;51;3352832;345190788
brzna;6;brizna;6;1;76032;345220868
brce;5;broce;5;13;862208;345911936
brcea;6;brocea;6;35;2304000;345911940
brcee;6;brocee;6;5;337920;345911956
brcha;6;brocha;6;1;75776;345912324
brche;6;broche;6;1;75776;345912340
brma;5;broma;5;35;2304000;345952384
bromas;6;bromas;6;1;65536;345952460
brme;5;brome;5;5;337920;345952896
brmea;6;bromea;6;51;3352576;345952900
brmee;6;bromee;6;13;862208;345952916
brta;5;brota;5;35;2304000;345981056
brte;5;brote;5;5;337920;345981568
brza;5;broza;5;51;3352576;346005632
brce;5;bruce;5;13;862976;346698368
brja;5;bruja;5;1;76544;346726528
brjea;6;brujea;6;51;3353344;346727044
brjee;6;brujee;6;13;862976;346727060
brma;5;bruma;5;1;76544;346738816
brumas;6;brumas;6;1;65536;346738892
brza;5;bruza;5;51;3353344;346792064
bru;5;brua;5;9;608000;346800256
bran;6;bruan;6;257;16853760;346800312
bre;5;brue;5;1;76544;346800768
bruid;6;bruid;6;257;16842752;346801296
brur;6;bruir;6;1;84224;346801352
bu;2;bu;2;1;65536;356515840
bce;4;buce;4;13;858880;356929536
bcea;5;bucea;5;51;3349248;356929664
bcee;5;bucee;5;13;858880;356930176
bceos;6;buceos;6;1;72448;356931532
bfa;4;bufa;4;51;3349248;357306368
bfe;4;bufe;4;13;858880;357322752
bla;4;bula;4;1;72448;358092800
bulas;5;bulas;5;1;65536;358095232
blla;5;bulla;5;9;596736;358137984
bllan;6;bullan;6;257;16849664;358138040
bullas;6;bullas;6;1;65536;358138060
blle;5;bulle;5;5;334592;358138496
bullid;6;bullid;6;257;16842752;358139024
bullr;6;bullir;6;1;84224;358139080
burla;6;burila;6;51;3356928;358913540
burle;6;burile;6;13;866560;358913556
brla;5;burla;5;51;3349248;358924416
brle;5;burle;5;13;858880;358924928
bsca;5;busca;5;51;3349248;359018624
bsque;6;busque;6;13;858880;359078548
bza;4;buza;4;51;3349248;359927808
c;2;ca;2;320;20977408;406847488
cbe;4;cabe;4;1;71424;407130112
cabed;5;cabed;5;257;16842752;407130624
cabr;5;caber;5;1;80384;407132416
cce;4;cace;4;13;857856;407261184
ccea;5;cacea;5;51;3348224;407261312
ccee;5;cacee;5;13;857856;407261824
ccha;5;cacha;5;51;3348224;407273600
cche;5;cache;5;13;857856;407274112
cchea;6;cachea;6;51;3348224;407274116
cchee;6;cachee;6;13;857856;407274132
cadca;6;caduca;6;51;3357440;407458180
caed;4;caed;4;257;16842752;407519232
car;4;caer;4;1;76288;407576576
cga;4;caga;4;51;3348224;407769088
cgue;5;cague;5;13;857856;407851648
caig;5;caiga;5;9;608000;408055936
cagan;6;caigan;6;257;16853248;408055992
cl;3;cal;3;128;8394496;408420352
cla;4;cala;4;59;3872512;408424448
clan;5;calan;5;257;16848640;408426240
clca;5;calca;5;51;3348224;408432768
calc;5;calc;5;269;17629184;408433280
cldea;6;caldea;6;51;3348224;408437380
cldee;6;caldee;6;13;857856;408437396
cle;4;cale;4;13;857856;408440832
calce;6;calece;6;1;80384;408441236
clla;5;calla;5;51;3348224;408469632
calln;6;callan;6;257;16860928;408469688
clle;5;calle;5;13;857856;408470144
calln;6;callen;6;256;16796160;408470200
call;5;call;5;65;4259840;408471424
clma;5;calma;5;51;3348224;408473728
clme;5;calme;5;13;857856;408474240
clque;6;calque;6;13;857856;408492692
clva;5;calva;5;1;71424;408510592
calvas;6;calvas;6;1;65536;408510668
clza;5;calza;5;51;3348224;408526976
cmba;5;camba;5;1;71424;408559744
cambas;6;cambas;6;1;65536;408559820
cmbia;6;cambia;6;51;3348224;408560772
cmbie;6;cambie;6;13;857856;408560788
camla;6;camela;6;51;3357184;408573444
camle;6;camele;6;13;866816;408573460
camna;6;camina;6;51;3356928;408590084
camne;6;camine;6;13;866560;408590100
cmpa;5;campa;5;51;3348224;408617088
cmpe;5;campe;5;13;857856;408617600
cmpea;6;campea;6;51;3348224;408617604
cmpee;6;campee;6;13;857856;408617620
cn;3;can;3;320;20977408;408682496
cncha;6;cancha;6;1;71424;408695812
cnde;5;cande;5;1;71424;408699520
candis;6;candis;6;1;65536;408700108
cnjea;6;canjea;6;51;3348224;408724100
cnjee;6;canjee;6;13;857856;408724116
cnsa;5;cansa;5;51;3348224;408760448
cnse;5;canse;5;13;857856;408760960
cnta;5;canta;5;51;3348224;408764544
cnte;5;cante;5;13;857856;408765056
cntea;6;cantea;6;51;3348224;408765060
cntee;6;cantee;6;13;857856;408765076
cpa;4;capa;4;51;3348224;408948736
cpe;4;cape;4;13;857856;408965120
cpea;5;capea;5;51;3348224;408965248
cpee;5;capee;5;13;857856;408965760
capo;4;capo;4;257;16842752;409006080
capta;6;capota;6;51;3356672;409008644
capte;6;capote;6;13;866304;409008660
cpta;5;capta;5;51;3348224;409026688
cpte;5;capte;5;13;857856;409027200
capten;6;capten;6;1;65536;409027256
crda;5;carda;5;51;3348224;409223296
crde;5;carde;5;13;857856;409223808
crea;5;carea;5;51;3348224;409227392
carce;6;carece;6;1;80384;409227668
cree;5;caree;5;13;857856;409227904
carna;6;carena;6;1;80384;409229060
crga;5;carga;5;51;3348224;409235584
crgue;6;cargue;6;13;857856;409238164
cria;5;caria;5;35;2299648;409243776
crie;5;carie;5;5;333568;409244288
crlea;6;carlea;6;51;3348224;409256580
crlee;6;carlee;6;13;857856;409256596
crnea;6;carnea;6;51;3348224;409264772
crnee;6;carnee;6;13;857856;409264788
carp;5;carpa;5;9;608000;409272448
crpan;6;carpan;6;257;16848640;409272504
crpe;5;carpe;5;1;71424;409272960
carpid;6;carpid;6;257;16842752;409273488
carpr;6;carpir;6;1;84224;409273544
crtea;6;cartea;6;51;3348224;409289348
crtee;6;cartee;6;13;857856;409289364
csa;4;casa;4;51;3348224;409341952
csca;5;casca;5;51;3348224;409350272
cse;4;case;4;13;857856;409358336
csque;6;casque;6;13;857856;409410196
cstra;6;castra;6;51;3348224;409422084
cstre;6;castre;6;13;857856;409422100
cta;4;cata;4;307;20125440;409473024
cte;4;cate;4;13;857856;409489408
ctea;5;catea;5;51;3348224;409489536
ctee;5;catee;5;13;857856;409490048
casa;5;causa;5;51;3353344;409677952
case;5;cause;5;13;862976;409678464
cva;4;cava;4;51;3348224;409735168
cve;4;cave;4;13;857856;409751552
cavla;6;cavila;6;51;3356928;409769476
cavle;6;cavile;6;13;866560;409769492
cza;4;caza;4;51;3348224;410259456
c;2;ce;2;64;4200960;423624704
cba;4;ceba;4;51;3348992;423890944
cebda;6;cebada;6;51;3356416;423891460
cebde;6;cebade;6;13;866048;423891476
cbe;4;cebe;4;13;858624;423907328
ccea;5;cecea;5;51;3348992;424038528
ccee;5;cecee;5;13;858624;424039040
cecna;6;cecina;6;51;3356928;424056580
cecne;6;cecine;6;13;866560;424056596
ced;4;ceda;4;9;603904;424153088
cdan;5;cedan;5;257;16849408;424154880
cde;4;cede;4;1;72192;424169472
ceded;5;ceded;5;257;16842752;424169984
cedr;5;ceder;5;1;80384;424171776
ceg;4;cega;4;50;3290880;424546304
cegu;5;cegue;5;8;543232;424628864
cja;4;ceja;4;51;3348992;424939520
cje;4;ceje;4;13;858624;424955904
cla;4;cela;4;51;3348992;425201664
cle;4;cele;4;13;858624;425218048
cna;4;cena;4;51;3348992;425463808
cne;4;cene;4;13;858624;425480192
cntra;6;centra;6;51;3348992;425543940
cntre;6;centre;6;13;858624;425543956
crca;5;cerca;5;51;3348992;425996416
crcha;6;cercha;6;1;72192;425997316
crdea;6;cerdea;6;51;3348992;426001028
crdee;6;cerdee;6;13;858624;426001044
cern;5;cerna;5;8;542464;426041472
cerned;6;cerned;6;257;16842752;426042000
cernr;6;cerner;6;1;84480;426042056
cernid;6;cernid;6;257;16842752;426042512
cernr;6;cernir;6;1;84224;426042568
crque;6;cerque;6;13;858624;426056340
cerr;5;cerra;5;50;3294976;426057856
cerr;5;cerre;5;8;543232;426058368
cerril;6;cerril;6;1;65536;426058928
csa;4;cesa;4;51;3348992;426119168
cse;4;cese;4;13;858624;426135552
ceid;5;ceid;5;257;16842752;427332096
cer;5;ceir;5;1;80128;427333888
chfa;5;chafa;5;51;3352320;436363392
chfe;5;chafe;5;13;861952;436363904
chgua;6;chagua;6;51;3352320;436370052
chag;6;chage;6;8;547328;436370068
chara;6;chaira;6;1;80128;436377860
chal;4;chal;4;1;65536;436387840
chla;5;chala;5;51;3352320;436387968
chle;5;chale;5;13;861952;436388480
chma;5;chama;5;51;3352320;436392064
chme;5;chame;5;13;861952;436392576
chmpa;6;champa;6;51;3352320;436393988
chmpe;6;champe;6;13;861952;436394004
chnca;6;chanca;6;51;3352320;436396420
chnga;6;changa;6;51;3352320;436396932
chnta;6;chanta;6;51;3352320;436398596
chnte;6;chante;6;13;861952;436398612
chpa;5;chapa;5;51;3352320;436404352
chpe;5;chape;5;13;861952;436404864
chpea;6;chapea;6;51;3352320;436404868
chpee;6;chapee;6;13;861952;436404884
chrla;6;charla;6;51;3352320;436413956
chrle;6;charle;6;13;861952;436413972
chrra;6;charra;6;1;75520;436414724
chsca;6;chasca;6;51;3352320;436416900
chtea;6;chatea;6;51;3352320;436421252
chtee;6;chatee;6;13;861952;436421268
chca;5;checa;5;1;76288;436875392
checas;6;checas;6;1;65536;436875468
chque;6;cheque;6;1;76288;436935316
ch;3;chi;3;385;25241856;437387264
chc;4;chic;4;257;16853248;437399552
chcha;6;chicha;6;1;76032;437400580
chche;6;chiche;6;1;76032;437400596
chfla;6;chifla;6;51;3352832;437413380
chfle;6;chifle;6;13;862464;437413396
chlla;6;chilla;6;51;3352832;437437956
chlle;6;chille;6;13;862464;437437972
chlpe;6;chilpe;6;1;76032;437438484
chmba;6;chimba;6;51;3352832;437440772
chmbe;6;chimbe;6;13;862464;437440788
chna;5;china;5;1;76032;437444736
chinas;6;chinas;6;1;65536;437444812
chnga;6;chinga;6;51;3352832;437445508
chrla;6;chirla;6;307;20130048;437462532
chrle;6;chirle;6;13;862464;437462548
chs;4;chis;4;384;25176320;437465088
chsma;6;chisma;6;51;3352832;437466756
chsme;6;chisme;6;13;862464;437466772
chspa;6;chispa;6;35;2304256;437467140
chspe;6;chispe;6;5;338176;437467156
chsta;6;chista;6;51;3352832;437467652
chste;6;chiste;6;13;862464;437467668
chta;5;chita;5;51;3352832;437469312
chte;5;chite;5;13;862464;437469824
chva;5;chiva;5;51;3352832;437477504
chve;5;chive;5;13;862464;437478016
ch;3;cho;3;16641;1090594816;438173696
chca;5;choca;5;51;3352576;438186112
chcha;6;chocha;6;51;3352576;438187012
chche;6;choche;6;13;862208;438187028
chlla;6;cholla;6;1;75776;438224388
chque;6;choque;6;13;862208;438246036
chrea;6;chorea;6;51;3352576;438248068
chree;6;choree;6;13;862208;438248084
chta;5;chota;5;1;75776;438255744
chotas;6;chotas;6;1;65536;438255820
chtea;6;chotea;6;51;3352576;438256260
chtee;6;chotee;6;13;862208;438256276
chza;5;choza;5;1;75776;438280320
chozas;6;chozas;6;1;65536;438280396
chce;5;chuce;5;13;862976;438973056
chcea;6;chucea;6;51;3353344;438973060
chcee;6;chucee;6;13;862976;438973076
chcha;6;chucha;6;1;76544;438973444
chfa;5;chufa;5;51;3353344;438984832
chfe;5;chufe;5;13;862976;438985344
chfla;6;chufla;6;51;3353344;438986244
chfle;6;chufle;6;13;862976;438986260
chlea;6;chulea;6;51;3353344;439009924
chlee;6;chulee;6;13;862976;439009940
chmba;6;chumba;6;51;3353344;439013636
chmbe;6;chumbe;6;13;862976;439013652
chnga;6;chunga;6;1;76544;439018372
chpa;5;chupa;5;51;3353344;439025792
chpe;5;chupe;5;13;862976;439026304
chrra;6;churra;6;1;76544;439036164
chrre;6;churre;6;1;76544;439036180
chte;5;chute;5;1;76544;439042688
chza;5;chuza;5;51;3353344;439066752
ci;3;cia;3;50;3286784;440532992
ci;3;cie;3;8;535040;441057280
ciga;5;ciega;5;1;76288;441086080
cigue;6;ciegue;6;4;272896;441088660
cirna;6;cierna;6;1;76288;441132804
cirne;6;cierne;6;1;76288;441132820
cirra;6;cierra;6;1;76288;441133316
cirre;6;cierre;6;5;338432;441133332
cfra;5;cifra;5;51;3348736;441262208
cfre;5;cifre;5;13;858368;441262720
cma;4;cima;4;1;71936;442109952
cimas;5;cimas;5;1;65536;442112384
cmbra;6;cimbra;6;51;3348736;442116356
cmbre;6;cimbre;6;13;858368;442116372
cncha;6;cincha;6;51;3348736;442250244
cnche;6;cinche;6;13;858368;442250260
cngla;6;cingla;6;51;3348736;442267140
cngle;6;cingle;6;13;858368;442267156
csca;5;cisca;5;51;3348736;442904704
csma;5;cisma;5;1;71936;442945664
cismas;6;cismas;6;1;65536;442945740
csque;6;cisque;6;13;858368;442964628
cta;4;cita;4;51;3348736;443027456
cte;4;cite;4;13;858368;443043840
ciza;6;cizaa;6;51;3356416;443817476
cize;6;cizae;6;13;866048;443817492
ci;4;cia;4;9;603904;444076032
can;5;cian;5;257;16849152;444077824
ce;4;cie;4;1;71936;444092416
clma;5;clama;5;51;3352320;453169280
clme;5;clame;5;13;861952;453169792
clra;5;clara;5;1;75520;453189760
claras;6;claras;6;1;65536;453189836
clrea;6;clarea;6;35;2303744;453190276
clree;6;claree;6;5;337664;453190292
clva;5;clava;5;51;3352320;453206144
clve;5;clave;5;13;861952;453206656
cloc;5;cloca;5;34;2246400;454963328
clnes;6;clones;6;12288;805316608;455008972
cluca;6;clueca;6;1;80384;455758212
corta;6;coarta;6;51;3352320;465775108
corte;6;coarte;6;13;861952;465775124
cbea;5;cobea;5;51;3348480;465850496
cbee;5;cobee;5;13;858112;465851008
cobja;6;cobija;6;51;3356928;465868036
cobje;6;cobije;6;13;866560;465868052
cbra;5;cobra;5;51;3348480;465903744
cbre;5;cobre;5;13;858112;465904256
cca;4;coca;4;16435;1077090304;465965056
cocra;6;cocara;6;1;79616;465967364
cocre;6;cocare;6;13;866048;465967380
ccea;5;cocea;5;51;3348480;465981568
coced;5;coced;5;257;16842752;465981952
ccee;5;cocee;5;13;858112;465982080
cocr;5;cocer;5;1;80384;465983744
cocna;6;cocina;6;51;3356928;465999620
cocne;6;cocine;6;13;866560;465999636
cdea;5;codea;5;51;3348480;466112640
cdee;5;codee;5;13;858112;466113152
cge;4;coge;4;1;71680;466505728
coged;5;coged;5;257;16842752;466506240
cogr;5;coger;5;1;80384;466508032
cog;4;cog;4;256;16777216;466522112
cohib;6;cohiba;6;8;546560;466653444
cohbe;6;cohibe;6;1;80128;466653460
coj;4;coja;4;9;603904;466882560
cjan;5;cojan;5;257;16848896;466884352
cjea;5;cojea;5;51;3348480;466899072
cjee;5;cojee;5;13;858112;466899584
col;3;col;3;129;8454144;467140608
col;4;cola;4;50;3290880;467144704
clcha;6;colcha;6;51;3348480;467153924
clche;6;colche;6;13;858112;467153940
col;4;cole;4;8;539136;467161088
clea;5;colea;5;51;3348480;467161216
clee;5;colee;5;13;858112;467161728
colg;5;colga;5;50;3294976;467169408
colgu;6;colgue;6;8;547328;467171988
colga;6;coliga;6;51;3356928;467178372
colge;6;colige;6;1;80128;467178388
colij;6;colija;6;9;612096;467178756
colma;6;colima;6;1;80128;467179140
clla;5;colla;5;1;71680;467189888
clma;5;colma;5;307;20125696;467193984
clme;5;colme;5;13;858112;467194496
col;4;col;4;16384;1073741824;467202048
colca;6;coloca;6;51;3356672;467202436
colra;6;colora;6;59;3880960;467204356
colre;6;colore;6;13;866304;467204372
colud;6;coluda;6;9;612096;467227140
colde;6;colude;6;1;80640;467227156
com;4;coma;4;9;603904;467275776
cman;5;coman;5;257;16848896;467277568
cmba;5;comba;5;307;20125696;467280000
cmbe;5;combe;5;13;858112;467280512
com;4;come;4;261;17119744;467292160
comed;5;comed;5;257;16842752;467292672
comn;5;comen;5;256;16792064;467293952
comr;5;comer;5;1;80384;467294464
comet;6;cometa;6;9;612096;467294724
comte;6;comete;6;1;80384;467294740
com;4;com;4;320;20971520;467308544
comid;6;comida;6;9;612096;467309060
comde;6;comide;6;1;80128;467309076
comsa;6;comisa;6;51;3356928;467310980
comse;6;comise;6;13;866560;467310996
comps;6;comps;6;9216;603979776;467337420
cmpra;6;compra;6;51;3348480;467339524
cmpre;6;compre;6;13;858112;467339540
cond;5;conde;5;65;4278784;467419776
confi;6;confia;6;50;3299072;467428484
confi;6;confi;6;72;4718592;467428500
conce;6;conoce;6;1;79872;467464596
cnsta;6;consta;6;291;19077120;467483140
cnste;6;conste;6;5;333824;467483156
cont;5;conta;5;50;3294976;467484800
cont;5;conte;5;12;805376;467485312
contn;6;contn;6;256;16777216;467485368
contra;6;contra;6;257;16842752;467486980
cpa;4;copa;4;51;3348480;467668992
cpe;4;cope;4;13;858112;467685376
cpea;5;copea;5;51;3348480;467685504
cpee;5;copee;5;13;858112;467686016
copla;6;copela;6;1;80384;467686916
cpia;5;copia;5;51;3348480;467701888
cpie;5;copie;5;13;858112;467702400
cplea;6;coplea;6;51;3348480;467714692
cplee;6;coplee;6;13;858112;467714708
copla;6;copula;6;51;3357440;467752452
cople;6;copule;6;13;867072;467752468
cque;5;coque;5;13;858112;467882624
cquea;6;coquea;6;51;3348480;467882628
cquee;6;coquee;6;13;858112;467882644
crcha;6;corcha;6;51;3348480;467940356
crche;6;corche;6;13;858112;467940372
crea;5;corea;5;51;3348480;467947648
cree;5;coree;5;13;858112;467948160
crla;5;corla;5;51;3348480;467976320
crle;5;corle;5;13;858112;467976832
crlea;6;corlea;6;51;3348480;467976836
crlee;6;corlee;6;13;858112;467976852
crnea;6;crnea;6;51;3342336;467985028
crnee;6;cornee;6;13;858112;467985044
corna;6;corona;6;51;3356672;467990276
corne;6;corone;6;13;866304;467990292
corr;5;corra;5;9;608000;468000896
crran;6;corran;6;257;16848896;468000952
crre;5;corre;5;1;71680;468001408
crrea;6;correa;6;1;71680;468001412
corred;6;corred;6;257;16842752;468001424
corrr;6;correr;6;1;84480;468001480
crroe;6;corroe;6;1;71680;468002708
crsa;5;corsa;5;1;71680;468004992
corsas;6;corsas;6;1;65536;468005068
crta;5;corta;5;51;3348480;468009088
crte;5;corte;5;13;858112;468009600
crva;5;corva;5;51;3348480;468017280
crve;5;corve;5;13;858112;468017792
cos;4;cosa;4;9;603904;468062208
csan;5;cosan;5;257;16848896;468064000
csca;5;cosca;5;51;3348480;468070528
cse;4;cose;4;1;71680;468078592
cosed;5;cosed;5;257;16842752;468079104
cosr;5;coser;5;1;80384;468080896
csque;6;cosque;6;13;858112;468130452
costa;5;costa;5;51;3342336;468140160
cost;5;coste;5;8;543232;468140672
cstea;6;costea;6;51;3348480;468140676
cstee;6;costee;6;13;858112;468140692
cta;4;cota;4;1;71680;468193280
cotas;5;cotas;5;1;65536;468195712
cotja;6;coteja;6;51;3357184;468210948
cotje;6;coteje;6;13;866816;468210964
cotce;6;cotice;6;13;866560;468226452
cotza;6;cotiza;6;51;3356928;468229380
coz;4;coza;4;8;538368;468979712
cre;4;crea;4;58;3815168;478810112
crec;5;crece;5;5;346624;478818944
creced;6;creced;6;257;16842752;478818960
crecn;6;crecen;6;256;16796160;478819000
crecr;6;crecer;6;1;84480;478819016
cre;4;cree;4;8;539136;478826496
creed;5;creed;5;257;16842752;478827008
crer;5;creer;5;1;80384;478828800
crsa;5;cresa;5;1;76288;478883968
cresas;6;cresas;6;1;65536;478884044
crspa;6;crespa;6;1;76288;478885892
crsta;6;cresta;6;1;76288;478886404
crezc;6;crezca;6;9;612096;478912900
cri;4;cria;4;50;3290880;479334400
crba;5;criba;5;51;3352832;479338624
crbe;5;cribe;5;13;862464;479339136
cri;4;crie;4;8;539136;479350784
crnes;6;crines;6;12288;805316864;479388364
crsma;6;crisma;6;1;76032;479409796
crspa;6;crispa;6;59;3877120;479410180
crspe;6;crispe;6;13;862464;479410196
cro;4;croa;4;50;3290880;480120832
cro;4;croe;4;8;539136;480137216
crma;5;croma;5;51;3352576;480170112
crme;5;crome;5;13;862208;480170624
crce;5;cruce;5;13;862976;480916096
cruj;5;cruja;5;9;608000;480944256
crjan;6;crujan;6;257;16853760;480944312
crje;5;cruje;5;1;76544;480944768
crujid;6;crujid;6;257;16842752;480945296
crujr;6;crujir;6;1;84224;480945352
crza;5;cruza;5;51;3353344;481009792
cudra;6;cuadra;6;51;3352320;490883332
cudre;6;cuadre;6;13;861952;490883348
cuja;5;cuaja;5;51;3352320;490905728
cuje;5;cuaje;5;13;861952;490906240
curta;6;cuarta;6;1;75520;490940932
cba;4;cuba;4;1;72448;490999808
cubas;5;cubas;5;1;65536;491002240
cubca;6;cubica;6;51;3356928;491032964
cubr;5;cubra;5;9;608000;491069568
cbran;6;cubran;6;257;16849664;491069624
cbre;5;cubre;5;1;72448;491070080
cubrid;6;cubrid;6;257;16842752;491070608
cubrr;6;cubrir;6;1;84224;491070664
cca;4;cuca;4;51;3349248;491130880
cche;5;cuche;5;1;72448;491160192
cuce;5;cuece;5;1;76288;491401856
cula;5;cuela;5;1;76288;491438208
cule;5;cuele;5;5;338432;491438720
culga;6;cuelga;6;1;76288;491438980
cunta;6;cuenta;6;1;76288;491448836
cunte;6;cuente;6;5;338432;491448852
curea;6;cuerea;6;51;3353088;491463300
curee;6;cueree;6;13;862720;491463316
custa;6;cuesta;6;1;76288;491469316
custe;6;cueste;6;5;338432;491469332
cuza;5;cueza;5;1;76288;491495552
cuzan;6;cuezan;6;257;16853504;491495608
cuda;5;cuida;5;51;3352832;491929728
cude;5;cuide;5;13;862464;491930240
cuta;5;cuita;5;1;76032;491995264
cuitas;6;cuitas;6;1;65536;491995340
cul;4;culo;4;257;16857088;492367872
clpa;5;culpa;5;51;3349248;492372096
clpe;5;culpe;5;13;858880;492372608
cumpl;6;cumpla;6;9;612096;492504580
cmple;6;cumple;6;1;72448;492504596
cumla;6;cumula;6;51;3357440;492525060
cumle;6;cumule;6;13;867072;492525076
cund;5;cunda;5;9;608000;492585088
cndan;6;cundan;6;257;16849664;492585144
cnde;5;cunde;5;1;72448;492585600
cundid;6;cundid;6;257;16842752;492586128
cundr;6;cundir;6;1;84224;492586184
cnea;5;cunea;5;51;3349248;492589184
cnee;5;cunee;5;13;858880;492589696
cque;5;cuque;5;13;858880;493048448
cra;4;cura;4;51;3349248;493096960
cre;4;cure;4;13;858880;493113344
cria;5;curia;5;1;72448;493129856
curias;6;curias;6;1;65536;493129932
crsa;5;cursa;5;51;3349248;493170816
crse;5;curse;5;13;858880;493171328
curt;5;curta;5;9;608000;493174912
crtan;6;curtan;6;257;16849664;493174968
crte;5;curte;5;1;72448;493175424
curtid;6;curtid;6;257;16842752;493175952
curtr;6;curtir;6;1;84224;493176008
crva;5;curva;5;51;3349248;493183104
crve;5;curve;5;13;858880;493183616
crvea;6;curvea;6;51;3349248;493183620
crvee;6;curvee;6;13;858880;493183636
cutis;5;cutis;5;1;65536;493394304
ca;4;cua;4;1;72448;494407680
cuas;5;cuas;5;1;65536;494410112
d;2;da;2;306;20059904;541065216
dlla;5;dalla;5;51;3348224;542687360
dlle;5;dalle;5;13;857856;542687872
dnce;5;dance;5;13;857856;542913152
dnza;5;danza;5;51;3348224;543006848
dta;4;data;4;51;3348224;543690752
dte;4;date;4;13;857856;543707136
da;4;daa;4;51;3348224;544739328
de;4;dae;4;13;857856;544755712
d;2;de;2;8;530944;557842432
deb;4;deba;4;265;17381120;558108672
dban;5;deban;5;257;16849408;558110464
debat;6;debata;6;9;612096;558111236
debte;6;debate;6;1;79616;558111252
dbe;4;debe;4;1;72192;558125056
debed;5;debed;5;257;16842752;558125568
debla;6;debela;6;51;3357184;558126596
deble;6;debele;6;13;866816;558126612
debr;5;deber;5;1;80384;558127360
debta;6;debuta;6;51;3357440;558193156
debte;6;debute;6;13;867072;558193172
dcae;5;decae;5;1;72192;558240384
decaed;6;decaed;6;257;16842752;558240400
decar;6;decaer;6;1;84480;558240456
decid;5;decid;5;257;16842752;558273024
decid;6;decida;6;9;612096;558273028
decde;6;decide;6;1;80128;558273044
decr;5;decir;5;1;80128;558274816
decra;6;decora;6;51;3356672;558299396
decre;6;decore;6;13;866304;558299412
dedca;6;dedica;6;51;3356928;558403972
dedo;4;dedo;4;1;65536;558428160
dedce;6;deduce;6;1;80640;558453140
defca;6;defeca;6;51;3357184;558649732
defin;6;defina;6;9;612096;558667524
defne;6;define;6;1;80128;558667540
defir;6;defira;6;8;546560;558668036
dehsa;6;dehesa;6;1;80384;558913924
dja;4;deja;4;51;3348992;559157248
dje;4;deje;4;13;858624;559173632
delta;6;delata;6;51;3356416;559421956
delte;6;delate;6;13;866048;559421972
delga;6;delega;6;51;3357184;559436676
delra;6;delira;6;51;3356928;559454468
delre;6;delire;6;13;866560;559454484
demol;6;demola;6;8;546560;559609348
demra;6;demora;6;51;3356672;559610116
demre;6;demore;6;13;866304;559610132
demda;6;demuda;6;51;3357440;559632900
demde;6;demude;6;13;867072;559632916
deneg;6;denega;6;50;3299072;559698820
denta;6;denota;6;51;3356672;559741444
dente;6;denote;6;13;866304;559741460
dent;5;denta;5;50;3294976;559759488
dent;5;dente;5;8;543232;559760000
depra;6;depara;6;51;3356416;559945988
depre;6;depare;6;13;866048;559946004
depla;6;depila;6;51;3356928;559977988
deple;6;depile;6;13;866560;559978004
depne;6;depone;6;1;79872;560002836
depra;6;depura;6;51;3357440;560027908
depre;6;depure;6;13;867072;560027924
derva;6;deriva;6;51;3356928;560241412
derve;6;derive;6;13;866560;560241428
derga;6;deroga;6;51;3356672;560264068
desla;6;desala;6;51;3356416;560338436
desle;6;desale;6;13;866048;560338452
desma;6;desama;6;51;3356416;560338564
desme;6;desame;6;13;866048;560338580
desam;6;desam;6;16384;1073741824;560338620
desse;6;desase;6;5;341760;560339348
desta;6;desata;6;51;3356416;560339460
deste;6;desate;6;13;866048;560339476
desat;6;desat;6;16384;1073741824;560339516
dsea;5;desea;5;51;3348992;560353408
desca;6;deseca;6;51;3357184;560353668
dsee;5;desee;5;13;858624;560353920
deshaz;6;deshaz;6;1;65536;560365800
desli;6;deslia;6;58;3823360;560383108
desli;6;deslie;6;8;547328;560383124
desod;6;desod;6;257;16842752;560395408
desor;6;desor;6;1;65536;560395464
desja;6;desoja;6;51;3356672;560395524
desje;6;desoje;6;13;866304;560395540
desol;6;desola;6;50;3299072;560395780
desol;6;desole;6;8;547328;560395796
desos;6;desosa;6;50;3299072;560396676
desos;6;desose;6;8;547328;560396692
desye;6;desoye;6;1;79872;560397460
dspea;6;despea;6;51;3348992;560398980
dspee;6;despee;6;13;858624;560398996
desda;6;desuda;6;51;3357440;560419332
desde;6;desude;6;13;867072;560419348
desun;6;desuna;6;9;612096;560420612
desne;6;desune;6;1;80640;560420628
dessa;6;desusa;6;51;3357440;560421252
desse;6;desuse;6;13;867072;560421268
desa;6;desua;6;59;3881728;560422404
dese;6;desue;6;13;867072;560422420
desvi;6;desvia;6;50;3299072;560424068
desvi;6;desvie;6;8;547328;560424084
det;4;det;4;4;262144;560484352
detn;5;detn;5;256;16777216;560486144
detna;6;detona;6;51;3356672;560527108
detne;6;detone;6;13;866304;560527124
dtrae;6;detrae;6;1;72192;560537748
devna;6;devana;6;51;3356416;560731908
devne;6;devane;6;13;866048;560731924
devla;6;devela;6;51;3357184;560748036
devle;6;devele;6;13;866816;560748052
devra;6;devora;6;51;3356672;560789764
devre;6;devore;6;13;866304;560789780
devta;6;devota;6;1;79872;560790020
di;2;di;2;1;65536;574619648
dibja;6;dibuja;6;51;3357440;574969092
dibje;6;dibuje;6;13;867072;574969108
dce;4;dice;4;1;71936;575033344
dcta;5;dicta;5;51;3348736;575094912
dcte;5;dicte;5;13;858368;575095424
dinta;6;dienta;6;1;76288;575334916
dinte;6;diente;6;5;338432;575334932
dita;5;dieta;5;1;76288;575357056
dietas;6;dietas;6;1;65536;575357132
diz;4;diez;4;128;8399360;575381504
dizma;6;diezma;6;51;3353088;575383172
dizme;6;diezme;6;13;862720;575383188
difma;6;difama;6;51;3356416;575411844
difme;6;difame;6;13;866048;575411860
difir;6;difira;6;8;546560;575445252
dig;4;diga;4;9;603904;575541248
dgan;5;digan;5;257;16849152;575543040
digir;6;digira;6;8;546560;575576324
dgna;5;digna;5;51;3348736;575594624
dgne;5;digne;5;13;858368;575595136
dilta;6;dilata;6;51;3356416;576199172
dilte;6;dilate;6;13;866048;576199188
diluid;6;diluid;6;257;16842752;576279696
dilur;6;diluir;6;1;84224;576279752
diluy;6;diluya;6;9;612096;576281732
dilye;6;diluye;6;1;80640;576281748
dimna;6;dimana;6;51;3356416;576329476
dimne;6;dimane;6;13;866048;576329492
dimit;6;dimita;6;9;612096;576363012
dimte;6;dimite;6;1;80128;576363028
din;3;din;3;256;16777216;576454656
dipta;6;diputa;6;51;3357440;576805380
dipte;6;dipute;6;13;867072;576805396
dque;5;dique;5;1;71936;576934528
dirge;6;dirige;6;1;80128;577016724
dirij;6;dirija;6;9;612096;577017092
dirim;6;dirima;6;9;612096;577017476
dirme;6;dirime;6;1;80128;577017492
disca;6;diseca;6;51;3357184;577130884
disa;6;disea;6;51;3357184;577134084
dise;6;disee;6;13;866816;577134100
disid;6;disida;6;9;612096;577147396
disde;6;diside;6;1;80128;577147412
dispa;6;disipa;6;51;3356928;577148932
dispe;6;disipe;6;13;866560;577148948
dison;6;disona;6;50;3299072;577173252
dison;6;disone;6;8;547328;577173268
dsta;5;dista;5;51;3348736;577192064
dste;5;diste;5;13;858368;577192576
divga;6;divaga;6;51;3356416;577508228
divid;6;divida;6;9;612096;577540612
divde;6;divide;6;1;80128;577540628
divna;6;divina;6;1;80128;577541892
divsa;6;divisa;6;51;3356928;577542532
divse;6;divise;6;13;866560;577542548
d;2;do;2;16768;1098913792;599785472
dbla;5;dobla;5;51;3348480;600096896
dble;5;doble;5;13;858112;600097408
doct;5;docto;5;16384;1073760256;600262528
dol;4;dola;4;8;538368;601362432
dol;4;dole;4;8;539136;601378816
doled;5;doled;5;257;16842752;601379328
dolr;5;doler;5;1;80384;601381120
dma;4;doma;4;51;3348480;601493504
dme;4;dome;4;13;858112;601509888
doma;6;domea;6;51;3357184;601513476
dome;6;domee;6;13;866816;601513492
domna;6;domina;6;51;3356928;601528068
domne;6;domine;6;13;866560;601528084
dna;4;dona;4;51;3348480;601624576
dne;4;done;4;13;858112;601640960
dra;4;dora;4;51;3348480;602148864
dre;4;dore;4;13;858112;602165248
dorm;5;dorm;5;256;16777216;602199168
dormid;6;dormid;6;257;16842752;602199184
dormr;6;dormir;6;1;84224;602199240
dta;4;dota;4;51;3348480;602411008
dte;4;dote;4;13;858112;602427392
dovla;6;dovela;6;1;80384;602691076
drga;5;draga;5;51;3352320;612528256
drgue;6;drague;6;13;861952;612530836
drna;5;drena;5;51;3353088;613081216
drne;5;drene;5;13;862720;613081728
drga;5;droga;5;51;3352576;614363264
drgue;6;drogue;6;13;862208;614365844
dcha;5;ducha;5;51;3349248;625377408
dche;5;duche;5;13;858880;625377920
dda;4;duda;4;51;3349248;625479680
dde;4;dude;4;13;858880;625496064
dula;5;duela;5;1;76288;625655936
dulan;6;duelan;6;257;16853504;625655992
dule;5;duele;5;5;338432;625656448
durma;6;duerma;6;1;76288;625682052
durme;6;duerme;6;1;76288;625682068
dra;4;dura;4;51;3349248;627314688
dre;4;dure;4;13;858880;627331072
durm;5;durma;5;8;542464;627363968
;1;e;1;16384;1073744384;671088640
cha;4;echa;4;51;3344896;684724224
che;4;eche;4;13;854528;684740608
edta;5;edita;5;51;3352832;689127552
edte;5;edite;5;13;862464;689128064
edca;5;educa;5;51;3353344;690630784
edque;6;eduque;6;13;862976;690690708
efgie;6;efigie;6;1;76032;697463956
egrsa;6;egresa;6;51;3357184;702830980
egrse;6;egrese;6;13;866816;702830996
ejrce;6;ejerce;6;1;76288;713761172
ejerc;6;ejerc;6;256;16777216;713761188
ejerz;6;ejerza;6;9;612096;713764100
elegid;6;elegid;6;257;16842752;722105488
elegr;6;elegir;6;1;84224;722105544
elva;5;eleva;5;51;3353088;722165888
elve;5;eleve;5;13;862720;722166400
elid;5;elida;5;9;608000;722616448
eldan;6;elidan;6;257;16853248;722616504
elde;5;elide;5;1;76032;722616960
elidid;6;elidid;6;257;16842752;722617488
elidr;6;elidir;6;1;84224;722617544
elge;5;elige;5;1;76032;722629248
elij;5;elija;5;9;608000;722641024
eljan;6;elijan;6;257;16853248;722641080
elijas;6;elijas;6;1;65536;722641100
elgia;6;elogia;6;51;3352576;723416196
elgie;6;elogie;6;13;862208;723416212
elud;5;eluda;5;9;608000;724189312
eldan;6;eludan;6;257;16853760;724189368
elde;5;elude;5;1;76544;724189824
eludid;6;eludid;6;257;16842752;724190352
eludr;6;eludir;6;1;84224;724190408
emna;5;emana;5;35;2303744;725803136
emne;5;emane;5;5;337664;725803648
embla;6;embala;6;51;3356416;725882372
emble;6;embale;6;13;866048;725882388
embeb;6;embeba;6;9;612096;725897476
embbe;6;embebe;6;1;80384;725897492
embja;6;embija;6;51;3356928;725914884
embje;6;embije;6;13;866560;725914900
embba;6;emboba;6;51;3356672;725938436
embbe;6;embobe;6;13;866304;725938452
embca;6;emboca;6;51;3356672;725938564
embce;6;emboce;6;13;866304;725938580
embla;6;embola;6;307;20133888;725939716
emble;6;embole;6;13;866304;725939732
embna;6;embona;6;51;3356672;725939972
embne;6;embone;6;13;866304;725939988
embta;6;embota;6;51;3356672;725940740
embte;6;embote;6;13;866304;725940756
embza;6;emboza;6;51;3356672;725941508
mbrea;6;embrea;6;51;3344896;725951108
mbree;6;embree;6;13;854528;725951124
embda;6;embuda;6;51;3357440;725963268
embde;6;embude;6;13;867072;725963284
embta;6;embuta;6;9;604928;725965316
embte;6;embute;6;5;342784;725965332
emrge;6;emerge;6;1;76288;726344596
emerj;6;emerja;6;9;612096;726344964
emgra;6;emigra;6;51;3352832;726825220
emgre;6;emigre;6;13;862464;726825236
emit;5;emita;5;9;608000;726876288
emtan;6;emitan;6;257;16853248;726876344
emte;5;emite;5;1;76032;726876800
emitid;6;emitid;6;257;16842752;726877328
emitr;6;emitir;6;1;84224;726877384
empca;6;empaca;6;51;3356416;727716228
empja;6;empaja;6;51;3356416;727717124
empje;6;empaje;6;13;866048;727717140
empla;6;empala;6;51;3356416;727717380
emple;6;empale;6;13;866048;727717396
empal;6;empal;6;129;8454144;727717436
empna;6;empana;6;51;3356416;727717636
empne;6;empane;6;13;866048;727717652
emppa;6;empapa;6;51;3356416;727717892
emppe;6;empape;6;13;866048;727717908
empta;6;empata;6;51;3356416;727718404
empte;6;empate;6;13;866048;727718420
empva;6;empava;6;51;3356416;727718660
empve;6;empave;6;77;5060352;727718676
empa;6;empaa;6;51;3356416;727719428
empe;6;empae;6;269;17643264;727719444
empce;6;empece;6;9;604672;727732628
empda;6;empeda;6;51;3357184;727732740
empde;6;empede;6;13;866816;727732756
empga;6;empega;6;51;3357184;727733124
empez;6;empeza;6;58;3823360;727735556
empa;6;empea;6;51;3357184;727735812
empe;6;empee;6;13;866816;727735828
empeo;6;empeo;6;1;65536;727735868
empna;6;empina;6;51;3356928;727750404
empne;6;empine;6;13;866560;727750420
mplea;6;emplea;6;51;3344896;727761540
mplee;6;emplee;6;13;854528;727761556
empce;6;empoce;6;13;866304;727773588
empza;6;empoza;6;51;3356672;727776516
empja;6;empuja;6;51;3357440;727799044
empje;6;empuje;6;13;867072;727799060
empa;6;empua;6;51;3357440;727801348
empe;6;empue;6;13;867072;727801364
emla;5;emula;5;51;3353344;728416384
emle;5;emule;5;13;862976;728416896
en;2;en;2;256;16777216;729808896
engua;6;enagua;6;51;3352320;729971332
enag;6;enage;6;8;547328;729971348
enna;5;enana;5;1;75520;729997440
enanas;6;enanas;6;1;65536;729997516
ennca;6;enanca;6;51;3352320;729997700
enrca;6;enarca;6;51;3352320;730014084
ensta;6;enasta;6;51;3352320;730020356
enste;6;enaste;6;13;861952;730020372
encja;6;encaja;6;51;3356416;730207492
encje;6;encaje;6;16653;1091385088;730207508
encla;6;encala;6;307;20133632;730207748
encle;6;encale;6;269;17643264;730207764
encma;6;encama;6;16435;1077098240;730207876
encme;6;encame;6;13;866048;730207892
encam;6;encam;6;256;16777216;730207932
encna;6;encana;6;51;3356416;730208004
encne;6;encane;6;13;866048;730208020
encar;6;encara;6;179;11753216;730208516
encre;6;encare;6;13;866048;730208532
enca;6;encaa;6;129;8476416;730209796
encla;6;encela;6;51;3357184;730224132
encle;6;encele;6;13;866816;730224148
encpa;6;encepa;6;51;3357184;730224644
encpe;6;encepe;6;13;866816;730224660
encra;6;encera;6;51;3357184;730224900
encre;6;encere;6;13;866816;730224916
encer;6;encer;6;257;16842752;730224956
encge;6;encoge;6;1;79872;730264468
encoj;6;encoja;6;9;612096;730264836
encla;6;encola;6;51;3356672;730265092
encle;6;encole;6;13;866304;730265108
encna;6;encona;6;51;3356672;730265348
encne;6;encone;6;13;866304;730265364
encor;6;encora;6;50;3299072;730265860
encor;6;encore;6;8;547328;730265876
encba;6;encuba;6;51;3357440;730288388
encbe;6;encube;6;13;867072;730288404
encna;6;encuna;6;51;3357440;730289924
encne;6;encune;6;13;867072;730289940
endsa;6;endosa;6;51;3356672;730397060
endse;6;endose;6;13;866304;730397076
enrva;6;enerva;6;51;3353088;730540804
enrve;6;enerve;6;13;862720;730540820
enfda;6;enfada;6;51;3356416;730599940
enfde;6;enfade;6;13;866048;730599956
enfja;6;enfaja;6;51;3356416;730600708
enfje;6;enfaje;6;13;866048;730600724
enfla;6;enfila;6;51;3356928;730633732
enfle;6;enfile;6;13;866560;730633748
enfca;6;enfoca;6;51;3356672;730657156
enfri;6;enfria;6;50;3299072;730670212
enfri;6;enfrie;6;8;547328;730670228
engsa;6;engasa;6;51;3356416;730732932
engse;6;engase;6;13;866048;730732948
engta;6;engata;6;51;3356416;730733060
engte;6;engate;6;13;866048;730733076
enga;6;engaa;6;51;3356416;730734084
enge;6;engae;6;13;866048;730734100
enga;6;enga;6;257;16842752;730734140
engma;6;engoma;6;51;3356672;730789508
engme;6;engome;6;13;866304;730789524
engri;6;engria;6;8;546560;730801284
enhla;6;enhila;6;51;3356928;730895876
enhle;6;enhile;6;13;866560;730895892
enjba;6;enjeba;6;51;3357184;731140356
enjbe;6;enjebe;6;13;866816;731140372
enjya;6;enjoya;6;51;3356672;731184260
enjye;6;enjoye;6;13;866304;731184276
enjga;6;enjuga;6;51;3357440;731206532
enjta;6;enjuta;6;51;3357440;731208196
enjte;6;enjute;6;13;867072;731208212
enlce;6;enlace;6;13;866048;731386260
enlja;6;enlaja;6;51;3356416;731387140
enlje;6;enlaje;6;13;866048;731387156
enlta;6;enlata;6;51;3356416;731388420
enlte;6;enlate;6;13;866048;731388436
enlza;6;enlaza;6;51;3356416;731389188
enlce;6;enloce;6;13;866304;731443604
enlda;6;enloda;6;51;3356672;731443716
enlde;6;enlode;6;13;866304;731443732
enlsa;6;enlosa;6;51;3356672;731445636
enlse;6;enlose;6;13;866304;731445652
enlza;6;enloza;6;51;3356672;731446532
enlce;6;enluce;6;1;80640;731468180
enlta;6;enluta;6;51;3357440;731470340
enlte;6;enlute;6;13;867072;731470356
enmra;6;enmara;6;51;3356416;731519236
enmre;6;enmare;6;13;866048;731519252
enmar;6;enmar;6;128;8388608;731519292
enmel;6;enmela;6;50;3299072;731534852
enmel;6;enmele;6;8;547328;731534868
enmel;6;enmel;6;256;16777216;731534908
enja;5;enoja;5;51;3352576;731816064
enje;5;enoje;5;13;862208;731816576
enoj;5;enoj;5;257;16842752;731817856
enrma;6;enrama;6;51;3356416;732173956
enrme;6;enrame;6;13;866048;732173972
enrsa;6;enrasa;6;51;3356416;732174724
enrse;6;enrase;6;13;866048;732174740
enrya;6;enraya;6;51;3356416;732175492
enrye;6;enraye;6;13;866048;732175508
enrda;6;enreda;6;51;3357184;732189188
enrde;6;enrede;6;13;866816;732189204
enreja;6;enreja;6;51;3342336;732189956
enrje;6;enreje;6;13;866816;732189972
enri;5;enria;5;50;3294976;732205184
enri;5;enrie;5;8;543232;732205696
enrca;6;enroca;6;51;3356672;732230020
enrla;6;enrola;6;51;3356672;732231172
enrle;6;enrole;6;13;866304;732231188
enrma;6;enroma;6;51;3356672;732231300
enrme;6;enrome;6;13;866304;732231316
enra;6;enroa;6;51;3356672;732233220
enre;6;enroe;6;13;866304;732233236
enrla;6;enrula;6;51;3357440;732255748
enrle;6;enrule;6;13;867072;732255764
ensca;6;ensaca;6;51;3356416;732303748
ensaya;6;ensaya;6;51;3342336;732306564
ensye;6;ensaye;6;13;866048;732306580
ensa;6;ensaa;6;51;3356416;732306948
ense;6;ensae;6;13;866048;732306964
ensba;6;enseba;6;51;3357184;732320004
ensbe;6;ensebe;6;13;866816;732320020
ensa;6;ensea;6;51;3357184;732323332
ense;6;ensee;6;13;866816;732323348
ensla;6;ensila;6;51;3356928;732337668
ensle;6;ensile;6;13;866560;732337684
ensga;6;ensoga;6;51;3356672;732361604
enspa;6;ensopa;6;51;3356672;732362756
enspe;6;ensope;6;13;866304;732362772
ensta;6;ensota;6;51;3356672;732363268
enste;6;ensote;6;13;866304;732363284
entpa;6;entapa;6;16435;1077098240;732436484
entpe;6;entape;6;13;866048;732436500
ent;4;ente;4;16384;1073756672;732450816
entca;6;enteca;6;1;80384;732451204
entja;6;enteja;6;51;3357184;732452100
entje;6;enteje;6;13;866816;732452116
entra;6;entera;6;51;3357184;732453124
entre;6;entere;6;13;866816;732453140
ents;5;entes;5;257;16857600;732453248
entes;6;entesa;6;50;3299072;732453252
entes;6;entese;6;8;547328;732453268
entba;6;entiba;6;51;3356928;732467460
entbe;6;entibe;6;13;866560;732467476
entce;6;entice;6;13;866560;732467604
entna;6;entina;6;51;3356928;732468996
entne;6;entine;6;13;866560;732469012
entza;6;entiza;6;51;3356928;732470532
entna;6;entona;6;51;3356672;732493572
entne;6;entone;6;13;866304;732493588
entr;5;entra;5;179;11749120;732504192
ntre;5;entre;5;13;854528;732504704
entba;6;entuba;6;51;3357440;732516612
entbe;6;entube;6;13;867072;732516628
entum;6;entuma;6;9;612096;732518020
entme;6;entume;6;1;80640;732518036
entup;6;entupa;6;9;612096;732518404
entpe;6;entupe;6;1;80640;732518420
envra;6;envara;6;51;3356416;732698884
envre;6;envare;6;13;866048;732698900
envsa;6;envasa;6;51;3356416;732699012
envse;6;envase;6;13;866048;732699028
envra;6;envera;6;35;2308608;732715268
envre;6;envere;6;5;342528;732715284
envs;5;envs;5;9216;603979776;732715392
envi;5;envia;5;50;3294976;732729472
envi;5;envie;5;8;543232;732729984
envga;6;enviga;6;51;3356928;732730244
envna;6;envina;6;51;3356928;732731140
envne;6;envine;6;13;866560;732731156
enysa;6;enyesa;6;51;3357184;733108612
enyse;6;enyese;6;13;866816;733108628
enyta;6;enyeta;6;51;3357184;733108740
enyte;6;enyete;6;13;866816;733108756
enyga;6;enyuga;6;51;3357440;733172612
ep;3;epa;3;257;16852736;738328576
equpa;6;equipa;6;16435;1077098752;745183236
equpe;6;equipe;6;13;866560;745183252
ra;3;era;3;1;68096;746717184
eras;4;eras;4;1;65536;746795008
re;3;ere;3;1;68096;747241472
erguid;6;erguid;6;257;16842752;747590800
ergur;6;erguir;6;1;84224;747590856
erce;5;erice;5;13;862464;747778688
erge;5;erige;5;1;76032;747795072
erigid;6;erigid;6;257;16842752;747795600
erigr;6;erigir;6;1;84224;747795656
erij;5;erija;5;9;608000;747806848
erjan;6;erijan;6;257;16853248;747806904
erza;5;eriza;5;51;3352832;747872384
erga;5;eroga;5;51;3352576;748580992
ergue;6;erogue;6;13;862208;748583572
err;4;erra;4;50;3290880;748949504
err;4;erre;4;8;539136;748965888
ercta;6;eructa;6;51;3353344;749353476
ercte;6;eructe;6;13;862976;749353492
erta;5;eruta;5;51;3353344;749420672
erte;5;erute;5;13;862976;749421184
es;2;es;2;256;16777216;750780416
esbce;6;esboce;6;13;866304;751104404
esbza;6;esboza;6;51;3356672;751107332
escla;6;escala;6;51;3356416;751179268
escle;6;escale;6;13;866048;751179284
escma;6;escama;6;51;3356416;751179396
escme;6;escame;6;13;866048;751179412
escam;6;escam;6;257;16842752;751179452
escpa;6;escapa;6;51;3356416;751179780
escpe;6;escape;6;13;866048;751179796
esca;6;escaa;6;1;79616;751181316
escba;6;escoba;6;51;3356672;751235332
escbe;6;escobe;6;13;866304;751235348
escoc;6;escoce;6;8;547328;751235476
escda;6;escoda;6;51;3356672;751235588
escde;6;escode;6;13;866304;751235604
escge;6;escoge;6;1;79872;751235988
escoj;6;escoja;6;9;612096;751236356
escma;6;escoma;6;1;79872;751236740
escme;6;escome;6;5;342016;751236756
escra;6;escora;6;51;3356672;751237380
escre;6;escore;6;13;866304;751237396
escta;6;escota;6;51;3356672;751237636
escte;6;escote;6;13;866304;751237652
escoz;6;escoza;6;8;546560;751238404
esca;6;escoa;6;51;3356672;751238660
esce;6;escoe;6;13;866304;751238676
escda;6;escuda;6;51;3357440;751260164
escde;6;escude;6;16397;1074608896;751260180
escup;6;escupa;6;9;612096;751261700
escpe;6;escupe;6;1;80640;751261716
esfma;6;esfuma;6;51;3357440;751654532
esfme;6;esfume;6;13;867072;751654548
esmra;6;esmera;6;51;3357184;752507140
esmre;6;esmere;6;13;866816;752507156
espra;6;espera;6;51;3357184;752900356
espre;6;espere;6;13;866816;752900372
espsa;6;espesa;6;51;3357184;752900484
espse;6;espese;6;13;866816;752900500
espta;6;espeta;6;51;3357184;752900612
espte;6;espete;6;13;866816;752900628
espi;5;espia;5;50;3294976;752914560
espi;5;espie;5;8;543232;752915072
espga;6;espiga;6;51;3356928;752915332
espna;6;espina;6;51;3356928;752916228
espne;6;espine;6;13;866560;752916244
espra;6;espira;6;51;3356928;752916740
espre;6;espire;6;13;866560;752916756
espta;6;espita;6;51;3356928;752916996
espte;6;espite;6;13;866560;752917012
espsa;6;esposa;6;51;3356672;752941444
espse;6;espose;6;13;866304;752941460
espma;6;espuma;6;51;3357440;752965252
espme;6;espume;6;13;867072;752965268
espta;6;esputa;6;51;3357440;752966148
espte;6;espute;6;13;867072;752966164
esqu;5;esqu;5;320;20971520;753095808
esqui;6;esquia;6;50;3299072;753095812
esqui;6;esquie;6;8;547328;753095828
est;4;esta;4;32;2111232;753405952
estca;6;estaca;6;51;3356416;753406340
estfa;6;estafa;6;51;3356416;753406724
estfe;6;estafe;6;13;866048;753406740
esta;6;estaa;6;51;3356416;753409540
este;6;estae;6;13;866048;753409556
est;4;este;4;16520;1082669568;753422336
estra;6;estera;6;51;3357184;753424644
estre;6;estere;6;13;866816;753424660
estba;6;estiba;6;51;3356928;753438980
estbe;6;estibe;6;13;866560;753438996
estla;6;estila;6;51;3356928;753440260
estle;6;estile;6;13;866560;753440276
estma;6;estima;6;51;3356928;753440388
estme;6;estime;6;13;866560;753440404
estra;6;estira;6;51;3356928;753441028
estre;6;estire;6;13;866560;753441044
estfa;6;estofa;6;51;3356672;753464068
estfe;6;estofe;6;13;866304;753464084
estpa;6;estopa;6;1;79872;753465348
estri;6;estria;6;50;3299072;753476740
estri;6;estrie;6;8;547328;753476756
estca;6;estuca;6;51;3357440;753488260
estfa;6;estufa;6;1;80640;753488644
evcua;6;evacua;6;51;3352320;763509380
evcue;6;evacue;6;13;861952;763509396
evad;5;evada;5;9;608000;763510912
evdan;6;evadan;6;257;16852736;763510968
evde;5;evade;5;1;75520;763511424
evadid;6;evadid;6;257;16842752;763511952
evadr;6;evadir;6;1;84224;763512008
evalu;6;evalua;6;50;3299072;763546244
evalu;6;evalue;6;8;547328;763546260
evta;5;evita;5;51;3352832;764625024
evte;5;evite;5;13;862464;764625536
evo;3;evo;3;1;65536;765329408
evca;5;evoca;5;51;3352576;765341824
evque;6;evoque;6;13;862208;765401748
exlta;6;exalta;6;51;3352320;771934724
exlte;6;exalte;6;13;861952;771934740
excva;6;excava;6;51;3356416;772152068
excve;6;excave;6;13;866048;772152084
exced;6;exceda;6;9;612096;772166148
excde;6;excede;6;1;80384;772166164
excta;6;excita;6;51;3356928;772184580
excte;6;excite;6;13;866560;772184596
excsa;6;excusa;6;51;3357440;772233604
excse;6;excuse;6;13;867072;772233620
excra;6;execra;6;51;3353088;772421892
excre;6;execre;6;13;862720;772421908
exnta;6;exenta;6;51;3353088;772467204
exnte;6;exente;6;13;862720;772467220
exhla;6;exhala;6;51;3356416;772806148
exhle;6;exhale;6;13;866048;772806164
exhib;6;exhiba;6;9;612096;772837636
exhbe;6;exhibe;6;1;80128;772837652
exhma;6;exhuma;6;51;3357440;772888196
exhme;6;exhume;6;13;867072;772888212
exge;5;exige;5;1;76032;772960896
exigid;6;exigid;6;257;16842752;772961424
exigr;6;exigir;6;1;84224;772961480
exij;5;exija;5;9;608000;772972672
exjan;6;exijan;6;257;16853248;772972728
exla;5;exila;5;51;3352832;772980864
exle;5;exile;5;13;862464;772981376
exlia;6;exilia;6;51;3352832;772981892
exlie;6;exilie;6;13;862464;772981908
exim;5;exima;5;9;608000;772984960
exman;6;eximan;6;257;16853248;772985016
exme;5;exime;5;1;76032;772985472
eximid;6;eximid;6;257;16842752;772986000
eximr;6;eximir;6;1;84224;772986056
exist;6;exista;6;9;612096;773011972
exste;6;existe;6;1;76032;773011988
exist;6;exist;6;128;8388608;773012004
exra;5;exora;5;51;3352576;773791872
exre;5;exore;5;13;862208;773792384
exrna;6;exorna;6;51;3352576;773793540
exrne;6;exorne;6;13;862208;773793556
exped;6;exped;6;256;16777216;773870116
expel;6;expela;6;9;612096;773871108
exple;6;expele;6;1;80384;773871124
expi;5;expia;5;50;3294976;773886080
expid;6;expida;6;9;612096;773886468
expde;6;expide;6;1;80128;773886484
expi;5;expie;5;8;543232;773886592
expra;6;expira;6;51;3356928;773888260
expre;6;expire;6;13;866560;773888276
expne;6;expone;6;1;79872;773912340
exprs;6;exprs;6;9216;603979776;773923532
xtrae;6;extrae;6;1;68096;774447252
exda;5;exuda;5;51;3353344;774520960
exde;5;exude;5;13;862976;774521472
exlta;6;exulta;6;51;3353344;774556164
exlte;6;exulte;6;13;862976;774556180
facta;6;faceta;6;1;80384;809916932
fana;5;faena;5;51;3353088;810213504
fane;5;faene;5;13;862720;810214016
fja;4;faja;4;51;3348224;810815488
fje;4;faje;4;13;857856;810831872
flca;5;falca;5;1;71424;811085952
falcas;6;falcas;6;1;65536;811086028
fldea;6;faldea;6;51;3348224;811090564
fldee;6;faldee;6;13;857856;811090580
flla;5;falla;5;59;3872512;811122816
fllan;6;fallan;6;257;16848640;811122872
flle;5;falle;5;13;857856;811123328
fallid;6;fallid;6;257;16842752;811123856
fallr;6;fallir;6;1;84224;811123912
flsa;5;falsa;5;1;71424;811151488
falsas;6;falsas;6;1;65536;811151564
flsea;6;falsea;6;51;3348224;811152004
flsee;6;falsee;6;13;857856;811152020
flta;5;falta;5;51;3348224;811155584
flte;5;falte;5;13;857856;811156096
fang;5;fanga;5;32;2115328;811364480
frda;5;farda;5;51;3348224;811876480
frde;5;farde;5;13;857856;811876992
frrea;6;farrea;6;51;3348224;811934340
frree;6;farree;6;13;857856;811934356
frsa;5;farsa;5;1;71424;811937920
farsas;6;farsas;6;1;65536;811937996
frsea;6;farsea;6;51;3348224;811938436
frsee;6;farsee;6;13;857856;811938452
fatga;6;fatiga;6;51;3356928;812159876
fcha;5;fecha;5;51;3348992;826704000
fche;5;feche;5;13;858624;826704512
fedra;6;federa;6;51;3357184;826824964
fedre;6;federe;6;13;866816;826824980
flpa;5;felpa;5;51;3348992;827916416
flpe;5;felpe;5;13;858624;827916928
fence;6;fenece;6;1;80384;828133780
fria;5;feria;5;51;3348992;828674176
frie;5;ferie;5;13;858624;828674688
ferr;5;ferra;5;50;3294976;828711040
ferr;5;ferre;5;8;543232;828711552
fi;2;fi;2;1;65536;843055104
fi;3;fia;3;50;3286784;843186176
fcha;5;ficha;5;51;3348736;843481216
fche;5;fiche;5;13;858368;843481728
fi;3;fi;3;136;8912896;843710464
firra;6;fierra;6;1;76288;843786500
firre;6;fierre;6;5;338432;843786516
figra;6;figura;6;51;3357440;844060932
figre;6;figure;6;13;867072;844060948
fja;4;fija;4;51;3348736;844369920
fje;4;fije;4;13;858368;844386304
fla;4;fila;4;1;71936;844632064
filas;5;filas;5;1;65536;844634496
flia;5;filia;5;51;3348736;844664960
flie;5;filie;5;13;858368;844665472
flma;5;filma;5;51;3348736;844681344
flme;5;filme;5;13;858368;844681856
fltra;6;filtra;6;51;3348736;844712196
fltre;6;filtre;6;13;858368;844712212
fn;3;fin;3;256;16783616;844890112
fna;4;fina;4;59;3873024;844894208
fnan;5;finan;5;257;16849152;844896000
fnca;5;finca;5;51;3348736;844902528
fne;4;fine;4;13;858368;844910592
fnge;5;finge;5;1;71936;844919424
fingid;6;fingid;6;257;16842752;844919952
fingr;6;fingir;6;1;84224;844920008
finj;5;finja;5;9;608000;844931200
fnjan;6;finjan;6;257;16849152;844931256
fnque;6;finque;6;13;858368;844962452
fnta;5;finta;5;51;3348736;844972160
fnte;5;finte;5;13;858368;844972672
frma;5;firma;5;51;3348736;845467776
frme;5;firme;5;13;858368;845468288
fsga;5;fisga;5;51;3348736;845574272
fsgue;6;fisgue;6;13;858368;845576852
flmea;6;flamea;6;51;3352320;855822980
flmee;6;flamee;6;13;861952;855822996
flcha;6;flecha;6;51;3353088;856306692
flche;6;fleche;6;13;862720;856306708
flta;5;fleta;5;51;3353088;856375424
flte;5;flete;5;13;862720;856375936
fljea;6;flojea;6;51;3352576;857645700
fljee;6;flojee;6;13;862208;857645716
flra;5;flora;5;35;2304000;857677952
floras;6;floras;6;1;65536;857678028
flre;5;flore;5;5;337920;857678464
flrea;6;florea;6;51;3352576;857678468
flree;6;floree;6;13;862208;857678484
flta;5;flota;5;51;3352576;857686144
flte;5;flote;5;13;862208;857686656
flur;5;fluir;5;1;80128;858429696
flya;5;fluya;5;1;76544;858493056
flyan;6;fluyan;6;257;16853760;858493112
flye;5;fluye;5;1;76544;858493568
fguea;6;foguea;6;51;3348480;869225092
fguee;6;foguee;6;13;858112;869225108
flia;5;folia;5;51;3348480;869830784
flie;5;folie;5;13;858112;869831296
flla;5;folla;5;51;3348480;869843072
foll;5;folle;5;8;543232;869843584
fndea;6;fondea;6;51;3348480;870072964
fndee;6;fondee;6;13;858112;870072980
forc;5;force;5;8;543232;870593152
frja;5;forja;5;51;3348480;870621312
frje;5;forje;5;13;858112;870621824
frma;5;forma;5;51;3348480;870633600
frme;5;forme;5;13;858112;870634112
frra;5;forra;5;51;3348480;870654080
frre;5;forre;5;13;858112;870654592
forz;5;forza;5;50;3294976;870686848
fsa;4;fosa;4;51;3348480;870715392
fse;4;fose;4;13;858112;870731776
frgua;6;fragua;6;51;3352320;880966276
frag;6;frage;6;8;547328;880966292
franj;6;franja;6;59;3888896;880993540
frnje;6;franje;6;13;861952;880993556
frsea;6;frasea;6;51;3352320;881013380
frsee;6;frasee;6;13;861952;881013396
frade;6;fraude;6;1;80640;881021460
frce;5;frece;5;5;338432;881472128
freg;5;frega;5;50;3294976;881488000
fregu;6;fregue;6;8;547328;881490580
fre;4;fre;4;256;16777216;881496064
fred;5;fred;5;257;16842752;881496576
frer;5;frer;5;1;65536;881498368
frna;5;frena;5;51;3353088;881516672
frne;5;frene;5;13;862720;881517184
frsa;5;fresa;5;1;76288;881537152
fresas;6;fresas;6;1;65536;881537228
frza;5;freza;5;35;2304512;881565824
frezas;6;frezas;6;1;65536;881565900
fri;4;fria;4;8;538368;881987584
frca;5;frica;5;51;3352832;881995904
friga;6;friega;6;1;80384;882004868
frque;6;frique;6;13;862464;882055828
frsa;5;frisa;5;51;3352832;882061440
frse;5;frise;5;13;862464;882061952
frta;5;frita;5;1;76032;882065536
fritas;6;fritas;6;1;65536;882065612
frta;5;frota;5;51;3352576;882851968
frte;5;frote;5;13;862208;882852480
fruid;5;fruid;5;257;16842752;883593728
frur;5;fruir;5;1;80128;883595520
frnce;6;frunce;6;1;76544;883614100
frunz;6;frunza;6;9;612096;883617028
frta;5;fruta;5;35;2304768;883638400
frutas;6;frutas;6;1;65536;883638476
frte;5;frute;5;5;338688;883638912
fruy;5;fruya;5;9;608000;883658880
fryan;6;fruyan;6;257;16853760;883658936
frye;5;fruye;5;1;76544;883659392
f;2;fu;2;449;29432576;893386752
fucla;6;fucila;6;35;2308352;893818372
fucle;6;fucile;6;5;342272;893818388
fulla;6;fuella;6;1;76288;894092804
fulle;6;fuelle;6;5;338432;894092820
furce;6;fuerce;6;5;338432;894116244
furza;6;fuerza;6;1;76288;894119172
futea;6;fuetea;6;51;3353088;894124676
futee;6;fuetee;6;13;862720;894124692
fga;4;fuga;4;51;3349248;894308352
fgue;5;fugue;5;13;858880;894390912
flge;5;fulge;5;1;72448;894988928
fulgr;6;fulgir;6;1;84224;894989512
flja;5;fulja;5;1;72448;895000704
fljan;6;fuljan;6;257;16849664;895000760
fllea;6;fullea;6;51;3349248;895009412
fllee;6;fullee;6;13;858880;895009428
fma;4;fuma;4;51;3349248;895094784
fme;4;fume;4;13;858880;895111168
fumga;6;fumiga;6;51;3356928;895128452
fnda;5;funda;5;59;3873536;895238272
fndan;6;fundan;6;257;16849664;895238328
fnde;5;funde;5;13;858880;895238784
fundid;6;fundid;6;257;16842752;895239312
fundr;6;fundir;6;1;84224;895239368
fnge;5;funge;5;1;72448;895251072
fungid;6;fungid;6;257;16842752;895251600
fungr;6;fungir;6;1;84224;895251656
funj;5;funja;5;9;608000;895262848
fnjan;6;funjan;6;257;16849664;895262904
fusla;6;fusila;6;51;3356928;895915524
fusle;6;fusile;6;13;866560;895915540
ftre;5;futre;5;1;72448;896082560
gfa;4;gafa;4;51;3348224;944508928
gfe;4;gafe;4;13;857856;944525312
gguea;6;gaguea;6;51;3348224;944722564
gguee;6;gaguee;6;13;857856;944722580
gllea;6;gallea;6;51;3348224;945341060
gllee;6;gallee;6;13;857856;945341076
galpa;6;galopa;6;51;3356672;945354756
galpe;6;galope;6;13;866304;945354772
gmba;5;gamba;5;35;2299648;945430656
gambas;6;gambas;6;1;65536;945430732
gmbe;5;gambe;5;5;333568;945431168
gmbia;6;gambia;6;1;71424;945431684
gna;4;gana;4;51;3348224;945557504
gne;4;gane;4;13;857856;945573888
gnsea;6;gansea;6;51;3348224;945631876
gnsee;6;gansee;6;13;857856;945631892
grbea;6;garbea;6;51;3348224;946086532
grbee;6;garbee;6;13;857856;946086548
grfea;6;garfea;6;51;3348224;946102916
grfee;6;garfee;6;13;857856;946102932
grla;5;garla;5;51;3348224;946126976
grle;5;garle;5;13;857856;946127488
garr;5;garra;5;129;8472320;946151552
garras;6;garras;6;1;65536;946151628
garu;5;garua;5;34;2246400;946163840
gs;3;gas;3;256;16783104;946208768
gsea;5;gasea;5;51;3348224;946229376
gsee;5;gasee;5;13;857856;946229888
gsta;5;gasta;5;51;3348224;946290816
gste;5;gaste;5;13;857856;946291328
gtea;5;gatea;5;51;3348224;946360448
gtee;5;gatee;5;13;857856;946360960
gvia;5;gavia;5;35;2299648;946638976
gavias;6;gavias;6;1;65536;946639052
gvie;5;gavie;5;5;333568;946639488
ga;4;gaa;4;9;603904;947392512
gan;5;gaan;5;257;16848640;947394304
ge;4;gae;4;1;71424;947408896
gaid;5;gaid;5;257;16842752;947425792
gar;5;gair;5;1;80128;947427584
gemid;5;gemid;5;257;16842752;962236928
gemr;5;gemir;5;1;80128;962238720
gen;4;gene;4;16384;1073756672;962351104
genra;6;genera;6;51;3357184;962353412
genre;6;genere;6;13;866816;962353428
gsta;5;gesta;5;51;3348992;963068032
gste;5;geste;5;13;858624;963068544
gstea;6;gestea;6;51;3348992;963068548
gstee;6;gestee;6;13;858624;963068564
gba;4;giba;4;51;3348736;977539072
gbe;4;gibe;4;13;858368;977555456
gim;4;gima;4;9;603904;978980864
gman;5;giman;5;257;16849152;978982656
gme;4;gime;4;1;71936;978997248
gra;4;gira;4;51;3348736;979636224
gre;4;gire;4;13;858368;979652608
glsea;6;glasea;6;51;3352320;990065284
glsee;6;glasee;6;13;861952;990065300
glori;6;gloria;6;50;3299072;991896708
glori;6;glorie;6;8;547328;991896724
glsa;5;glosa;5;51;3352576;991899776
glse;5;glose;5;13;862208;991900288
gce;4;goce;4;13;858112;1002852352
glea;5;golea;5;51;3348480;1004032128
glee;5;golee;5;13;858112;1004032640
glpea;6;golpea;6;51;3348480;1004077700
glpee;6;golpee;6;13;858112;1004077716
gma;4;goma;4;1;71680;1004146688
gomas;5;gomas;5;1;65536;1004149120
grjea;6;gorjea;6;51;3348480;1004839556
grjee;6;gorjee;6;13;858112;1004839572
grrea;6;gorrea;6;51;3348480;1004872324
grree;6;gorree;6;13;858112;1004872340
gtea;5;gotea;5;35;2299904;1005080704
gtee;5;gotee;5;5;333824;1005081216
gza;4;goza;4;51;3348480;1005850624
grba;5;graba;5;51;3352320;1015160960
grbe;5;grabe;5;13;861952;1015161472
grda;5;grada;5;1;75520;1015169152
gradas;6;gradas;6;1;65536;1015169228
gradu;6;gradua;6;50;3299072;1015171716
gradu;6;gradue;6;8;547328;1015171732
grjea;6;grajea;6;35;2303744;1015194244
grjee;6;grajee;6;5;337664;1015194260
grma;5;grama;5;1;75520;1015206016
gramas;6;gramas;6;1;65536;1015206092
grna;5;grana;5;35;2303744;1015210112
granas;6;granas;6;1;65536;1015210188
grne;5;grane;5;5;337664;1015210624
grnea;6;granea;6;51;3352320;1015210628
grnee;6;granee;6;13;861952;1015210644
grpa;5;grapa;5;1;75520;1015218304
grapas;6;grapas;6;1;65536;1015218380
grsa;5;grasa;5;1;75520;1015230592
grasas;6;grasas;6;1;65536;1015230668
grta;5;grata;5;1;75520;1015234688
gratas;6;gratas;6;1;65536;1015234764
grva;5;grava;5;51;3352320;1015242880
grve;5;grave;5;13;861952;1015243392
grzna;6;grazna;6;51;3352320;1015260932
grzne;6;grazne;6;13;861952;1015260948
grca;5;greca;5;1;76288;1015689344
grecas;6;grecas;6;1;65536;1015689420
grita;6;grieta;6;35;2308608;1016224260
grite;6;griete;6;5;342528;1016224276
grfa;5;grifa;5;1;76032;1016225920
grifas;6;grifas;6;1;65536;1016225996
grlla;6;grilla;6;1;76032;1016251908
grpa;5;gripa;5;1;76032;1016266880
gripas;6;gripas;6;1;65536;1016266956
grpe;5;gripe;5;1;76032;1016267392
grsea;6;grsea;6;1;65536;1016279684
grta;5;grita;5;51;3352832;1016283264
grte;5;grite;5;13;862464;1016283776
gruj;5;gruja;5;9;608000;1017815168
grjan;6;grujan;6;257;16853760;1017815224
grje;5;gruje;5;1;76544;1017815680
grujid;6;grujid;6;257;16842752;1017816208
grujr;6;grujir;6;1;84224;1017816264
gru;5;grua;5;9;608000;1017888896
gran;6;gruan;6;257;16853760;1017888952
gre;5;grue;5;1;76544;1017889408
gruid;6;gruid;6;257;16842752;1017889936
grur;6;gruir;6;1;84224;1017889992
gucha;6;guacha;6;1;75520;1027748868
guche;6;guache;6;1;75520;1027748884
gupea;6;guapea;6;51;3352320;1027801732
gupee;6;guapee;6;13;861952;1027801748
gurda;6;guarda;6;51;3352320;1027809796
gurde;6;guarde;6;13;861952;1027809812
guya;5;guaya;5;51;3352320;1027838080
guye;5;guaye;5;13;861952;1027838592
gui;4;guia;4;50;3290880;1028788224
gui;4;guie;4;8;539136;1028804608
gulla;6;guilla;6;51;3352832;1028834820
gulle;6;guille;6;13;862464;1028834836
gunda;6;guinda;6;51;3352832;1028841988
gunde;6;guinde;6;13;862464;1028842004
gusa;5;guisa;5;51;3352832;1028862080
guse;5;guise;5;13;862464;1028862592
guta;5;guita;5;1;76032;1028866176
guitas;6;guitas;6;1;65536;1028866252
gua;5;guia;5;51;3352832;1028898944
gue;5;guie;5;13;862464;1028899456
gsta;5;gusta;5;51;3349248;1030176896
gste;5;guste;5;13;858880;1030177408
habr;5;haber;5;1;80384;1078221056
habta;6;habita;6;51;3356928;1078237700
habte;6;habite;6;13;866560;1078237716
hbla;5;habla;5;51;3348224;1078247552
hble;5;hable;5;13;857856;1078248064
hce;4;hace;4;1;71424;1078349824
haced;5;haced;5;257;16842752;1078350336
hacr;5;hacer;5;1;80384;1078352128
hcha;5;hacha;5;51;3348224;1078362240
hche;5;hache;5;13;857856;1078362752
hchea;6;hachea;6;51;3348224;1078362756
hchee;6;hachee;6;13;857856;1078362772
hacna;6;hacina;6;51;3356928;1078368004
hacne;6;hacine;6;13;866560;1078368020
hda;4;hada;4;1;71424;1078464512
hadas;5;hadas;5;1;65536;1078466944
hag;4;haga;4;9;603904;1078857728
hgan;5;hagan;5;257;16848640;1078859520
hla;4;hala;4;51;3348224;1079513088
halga;6;halaga;6;51;3356416;1079513988
hle;4;hale;4;13;857856;1079529472
hlla;5;halla;5;51;3348224;1079558272
hlle;5;halle;5;13;857856;1079558784
hamca;6;hamaca;6;51;3356416;1079644548
hrta;5;harta;5;51;3348224;1080377472
hrte;5;harte;5;13;857856;1080377984
hasti;6;hastia;6;50;3299072;1080509572
hasti;6;hastie;6;8;547328;1080509588
htea;5;hatea;5;51;3348224;1080578176
htee;5;hatee;5;13;857856;1080578688
hay;4;haya;4;9;603904;1081217024
hyan;5;hayan;5;257;16848640;1081218816
haz;3;haz;3;1;65536;1081344000
haza;6;hazaa;6;1;79616;1081351684
h;2;he;2;257;16849408;1094713344
hed;4;heda;4;8;538368;1095241728
heded;5;heded;5;257;16842752;1095258624
hedr;5;heder;5;1;80384;1095260416
hel;4;hela;4;50;3290880;1096290304
hel;4;hele;4;8;539136;1096306688
hend;5;henda;5;8;542464;1096564864
hended;6;hended;6;257;16842752;1096565392
hendr;6;hender;6;1;84480;1096565448
hendid;6;hendid;6;257;16842752;1096565904
hendr;6;hendir;6;1;84224;1096565960
herda;6;hereda;6;51;3357184;1097093636
herde;6;herede;6;13;866816;1097093652
herid;5;herid;5;257;16842752;1097110016
herr;5;herir;5;1;80128;1097111808
hrnia;6;hernia;6;1;72192;1097131140
herr;5;herra;5;50;3294976;1097146496
herr;5;herre;5;8;543232;1097147008
hervid;6;hervid;6;257;16842752;1097163920
hervr;6;hervir;6;1;84224;1097163976
hesta;6;hesita;6;51;3356928;1097243140
heste;6;hesite;6;13;866560;1097243156
heid;5;heid;5;257;16842752;1098420736
her;5;heir;5;1;80128;1098422528
hidr;5;hidra;5;256;16795392;1112088704
hida;5;hieda;5;1;76288;1112162432
hidan;6;hiedan;6;257;16853504;1112162488
hide;5;hiede;5;1;76288;1112162944
hila;5;hiela;5;1;76288;1112195200
hile;5;hiele;5;5;338432;1112195712
hinda;6;hienda;6;1;76288;1112203780
hinde;6;hiende;6;1;76288;1112203796
hira;5;hiera;5;1;76288;1112219776
hiran;6;hieran;6;257;16853504;1112219832
hire;5;hiere;5;1;76288;1112220288
hirra;6;hierra;6;1;76288;1112221956
hirre;6;hierre;6;5;338432;1112221972
hirva;6;hierva;6;1;76288;1112222468
hirve;6;hierve;6;1;76288;1112222484
hla;4;hila;4;51;3348736;1113067520
hle;4;hile;4;13;858368;1113083904
hnca;5;hinca;5;51;3348736;1113337984
hinch;6;hincha;6;59;3888896;1113338884
hnche;6;hinche;6;13;858368;1113338900
hnque;6;hinque;6;13;858368;1113397908
hpa;4;hipa;4;51;3348736;1113591808
hpe;4;hipe;4;13;858368;1113608192
hir;4;hira;4;8;538368;1113853952
hirv;5;hirva;5;8;542464;1113940096
hta;4;hita;4;1;71936;1114116096
hitas;5;hitas;5;1;65536;1114118528
hi;4;hia;4;9;603904;1115164672
han;5;hian;5;257;16849152;1115166464
he;4;hie;4;1;71936;1115181056
hce;4;hoce;4;13;858112;1137070080
hocca;6;hocica;6;51;3356928;1137086852
hjea;5;hojea;5;51;3348480;1137987712
hjee;5;hojee;5;13;858112;1137988224
holg;5;holga;5;50;3294976;1138258048
holgu;6;holgue;6;8;547328;1138260628
holl;5;holla;5;50;3294976;1138278528
holl;5;holle;5;8;543232;1138279040
hnda;5;honda;5;1;71680;1138507904
hondas;6;hondas;6;1;65536;1138507980
hndea;6;hondea;6;51;3348480;1138508420
hndee;6;hondee;6;13;858112;1138508436
honra;6;honora;6;51;3356672;1138555140
honre;6;honore;6;13;866304;1138555156
hnra;5;honra;5;51;3348480;1138565248
hnre;5;honre;5;13;858112;1138565760
hpea;5;hopea;5;51;3348480;1138774144
hpee;5;hopee;5;13;858112;1138774656
horda;6;horada;6;51;3356416;1139020292
horde;6;horade;6;13;866048;1139020308
hrca;5;horca;5;51;3348480;1139028096
hrnea;6;hornea;6;51;3348480;1139073668
hrnee;6;hornee;6;13;858112;1139073684
hrque;6;horque;6;13;858112;1139088020
hrra;5;horra;5;1;71680;1139089536
horras;6;horras;6;1;65536;1139089612
hya;4;hoya;4;51;3348480;1139937280
hye;4;hoye;4;13;858112;1139953664
hza;4;hoza;4;51;3348480;1140068352
hula;5;huela;5;1;76288;1162526848
hulan;6;huelan;6;257;16853504;1162526904
hule;5;huele;5;1;76288;1162527360
hulga;6;huelga;6;1;76288;1162527620
hulla;6;huella;6;1;76288;1162528260
huva;5;hueva;5;1;76288;1162567808
huevas;6;huevas;6;1;65536;1162567884
huid;4;huid;4;257;16842752;1163018240
hur;4;huir;4;1;76032;1163075584
humna;6;humana;6;51;3356416;1163532036
humne;6;humane;6;13;866048;1163532052
hmea;5;humea;5;51;3349248;1163546752
humeda;6;humeda;6;16;1048576;1163547140
hmee;5;humee;5;13;858880;1163547264
hund;5;hunda;5;9;608000;1163673728
hndan;6;hundan;6;257;16849664;1163673784
hnde;5;hunde;5;1;72448;1163674240
hundid;6;hundid;6;257;16842752;1163674768
hundr;6;hundir;6;1;84224;1163674824
hrga;5;hurga;5;51;3349248;1164210304
hrgue;6;hurgue;6;13;858880;1164212884
hrta;5;hurta;5;51;3349248;1164263552
hrte;5;hurte;5;13;858880;1164264064
hsma;5;husma;5;1;72448;1164365952
hsmea;6;husmea;6;51;3349248;1164366468
hsmee;6;husmee;6;13;858880;1164366484
huy;4;huya;4;9;603904;1165103104
hyan;5;huyan;5;257;16849664;1165104896
hye;4;huye;4;1;72448;1165119488
ce;3;ice;3;13;854272;1221197824
dea;4;idea;4;51;3344640;1225396224
dee;4;idee;4;13;854272;1225412608
ignra;6;ignora;6;51;3356672;1239218436
ignre;6;ignore;6;13;866304;1239218452
igula;6;iguala;6;51;3356416;1240077828
igule;6;iguale;6;13;866048;1240077844
imn;4;imn;4;256;16777216;1262673920
imnta;6;imanta;6;51;3352320;1262676484
imnte;6;imante;6;13;861952;1262676500
imbuid;6;imbuid;6;257;16842752;1262834832
imbur;6;imbuir;6;1;84224;1262834888
imbuy;6;imbuya;6;9;612096;1262836868
imbye;6;imbuye;6;1;80640;1262836884
imta;5;imita;5;51;3352832;1263747200
imte;5;imite;5;13;862464;1263747712
imp;3;imp;3;1;65536;1264582656
impr;5;impar;5;256;16791296;1264589056
impel;6;impela;6;9;612096;1264604676
imple;6;impele;6;1;80384;1264604692
impra;6;impera;6;51;3357184;1264605444
impre;6;impere;6;13;866816;1264605460
impid;6;impida;6;9;612096;1264620036
impde;6;impide;6;1;80128;1264620052
impne;6;impone;6;1;79872;1264645908
impta;6;imputa;6;51;3357440;1264671236
impte;6;impute;6;13;867072;1264671252
incid;6;incida;6;9;612096;1267110404
incde;6;incide;6;1;80128;1267110420
incta;6;incita;6;51;3356928;1267112452
incte;6;incite;6;13;866560;1267112468
ncoa;5;incoa;5;51;3344640;1267134592
ncoe;5;incoe;5;13;854272;1267135104
incba;6;incuba;6;51;3357440;1267159300
incbe;6;incube;6;13;867072;1267159316
indga;6;indaga;6;51;3356416;1267209092
indca;6;indica;6;51;3356928;1267241348
indna;6;indina;6;1;80128;1267242756
indce;6;induce;6;1;80640;1267290516
infma;6;infama;6;51;3356416;1267472004
infme;6;infame;6;13;866048;1267472020
infir;6;infira;6;8;546560;1267505412
infl;5;infla;5;179;11749120;1267515520
nfle;5;infle;5;13;854272;1267516032
ingir;6;ingira;6;8;546560;1267636484
inhla;6;inhala;6;51;3356416;1267734020
inhle;6;inhale;6;13;866048;1267734036
inhib;6;inhiba;6;9;612096;1267765508
inhbe;6;inhibe;6;1;80128;1267765524
inhma;6;inhuma;6;51;3357440;1267816068
inhme;6;inhume;6;13;867072;1267816084
incia;6;inicia;6;51;3352832;1267872900
incie;6;inicie;6;13;862464;1267872916
injir;6;injira;6;8;546560;1268029700
inmla;6;inmola;6;51;3356672;1268446724
inmle;6;inmole;6;13;866304;1268446740
inmta;6;inmuta;6;51;3357440;1268472324
inmte;6;inmute;6;13;867072;1268472340
innva;6;innova;6;51;3356672;1268579076
innve;6;innove;6;13;866304;1268579092
ns;3;ins;3;256;16779520;1269170176
insla;6;insola;6;51;3356672;1269233156
insle;6;insole;6;13;866304;1269233172
nsta;5;insta;5;51;3344640;1269252224
nste;5;inste;5;13;854272;1269252736
intma;6;intima;6;51;3356928;1269339780
intme;6;intime;6;13;866560;1269339796
intuid;6;intuid;6;257;16842752;1269388432
intur;6;intuir;6;1;84224;1269388488
innda;6;inunda;6;51;3353344;1269490180
innde;6;inunde;6;13;862976;1269490196
invad;6;invada;6;9;612096;1269568004
invde;6;invade;6;1;79616;1269568020
invta;6;invita;6;51;3356928;1269602820
invte;6;invite;6;13;866560;1269602836
invca;6;invoca;6;51;3356672;1269625220
ionce;6;ionice;6;13;866560;1272746388
ionza;6;ioniza;6;51;3356928;1272749316
r;2;ir;2;1;67840;1283457024
irg;4;irga;4;8;538368;1284378624
rgue;5;irgue;5;1;67840;1284461184
irs;4;iris;4;9216;603990272;1284714496
irsa;5;irisa;5;51;3352832;1284714624
irse;5;irise;5;13;862464;1284715136
irrga;6;irriga;6;51;3356928;1285854084
irrta;6;irrita;6;51;3356928;1285855748
irrte;6;irrite;6;13;866560;1285855764
irrga;6;irroga;6;51;3356672;1285878660
itra;5;itera;5;51;3353088;1292574848
itre;5;itere;5;13;862720;1292575360
za;3;iza;3;51;3344640;1317142528
j;2;ja;2;193;12654336;1346371584
jabna;6;jabona;6;51;3356672;1346696964
jabne;6;jabone;6;13;866304;1346696980
jcta;5;jacta;5;51;3348224;1346846848
jcte;5;jacte;5;13;857856;1346847360
jdea;5;jadea;5;51;3348224;1346916480
jdee;5;jadee;5;13;857856;1346916992
jadi;5;jadia;5;50;3294976;1346932864
jadi;5;jadie;5;8;543232;1346933376
jaces;6;jaeces;6;12288;805317120;1347039948
jagu;5;jagua;5;32;2115328;1347375232
ja;3;jai;3;16384;1073752320;1347551232
jla;4;jala;4;51;3348224;1347948544
jle;4;jale;4;13;857856;1347964928
jlea;5;jalea;5;51;3348224;1347965056
jlee;5;jalee;5;13;857856;1347965568
jleos;6;jaleos;6;1;71424;1347966924
jalna;6;jalona;6;51;3356672;1348007684
jalne;6;jalone;6;13;866304;1348007700
jma;4;jama;4;51;3348224;1348079616
jmba;5;jamba;5;1;71424;1348083840
jambas;6;jambas;6;1;65536;1348083916
jme;4;jame;4;13;857856;1348096000
jquea;6;jaquea;6;51;3348224;1348686468
jquee;6;jaquee;6;13;857856;1348686484
jar;4;jara;4;257;16856832;1348734976
jrcia;6;jarcia;6;51;3348224;1348744324
jrcie;6;jarcie;6;13;857856;1348744340
jarpe;6;jarope;6;1;79872;1348794388
jrra;5;jarra;5;1;71424;1348804736
jarras;6;jarras;6;1;65536;1348804812
jrrea;6;jarrea;6;51;3348224;1348805252
jrree;6;jarree;6;13;857856;1348805268
jspea;6;jaspea;6;51;3348224;1348928132
jspee;6;jaspee;6;13;857856;1348928148
j;2;je;2;257;16849408;1363148800
jta;4;jeta;4;1;72192;1365774336
jetas;5;jetas;5;1;65536;1365776768
j;2;ji;2;257;16849152;1379926016
jngla;6;jingla;6;51;3348736;1381791236
jngle;6;jingle;6;13;858368;1381791252
jpa;4;jipa;4;51;3348736;1382027264
jpe;4;jipe;4;13;858368;1382043648
ja;4;jia;4;1;71936;1383600128
jias;5;jias;5;1;65536;1383602560
j;2;jo;2;129;8460288;1405091840
jod;4;joda;4;9;603904;1405620224
jdan;5;jodan;5;257;16848896;1405622016
jde;4;jode;4;1;71680;1405636608
joded;5;joded;5;257;16842752;1405637120
jodr;5;joder;5;1;80384;1405638912
jpeos;6;jopeos;6;1;71680;1407211468
jorba;6;joroba;6;51;3356672;1407512836
jorbe;6;jorobe;6;13;866304;1407512852
jrra;5;jorra;5;51;3348480;1407524992
jrre;5;jorre;5;13;858112;1407525504
jubla;6;jubila;6;51;3356928;1430558212
juble;6;jubile;6;13;866560;1430558228
juga;5;juega;5;1;76288;1430941824
jugue;6;juegue;6;5;338432;1430944404
jug;4;juga;4;50;3290880;1431179264
jugu;5;jugue;5;8;543232;1431261824
jma;4;juma;4;51;3349248;1431965696
jme;4;jume;4;13;858880;1431982080
jnta;5;junta;5;51;3349248;1432174720
jnte;5;junte;5;13;858880;1432175232
jra;4;jura;4;51;3349248;1432621056
jre;4;jure;4;13;858880;1432637440
jsta;5;justa;5;1;72448;1432830080
justas;6;justas;6;1;65536;1432830156
jzga;5;juzga;5;51;3349248;1433694336
jzgue;6;juzgue;6;13;858880;1433696916
l;2;la;2;384;25171712;1614807040
labra;6;labora;6;51;3356672;1615132932
labre;6;labore;6;13;866304;1615132948
lbra;5;labra;5;51;3348224;1615143040
lbre;5;labre;5;13;857856;1615143552
lac;4;lac;4;16397;1074593792;1615220736
lcea;5;lacea;5;51;3348224;1615220864
lcee;5;lacee;5;13;857856;1615221376
lacra;6;lacera;6;51;3357184;1615223044
lacre;6;lacere;6;13;866816;1615223060
lcra;5;lacra;5;51;3348224;1615274112
lcre;5;lacre;5;13;857856;1615274624
lcta;5;lacta;5;51;3348224;1615282304
lcte;5;lacte;5;13;857856;1615282816
ldea;5;ladea;5;51;3348224;1615351936
ldee;5;ladee;5;13;857856;1615352448
ldra;5;ladra;5;51;3348224;1615405184
ldre;5;ladre;5;13;857856;1615405696
lam;4;lama;4;9;603904;1616515072
lman;5;laman;5;257;16848640;1616516864
lamb;5;lamba;5;9;608000;1616519296
lmban;6;lamban;6;257;16848640;1616519352
lmbe;5;lambe;5;1;71424;1616519808
lambed;6;lambed;6;257;16842752;1616519824
lambr;6;lamber;6;1;84480;1616519880
lam;4;lame;4;5;342528;1616531456
lamed;5;lamed;5;257;16842752;1616531968
lamn;5;lamen;5;256;16792064;1616533248
lamr;5;lamer;5;1;80384;1616533760
lamna;6;lamina;6;51;3356928;1616549636
lamne;6;lamine;6;13;866560;1616549652
lmpea;6;lampea;6;51;3348224;1616577156
lmpee;6;lampee;6;13;857856;1616577172
lnce;5;lance;5;13;857856;1616654976
lncea;6;lancea;6;51;3348224;1616654980
lncee;6;lancee;6;13;857856;1616654996
lncha;6;lancha;6;33;2168576;1616655364
lnza;5;lanza;5;51;3348224;1616748672
lapda;6;lapida;6;51;3356928;1616941572
lapde;6;lapide;6;13;866560;1616941588
lquea;6;laquea;6;51;3348224;1617121924
lquee;6;laquee;6;13;857856;1617121940
lrda;5;larda;5;51;3348224;1617182848
lrde;5;larde;5;13;857856;1617183360
lrdea;6;lardea;6;51;3348224;1617183364
lrdee;6;lardee;6;13;857856;1617183380
lrga;5;larga;5;51;3348224;1617195136
lrgue;6;largue;6;13;857856;1617197716
ls;3;las;3;257;16848640;1617297408
lsca;5;lasca;5;51;3348224;1617309824
lsque;6;lasque;6;13;857856;1617369748
lstra;6;lastra;6;51;3348224;1617381636
lstre;6;lastre;6;13;857856;1617381652
lat;4;lata;4;9;603904;1617432576
ltan;5;latan;5;257;16848640;1617434368
lte;4;late;4;1;71424;1617448960
ltea;5;latea;5;51;3348224;1617449088
ltee;5;latee;5;13;857856;1617449600
lat;4;lat;4;256;16777216;1617465344
latid;5;latid;5;257;16842752;1617465856
latna;6;latina;6;1;80128;1617467140
latr;5;latir;5;1;80128;1617467648
lada;5;lauda;5;51;3353344;1617576064
lade;5;laude;5;13;862976;1617576576
larea;6;laurea;6;51;3353344;1617633924
laree;6;lauree;6;13;862976;1617633940
lva;4;lava;4;51;3348224;1617694720
lve;4;lave;4;13;857856;1617711104
lxa;4;laxa;4;51;3348224;1617956864
lxe;4;laxe;4;13;857856;1617973248
lya;4;laya;4;51;3348224;1618087936
lye;4;laye;4;13;857856;1618104320
lza;4;laza;4;51;3348224;1618219008
la;4;laa;4;51;3348224;1618481152
le;4;lae;4;13;857856;1618497536
le;3;lea;3;8;534272;1631715328
lcha;5;lecha;5;51;3348992;1632010368
lche;5;leche;5;13;858624;1632010880
leed;4;leed;4;257;16842752;1632256000
ler;4;leer;4;1;76288;1632313344
lga;4;lega;4;51;3348992;1632505856
lgra;5;legra;5;51;3348992;1632575616
lgre;5;legre;5;13;858624;1632576128
lgue;5;legue;5;13;858624;1632588416
lpe;4;lepe;4;1;72192;1633701888
lrdea;6;lerdea;6;51;3348992;1633960580
lrdee;6;lerdee;6;13;858624;1633960596
leda;5;leuda;5;51;3353344;1634353280
lede;5;leude;5;13;862976;1634353792
lva;4;leva;4;51;3348992;1634471936
levn;5;levan;5;256;16791296;1634473728
lve;4;leve;4;13;858624;1634488320
levta;6;levita;6;1;80128;1634507268
la;4;lea;4;1;72192;1635258368
leas;5;leas;5;1;65536;1635260800
li;3;lia;3;50;3286784;1648492544
lba;4;liba;4;51;3348736;1648627712
lbe;4;libe;4;16397;1074600192;1648644096
libra;6;libera;6;51;3357184;1648646404
libre;6;libere;6;13;866816;1648646420
lbra;5;libra;5;51;3348736;1648697472
lbre;5;libre;5;13;858368;1648697984
lbrea;6;librea;6;1;71936;1648697988
licta;6;licita;6;51;3356928;1648794116
licte;6;licite;6;13;866560;1648794132
licu;5;licua;5;50;3294976;1648840832
licu;5;licue;5;8;543232;1648841344
ldia;5;lidia;5;51;3348736;1648922752
ldie;5;lidie;5;13;858368;1648923264
li;3;lie;3;8;535040;1649016832
lga;4;liga;4;51;3348736;1649283072
lgue;5;ligue;5;13;858368;1649365632
lja;4;lija;4;51;3348736;1649676288
lje;4;lije;4;13;858368;1649692672
lma;4;lima;4;51;3348736;1650069504
lme;4;lime;4;13;858368;1650085888
limta;6;limita;6;51;3356928;1650104836
limte;6;limite;6;13;866560;1650104852
lmpia;6;limpia;6;51;3348736;1650132100
lmpie;6;limpie;6;13;858368;1650132116
lncea;6;lincea;6;51;3348736;1650209412
lncee;6;lincee;6;13;858368;1650209428
lncha;6;lincha;6;51;3348736;1650209796
lnche;6;linche;6;13;858368;1650209812
lnda;5;linda;5;35;2300160;1650212992
lindas;6;lindas;6;1;65536;1650213068
lnde;5;linde;5;5;334080;1650213504
ls;3;lis;3;9473;620828928;1650851840
lsa;4;lisa;4;1;71936;1650855936
lisas;5;lisas;5;1;65536;1650858368
lsia;5;lisia;5;51;3348736;1650888832
lsie;5;lisie;5;13;858368;1650889344
lsta;5;lista;5;51;3348736;1650933888
lste;5;liste;5;13;858368;1650934400
litga;6;litiga;6;51;3356928;1651020676
lida;5;liuda;5;51;3353344;1651130496
lide;5;liude;5;13;862976;1651131008
llga;5;llaga;5;51;3352320;1661104256
llgue;6;llague;6;13;861952;1661106836
llma;5;llama;5;51;3352320;1661128832
llme;5;llame;5;13;861952;1661129344
llmea;6;llamea;6;51;3352320;1661129348
llmee;6;llamee;6;13;861952;1661129364
llnta;6;llanta;6;1;75520;1661135364
llpa;5;llapa;5;1;75520;1661141120
llapas;6;llapas;6;1;65536;1661141196
llga;5;llega;5;51;3353088;1661628544
llgue;6;llegue;6;13;862720;1661631124
llna;5;llena;5;51;3353088;1661657216
llne;5;llene;5;13;862720;1661657728
llva;5;lleva;5;51;3353088;1661689984
llve;5;lleve;5;13;862720;1661690496
llra;5;llora;5;51;3352576;1662984320
llre;5;llore;5;13;862208;1662984832
llovr;6;llover;6;1;84480;1663001288
lluva;6;llueva;6;1;80384;1663720196
lluve;6;llueve;6;1;80384;1663720212
l;2;lo;2;193;12654592;1673527296
lo;3;loa;3;50;3286784;1673658368
lbea;5;lobea;5;51;3348480;1673810048
lbee;5;lobee;5;13;858112;1673810560
lo;3;loe;3;8;535040;1674182656
lgra;5;logra;5;51;3348480;1674518656
lgre;5;logre;5;13;858112;1674519168
lma;4;loma;4;1;71680;1675235328
lomas;5;lomas;5;1;65536;1675237760
lmea;5;lomea;5;51;3348480;1675251840
lmee;5;lomee;5;13;858112;1675252352
lncha;6;loncha;6;1;71680;1675375620
lnche;6;lonche;6;1;71680;1675375636
lquea;6;loquea;6;51;3348480;1675842180
lquee;6;loquee;6;13;858112;1675842196
lsa;4;losa;4;51;3348480;1676021760
lse;4;lose;4;13;858112;1676038144
ltea;5;lotea;5;51;3348480;1676169344
ltee;5;lotee;5;13;858112;1676169856
lce;4;luce;4;1;72448;1699106816
lcha;5;lucha;5;51;3349248;1699119232
lche;5;luche;5;13;858880;1699119744
lcia;5;lucia;5;1;72448;1699123328
lucias;6;lucias;6;1;65536;1699123404
lucid;5;lucid;5;257;16842752;1699123712
lucr;5;lucir;5;1;80128;1699125504
lcra;5;lucra;5;51;3349248;1699160192
lcre;5;lucre;5;13;858880;1699160704
lud;4;luda;4;9;603904;1699221504
ldan;5;ludan;5;257;16849664;1699223296
lde;4;lude;4;1;72448;1699237888
ludid;5;ludid;5;257;16842752;1699254784
ludr;5;ludir;5;1;80128;1699256576
luid;4;luid;4;257;16842752;1699889152
lur;4;luir;4;1;76032;1699946496
lstra;6;lustra;6;51;3349248;1701267716
lstre;6;lustre;6;13;858880;1701267732
lxa;4;luxa;4;51;3349248;1701842944
lxe;4;luxe;4;13;858880;1701859328
luy;4;luya;4;9;603904;1701974016
lyan;5;luyan;5;257;16849664;1701975808
lye;4;luye;4;1;72448;1701990400
luzc;5;luzca;5;9;608000;1702113408
lzcan;6;luzcan;6;257;16849664;1702113464
mca;4;maca;4;35;2299648;1749422080
macas;5;macas;5;1;65536;1749424512
mac;4;mac;4;16397;1074593792;1749438464
mcea;5;macea;5;51;3348224;1749438592
mcee;5;macee;5;13;857856;1749439104
macra;6;macera;6;51;3357184;1749440772
macre;6;macere;6;13;866816;1749440788
mcha;5;macha;5;1;71424;1749450880
machas;6;machas;6;1;65536;1749450956
mches;6;maches;6;12288;805312256;1749451468
macce;6;macice;6;13;866560;1749455252
macza;6;maciza;6;51;3356928;1749458180
madra;6;madera;6;1;80384;1749571844
madra;6;madura;6;51;3357440;1749637380
madre;6;madure;6;13;867072;1749637396
mags;5;magos;5;257;16857088;1750006144
mja;4;maja;4;51;3348224;1750339584
mje;4;maje;4;13;857856;1750355968
ml;3;mal;3;257;16848640;1750597632
mlea;5;malea;5;51;3348224;1750618240
mlee;5;malee;5;13;857856;1750618752
mlla;5;malla;5;51;3348224;1750646912
mlle;5;malle;5;13;857856;1750647424
mlta;5;malta;5;1;71424;1750679680
mltea;6;maltea;6;51;3348224;1750680196
mltee;6;maltee;6;13;857856;1750680212
mlva;5;malva;5;1;71424;1750687872
malvas;6;malvas;6;1;65536;1750687948
mma;4;mama;4;51;3348224;1750732800
mme;4;mame;4;13;857856;1750749184
mamja;6;mamuja;6;51;3357440;1750816004
mamje;6;mamuje;6;13;867072;1750816020
mna;4;mana;4;59;3872512;1750863872
mnan;5;manan;5;257;16848640;1750865664
mnca;5;manca;5;51;3348224;1750872192
mncha;6;mancha;6;51;3348224;1750873092
mnche;6;manche;6;13;857856;1750873108
mnda;5;manda;5;307;20125440;1750876288
mnde;5;mande;5;13;857856;1750876800
mne;4;mane;4;13;857856;1750880256
mnea;5;manea;5;51;3348224;1750880384
mnee;5;manee;5;13;857856;1750880896
manja;6;maneja;6;51;3357184;1750881540
manje;6;maneje;6;13;866816;1750881556
mnga;5;manga;5;51;3348224;1750888576
mngue;6;mangue;6;13;857856;1750891156
manid;5;manid;5;257;16842752;1750897152
manr;5;manir;5;1;80128;1750898944
mnque;6;manque;6;13;857856;1750932116
mntea;6;mantea;6;51;3348224;1750942340
mntee;6;mantee;6;13;857856;1750942356
mque;5;maque;5;5;333568;1751339648
mquea;6;maquea;6;51;3348224;1751339652
mquee;6;maquee;6;13;857856;1751339668
mr;3;mar;3;16384;1073747712;1751384064
mara;6;maraa;6;1;79616;1751391748
mrca;5;marca;5;51;3348224;1751396480
march;6;marcha;6;179;11753216;1751397380
mrche;6;marche;6;13;857856;1751397396
mrea;5;marea;5;51;3348224;1751404672
mree;5;maree;5;13;857856;1751405184
mrga;5;marga;5;1;71424;1751412864
margas;6;margas;6;1;65536;1751412940
marda;6;marida;6;51;3356928;1751421444
marde;6;maride;6;13;866560;1751421460
marna;6;marina;6;51;3356928;1751422724
marne;6;marine;6;13;866560;1751422740
mrque;6;marque;6;13;857856;1751456404
mrra;5;marra;5;51;3348224;1751457920
mrre;5;marre;5;13;857856;1751458432
msca;5;masca;5;16435;1077090048;1751527552
msque;6;masque;6;13;857856;1751587476
mta;4;mata;4;51;3348224;1751650304
mte;4;mate;4;13;857856;1751666688
mtea;5;matea;5;51;3348224;1751666816
mtee;5;matee;5;13;857856;1751667328
matce;6;matice;6;13;866560;1751683476
matza;6;matiza;6;51;3356928;1751686404
maula;5;maula;5;1;65536;1751826560
maulas;6;maulas;6;1;65536;1751826636
malea;6;maulea;6;51;3353344;1751827076
malee;6;maulee;6;13;862976;1751827092
maull;6;maulla;6;50;3299072;1751827972
maull;6;maulle;6;8;547328;1751827988
mya;4;maya;4;1;71424;1752305664
mayas;5;mayas;5;1;65536;1752308096
mza;4;maza;4;51;3348224;1752436736
mzna;5;mazna;5;51;3348224;1752490112
mzne;5;mazne;5;13;857856;1752490624
m;2;me;2;16704;1094720000;1765801984
me;3;mea;3;50;3286784;1765933056
mce;4;mece;4;1;72192;1766215680
meced;5;meced;5;257;16842752;1766216192
mecr;5;mecer;5;1;80384;1766217984
mcha;5;mecha;5;51;3348992;1766228096
mche;5;meche;5;13;858624;1766228608
med;4;med;4;256;16777216;1766363136
mdia;5;media;5;51;3348992;1766363264
medca;6;medica;6;51;3356928;1766363524
medid;5;medid;5;257;16842752;1766363648
mdie;5;medie;5;13;858624;1766363776
medr;5;medir;5;1;80128;1766365440
medta;6;medita;6;51;3356928;1766365700
medte;6;medite;6;13;866560;1766365716
mdra;5;medra;5;51;3348992;1766400128
mdre;5;medre;5;13;858624;1766400640
me;3;mee;3;8;535040;1766457344
mejra;6;mejora;6;51;3356672;1767176452
mejre;6;mejore;6;13;866304;1767176468
mlla;5;mella;5;51;3348992;1767424128
mlle;5;melle;5;13;858624;1767424640
mem;4;memo;4;16384;1073756160;1767567360
memra;6;memora;6;51;3356672;1767569668
memre;6;memore;6;13;866304;1767569684
mna;4;mena;4;1;72192;1767641088
menas;5;menas;5;1;65536;1767643520
mnea;5;menea;5;51;3348992;1767657600
mnee;5;menee;5;13;858624;1767658112
mneos;6;meneos;6;1;72192;1767659468
mngua;6;mengua;6;51;3348992;1767668356
meng;6;menge;6;8;547328;1767668372
ment;5;menta;5;50;3294976;1767719040
ment;5;mente;5;8;543232;1767719552
mentid;6;mentid;6;257;16842752;1767720080
mentr;6;mentir;6;1;84224;1767720136
mra;4;mera;4;51;3348992;1768165376
mrca;5;merca;5;51;3348992;1768173696
mre;4;mere;4;13;858624;1768181760
merce;6;merece;6;1;80384;1768182164
mrma;5;merma;5;51;3348992;1768214656
mrme;5;merme;5;13;858624;1768215168
mrque;6;merque;6;13;858624;1768233620
msa;4;mesa;4;51;3348992;1768296448
mse;4;mese;4;13;858624;1768312832
mesra;6;mesura;6;51;3357440;1768380676
mesre;6;mesure;6;13;867072;1768380692
met;4;meta;4;9;603904;1768427520
mtan;5;metan;5;257;16849408;1768429312
mte;4;mete;4;1;72192;1768443904
meted;5;meted;5;257;16842752;1768444416
metr;5;meter;5;1;80384;1768446208
mez;4;meza;4;9;603904;1769213952
mzan;5;mezan;5;257;16849408;1769215744
mzcla;6;mezcla;6;51;3348992;1769223684
mzcle;6;mezcle;6;13;858624;1769223700
m;2;m;2;16577;1086390272;1782579200
mid;4;mida;4;9;603904;1783107584
mdan;5;midan;5;257;16849152;1783109376
mde;4;mide;4;1;71936;1783123968
minta;6;mienta;6;1;76288;1783294468
minte;6;miente;6;5;338432;1783294484
mga;4;miga;4;51;3348736;1783500800
mgue;5;migue;5;13;858368;1783583360
mil;4;mili;4;256;16791808;1784188928
milta;6;milita;6;51;3356928;1784191492
milte;6;milite;6;13;866560;1784191508
mlpea;6;milpea;6;51;3348736;1784218244
mlpee;6;milpee;6;13;858368;1784218260
mma;4;mima;4;51;3348736;1784287232
mmbre;6;mimbre;6;1;71936;1784293652
mme;4;mime;4;13;858368;1784303616
mna;4;mina;4;51;3348736;1784418304
mne;4;mine;4;13;858368;1784434688
mnga;5;minga;5;1;71936;1784443008
mingas;6;mingas;6;1;65536;1784443084
mint;5;minta;5;8;542464;1784496256
minta;6;minuta;6;1;80640;1784502788
mra;4;mira;4;51;3348736;1784942592
mre;4;mire;4;13;858368;1784958976
ms;3;mis;3;256;16783616;1785069568
msa;4;misa;4;1;71936;1785073664
misas;5;misas;5;1;65536;1785076096
msta;5;mista;5;51;3348736;1785151616
mste;5;miste;5;13;858368;1785152128
mitga;6;mitiga;6;51;3356928;1785238404
mtra;5;mitra;5;51;3348736;1785274496
mtre;5;mitre;5;13;858368;1785275008
mobl;5;mobla;5;50;3294976;1808056448
mobl;5;moble;5;8;543232;1808056960
mca;4;moca;4;1;71680;1808142336
mocas;5;mocas;5;1;65536;1808144768
mcea;5;mocea;5;51;3348480;1808158848
mcee;5;mocee;5;13;858112;1808159360
mcha;5;mocha;5;51;3348480;1808171136
mche;5;moche;5;13;858112;1808171648
modla;6;modela;6;51;3357184;1808291332
modle;6;modele;6;13;866816;1808291348
modra;6;modera;6;51;3357184;1808292100
modre;6;modere;6;13;866816;1808292116
modla;6;modula;6;51;3357440;1808356868
modle;6;module;6;13;867072;1808356884
mfa;4;mofa;4;51;3348480;1808535552
mfe;4;mofe;4;13;858112;1808551936
mogol;5;mogol;5;1;65536;1808725504
mohce;6;mohece;6;1;80384;1808814484
mja;4;moja;4;51;3348480;1809059840
mje;4;moje;4;13;858112;1809076224
mojna;6;mojona;6;51;3356672;1809118980
mojne;6;mojone;6;13;866304;1809118996
mla;4;mola;4;59;3872768;1809321984
mlde;5;molde;5;1;71680;1809334912
mldea;6;moldea;6;51;3348480;1809334916
mldee;6;moldee;6;13;858112;1809334932
mle;4;mole;4;13;858112;1809338368
moled;5;moled;5;257;16842752;1809338880
molr;5;moler;5;1;80384;1809340672
mols;5;moles;5;256;16792064;1809340800
mllea;6;mollea;6;35;2299904;1809367684
mllee;6;mollee;6;5;333824;1809367700
mmea;5;momea;5;51;3348480;1809469568
mmee;5;momee;5;13;858112;1809470080
mnda;5;monda;5;51;3348480;1809596544
mnde;5;monde;5;13;858112;1809597056
mnea;5;monea;5;51;3348480;1809600640
mnee;5;monee;5;13;858112;1809601152
mnta;5;monta;5;51;3348480;1809662080
mnte;5;monte;5;13;858112;1809662592
mntea;6;montea;6;51;3348480;1809662596
mntee;6;montee;6;13;858112;1809662612
mquea;6;moquea;6;51;3348480;1810059908
mquee;6;moquee;6;13;858112;1810059924
mra;4;mora;4;51;3348480;1810108416
mord;5;morda;5;8;542464;1810120832
morded;6;morded;6;257;16842752;1810121360
mordr;6;morder;6;1;84480;1810121416
mre;4;more;4;13;858112;1810124800
morid;5;morid;5;257;16842752;1810141696
morr;5;morir;5;1;80128;1810143488
msca;5;mosca;5;1;71680;1810247808
moscas;6;moscas;6;1;65536;1810247884
mstea;6;mostea;6;51;3348480;1810317956
mstee;6;mostee;6;13;858112;1810317972
mostr;6;mostra;6;50;3299072;1810319620
mostr;6;mostre;6;8;547328;1810319636
mta;4;mota;4;1;71680;1810370560
motas;5;motas;5;1;65536;1810372992
mte;4;mote;4;1;71680;1810386944
mtea;5;motea;5;51;3348480;1810387072
mtee;5;motee;5;13;858112;1810387584
motja;6;moteja;6;51;3357184;1810388228
motje;6;moteje;6;13;866816;1810388244
motva;6;motiva;6;51;3356928;1810406148
motve;6;motive;6;13;866560;1810406164
mov;4;mova;4;8;538368;1810632704
moved;5;moved;5;257;16842752;1810649600
movr;5;mover;5;1;80384;1810651392
muc;4;muca;4;8;538368;1833308160
mda;4;muda;4;51;3349248;1833439232
mde;4;mude;4;13;858880;1833455616
mubla;6;muebla;6;1;76288;1833575940
muble;6;mueble;6;5;338432;1833575956
mula;5;muela;5;1;76288;1833615488
mulan;6;muelan;6;257;16853504;1833615544
mule;5;muele;5;1;76288;1833616000
mura;5;muera;5;1;76288;1833640064
muran;6;mueran;6;257;16853504;1833640120
murda;6;muerda;6;1;76288;1833640452
murde;6;muerde;6;1;76288;1833640468
mure;5;muere;5;1;76288;1833640576
musca;6;muesca;6;1;76288;1833644420
muva;5;mueva;5;1;76288;1833656448
muvan;6;muevan;6;257;16853504;1833656504
muve;5;mueve;5;1;76288;1833656960
mga;4;muga;4;1;72448;1833832448
mugas;5;mugas;5;1;65536;1833834880
mge;4;muge;4;1;72448;1833848832
mugid;5;mugid;5;257;16842752;1833865728
mugr;5;mugir;5;1;80128;1833867520
muj;4;muja;4;9;603904;1834225664
mjan;5;mujan;5;257;16849664;1834227456
mull;5;mulla;5;9;608000;1834532992
mllan;6;mullan;6;257;16849664;1834533048
mlle;5;mulle;5;1;72448;1834533504
mullid;6;mullid;6;257;16842752;1834534032
mullr;6;mullir;6;1;84224;1834534088
mlta;5;multa;5;51;3349248;1834565760
mlte;5;multe;5;13;858880;1834566272
mndea;6;mundea;6;51;3349248;1834762884
mndee;6;mundee;6;13;858880;1834762900
mur;4;mura;4;8;538368;1835274240
mrcia;6;murcia;6;1;72448;1835283588
mrria;6;murria;6;1;72448;1835345028
msa;4;musa;4;1;72448;1835405312
musas;5;musas;5;1;65536;1835407744
mseos;6;museos;6;1;72448;1835423692
musta;6;musita;6;51;3356928;1835440644
muste;6;musite;6;13;866560;1835440660
mstia;6;mustia;6;51;3349248;1835484292
mstie;6;mustie;6;13;858880;1835484308
mutla;6;mutila;6;51;3356928;1835570692
mutle;6;mutile;6;13;866560;1835570708
nce;4;nace;4;1;71424;1883656192
naced;5;naced;5;257;16842752;1883656704
nacr;5;nacer;5;1;80384;1883658496
nda;4;nada;4;51;3348224;1883770880
nde;4;nade;4;13;857856;1883787264
nrra;5;narra;5;51;3348224;1885675648
nrre;5;narre;5;13;857856;1885676160
nasea;6;nausea;6;51;3353344;1886073476
nasee;6;nausee;6;13;862976;1886073492
navga;6;navega;6;51;3357184;1886147460
nazc;5;nazca;5;9;608000;1886662784
nzcan;6;nazcan;6;257;16848640;1886662840
ncea;5;necea;5;51;3348992;1900433536
ncee;5;necee;5;13;858624;1900434048
neg;4;nega;4;50;3290880;1900941312
ngrea;6;negrea;6;35;2300416;1901011588
ngree;6;negree;6;5;334336;1901011604
negu;5;negue;5;8;543232;1901023872
nev;4;neva;4;34;2242304;1902907392
niga;5;niega;5;1;76288;1917481088
nigue;6;niegue;6;4;272896;1917483668
niva;5;nieva;5;1;76288;1917542528
nive;5;nieve;5;1;76288;1917543040
nmba;5;nimba;5;51;3348736;1918509184
nmbe;5;nimbe;5;13;858368;1918509696
ntra;5;nitra;5;307;20125952;1919492224
ntre;5;nitre;5;13;858368;1919492736
nivla;6;nivela;6;51;3357184;1919702532
nivle;6;nivele;6;13;866816;1919702548
nea;5;niea;5;51;3348736;1920487552
nee;5;niee;5;13;858368;1920488064
n;2;no;2;256;16783360;1941962752
nmbra;6;nombra;6;51;3348480;1943677188
nmbre;6;nombre;6;13;858112;1943677204
nomna;6;nomina;6;51;3356928;1943705348
nomne;6;nomine;6;13;866560;1943705364
nquea;6;noquea;6;51;3348480;1944277636
nquee;6;noquee;6;13;858112;1944277652
nrma;5;norma;5;51;3348480;1944375424
nrme;5;norme;5;13;858112;1944375936
nta;4;nota;4;51;3348480;1944588288
nte;4;note;4;13;858112;1944604672
nva;4;nova;4;1;71680;1944850432
novas;5;novas;5;1;65536;1944852864
novla;6;novela;6;51;3357184;1944868356
novle;6;novele;6;13;866816;1944868372
nbla;5;nubla;5;35;2300672;1967440000
nble;5;nuble;5;5;334592;1967440512
numra;6;numera;6;51;3357184;1968855300
numre;6;numere;6;13;866816;1968855316
nutr;5;nutra;5;9;608000;1969823872
ntran;6;nutran;6;257;16849664;1969823928
ntre;5;nutre;5;1;72448;1969824384
nutrid;6;nutrid;6;257;16842752;1969824912
nutrr;6;nutrir;6;1;84224;1969824968
;1;o;1;16705;1094780928;2013265920
obcca;6;obceca;6;51;3357184;2022068612
objta;6;objeta;6;51;3357184;2022988292
objte;6;objete;6;13;866816;2022988308
oblga;6;obliga;6;51;3356928;2023265156
bra;4;obra;4;51;3344384;2024017920
bre;4;obre;4;13;854016;2024034304
bsta;5;obsta;5;35;2295808;2024226944
bste;5;obste;5;1;67584;2024227456
obtra;6;obtura;6;51;3357440;2024364292
obtre;6;obture;6;13;867072;2024364308
bvia;5;obvia;5;51;3344384;2024575104
bvie;5;obvie;5;13;854016;2024575616
ochva;6;ochava;6;1;79616;2026904324
cia;4;ocia;4;51;3344384;2027032576
cie;4;ocie;4;13;854016;2027048960
ocluid;6;ocluid;6;257;16842752;2027508880
oclur;6;ocluir;6;1;84224;2027508936
ocluy;6;ocluya;6;9;612096;2027510916
oclye;6;ocluye;6;1;80640;2027510932
octva;6;octava;6;1;79616;2028477188
oclta;6;oculta;6;51;3353344;2028653060
oclte;6;oculte;6;13;862976;2028653076
ocpa;5;ocupa;5;51;3353344;2028667008
ocpe;5;ocupe;5;13;862976;2028667520
ocrra;6;ocurra;6;1;76544;2028677380
ocrre;6;ocurre;6;1;76544;2028677396
dia;4;odia;4;51;3344384;2031226880
die;4;odie;4;13;854016;2031243264
ofend;6;ofenda;6;9;612096;2039144964
ofnde;6;ofende;6;1;76288;2039144980
ofnsa;6;ofensa;6;1;76288;2039146884
ofrta;6;oferta;6;51;3353088;2039163396
ofrte;6;oferte;6;13;862720;2039163412
ofcia;6;oficia;6;51;3352832;2039624836
ofcie;6;oficie;6;13;862464;2039624852
ofrce;6;ofrece;6;1;80384;2040811924
ofsca;6;ofusca;6;51;3353344;2041262468
od;3;od;3;257;16842752;2051538944
oig;4;oiga;4;9;603904;2051936256
ogan;5;oigan;5;257;16849152;2051938048
or;3;or;3;1;65536;2053373952
ojles;6;ojales;6;12288;805316352;2055389900
jea;4;ojea;4;51;3344384;2055868416
jee;4;ojee;4;13;854016;2055884800
oj;3;ojo;3;257;16852992;2057175040
ojta;5;ojota;5;1;75776;2057257088
ojotas;6;ojotas;6;1;65536;2057257164
ol;3;ola;3;8;534272;2063728640
oled;4;oled;4;257;16842752;2064269312
olr;4;oler;4;1;76288;2064326656
oltea;6;oletea;6;51;3353088;2064335492
oltee;6;oletee;6;13;862720;2064335508
olsca;6;olisca;6;51;3352832;2064855428
olva;5;oliva;5;33;2173184;2064867456
olivas;6;olivas;6;1;65536;2064867532
olvda;6;olvida;6;51;3356928;2066518532
olvde;6;olvide;6;13;866560;2066518548
omit;5;omita;5;9;608000;2069053568
omtan;6;omitan;6;257;16853248;2069053624
omte;5;omite;5;1;76032;2069054080
omitid;6;omitid;6;257;16842752;2069054608
omitr;6;omitir;6;1;84224;2069054664
ndea;5;ondea;5;35;2295808;2072531072
ndee;5;ondee;5;5;329728;2072531584
ondla;6;ondula;6;51;3357440;2072598020
ondle;6;ondule;6;13;867072;2072598036
opca;5;opaca;5;1;75520;2080518272
opacas;6;opacas;6;1;65536;2080518348
opra;5;opera;5;51;3353088;2081104000
opre;5;opere;5;13;862720;2081104512
opna;5;opina;5;51;3352832;2081611904
opne;5;opine;5;13;862464;2081612416
opne;5;opone;5;1;75776;2082398848
oponed;6;oponed;6;257;16842752;2082398864
oponr;6;oponer;6;1;84480;2082398920
opong;6;oponga;6;9;612096;2082399108
oprsa;6;opresa;6;1;80384;2082756996
oprim;6;oprima;6;9;612096;2082772612
oprme;6;oprime;6;1;80128;2082772628
pta;4;opta;4;51;3344384;2083000320
pte;4;opte;4;13;854016;2083016704
optma;6;optima;6;51;3356928;2083034756
optme;6;optime;6;13;866560;2083034772
opgna;6;opugna;6;51;3353344;2083157764
opgne;6;opugne;6;13;862976;2083157780
ra;3;ora;3;51;3344384;2088894464
rce;4;orce;4;13;854016;2089177088
ordna;6;ordena;6;51;3357184;2089309956
ordne;6;ordene;6;13;866816;2089309972
orda;6;ordea;6;51;3357184;2089311748
orde;6;ordee;6;13;866816;2089311764
re;3;ore;3;13;854016;2089418752
rea;4;orea;4;51;3344384;2089422848
ree;4;oree;4;13;854016;2089439232
orja;5;oreja;5;1;76288;2089459840
orejas;6;orejas;6;1;65536;2089459916
orjea;6;orejea;6;51;3353088;2089460356
orjee;6;orejee;6;13;862720;2089460372
reos;5;oreos;5;1;67584;2089482624
orlla;6;orilla;6;51;3352832;2089993732
orlle;6;orille;6;13;862464;2089993748
orna;5;orina;5;51;3352832;2090000512
orne;5;orine;5;13;862464;2090001024
rla;4;orla;4;51;3344384;2090340352
rle;4;orle;4;13;854016;2090356736
rna;4;orna;4;51;3344384;2090602496
rne;4;orne;4;13;854016;2090618880
rza;4;orza;4;51;3344384;2092175360
sa;3;osa;3;51;3344384;2093088768
oscla;6;oscila;6;51;3356928;2093389316
oscle;6;oscile;6;13;866560;2093389332
se;3;ose;3;13;854016;2093613056
sea;4;sea;4;1;65536;2093617152
seos;5;seos;5;1;65536;2093676928
tea;4;otea;4;51;3344384;2097811456
tee;4;otee;4;13;854016;2097827840
otrga;6;otorga;6;51;3352576;2099192708
ota;5;otoa;5;51;3352576;2099232896
ote;5;otoe;5;13;862208;2099233408
va;3;ova;3;35;2295808;2105671680
ovla;5;ovala;5;51;3352320;2105720960
ovle;5;ovale;5;13;861952;2105721472
ovas;4;ovas;4;1;65536;2105749504
ve;3;ove;3;5;329728;2106195968
ovlla;6;ovilla;6;51;3352832;2106770948
ovlle;6;oville;6;13;862464;2106770964
ovla;5;ovula;5;51;3353344;2108342400
ovle;5;ovule;5;13;862976;2108342912
xea;4;oxea;4;51;3344384;2114588672
xee;4;oxee;4;13;854016;2114605056
oxda;5;oxida;5;51;3352832;2115125376
oxde;5;oxide;5;13;862464;2115125888
ye;3;oye;3;1;67584;2118778880
oyndo;6;oyendo;6;1;76288;2118836796
ozna;5;ozona;5;51;3352576;2124341376
ozne;5;ozone;5;13;862208;2124341888
pce;4;pace;4;1;71424;2152091648
paced;5;paced;5;257;16842752;2152092160
pacr;5;pacer;5;1;80384;2152093952
pcta;5;pacta;5;51;3348224;2152153216
pcte;5;pacte;5;13;857856;2152153728
padce;6;padece;6;1;80384;2152223124
pdrea;6;padrea;6;51;3348224;2152276612
pdree;6;padree;6;13;857856;2152276628
pga;4;paga;4;51;3348224;2152599552
pagna;6;pagina;6;51;3356928;2152634116
pagne;6;pagine;6;13;866560;2152634132
pgue;5;pague;5;13;857856;2152682112
pjea;5;pajea;5;51;3348224;2153009280
pjee;5;pajee;5;13;857856;2153009792
pla;4;pala;4;1;71424;2153254912
palas;5;palas;5;1;65536;2153257344
plea;5;palea;5;51;3348224;2153271424
plee;5;palee;5;13;857856;2153271936
plia;5;palia;5;51;3348224;2153287808
plie;5;palie;5;13;857856;2153288320
plmea;6;palmea;6;51;3348224;2153304708
plmee;6;palmee;6;13;857856;2153304724
plpa;5;palpa;5;51;3348224;2153316480
plpe;5;palpe;5;13;857856;2153316992
pan;3;pan;3;65;4259840;2153512960
pnda;5;panda;5;1;71424;2153529472
pandas;6;pandas;6;1;65536;2153529548
pndea;6;pandea;6;51;3348224;2153529988
pndee;6;pandee;6;13;857856;2153530004
panja;6;panoja;6;1;79872;2153575684
ppa;4;papa;4;51;3348224;2153779200
ppe;4;pape;4;13;857856;2153795584
pr;3;par;3;16640;1090524928;2154037248
par;4;para;4;187;12269312;2154041344
pran;5;paran;5;257;16848640;2154043136
prcha;6;parcha;6;51;3348224;2154050564
prche;6;parche;6;13;857856;2154050580
prdea;6;pardea;6;35;2299648;2154054276
prdee;6;pardee;6;5;333568;2154054292
pre;4;pare;4;13;857856;2154057728
prea;5;parea;5;51;3348224;2154057856
parce;6;parece;6;1;80384;2154058132
pree;5;paree;5;13;857856;2154058368
preos;6;pareos;6;1;71424;2154059724
parid;5;parid;5;257;16842752;2154074624
parr;5;parir;5;1;80128;2154076416
prla;5;parla;5;51;3348224;2154086528
prle;5;parle;5;13;857856;2154087040
prra;5;parra;5;35;2299648;2154111104
parras;6;parras;6;1;65536;2154111180
prre;5;parre;5;5;333568;2154111616
part;5;parta;5;9;608000;2154119296
prtan;6;partan;6;257;16848640;2154119352
prte;5;parte;5;1;71424;2154119808
partid;6;partid;6;257;16842752;2154120336
partr;6;partir;6;1;84224;2154120392
psa;4;pasa;4;51;3348224;2154172416
pscua;6;pascua;6;1;71424;2154183300
pse;4;pase;4;13;857856;2154188800
psea;5;pasea;5;51;3348224;2154188928
psee;5;pasee;5;13;857856;2154189440
pseos;6;paseos;6;1;71424;2154190796
psma;5;pasma;5;51;3348224;2154221696
psme;5;pasme;5;13;857856;2154222208
psta;5;pasta;5;51;3348224;2154250368
pste;5;paste;5;13;857856;2154250880
pstea;6;pastea;6;51;3348224;2154250884
pstee;6;pastee;6;13;857856;2154250900
ptea;5;patea;5;51;3348224;2154320000
ptee;5;patee;5;13;857856;2154320512
patna;6;patina;6;51;3356928;2154338052
patne;6;patine;6;13;866560;2154338068
ptria;6;patria;6;1;71424;2154374276
pala;5;paula;5;51;3353344;2154479744
pale;5;paule;5;13;862976;2154480256
pasa;5;pausa;5;51;3353344;2154508416
pase;5;pause;5;13;862976;2154508928
pata;5;pauta;5;51;3353344;2154512512
pate;5;paute;5;13;862976;2154513024
pvea;5;pavea;5;51;3348224;2154582144
pvee;5;pavee;5;13;857856;2154582656
pavna;6;pavona;6;51;3356672;2154624772
pavne;6;pavone;6;13;866304;2154624788
pya;4;paya;4;51;3348224;2154958848
pye;4;paye;4;13;857856;2154975232
pazc;5;pazca;5;9;608000;2155098240
pzcan;6;pazcan;6;257;16848640;2155098296
p;2;pe;2;321;21043712;2168455168
pe;3;pea;3;8;534272;2168586240
pela;5;peala;5;51;3352320;2168635520
pele;5;peale;5;13;861952;2168636032
pca;4;peca;4;51;3348992;2168852480
pcha;5;pecha;5;51;3348992;2168881280
pche;5;peche;5;13;858624;2168881792
pedid;5;pedid;5;257;16842752;2169016832
pedr;5;pedir;5;1;80128;2169018624
peed;4;peed;4;257;16842752;2169126912
per;4;peer;4;1;76288;2169184256
pga;4;pega;4;51;3348992;2169376768
pgue;5;pegue;5;13;858624;2169459328
pena;5;peina;5;51;3352832;2169692288
pene;5;peine;5;13;862464;2169692800
pla;4;pela;4;51;3348992;2170032128
ple;4;pele;4;13;858624;2170048512
plea;5;pelea;5;51;3348992;2170048640
plee;5;pelee;5;13;858624;2170049152
pna;4;pena;4;51;3348992;2170294272
pnca;5;penca;5;1;72192;2170302592
pencas;6;pencas;6;1;65536;2170302668
pend;5;penda;5;9;608000;2170306688
pndan;6;pendan;6;257;16849408;2170306744
pnde;5;pende;5;1;72192;2170307200
pended;6;pended;6;257;16842752;2170307216
pendr;6;pender;6;1;84480;2170307272
pne;4;pene;4;13;858624;2170310656
pens;5;pensa;5;50;3294976;2170368128
pens;5;pense;5;8;543232;2170368640
pena;5;peona;5;51;3352576;2170478720
pene;5;peone;5;13;862208;2170479232
pepna;6;pepena;6;51;3357184;2170574596
pepne;6;pepene;6;13;866816;2170574612
pque;5;peque;5;13;858624;2170770048
per;3;per;3;1;65536;2170814464
perl;5;peral;5;257;16856832;2170820096
prcha;6;percha;6;1;72192;2170827780
perd;5;perda;5;8;542464;2170830976
perded;6;perded;6;257;16842752;2170831504
perdr;6;perder;6;1;84480;2170831560
perce;6;perece;6;1;80384;2170835348
perta;6;perita;6;1;80128;2170853892
prla;5;perla;5;1;72192;2170863744
perlas;6;perlas;6;1;65536;2170863820
prnea;6;pernea;6;51;3348992;2170872452
prnee;6;pernee;6;13;858624;2170872468
pern;5;perno;5;257;16861184;2170873728
per;4;pero;4;16384;1073756160;2170875904
perra;6;perora;6;51;3356672;2170878212
perre;6;perore;6;13;866304;2170878228
psa;4;pesa;4;51;3348992;2170949632
psca;5;pesca;5;51;3348992;2170957952
pse;4;pese;4;13;858624;2170966016
psque;6;pesque;6;13;858624;2171017876
pey;4;pey;4;16384;1073741824;2171793408
p;2;pi;2;16704;1094719744;2185232384
pi;3;pia;3;50;3286784;2185363456
pifa;5;piafa;5;51;3352320;2185388160
pife;5;piafe;5;13;861952;2185388672
pila;5;piala;5;51;3352320;2185412736
pile;5;piale;5;13;861952;2185413248
pca;4;pica;4;51;3348736;2185629696
pid;4;pida;4;9;603904;2185760768
pdan;5;pidan;5;257;16849152;2185762560
pde;4;pide;4;1;71936;2185777152
pi;3;pie;3;8;535040;2185887744
pinsa;6;piensa;6;1;76288;2185947524
pinse;6;piense;6;5;338432;2185947540
pirda;6;pierda;6;1;76288;2185961988
pirde;6;pierde;6;1;76288;2185962004
pfia;5;pifia;5;51;3348736;2186055808
pfie;5;pifie;5;13;858368;2186056320
pla;4;pila;4;51;3348736;2186809344
plca;5;pilca;5;1;71936;2186817664
pilcas;6;pilcas;6;1;65536;2186817740
ple;4;pile;4;13;858368;2186825728
plla;5;pilla;5;51;3348736;2186854528
plle;5;pille;5;13;858368;2186855040
pil;4;pil;4;256;16777216;2186866688
pilta;6;pilota;6;51;3356672;2186869252
pilte;6;pilote;6;13;866304;2186869268
pncha;6;pincha;6;51;3348736;2187080708
pnche;6;pinche;6;13;858368;2187080724
pnga;5;pinga;5;51;3348736;2187096192
pngue;6;pingue;6;13;858368;2187098772
pin;4;pino;4;16384;1073756160;2187128832
pnta;5;pinta;5;51;3348736;2187149440
pnte;5;pinte;5;13;858368;2187149952
pnza;5;pinza;5;1;71936;2187174016
pinzas;6;pinzas;6;1;65536;2187174092
pila;5;piola;5;1;75776;2187247744
piolas;6;piolas;6;1;65536;2187247820
ppa;4;pipa;4;1;71936;2187333632
pipas;5;pipas;5;1;65536;2187336064
pipi;5;pipia;5;34;2246400;2187366528
pque;5;pique;5;13;858368;2187547264
pra;4;pira;4;51;3348736;2187595776
prca;5;pirca;5;1;71936;2187604096
pircas;6;pircas;6;1;65536;2187604172
pre;4;pire;4;13;858368;2187612160
prra;5;pirra;5;51;3348736;2187665536
prre;5;pirre;5;13;858368;2187666048
ps;3;pis;3;256;16783616;2187722752
psa;4;pisa;4;51;3348736;2187726848
pse;4;pise;4;13;858368;2187743232
psta;5;pista;5;51;3348736;2187804800
pste;5;piste;5;13;858368;2187805312
pta;4;pita;4;51;3348736;2187857920
pte;4;pite;4;13;858368;2187874304
ptea;5;pitea;5;51;3348736;2187874432
ptee;5;pitee;5;13;858368;2187874944
pivte;6;pivote;6;1;79872;2188179988
pzca;5;pizca;5;1;71936;2188652672
pizcas;6;pizcas;6;1;65536;2188652748
plce;5;place;5;1;75520;2197959296
plcea;6;placea;6;51;3352320;2197959300
placed;6;placed;6;257;16842752;2197959312
plcee;6;placee;6;13;861952;2197959316
placr;6;placer;6;1;84480;2197959368
plga;5;plaga;5;51;3352320;2197975168
plgia;6;plagia;6;51;3352320;2197976196
plgie;6;plagie;6;13;861952;2197976212
plgue;6;plague;6;13;861952;2197977748
pln;4;plan;4;256;16787200;2198003712
plnea;6;planea;6;51;3352320;2198004356
plnee;6;planee;6;13;861952;2198004372
plnta;6;planta;6;51;3352320;2198006276
plnte;6;plante;6;13;861952;2198006292
plsma;6;plasma;6;51;3352320;2198025860
plsme;6;plasme;6;13;861952;2198025876
pltea;6;platea;6;51;3352320;2198028932
pltee;6;platee;6;13;861952;2198028948
plazc;6;plazca;6;8;546560;2198053252
pla;5;plaa;5;9;608000;2198061184
plan;6;plaan;6;257;16852736;2198061240
ple;5;plae;5;1;75520;2198061696
plaid;6;plaid;6;257;16842752;2198062224
plar;6;plair;6;1;84224;2198062280
pleg;5;plega;5;50;3294976;2198499456
plgue;6;plegue;6;9;600576;2198502036
pliga;6;pliega;6;1;80384;2199016324
plsa;5;plisa;5;51;3352832;2199072896
plse;5;plise;5;13;862464;2199073408
plma;5;ploma;5;51;3352576;2199834752
plme;5;plome;5;13;862208;2199835264
plmea;6;plumea;6;51;3353344;2200621700
plmee;6;plumee;6;13;862976;2200621716
pobl;5;pobla;5;50;3294976;2210709632
pobl;5;poble;5;8;543232;2210710144
pda;4;poda;4;59;3872768;2210926592
pde;4;pode;4;13;858112;2210942976
poded;5;poded;5;257;16842752;2210943488
podr;5;poder;5;1;80384;2210945280
pota;5;poeta;5;1;76288;2211135616
poetas;6;poetas;6;1;65536;2211135692
pllea;6;pollea;6;51;3348480;2212020868
pllee;6;pollee;6;13;858112;2212020884
pon;3;pon;3;1;65536;2212233216
pncha;6;poncha;6;1;71680;2212246532
pnche;6;ponche;6;1;71680;2212246548
pne;4;pone;4;1;71680;2212253696
poned;5;poned;5;257;16842752;2212254208
ponr;5;poner;5;1;80384;2212256000
pong;5;ponga;5;9;608000;2212262016
pngan;6;pongan;6;257;16848896;2212262072
ppa;4;popa;4;1;71680;2212499456
popas;5;popas;5;1;65536;2212501888
pr;3;por;3;256;16783360;2212757504
porfi;6;porfia;6;50;3299072;2212783236
porfi;6;porfie;6;8;547328;2212783252
prta;5;porta;5;51;3348480;2212839552
prte;5;porte;5;13;858112;2212840064
prtea;6;portea;6;51;3348480;2212840068
prtee;6;portee;6;13;858112;2212840084
ps;3;pos;3;9216;603985920;2212888576
psa;4;posa;4;51;3348480;2212892672
pse;4;pose;4;13;858112;2212909056
pose;5;posea;5;9;608000;2212909184
psean;6;posean;6;257;16848896;2212909240
psee;5;posee;5;1;71680;2212909696
poseed;6;poseed;6;257;16842752;2212909712
poser;6;poseer;6;1;84480;2212909768
pstra;6;postra;6;51;3348480;2212972804
pstre;6;postre;6;13;858112;2212972820
pte;4;pote;4;1;71680;2213040128
ptrea;6;potrea;6;51;3348480;2213094020
ptree;6;potree;6;13;858112;2213094036
prcia;6;precia;6;51;3353088;2223649924
prcie;6;precie;6;13;862720;2223649940
prmia;6;premia;6;51;3353088;2223690884
prmie;6;premie;6;13;862720;2223690900
prnda;6;prenda;6;59;3877376;2223694340
prnde;6;prende;6;13;862720;2223694356
prnsa;6;prensa;6;51;3353088;2223696260
prnse;6;prense;6;13;862720;2223696276
prsa;5;presa;5;1;76288;2223714432
presas;6;presas;6;1;65536;2223714508
prsta;6;presta;6;59;3877376;2223716868
prste;6;preste;6;13;862720;2223716884
preve;6;prevea;6;9;612096;2223727236
prevr;6;prever;6;1;84480;2223727304
pra;5;prea;5;51;3353088;2223751296
pre;5;pree;5;13;862720;2223751808
prma;5;prima;5;1;76032;2224214144
primas;6;primas;6;1;65536;2224214220
prnga;6;pringa;6;51;3352832;2224219012
prva;5;priva;5;51;3352832;2224251008
prve;5;prive;5;13;862464;2224251520
prob;5;proba;5;50;3294976;2224955520
prob;5;probe;5;8;543232;2224956032
prsea;6;prosea;6;51;3352576;2225025668
prsee;6;prosee;6;13;862208;2225025684
prove;6;provea;6;9;612096;2225037956
prvee;6;provee;6;1;75776;2225037972
pruba;6;prueba;6;1;80384;2225754372
prube;6;pruebe;6;5;342528;2225754388
pches;6;puches;6;12288;805313280;2235990732
pude;4;pude;4;1;65536;2236108800
pudr;5;pudra;5;9;608000;2236162176
pdran;6;pudran;6;257;16849664;2236162232
pdre;5;pudre;5;1;72448;2236162688
pudrid;6;pudrid;6;257;16842752;2236163216
pudrr;6;pudrir;6;1;84224;2236163272
publa;6;puebla;6;1;76288;2236229124
puble;6;pueble;6;5;338432;2236229140
puda;5;pueda;5;1;76288;2236235904
pudan;6;puedan;6;257;16853504;2236235960
pude;5;puede;5;1;76288;2236236416
pgna;5;pugna;5;51;3349248;2236539008
pgne;5;pugne;5;13;858880;2236539520
pja;4;puja;4;51;3349248;2236878848
pje;4;puje;4;13;858880;2236895232
pul;4;pula;4;9;603904;2237140992
plan;5;pulan;5;257;16849664;2237142784
ple;4;pule;4;1;72448;2237157376
pulid;5;pulid;5;257;16842752;2237174272
pulr;5;pulir;5;1;80128;2237176064
plsa;5;pulsa;5;51;3349248;2237214848
plse;5;pulse;5;13;858880;2237215360
plsea;6;pulsea;6;51;3349248;2237215364
plsee;6;pulsee;6;13;858880;2237215380
pulla;6;pulula;6;51;3357440;2237224452
pulle;6;pulule;6;13;867072;2237224468
pna;4;puna;4;1;72448;2237403136
pnce;5;punce;5;13;858880;2237411968
pnge;5;punge;5;1;72448;2237428352
pungid;6;pungid;6;257;16842752;2237428880
pungr;6;pungir;6;1;84224;2237428936
punj;5;punja;5;9;608000;2237440128
pnjan;6;punjan;6;257;16849664;2237440184
pntea;6;puntea;6;51;3349248;2237481604
pntee;6;puntee;6;13;858880;2237481620
puntu;6;puntua;6;50;3299072;2237483652
puntu;6;puntue;6;8;547328;2237483668
pnza;5;punza;5;51;3349248;2237505664
ppa;4;pupa;4;1;72448;2237665280
pupas;5;pupas;5;1;65536;2237667712
prga;5;purga;5;51;3349248;2237952128
prgue;6;purgue;6;13;858880;2237954708
ptea;5;putea;5;51;3349248;2238206080
ptee;5;putee;5;13;858880;2238206592
pya;4;puya;4;51;3349248;2238844928
pye;4;puye;4;13;858880;2238861312
qu;3;qu;3;16512;1082130432;2370437120
quebr;6;quebra;6;50;3299072;2370447620
quebr;6;quebre;6;8;547328;2370447636
quda;5;queda;5;51;3353088;2370453632
qude;5;quede;5;13;862720;2370454144
quja;5;queja;5;51;3353088;2370478208
quje;5;queje;5;13;862720;2370478720
quma;5;quema;5;51;3353088;2370490496
qume;5;queme;5;13;862720;2370491008
quep;5;quepa;5;9;608000;2370502784
qupan;6;quepan;6;257;16853504;2370502840
quer;5;quera;5;8;542464;2370510976
quer;5;quere;5;8;543232;2370511488
quered;6;quered;6;257;16842752;2370511504
querr;6;querer;6;1;84480;2370511560
quira;6;quiera;6;1;80384;2370984196
quire;6;quiere;6;1;80384;2370984212
quita;6;quieta;6;1;80384;2370984452
quna;5;quina;5;1;76032;2371018880
quinas;6;quinas;6;1;65536;2371018956
qunta;6;quinta;6;51;3352832;2371021316
qunte;6;quinte;6;13;862464;2371021332
quste;6;quiste;6;1;76032;2371041812
quta;5;quita;5;51;3352832;2371043456
qute;5;quite;5;13;862464;2371043968
rbea;5;rabea;5;35;2299648;2420396160
rbee;5;rabee;5;5;333568;2420396672
rbia;5;rabia;5;307;20125440;2420412544
rbie;5;rabie;5;269;17635072;2420413056
rab;4;rabo;4;257;16857088;2420436992
rcha;5;racha;5;1;71424;2420539520
rachas;6;rachas;6;1;65536;2420539596
rdia;5;radia;5;51;3348224;2420674688
radca;6;radica;6;51;3356928;2420674948
rdie;5;radie;5;13;857856;2420675200
raed;4;raed;4;257;16842752;2420785152
rar;4;raer;4;1;76288;2420842496
ra;3;ra;3;128;8388608;2421293056
raig;5;raiga;5;9;608000;2421321856
ragan;6;raigan;6;257;16853248;2421321912
rja;4;raja;4;51;3348224;2421428224
rje;4;raje;4;13;857856;2421444608
rlea;5;ralea;5;51;3348224;2421706880
rlee;5;ralee;5;13;857856;2421707392
rlla;5;ralla;5;51;3348224;2421735552
rlle;5;ralle;5;13;857856;2421736064
rncia;6;rancia;6;51;3348224;2421961860
rncie;6;rancie;6;13;857856;2421961876
ranra;6;ranura;6;1;80640;2422036740
rpa;4;rapa;4;51;3348224;2422214656
rpe;4;rape;4;13;857856;2422231040
rapa;6;rapia;6;51;3356928;2422251012
rape;6;rapie;6;13;866560;2422251028
rpta;5;rapta;5;51;3348224;2422292608
rpte;5;rapte;5;13;857856;2422293120
rquea;6;raquea;6;51;3348224;2422428292
rquee;6;raquee;6;13;857856;2422428308
rs;3;ras;3;9216;603985664;2422603776
rsa;4;rasa;4;51;3348224;2422607872
rsca;5;rasca;5;51;3348224;2422616192
rse;4;rase;4;13;857856;2422624256
rsga;5;rasga;5;51;3348224;2422632576
rsgue;6;rasgue;6;13;857856;2422635156
rspa;5;raspa;5;51;3348224;2422669440
rspe;5;raspe;5;13;857856;2422669952
rspea;6;raspea;6;51;3348224;2422669956
rspee;6;raspee;6;13;857856;2422669972
rsque;6;rasque;6;13;857856;2422676116
rstra;6;rastra;6;1;71424;2422688004
rasra;6;rasura;6;51;3357440;2422692100
rasre;6;rasure;6;13;867072;2422692116
rtea;5;ratea;5;51;3348224;2422755456
rtee;5;ratee;5;13;857856;2422755968
ratna;6;ratona;6;51;3356672;2422798084
ratne;6;ratone;6;13;866304;2422798100
rya;4;raya;4;51;3348224;2423394304
rye;4;raye;4;13;857856;2423410688
razna;6;razona;6;51;3356672;2423584516
razne;6;razone;6;13;866304;2423584532
r;2;re;2;392;25696768;2436890624
re;3;rea;3;16769;1098983168;2437021696
reabr;6;reabra;6;9;612096;2437032196
rebre;6;reabre;6;1;75520;2437032212
relce;6;realce;6;13;861952;2437071252
relza;6;realza;6;51;3352320;2437074180
rerma;6;rearma;6;51;3352320;2437097092
rerme;6;rearme;6;13;861952;2437097108
reta;5;reata;5;51;3352320;2437103744
rete;5;reate;5;13;861952;2437104256
rebja;6;rebaja;6;51;3356416;2437158148
rebje;6;rebaje;6;13;866048;2437158164
rebna;6;rebana;6;51;3356416;2437158660
rebne;6;rebane;6;13;866048;2437158676
rebsa;6;rebasa;6;51;3356416;2437159300
rebse;6;rebase;6;13;866048;2437159316
rebta;6;rebata;6;9;603904;2437159428
rebte;6;rebate;6;5;341760;2437159444
reba;6;rebaa;6;51;3356416;2437160452
rebe;6;rebae;6;13;866048;2437160468
rebla;6;rebela;6;51;3357184;2437174788
reble;6;rebele;6;13;866816;2437174804
rebce;6;reboce;6;13;866304;2437214612
rebsa;6;rebosa;6;51;3356672;2437216644
rebse;6;rebose;6;13;866304;2437216660
rebta;6;rebota;6;51;3356672;2437216772
rebte;6;rebote;6;13;866304;2437216788
rebza;6;reboza;6;51;3356672;2437217540
rebfa;6;rebufa;6;51;3357440;2437239556
rebfe;6;rebufe;6;13;867072;2437239572
rebja;6;rebuja;6;51;3357440;2437240068
rebje;6;rebuje;6;13;867072;2437240084
recba;6;recaba;6;51;3356416;2437288196
recbe;6;recabe;6;13;866048;2437288212
rcae;5;recae;5;1;72192;2437288576
recaed;6;recaed;6;257;16842752;2437288592
recar;6;recaer;6;1;84480;2437288648
recla;6;recala;6;51;3356416;2437289476
recle;6;recale;6;13;866048;2437289492
recma;6;recama;6;51;3356416;2437289604
recme;6;recame;6;13;866048;2437289620
recta;6;recata;6;51;3356416;2437290500
recte;6;recate;6;13;866048;2437290516
rec;4;rec;4;321;21037056;2437304320
recla;6;recela;6;51;3357184;2437305860
recle;6;recele;6;13;866816;2437305876
recta;6;receta;6;51;3357184;2437306884
recte;6;recete;6;13;866816;2437306900
recib;6;reciba;6;9;612096;2437320964
recbe;6;recibe;6;1;80128;2437320980
reci;5;reci;5;4;262144;2437321344
recin;6;recin;6;256;16777216;2437321400
recta;6;recita;6;51;3356928;2437323268
recte;6;recite;6;13;866560;2437323284
recda;6;recoda;6;51;3356672;2437345796
recde;6;recode;6;13;866304;2437345812
recge;6;recoge;6;1;79872;2437346196
recoj;6;recoja;6;9;612096;2437346564
recom;6;recoma;6;9;612096;2437346948
recme;6;recome;6;1;79872;2437346964
recos;6;recosa;6;9;612096;2437347716
recse;6;recose;6;1;79872;2437347732
recva;6;recova;6;1;79872;2437348100
recoz;6;recoza;6;8;546560;2437348612
rcrea;6;recrea;6;51;3348992;2437358212
rcree;6;recree;6;13;858624;2437358228
recri;6;recria;6;50;3299072;2437358724
recri;6;recrie;6;8;547328;2437358740
rcta;5;recta;5;1;72192;2437365888
rectas;6;rectas;6;1;65536;2437365964
rect;5;recto;5;16384;1073760256;2437367680
recla;6;recula;6;51;3357440;2437371396
recle;6;recule;6;13;867072;2437371412
recsa;6;recusa;6;51;3357440;2437372292
recse;6;recuse;6;13;867072;2437372308
rd;3;red;3;16384;1073748480;2437414912
rdes;5;redes;5;12288;805313024;2437437824
red;4;red;4;128;8388608;2437451776
redce;6;redice;6;1;80128;2437452180
redig;6;rediga;6;9;612096;2437452676
redim;6;redima;6;9;612096;2437453444
redme;6;redime;6;1;80128;2437453460
redra;6;redora;6;51;3356672;2437478660
redre;6;redore;6;13;866304;2437478676
redce;6;reduce;6;1;80640;2437501332
refna;6;refina;6;51;3356928;2437715716
refne;6;refine;6;13;866560;2437715732
refir;6;refira;6;8;546560;2437716228
refta;6;refuta;6;51;3357440;2437765636
refte;6;refute;6;13;867072;2437765652
reg;4;rega;4;50;3290880;2437812224
regla;6;regala;6;51;3356416;2437813764
regle;6;regale;6;13;866048;2437813780
rega;6;regaa;6;59;3880704;2437815812
rege;6;regae;6;13;866048;2437815828
regid;5;regid;5;257;16842752;2437845504
regr;5;regir;5;1;80128;2437847296
rgla;5;regla;5;51;3348992;2437857408
rgle;5;regle;5;13;858624;2437857920
regu;5;regue;5;8;543232;2437894784
regla;6;regula;6;51;3357440;2437895684
regle;6;regule;6;13;867072;2437895700
rehce;6;rehace;6;1;79616;2437943700
rehag;6;rehaga;6;9;612096;2437944196
rehaz;5;rehaz;5;1;65536;2437946624
rehil;6;rehila;6;50;3299072;2437977604
rehil;6;rehile;6;8;547328;2437977620
rehga;6;rehoga;6;51;3356672;2438001540
rehya;6;rehoya;6;51;3356672;2438003844
rehye;6;rehoye;6;13;866304;2438003860
rehuid;6;rehuid;6;257;16842752;2438026384
rehur;6;rehuir;6;1;84224;2438026440
rehus;6;rehusa;6;50;3299072;2438027652
rehus;6;rehuse;6;8;547328;2438027668
rehuy;6;rehuya;6;9;612096;2438028420
rehye;6;rehuye;6;1;80640;2438028436
re;3;re;3;1;65536;2438070272
red;4;red;4;257;16842752;2438086656
rena;5;reina;5;51;3352832;2438127744
rene;5;reine;5;13;862464;2438128256
rer;4;rer;4;1;65536;2438144000
relja;6;relaja;6;51;3356416;2438468868
relje;6;relaje;6;13;866048;2438468884
relam;6;relama;6;9;612096;2438469252
relme;6;relame;6;1;79616;2438469268
relta;6;relata;6;51;3356416;2438470148
relte;6;relate;6;13;866048;2438470164
rele;5;relea;5;9;608000;2438484096
rlean;6;relean;6;257;16849408;2438484152
rlee;5;relee;5;1;72192;2438484608
releed;6;releed;6;257;16842752;2438484624
reler;6;releer;6;1;84480;2438484680
relga;6;relega;6;51;3357184;2438484868
relva;6;releva;6;51;3357184;2438486788
relve;6;releve;6;13;866816;2438486804
relce;6;reluce;6;1;80640;2438549908
rma;4;rema;4;307;20126208;2438598656
remn;5;reman;5;64;4208384;2438600448
remta;6;remata;6;51;3356416;2438601220
remte;6;remate;6;13;866048;2438601236
rme;4;reme;4;333;21830144;2438615040
remce;6;remece;6;1;80384;2438615444
remda;6;remeda;6;51;3357184;2438615556
remde;6;remede;6;13;866816;2438615572
remsa;6;remesa;6;51;3357184;2438617476
remse;6;remese;6;13;866816;2438617492
remet;6;remeta;6;9;612096;2438617604
remte;6;remete;6;1;80384;2438617620
remez;6;remeza;6;9;612096;2438618372
remra;6;remira;6;51;3356928;2438633732
remre;6;remire;6;13;866560;2438633748
remit;6;remita;6;9;612096;2438633988
remte;6;remite;6;1;80128;2438634004
remce;6;remoce;6;13;866304;2438656404
remja;6;remoja;6;51;3356672;2438657284
remje;6;remoje;6;13;866304;2438657300
remol;6;remola;6;8;546560;2438657540
remol;6;remole;6;8;547328;2438657556
rems;5;remos;5;256;16791552;2438658432
remov;6;remova;6;8;546560;2438658820
remza;6;remoza;6;51;3356672;2438659332
rence;6;renace;6;1;79616;2438730132
rendid;6;rendid;6;257;16842752;2438743184
rendr;6;rendir;6;1;84224;2438743240
reneg;6;renega;6;50;3299072;2438747012
rnga;5;renga;5;1;72192;2438754432
rengas;6;rengas;6;1;65536;2438754508
renov;6;renova;6;50;3299072;2438789892
renov;6;renove;6;8;547328;2438789908
rnta;5;renta;5;51;3348992;2438807680
rnte;5;rente;5;13;858624;2438808192
repra;6;repara;6;51;3356416;2438994180
repre;6;repare;6;13;866048;2438994196
repsa;6;repasa;6;51;3356416;2438994308
repse;6;repase;6;13;866048;2438994324
repla;6;repela;6;59;3881472;2439009796
reple;6;repele;6;13;866816;2439009812
repca;6;repica;6;51;3356928;2439025028
repsa;6;repisa;6;1;80128;2439027076
repit;6;repita;6;9;612096;2439027204
repte;6;repite;6;1;80128;2439027220
repne;6;repone;6;1;79872;2439051028
repsa;6;reposa;6;51;3356672;2439051652
repse;6;repose;6;13;866304;2439051668
rpta;5;repta;5;51;3348992;2439069824
rpte;5;repte;5;13;858624;2439070336
repja;6;repuja;6;51;3357440;2439075076
repje;6;repuje;6;13;867072;2439075092
repul;6;repula;6;9;612096;2439075332
reple;6;repule;6;1;80640;2439075348
repta;6;reputa;6;51;3357440;2439076356
repte;6;repute;6;13;867072;2439076372
rs;3;res;3;256;16783872;2439380992
resbe;6;resabe;6;1;79616;2439385364
resca;6;resaca;6;1;79616;2439385476
resla;6;resala;6;51;3356416;2439386628
resle;6;resale;6;13;866048;2439386644
resna;6;resana;6;51;3356416;2439386884
resne;6;resane;6;13;866048;2439386900
resca;6;reseca;6;51;3357184;2439401860
resep;6;resepa;6;9;612096;2439403524
resa;6;resea;6;51;3357184;2439405060
rese;6;resee;6;13;866816;2439405076
resid;6;resida;6;9;612096;2439418372
resde;6;reside;6;1;80128;2439418388
resna;6;resina;6;1;80128;2439419652
reson;6;resona;6;50;3299072;2439444228
reson;6;resone;6;8;547328;2439444244
rsta;5;resta;5;51;3348992;2439463040
rste;5;reste;5;13;858624;2439463552
resum;6;resuma;6;9;612096;2439468676
resme;6;resume;6;1;80640;2439468692
rta;4;reta;4;115;7543296;2439516160
retja;6;retaja;6;51;3356416;2439517444
retje;6;retaje;6;13;866048;2439517460
retal;5;retal;5;1;65536;2439517696
retsa;6;retasa;6;51;3356416;2439518596
retse;6;retase;6;13;866048;2439518612
rte;4;rete;4;77;5052928;2439532544
retja;6;reteja;6;9;604672;2439533828
retje;6;reteje;6;13;866816;2439533844
reten;5;reten;5;1;65536;2439534336
retna;6;retina;6;1;80128;2439550724
retra;6;retira;6;51;3356928;2439551236
retre;6;retire;6;13;866560;2439551252
ret;4;ret;4;128;8388608;2439573504
retba;6;retoba;6;51;3356672;2439573764
retbe;6;retobe;6;13;866304;2439573780
retca;6;retoca;6;51;3356672;2439573892
retce;6;retoce;6;13;866304;2439573908
retma;6;retoma;6;51;3356672;2439575172
retme;6;retome;6;13;866304;2439575188
retza;6;retoza;6;51;3356672;2439576836
reta;6;retoa;6;51;3356672;2439577092
rete;6;retoe;6;13;866304;2439577108
rtrae;6;retrae;6;1;72192;2439585940
reun;5;reuna;5;8;542464;2439700608
reunid;6;reunid;6;257;16842752;2439701648
reunr;6;reunir;6;1;84224;2439701704
rev;4;rev;4;64;4194304;2439794688
reve;5;revea;5;9;608000;2439794816
rvean;6;revean;6;257;16849408;2439794872
revla;6;revela;6;51;3357184;2439796228
revle;6;revele;6;13;866816;2439796244
revr;5;rever;5;65;4274688;2439796992
rev;4;rev;4;16448;1077936128;2439811072
revne;6;revine;6;1;80128;2439812884
revra;6;revira;6;51;3356928;2439813380
revre;6;revire;6;13;866560;2439813396
revsa;6;revisa;6;51;3356928;2439813508
revse;6;revise;6;13;866560;2439813524
reviv;6;reviva;6;9;612096;2439813892
revve;6;revive;6;1;80128;2439813908
revca;6;revoca;6;51;3356672;2439836036
ryes;5;reyes;5;12288;805313024;2440190336
rza;4;reza;4;51;3348992;2440302592
rezga;6;rezaga;6;51;3356416;2440303492
rezma;6;rezuma;6;35;2308864;2440386180
rezme;6;rezume;6;5;342784;2440386196
reid;5;reid;5;257;16842752;2440598016
rer;5;reir;5;1;80128;2440599808
ri;3;ria;3;8;534272;2453798912
rce;4;rice;4;13;858368;2454081536
riga;5;riega;5;1;76288;2454352000
rigue;6;riegue;6;4;272896;2454354580
riles;6;rieles;6;12288;805317120;2454373068
rindo;6;riendo;6;1;76288;2454381116
rfa;4;rifa;4;51;3348736;2454458368
rfe;4;rife;4;13;858368;2454474752
rge;4;rige;4;1;71936;2454605824
rij;4;rija;4;9;603904;2454982656
rjan;5;rijan;5;257;16849152;2454984448
rma;4;rima;4;51;3348736;2455375872
rme;4;rime;4;13;858368;2455392256
rind;5;rinda;5;9;608000;2455519360
rndan;6;rindan;6;257;16849152;2455519416
rnde;5;rinde;5;1;71936;2455519872
rpia;5;ripia;5;51;3348736;2455801984
rpie;5;ripie;5;13;858368;2455802496
rza;4;riza;4;51;3348736;2457079808
ri;4;ria;4;9;603904;2457341952
ran;5;rian;5;257;16849152;2457343744
re;4;rie;4;1;71936;2457358336
r;2;ro;2;16641;1090590720;2478833664
rba;4;roba;4;51;3348480;2479099904
rbe;4;robe;4;13;858112;2479116288
rble;5;roble;5;1;71680;2479145600
rob;4;rob;4;16384;1073741824;2479157248
rce;4;roce;4;13;858112;2479247360
roci;5;rocia;5;50;3294976;2479263872
roci;5;rocie;5;8;543232;2479264384
rod;4;roda;4;50;3290880;2479362048
rod;4;rode;4;8;539136;2479378432
rdea;5;rodea;5;51;3348480;2479378560
rdee;5;rodee;5;13;858112;2479379072
roed;4;roed;4;257;16842752;2479505408
ror;4;roer;4;1;76288;2479562752
rog;4;roga;4;50;3290880;2479755264
rogu;5;rogue;5;8;543232;2479837824
roga;5;roiga;5;1;76032;2480042112
rla;4;rola;4;51;3348480;2480410624
rle;4;role;4;13;858112;2480427008
romna;6;romana;6;1;79616;2480543492
romp;5;rompa;5;9;608000;2480603264
rmpan;6;rompan;6;257;16848896;2480603320
rmpe;5;rompe;5;1;71680;2480603776
romped;6;romped;6;257;16842752;2480603792
rompr;6;romper;6;1;84480;2480603848
rnca;5;ronca;5;51;3348480;2480681088
rnce;5;ronce;5;1;71680;2480681600
rncea;6;roncea;6;51;3348480;2480681604
rncee;6;roncee;6;13;858112;2480681620
rncha;6;roncha;6;1;71680;2480681988
rnda;5;ronda;5;51;3348480;2480685184
rnde;5;ronde;5;13;858112;2480685696
rnes;5;rones;5;12288;805312512;2480691584
rnque;6;ronque;6;13;858112;2480741012
rs;3;ros;3;385;25237504;2481324032
rsca;5;rosca;5;51;3348480;2481336448
rsque;6;rosque;6;13;858112;2481396372
rta;4;rota;4;1;71680;2481459200
rotas;5;rotas;5;1;65536;2481461632
rotla;6;rotula;6;51;3357440;2481542660
rotle;6;rotule;6;13;867072;2481542676
rotra;6;rotura;6;51;3357440;2481543428
rotre;6;roture;6;13;867072;2481543444
rza;4;roza;4;51;3348480;2482245632
rzna;5;rozna;5;51;3348480;2482299008
rzne;5;rozne;5;13;858112;2482299520
ra;4;roa;4;1;71680;2482507776
roas;5;roas;5;1;65536;2482510208
rca;4;ruca;4;1;72448;2504396800
rucas;5;rucas;5;1;65536;2504399232
rcha;5;rucha;5;1;72448;2504425600
ruchas;6;ruchas;6;1;65536;2504425676
rcia;5;rucia;5;1;72448;2504429696
rucias;6;rucias;6;1;65536;2504429772
ruda;5;rueda;5;1;76288;2504671360
rude;5;ruede;5;5;338432;2504671872
ruga;5;ruega;5;1;76288;2504683648
rugue;6;ruegue;6;5;338432;2504686228
rfa;4;rufa;4;1;72448;2504790016
rufas;5;rufas;5;1;65536;2504792448
rge;4;ruge;4;1;72448;2504937472
rugid;5;rugid;5;257;16842752;2504954368
rugr;5;rugir;5;1;80128;2504956160
runa;5;ruina;5;1;76032;2505236608
ruinas;6;ruinas;6;1;65536;2505236684
runes;6;ruines;6;12288;805316864;2505237196
ruj;4;ruja;4;9;603904;2505314304
rjan;5;rujan;5;257;16849664;2505316096
rujas;5;rujas;5;1;65536;2505316736
rmba;5;rumba;5;1;72448;2505711744
rumbas;6;rumbas;6;1;65536;2505711820
rmbea;6;rumbea;6;51;3349248;2505712260
rmbee;6;rumbee;6;13;858880;2505712276
rmia;5;rumia;5;51;3349248;2505740416
rmie;5;rumie;5;13;858880;2505740928
rumra;6;rumora;6;51;3356672;2505767172
rumre;6;rumore;6;13;866304;2505767188
rutla;6;rutila;6;35;2308352;2506659332
rutle;6;rutile;6;5;342272;2506659348
sbe;4;sabe;4;1;71424;2554613760
sabed;5;sabed;5;257;16842752;2554614272
sabr;5;saber;5;1;80384;2554616064
sblea;6;sablea;6;51;3348224;2554643076
sblee;6;sablee;6;13;857856;2554643092
sca;4;saca;4;51;3348224;2554728448
scha;5;sacha;5;51;3348224;2554757248
sche;5;sache;5;13;857856;2554757760
scia;5;sacia;5;51;3348224;2554761344
scie;5;sacie;5;13;857856;2554761856
sacud;6;sacuda;6;9;612096;2554810884
sacde;6;sacude;6;1;80640;2554810900
sata;5;saeta;5;1;76288;2555068544
saetas;6;saetas;6;1;65536;2555068620
satea;6;saetea;6;51;3353088;2555069060
satee;6;saetee;6;13;862720;2555069076
sahum;6;sahuma;6;50;3299072;2555467396
sahum;6;sahume;6;8;547328;2555467412
sain;5;saina;5;50;3294976;2555568256
sain;5;saine;5;8;543232;2555568768
sal;3;sal;3;385;25231360;2555904000
sla;4;sala;4;51;3348224;2555908096
slda;5;salda;5;51;3348224;2555920512
slde;5;salde;5;13;857856;2555921024
sle;4;sale;4;13;857856;2555924480
saleg;6;salega;6;32;2119424;2555925380
slga;5;salga;5;9;595712;2555932800
slgan;6;salgan;6;257;16848640;2555932856
salgas;6;salgas;6;1;65536;2555932876
salid;5;salid;5;257;16842752;2555941376
salr;5;salir;5;1;80128;2555943168
salva;6;saliva;6;51;3356928;2555943684
salve;6;salive;6;13;866560;2555943700
sal;4;sal;4;129;8454144;2555965440
slta;5;salta;5;51;3348224;2555986048
slte;5;salte;5;13;857856;2555986560
sltea;6;saltea;6;51;3348224;2555986564
sltee;6;saltee;6;13;857856;2555986580
salda;6;saluda;6;51;3357440;2555990532
salde;6;salude;6;13;867072;2555990548
slva;5;salva;5;51;3348224;2555994240
slve;5;salve;5;13;857856;2555994752
sna;4;sana;4;51;3348224;2556170240
sne;4;sane;4;13;857856;2556186624
snea;5;sanea;5;51;3348224;2556186752
snee;5;sanee;5;13;857856;2556187264
sngra;6;sangra;6;51;3348224;2556197124
sngre;6;sangre;6;13;857856;2556197140
sque;5;saque;5;13;857856;2556646016
squea;6;saquea;6;51;3348224;2556646020
squee;6;saquee;6;13;857856;2556646036
satna;6;satina;6;51;3356928;2556991236
satne;6;satine;6;13;866560;2556991252
satra;6;satura;6;51;3357440;2557040900
satre;6;sature;6;13;867072;2557040916
sazna;6;sazona;6;51;3356672;2557802244
sazne;6;sazone;6;13;866304;2557802260
se;3;sea;3;8;534272;2571239424
sca;4;seca;4;51;3348992;2571505664
sda;4;seda;4;51;3348992;2571636736
sde;4;sede;4;13;858624;2571653120
sedce;6;seduce;6;1;80640;2571719060
seg;4;sega;4;50;3290880;2572029952
segu;5;segue;5;8;543232;2572112512
seguid;6;seguid;6;257;16842752;2572113040
segur;6;seguir;6;1;84224;2572113096
slla;5;sella;5;51;3348992;2572730496
slle;5;selle;5;13;858624;2572731008
sembr;6;sembra;6;50;3299072;2572822788
sembr;6;sembre;6;8;547328;2572822804
semja;6;semeja;6;51;3357184;2572834052
semje;6;semeje;6;13;866816;2572834068
sent;5;senta;5;50;3294976;2573025408
sent;5;sente;5;8;543232;2573025920
sentid;6;sentid;6;257;16842752;2573026448
sentr;6;sentir;6;1;84224;2573026504
sep;4;sepa;4;16393;1074345728;2573209600
span;5;sepan;5;257;16849408;2573211392
sepra;6;separa;6;51;3356416;2573211908
sepre;6;separe;6;13;866048;2573211924
sque;5;seque;5;13;858624;2573423232
sr;3;ser;3;1;72192;2573467648
serna;6;serena;6;51;3357184;2573489924
serne;6;serene;6;13;866816;2573489940
sria;5;seria;5;51;3348992;2573504640
srie;5;serie;5;13;858624;2573505152
serr;5;serra;5;50;3294976;2573541504
serr;5;serre;5;8;543232;2573542016
servid;6;servid;6;257;16842752;2573558928
servr;6;servir;6;1;84224;2573558984
ssea;5;sesea;5;51;3348992;2573619328
ssee;5;sesee;5;13;858624;2573619840
ssga;5;sesga;5;51;3348992;2573627520
ssgue;6;sesgue;6;13;858624;2573630100
sstea;6;sestea;6;51;3348992;2573681284
sstee;6;sestee;6;13;858624;2573681300
sela;6;seala;6;51;3356416;2574784004
sele;6;seale;6;13;866048;2574784020
s;2;s;2;321;21037056;2587885568
si;3;sie;3;4;272896;2588540928
siga;5;siega;5;1;76288;2588569728
sigue;6;siegue;6;4;272896;2588572308
sin;4;sien;4;256;16787968;2588598272
sinta;6;sienta;6;1;76288;2588600836
sinte;6;siente;6;5;338432;2588600852
sirra;6;sierra;6;1;76288;2588616964
sirre;6;sierre;6;5;338432;2588616980
sig;4;siga;4;9;603904;2588807168
sgan;5;sigan;5;257;16849152;2588808960
sigla;6;sigila;6;51;3356928;2588841476
sigle;6;sigile;6;13;866560;2588841492
sgna;5;signa;5;51;3348736;2588860544
sgne;5;signe;5;13;858368;2588861056
sgue;5;sigue;5;1;71936;2588889728
slba;5;silba;5;51;3348736;2589466752
slbe;5;silbe;5;13;858368;2589467264
simla;6;simula;6;51;3357440;2589677060
simle;6;simule;6;13;867072;2589677076
sint;5;sinta;5;8;542464;2589802624
sirv;5;sirva;5;9;608000;2590335104
srvan;6;sirvan;6;257;16849152;2590335160
srve;5;sirve;5;1;71936;2590335616
ss;3;sis;3;129;8460544;2590375936
ssa;4;sisa;4;51;3348736;2590380032
sse;4;sise;4;13;858368;2590396416
ssea;5;sisea;5;51;3348736;2590396544
ssee;5;sisee;5;13;858368;2590397056
sseos;6;siseos;6;1;71936;2590398412
sta;4;sita;4;1;71936;2590511104
sitas;5;sitas;5;1;65536;2590513536
stia;5;sitia;5;51;3348736;2590544000
stie;5;sitie;5;13;858368;2590544512
situ;5;situa;5;50;3294976;2590593152
situ;5;situe;5;8;543232;2590593664
s;2;so;2;257;16848896;2613051392
sosa;5;soasa;5;51;3352320;2613260416
sose;5;soase;5;13;861952;2613260928
sba;4;soba;4;51;3348480;2613317632
sobja;6;sobaja;6;51;3356416;2613318916
sobje;6;sobaje;6;13;866048;2613318932
sbe;4;sobe;4;13;858112;2613334016
sbeos;6;sobeos;6;1;71680;2613336012
sbra;5;sobra;5;115;7542784;2613387392
sbre;5;sobre;5;13;858112;2613387904
soca;4;soca;4;1;65536;2613448704
socpa;6;socapa;6;1;79616;2613450756
socas;5;socas;5;1;65536;2613451136
socva;6;socava;6;51;3356416;2613451524
socve;6;socave;6;13;866048;2613451540
sofca;6;sofoca;6;51;3356672;2613899652
sguea;6;soguea;6;51;3348480;2614055556
sguee;6;soguee;6;13;858112;2614055572
sol;4;sola;4;8;538368;2614628352
solce;6;solace;6;13;866048;2614628756
solpa;6;solapa;6;51;3356416;2614630404
solpe;6;solape;6;13;866048;2614630420
solza;6;solaza;6;51;3356416;2614631684
sold;5;solda;5;50;3294976;2614640768
sold;5;solde;5;8;543232;2614641280
sol;4;sol;4;256;16777216;2614644736
slea;5;solea;5;51;3348480;2614644864
slee;5;solee;5;13;858112;2614645376
solr;5;soler;5;1;80384;2614647040
solta;6;soleta;6;1;80384;2614647300
slfea;6;solfea;6;51;3348480;2614649476
slfee;6;solfee;6;13;858112;2614649492
solda;6;solida;6;51;3356928;2614661636
solde;6;solide;6;13;866560;2614661652
solt;5;solta;5;50;3294976;2614706304
solt;5;solte;5;8;543232;2614706816
som;4;soma;4;257;16856832;2614759424
smbra;6;sombra;6;51;3348480;2614765828
smbre;6;sombre;6;13;858112;2614765844
somet;6;someta;6;9;612096;2614778372
somte;6;somete;6;1;80384;2614778388
son;4;sona;4;50;3290880;2614890496
snda;5;sonda;5;51;3348480;2614902912
snde;5;sonde;5;13;858112;2614903424
sndea;6;sondea;6;51;3348480;2614903428
sndee;6;sondee;6;13;858112;2614903444
son;4;sone;4;8;539136;2614906880
sonri;6;sonria;6;8;546560;2614961284
snsea;6;sonsea;6;51;3348480;2614964868
snsee;6;sonsee;6;13;858112;2614964884
spa;4;sopa;4;51;3348480;2615152640
spe;4;sope;4;77;5052416;2615169024
spea;5;sopea;5;51;3348480;2615169152
spee;5;sopee;5;13;858112;2615169664
sopsa;6;sopesa;6;51;3357184;2615171460
sopse;6;sopese;6;13;866816;2615171476
spla;5;sopla;5;51;3348480;2615197824
sple;5;sople;5;13;858112;2615198336
sopr;5;sopor;5;256;16791552;2615212288
sorb;5;sorba;5;9;608000;2615419008
srban;6;sorban;6;257;16848896;2615419064
srbe;5;sorbe;5;1;71680;2615419520
sorbed;6;sorbed;6;257;16842752;2615419536
sorbr;6;sorber;6;1;84480;2615419592
srna;5;sorna;5;1;71680;2615468160
sornas;6;sornas;6;1;65536;2615468236
srtea;6;sortea;6;51;3348480;2615493252
srtee;6;sortee;6;13;858112;2615493268
soseg;6;sosega;6;50;3299072;2615563140
sta;4;sota;4;1;71680;2615676928
sotas;5;sotas;5;1;65536;2615679360
so;4;soa;4;50;3290880;2616725504
so;4;soe;4;8;539136;2616741888
s;2;su;2;128;8395520;2638217216
sub;4;suba;4;9;603904;2638483456
sban;5;suban;5;257;16849664;2638485248
subs;5;subas;5;256;16791296;2638485888
sbe;4;sube;4;1;72448;2638499840
subid;5;subid;5;257;16842752;2638516736
subr;5;subir;5;1;80128;2638518528
suced;6;suceda;6;9;612096;2638631428
sucde;6;sucede;6;1;80384;2638631444
sda;4;suda;4;51;3349248;2638745600
sde;4;sude;4;13;858880;2638761984
sula;5;suela;5;1;76288;2638921856
sulan;6;suelan;6;257;16853504;2638921912
sulda;6;suelda;6;1;76288;2638922244
sulde;6;suelde;6;5;338432;2638922260
sule;5;suele;5;1;76288;2638922368
sulta;6;suelta;6;1;76288;2638924292
sulte;6;suelte;6;5;338432;2638924308
suna;5;suena;5;1;76288;2638930048
sune;5;suene;5;5;338432;2638930560
sua;5;suea;5;1;76288;2638987392
sue;5;suee;5;5;338432;2638987904
sufr;5;sufra;5;9;608000;2639077504
sfran;6;sufran;6;257;16849664;2639077560
sfre;5;sufre;5;1;72448;2639078016
sufrid;6;sufrid;6;257;16842752;2639078544
sufrr;6;sufrir;6;1;84224;2639078600
sugir;6;sugira;6;8;546560;2639173892
sujta;6;sujeta;6;51;3357184;2639550980
sujte;6;sujete;6;13;866816;2639550996
sma;4;suma;4;59;3873536;2639925248
sman;5;suman;5;257;16849664;2639927040
sme;4;sume;4;13;858880;2639941632
sumid;5;sumid;5;257;16842752;2639958528
sumr;5;sumir;5;1;80128;2639960320
sup;4;supe;4;16384;1073756672;2640334848
supra;6;supera;6;51;3357184;2640337156
supre;6;supere;6;13;866816;2640337172
supl;5;supla;5;9;608000;2640363648
supln;6;suplan;6;257;16860928;2640363704
sple;5;suple;5;1;72448;2640364160
suplid;6;suplid;6;257;16842752;2640364688
suplr;6;suplir;6;1;84224;2640364744
supne;6;supone;6;1;79872;2640377620
supra;6;supura;6;35;2308864;2640402692
supre;6;supure;6;5;342784;2640402708
sr;3;sur;3;256;16784128;2640576512
srca;5;surca;5;51;3349248;2640588928
srge;5;surge;5;1;72448;2640605824
surgid;6;surgid;6;257;16842752;2640606352
surgr;6;surgir;6;1;84224;2640606408
surj;5;surja;5;9;608000;2640617600
srjan;6;surjan;6;257;16849664;2640617656
srque;6;surque;6;13;858880;2640648852
surt;5;surta;5;9;608000;2640658560
srtan;6;surtan;6;257;16849664;2640658616
srte;5;surte;5;1;72448;2640659072
surtid;6;surtid;6;257;16842752;2640659600
surtr;6;surtir;6;1;84224;2640659656
sutra;6;sutura;6;51;3357440;2640926980
sutre;6;suture;6;13;867072;2640926996
t;2;ta;2;16704;1094719232;2688548864
tblea;6;tablea;6;51;3348224;2688860804
tblee;6;tablee;6;13;857856;2688860820
tabla;6;tabula;6;51;3357440;2688898564
table;6;tabule;6;13;867072;2688898580
tca;4;taca;4;1;71424;2688946176
tacas;5;tacas;5;1;65536;2688948608
tcha;5;tacha;5;51;3348224;2688974976
tche;5;tache;5;13;857856;2688975488
tgua;5;tagua;5;1;71424;2689552512
taguas;6;taguas;6;1;65536;2689552588
taima;5;taima;5;1;65536;2689781888
taimas;6;taimas;6;1;65536;2689781964
tja;4;taja;4;51;3348224;2689863680
tje;4;taje;4;13;857856;2689880064
tjea;5;tajea;5;1;71424;2689880192
tajeas;6;tajeas;6;1;65536;2689880268
tla;4;tala;4;51;3348224;2690125824
tald;5;talad;5;16384;1073755904;2690126336
tle;4;tale;4;13;857856;2690142208
tlla;5;talla;5;51;3348224;2690171008
tlle;5;talle;5;13;857856;2690171520
tamce;6;tamice;6;13;866560;2690290068
tamza;6;tamiza;6;51;3356928;2690292996
tntea;6;tantea;6;51;3348224;2690466436
tntee;6;tantee;6;13;857856;2690466452
tpa;4;tapa;4;51;3348224;2690650112
tpe;4;tape;4;13;857856;2690666496
tapia;5;tapia;5;51;3342336;2690683008
tapce;6;tapice;6;13;866560;2690683284
tpie;5;tapie;5;13;857856;2690683520
tapza;6;tapiza;6;51;3356928;2690686212
tapna;6;tapona;6;51;3356672;2690709252
tapne;6;tapone;6;13;866304;2690709268
tapja;6;tapuja;6;51;3357440;2690733316
tapje;6;tapuje;6;13;867072;2690733332
tquea;6;taquea;6;51;3348224;2690863748
tquee;6;taquee;6;13;857856;2690863764
tra;4;tara;4;51;3348224;2690912256
trda;5;tarda;5;51;3348224;2690924672
trde;5;tarde;5;13;857856;2690925184
tre;4;tare;4;13;857856;2690928640
tarfa;6;tarifa;6;51;3356928;2690945796
tarfe;6;tarife;6;13;866560;2690945812
trja;5;tarja;5;51;3348224;2690949248
trje;5;tarje;5;13;857856;2690949760
tsa;4;tasa;4;51;3348224;2691043328
tsca;5;tasca;5;51;3348224;2691051648
tse;4;tase;4;13;857856;2691059712
tsque;6;tasque;6;13;857856;2691111572
tat;4;tate;4;128;8403456;2691190784
tatu;5;tatua;5;50;3294976;2691256448
tatu;5;tatue;5;8;543232;2691256960
tza;4;taza;4;1;71424;2691960832
tazas;5;tazas;5;1;65536;2691963264
ta;4;taa;4;9;595712;2692222976
tan;5;taan;5;257;16848640;2692224768
taas;5;taas;5;1;65536;2692225408
te;4;tae;4;13;857856;2692239360
taed;5;taed;5;257;16842752;2692239872
tar;5;taer;5;1;80384;2692241664
t;2;t;2;453;29687808;2705326080
tcha;5;techa;5;51;3348992;2705752192
tche;5;teche;5;13;858624;2705752704
tclea;6;teclea;6;51;3348992;2705769092
tclee;6;teclee;6;13;858624;2705769108
tdia;5;tedia;5;51;3348992;2705887360
tdie;5;tedie;5;13;858624;2705887872
tja;4;teja;4;59;3873280;2706640896
tjan;5;tejan;5;257;16849408;2706642688
tje;4;teje;4;13;858624;2706657280
tejed;5;tejed;5;257;16842752;2706657792
tejr;5;tejer;5;1;80384;2706659584
tem;4;tema;4;9;603904;2707034112
tman;5;teman;5;257;16849408;2707035904
tembl;6;tembla;6;50;3299072;2707039748
tembl;6;temble;6;8;547328;2707039764
tme;4;teme;4;1;72192;2707050496
temed;5;temed;5;257;16842752;2707051008
temr;5;temer;5;1;80384;2707052800
tmpla;6;templa;6;51;3348992;2707097092
tmple;6;temple;6;13;858624;2707097108
ten;3;ten;3;65;4259840;2707161088
tend;5;tenda;5;8;542464;2707177600
tended;6;tended;6;257;16842752;2707178128
tendr;6;tender;6;1;84480;2707178184
tened;5;tened;5;257;16842752;2707182080
tenr;5;tener;5;1;80384;2707183872
teng;5;tenga;5;9;608000;2707189888
tngan;6;tengan;6;257;16849408;2707189944
tnsa;5;tensa;5;51;3348992;2707239040
tnse;5;tense;5;13;858624;2707239552
tent;5;tenta;5;50;3294976;2707243136
tent;5;tente;5;8;543232;2707243648
trcia;6;tercia;6;51;3348992;2707698820
trcie;6;tercie;6;13;858624;2707698836
trna;5;terna;5;1;72192;2707742848
ternas;6;ternas;6;1;65536;2707742924
trne;5;terne;5;1;72192;2707743360
trrea;6;trrea;6;1;65536;2707759748
trsa;5;tersa;5;1;72192;2707763328
tersas;6;tersas;6;1;65536;2707763404
ts;3;ts;3;256;16777216;2707816448
tsa;4;tesa;4;1;72192;2707820544
tesas;5;tesas;5;1;65536;2707822976
tsta;5;testa;5;51;3348992;2707898496
tste;5;teste;5;13;858624;2707899008
tta;4;teta;4;51;3348992;2707951616
tte;4;tete;4;13;858624;2707968000
teid;5;teid;5;257;16842752;2709033472
ter;5;teir;5;1;80128;2709035264
t;2;ti;2;16769;1098979584;2722103296
tbia;5;tibia;5;51;3348736;2722402432
tbie;5;tibie;5;13;858368;2722402944
tinda;6;tienda;6;1;76288;2722816516
tinde;6;tiende;6;1;76288;2722816532
tine;5;tiene;5;1;76288;2722816640
tinta;6;tienta;6;1;76288;2722818564
tinte;6;tiente;6;5;338432;2722818580
tlda;5;tilda;5;51;3348736;2723692672
tlde;5;tilde;5;13;858368;2723693184
tiln;5;tiln;5;256;16777216;2723714816
tma;4;tima;4;51;3348736;2723811328
tmba;5;timba;5;1;71936;2723815552
timbas;6;timbas;6;1;65536;2723815628
tmbra;6;timbra;6;51;3348736;2723817732
tmbre;6;timbre;6;13;858368;2723817748
tme;4;time;4;13;858368;2723827712
tnca;5;tinca;5;51;3348736;2723950720
tnque;6;tinque;6;13;858368;2724010644
tnta;5;tinta;5;51;3348736;2724020352
tnte;5;tinte;5;13;858368;2724020864
tra;4;tira;4;51;3348736;2724466688
tre;4;tire;4;13;858368;2724483072
tirta;6;tirita;6;51;3356928;2724502020
tirte;6;tirite;6;13;866560;2724502036
titla;6;titila;6;35;2308352;2724763140
title;6;titile;6;5;342272;2724763156
tza;4;tiza;4;1;71936;2725515264
tizas;5;tizas;5;1;65536;2725517696
tzna;5;tizna;5;51;3348736;2725568640
tzne;5;tizne;5;13;858368;2725569152
ti;4;tia;4;9;603904;2725777408
tan;5;tian;5;257;16849152;2725779200
te;4;tie;4;1;71936;2725793792
toa;3;toa;3;1;65536;2747400192
toas;4;toas;4;1;65536;2747478016
tca;4;toca;4;51;3348480;2747666432
tcha;5;tocha;5;1;71680;2747695232
tochas;6;tochas;6;1;65536;2747695308
tlda;5;tolda;5;51;3348480;2748858496
tlde;5;tolde;5;13;858112;2748859008
tol;4;tole;4;16384;1073756672;2748862464
tolra;6;tolera;6;51;3357184;2748864772
tolre;6;tolere;6;13;866816;2748864788
tma;4;toma;4;51;3348480;2748977152
tme;4;tome;4;13;858112;2748993536
tntea;6;tontea;6;51;3348480;2749186692
tntee;6;tontee;6;13;858112;2749186708
tpa;4;topa;4;51;3348480;2749370368
tpe;4;tope;4;269;17635328;2749386752
topta;6;topeta;6;51;3357184;2749389316
topte;6;topete;6;13;866816;2749389332
tque;5;toque;5;13;858112;2749584000
torced;6;torced;6;257;16842752;2749641360
torcr;6;torcer;6;1;84480;2749641416
trea;5;torea;5;51;3348480;2749649024
tree;5;toree;5;13;858112;2749649536
trna;5;torna;5;51;3348480;2749685888
trne;5;torne;5;13;858112;2749686400
trnea;6;tornea;6;51;3348480;2749686404
trnee;6;tornee;6;13;858112;2749686420
trra;5;torra;5;51;3348480;2749702272
trre;5;torre;5;13;858112;2749702784
torz;5;torza;5;8;542464;2749735040
ts;3;tos;3;9216;603985920;2749759488
tos;4;tosa;4;9;603904;2749763584
tsan;5;tosan;5;257;16848896;2749765376
tse;4;tose;4;1;71680;2749779968
tosed;5;tosed;5;257;16842752;2749780480
tosr;5;toser;5;1;80384;2749782272
tost;5;tosta;5;50;3294976;2749841536
tost;5;toste;5;8;543232;2749842048
trba;5;traba;5;51;3352320;2759991424
trbe;5;trabe;5;13;861952;2759991936
trce;5;trace;5;13;861952;2759996032
tract;6;tracto;6;16384;1073764352;2759998012
traed;5;traed;5;257;16842752;2760004096
trar;5;traer;5;1;80384;2760005888
trga;5;traga;5;51;3352320;2760011904
trgue;6;trague;6;13;861952;2760014484
traig;6;traiga;6;9;612096;2760020868
traje;5;traje;5;1;65536;2760024704
trjea;6;trajea;6;51;3352320;2760024708
trjee;6;trajee;6;13;861952;2760024724
trma;5;trama;5;51;3352320;2760036480
trme;5;trame;5;13;861952;2760036992
trnca;6;tranca;6;51;3352320;2760040836
trnce;6;trance;6;1;75520;2760040852
trnsa;6;transa;6;51;3352320;2760042884
trnse;6;transe;6;13;861952;2760042900
trpea;6;trapea;6;51;3352320;2760049284
trpee;6;trapee;6;13;861952;2760049300
trast;6;traste;6;65;4282880;2760063508
trta;5;trata;5;51;3352320;2760065152
trte;5;trate;5;13;861952;2760065664
trama;6;trauma;6;1;80640;2760070788
trza;5;traza;5;51;3352320;2760089728
trgua;6;tregua;6;1;76288;2760538756
trnce;6;trence;6;13;862720;2760565140
trnza;6;trenza;6;51;3353088;2760568068
trpa;5;trepa;5;51;3353088;2760573056
trpe;5;trepe;5;13;862720;2760573568
tri;4;tria;4;50;3290880;2761035776
tribu;5;tribu;5;257;16842752;2761042560
tri;4;trie;4;8;539136;2761052160
trlla;6;trilla;6;51;3352832;2761082372
trlle;6;trille;6;13;862464;2761082388
trna;5;trina;5;51;3352832;2761089152
trnca;6;trinca;6;51;3352832;2761089412
trne;5;trine;5;13;862464;2761089664
trs;4;tris;4;9217;604055808;2761109504
trsca;6;trisca;6;51;3352832;2761109892
troc;5;troca;5;50;3294976;2761830528
trce;5;troce;5;13;862208;2761831040
trcea;6;trocea;6;51;3352576;2761831044
trcee;6;trocee;6;13;862208;2761831060
trcha;6;trocha;6;51;3352576;2761831428
trche;6;troche;6;13;862208;2761831444
trmpa;6;trompa;6;1;75776;2761873412
tron;5;trona;5;50;3294976;2761875584
trnca;6;tronca;6;51;3352576;2761875844
trnce;6;tronce;6;13;862208;2761875860
tron;5;trone;5;16392;1074285056;2761876096
trnza;6;tronza;6;51;3352576;2761878788
tropel;6;tropel;6;1;65536;2761884336
troqu;6;troque;6;8;547328;2761890452
trta;5;trota;5;51;3352576;2761900160
trte;5;trote;5;13;862208;2761900672
trva;5;trova;5;51;3352576;2761908352
trve;5;trove;5;13;862208;2761908864
trza;5;troza;5;51;3352576;2761924736
trca;5;truca;5;51;3353344;2762616960
truca;6;trueca;6;1;80384;2762625412
truna;6;truena;6;1;80384;2762626820
trune;6;truene;6;5;342528;2762626836
trfa;5;trufa;5;51;3353344;2762629248
trfe;5;trufe;5;13;862976;2762629760
trlla;6;trulla;6;1;76544;2762655236
trnca;6;trunca;6;51;3353344;2762662276
trque;6;truque;6;13;862976;2762676884
t;2;t;2;16704;1094713344;2772434944
turce;6;tuerce;6;1;76288;2773164436
turza;6;tuerza;6;1;76288;2773167364
tusta;6;tuesta;6;1;76288;2773170692
tuste;6;tueste;6;5;338432;2773170708
tull;5;tulla;5;9;608000;2774057088
tllan;6;tullan;6;257;16849664;2774057144
tlle;5;tulle;5;1;72448;2774057600
tullid;6;tullid;6;257;16842752;2774058128
tullr;6;tullir;6;1;84224;2774058184
tmba;5;tumba;5;51;3349248;2774147200
tmbe;5;tumbe;5;13;858880;2774147712
tna;4;tuna;4;1;72448;2774274048
tunas;5;tunas;5;1;65536;2774276480
tund;5;tunda;5;9;608000;2774286464
tndan;6;tundan;6;257;16849664;2774286520
tnde;5;tunde;5;1;72448;2774286976
tndea;6;tundea;6;51;3349248;2774286980
tndee;6;tundee;6;13;858880;2774286996
tundid;6;tundid;6;257;16842752;2774287504
tundr;6;tundir;6;1;84224;2774287560
tnea;5;tunea;5;51;3349248;2774290560
tnee;5;tunee;5;13;858880;2774291072
tup;4;tupa;4;9;603904;2774536192
tpan;5;tupan;5;257;16849664;2774537984
tpe;4;tupe;4;1;72448;2774552576
tupid;5;tupid;5;257;16842752;2774569472
tupr;5;tupir;5;1;80128;2774571264
trba;5;turba;5;51;3349248;2774802560
trbe;5;turbe;5;13;858880;2774803072
trbia;6;turbia;6;1;72448;2774803588
trna;5;turna;5;51;3349248;2774851712
trne;5;turne;5;13;858880;2774852224
trra;5;turra;5;51;3349248;2774868096
trre;5;turre;5;13;858880;2774868608
tsa;4;tusa;4;51;3349248;2774929408
tse;4;tuse;4;13;858880;2774945792
ttea;5;tutea;5;51;3349248;2775076992
ttee;5;tutee;5;13;858880;2775077504
tutla;6;tutela;6;33;2177536;2775078404
tutra;6;tutora;6;1;79872;2775120132
;1;u;1;64;4197120;2818572288
ubca;5;ubica;5;51;3352832;2828152960
ubque;6;ubique;6;13;862464;2828212884
ufna;5;ufana;5;51;3352320;2843926656
ufne;5;ufane;5;13;861952;2843927168
ulcra;6;ulcera;6;35;2308608;2869319940
ulcre;6;ulcere;6;5;342528;2869319956
ultma;6;ultima;6;51;3356928;2871563908
ultme;6;ultime;6;13;866560;2871563924
ulla;5;ulula;5;35;2304768;2871705728
ulle;5;ulule;5;5;338688;2871706240
n;2;un;2;256;16780032;2877292544
un;3;una;3;9;599808;2877423616
nan;4;unan;4;257;16845568;2877480960
nce;4;unce;4;1;68352;2877706240
uncid;5;uncid;5;257;16842752;2877723136
uncr;5;uncir;5;1;80128;2877724928
undla;6;undula;6;35;2308864;2877904388
undle;6;undule;6;5;342784;2877904404
ne;3;une;3;1;68352;2877947904
nge;4;unge;4;1;68352;2878230528
ungid;5;ungid;5;257;16842752;2878247424
ungr;5;ungir;5;1;80128;2878249216
unid;4;unid;4;257;16842752;2878488576
unr;4;unir;4;1;76032;2878545920
unj;4;unja;4;9;603904;2878607360
njan;5;unjan;5;257;16845568;2878609152
nta;4;unta;4;51;3345152;2879918080
nte;4;unte;4;13;854784;2879934464
unz;4;unza;4;9;603904;2880704512
nzan;5;unzan;5;257;16845568;2880706304
pa;3;upa;3;51;3345152;2885812224
pe;3;upe;3;13;854784;2886336512
urd;4;urda;4;9;603904;2894598144
rdan;5;urdan;5;257;16845568;2894599936
rde;4;urde;4;1;68352;2894614528
urdid;5;urdid;5;257;16842752;2894631424
urdr;5;urdir;5;1;80128;2894633216
rge;4;urge;4;1;68352;2895007744
urgid;5;urgid;5;257;16842752;2895024640
urgr;5;urgir;5;1;80128;2895026432
urj;4;urja;4;9;603904;2895384576
rjan;5;urjan;5;257;16845568;2895386368
sa;3;usa;3;51;3345152;2898395136
se;3;use;3;13;854784;2898919424
usra;5;usura;5;1;76544;2901090432
usuras;6;usuras;6;1;65536;2901090508
usrea;6;usurea;6;51;3353344;2901090948
usree;6;usuree;6;13;862976;2901090964
usrpa;6;usurpa;6;51;3353344;2901092356
usrpe;6;usurpe;6;13;862976;2901092372
a;3;ua;3;9;592640;2936143872
an;4;uan;4;257;16845568;2936201216
uas;4;uas;4;1;65536;2936221696
e;3;ue;3;5;330496;2936668160
undo;6;uendo;6;1;76288;2936726076
uid;4;uid;4;257;16842752;2937208832
ur;4;uir;4;1;76032;2937266176
v;2;va;2;16384;1073747712;2956984320
vca;4;vaca;4;51;3348224;2957381632
vaci;5;vacia;5;50;3294976;2957414528
vaci;5;vacie;5;8;543232;2957415040
vacla;6;vacila;6;51;3356928;2957415940
vacle;6;vacile;6;13;866560;2957415956
vacna;6;vacuna;6;51;3357440;2957465348
vacne;6;vacune;6;13;867072;2957465364
vdea;5;vadea;5;51;3348224;2957529216
vdee;5;vadee;5;13;857856;2957529728
vga;4;vaga;4;51;3348224;2957905920
vgue;5;vague;5;13;857856;2957988480
vhea;5;vahea;5;51;3348224;2958053504
vhee;5;vahee;5;13;857856;2958054016
vle;4;vale;4;1;71424;2958577664
valed;5;valed;5;257;16842752;2958578176
valr;5;valer;5;1;80384;2958579968
valg;5;valga;5;9;608000;2958585984
vlgan;6;valgan;6;257;16848640;2958586040
valda;6;valida;6;51;3356928;2958594564
valde;6;valide;6;13;866560;2958594580
vlla;5;valla;5;51;3348224;2958606464
vlle;5;valle;5;13;857856;2958606976
valna;6;valona;6;51;3356672;2958620420
valne;6;valone;6;13;866304;2958620436
valra;6;valora;6;51;3356672;2958620932
valre;6;valore;6;13;866304;2958620948
vals;4;vals;4;9217;604045312;2958635008
vlses;6;valses;6;4096;268441344;2958635724
vna;4;vana;4;1;71424;2958823424
vanas;5;vanas;5;1;65536;2958825856
vapra;6;vapora;6;51;3356672;2959145220
vapre;6;vapore;6;13;866304;2959145236
vque;5;vaque;5;13;857856;2959299200
vquea;6;vaquea;6;51;3348224;2959299204
vquee;6;vaquee;6;13;857856;2959299220
vra;4;vara;4;51;3348224;2959347712
vre;4;vare;4;13;857856;2959364096
vrea;5;varea;5;51;3348224;2959364224
vree;5;varee;5;13;857856;2959364736
vreos;6;vareos;6;1;71424;2959366092
vari;5;varia;5;50;3294976;2959380608
vari;5;varie;5;8;543232;2959381120
vs;3;vas;3;257;16848640;2959474688
vsta;5;vasta;5;1;71424;2959556736
vastas;6;vastas;6;1;65536;2959556812
vay;4;vaya;4;9;603904;2960265216
vyan;5;vayan;5;257;16848640;2960267008
ve;2;ve;2;260;17039360;2973761536
ve;3;vea;3;8;534272;2973892608
vda;4;veda;4;51;3348992;2974289920
vde;4;vede;4;13;858624;2974306304
vegta;6;vegeta;6;51;3357184;2974702084
vegte;6;vegete;6;13;866816;2974702100
vja;4;veja;4;51;3348992;2975076352
vje;4;veje;4;13;858624;2975092736
vla;4;vela;4;51;3348992;2975338496
vle;4;vele;4;13;858624;2975354880
ven;3;ven;3;1;65536;2975596544
vna;4;vena;4;1;72192;2975600640
venas;5;venas;5;1;65536;2975603072
vnce;5;vence;5;1;72192;2975609472
venced;6;venced;6;257;16842752;2975609488
vencr;6;vencer;6;1;84480;2975609544
vnda;5;venda;5;59;3873280;2975613056
vndan;6;vendan;6;257;16849408;2975613112
vnde;5;vende;5;141;9247232;2975613568
vended;6;vended;6;257;16842752;2975613584
vendr;6;vender;6;1;84480;2975613640
venra;6;venera;6;51;3357184;2975619332
venre;6;venere;6;13;866816;2975619348
vnga;5;venga;5;59;3873280;2975625344
vngan;6;vengan;6;257;16849408;2975625400
vngue;6;vengue;6;13;858624;2975627924
venid;5;venid;5;257;16842752;2975633920
venr;5;venir;5;1;80128;2975635712
venta;5;venta;5;1;65536;2975678592
ventas;6;ventas;6;1;65536;2975678668
vntea;6;ventea;6;51;3348992;2975679108
vntee;6;ventee;6;13;858624;2975679124
venz;5;venza;5;9;608000;2975703168
vnzan;6;venzan;6;257;16849408;2975703224
vr;3;ver;3;65;4266496;2976120832
vrdea;6;verdea;6;51;3348992;2976137860
vrdee;6;verdee;6;13;858624;2976137876
vrsa;5;versa;5;51;3348992;2976198784
vrse;5;verse;5;13;858624;2976199296
vert;5;verta;5;8;542464;2976202880
verted;6;verted;6;257;16842752;2976203408
vertr;6;verter;6;1;84480;2976203464
vestid;6;vestid;6;257;16842752;2976334992
vestr;6;vestir;6;1;84224;2976335048
vta;4;veta;4;51;3348992;2976387072
vte;4;vete;4;13;858624;2976403456
vtea;5;vetea;5;51;3348992;2976403584
vtee;5;vetee;5;13;858624;2976404096
v;2;vi;2;16705;1094785280;2990538752
vija;5;viaja;5;51;3352320;2990710912
vije;5;viaje;5;13;861952;2990711424
vbra;5;vibra;5;51;3348736;2990874752
vbre;5;vibre;5;13;858368;2990875264
vcia;5;vicia;5;51;3348736;2990968960
vcie;5;vicie;5;13;858368;2990969472
vdria;6;vidria;6;51;3348736;2991137924
vdrie;6;vidrie;6;13;858368;2991137940
vindo;6;viendo;6;1;76288;2991252028
vine;5;viene;5;1;76288;2991252096
virta;6;vierta;6;1;76288;2991270404
virte;6;vierte;6;1;76288;2991270420
vigla;6;vigila;6;51;3356928;2991494660
vigle;6;vigile;6;13;866560;2991494676
vig;4;vigo;4;16384;1073756160;2991517696
vigra;6;vigora;6;51;3356672;2991520004
vigre;6;vigore;6;13;866304;2991520020
vila;5;viola;5;51;3352576;2992554112
vile;5;viole;5;13;862208;2992554624
violn;6;violen;6;256;16796160;2992554680
vra;4;vira;4;51;3348736;2992902144
vre;4;vire;4;13;858368;2992918528
vsa;4;visa;4;51;3348736;2993033216
vse;4;vise;4;13;858368;2993049600
vista;6;visita;6;51;3356928;2993068548
viste;6;visite;6;13;866560;2993068564
vist;5;vista;5;9;608000;2993111168
vstan;6;vistan;6;257;16849152;2993111224
vste;5;viste;5;1;71936;2993111680
vital;5;vital;5;1;65536;2993165824
viv;4;viva;4;9;603904;2993426432
vvan;5;vivan;5;257;16849152;2993428224
vve;4;vive;4;1;71936;2993442816
vivid;5;vivid;5;257;16842752;2993459712
vivr;5;vivir;5;1;80128;2993461504
vcea;5;vocea;5;51;3348480;3016118400
vcee;5;vocee;5;13;858112;3016118912
vol;4;vola;4;50;3290880;3017281536
volc;5;volca;5;50;3294976;3017289856
vol;4;vole;4;8;539136;3017297920
vlea;5;volea;5;51;3348480;3017298048
vlee;5;volee;5;13;858112;3017298560
volqu;6;volque;6;8;547328;3017349780
vltea;6;voltea;6;51;3348480;3017360004
vltee;6;voltee;6;13;858112;3017360020
volv;5;volva;5;8;542464;3017367680
volved;6;volved;6;257;16842752;3017368208
volvr;6;volver;6;1;84480;3017368264
vomta;6;vomita;6;51;3356928;3017447940
vomte;6;vomite;6;13;866560;3017447956
vsea;5;vosea;5;51;3348480;3018215552
vsee;5;vosee;5;13;858112;3018216064
vta;4;vota;4;51;3348480;3018330112
vte;4;vote;4;13;858112;3018346496
vula;5;vuela;5;1;76288;3041575040
vulca;6;vuelca;6;1;76288;3041575300
vule;5;vuele;5;5;338432;3041575552
vulva;6;vuelva;6;1;76288;3041577732
vulve;6;vuelve;6;1;76288;3041577748
abalnce;8;abalance;8;13;870144;613264397476823040
abalnza;8;abalanza;8;51;3360512;613264409757745152
abaldna;8;abaldona;8;51;3364864;613266069762605056
abaldne;8;abaldone;8;13;874496;613266069829713920
ableos;7;abaleos;7;1;75520;613266622185996288
abalce;7;abalice;7;13;870656;613268607534628864
abalza;7;abaliza;7;51;3361024;613269000524136448
aballsta;9;aballesta;9;51;3365376;613270299014070272
aballste;9;aballeste;9;13;875008;613270299016167424
abandra;8;abandera;8;51;3365376;613301084483485696
abandre;8;abandere;8;13;875008;613301084550594560
abanderce;10;abanderice;10;13;882944;613301084619358208
abanderza;10;abanderiza;10;51;3373312;613301084631351296
abandna;8;abandona;8;51;3364864;613301254134693888
abandne;8;abandone;8;13;874496;613301254201802752
abanca;7;abanica;7;51;3361024;613303789759234048
abanque;8;abanique;8;13;870656;613304041098706944
abanqueos;10;abaniqueos;10;1;84224;613304041106882560
abarja;7;abaraja;7;51;3360512;613369880715984896
abarje;7;abaraje;7;13;870144;613369882863468544
abarta;7;abarata;7;51;3360512;613370052514676736
abarte;7;abarate;7;13;870144;613370054662160384
abrque;7;abarque;7;13;861952;613378867935051776
abarqulla;10;abarquilla;10;51;3369216;613378870290169856
abarqulle;10;abarquille;10;13;878848;613378870290235392
abarrca;8;abarraca;8;51;3364608;613379073036517376
abarrja;8;abarraja;8;51;3364608;613379076794613760
abarrje;8;abarraje;8;13;874240;613379076861722624
abrran;7;abarran;7;257;16852736;613379078925320192
abarrnca;9;abarranca;9;51;3364608;613379078976176128
abarrnque;10;abarranque;10;13;874240;613379079221624832
abarrque;9;abarraque;9;13;874240;613379080890875904
abarrta;8;abarrota;8;51;3364864;613379322681491456
abarrte;8;abarrote;8;13;874496;613379322748600320
abastrda;9;abastarda;9;51;3364608;613397772838109184
abastrde;9;abastarde;9;13;874240;613397772840206336
abastce;8;abastece;8;1;88576;613397833520775168
abasteced;9;abasteced;9;257;16842752;613397833522872320
abastecr;9;abastecer;9;1;96768;613397833530212352
abastecindo;12;abasteciendo;12;1;100864;613397833590737136
abastezc;9;abastezca;9;9;624384;613397845835776000
abastzcan;10;abastezcan;10;257;16865792;613397845836005376
abastina;9;abastiona;9;51;3368960;613397908834222080
abastine;9;abastione;9;13;878592;613397908836319232
abatna;7;abatana;7;51;3360512;613405133807550464
abatne;7;abatane;7;13;870144;613405135955034112
abatta;7;abatata;7;51;3360512;613405236886765568
abatte;7;abatate;7;13;870144;613405239034249216
abatindo;9;abatiendo;9;1;88576;613409384289533952
abdque;7;abdique;7;13;866560;614909388120915968
abejnea;8;abejonea;8;51;3360768;615488710506446848
abejnee;8;abejonee;8;13;870400;615488710573555712
abemla;7;abemola;7;51;3360768;615541450540580864
abemle;7;abemole;7;13;870400;615541452688064512
abrrea;7;aberrea;7;51;3353088;615630940479160320
abrree;7;aberree;7;13;862720;615630942626643968
abstia;7;abestia;7;51;3353088;615649700896309248
abstie;7;abestie;7;13;862720;615649703043792896
abetna;7;abetuna;7;51;3361536;615667928737513472
abetne;7;abetune;7;13;871168;615667930884997120
abigrra;8;abigarra;8;51;3360512;617680112879403008
abigrre;8;abigarre;8;13;870144;617680112946511872
abisgra;8;abisagra;8;51;3360512;617891030133374976
abisgre;8;abisagre;8;13;870144;617891030200483840
ablnda;7;ablanda;7;59;3880704;619270306787229696
ablndan;8;ablandan;8;257;16856832;619270307022110720
ablnde;7;ablande;7;13;866048;619270308934713344
ablandce;9;ablandece;9;1;92672;619270308987666432
ablandeced;10;ablandeced;10;257;16842752;619270308987731968
ablandecr;10;ablandecer;10;1;100864;619270308987961344
ablandezc;10;ablandezca;10;9;628480;619270309372510208
ablandzcan;11;ablandezcan;11;257;16869888;619270309372517376
abnegu;7;abnegue;7;8;551424;620463021352812544
abniga;7;abniega;7;1;84480;620532047919710208
abnigue;8;abniegue;8;4;281088;620532058741014528
abocda;7;abocada;7;1;83712;620987194194001920
abocadas;8;abocadas;8;1;65536;620987194512769024
abocrda;8;abocarda;8;51;3360512;620987436339560448
abocrde;8;abocarde;8;13;870144;620987436406669312
abocta;7;aboceta;7;51;3361280;620989668095164416
abocte;7;abocete;7;13;870912;620989670242648064
abochrna;9;abochorna;9;51;3364864;620991240825470976
abochrne;9;abochorne;9;13;874496;620991240827568128
abocna;7;abocina;7;51;3361024;620991764039204864
abocne;7;abocine;7;13;870656;620991766186688512
aboftea;8;abofetea;8;51;3361280;621042446817558528
aboftee;8;abofetee;8;13;870912;621042446884667392
abolindo;9;aboliendo;9;1;88576;621149946149076992
abollna;8;abollona;8;51;3364864;621151767157014528
abollne;8;abollone;8;13;874496;621151767224123392
abomna;7;abomina;7;51;3361024;621167685899649024
abomne;7;abomine;7;13;870656;621167688047132672
abonnce;8;abonance;8;13;870144;621180881196810240
abonnza;8;abonanza;8;51;3360512;621180893477732352
aborrsca;9;aborrasca;9;35;2316032;621260381008429056
aborrsque;10;aborrasque;10;5;349952;621260381253877760
aborrce;8;aborrece;8;1;88576;621260441171001344
aborreced;9;aborreced;9;257;16842752;621260441173098496
aborrecr;9;aborrecer;9;1;96768;621260441180438528
aborrecindo;12;aborreciendo;12;1;100864;621260441240963312
aborrga;8;aborrega;8;51;3365376;621260443251376128
aborrgue;9;aborregue;9;13;875008;621260443589541888
aborrezc;9;aborrezca;9;9;624384;621260453486002176
aborrzcan;10;aborrezcan;10;257;16865792;621260453486231552
aborja;7;aboruja;7;51;3361536;621262175180161024
aborje;7;aboruje;7;13;871168;621262177327644672
abotga;7;abotaga;7;51;3360512;621286312896364544
abotgue;8;abotague;8;13;870144;621286323717668864
abotna;7;abotona;7;51;3360768;621294129736843264
abotne;7;abotone;7;13;870400;621294131884326912
abovda;7;aboveda;7;51;3361280;621323644752101376
abovde;7;abovede;7;13;870912;621323646899585024
abozla;7;abozala;7;51;3360512;621391951911976960
abozle;7;abozale;7;13;870144;621391954059460608
abrvia;7;abrevia;7;51;3357184;622722859197792256
abrvie;7;abrevie;7;13;866816;622722861345275904
abribna;8;abribona;8;51;3364864;622782342901006336
abribne;8;abribone;8;13;874496;622782342968115200
abrindo;8;abriendo;8;1;84480;622783969854750720
abrgue;7;abrigue;7;13;866560;622785189910675456
abrillnta;10;abrillanta;10;51;3368704;622787782168821760
abrillnte;10;abrillante;10;13;878336;622787782168887296
abrcha;7;abrocha;7;51;3356672;622888318517903360
abrche;7;abroche;7;13;866304;622888320665387008
abrgue;7;abrogue;7;13;866304;622890743026941952
abrnca;7;abronca;7;51;3356672;622894279932510208
abrnque;8;abronque;8;13;866304;622894531271983104
abroqula;9;abroquela;9;51;3369472;622896240786931712
abroqule;9;abroquele;9;13;879104;622896240789028864
absolv;7;absolva;7;8;550656;623456456791818240
absolved;8;absolved;8;257;16842752;623456459006410752
absolvr;8;absolver;8;1;92672;623456459241291776
absolvindo;11;absolviendo;11;1;96768;623456461178084864
absorb;7;absorba;7;9;616192;623459411729317888
absrban;8;absorban;8;257;16857088;623459411964198912
absrbe;7;absorbe;7;1;79872;623459413876801536
absorbed;8;absorbed;8;257;16842752;623459413943910400
absorbr;8;absorber;8;1;92672;623459414178791424
absorbindo;11;absorbiendo;11;1;96768;623459416115584512
absrta;7;absorta;7;51;3356672;623459720966963200
absrte;7;absorte;7;13;866304;623459723114446848
abstened;8;abstened;8;257;16842752;623540434206982144
abstenr;8;abstener;8;1;92672;623540434441863168
absteng;8;abstenga;8;9;620288;623540435230392320
abstngan;9;abstengan;9;257;16861696;623540435237732352
abstenindo;11;absteniendo;11;1;96768;623540436378656256
abstine;8;abstiene;8;1;88576;623542483460030464
bstrae;7;abstrae;7;1;67328;623547357627154432
abstraed;8;abstraed;8;257;16842752;623547357694263296
abstrar;8;abstraer;8;1;92672;623547357929144320
abstraig;9;abstraiga;9;9;624384;623547359892602880
abstragan;10;abstraigan;10;257;16869632;623547359892832256
abstrayndo;11;abstrayendo;11;1;96768;623547368455872000
absulva;8;absuelva;8;1;84480;623558001109762048
absulvan;9;absuelvan;9;257;16861696;623558001117102080
absulve;8;absuelve;8;1;84480;623558001176870912
abchea;7;abuchea;7;51;3353344;624368759385096192
abchee;7;abuchee;7;13;862976;624368761532579840
aburgusa;9;aburguesa;9;51;3369472;624632369764630528
aburguse;9;aburguese;9;13;879104;624632369766727680
abrran;7;aburran;7;257;16853760;624638077993746432
aburras;7;aburras;7;1;65536;624638080678100992
aburrid;7;aburrid;7;257;16842752;624638210063990784
aburrindo;10;aburriendo;10;1;92672;624638210838085632
aburrr;7;aburrir;7;1;88320;624638217580183552
acabla;7;acabala;7;51;3360512;631102838608494592
acable;7;acabale;7;13;870144;631102840755978240
acablla;8;acaballa;8;35;2311936;631102844530851840
acablle;8;acaballe;8;16389;1074087680;631102844597960704
acablda;8;acabilda;8;51;3361024;631107238282395648
acablde;8;acabilde;8;13;870656;631107238349504512
acachtea;9;acachetea;9;51;3365376;631124169111109632
acachtee;9;acachetee;9;13;875008;631124169113206784
academce;9;academice;9;13;878848;631140243531628544
academza;9;academiza;9;51;3369216;631140243915407360
acaecr;7;acaecer;7;1;88576;631156603545976832
acaecindo;10;acaeciendo;10;1;92672;631156665523355648
acazca;7;acaezca;7;1;80384;631169204443152384
acazcan;8;acaezcan;8;257;16857600;631169204678033408
acalmbra;9;acalambra;9;51;3360512;631278778488193024
acalmbre;9;acalambre;9;13;870144;631278778490290176
acalln;7;acallan;7;257;16865024;631284625783652352
acalra;7;acalora;7;51;3360768;631286560129548288
acalre;7;acalore;7;13;870400;631286562277031936
acampna;8;acampana;8;51;3364608;631304417009729536
acampne;8;acampane;8;13;874240;631304417076838400
acanla;7;acanala;7;51;3360512;631313944841027584
acanle;7;acanale;7;13;870144;631313946988511232
acanlla;8;acanalla;8;51;3360512;631313950763384832
acanlle;8;acanalle;8;13;870144;631313950830493696
acantna;8;acantona;8;51;3364864;631324448737198080
acantne;8;acantone;8;13;874496;631324448804306944
acapra;7;acapara;7;51;3360512;631349232292331520
acapre;7;acapare;7;13;870144;631349234439815168
acaramla;9;acaramela;9;51;3369472;631384333114408960
acaramle;9;acaramele;9;13;879104;631384333116506112
acardenla;10;acardenala;10;51;3372800;631385849595969536
acardenle;10;acardenale;10;13;882432;631385849596035072
acarcia;8;acaricia;8;51;3361024;631388561324638208
acarcie;8;acaricie;8;13;870656;631388561391747072
acara;7;acaria;7;51;3361024;631388986509623296
acare;7;acarie;7;13;870656;631388988657106944
acrrea;7;acarrea;7;51;3352320;631393539174957056
acrree;7;acarree;7;13;861952;631393541322440704
acrreos;8;acarreos;8;1;75520;631393547009916928
acarra;8;acarroa;8;51;3364864;631393725485940736
acarre;8;acarroe;8;13;874496;631393725553049600
acartna;8;acartona;8;51;3364864;631394817481375744
acartne;8;acartone;8;13;874496;631394817548484608
acatrra;8;acatarra;8;51;3360512;631419610180091904
acatrre;8;acatarre;8;13;870144;631419610247200768
acaudla;8;acaudala;8;51;3364608;631438556354576384
acaudle;8;acaudale;8;13;874240;631438556421685248
acaudlla;9;acaudilla;9;51;3365120;631438693978603520
acaudlle;9;acaudille;9;13;874752;631438693980700672
accdan;7;accedan;7;257;16857600;632282982341672960
acceded;7;acceded;7;257;16842752;632283045692440576
accedr;7;acceder;7;1;88576;632283053208633344
accedindo;10;accediendo;10;1;92672;632283115186012160
accidnta;9;accidenta;9;51;3365376;632353420141395968
accidnte;9;accidente;9;13;875008;632353420143493120
accina;7;acciona;7;51;3360768;632359614758780928
accine;7;accione;7;13;870400;632359616906264576
acecna;7;acecina;7;51;3361024;633376663014473728
acecne;7;acecine;7;13;870656;633376665161957376
acelra;7;acelera;7;51;3361280;633532862385094656
acelre;7;acelere;7;13;870912;633532864532578304
acndra;7;acendra;7;51;3353088;633567497001369600
acndre;7;acendre;7;13;862720;633567499148853248
acensu;7;acensua;7;50;3303168;633575794878185472
acensu;7;acensue;7;8;551424;633575797025669120
acentu;7;acentua;7;50;3303168;633576344633999360
acentu;7;acentue;7;8;551424;633576346781483008
acquia;7;acequia;7;51;3353088;633629464789516288
acquie;7;acequie;7;13;862720;633629466936999936
acrque;7;acerque;7;13;862720;633645066258219008
acerrja;8;acerroja;8;51;3364864;633645515635949568
acerrje;8;acerroje;8;13;874496;633645515703058432
acetifca;9;acetifica;9;51;3369216;633675597084098560
acetifque;10;acetifique;10;13;878848;633675597329547264
acetrna;8;acetrina;8;51;3365120;633680599076306944
acetrne;8;acetrine;8;13;874752;633680599143415808
achabacna;10;achabacana;10;51;3372800;635026257971527680
achabacne;10;achabacane;10;13;882432;635026257971593216
achaflna;9;achaflana;9;51;3368704;635028645110874112
achaflne;9;achaflane;9;13;878336;635028645112971264
achmpa;7;achampa;7;51;3356416;635032561885642752
achmpe;7;achampe;7;13;866048;635032564033126400
achncha;8;achancha;8;51;3356416;635032892078030848
achnche;8;achanche;8;13;866048;635032892145139712
achaprra;9;achaparra;9;51;3364608;635033962884366336
achaprre;9;achaparre;9;13;874240;635033962886463488
achque;7;achaque;7;13;866048;635034848955727872
acharla;8;acharola;8;51;3364864;635035299407200256
acharle;8;acharole;8;13;874496;635035299474309120
achichrra;10;achicharra;10;51;3368704;635167664688349184
achichrre;10;achicharre;10;13;878336;635167664688414720
achgua;7;achigua;7;51;3356928;635170086738460672
achig;7;achige;7;8;551424;635170088885944320
achque;7;achique;7;13;866560;635175586444083200
achiquta;9;achiquita;9;51;3369216;635175588927635456
achiqute;9;achiquite;9;13;878848;635175588929732608
achcha;7;achocha;7;51;3356672;635273217493172224
achche;7;achoche;7;13;866304;635273219640655872
achque;7;achoque;7;13;866304;635281139560349696
achubsca;9;achubasca;9;35;2316032;635378110309072896
achubsque;10;achubasque;10;5;349952;635378110554521600
achcha;7;achucha;7;51;3357440;635378770609438720
achuchr;8;achuchar;8;16384;1073768192;635378770911428608
achuchrra;10;achucharra;10;51;3368704;635378770920882176
achuchrre;10;achucharre;10;13;878336;635378770920947712
achche;7;achuche;7;13;867072;635378772756922368
achucta;8;achucuta;8;51;3365632;635379004165062656
achucte;8;achucute;8;13;875264;635379004232171520
achucya;8;achucuya;8;51;3365632;635379006849417216
achucye;8;achucuye;8;13;875264;635379006916526080
achrea;7;achurea;7;51;3357440;635386965407039488
achree;7;achuree;7;13;867072;635386967554523136
achurrsca;10;achurrusca;10;51;3369728;635387199803113472
achurrsque;11;achurrusque;11;13;879360;635387199810783744
acibra;7;acibara;7;51;3360512;635606541315080192
acibre;7;acibare;7;13;870144;635606543462563840
acibra;7;acibera;7;51;3361280;635608740338335744
acibre;7;acibere;7;13;870912;635608742485819392
acicla;7;acicala;7;51;3360512;635624030421909504
acicle;7;acicale;7;13;870144;635624032569393152
acictea;8;acicatea;8;51;3360512;635624170025123840
acictee;8;acicatee;8;13;870144;635624170092232704
acidifca;9;acidifica;9;51;3369216;635645921921073152
acidifque;10;acidifique;10;13;878848;635645922166521856
acidla;7;acidula;7;51;3361536;635652617724231680
acidle;7;acidule;7;13;871168;635652619871715328
acirta;7;acierta;7;1;80384;635668698081787904
acirte;7;acierte;7;5;342528;635668700229271552
aclarce;8;aclarece;8;1;88576;637286922657464320
aclareced;9;aclareced;9;257;16842752;637286922659561472
aclarecr;9;aclarecer;9;1;96768;637286922666901504
aclarecindo;12;aclareciendo;12;1;100864;637286922727426288
aclarezc;9;aclarezca;9;9;624384;637286934972465152
aclarzcan;10;aclarezcan;10;257;16865792;637286934972694528
aclimta;8;aclimata;8;51;3364608;637424851706970112
aclimte;8;aclimate;8;13;874240;637424851774078976
acloqu;7;acloque;7;8;551424;637532939374034944
acluca;7;aclueca;7;1;84480;637631584035405824
acluque;8;aclueque;8;5;346624;637631835374878720
acobrda;8;acobarda;8;51;3360512;638984242662998016
acobrde;8;acobarde;8;13;870144;638984242730106880
acochna;8;acochina;8;51;3365120;639005533889626112
acochne;8;acochine;8;13;874752;639005533956734976
acodla;7;acodala;7;51;3360512;639019322328481792
acodle;7;acodale;7;13;870144;639019324475965440
acodra;7;acodera;7;51;3361280;639021624430952448
acodre;7;acodere;7;13;870912;639021626578436096
acodcia;8;acodicia;8;51;3361024;639023570067914752
acodcie;8;acodicie;8;13;870656;639023570135023616
acogindo;9;acogiendo;9;1;88576;639076383728336896
acoglla;8;acogolla;8;51;3360768;639079801390366720
acoglle;8;acogolle;8;13;870400;639079801457475584
acogta;7;acogota;7;51;3360768;639079932906962944
acogte;7;acogote;7;13;870400;639079935054446592
acojna;7;acojina;7;51;3361024;639129307850997760
acojne;7;acojine;7;13;870656;639129309998481408
aclcha;7;acolcha;7;51;3352576;639161090608988160
aclche;7;acolche;7;13;862208;639161092756471808
acollra;8;acollara;8;51;3364608;639165927295811584
acollre;8;acollare;8;13;874240;639165927362920448
acomedid;8;acomedid;8;257;16842752;639179717949259776
acomedr;8;acomedir;8;1;92416;639179718184140800
acomet;7;acometa;7;9;616192;639179988465090560
acomtan;8;acometan;8;257;16861696;639179988699971584
acomte;7;acomete;7;1;84480;639179990612574208
acometed;8;acometed;8;257;16842752;639179990679683072
acometr;8;acometer;8;1;92672;639179990914564096
acometindo;11;acometiendo;11;1;96768;639179992851357184
acomid;7;acomida;7;9;616192;639181912610439168
acomdan;8;acomidan;8;257;16861440;639181912845320192
acomde;7;acomide;7;1;84224;639181914757922816
acomidindo;11;acomidiendo;11;1;96768;639181916996705792
acomda;7;acomoda;7;51;3360768;639185211145322496
acomde;7;acomode;7;13;870400;639185213292806144
acompsa;8;acompasa;8;51;3364608;639185719041982464
acompse;8;acompase;8;13;874240;639185719109091328
acompa;8;acompaa;8;51;3364608;639185723873820672
acompe;8;acompae;8;13;874240;639185723940929536
acomplja;9;acompleja;9;51;3369472;639185900655869952
acomplje;9;acompleje;9;13;879104;639185900657967104
acomuna;7;acomuna;7;51;3342336;639188681478897664
acomne;7;acomune;7;13;871168;639188683626381312
acncha;7;aconcha;7;51;3352576;639196274981076992
acnche;7;aconche;7;13;862208;639196277128560640
acondicina;11;acondiciona;11;51;3377152;639196843149591040
acondicine;11;acondicione;11;13;886784;639196843149593088
acongja;8;acongoja;8;51;3364864;639198599112032256
acongje;8;acongoje;8;13;874496;639198599179141120
aconsja;8;aconseja;8;51;3365376;639205024383107072
aconsje;8;aconseje;8;13;875008;639205024450215936
aconsonnta;11;aconsonanta;11;51;3372800;639205198336950784
aconsonnte;11;aconsonante;11;13;882432;639205198336952832
acontce;8;acontece;8;1;88576;639205570447933440
acontecr;9;acontecer;9;1;96768;639205570457370624
acontecindo;12;aconteciendo;12;1;100864;639205570517895408
acontzca;9;acontezca;9;1;88576;639205582762934272
acontzcan;10;acontezcan;10;257;16865792;639205582763163648
acorce;7;acorace;7;13;870144;639265460461764608
acorza;7;acoraza;7;51;3360512;639265853451272192
acordla;8;acordela;8;51;3365376;639267147863818240
acordle;8;acordele;8;13;875008;639267147930927104
acordna;8;acordona;8;51;3364864;639267320736251904
acordne;8;acordone;8;13;874496;639267320803360768
acrnea;7;acornea;7;35;2304000;639272639499599872
acrnee;7;acornee;7;5;337920;639272641647083520
acorrla;8;acorrala;8;51;3364608;639274775725735936
acorrle;8;acorrale;8;13;874240;639274775792844800
acostmbra;10;acostumbra;10;51;3365632;639293811583893504
acostmbre;10;acostumbre;10;13;875264;639293811583959040
acreced;7;acreced;7;257;16842752;640726745237946368
acrecent;9;acrecenta;9;50;3311360;640726750942724096
acrecent;9;acrecente;9;8;559616;640726750944821248
acrecr;7;acrecer;7;1;88576;640726752754139136
acrecindo;10;acreciendo;10;1;92672;640726814731517952
acrecinta;10;acrecienta;10;1;92672;640726814739677184
acrecinte;10;acreciente;10;5;354816;640726814739742720
acredta;8;acredita;8;51;3365120;640727372319948800
acredte;8;acredite;8;13;874752;640727372387057664
acrezc;7;acrezca;7;9;616192;640739353651314688
acrzcan;8;acrezcan;8;257;16857600;640739353886195712
acriblla;9;acribilla;9;51;3365120;640796637442605056
acriblle;9;acribille;9;13;874752;640796637444702208
acrimna;8;acrimina;8;51;3365120;640802685645225984
acrimne;8;acrimine;8;13;874752;640802685712334848
acrilla;8;acriolla;8;51;3360768;640803835622719488
acrille;8;acriolle;8;13;870400;640803835689828352
acrisla;8;acrisola;8;51;3364864;640806086185582592
acrisle;8;acrisole;8;13;874496;640806086252691456
actualce;9;actualice;9;13;878848;642133143606263808
actualza;9;actualiza;9;51;3369216;642133143990042624
acuadrlla;10;acuadrilla;10;51;3369216;642346002340134912
acuadrlle;10;acuadrille;10;13;878848;642346002340200448
acuartla;9;acuartela;9;51;3369472;642353731128000512
acuartle;9;acuartele;9;13;879104;642353731130097664
acuatce;8;acuatice;8;13;874752;642354640469360640
acuatza;8;acuatiza;8;51;3365120;642354652750282752
acuchlla;9;acuchilla;9;51;3365120;642383232721485824
acuchlle;9;acuchille;9;13;874752;642383232723582976
acuchllea;10;acuchillea;10;51;3365120;642383232723599360
acuchllee;10;acuchillee;10;13;874752;642383232723664896
acucllla;9;acuclilla;9;51;3365120;642385431744741376
acucllle;9;acuclille;9;13;874752;642385431746838528
acudindo;9;acudiendo;9;1;88576;642401306890731520
aculla;7;acuella;7;1;80384;642420661549006848
aculle;7;acuelle;7;5;342528;642420663696490496
acurda;7;acuerda;7;1;80384;642423822644936704
acurde;7;acuerde;7;5;342528;642423824792420352
acusta;7;acuesta;7;1;80384;642424647278657536
acuste;7;acueste;7;5;342528;642424649426141184
aculma;7;acuilma;7;51;3356928;642491047473053696
aculme;7;acuilme;7;13;866560;642491049620537344
acumla;7;acumula;7;51;3361536;642566346839687168
acumle;7;acumule;7;13;871168;642566348987170816
acurrca;8;acurruca;8;51;3365632;642652814211809280
acurrque;9;acurruque;9;13;875264;642652822066167808
adamsca;8;adamasca;8;51;3360512;649310872514068480
adamsque;9;adamasque;9;13;870144;649310880368427008
adrgue;7;adargue;7;13;861952;649402167395876864
adecna;7;adecena;7;51;3361280;651388862500700160
adecne;7;adecene;7;13;870912;651388864648183808
adecnta;8;adecenta;8;51;3361280;651388872718024704
adecnte;8;adecente;8;13;870912;651388872785133568
adehsa;7;adehesa;7;51;3361280;651476909330268160
adehse;7;adehese;7;13;870912;651476911477751808
adelnta;8;adelanta;8;51;3360512;651545003369168896
adelnte;8;adelante;8;13;870144;651545003436277760
adelgce;8;adelgace;8;13;874240;651548069506056192
adelgza;8;adelgaza;8;51;3364608;651548081786978304
adentlla;9;adentella;9;51;3365376;651590474373005312
adentlle;9;adentelle;9;13;875008;651590474375102464
adntra;7;adentra;7;51;3353088;651590691603873792
adntre;7;adentre;7;13;862720;651590693751357440
aderce;7;aderece;7;13;870912;651652558460289024
aderza;7;adereza;7;51;3361280;651652951449796608
adestr;7;adestra;7;50;3303168;651678652534095872
adestr;7;adestre;7;8;551424;651678654681579520
adherid;7;adherid;7;257;16842752;653119959269900288
adherr;7;adherir;7;1;88320;653119966786093056
adhira;7;adhiera;7;1;84480;653183334196707328
adhiran;8;adhieran;8;257;16861696;653183334431588352
adhire;7;adhiere;7;1;84480;653183336344190976
adhirindo;10;adhiriendo;10;1;92672;653190328788172800
adicina;8;adiciona;8;51;3364864;653642885513609216
adicine;8;adicione;8;13;874496;653642885580718080
adistra;8;adiestra;8;51;3357184;653683655490666496
adistre;8;adiestre;8;13;866816;653683655557775360
adinra;7;adinera;7;51;3361280;653834245080350720
adinre;7;adinere;7;13;870912;653834247227834368
adivna;7;adivina;7;51;3361024;653977112872484864
adivne;7;adivine;7;13;870656;653977115019968512
adjetva;8;adjetiva;8;51;3365120;654246968368824320
adjetve;8;adjetive;8;13;874752;654246968435933184
adjudca;8;adjudica;8;51;3365120;654519637051965440
adjudque;9;adjudique;9;13;874752;654519644906323968
adjnta;7;adjunta;7;51;3357440;654525322498146304
adjnte;7;adjunte;7;13;867072;654525324645629952
adminicla;10;adminicula;10;51;3373824;656002878579687424
adminicle;10;adminicule;10;13;883456;656002878579752960
adminstra;10;administra;10;51;3365120;656002887155990528
adminstre;10;administre;10;13;874752;656002887156056064
admtan;7;admitan;7;257;16857344;656006045222567936
admitid;7;admitid;7;257;16842752;656006177292812288
admitindo;10;admitiendo;10;1;92672;656006178066907136
admitr;7;admitir;7;1;88320;656006184809005056
adocna;7;adocena;7;51;3361280;657018362034913280
adocne;7;adocene;7;13;870912;657018364182396928
adoctrna;9;adoctrina;9;51;3369216;657026681621970944
adoctrne;9;adoctrine;9;13;878848;657026681624068096
adolce;7;adolece;7;1;84480;657176504878235648
adoleced;8;adoleced;8;257;16842752;657176504945344512
adolecr;8;adolecer;8;1;92672;657176505180225536
adolecindo;11;adoleciendo;11;1;96768;657176507117018624
adolezc;8;adolezca;8;9;620288;657176898958262272
adolzcan;9;adolezcan;9;257;16861696;657176898965602304
adolra;7;adolora;7;51;3360768;657182257986928640
adolre;7;adolore;7;13;870400;657182260134412288
adonce;7;adonice;7;13;870656;657213888273580032
adonza;7;adoniza;7;51;3361024;657214281263087616
adoquna;8;adoquina;8;51;3365120;657273369829310464
adoqune;8;adoquine;8;13;874752;657273369896419328
adormce;8;adormece;8;1;88576;657286489410895872
adormeced;9;adormeced;9;257;16842752;657286489412993024
adormecr;9;adormecer;9;1;96768;657286489420333056
adormecindo;12;adormeciendo;12;1;100864;657286489480857840
adormezc;9;adormezca;9;9;624384;657286501725896704
adormzcan;10;adormezcan;10;257;16865792;657286501726126080
adormid;7;adormid;7;257;16842752;657286558583357440
adormr;7;adormir;7;1;88320;657286566099550208
adormta;8;adormita;8;51;3365120;657286567190069248
adormte;8;adormite;8;13;874752;657286567257178112
adquira;8;adquiera;8;1;88576;658462974838571008
adquiran;9;adquieran;9;257;16865792;658462974845911040
adquire;8;adquiere;8;1;88576;658462974905679872
adquir;7;adquira;7;8;550656;658463189033287680
adquirid;8;adquirid;8;257;16842752;658463193395363840
adquirindo;11;adquiriendo;11;1;96768;658463193419554304
adquirr;8;adquirir;8;1;92416;658463193630244864
adscrib;8;adscriba;8;9;620288;659277223328481280
adscrban;9;adscriban;9;257;16865536;659277223335821312
adscrbe;8;adscribe;8;1;88320;659277223395590144
adscribid;9;adscribid;9;257;16842752;659277223464796160
adscribindo;12;adscribiendo;12;1;100864;659277223465552112
adscribr;9;adscribir;9;1;96512;659277223472136192
aduanas;7;aduanas;7;1;65536;660365611511054336
aducindo;9;aduciendo;9;1;88576;660398113214169088
adurma;7;aduerma;7;1;80384;660438375773241344
adurman;8;aduerman;8;257;16857600;660438376008122368
adurme;7;aduerme;7;1;80384;660438377920724992
adultra;8;adultera;8;51;3365376;660562492291809280
adultre;8;adultere;8;13;875008;660562492358918144
adlzan;7;adulzan;7;257;16853760;660565719942955008
adulzra;8;adulzora;8;51;3364864;660565962625384448
adulzre;8;adulzore;8;13;874496;660565962692493312
admbra;7;adumbra;7;51;3353344;660570403067920384
admbre;7;adumbre;7;13;862976;660570405215404032
adurmindo;10;adurmiendo;10;1;92672;660664259077980160
adzcan;7;aduzcan;7;257;16853760;660799366163857408
adveng;7;advenga;7;9;616192;660999023624192000
advngan;8;advengan;8;257;16857600;660999023859073024
advenid;7;advenid;7;257;16842752;660999059594543104
advenr;7;advenir;7;1;88320;660999067110735872
advrsa;7;adversa;7;1;80384;661001428805877760
adversas;8;adversas;8;1;65536;661001429124644864
advertid;8;advertid;8;257;16842752;661001450347823104
advertr;8;advertir;8;1;92416;661001450582704128
advine;7;adviene;7;1;84480;661064566972612608
advirta;8;advierta;8;1;84480;661064643761930240
advirtan;9;adviertan;9;257;16861696;661064643769270272
advirte;8;advierte;8;1;84480;661064643829039104
advinindo;10;adviniendo;10;1;92672;661069429112815616
advirt;7;advirta;7;8;550656;661071814729924608
advirtindo;11;advirtiendo;11;1;96768;661071819116191232
afarla;7;afarola;7;51;3360768;685435205695045632
afarle;7;afarole;7;13;870400;685435207842529280
afeccina;9;afecciona;9;51;3368960;687416481860288512
afeccine;9;afeccione;9;13;878592;687416481862385664
afemna;7;afemina;7;51;3361024;687595780403363840
afemne;7;afemine;7;13;870656;687595782550847488
afince;7;afiance;7;13;866048;689639035932508160
afinza;7;afianza;7;51;3356416;689639428922015744
aficina;8;aficiona;8;51;3364864;689671682532573184
aficine;8;aficione;8;13;874496;689671682599682048
afibra;7;afiebra;7;51;3357184;689703063157473280
afibre;7;afiebre;7;13;866816;689703065304956928
afiligrna;10;afiligrana;10;51;3372800;689829876922859520
afiligrne;10;afiligrane;10;13;882432;689829876922925056
afnque;7;afinque;7;13;862464;689869692856172544
afligid;7;afligid;7;257;16842752;691464877532774400
afligindo;10;afligiendo;10;1;92672;691464878306869248
afligr;7;afligir;7;1;88320;691464885048967168
afljan;7;aflijan;7;257;16857344;691466394729971712
aflyan;7;afluyan;7;257;16857856;691685747299713024
afluyndo;9;afluyendo;9;1;88576;691685816094162944
afogra;7;afogara;7;51;3360512;693115397494276096
afogre;7;afogare;7;13;870144;693115399641759744
aforda;7;aforada;7;1;83712;693308671022596096
aforadas;8;aforadas;8;1;65536;693308671341363200
afortna;8;afortuna;8;51;3365632;693319415436935168
afortne;8;afortune;8;13;875264;693319415504044032
afsque;7;afosque;7;5;337920;693335353506922496
afrnta;7;afrenta;7;51;3357184;694776244167770112
afrnte;7;afrente;7;13;866816;694776246315253760
afrnta;7;afronta;7;51;3356672;694952166028214272
afrnte;7;afronte;7;13;866304;694952168175697920
agachpa;8;agachapa;8;51;3364608;703181692214444032
agachpe;8;agachape;8;13;874240;703181692281552896
agallas;7;agallas;7;1;65536;703342222505934848
agarrta;8;agarrota;8;51;3364864;703451315228901376
agarrte;8;agarrote;8;13;874496;703451315296010240
agasja;7;agasaja;7;51;3360512;703459465449439232
agasje;7;agasaje;7;13;870144;703459467596922880
agavlla;8;agavilla;8;51;3361024;703516680336179200
agavlle;8;agaville;8;13;870656;703516680403288064
agazpa;7;agazapa;7;51;3360512;703582713830965248
agazpe;7;agazape;7;13;870144;703582715978448896
agncia;7;agencia;7;51;3353088;705624386664660992
agncie;7;agencie;7;13;862720;705624388812144640
agignta;8;agiganta;8;51;3360512;707752037781078016
agignte;8;agigante;8;13;870144;707752037848186880
agilce;7;agilice;7;13;870656;707844199709409280
agilza;7;agiliza;7;51;3361024;707844592698916864
aglomra;8;aglomera;8;51;3365376;709588066506899456
aglomre;8;aglomere;8;13;875008;709588066574008320
aglutna;8;aglutina;8;51;3365120;709697534485856256
aglutne;8;aglutine;8;13;874752;709697534552965120
agonce;7;agonice;7;13;870656;711257083802025984
agonza;7;agoniza;7;51;3361024;711257476791533568
agorgja;8;agorgoja;8;35;2316288;711326561894137856
agorgje;8;agorgoje;8;5;350208;711326561961246720
agrcia;7;agracia;7;51;3356416;712714037640560640
agrcie;7;agracie;7;13;866048;712714039788044288
agradce;8;agradece;8;1;88576;712714519834525696
agradeced;9;agradeced;9;257;16842752;712714519836622848
agradecr;9;agradecer;9;1;96768;712714519843962880
agradecindo;12;agradeciendo;12;1;100864;712714519904487664
agradezc;9;agradezca;9;9;624384;712714532149526528
agradzcan;10;agradezcan;10;257;16865792;712714532149755904
agrnda;7;agranda;7;51;3356416;712719999055167488
agrnde;7;agrande;7;13;866048;712720001202651136
agrvia;7;agravia;7;51;3356416;712724483001024512
agrvie;7;agravie;7;13;866048;712724485148508160
agrdan;7;agredan;7;257;16857600;712784825680920576
agredid;7;agredid;7;257;16842752;712784957751164928
agredindo;10;agrediendo;10;1;92672;712784958525259776
agredr;7;agredir;7;1;88320;712784965267357696
agrgue;7;agregue;7;13;866816;712786813713907712
agrmia;7;agremia;7;51;3357184;712789903942877184
agrmie;7;agremie;7;13;866816;712789906090360832
agrita;7;agrieta;7;51;3361280;712856063619104768
agrite;7;agriete;7;13;870912;712856065766588416
agucha;7;aguacha;7;51;3356416;714402870320955392
aguche;7;aguache;7;13;866048;714402872468439040
aguachn;8;aguachen;8;256;16804352;714402872703320064
aguachnta;10;aguachenta;10;1;92672;714402872713822208
aguachentas;11;aguachentas;11;1;65536;714402872713831936
aguadas;7;aguadas;7;1;65536;714403309481361408
aguata;7;aguaita;7;51;3361024;714406375014268928
aguate;7;aguaite;7;13;870656;714406377161752576
agunta;7;aguanta;7;51;3356416;714409123793338368
agunte;7;aguante;7;13;866048;714409125940822016
agurda;7;aguarda;7;51;3356416;714411047938686976
agurde;7;aguarde;7;13;866048;714411050086170624
agudce;7;agudice;7;13;870656;714458861662109696
agudza;7;agudiza;7;51;3361024;714459254651617280
ageras;7;ageras;7;1;65536;714481374806933504
aguerrid;8;aguerrid;8;257;16842752;714481661563109376
aguerrindo;11;aguerriendo;11;1;96768;714481661587299840
aguerrr;8;aguerrir;8;1;92416;714481661797990400
aguijnea;9;aguijonea;9;51;3364864;714547583422824448
aguijnee;9;aguijonee;9;13;874496;714547583424921600
aguijnes;9;aguijones;9;12288;805328896;714547583432261632
agujra;7;agujera;7;51;3361280;714562471305674752
agujre;7;agujere;7;13;870912;714562473453158400
agujrea;8;agujerea;8;51;3361280;714562473469935616
agujree;8;agujeree;8;13;870912;714562473537044480
agusna;7;agusana;7;51;3360512;714718533237342208
agusne;7;agusane;7;13;870144;714718535384825856
aherrja;8;aherroja;8;51;3364864;723717508183359488
aherrje;8;aherroje;8;13;874496;723717508250468352
aherrmbra;10;aherrumbra;10;51;3365632;723717612899418112
aherrmbre;10;aherrumbre;10;13;875264;723717612899483648
ahervra;8;ahervora;8;35;2316288;723719711501582336
ahervre;8;ahervore;8;5;350208;723719711568691200
ahinqu;7;ahinque;7;8;551424;725898489875136512
ahocca;7;ahocica;7;51;3361024;729077966117535744
ahocque;8;ahocique;8;13;870656;729078217457008640
ahmbra;7;ahombra;7;51;3352576;729250297385320448
ahmbre;7;ahombre;7;13;862208;729250299532804096
ahorcja;8;ahorcaja;8;51;3364608;729338520862195712
ahorcje;8;ahorcaje;8;13;874240;729338520929304576
ahornga;8;ahornaga;8;51;3364608;729344566565535744
ahorngue;9;ahornague;9;13;874240;729344566903701504
ahrque;7;ahorque;7;269;17639424;729346558339842048
ahorqulla;10;ahorquilla;10;51;3369216;729346560694960128
ahorqulle;10;ahorquille;10;13;878848;729346560695025664
ahuque;7;ahueque;7;13;866816;732495559641792512
ahuynta;8;ahuyenta;8;51;3361280;732840694103670784
ahuynte;8;ahuyente;8;13;870912;732840694170779648
ajamna;7;ajamona;7;51;3360768;757404873162489856
ajamne;7;ajamone;7;13;870400;757404875309973504
ajtrea;7;ajetrea;7;51;3353088;759781312927105024
ajtree;7;ajetree;7;13;862720;759781315074588672
ajornla;8;ajornala;8;51;3364608;765373366268854272
ajornle;8;ajornale;8;13;874240;765373366335963136
ajures;7;ajuares;7;12288;805320448;768454270310678528
ajucia;7;ajuicia;7;51;3356928;768586820517625856
ajucie;7;ajuicie;7;13;866560;768586822665109504
ajustcia;9;ajusticia;9;51;3365120;768772089452167168
ajustcie;9;ajusticie;9;13;874752;768772089454264320
alambca;8;alambica;8;51;3365120;793426438547046400
alambque;9;alambique;9;13;874752;793426446401404928
almbra;7;alambra;7;51;3352320;793426592075350016
almbre;7;alambre;7;13;861952;793426594222833664
alncea;7;alancea;7;51;3352320;793444510678908928
alncee;7;alancee;7;13;861952;793444512826392576
alrdea;7;alardea;7;51;3352320;793515429178900480
alrdee;7;alardee;7;13;861952;793515431326384128
alrgue;7;alargue;7;13;861952;793517355471732736
albrda;7;albarda;7;1;79616;793786991371091968
albardas;8;albardas;8;1;65536;793786991689859072
albardlla;10;albardilla;10;1;92416;793786995873693696
albardillas;11;albardillas;11;1;65536;793786995873703424
albaylde;9;albayalde;9;1;87808;793790794097491968
albrga;7;alberga;7;51;3357184;793857411654877184
albrgue;8;albergue;8;13;866816;793857422476181504
albrea;7;alborea;7;35;2308096;794033299155582976
albree;7;alboree;7;1;79872;794033301303066624
alborce;8;alboroce;8;13;874496;794033472111902720
alborta;8;alborota;8;51;3364864;794033481171599360
alborte;8;alborote;8;13;874496;794033481238708224
alborza;8;alboroza;8;51;3364864;794033484392824832
albricias;9;albricias;9;6145;402718720;794081097873358848
alcachfa;9;alcachofa;9;1;92160;794341771324162048
alcachofas;10;alcachofas;10;1;65536;794341771324473344
alcahutea;10;alcahuetea;10;51;3369472;794344738309816320
alcahutee;10;alcahuetee;10;13;879104;794344738309881856
alcnce;7;alcance;7;13;866048;794347727268872192
alcanfra;9;alcanfora;9;51;3368960;794347784479703040
alcanfre;9;alcanfore;9;13;878592;794347784481800192
alcantarlla;12;alcantarilla;12;51;3377408;794348017486075920
alcantarlle;12;alcantarille;12;13;887040;794348017486075984
alcnza;7;alcanza;7;51;3356416;794348120258379776
alcohles;9;alcoholes;9;12288;805328896;794590929348984832
alcoholce;10;alcoholice;10;13;882944;794590929407787008
alcoholza;10;alcoholiza;10;51;3373312;794590929419780096
alcrce;7;alcorce;7;13;866304;794596216896749568
alcrza;7;alcorza;7;51;3356672;794596609886257152
aldbea;7;aldabea;7;51;3356416;794904112364781568
aldbee;7;aldabee;7;13;866048;794904114512265216
aleccina;9;alecciona;9;51;3368960;795502872917180416
aleccine;9;aleccione;9;13;878592;795502872919277568
aletrga;8;aletarga;8;51;3360512;795800990673534976
aletrgue;9;aletargue;9;13;870144;795800991011700736
alfabetce;10;alfabetice;10;13;882944;796030022624821248
alfabetza;10;alfabetiza;10;51;3373312;796030022636814336
alfeca;8;alfeica;8;51;3365120;796114744476958720
alfeque;9;alfeique;9;13;874752;796114752331317248
alfmbra;8;alfombra;8;51;3356672;796282307794173952
alfmbre;8;alfombre;8;13;866304;796282307861282816
alfrce;7;alforce;7;13;866304;796285066757013504
alfrza;7;alforza;7;51;3356672;796285459746521088
alglia;7;algalia;7;1;79616;796598528502661120
algalias;8;algalias;8;1;65536;796598528821428224
algarrba;9;algarroba;9;1;92160;796601989206638592
algarrobas;10;algarrobas;10;1;65536;796601989206949888
algodnes;9;algodones;9;12288;805328896;796840531213156352
alicta;7;alicata;7;51;3360512;797753754446200832
alicte;7;alicate;7;13;870144;797753756593684480
alinta;7;alienta;7;1;80384;797796085643870208
alinte;7;aliente;7;5;342528;797796087791353856
aligra;7;aligera;7;51;3361280;797826287853895680
aligre;7;aligere;7;13;870912;797826290001379328
alijra;7;alijara;7;1;83712;797876865388773376
alijaras;8;alijaras;8;1;65536;797876865707540480
alijre;7;alijare;7;13;870144;797876867536257024
alimnta;8;alimenta;8;51;3361280;797931782468009984
alimnte;8;alimente;8;13;870912;797931782535118848
alivina;8;aliviana;8;51;3364608;798092084606140416
alivine;8;aliviane;8;13;874240;798092084673249280
allgue;7;allegue;7;13;866816;799481106540789760
almacna;8;almacena;8;51;3365376;799971218697486336
almacne;8;almacene;8;13;875008;799971218764595200
almgre;7;almagre;7;1;79616;799973636210425856
almndra;8;almendra;8;1;80384;800047619723231232
almendras;9;almendras;9;1;65536;800047619733192704
almibra;8;almibara;8;51;3364608;800111339858034688
almibre;8;almibare;8;13;874240;800111339925143552
almidna;8;almidona;8;51;3364864;800112677740347392
almidne;8;almidone;8;13;874496;800112677807456256
almzcle;8;almizcle;8;1;80128;800124565203189760
almohadlla;11;almohadilla;11;51;3373312;800220184133698048
almohadlle;11;almohadille;11;13;882944;800220184133700096
almonda;8;almoneda;8;1;88576;800223551247351808
almonedas;9;almonedas;9;1;65536;800223551257313280
almorc;7;almorce;7;8;551424;800225716430962688
almorz;7;almorza;7;50;3303168;800226109420470272
almurce;8;almuerce;8;5;346624;800324379429830656
almurza;8;almuerza;8;1;84480;800324391710752768
alongu;7;alongue;7;8;551424;801328286075453440
alpargta;9;alpargata;9;1;91904;801668342594666496
alpargatas;10;alpargatas;10;1;65536;801668342594977792
alpiste;7;alpiste;7;1;65536;801809854988550144
alqula;7;alquila;7;51;3361024;802578274029928448
alqule;7;alquile;7;13;870656;802578276177412096
alquitra;9;alquitara;9;51;3368704;802578411771396096
alquitre;9;alquitare;9;13;878336;802578411773493248
alquitrna;10;alquitrana;10;51;3372800;802578420619821056
alquitrne;10;alquitrane;10;13;882432;802578420619886592
altrca;7;alterca;7;51;3357184;803990442096984064
altrna;7;alterna;7;51;3357184;803990631075545088
altrne;7;alterne;7;13;866816;803990633223028736
altrque;8;alterque;8;13;866816;803990693436456960
altivce;8;altivece;8;1;88576;804063045381783552
altiveced;9;altiveced;9;257;16842752;804063045383880704
altivecr;9;altivecer;9;1;96768;804063045391220736
altivecindo;12;altiveciendo;12;1;100864;804063045451745520
altivezc;9;altivezca;9;9;624384;804063057696784384
altivzcan;10;altivezcan;10;257;16865792;804063057697013760
alucna;7;alucina;7;51;3361024;804513448854552576
alucne;7;alucine;7;13;870656;804513451002036224
aludindo;9;aludiendo;9;1;88576;804530893476069376
alunga;7;aluenga;7;1;80384;804551261746626560
alungue;8;aluengue;8;5;342528;804551272567930880
almbra;7;alumbra;7;51;3353344;804685591143776256
almbre;7;alumbre;7;13;862976;804685593291259904
alunce;7;alunice;7;13;870656;804706776069963776
alunza;7;aluniza;7;51;3361024;804707169059471360
alzaprma;9;alzaprima;9;1;92416;807296935773339648
alzaprimas;10;alzaprimas;10;1;65536;807296935773650944
amachmbra;10;amachimbra;10;51;3365120;811268219125907456
amachmbre;10;amachimbre;10;13;874752;811268219125972992
amachna;8;amachina;8;51;3365120;811268219636547584
amachne;8;amachine;8;13;874752;811268219703656448
amadrga;8;amadriga;8;51;3365120;811291305622634496
amadrgue;9;amadrigue;9;13;874752;811291305960800256
amadrna;8;amadrina;8;51;3365120;811291309380730880
amadrne;8;amadrine;8;13;874752;811291309447839744
amastra;8;amaestra;8;51;3357184;811309642448633856
amastre;8;amaestre;8;13;866816;811309642515742720
amalgma;8;amalgama;8;51;3364608;811425861579309056
amalgme;8;amalgame;8;13;874240;811425861646417920
amamnta;8;amamanta;8;51;3360512;811440382326865920
amamnte;8;amamante;8;13;870144;811440382393974784
amance;7;amanece;7;1;84480;811459976487763968
amaneced;8;amaneced;8;257;16842752;811459976554872832
amanecr;8;amanecer;8;1;92672;811459976789753856
amanecindo;11;amaneciendo;11;1;96768;811459978726546944
amanra;7;amanera;7;51;3361280;811460232038318080
amanre;7;amanere;7;13;870912;811460234185801728
amanezc;8;amanezca;8;9;620288;811460370567790592
amanzcan;9;amanezcan;9;257;16861696;811460370575130624
amanja;7;amanoja;7;51;3360768;811465592157503488
amanje;7;amanoje;7;13;870400;811465594304987136
amrgue;7;amargue;7;13;861952;811531753981214720
amarlla;8;amarilla;8;1;84224;811532702648893440
amarillas;9;amarillas;9;1;65536;811532702658854912
amarllea;9;amarillea;9;51;3361024;811532702716526592
amarllee;9;amarillee;9;13;870656;811532702718623744
amarma;7;amaroma;7;51;3360768;811536012441288704
amarme;7;amarome;7;13;870400;811536014588772352
amartla;8;amartela;8;51;3365376;811538629703761920
amartle;8;amartele;8;13;875008;811538629770870784
amartlla;9;amartilla;9;51;3365120;811538698608312320
amartlle;9;amartille;9;13;874752;811538698610409472
ambicina;9;ambiciona;9;51;3368960;811933974682664960
ambicine;9;ambicione;9;13;878592;811933974684762112
ambinta;8;ambienta;8;51;3361280;811935162559365120
ambinte;8;ambiente;8;13;870912;811935162626473984
amedrnta;9;amedrenta;9;51;3365376;813543040794230784
amedrnte;9;amedrente;9;13;875008;813543040796327936
amlgue;7;amelgue;7;13;862720;813678000678633472
amence;7;amenace;7;13;870144;813709577278193664
amenza;7;amenaza;7;51;3360512;813709970267701248
amngua;7;amengua;7;51;3353088;813713182903238656
ameng;7;amenge;7;8;551424;813713185050722304
amence;7;amenice;7;13;870656;813713975324704768
amenza;7;ameniza;7;51;3361024;813714368314212352
americance;11;americanice;11;13;887040;813784342161050112
americanza;11;americaniza;11;51;3377408;813784342161424896
ametrlla;9;ametralla;9;51;3364608;813824445843505152
ametrlle;9;ametralle;9;13;874240;813824445845602304
amilna;7;amilana;7;51;3360512;815926379550867456
amilne;7;amilane;7;13;870144;815926381698351104
amillra;8;amillara;8;51;3364608;815932212670103552
amillre;8;amillare;8;13;874240;815932212737212416
aminra;7;aminora;7;51;3360768;815969329223827456
aminre;7;aminore;7;13;870400;815969331371311104
amnisti;8;amnistia;8;50;3307264;818698355755450368
amnisti;8;amnistie;8;8;555520;818698355822559232
amodrra;8;amodorra;8;51;3360768;819171116227493888
amodrre;8;amodorre;8;13;870400;819171116294602752
amojna;7;amojona;7;51;3360768;819276591480700928
amojne;7;amojone;7;13;870400;819276593628184576
amonda;7;amoneda;7;51;3361280;819341290868047872
amonde;7;amonede;7;13;870912;819341293015531520
amonsta;8;amonesta;8;51;3361280;819341558783410176
amonste;8;amoneste;8;13;870912;819341558850519040
amontna;8;amontona;8;51;3364864;819349733179916288
amontne;8;amontone;8;13;874496;819349733247025152
amorta;7;amorata;7;51;3360512;819409735466876928
amorte;7;amorate;7;13;870144;819409737614360576
amordce;8;amordace;8;13;874240;819411059474432000
amordza;8;amordaza;8;51;3364608;819411071755354112
amorra;8;amorria;8;51;3365120;819418906849443840
amorre;8;amorrie;8;13;874752;819418906916552704
amortja;8;amortaja;8;51;3364608;819419859258441728
amortje;8;amortaje;8;13;874240;819419859325550592
amortce;8;amortece;8;1;88576;819419924286930944
amorteced;9;amorteced;9;257;16842752;819419924289028096
amortecr;9;amortecer;9;1;96768;819419924296368128
amortecindo;12;amorteciendo;12;1;100864;819419924356892912
amortezc;9;amortezca;9;9;624384;819419936601931776
amortzcan;10;amortezcan;10;257;16865792;819419936602161152
amortce;8;amortice;8;13;874752;819419993006407680
amortgua;9;amortigua;9;51;3365120;819419995422851072
amortig;9;amortige;9;8;559616;819419995424948224
amortza;8;amortiza;8;51;3365120;819420005287329792
amostce;8;amostace;8;13;874240;819437447753498624
amostza;8;amostaza;8;51;3364608;819437460034420736
amotna;7;amotina;7;51;3361024;819449214806261760
amotne;7;amotine;7;13;870656;819449216953745408
amovindo;9;amoviendo;9;1;88576;819484251613822976
amplifca;9;amplifica;9;51;3369216;819871294178197504
amplifque;10;amplifique;10;13;878848;819871294423646208
amplla;7;ampolla;7;51;3356672;819925818737164288
amplle;7;ampolle;7;13;866304;819925820884647936
amubla;7;amuebla;7;51;3357184;822559149085687808
amuble;7;amueble;7;13;866816;822559151233171456
amuelas;7;amuelas;7;1;65536;822564467328942080
amuvan;7;amuevan;7;257;16857600;822569962202726400
amunicina;10;amuniciona;10;51;3373056;822721176985944064
amunicine;10;amunicione;10;13;882688;822721176986009600
amurlla;8;amuralla;8;51;3360512;822787303670808576
amurlle;8;amuralle;8;13;870144;822787303737917440
amsgue;7;amusgue;7;13;862976;822808345235685376
amstia;7;amustia;7;51;3353344;822815283755352064
amstie;7;amustie;7;13;862976;822815285902835712
analce;7;analice;7;13;870656;829441389648412672
analza;7;analiza;7;51;3361024;829441782637920256
anarquce;9;anarquice;9;13;878848;829551652249272320
anarquza;9;anarquiza;9;51;3369216;829551652633051136
anatematce;11;anatematice;11;13;887040;829580098105035264
anatematza;11;anatematiza;11;51;3377408;829580098105410048
anatomce;9;anatomice;9;13;878848;829585599670779904
anatomza;9;anatomiza;9;51;3369216;829585600054558720
anchoas;7;anchoas;7;1;65536;830500192502415360
andalces;9;andaluces;9;12288;805329664;830938682987380736
andalza;8;andaluza;8;1;88832;830938695258341376
andaluzas;9;andaluzas;9;1;65536;830938695268302848
anestsia;9;anestesia;9;51;3365376;831822424105811968
anestsie;9;anestesie;9;13;875008;831822424107909120
anexina;8;anexiona;8;51;3364864;831904506701676544
anexine;8;anexione;8;13;874496;831904506768785408
angarillas;10;angarillas;10;6145;402718720;832630630164250624
angsta;7;angosta;7;51;3356672;832877653395505152
angste;7;angoste;7;13;866304;832877655542988800
angstia;8;angustia;8;51;3357440;832983210823516160
angstie;8;angustie;8;13;867072;832983210890625024
aniqula;8;aniquila;8;51;3365120;834039654129860608
aniqule;8;aniquile;8;13;874752;834039654196969472
anochce;8;anochece;8;1;88576;837163842935980032
anochecr;9;anochecer;9;1;96768;837163842945417216
anochecindo;12;anocheciendo;12;1;100864;837163843005942000
anochzca;9;anochezca;9;1;88576;837163855250980864
anodna;7;anodina;7;1;84224;837182138339033088
anodinas;8;anodinas;8;1;65536;837182138657800192
anonda;7;anonada;7;51;3360512;837353490354274304
anonde;7;anonade;7;13;870144;837353492501757952
anquilsa;9;anquilosa;9;51;3368960;838607078884376576
anquilse;9;anquilose;9;13;878592;838607078886473728
anteced;8;anteceda;8;9;620288;840011028765868032
antecdan;9;antecedan;9;257;16865792;840011028773208064
antecde;8;antecede;8;1;88576;840011028832976896
anteceded;9;anteceded;9;257;16842752;840011028835074048
antecedr;9;anteceder;9;1;96768;840011028842414080
antecedindo;12;antecediendo;12;1;100864;840011028902938864
antedta;8;antedata;8;51;3364608;840011518392139776
antedte;8;antedate;8;13;874240;840011518459248640
antedecid;9;antedecid;9;257;16842752;840011578121125888
antedecr;9;antedecir;9;1;96512;840011578128465920
antedce;8;antedice;8;1;88320;840011646771396608
antedicindo;12;antediciendo;12;1;100864;840011646841358576
antedig;8;antediga;8;9;620288;840011648851771392
antedgan;9;antedigan;9;257;16865536;840011648859111424
antefcha;9;antefecha;9;51;3365376;840012677614403584
antefche;9;antefeche;9;13;875008;840012677616500736
antepga;8;antepaga;8;51;3364608;840018108482584576
antepgue;9;antepague;9;13;874240;840018108820750336
antepsa;8;antepasa;8;51;3364608;840018114925035520
antepse;8;antepase;8;13;874240;840018114992144384
antepne;8;antepone;8;1;88064;840018352825958400
anteponed;9;anteponed;9;257;16842752;840018352828055552
anteponr;9;anteponer;9;1;96768;840018352835395584
antepong;9;anteponga;9;9;624384;840018352860037120
antepngan;10;antepongan;10;257;16865280;840018352860266496
anteponindo;12;anteponiendo;12;1;100864;840018352895920368
anteve;7;antevea;7;9;616192;840021472498941952
antvean;8;antevean;8;257;16857600;840021472733822976
antevr;7;antever;7;1;88576;840021481625747456
antevindo;10;anteviendo;10;1;92672;840021543603126272
anticpa;8;anticipa;8;51;3365120;840081472671973376
anticpe;8;anticipe;8;13;874752;840081472739082240
antipatce;10;antipatice;10;13;882944;840088484341956608
antipatza;10;antipatiza;10;51;3373312;840088484353949696
antrcha;8;antorcha;8;1;79872;840195164751265792
antorchas;9;antorchas;9;1;65536;840195164761227264
anncia;7;anuncia;7;51;3353344;840732375485775872
anncie;7;anuncie;7;13;862976;840732377633259520
aovlla;7;aovilla;7;51;3356928;859226762360389632
aovlle;7;aoville;7;13;866560;859226764507873280
apabla;7;apabila;7;51;3361024;865294417278271488
apable;7;apabile;7;13;870656;865294419425755136
apablla;8;apabulla;8;51;3361536;865301020270395392
apablle;8;apabulle;8;13;871168;865301020337504256
apacent;8;apacenta;8;50;3307264;865309855018123264
apacent;8;apacente;8;8;555520;865309855085232128
apachga;8;apachuga;8;51;3365632;865311617565327360
apachgue;9;apachugue;9;13;875264;865311617903493120
apachrra;9;apachurra;9;51;3365632;865311623756644352
apachrre;9;apachurre;9;13;875264;865311623758741504
apacinta;9;apacienta;9;1;88576;865311896520622080
apacinte;9;apaciente;9;5;350720;865311896522719232
apacgua;8;apacigua;8;51;3361024;865311934319165440
apacig;8;apacige;8;8;555520;865311934386274304
apadrna;8;apadrina;8;51;3365120;865334504909176832
apadrne;8;apadrine;8;13;874752;865334504976285696
apalbra;8;apalabra;8;51;3360512;865465778437095424
apalbre;8;apalabre;8;13;870144;865465778504204288
apalnca;8;apalanca;8;51;3360512;865465976542461952
apalnque;9;apalanque;9;13;870144;865465984396820480
apandlla;9;apandilla;9;51;3365120;865502729299558400
apandlle;9;apandille;9;13;874752;865502729301655552
aparce;7;aparece;7;1;84480;865573540760387584
apareced;8;apareced;8;257;16842752;865573540827496448
aparecr;8;aparecer;8;1;92672;865573541062377472
aparecindo;11;apareciendo;11;1;96768;865573542999170560
aparja;7;apareja;7;51;3361280;865573658871988224
aparje;7;apareje;7;13;870912;865573661019471872
aparnta;8;aparenta;8;51;3361280;865573737808789504
aparnte;8;aparente;8;13;870912;865573737875898368
aparezc;8;aparezca;8;9;620288;865573934840414208
aparzcan;9;aparezcan;9;257;16861696;865573934847754240
aprque;7;aparque;7;13;861952;865580447067799552
aparrquia;10;aparroquia;10;51;3364864;865580900543905792
aparrquie;10;aparroquie;10;13;874496;865580900543971328
apasina;8;apasiona;8;51;3364864;865593542976733184
apasine;8;apasione;8;13;874496;865593543043842048
apasca;8;apausca;8;51;3361536;865758532534796288
apasque;9;apausque;9;13;871168;865758540389154816
apeadas;7;apeadas;7;1;65536;867525696811958272
apechga;8;apechuga;8;51;3365632;867563417379012608
apechgue;9;apechugue;9;13;875264;867563417717178368
apedce;7;apedace;7;13;870144;867576850946195456
apedza;7;apedaza;7;51;3360512;867577243935703040
apdrea;7;apedrea;7;51;3353088;867586229007286272
apdree;7;apedree;7;13;862720;867586231154769920
apdreos;8;apedreos;8;1;76288;867586236842246144
apellda;8;apellida;8;51;3365120;867723738307624960
apellde;8;apellide;8;13;874752;867723738374733824
apelmce;8;apelmace;8;13;874240;867724150154723328
apelmza;8;apelmaza;8;51;3364608;867724162435645440
apelotna;9;apelotona;9;51;3368960;867725582677835776
apelotne;9;apelotone;9;13;878592;867725582679932928
apercib;8;aperciba;8;9;620288;867824342547824640
apercban;9;aperciban;9;257;16865536;867824342555164672
apercbe;8;apercibe;8;1;88320;867824342614933504
apercibid;9;apercibid;9;257;16842752;867824342684139520
apercibindo;12;apercibiendo;12;1;100864;867824342684895472
apercibr;9;apercibir;9;1;96512;867824342691479552
apercoll;9;apercolla;9;50;3311360;867824451180822528
apercoll;9;apercolle;9;8;559616;867824451182919680
aperculla;10;apercuella;10;1;92672;867824550507724800
aperculle;10;apercuelle;10;5;354816;867824550507790336
apergamna;10;apergamina;10;51;3373312;867826410179280896
apergamne;10;apergamine;10;13;882944;867826410179346432
aprrea;7;aperrea;7;51;3353088;867832519611908096
aprree;7;aperree;7;13;862720;867832521759391744
apersna;8;apersona;8;51;3364864;867833248162512896
apersne;8;apersone;8;13;874496;867833248229621760
apesadmbra;11;apesadumbra;11;51;3369728;867840759726113280
apesadmbre;11;apesadumbre;11;13;879360;867840759726115328
apesra;7;apesara;7;51;3360512;867840989287415808
apesre;7;apesare;7;13;870144;867840991434899456
apetce;7;apetece;7;1;84480;867860524946161664
apeteced;8;apeteced;8;257;16842752;867860525013270528
apetecr;8;apetecer;8;1;92672;867860525248151552
apetecindo;11;apeteciendo;11;1;96768;867860527184944640
apetezc;8;apetezca;8;9;620288;867860919026188288
apetzcan;9;apetezcan;9;257;16861696;867860919033528320
apicra;7;apicara;7;51;3360512;869811314124390400
apicre;7;apicare;7;13;870144;869811316271874048
apilngueos;11;apilngueos;11;1;65536;869977275237131776
apisna;7;apisona;7;51;3360768;870100416963018752
apisne;7;apisone;7;13;870400;870100419110502400
apitna;7;apitona;7;51;3360768;870118009149063168
apitne;7;apitone;7;13;870400;870118011296546816
aplaced;7;aplaced;7;257;16842752;871465857396506624
aplacr;7;aplacer;7;1;88576;871465864912699392
aplacindo;10;aplaciendo;10;1;92672;871465926890078208
aplque;7;aplaque;7;13;866048;871473829392678912
aplsta;7;aplasta;7;51;3356416;871474909576953856
aplste;7;aplaste;7;13;866048;871474911724437504
aplaud;7;aplauda;7;9;616192;871475734210674688
apladan;8;aplaudan;8;257;16861952;871475734445555712
aplade;7;aplaude;7;1;84736;871475736358158336
aplaudid;8;aplaudid;8;257;16842752;871475738572750848
aplaudindo;11;aplaudiendo;11;1;96768;871475738596941312
aplaudr;8;aplaudir;8;1;92416;871475738807631872
aplazc;7;aplazca;7;8;550656;871478465809874944
aplzcan;8;aplazcan;8;257;16856832;871478466044755968
aplque;7;aplique;7;13;866560;871614566881034240
apocpa;7;apocopa;7;51;3360768;873196676066574336
apocpe;7;apocope;7;13;870400;873196678214057984
apodra;7;apodera;7;51;3361280;873208805054218240
apodre;7;apodere;7;13;870912;873208807201701888
apollla;8;apolilla;8;51;3361024;873351644408971264
apollle;8;apolille;8;13;870656;873351644476080128
apoltrna;9;apoltrona;9;51;3368960;873357796631379968
apoltrne;9;apoltrone;9;13;878592;873357796633477120
aporqu;7;aporque;7;8;551424;873461746415697920
aprrea;7;aporrea;7;51;3352576;873462019146121216
aprree;7;aporree;7;13;862208;873462021293604864
aprreos;8;aporreos;8;1;75776;873462026981081088
aportlla;9;aportilla;9;51;3365120;873463193484656640
aportlle;9;aportille;9;13;874752;873463193486753792
aposnta;8;aposenta;8;51;3361280;873472629342732288
aposnte;8;aposente;8;13;870912;873472629409841152
apostta;8;apostata;8;51;3364608;873480652341641216
apostte;8;apostate;8;13;874240;873480652408750080
apostlla;9;apostilla;9;1;88320;873480785670701056
apostillas;10;apostillas;10;1;65536;873480785671012352
aprcia;7;aprecia;7;51;3357184;874913992970076160
aprcie;7;aprecie;7;13;866816;874913995117559808
aprehend;9;aprehenda;9;9;624384;874916680076623872
aprehndan;10;aprehendan;10;257;16865792;874916680076853248
aprehnde;9;aprehende;9;1;88576;874916680078721024
aprehended;10;aprehended;10;257;16842752;874916680078786560
aprehendr;10;aprehender;10;1;100864;874916680079015936
aprmia;7;apremia;7;51;3357184;874919490528215040
aprmie;7;apremie;7;13;866816;874919492675698688
aprend;7;aprenda;7;9;616192;874919954384683008
aprndan;8;aprendan;8;257;16857600;874919954619564032
aprnde;7;aprende;7;1;80384;874919956532166656
aprended;8;aprended;8;257;16842752;874919956599275520
aprendr;8;aprender;8;1;92672;874919956834156544
aprendindo;11;aprendiendo;11;1;96768;874919958770949632
aprensines;11;aprensiones;11;12288;805337088;874920216636777984
aprsta;7;apresta;7;51;3357184;874922978041659392
aprste;7;apreste;7;13;866816;874922980189143040
apresra;8;apresura;8;51;3365632;874923004365111296
apresre;8;apresure;8;13;875264;874923004432220160
apretja;8;apretuja;8;51;3365632;874923549825957888
apretje;8;apretuje;8;13;875264;874923549893066752
aprita;7;aprieta;7;1;84480;874985650204442624
aprite;7;apriete;7;5;346624;874985652351926272
aprisina;9;aprisiona;9;51;3368960;874993165558874112
aprisine;9;aprisione;9;13;878592;874993165560971264
aprnta;7;apronta;7;51;3356672;875096151123034112
aprnte;7;apronte;7;13;866304;875096153270517760
aprpia;7;apropia;7;51;3356672;875097061656100864
aprpie;7;apropie;7;13;866304;875097063803584512
apropncua;10;apropincua;10;51;3365120;875097068696780800
apropncue;10;apropincue;10;13;874752;875097068696846336
aprovcha;9;aprovecha;9;51;3365376;875100292679991296
aprovche;9;aproveche;9;13;875008;875100292682088448
aprovisina;11;aprovisiona;11;51;3377152;875100370013749760
aprovisine;11;aprovisione;11;13;886784;875100370013751808
aproxma;8;aproxima;8;51;3365120;875101466161840128
aproxme;8;aproxime;8;13;874752;875101466228948992
apruba;7;aprueba;7;1;84480;875196447199330304
aprube;7;apruebe;7;5;346624;875196449346813952
apusta;7;apuesta;7;1;80384;876611827901923328
apuste;7;apueste;7;5;342528;876611830049406976
apulgra;8;apulgara;8;51;3364608;876728058860535808
apulgre;8;apulgare;8;13;874240;876728058927644672
apuntla;8;apuntala;8;51;3364608;876770386836979712
apuntle;8;apuntale;8;13;874240;876770386904088576
apuda;7;apuada;7;1;83712;877006277698387968
apuadas;8;apuadas;8;1;65536;877006278017155072
apula;7;apuala;7;51;3360512;877006415137341440
apule;7;apuale;7;13;870144;877006417284825088
aputea;8;apuetea;8;51;3361280;877008753763811328
aputee;8;apuetee;8;13;870912;877008753830920192
aquerncia;10;aquerencia;10;51;3365376;894625425991942144
aquerncie;10;aquerencie;10;13;875008;894625425992007680
aquita;7;aquieta;7;51;3361280;894688898574188544
aquite;7;aquiete;7;13;870912;894688900721672192
aquilta;8;aquilata;8;51;3364608;894692430664695808
aquilte;8;aquilate;8;13;874240;894692430731804672
aqusta;7;aquista;7;51;3356928;894696595155582976
aquste;7;aquiste;7;13;866560;894696597303066624
arancles;9;aranceles;9;12288;805329408;901530907735228416
arbtra;7;arbitra;7;51;3356928;902015459946135552
arbtre;7;arbitre;7;13;866560;902015462093619200
arborce;8;arborice;8;13;874752;902119760089579520
arborza;8;arboriza;8;51;3365120;902119772370501632
arcaic;7;arcaice;7;8;551424;902431369546694656
arcaiz;7;arcaiza;7;50;3303168;902431762536202240
archva;7;archiva;7;51;3361024;902554839119036416
archve;7;archive;7;13;870656;902554841266520064
arclla;7;arcilla;7;51;3356928;902573908773830656
arclle;7;arcille;7;13;866560;902573910921314304
ardindo;8;ardiendo;8;1;84480;903133046658564096
arngue;7;arengue;7;13;862720;903785177598132224
arnque;7;arenque;7;1;76288;903790675156271104
argamsa;8;argamasa;8;51;3364608;904685341556867072
argamse;8;argamase;8;13;874240;904685341623975936
argnta;7;argenta;7;51;3357184;904756576793919488
argnte;7;argente;7;13;866816;904756578941403136
argnteos;9;argnteos;9;1;65536;904756579203022848
arglla;7;argolla;7;1;79872;904931261703782400
argollas;8;argollas;8;1;65536;904931262022549504
argumnta;9;argumenta;9;51;3365376;905037251632168960
argumnte;9;argumente;9;13;875008;905037251634266112
argyan;7;arguyan;7;257;16857856;905043779646390272
arguyndo;9;arguyendo;9;1;88576;905043848440840192
aridces;8;arideces;8;12288;805325312;905859647120867328
ariscas;7;ariscas;7;1;65536;906122403237593088
armonce;8;armonice;8;13;874752;908310010553958400
armonza;8;armoniza;8;51;3365120;908310022834880512
aromatce;9;aromatice;9;13;878848;909393771431985152
aromatza;9;aromatiza;9;51;3369216;909393771815763968
arplla;7;arpilla;7;51;3356928;909892258168307712
arplle;7;arpille;7;13;866560;909892260315791360
arpnea;7;arponea;7;51;3356672;909998790537117696
arpnee;7;arponee;7;13;866304;909998792684601344
rqueos;7;arqueos;7;1;67328;910662527266848768
arraga;7;arraiga;7;51;3361024;910875685420007424
arrague;8;arraigue;8;13;870656;910875696241311744
arrmbla;8;arrambla;8;51;3356416;910877804466274304
arrmble;8;arramble;8;13;866048;910877804533383168
arrmpla;8;arrampla;8;51;3356416;910878044984442880
arrmple;8;arrample;8;13;866048;910878045051551744
arrnca;7;arranca;7;51;3356416;910878365479600128
arrncha;8;arrancha;8;51;3356416;910878369254473728
arrnche;8;arranche;8;13;866048;910878369321582592
arrncia;8;arrancia;8;35;2307840;910878369791344640
arrncie;8;arrancie;8;5;341760;910878369858453504
arrnque;8;arranque;8;13;866048;910878616819073024
arrstra;8;arrastra;8;51;3356416;910881415460028416
arrstre;8;arrastre;8;13;866048;910881415527137280
arrebta;8;arrebata;8;51;3364608;910942113011597312
arrebte;8;arrebate;8;13;874240;910942113078706176
arrebce;8;arreboce;8;13;874496;910942344470069248
arrebol;7;arrebol;7;1;65536;910942349218021376
arrebla;8;arrebola;8;51;3364864;910942349234798592
arreble;8;arrebole;8;13;874496;910942349301907456
arrebza;8;arreboza;8;51;3364864;910942356750991360
arrebja;8;arrebuja;8;51;3365632;910942451240271872
arrebje;8;arrebuje;8;13;875264;910942451307380736
arrcia;7;arrecia;7;35;2308608;910942789989040128
arrecid;7;arrecid;7;257;16842752;910942791599652864
arrcie;7;arrecie;7;5;342528;910942792136523776
arrecindo;10;arreciendo;10;1;92672;910942792373747712
arrecr;7;arrecir;7;1;88320;910942799115845632
arrdra;7;arredra;7;51;3357184;910943494363676672
arrdre;7;arredre;7;13;866816;910943496511160320
arregce;8;arregace;8;13;874240;910944852730970112
arregza;8;arregaza;8;51;3364608;910944865011892224
arrgla;7;arregla;7;51;3357184;910945040551903232
arrgle;7;arregle;7;13;866816;910945042699386880
arrejca;8;arrejaca;8;51;3364608;910946501931302912
arrejque;9;arrejaque;9;13;874240;910946509785661440
arrellna;9;arrellana;9;51;3368704;910947789566377984
arrellne;9;arrellane;9;13;878336;910947789568475136
arremnga;9;arremanga;9;51;3364608;910948157205512192
arremngue;10;arremangue;10;13;874240;910948157216079872
arremda;8;arremeda;8;51;3365376;910948220455092224
arremde;8;arremede;8;13;875008;910948220522201088
arremet;8;arremeta;8;9;620288;910948229045026816
arremtan;9;arremetan;9;257;16865792;910948229052366848
arremte;8;arremete;8;1;88576;910948229112135680
arremeted;9;arremeted;9;257;16842752;910948229114232832
arremetr;9;arremeter;9;1;96768;910948229121572864
arremetindo;12;arremetiendo;12;1;100864;910948229182097648
arremolna;10;arremolina;10;51;3373312;910948396690325504
arremolne;10;arremoline;10;13;882944;910948396690391040
arrend;7;arrenda;7;50;3303168;910948751403646976
arrend;7;arrende;7;8;551424;910948753551130624
arrepentid;10;arrepentid;10;257;16842752;910949875414794240
arrepentr;10;arrepentir;10;1;100608;910949875415023616
arrepinta;10;arrepienta;10;1;92672;910949939207487488
arrepintan;11;arrepientan;11;257;16869888;910949939207494656
arrepinte;10;arrepiente;10;1;92672;910949939207553024
arrepint;9;arrepinta;9;8;558848;910949944130011136
arrequesna;11;arrequesona;11;35;2328576;910950695203209728
arrequesne;11;arrequesone;11;5;362496;910950695203211776
arrsta;7;arresta;7;51;3357184;910951775060623360
arrste;7;arreste;7;13;866816;910951777208107008
arrezga;8;arrezaga;8;51;3364608;910955300171808768
arrezgue;9;arrezague;9;13;874240;910955300509974528
arrinda;8;arrienda;8;1;84480;911014345771581440
arriendas;9;arriendas;9;1;65536;911014345781542912
arrinde;8;arriende;8;5;346624;911014345838690304
arrisga;8;arriesga;8;51;3361280;911014433281540096
arrisgue;9;arriesgue;9;13;870912;911014433619705856
arrincna;9;arrincona;9;51;3368960;911019110719553536
arrincne;9;arrincone;9;13;878592;911019110721650688
arrsca;7;arrisca;7;51;3356928;911021851747024896
arrsque;8;arrisque;8;13;866560;911022103086497792
arrocna;8;arrocina;8;51;3365120;911118718845583360
arrocne;8;arrocine;8;13;874752;911118718912692224
arrodlla;9;arrodilla;9;51;3365120;911119267712729088
arrodlle;9;arrodille;9;13;874752;911119267714826240
arrgue;7;arrogue;7;13;866304;911121119178653696
arrlla;7;arrolla;7;51;3356672;911123711191416832
arrlle;7;arrolle;7;13;866304;911123713338900480
arromadce;10;arromadice;10;13;882944;911124073731932160
arromadza;10;arromadiza;10;51;3373312;911124073743925248
arrstra;8;arrostra;8;51;3356672;911127706064650240
arrstre;8;arrostre;8;13;866304;911127706131759104
arrgue;7;arrugue;7;13;867072;911226672294920192
arruna;7;arruina;7;51;3361024;911227649399980032
arrune;7;arruine;7;13;870656;911227651547463680
arrlla;7;arrulla;7;51;3357440;911229264307683328
arrlle;7;arrulle;7;13;867072;911229266455166976
arrmba;7;arrumba;7;51;3357440;911229642264805376
arrmbe;7;arrumbe;7;13;867072;911229644412289024
artesna;8;artesona;8;51;3364864;912077596064219136
artesne;8;artesone;8;13;874496;912077596131328000
articla;8;articula;8;51;3365632;912139270720847872
article;8;articule;8;13;875264;912139270787956736
asatea;7;asaetea;7;51;3357184;919396316419719168
asatee;7;asaetee;7;13;866816;919396318567202816
asalria;8;asalaria;8;51;3360512;919509244011610112
asalrie;8;asalarie;8;13;870144;919509244078718976
ascend;7;ascenda;7;8;550656;920518900611809280
ascended;8;ascended;8;257;16842752;920518902826401792
ascendr;8;ascender;8;1;92672;920518903061282816
ascendindo;11;ascendiendo;11;1;96768;920518904998075904
ascinda;8;ascienda;8;1;84480;920584494979743744
ascindan;9;asciendan;9;257;16861696;920584494987083776
ascinde;8;asciende;8;1;84480;920584495046852608
asegnda;8;asegunda;8;51;3361536;921684006607519744
asegnde;8;asegunde;8;13;871168;921684006674628608
asegra;7;asegura;7;51;3361536;921684073699606528
asegre;7;asegure;7;13;871168;921684075847090176
asemja;7;asemeja;7;51;3361280;921780693283897344
asemje;7;asemeje;7;13;870912;921780695431380992
asendrea;9;asenderea;9;51;3365376;921797659025997824
asendree;9;asenderee;9;13;875008;921797659028094976
asentid;7;asentid;7;257;16842752;921806516237893632
asentr;7;asentir;7;1;88320;921806523754086400
asesna;7;asesina;7;51;3361024;921888514142896128
asesne;7;asesine;7;13;870656;921888516290379776
asesra;7;asesora;7;51;3360768;921891881397256192
asesre;7;asesore;7;13;870400;921891883544739840
asevra;7;asevera;7;51;3361280;921939160397250560
asevre;7;asevere;7;13;870912;921939162544734208
asflta;7;asfalta;7;51;3356416;922136557094174720
asflte;7;asfalte;7;13;866048;922136559241658368
asfxia;7;asfixia;7;51;3356928;922283702673735680
asfxie;7;asfixie;7;13;866560;922283704821219328
asindo;7;asiendo;7;1;80384;923896607848529920
asinta;7;asienta;7;1;80384;923896875210244096
asintan;8;asientan;8;257;16857600;923896875445125120
asinte;7;asiente;7;5;342528;923896877357727744
asirra;7;asierra;7;1;80384;923899039873761280
asirre;7;asierre;7;5;342528;923899042021244928
asimla;7;asimila;7;51;3361024;924034726480576512
asimle;7;asimile;7;13;870656;924034728628060160
asintindo;10;asintiendo;10;1;92672;924058316825673728
asstan;7;asistan;7;257;16853248;924146144911556608
asistid;7;asistid;7;257;16842752;924146276981800960
asistindo;10;asistiendo;10;1;92672;924146277755895808
asistr;7;asistir;7;1;88320;924146284497993728
asolna;7;asolana;7;35;2311936;927390470328287232
asolne;7;asolane;7;5;345856;927390472475770880
asolpa;7;asolapa;7;51;3360512;927390504688025600
asolpe;7;asolape;7;13;870144;927390506835509248
asoldda;8;asoldada;8;1;87808;927391897884819456
asoldadas;9;asoldadas;9;1;65536;927391897894780928
asleos;7;asoleos;7;1;75776;927392696195088384
asmbra;7;asombra;7;51;3352576;927408680989622272
asmbre;7;asombre;7;13;862208;927408683137105920
asonnte;8;asonante;8;1;83712;927425664984809472
asorcha;8;asorocha;8;51;3360768;927503534822260736
asorche;8;asoroche;8;13;870400;927503534889369600
aspavent;9;aspaventa;9;50;3311360;927771303803879424
aspavent;9;aspavente;9;8;559616;927771303805976576
aspavinta;10;aspavienta;10;51;3369472;927771367600832512
aspavinte;10;aspaviente;10;13;879104;927771367600898048
asperza;8;aspereza;8;1;88576;927839479647961088
asperezas;9;asperezas;9;1;65536;927839479657922560
asperj;7;asperja;7;59;3892992;927839552108756992
asprjan;8;asperjan;8;257;16857600;927839552343638016
asprje;7;asperje;7;13;866816;927839554256240640
aspillra;9;aspillera;9;1;92672;927906659127787520
aspilleras;10;aspilleras;10;1;65536;927906659128098816
astlla;7;astilla;7;51;3356928;930158456491474944
astlle;7;astille;7;13;866560;930158458638958592
astreid;8;astreid;8;257;16842752;930313217115160576
astrer;8;astreir;8;1;92416;930313217350041600
astrnge;8;astringe;8;1;84224;930315174563282944
astringid;9;astringid;9;257;16842752;930315174632488960
astringindo;12;astringiendo;12;1;100864;930315174633244912
astringr;9;astringir;9;1;96512;930315174639828992
astrinj;8;astrinja;8;9;620288;930315176106786816
astrnjan;9;astrinjan;9;257;16861440;930315176114126848
astri;7;astria;7;9;616192;930315411776339968
astran;8;astrian;8;257;16861440;930315412011220992
astre;7;astrie;7;1;84224;930315413923823616
asulda;7;asuelda;7;1;80384;930650900261765120
asulde;7;asuelde;7;5;342528;930650902409248768
asumindo;9;asumiendo;9;1;88576;930790012716843008
atafga;7;atafaga;7;51;3360512;937417896114520064
atafgue;8;atafague;8;13;870144;937417906935824384
atalja;7;atalaja;7;51;3360512;937523500770394112
atalje;7;atalaje;7;13;870144;937523502917877760
atalnta;8;atalanta;8;51;3360512;937523579707195392
atalnte;8;atalante;8;13;870144;937523579774304256
atalya;7;atalaya;7;51;3360512;937523758468431872
atalye;7;atalaye;7;13;870144;937523760615915520
atalda;7;ataluda;7;51;3361536;937534392807456768
atalde;7;atalude;7;13;871168;937534394954940416
atarce;7;atarace;7;13;870144;937628935775059968
atarcea;8;ataracea;8;1;83712;937628935791837184
atarnta;8;ataranta;8;51;3360512;937629132823461888
atarnte;8;atarante;8;13;870144;937629132890570752
atarza;7;ataraza;7;51;3360512;937629328764567552
atardce;8;atardece;8;1;88576;937630618412384256
atardecr;9;atardecer;9;1;96768;937630618421821440
atardecindo;12;atardeciendo;12;1;100864;937630618482346224
atardzca;9;atardezca;9;1;88576;937630630727385088
atarquna;9;atarquina;9;51;3369216;937638043488616448
atarqune;9;atarquine;9;13;878848;937638043490713600
atarrya;8;atarraya;8;1;87808;937638258018353152
atarrayas;9;atarrayas;9;1;65536;937638258028314624
atarga;7;ataruga;7;51;3361536;937639997463330816
atargue;8;atarugue;8;13;871168;937640008284635136
atasja;7;atasaja;7;51;3360512;937646646072705024
atasje;7;atasaje;7;13;870144;937646648220188672
atsque;7;atasque;7;13;861952;937655633291771904
atemorce;9;atemorice;9;13;878848;939800731138392064
atemorza;9;atemoriza;9;51;3369216;939800731522170880
atempra;8;atempera;8;51;3365376;939801062351568896
atempre;8;atempere;8;13;875008;939801062418677760
atence;7;atenace;7;13;870144;939810366844567552
atencea;8;atenacea;8;51;3360512;939810366861344768
atencee;8;atenacee;8;13;870144;939810366928453632
atenza;7;atenaza;7;51;3360512;939810759834075136
atended;7;atended;7;257;16842752;939812049934876672
atendr;7;atender;7;1;88576;939812057451069440
atendindo;10;atendiendo;10;1;92672;939812119428448256
atenbra;8;atenebra;8;35;2312704;939812555684052992
atenbre;8;atenebre;8;5;346624;939812555751161856
atngan;7;atengan;7;257;16853504;939813635851550720
atenindo;9;ateniendo;9;1;88576;939814804157628416
aterindo;9;ateriendo;9;1;88576;939885172901806080
aterrja;8;aterraja;8;51;3364608;939890049778974720
aterrje;8;aterraje;8;13;874240;939890049846083584
aterrce;8;aterrice;8;13;874752;939890183526940672
aterrza;8;aterriza;8;51;3365120;939890195807862784
aterrorce;10;aterrorice;10;13;882944;939890294727983104
aterrorza;10;aterroriza;10;51;3373312;939890294739976192
atesra;7;atesora;7;51;3360768;939906279906738176
atesre;7;atesore;7;13;870400;939906282054221824
atestgua;9;atestigua;9;51;3365120;939908877641056256
atestig;9;atestige;9;8;559616;939908877643153408
atibrra;8;atiborra;8;51;3360768;941859021701251072
atibrre;8;atiborre;8;13;870400;941859021768359936
atinda;7;atienda;7;1;80384;941910998841819136
atindan;8;atiendan;8;257;16857600;941910999076700160
atinde;7;atiende;7;1;80384;941911000989302784
atinta;7;atienta;7;1;80384;941911273719726080
atinte;7;atiente;7;5;342528;941911275867209728
atirnta;8;atiranta;8;51;3360512;942132732450832384
atirnte;8;atirante;8;13;870144;942132732517941248
atizna;7;atizona;7;51;3360768;942281156303257600
atizne;7;atizone;7;13;870400;942281158450741248
atocna;7;atocina;7;51;3361024;945250937209880576
atocne;7;atocine;7;13;870656;945250939357364224
atolndra;9;atolondra;9;51;3360768;945412567332290560
atolndre;9;atolondre;9;13;870400;945412567334387712
atomce;7;atomice;7;13;870656;945426672239247360
atomza;7;atomiza;7;51;3361024;945427065228754944
atormnta;9;atormenta;9;51;3365376;945516871720370176
atormnte;9;atormente;9;13;875008;945516871722467328
atornlla;9;atornilla;9;51;3365120;945517488987701248
atornlle;9;atornille;9;13;874752;945517488989798400
atortla;8;atortola;8;51;3364864;945520890416726016
atortle;8;atortole;8;13;874496;945520890483834880
atortja;8;atortuja;8;51;3365632;945520992422199296
atortje;8;atortuje;8;13;875264;945520992489308160
atosga;7;atosiga;7;51;3361024;945532291927506944
atosgue;8;atosigue;8;13;870656;945532302748811264
atrabnca;9;atrabanca;9;51;3364608;946900538099236864
atrabnque;10;atrabanque;10;13;874240;946900538344685568
atrafga;8;atrafaga;8;51;3364608;946902733330317312
atrafgue;9;atrafague;9;13;874240;946902733668483072
atragnta;9;atraganta;9;51;3364608;946903287163518976
atragnte;9;atragante;9;13;874240;946903287165616128
atraig;7;atraiga;7;9;616192;946904482438971392
atragan;8;atraigan;8;257;16861440;946904482673852416
atraill;8;atrailla;8;50;3307264;946904574260674560
atraill;8;atraille;8;8;555520;946904574327783424
atrmpa;7;atrampa;7;51;3356416;946906836081049600
atrmpe;7;atrampe;7;13;866048;946906838228533248
atrnca;7;atranca;7;51;3356416;946907162498564096
atrnque;8;atranque;8;13;866048;946907413838036992
atrque;7;atraque;7;13;866048;946909123151134720
atraves;8;atravesa;8;50;3307264;946911604585267200
atraves;8;atravese;8;8;555520;946911604652376064
atravisa;9;atraviesa;9;1;92672;946911666091065344
atravise;9;atraviese;9;5;354816;946911666093162496
atrayndo;9;atrayendo;9;1;88576;946913251226550272
atrgua;7;atregua;7;51;3357184;946973992189689856
atreg;7;atrege;7;8;551424;946973994337173504
atrvan;7;atrevan;7;257;16857600;946981901908836352
atreved;7;atreved;7;257;16842752;946981965259603968
atrevr;7;atrever;7;1;88576;946981972775796736
atrevindo;10;atreviendo;10;1;92672;946982034753175552
atribuid;8;atribuid;8;257;16842752;947041616516874240
atribur;8;atribuir;8;1;92416;947041616751755264
atribla;8;atribula;8;51;3365632;947041618077155328
atrible;8;atribule;8;13;875264;947041618144264192
atribuy;8;atribuya;8;9;620288;947041625056477184
atribyan;9;atribuyan;9;257;16866048;947041625063817216
atribye;8;atribuye;8;1;88832;947041625123586048
atribuyndo;11;atribuyendo;11;1;96768;947041625130999296
atrinchra;10;atrinchera;10;51;3373568;947047903838355456
atrinchre;10;atrinchere;10;13;883200;947047903838420992
atrcha;7;atrocha;7;51;3356672;947147491688579072
atrche;7;atroche;7;13;866304;947147493836062720
atrfia;7;atrofia;7;51;3356672;947149158135889920
atrfie;7;atrofie;7;13;866304;947149160283373568
atroplla;9;atropella;9;51;3365376;947154593081982976
atroplle;9;atropelle;9;13;875008;947154593084080128
atruna;7;atruena;7;1;84480;947254247395688448
atrune;7;atruene;7;5;346624;947254249543172096
atrdan;7;aturdan;7;257;16853760;948889554583027712
aturdid;7;aturdid;7;257;16842752;948889686653272064
aturdindo;10;aturdiendo;10;1;92672;948889687427366912
aturdr;7;aturdir;7;1;88320;948889694169464832
aturrlla;9;aturrulla;9;51;3365632;948897593889914880
aturrlle;9;aturrulle;9;13;875264;948897593892012032
aumnta;7;aumenta;7;51;3357184;962177472042893312
aumnte;7;aumente;7;13;866816;962177474190376960
aurela;7;aureola;7;51;3360768;964992634126860288
aurele;7;aureole;7;13;870400;964992636274343936
ausclta;8;ausculta;8;51;3361536;965523708460400640
ausclte;8;ausculte;8;13;871168;965523708527509504
ausnta;7;ausenta;7;51;3357184;965555171763421184
ausnte;7;ausente;7;13;866816;965555173910904832
auspcia;8;auspicia;8;51;3361024;965745649284808704
auspcie;8;auspicie;8;13;870656;965745649351917568
autentca;9;autentica;9;51;3369216;966118126062665728
autentifca;11;autentifica;11;51;3377408;966118126117241344
autentifque;12;autentifique;12;13;887040;966118126117481040
autentque;10;autentique;10;13;878848;966118126308114432
automatce;10;automatice;10;13;882944;966293177757155328
automatza;10;automatiza;10;51;3373312;966293177769148416
autpsia;8;autopsia;8;1;79872;966295130220789760
autopsias;9;autopsias;9;1;65536;966295130230751232
autorce;8;autorice;8;13;874752;966296054779609088
autorza;8;autoriza;8;51;3365120;966296067060531200
auxlia;7;auxilia;7;51;3356928;968439001784516608
auxlie;7;auxilie;7;13;866560;968439003932000256
avalentna;10;avalentona;10;51;3373056;973554575991652352
avalentne;10;avalentone;10;13;882688;973554575991717888
avalra;7;avalora;7;51;3360768;973560131809705984
avalre;7;avalore;7;13;870400;973560133957189632
avarcia;8;avaricia;8;1;84224;973662133004795904
avaricias;9;avaricias;9;1;65536;973662133014757376
avaslla;8;avasalla;8;51;3360512;973675483373764608
avaslle;8;avasalle;8;13;870144;973675483440873472
avecnda;8;avecinda;8;51;3361024;975650236322021376
avecnde;8;avecinde;8;13;870656;975650236389130240
avejnta;8;avejenta;8;51;3361280;975771191191011328
avjente;8;avejente;8;13;862720;975771191258120192
avejga;7;avejiga;7;51;3361024;975773259737858048
avejgue;8;avejigue;8;13;870656;975773270559162368
avellna;8;avellana;8;51;3364608;975809997294272512
avellne;8;avellane;8;13;874240;975809997361381376
avngan;7;avengan;7;257;16853504;975842432870514688
aventja;8;aventaja;8;51;3364608;975849577565388800
aventje;8;aventaje;8;13;874240;975849577632497664
aventra;8;aventura;8;51;3365632;975849925457739776
aventre;8;aventure;8;13;875264;975849925524848640
avergonc;9;avergonce;9;8;559616;975913042185814016
avergonz;9;avergonza;9;50;3311360;975913042569592832
avergnce;10;avergence;10;5;354816;975913140616773632
avergnza;10;avergenza;10;1;92672;975913140628766720
avergua;8;averigua;8;51;3361024;975914007980408832
averig;8;averige;8;8;555520;975914008047517696
averrga;8;averruga;8;51;3365632;975919188784709632
averrgue;9;averrugue;9;13;875264;975919189122875392
avinta;7;avienta;7;1;80384;977940070738690048
avinte;7;aviente;7;5;342528;977940072886173696
avingra;8;avinagra;8;51;3360512;978091039392792576
avingre;8;avinagre;8;13;870144;978091039459901440
avinindo;9;aviniendo;9;1;88576;978095400990277632
avitulla;9;avitualla;9;51;3364608;978207481509969920
avitulle;9;avitualle;9;13;874240;978207481512067072
avizra;7;avizora;7;51;3360768;978310022041698304
avizre;7;avizore;7;13;870400;978310024189181952
azacna;7;azacana;7;1;83712;1045451630872363008
azacanas;8;azacanas;8;1;65536;1045451631191130112
azacnea;8;azacanea;8;51;3360512;1045451633036623872
azacnee;8;azacanee;8;13;870144;1045451633103732736
azacnes;8;azacanes;8;12288;805324544;1045451633338613760
azadna;7;azadona;7;51;3360768;1045476919639801856
azadne;7;azadone;7;13;870400;1045476921787285504
azafrnes;9;azafranes;9;12288;805328640;1045513537014202368
azucra;7;azucara;7;51;3360512;1056710698660265984
azucre;7;azucare;7;13;870144;1056710700807749632
azulja;7;azuleja;7;51;3361280;1056871089918967808
azulje;7;azuleje;7;13;870912;1056871092066451456
aadindo;9;aadiendo;9;1;88576;1081502270559354880
asgue;7;ausgue;7;13;862976;1093024322877915136
babsea;7;babosea;7;51;3356672;1172336217610518528
babsee;7;babosee;7;13;866304;1172336219758002176
bachillra;10;bachillera;10;51;3373568;1172770650961494016
bachillre;10;bachillere;10;13;883200;1172770650961559552
bachillrea;11;bachillerea;11;51;3373568;1172770650961560064
bachillree;11;bachilleree;11;13;883200;1172770650961562112
badjea;7;badajea;7;51;3356416;1173210879110414336
badjee;7;badajee;7;13;866048;1173210881257897984
badulquea;10;badulaquea;10;51;3364608;1173563762568347648
badulquee;10;badulaquee;10;13;874240;1173563762568413184
bailtea;8;bailotea;8;51;3360768;1176222151565377536
bailtee;8;bailotee;8;13;870400;1176222151632486400
baldra;7;baladra;7;51;3356416;1177711403541200896
baldre;7;baladre;7;13;866048;1177711405688684544
baladrna;9;baladrona;9;1;92160;1177711411292798976
baladronas;10;baladronas;10;1;65536;1177711411293110272
baladrnea;10;baladronea;10;51;3368960;1177711411294912512
baladrnee;10;baladronee;10;13;878592;1177711411294978048
baladrnes;10;baladrones;10;12288;805332992;1177711411295207424
balncea;8;balancea;8;51;3356416;1177716645565562880
balncee;8;balancee;8;13;866048;1177716645632671744
balsta;7;balasta;7;51;3356416;1177719684238147584
balste;7;balaste;7;13;866048;1177719686385631232
balastra;9;balaustra;9;51;3361536;1177720777072967680
balastre;9;balaustre;9;13;871168;1177720777075064832
balyes;7;balayes;7;12288;805320448;1177722734738669568
balbce;7;balbuce;7;1;84736;1177738086025527296
balbcea;8;balbucea;8;51;3361536;1177738086042304512
balbcee;8;balbucee;8;13;871168;1177738086109413376
balbceos;9;balbuceos;9;1;84736;1177738086287147008
balbucid;8;balbucid;8;257;16842752;1177738088240119808
balbucindo;11;balbuciendo;11;1;96768;1177738088264310272
balbucr;8;balbucir;8;1;92416;1177738088475000832
baldnes;8;baldones;8;12288;805324800;1177770161160060928
baldsa;7;baldosa;7;1;83968;1177770244593156096
baldosas;8;baldosas;8;1;65536;1177770244911923200
ballsta;8;ballesta;8;1;84480;1177905494740697088
ballestas;9;ballestas;9;1;65536;1177905494750658560
ballstea;9;ballestea;9;51;3361280;1177905494808330240
ballstee;9;ballestee;9;13;870912;1177905494810427392
bamblea;8;bambalea;8;51;3360512;1178290195498270720
bamblee;8;bambalee;8;13;870144;1178290195565379584
bamblea;8;bambolea;8;51;3360768;1178297892079665152
bamblee;8;bambolee;8;13;870400;1178297892146774016
bambnea;8;bambonea;8;51;3360768;1178297926439403520
bambnee;8;bambonee;8;13;870400;1178297926506512384
bandja;7;bandeja;7;1;84480;1178890492323037184
bandejas;8;bandejas;8;1;65536;1178890492641804288
banderce;9;banderice;9;13;878848;1178890634109911040
banderza;9;banderiza;9;51;3369216;1178890634493689856
baqutea;8;baquetea;8;51;3361280;1180878583309008896
baqutee;8;baquetee;8;13;870912;1180878583376117760
baratas;7;baratas;7;1;65536;1181097616960651264
bartea;7;baratea;7;51;3356416;1181097676016451584
bartee;7;baratee;7;13;866048;1181097678163935232
barbarce;9;barbarice;9;13;878848;1181105050528251904
barbarza;9;barbariza;9;51;3369216;1181105050912030720
barbcha;8;barbecha;8;51;3361280;1181106991280422912
barbche;8;barbeche;8;13;870912;1181106991347531776
barblla;8;barbilla;8;1;84224;1181109347069984768
barbillas;9;barbillas;9;1;65536;1181109347079946240
barbta;7;barbota;7;51;3360768;1181112777121464320
barbte;7;barbote;7;13;870400;1181112779268947968
barbtea;8;barbotea;8;51;3360768;1181112779285725184
barbtee;8;barbotee;8;13;870400;1181112779352834048
barbteos;9;barboteos;9;1;83968;1181112779530567680
barblla;8;barbulla;8;51;3361536;1181115944139751424
barblle;8;barbulle;8;13;871168;1181115944206860288
barcias;7;barcias;7;1;65536;1181126754018787328
barcna;7;barcina;7;1;84224;1181126967693410304
barcinas;8;barcinas;8;1;65536;1181126968012177408
barlovntea;11;barloventea;11;51;3369472;1181288735734579712
barlovntee;11;barloventee;11;13;879104;1181288735734581760
barnce;7;barnice;7;13;870656;1181320294908821504
barnza;7;barniza;7;51;3361024;1181320687898329088
brquea;7;barquea;7;51;3348224;1181379700748976128
brquee;7;barquee;7;13;857856;1181379702896459776
barrna;7;barrena;7;51;3361280;1181388651460820992
barrne;7;barrene;7;13;870912;1181388653608304640
barrros;8;barreros;8;385;25250304;1181388728015257600
barrtea;8;barretea;8;51;3361280;1181388756704296960
barrtee;8;barretee;8;13;870912;1181388756771405824
barrindo;9;barriendo;9;1;88576;1181390702919548928
barrnta;8;barrunta;8;51;3361536;1181397457771167744
barrnte;8;barrunte;8;13;871168;1181397457838276608
bartlea;8;bartolea;8;51;3360768;1181429301195571200
bartlee;8;bartolee;8;13;870400;1181429301262680064
bartla;7;bartula;7;51;3361536;1181432597566193664
bartle;7;bartule;7;13;871168;1181432599713677312
bartlea;8;bartulea;8;51;3361536;1181432599730454528
bartlee;8;bartulee;8;13;871168;1181432599797563392
barznea;8;barzonea;8;51;3360768;1181534888671576064
barznee;8;barzonee;8;13;870400;1181534888738684928
barznes;8;barzones;8;12288;805324800;1181534888973565952
bsquea;7;basquea;7;51;3348224;1181942650702397440
bsquee;7;basquee;7;13;857856;1181942652849881088
bastrda;8;bastarda;8;1;83712;1181984657109942272
bastardas;9;bastardas;9;1;65536;1181984657119903744
bastrdea;9;bastardea;9;51;3360512;1181984657177575424
bastrdee;9;bastardee;9;13;870144;1181984657179672576
bastrdeos;10;bastardeos;10;1;83712;1181984657185226752
bastlla;8;bastilla;8;1;84224;1181988956372205568
bastillas;9;bastillas;9;1;65536;1181988956382167040
bastimnta;10;bastimenta;10;51;3369472;1181988970022584320
bastimnte;10;bastimente;10;13;879104;1181988970022649856
bastines;9;bastiones;9;12288;805328896;1181989009062625280
bastnea;8;bastonea;8;51;3360768;1181992285508730880
bastnee;8;bastonee;8;13;870400;1181992285575839744
basrea;7;basurea;7;51;3357440;1182011370179133440
basree;7;basuree;7;13;867072;1182011372326617088
batlla;7;batalla;7;51;3356416;1182219298135867392
batlle;7;batalle;7;13;866048;1182219300283351040
batnea;7;batanea;7;51;3356416;1182220277388410880
batnee;7;batanee;7;13;866048;1182220279535894528
batnes;7;batanes;7;12288;805320448;1182220287052087296
batindo;8;batiendo;8;1;84480;1182356223555534848
batque;7;batuque;7;1;80640;1182574047402131456
batquea;8;batuquea;8;51;3357440;1182574047418908672
batquee;8;batuquee;8;13;867072;1182574047486017536
bautce;7;bautice;7;13;870656;1183114697885351936
bautza;7;bautiza;7;51;3361024;1183115090874859520
bazque;7;bazuque;7;13;867072;1185951747122659328
bazquea;8;bazuquea;8;51;3357440;1185951747139436544
bazquee;8;bazuquee;8;13;867072;1185951747206545408
beatifca;9;beatifica;9;51;3369216;1243913346592800768
beatifque;10;beatifique;10;13;878848;1243913346838249472
bebindo;8;bebiendo;8;1;84480;1244280718431879168
beborrtea;10;beborrotea;10;51;3368960;1244393493085306880
beborrtee;10;beborrotee;10;13;878592;1244393493085372416
bellquea;9;bellaquea;9;51;3360512;1249960856000135168
bellquee;9;bellaquee;9;13;870144;1249960856002232320
belltea;8;bellotea;8;35;2312192;1249968595463569408
belltee;8;bellotee;8;5;346112;1249968595530678272
bemles;7;bemoles;7;12288;805320704;1250582422509060096
bendecid;8;bendecid;8;257;16842752;1250947970463956992
bendecr;8;bendecir;8;1;92416;1250947970698838016
bendce;7;bendice;7;1;84224;1250950167272620032
bendicindo;11;bendiciendo;11;1;96768;1250950169511403008
bendig;7;bendiga;7;9;616192;1250950233844613120
bendgan;8;bendigan;8;257;16861440;1250950234079494144
benefcia;9;beneficia;9;51;3365120;1250966212348215296
benefcie;9;beneficie;9;13;874752;1250966212350312448
berlnga;8;berlinga;8;1;84224;1253342894643740672
berlingas;9;berlingas;9;1;65536;1253342894653702144
bermjea;8;bermejea;8;35;2312704;1253358218013310976
bermjee;8;bermejee;8;5;346624;1253358218080419840
brreos;7;berreos;7;1;72192;1253446272342294528
berrnche;9;berrinche;9;1;84224;1253448445732585472
bestialce;10;bestialice;10;13;882944;1254046361567444992
bestialza;10;bestializa;10;51;3373312;1254046361579438080
besque;7;besuque;7;13;867072;1254068691486638080
besquea;8;besuquea;8;51;3357440;1254068691503415296
besquee;8;besuquee;8;13;867072;1254068691570524160
besqueos;9;besuqueos;9;1;80640;1254068691748257792
betnea;7;betunea;7;51;3357440;1254629715147227136
betnee;7;betunee;7;13;867072;1254629717294710784
bienquer;9;bienquera;9;8;558848;1318121841176870912
bienquered;10;bienquered;10;257;16842752;1318121841179033600
bienquerr;10;bienquerer;10;1;100864;1318121841179262976
bienquira;10;bienquiera;10;1;96768;1318121843115180032
bienquiran;11;bienquieran;11;257;16873984;1318121843115187200
bienquire;10;bienquiere;10;1;96768;1318121843115245568
bienqusta;10;bienquista;10;51;3369216;1318121843351109632
bienquste;10;bienquiste;10;13;878848;1318121843351175168
bienviv;8;bienviva;8;9;620288;1318124392638578688
bienvvan;9;bienvivan;9;257;16865536;1318124392645918720
bienvve;8;bienvive;8;1;88320;1318124392705687552
bienvivid;9;bienvivid;9;257;16842752;1318124392774893568
bienvivindo;12;bienviviendo;12;1;100864;1318124392775649520
bienvivr;9;bienvivir;9;1;96512;1318124392782233600
bifrca;7;bifurca;7;35;2308864;1318808174500773888
bifrque;8;bifurque;8;5;342784;1318808425840246784
bigrdea;8;bigardea;8;51;3356416;1319019300077436928
bigrdee;8;bigardee;8;13;866048;1319019300144545792
bilque;7;biloque;7;13;866304;1322080082734350336
biografi;9;biografia;9;50;3311360;1323628401953079296
biografi;9;biografie;9;8;559616;1323628401955176448
bisque;7;biseque;7;13;866816;1325844810547855360
bizrrea;8;bizarrea;8;51;3356416;1329715589710610432
bizrree;8;bizarree;8;13;866048;1329715589777719296
bizccha;8;bizcocha;8;1;83968;1329748868727832576
bizcochas;9;bizcochas;9;1;65536;1329748868737794048
bzquea;7;bizquea;7;51;3348736;1329998488452202496
bzquee;7;bizquee;7;13;858368;1329998490599686144
blndea;7;blandea;7;51;3352320;1369905812738146304
blndee;7;blandee;7;13;861952;1369905814885629952
blandid;7;blandid;7;257;16842752;1369905883068235776
blandindo;10;blandiendo;10;1;92672;1369905883842330624
blandr;7;blandir;7;1;88320;1369905890584428544
blnquea;8;blanquea;8;51;3352320;1369913236605894656
blanquce;9;blanquece;9;1;92672;1369913236642070528
blanqueced;10;blanqueced;10;257;16842752;1369913236642136064
blanquecr;10;blanquecer;10;1;100864;1369913236642365440
blnquee;8;blanquee;8;13;861952;1369913236673003520
blanquezc;10;blanquezca;10;9;628480;1369913237026914304
blanquzcan;11;blanquezcan;11;257;16869888;1369913237026921472
blasfma;8;blasfema;8;51;3365376;1369994879639224320
blasfme;8;blasfeme;8;13;875008;1369994879706333184
blasna;7;blasona;7;51;3360768;1369999975601143808
blasne;7;blasone;7;13;870400;1369999977748627456
blcaos;7;blocaos;7;1;75776;1377592130234482688
blquea;7;bloquea;7;51;3352576;1377849234493014016
blquee;7;bloquee;7;13;862208;1377849236640497664
blqueos;8;bloqueos;8;1;75776;1377849242327973888
bobinas;7;bobinas;7;1;65536;1424429435792130048
bochnchea;10;bochinchea;10;51;3361024;1424972259665657856
bochnchee;10;bochinchee;10;13;870656;1424972259665723392
bodegnea;9;bodegonea;9;51;3364864;1425481356582322176
bodegnee;9;bodegonee;9;13;874496;1425481356584419328
boictea;8;boicotea;8;51;3360768;1428265401023725568
boictee;8;boicotee;8;13;870400;1428265401090834432
boletas;7;boletas;7;1;65536;1429991865117048832
bolnea;7;bolinea;7;51;3356928;1430058994382143488
bolnee;7;bolinee;7;13;866560;1430058996529627136
bombrdea;9;bombardea;9;51;3360512;1430491877240995840
bombrdee;9;bombardee;9;13;870144;1430491877243092992
bonifca;8;bonifica;8;51;3365120;1431180566052470784
bonifque;9;bonifique;9;13;874752;1431180573906829312
borblla;8;borbolla;8;51;3360768;1433314224737615872
borblle;8;borbolle;8;13;870400;1433314224804724736
borbllea;9;borbollea;9;51;3360768;1433314224805249024
borbllee;9;borbollee;9;13;870400;1433314224807346176
borblleos;10;borbolleos;10;1;83968;1433314224812900352
borbollnea;11;borbollonea;11;51;3373056;1433314224979919360
borbollnee;11;borbollonee;11;13;882688;1433314224979921408
borbta;7;borbota;7;35;2312192;1433314356254212096
borbte;7;borbote;7;5;346112;1433314358401695744
borbtea;8;borbotea;8;35;2312192;1433314358418472960
borbtee;8;borbotee;8;5;346112;1433314358485581824
borbteos;9;borboteos;9;1;83968;1433314358663315456
bordnea;8;bordonea;8;51;3360768;1433349439711346688
bordnee;8;bordonee;8;13;870400;1433349439778455552
borrchea;9;borrachea;9;51;3360512;1433587846434258944
borrchee;9;borrachee;9;13;870144;1433587846436356096
borrjea;8;borrajea;8;51;3360512;1433587965015097344
borrjee;8;borrajee;8;13;870144;1433587965082206208
borrnea;8;borronea;8;51;3360768;1433595730315968512
borrnee;8;borronee;8;13;870400;1433595730383077376
bosquja;8;bosqueja;8;51;3365376;1434144234683760640
bosquje;8;bosqueje;8;13;875008;1434144234750869504
bostce;7;bostece;7;13;870912;1434188178088001536
bostza;7;bosteza;7;51;3361280;1434188571077509120
botnes;7;botones;7;12288;805320704;1434668156789456896
brascas;7;brascas;7;1;65536;1478079555913646080
bravucnea;10;bravuconea;10;51;3368960;1478142260526202880
bravucnee;10;bravuconee;10;13;878592;1478142260526268416
brechas;7;brechas;7;1;65536;1480052629529690112
bribnea;8;bribonea;8;51;3360768;1482290901286912000
bribnee;8;bribonee;8;13;870400;1482290901354020864
brnque;7;brinque;7;13;862464;1482503227273379840
brsque;7;brisque;7;13;862464;1482591188203601920
briznas;7;briznas;7;1;65536;1482712348157280256
brceos;7;broceos;7;1;75776;1485680720314630144
brochas;7;brochas;7;1;65536;1485682129063903232
brncea;7;broncea;7;51;3352576;1485872953387122688
brncee;7;broncee;7;13;862208;1485872955534606336
broqula;8;broquela;8;51;3365376;1485935631472263168
broqule;8;broquele;8;13;875008;1485935631539372032
brutalce;9;brutalice;9;13;878848;1489355231319293952
brutalza;9;brutaliza;9;51;3369216;1489355231703072768
brundo;8;bruendo;8;1;84480;1489498199704993792
bufnea;7;bufonea;7;51;3356672;1534873238834774016
bufnee;7;bufonee;7;13;866304;1534873240982257664
bufonce;8;bufonice;8;13;874752;1534873308711878656
bufonza;8;bufoniza;8;51;3365120;1534873320992800768
bullndo;8;bullendo;8;1;84480;1538193370675937280
burbjea;8;burbujea;8;35;2312960;1541403876211556352
burbjee;8;burbujee;8;5;346880;1541403876278665216
buscnea;8;busconea;8;51;3360768;1541981188535615488
buscnee;8;busconee;8;13;870400;1541981188602724352
cables;7;cabales;7;12288;805320448;1748546840682299392
cablga;7;cabalga;7;51;3356416;1748546865378361344
cablgue;8;cabalgue;8;13;866048;1748546876199665664
cabllea;8;caballea;8;51;3356416;1748546953441968128
cabllee;8;caballee;8;13;866048;1748546953509076992
cabcea;7;cabecea;7;51;3357184;1748612251960475648
cabcee;7;cabecee;7;13;866816;1748612254107959296
cabceos;8;cabeceos;8;1;80384;1748612259795435520
cabstra;8;cabestra;8;51;3357184;1748621314895118336
cabstre;8;cabestre;8;13;866816;1748621314962227200
cabindo;8;cabiendo;8;1;84480;1748683876697374720
cabldea;8;cabildea;8;51;3356928;1748687553491369984
cabldee;8;cabildee;8;13;866560;1748687553558478848
cablegrafi;11;cablegrafia;11;50;3319552;1748736540281029120
cablegrafi;11;cablegrafie;11;8;567808;1748736540281031168
cabrllea;9;cabrillea;9;35;2312448;1748844375163011072
cabrllee;9;cabrillee;9;5;346368;1748844375165108224
cabrila;8;cabriola;8;51;3364864;1748844426634985472
cabrile;8;cabriole;8;13;874496;1748844426702094336
cacara;8;cacaraa;8;1;87808;1749113025299742720
cacaraas;9;cacaraas;9;1;65536;1749113025309704192
cacrea;7;cacarea;7;51;3356416;1749113079506927616
cacree;7;cacaree;7;13;866048;1749113081654411264
ccheos;7;cacheos;7;1;71424;1749229259446026240
cachtea;8;cachetea;8;51;3361280;1749229337845956608
cachtee;8;cachetee;8;13;870912;1749229337913065472
cachiflla;10;cachifolla;10;51;3368960;1749231301910609920
cachiflle;10;cachifolle;10;13;878592;1749231301910675456
cachndea;9;cachondea;9;51;3360768;1749234731855642624
cachndee;9;cachondee;9;13;870400;1749234731857739776
cachchea;9;cachuchea;9;51;3361536;1749237843559448576
cachchee;9;cachuchee;9;13;871168;1749237843561545728
cacquea;8;caciquea;8;51;3356928;1749253544281636864
cacquee;8;caciquee;8;13;866560;1749253544348745728
cadque;7;caduque;7;13;867072;1750027600450813952
cairles;8;caireles;8;12288;805325312;1752782822289965056
calabcea;9;calabacea;9;51;3364608;1754170765433372672
calabcee;9;calabacee;9;13;874240;1754170765435469824
calabrte;9;calabrote;9;1;92160;1754171064187355136
calaftea;9;calafatea;9;51;3364608;1754172973583433728
calaftee;9;calafatee;9;13;874240;1754172973585530880
calndra;8;calandra;8;51;3356416;1754177422028177408
calndre;8;calandre;8;13;866048;1754177422095286272
calavra;8;calavera;8;1;88576;1754181837254557696
calaveras;9;calaveras;9;1;65536;1754181837264519168
calavrea;9;calaverea;9;51;3365376;1754181837322190848
calavree;9;calaveree;9;13;875008;1754181837324288000
calcta;7;calceta;7;1;84480;1754207924332265472
calcetas;8;calcetas;8;1;65536;1754207924651032576
calcifca;9;calcifica;9;51;3369216;1754209887183175680
calcifque;10;calcifique;10;13;878848;1754209887428624384
calcna;7;calcina;7;51;3361024;1754210020276305920
calcne;7;calcine;7;13;870656;1754210022423789568
calcografi;11;calcografia;11;50;3319552;1754213207698981376
calcografi;11;calcografie;11;8;567808;1754213207698983424
calcla;7;calcula;7;51;3361536;1754216582986334208
calcle;7;calcule;7;13;871168;1754216585133817856
calecr;7;calecer;7;1;88576;1754241760621494272
calecindo;10;caleciendo;10;1;92672;1754241822598873088
calendas;8;calendas;8;6145;402718720;1754247781947539456
calent;7;calenta;7;50;3303168;1754248056506679296
calent;7;calente;7;8;551424;1754248058654162944
calros;7;caleros;7;385;25246208;1754250179294265344
caltea;7;caletea;7;51;3357184;1754251097343524864
caltee;7;caletee;7;13;866816;1754251099491008512
calzca;7;calezca;7;1;80384;1754254361518669824
calzcan;8;calezcan;8;257;16857600;1754254361753550848
calbra;7;calibra;7;51;3356928;1754311793821351936
calbre;7;calibre;7;13;866560;1754311795968835584
calche;7;caliche;7;1;80128;1754312173925957632
calinta;8;calienta;8;1;84480;1754313384586641408
calinte;8;caliente;8;5;346624;1754313384653750272
califca;8;califica;8;51;3365120;1754313839316303872
califque;9;califique;9;13;874752;1754313847170662400
cllaos;7;callaos;7;1;71424;1754363978747740160
calljea;8;callejea;8;51;3361280;1754366084372234240
calljee;8;callejee;8;13;870912;1754366084439343104
callsa;7;callosa;7;1;83968;1754371734384934912
callosas;8;callosas;8;1;65536;1754371734703702016
calofri;8;calofria;8;50;3307264;1754419550272618496
calofri;8;calofrie;8;8;555520;1754419550339727360
calmnia;8;calumnia;8;51;3357440;1754528882960105472
calmnie;8;calumnie;8;13;867072;1754528883027214336
calvces;8;calveces;8;12288;805325312;1754541886275584000
camandlea;10;camandulea;10;51;3369728;1754740373779398656
camandlee;10;camandulee;10;13;879360;1754740373779464192
cambalche;10;cambalache;10;1;91904;1754750945692041216
cambalchea;11;cambalachea;11;51;3368704;1754750945692041728
cambalchee;11;cambalachee;11;13;878336;1754750945692043776
camlea;7;camelea;7;51;3357184;1754809649250435072
camlee;7;camelee;7;13;866816;1754809651397918720
camleos;8;cameleos;8;1;80384;1754809657085394944
camrrea;8;camorrea;8;51;3356672;1754989095148322816
camrree;8;camorree;8;13;866304;1754989095215431680
campnea;8;campanea;8;51;3360512;1754997272766054400
campnee;8;campanee;8;13;870144;1754997272833163264
camfla;7;camufla;7;51;3357440;1755087945951346688
camfle;7;camufle;7;13;867072;1755087948098830336
canalce;8;canalice;8;13;874752;1755302300336783360
canalza;8;canaliza;8;51;3365120;1755302312617705472
cancnea;8;cancanea;8;51;3360512;1755331524300898304
cancnee;8;cancanee;8;13;870144;1755331524368007168
cancla;7;cancela;7;51;3361280;1755333686800154624
cancle;7;cancele;7;13;870912;1755333688947638272
cancra;7;cancera;7;35;2312704;1755333789879369728
cancre;7;cancere;7;5;346624;1755333792026853376
canchas;7;canchas;7;1;65536;1755335156752711680
cndente;8;candente;8;1;71424;1755351323630370816
candnguea;10;candonguea;10;51;3360768;1755356814480261120
candnguee;10;candonguee;10;13;870400;1755356814480326656
canonce;8;canonice;8;13;874752;1755549690453032960
canonza;8;canoniza;8;51;3365120;1755549702733955072
cantna;7;cantona;7;51;3360768;1755638285880786944
cantne;7;cantone;7;13;870400;1755638288028270592
cantnea;8;cantonea;8;51;3360768;1755638288045047808
cantnee;8;cantonee;8;13;870400;1755638288112156672
cantrrea;9;canturrea;9;51;3361536;1755641662346362880
cantrree;9;canturree;9;13;871168;1755641662348460032
cantrria;9;canturria;9;51;3361536;1755641662413471744
cantrrie;9;canturrie;9;13;871168;1755641662415568896
capacta;8;capacita;8;51;3365120;1756423261500997632
capacte;8;capacite;8;13;874752;1756423261568106496
capitalce;10;capitalice;10;13;882944;1756573203240140800
capitalza;10;capitaliza;10;51;3373312;1756573203252133888
capitnea;9;capitanea;9;51;3364608;1756573204245643264
capitnee;9;capitanee;9;13;874240;1756573204247740416
capitla;8;capitula;8;51;3365632;1756573546701651968
capitle;8;capitule;8;13;875264;1756573546768760832
capnea;7;caponea;7;35;2308096;1756675520482770944
capnee;7;caponee;7;5;342016;1756675522630254592
capnes;7;capones;7;12288;805320704;1756675530146447360
captea;7;capotea;7;51;3356672;1756678819017654272
captee;7;capotee;7;13;866304;1756678821165137920
capsul;7;capsula;7;32;2123520;1756749857776730112
captra;7;captura;7;51;3361536;1756767553041989632
captre;7;capture;7;13;871168;1756767555189473280
carabna;8;carabina;8;1;88320;1757548608430800896
carabinas;9;carabinas;9;1;65536;1757548608440762368
caraclea;9;caracolea;9;35;2316288;1757549260259721216
caraclee;9;caracolee;9;5;350208;1757549260261818368
caracterce;11;caracterice;11;13;887040;1757549342623320576
caracterza;11;caracteriza;11;51;3377408;1757549342623695360
carambla;9;carambola;9;1;92160;1757554536207613952
carambolas;10;carambolas;10;1;65536;1757554536207925248
caramblea;10;carambolea;10;51;3368960;1757554536209727488
caramblee;10;carambolee;10;13;878592;1757554536209793024
caramelce;10;caramelice;10;13;882944;1757554586087407616
caramelza;10;carameliza;10;51;3373312;1757554586099400704
carbna;7;carbona;7;307;20137984;1757573426345672704
carbne;7;carbone;7;13;870400;1757573428493156352
carbonce;9;carbonice;9;13;878848;1757573430693593088
carbonza;9;carboniza;9;51;3369216;1757573431077371904
carbra;7;carbura;7;51;3361536;1757576793600032768
carbre;7;carbure;7;13;871168;1757576795747516416
carcom;7;carcoma;7;9;616192;1757591001351847936
carcman;8;carcoman;8;257;16861184;1757591001586728960
carcme;7;carcome;7;1;83968;1757591003499331584
carcomed;8;carcomed;8;257;16842752;1757591003566440448
carcomr;8;carcomer;8;1;92672;1757591003801321472
carcomindo;11;carcomiendo;11;1;96768;1757591005738114560
cardce;7;carduce;7;13;871168;1757611722421567488
cardza;7;carduza;7;51;3361536;1757612115411075072
careced;7;careced;7;257;16842752;1757619452825829376
carecr;7;carecer;7;1;88576;1757619460342022144
carecindo;10;careciendo;10;1;92672;1757619522319400960
carenas;7;carenas;7;1;65536;1757625439473369088
carezc;7;carezca;7;9;616192;1757632061239197696
carzcan;8;carezcan;8;257;16857600;1757632061474078720
cargsea;8;cargosea;8;51;3360768;1757661475339501568
cargsee;8;cargosee;8;13;870400;1757661475406610432
caricatra;10;caricatura;10;51;3373824;1757689761802240000
caricatre;10;caricature;10;13;883456;1757689761802305536
caricaturce;12;caricaturice;12;13;891136;1757689761802372688
caricaturza;12;caricaturiza;12;51;3381504;1757689761802384400
carmna;7;carmena;7;51;3361280;1757761442834022400
carmne;7;carmene;7;13;870912;1757761444981506048
carmneos;9;carmneos;9;1;65536;1757763644266381312
carmnes;8;carmines;8;12288;805325056;1757763644323528704
carptea;8;carpetea;8;51;3361280;1757814324635631616
carptee;8;carpetee;8;13;870912;1757814324702740480
carpindo;9;carpiendo;9;1;88576;1757816270850883584
carrspea;9;carraspea;9;51;3360512;1757847298777808896
carrspee;9;carraspee;9;13;870144;1757847298779906048
carrtea;8;carretea;8;51;3361280;1757849509007720448
carrtee;8;carretee;8;13;870912;1757849509074829312
carrza;7;carroza;7;1;83968;1757855107480813568
carrozas;8;carrozas;8;1;65536;1757855107799580672
carra;7;carroa;7;1;83968;1757855141840551936
carroas;8;carroas;8;1;65536;1757855142159319040
cascablea;10;cascabelea;10;51;3369472;1758146068096761856
cascablee;10;cascabelee;10;13;879104;1758146068096827392
cascamja;9;cascamaja;9;51;3368704;1758146254892171264
cascamje;9;cascamaje;9;13;878336;1758146254894268416
casctea;8;cascotea;8;51;3360768;1758154073728614400
casctee;8;cascotee;8;13;870400;1758154073795723264
castatea;10;castaetea;10;51;3369472;1758445582070333440
castatee;10;castaetee;10;13;879104;1758445582070398976
castellance;12;castellanice;12;13;891136;1758447509659862608
castellanza;12;castellaniza;12;51;3381504;1758447509659874320
castga;7;castiga;7;51;3361024;1758449616853925888
castgue;8;castigue;8;13;870656;1758449627675230208
castza;7;castiza;7;1;84224;1758449943271440384
castizas;8;castizas;8;1;65536;1758449943590207488
catalga;8;cataloga;8;51;3364864;1758680105216901120
catalgue;9;catalogue;9;13;874496;1758680105555066880
cataplta;9;catapulta;9;51;3365632;1758682410323017728
cataplte;9;catapulte;9;13;875264;1758682410325114880
catequce;9;catequice;9;13;878848;1758753326929281024
catequza;9;catequiza;9;51;3369216;1758753327313059840
catolce;8;catolice;8;13;874752;1758926290661933056
catolza;8;catoliza;8;51;3365120;1758926302942855168
caucina;8;cauciona;8;51;3364864;1759276594033065984
caucine;8;caucione;8;13;874496;1759276594100174848
cautla;7;cautela;7;1;84480;1759573403636858880
cautelas;8;cautelas;8;1;65536;1759573403955625984
cauterce;9;cauterice;9;13;878848;1759573511063994368
cauterza;9;cauteriza;9;51;3369216;1759573511447773184
cautva;7;cautiva;7;51;3361024;1759575774458806272
cautve;7;cautive;7;13;870656;1759575776606289920
cavilsea;9;cavilosea;9;51;3364864;1759946749122183168
cavilsee;9;cavilosee;9;13;874496;1759946749124280320
cayndo;7;cayendo;7;1;80384;1761566138539442176
cazclea;8;cazcalea;8;51;3360512;1762086889382215680
cazclee;8;cazcalee;8;13;870144;1762086889449324544
cazmbra;8;cazumbra;8;51;3357440;1762409980981411840
cazmbre;8;cazumbre;8;13;867072;1762409981048520704
caavra;8;caavera;8;1;88576;1763189036509298688
caaveras;9;caaveras;9;1;65536;1763189036519260160
canea;7;caonea;7;51;3356672;1763430919923826688
canee;7;caonee;7;13;866304;1763430922071310336
cedindo;8;cediendo;8;1;84480;1821867370642145280
celbra;7;celebra;7;51;3357184;1826299019115102208
celbre;7;celebre;7;13;866816;1826299021262585856
cellsquea;10;cellisquea;10;35;2312448;1826426038832873472
cellsquee;10;cellisquee;10;1;84224;1826426038832939008
cemnta;7;cementa;7;51;3357184;1826868600498028544
cemnte;7;cemente;7;13;866816;1826868602645512192
cencrrea;9;cencerrea;9;51;3361280;1827391393128513536
cencrree;9;cencerree;9;13;870912;1827391393130610688
censra;7;censura;7;51;3361536;1827681654987030528
censre;7;censure;7;13;871168;1827681657134514176
centlla;8;centella;8;35;2312704;1827690353923194880
centellas;9;centellas;9;1;65536;1827690353933156352
centlle;8;centelle;8;5;346624;1827690353990303744
centllea;9;centellea;9;51;3361280;1827690353990828032
centllee;9;centellee;9;13;870912;1827690353992925184
centlleos;10;centelleos;10;1;84480;1827690353998479360
centnes;8;centones;8;12288;805324800;1827695882384965632
centralce;10;centralice;10;13;882944;1827697311906086912
centralza;10;centraliza;10;51;3373312;1827697311918080000
centrifga;10;centrifuga;10;51;3373824;1827697446327173120
centrifgue;11;centrifugue;11;13;883456;1827697446327503360
centuplca;10;centuplica;10;51;3373312;1827699218871500800
centuplque;11;centuplique;11;13;882944;1827699218879171072
ceplla;7;cepilla;7;51;3356928;1828626582151888896
ceplle;7;cepille;7;13;866560;1828626584299372544
cercna;7;cercena;7;51;3361280;1829643115011506176
cercne;7;cercene;7;13;870912;1829643117158989824
cerchas;7;cerchas;7;1;65536;1829644550604324864
cercira;8;cerciora;8;51;3364864;1829645340358213632
cercire;8;cerciore;8;13;874496;1829645340425322496
cernindo;9;cerniendo;9;1;88576;1829838680516722688
certifca;9;certifica;9;51;3369216;1829944248104386560
certifque;10;certifique;10;13;878848;1829944248349835264
cespta;7;cespita;7;51;3361024;1830437065485975552
cespte;7;cespite;7;13;870656;1830437067633459200
cestnes;8;cestones;8;12288;805324800;1830510632152072192
chabacnea;10;chabacanea;10;51;3368704;1874096181381447680
chabacnee;10;chabacanee;10;13;878336;1874096181381513216
chachrea;9;chacharea;9;51;3364608;1874117596472147968
chachree;9;chacharee;9;13;874240;1874117596474245120
chacna;7;chacina;7;1;84224;1874118360355045376
chacinas;8;chacinas;8;1;65536;1874118360673812480
chacoltea;10;chacolotea;10;35;2320384;1874121632384565248
chacoltee;10;chacolotee;10;5;354304;1874121632384630784
chactea;8;chacotea;8;51;3360768;1874121764133404672
chactee;8;chacotee;8;13;870400;1874121764200513536
chaflla;8;chafalla;8;51;3360512;1874166710429286400
chaflle;8;chafalle;8;13;870144;1874166710496395264
chafarrna;10;chafarrina;10;51;3373312;1874166816871301120
chafarrne;10;chafarrine;10;13;882944;1874166816871366656
chairas;7;chairas;7;1;65536;1874228647599013888
chalnea;8;chalanea;8;51;3360512;1874272294147194880
chalnee;8;chalanee;8;13;870144;1874272294214303744
chamarlea;10;chamarilea;10;51;3369216;1874289957387386880
chamarlee;10;chamarilee;10;13;878848;1874289957387452416
chamrrea;9;chamarrea;9;51;3360512;1874289962099671040
chamrree;9;chamarree;9;13;870144;1874289962101768192
chmbea;7;chambea;7;51;3352320;1874290279305969664
chmbee;7;chambee;7;13;861952;1874290281453453312
chambnea;9;chambonea;9;51;3364864;1874290458168393728
chambnee;9;chambonee;9;13;874496;1874290458170490880
chamce;7;chamice;7;13;870656;1874294095384412160
chamza;7;chamiza;7;51;3361024;1874294488373919744
chamrra;8;chamorra;8;1;83968;1874297658613432320
chamorras;9;chamorras;9;1;65536;1874297658623393792
chmpea;7;champea;7;51;3352320;1874297975887364096
chmpee;7;champee;7;13;861952;1874297978034847744
champrra;9;champurra;9;51;3365632;1874298260194590720
champrre;9;champurre;9;13;875264;1874298260196687872
chamlla;8;chamulla;8;51;3361536;1874300850847875072
chamlle;8;chamulle;8;13;871168;1874300850914983936
chamsca;8;chamusca;8;51;3361536;1874300966275121152
chamsque;9;chamusque;9;13;871168;1874300974129479680
chncea;7;chancea;7;51;3352320;1874308421247827968
chncee;7;chancee;7;13;861952;1874308423395311616
chncha;7;chancha;7;1;75520;1874308472787435520
chanchas;8;chanchas;8;1;65536;1874308473106202624
chancltea;10;chancletea;10;51;3369472;1874308543992578048
chancltee;10;chancletee;10;13;879104;1874308543992643584
chngue;7;changue;7;13;861952;1874310897296474112
chnguea;8;changuea;8;51;3352320;1874310897313251328
chnguee;8;changuee;8;13;861952;1874310897380360192
chnque;7;chanque;7;13;861952;1874316394854612992
chaplea;8;chapalea;8;51;3360512;1874342628531634176
chaplee;8;chapalee;8;13;870144;1874342628598743040
chaprrea;9;chaparrea;9;35;2311936;1874342738657804288
chaprree;9;chaparree;9;1;83712;1874342738659901440
chapetna;9;chapetona;9;1;92160;1874344970581180416
chapetonas;10;chapetonas;10;1;65536;1874344970581491712
chapetnes;10;chapetones;10;12288;805332992;1874344970583588864
chapda;7;chapoda;7;51;3360768;1874350185509814272
chapde;7;chapode;7;13;870400;1874350187657297920
chaptea;8;chapotea;8;51;3360768;1874350462551982080
chaptee;8;chapotee;8;13;870400;1874350462619090944
chapce;7;chapuce;7;13;871168;1874353469012312064
chapcea;8;chapucea;8;51;3361536;1874353469029089280
chapcee;8;chapucee;8;13;871168;1874353469096198144
chaprra;8;chapurra;8;51;3361536;1874353733706448896
chaprre;8;chapurre;8;13;871168;1874353733773557760
chaprrea;9;chapurrea;9;51;3361536;1874353733774082048
chaprree;9;chapurree;9;13;871168;1874353733776179200
chapza;7;chapuza;7;51;3361536;1874353862001819648
chaqutea;9;chaquetea;9;51;3365376;1874371103695568896
chaqutee;9;chaquetee;9;13;875008;1874371103697666048
charamsca;10;charamusca;10;1;92928;1874377838977105920
charamuscas;11;charamuscas;11;1;65536;1874377838977115648
charlatnea;11;charlatanea;11;51;3372800;1874383679299600896
charlatnee;11;charlatanee;11;13;882432;1874383679299602944
charltea;9;charlotea;9;51;3364864;1874383919877980160
charltee;9;charlotee;9;13;874496;1874383919880077312
charla;7;charola;7;51;3360768;1874385507320856576
charle;7;charole;7;13;870400;1874385509468340224
chrquea;8;charquea;8;51;3352320;1874386763615567872
chrquee;8;charquee;8;13;861952;1874386763682676736
charrnea;9;charranea;9;51;3364608;1874386974673469440
charrnee;9;charranee;9;13;874240;1874386974675566592
charras;7;charras;7;1;65536;1874386977273413632
charrsca;9;charrasca;9;1;87808;1874386977324269568
charrascas;10;charrascas;10;1;65536;1874386977324580864
chsque;7;chasque;7;13;861952;1874404355784835072
chsquea;8;chasquea;8;51;3352320;1874404355801612288
chsquee;8;chasquee;8;13;861952;1874404355868721152
chquea;7;chequea;7;51;3353088;1876622893224296448
chquee;7;chequee;7;13;862720;1876622895371780096
chqueos;8;chequeos;8;1;76288;1876622901059256320
chicnea;8;chicanea;8;51;3360512;1878617564100165632
chicnee;8;chicanee;8;13;870144;1878617564167274496
chichrra;9;chicharra;9;1;87808;1878621196317622272
chicharras;10;chicharras;10;1;65536;1878621196317933568
chichas;7;chichas;7;1;65536;1878621196551979008
chchea;7;chichea;7;51;3352832;1878621255607779328
chchee;7;chichee;7;13;862464;1878621257755262976
chichgua;9;chichigua;9;1;88320;1878621327901327360
chichiguas;10;chichiguas;10;1;65536;1878621327901638656
chichnea;9;chichonea;9;51;3364864;1878621434470203392
chichnee;9;chichonee;9;13;874496;1878621434472300544
chiclea;8;chicolea;8;51;3360768;1878625226321821696
chiclee;8;chicolee;8;13;870400;1878625226388930560
chictea;8;chicotea;8;51;3360768;1878625363760775168
chictee;8;chicotee;8;13;870400;1878625363827884032
chncha;7;chincha;7;51;3352832;1878812072414806016
chnche;7;chinche;7;13;862464;1878812074562289664
chingnea;9;chinganea;9;51;3364608;1878814158242709504
chingnee;9;chinganee;9;13;874240;1878814158244806656
chngue;7;chingue;7;13;862464;1878814496923844608
chnguea;8;chinguea;8;51;3352832;1878814496940621824
chnguee;8;chinguee;8;13;862464;1878814497007730688
chiptea;8;chipotea;8;51;3360768;1878854062179352576
chiptee;8;chipotee;8;13;870400;1878854062246461440
chirigtea;10;chirigotea;10;51;3368960;1878885730368372736
chirigtee;10;chirigotee;10;13;878592;1878885730368438272
chirlta;8;chirlata;8;1;87808;1878887278919548928
chirlatas;9;chirlatas;9;1;65536;1878887278929510400
chirri;7;chirria;7;50;3303168;1878890704676061184
chirri;7;chirrie;7;8;551424;1878890706823544832
chsmea;7;chismea;7;51;3352832;1878905479363559424
chsmee;7;chismee;7;13;862464;1878905481511043072
chismrrea;10;chismorrea;10;51;3364864;1878905660593684480
chismrree;10;chismorree;10;13;874496;1878905660593750016
chispas;7;chispas;7;1;65536;1878907069575200768
chspea;7;chispea;7;35;2304256;1878907128631001088
chspee;7;chispee;7;5;338176;1878907130778484736
chisporrtea;12;chisporrotea;12;35;2328576;1878907309866682896
chisporrtee;12;chisporrotee;12;5;362496;1878907309866682960
chocrrea;9;chocarrea;9;51;3360512;1881995339587125248
chocrree;9;chocarree;9;13;870144;1881995339589222400
chchea;7;chochea;7;51;3352576;1881998955328307200
chchee;7;chochee;7;13;862208;1881998957475790848
chollas;7;chollas;7;1;65536;1882159424970162176
chreos;7;choreos;7;1;75776;1882261370313900032
chrrea;7;chorrea;7;51;3352576;1882268335677112320
chrree;7;chorree;7;13;862208;1882268337824595968
chrreos;8;chorreos;8;1;75776;1882268343512072192
chteos;7;choteos;7;1;75776;1882296554685988864
chubsquea;10;chubasquea;10;35;2311936;1885355464035155968
chubsquee;10;chubasquee;10;1;83712;1885355464035221504
chuchas;7;chuchas;7;1;65536;1885376595993034752
chchea;7;chuchea;7;51;3353344;1885376655048835072
chchee;7;chuchee;7;13;862976;1885376657196318720
chufltea;9;chufletea;9;51;3365376;1885431640915181568
chufltee;9;chufletee;9;13;875008;1885431640917278720
chulpea;8;chulapea;8;51;3360512;1885531327575359488
chulpee;8;chulapee;8;13;870144;