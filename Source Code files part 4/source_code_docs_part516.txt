ependency properties that exist on the element have had their effective values changed.</summary>
      <param name="e">Arguments for the associated event.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)">
      <summary>Scrolls the line at the specified line index into view.</summary>
      <param name="lineIndex">The zero-based line index of the line to scroll into view.</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>Selects a range of text in the text box.</summary>
      <param name="start">The zero-based character index of the first character in the selection.</param>
      <param name="length">The length of the selection, in characters.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> or <paramref name="length" /> is negative.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectedText">
      <summary>Gets or sets the content of the current selection in the text box.</summary>
      <returns>The currently selected text in the text box.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionLength">
      <summary>Gets or sets a value indicating the number of characters in the current selection in the text box.</summary>
      <returns>The number of characters in the current selection in the text box. The default is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionStart">
      <summary>Gets or sets a character index for the beginning of the current selection.</summary>
      <returns>The character index for the beginning of the current selection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</summary>
      <returns>true if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, false.</returns>
      <param name="manager">A serialization service manager object for this object.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Throws an exception in all cases.</summary>
      <param name="value">An object to add as a child.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">In all other cases.</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object. </summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Text">
      <summary>Gets or sets the text contents of the text box.</summary>
      <returns>A string containing the text contents of the text box. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextAlignment">
      <summary>Gets or sets the horizontal alignment of the contents of the text box. </summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextDecorations">
      <summary>Gets the text decorations to apply to the text box.</summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box. The default is null (no text decorations applied).</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextWrapping">
      <summary>Gets or sets how the text box should wrap text.</summary>
      <returns>One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Typography">
      <summary>Gets the currently effective typography variations for the text contents of the text box.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations. For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChange">
      <summary>Contains information about the changes that occur in the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.TextChange.AddedLength">
      <summary>Gets or sets the number of symbols that have been added to the control.</summary>
      <returns>The number of symbols that have been added to the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.Offset">
      <summary>Gets or sets the position at which the change occurred.</summary>
      <returns>The position at which the change occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.RemovedLength">
      <summary>Gets or sets the number of symbols that have been removed from the control.</summary>
      <returns>The number of symbols that have been removed from the control.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> class, using the specified event ID and undo action.     </summary>
      <param name="id">The event identifier (ID).</param>
      <param name="action">The <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> caused by the text change.</param>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction,System.Collections.Generic.ICollection{System.Windows.Controls.TextChange})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> class, using the specified event ID, undo action, and text changes. </summary>
      <param name="id">The event identifier (ID).</param>
      <param name="action">The <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> caused by the text change.</param>
      <param name="changes">The changes that occurred during this event. For more information, see <see cref="P:System.Windows.Controls.TextChangedEventArgs.Changes" />.</param>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.Changes">
      <summary>Gets a collection of objects that contains information about the changes that occurred.</summary>
      <returns>A collection of objects that contains information about the changes that occurred.</returns>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Performs the proper type casting to call the type-safe <see cref="T:System.Windows.Controls.TextChangedEventHandler" />  delegate for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</summary>
      <param name="genericHandler">The handler to invoke.</param>
      <param name="genericTarget">The current object along the event's route.</param>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.UndoAction">
      <summary>Gets how the undo stack is caused or affected by this text change </summary>
      <returns>The <see cref="T:System.Windows.Controls.UndoAction" /> appropriate for this text change.</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />  routed event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.TextSearch">
      <summary>Enables a user to quickly access items in a set by typing prefixes of strings. </summary>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)">
      <summary>Returns the string to that identifies the specified item.</summary>
      <returns>The string that identifies the specified item.</returns>
      <param name="element">The element from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
      <summary>Returns the name of the property that identifies an item in the specified element's collection. </summary>
      <returns>The name of the property that identifies the item to the user.</returns>
      <param name="element">The element from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)">
      <summary> Writes the <see cref="P:System.Windows.Controls.TextSearch.Text" /> attached property value to the specified element. </summary>
      <param name="element">The element to which the property value is written.</param>
      <param name="text">The string that identifies the item.</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
      <summary> Writes the <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> attached property to the specified element. </summary>
      <param name="element">The element to which the property value is written.</param>
      <param name="path">The name of the property that identifies an item.</param>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.Text">
      <summary>Gets or sets the string that identifies an item in a control's collection.</summary>
      <returns>The text that identifies the item to the user. The default value is an empty string.</returns>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.TextPath">
      <summary>Gets or sets the name of the items' property that identifies each item in a control's collection.</summary>
      <returns>The name of the property that contains the text that identifies the item to the user. The default value is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> attached property.</returns>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TextSearch.Text" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TextSearch.Text" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolBar">
      <summary>Provides a container for a group of commands or controls.  </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolBar" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Band">
      <summary>Gets or sets a value that indicates where the toolbar should be located in the <see cref="T:System.Windows.Controls.ToolBarTray" />.  </summary>
      <returns>The band of the <see cref="T:System.Windows.Controls.ToolBarTray" /> in which the toolbar is positioned. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.BandIndex">
      <summary>Gets or sets the band index number that indicates the position of the toolbar on the band.  </summary>
      <returns>The position of a toolbar on the band of a <see cref="T:System.Windows.Controls.ToolBarTray" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.BandIndex" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.BandIndex" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.Band" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.Band" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ButtonStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to buttons on a toolbar.</summary>
      <returns>A resource key that represents the default style for buttons on the toolbar.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.CheckBoxStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to check boxes on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for check boxes on the <see cref="T:System.Windows.Controls.ToolBar" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ComboBoxStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to combo boxes on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for combo boxes on the toolbar.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetIsOverflowItem(System.Windows.DependencyObject)">
      <summary> Reads the value of the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> property from the specified element. </summary>
      <returns>The value of the property.</returns>
      <param name="element">The element from which to read the property.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetOverflowMode(System.Windows.DependencyObject)">
      <summary>Reads the value of the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> property from the specified element. </summary>
      <returns>The value of the property.</returns>
      <param name="element">The element from which to read the property.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.HasOverflowItems">
      <summary>Gets a value that indicates whether the toolbar has items that are not visible.  </summary>
      <returns>true if there are items on the toolbar that are not visible; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.HasOverflowItemsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowItem">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ToolBar" /> item is an overflow item.</summary>
      <returns>true if the item is an overflow item; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ToolBar" /> overflow area is currently visible.  </summary>
      <returns>true if the overflow area is visible; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.MeasureOverride(System.Windows.Size)">
      <summary> Remeasures a <see cref="T:System.Windows.Controls.ToolBar" />. </summary>
      <returns>The size of the <see cref="T:System.Windows.Controls.ToolBar" />.</returns>
      <param name="constraint">The measurement constraints. A <see cref="T:System.Windows.Controls.ToolBar" /> cannot return a size larger than the constraint.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.MenuStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to menus on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for menus on the toolbar.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary> Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes. </summary>
      <param name="e">The arguments for the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when a key is pressed on an item in the <see cref="T:System.Windows.Controls.ToolBar" />. </summary>
      <param name="e">The arguments for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when the <see cref="T:System.Windows.Controls.ToolBar" /> loses mouse capture. </summary>
      <param name="e">The arguments for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Orientation">
      <summary> Gets the orientation of the <see cref="T:System.Windows.Controls.ToolBar" />.  </summary>
      <returns>The toolbar orientation. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OrientationProperty">
      <summary>Identifies the <see cref="T:System.Windows.Controls.Orientation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="T:System.Windows.Controls.Orientation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.OverflowMode">
      <summary> Gets or sets a value that indicates when an item should be placed in the overflow panel instead of in the main panel.</summary>
      <returns>The overflow mode; the default is <see cref="F:System.Windows.Controls.OverflowMode.AsNeeded" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OverflowModeProperty">
      <summary> Identifies the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item. </summary>
      <param name="element">The element that will display the item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.RadioButtonStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to radio buttons on a toolbar.</summary>
      <returns>A resource key that represents the default style for radio buttons on the toolbar.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.SeparatorStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to separators on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for separators on the toolbar.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.SetOverflowMode(System.Windows.DependencyObject,System.Windows.Controls.OverflowMode)">
      <summary>Writes the value of the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> property to the specified element. </summary>
      <param name="element">The element to write the property to.</param>
      <param name="mode">The property value to set.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.TextBoxStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to text boxes on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for text boxes on the toolbar</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ToggleButtonStyleKey">
      <summary>Gets the <see cref="T:System.Windows.Style" /> applied to <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> controls on a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
      <returns>A resource key that represents the default style for toggle buttons on the toolbar.</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolBarTray">
      <summary>Represents the container that handles the layout of a <see cref="T:System.Windows.Controls.ToolBar" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolBarTray" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.ArrangeOverride(System.Windows.Size)">
      <summary> Called to arrange and size its <see cref="T:System.Windows.Controls.ToolBar" /> children. </summary>
      <returns>The size of the control.</returns>
      <param name="arrangeSize">The size that the <see cref="T:System.Windows.Controls.ToolBarTray" /> assumes to position its children.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Background">
      <summary>Gets or sets a brush to use for the background color of the <see cref="T:System.Windows.Controls.ToolBarTray" />.   </summary>
      <returns>A brush to use for the background color of the <see cref="T:System.Windows.Controls.ToolBarTray" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.Background" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBarTray.Background" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetIsLocked(System.Windows.DependencyObject)">
      <summary>Reads the value of the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> property from the specified element. </summary>
      <returns>true if the toolbar cannot be moved inside the toolbar tray; otherwise, false. The default is false.</returns>
      <param name="element">The element from which to read the property.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetVisualChild(System.Int32)">
      <summary>Gets the index number of the visible child.</summary>
      <returns>The index number of the visible child.</returns>
      <param name="index">Index of the visual child.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.IsLocked">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.ToolBar" /> can be moved inside a <see cref="T:System.Windows.Controls.ToolBarTray" />.   </summary>
      <returns>true if the toolbar cannot be moved inside the toolbar tray; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.IsLockedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.LogicalChildren">
      <summary>Gets an enumerator to the logical child elements of a <see cref="T:System.Windows.Controls.ToolBarTray" />. </summary>
      <returns>An enumerator to the children of a <see cref="T:System.Windows.Controls.ToolBarTray" /> element.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a <see cref="T:System.Windows.Controls.ToolBarTray" />. </summary>
      <returns>The size of the control.</returns>
      <param name="constraint">The measurement constraints; a <see cref="T:System.Windows.Controls.ToolBarTray" /> cannot return a size larger than the constraint.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Called when a <see cref="T:System.Windows.Controls.ToolBarTray" /> is displayed to get the Drawing Context (DC) to use to render the <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <param name="dc">Drawing context to use to render the <see cref="T:System.Windows.Controls.ToolBarTray" />.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Orientation">
      <summary>Specifies the orientation of a <see cref="T:System.Windows.Controls.ToolBarTray" />.   </summary>
      <returns>One of the <see cref="T:System.Windows.Controls.Orientation" /> values. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.Orientation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBarTray.Orientation" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.SetIsLocked(System.Windows.DependencyObject,System.Boolean)">
      <summary>Writes the value of the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> property to the specified element. </summary>
      <param name="element">The element to write the property to.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">  An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">  A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.ToolBars">
      <summary>Gets the collection of <see cref="T:System.Windows.Controls.ToolBar" /> elements in the <see cref="T:System.Windows.Controls.ToolBarTray" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ToolBar" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.VisualChildrenCount">
      <summary>Gets the number of children that are currently visible.</summary>
      <returns>The number of visible <see cref="T:System.Windows.Controls.ToolBar" /> objects in the <see cref="T:System.Windows.Controls.ToolBarTray" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTip">
      <summary>Represents a control that creates a pop-up window that displays information for an element in the interface. </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolTip" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Closed">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.ToolTip" /> is closed and is no longer visible. </summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.ClosedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ToolTip.Closed" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.ToolTip.Closed" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback">
      <summary>Gets or sets the delegate handler method to use to position the <see cref="T:System.Windows.Controls.ToolTip" />.  </summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> delegate method that provides placement information for the <see cref="T:System.Windows.Controls.ToolTip" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.CustomPopupPlacementCallbackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HasDropShadow">
      <summary>Gets or sets a value that indicates whether the control has a drop shadow.  </summary>
      <returns>true if the control has a drop shadow; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HasDropShadowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
      <summary>Get or sets the horizontal distance between the target origin and the popup alignment point. </summary>
      <returns>The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.IsOpen">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.ToolTip" /> is visible.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ToolTip" /> is visible; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.Controls.ToolTip.Closed" /> event.</summary>
      <param name="e">The event information.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
      <summary>Creates the implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.ToolTip" /> control.</summary>
      <returns>A new <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> for this <see cref="T:System.Windows.Controls.ToolTip" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.Controls.ToolTip.Opened" /> event. </summary>
      <param name="e">The event information.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Responds to a change in the visual parent of a <see cref="T:System.Windows.Controls.ToolTip" />.</summary>
      <param name="oldParent">The previous visual parent.</param>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Opened">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.ToolTip" /> becomes visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.OpenedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.ToolTip.Opened" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.ToolTip.Opened" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.Placement">
      <summary>Gets or sets the orientation of the <see cref="T:System.Windows.Controls.ToolTip" /> control when it opens, and specifies how the <see cref="T:System.Windows.Controls.ToolTip" /> control behaves when it overlaps screen boundaries.   </summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration value that determines the orientation of the <see cref="T:System.Windows.Controls.ToolTip" /> control when it opens, and that specifies how the control interacts with screen boundaries. The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.Placement" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.Placement" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementRectangle">
      <summary>Gets or sets the rectangular area relative to which the <see cref="T:System.Windows.Controls.ToolTip" /> control is positioned when it opens.  </summary>
      <returns>The <see cref="T:System.Windows.Rect" /> structure that defines the rectangle that is used to position the <see cref="T:System.Windows.Controls.ToolTip" /> control. The default is <see cref="P:System.Windows.Rect.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementRectangleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ToolTip" /> is positioned when it opens.  </summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that is the logical parent of the <see cref="T:System.Windows.Controls.ToolTip" /> control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.StaysOpen">
      <summary>Gets or sets a value that indicates whether an open <see cref="T:System.Windows.Controls.ToolTip" /> remains open until the user clicks the mouse when the mouse is not over the <see cref="T:System.Windows.Controls.ToolTip" />.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ToolTip" /> stays open until it is closed by the user clicking the mouse button outside the <see cref="T:System.Windows.Controls.ToolTip" />; otherwise, false. The default is true.</returns>
      <exception cref="T:System.NotSupportedException">Occurs when <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> is set to false when a tooltip is not open.</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.StaysOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
      <summary>Get or sets the vertical distance between the target origin and the popup alignment point. </summary>
      <returns>The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventArgs">
      <summary>Provides event information for events that occur when a tooltip opens or closes.</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventHandler">
      <summary>Represents the method that will handle routed event that occur when a tooltip opens and closes.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.ToolTipService">
      <summary>Represents a service that provides properties and events to control the display and behavior of tooltips.</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.BetweenShowDelay">
      <summary>Gets or sets the maximum time between the display of two tooltips where the second tooltip appears without a delay.</summary>
      <returns>An integer value that represents the delay time in milliseconds. The default value is 100 milliseconds.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> property is less than zero (0).</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.BetweenShowDelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetBetweenShowDelay(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> attached property for an object. </summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetInitialShowDelay(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsOpen(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> attached property for an object. </summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowDuration(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> attached property for an object. </summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> attached property for an object. </summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> attached property for an object.</summary>
      <returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> property value.</returns>
      <param name="element">The object from which the property value is read.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HasDropShadow">
      <summary>Gets or sets whether the tooltip displays a drop shadow effect.</summary>
      <returns>true if a drop shadow effect appears with the tooltip; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HasDropShadowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HorizontalOffset">
      <summary>Gets or sets the offset from the left of the area that is specified for the tooltip by the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> and <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> properties.</summary>
      <returns>A value that specifies a horizontal distance. The default value is zero (0).</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.InitialShowDelay">
      <summary>Gets or sets the length of time before a tooltip opens. </summary>
      <returns>An integer value that represents the display delay time in milliseconds. The default value is <see cref="P:System.Windows.SystemParameters.MouseHoverTime" /> in milliseconds.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> property is less than zero (0).</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.InitialShowDelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsEnabled">
      <summary>Gets or sets whether a tooltip appears.</summary>
      <returns>true if the tooltip appears when the user pauses the mouse pointer over the object that defines the tooltip; otherwise, false. The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> attached property. </summary>
      <returns>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsOpen">
      <summary>Gets whether a tooltip is currently visible. </summary>
      <returns>true if the tooltip is visible; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.Placement">
      <summary>Gets or sets the orientation of the tooltip when it opens, and specifies how the tooltip behaves when it overlaps screen boundaries.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration value that determines the orientation of the tooltip when it opens, and that specifies how the tooltip interacts with screen boundaries. The default value is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementRectangle">
      <summary>Gets or sets the rectangular area relative to which the tooltip is positioned.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> structure that defines the rectangle that is used to position the <see cref="T:System.Windows.Controls.ToolTip" /> control. The default value is <see cref="P:System.Windows.Rect.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementRectangleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
      <summary>Gets or sets the object relative to which the tooltip is positioned.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that is the logical parent of the <see cref="T:System.Windows.Controls.ToolTip" /> control. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetBetweenShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> attached property for an object. </summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetInitialShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> attached property for an object. </summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> attached property for an object. </summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> attached property for an object. </summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> attached property for an object. </summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowDuration(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> attached property for an object. </summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> attached property for an object. </summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> attached property for an object.</summary>
      <param name="element">The object to which the attached property is written.</param>
      <param name="value">The desired value.</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowDuration">
      <summary>Gets or sets the amount of time that a tooltip remains visible.</summary>
      <returns>An integer value that represents the display time in milliseconds. The default value is 5000 milliseconds.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> property is less than zero (0).</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowDurationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowOnDisabled">
      <summary>Gets or sets whether a tooltip appears for an object that is not enabled.</summary>
      <returns>true if the tooltip appears when the object is not enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowOnDisabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ToolTip">
      <summary>Gets or sets the content of a tooltip.</summary>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> element that defines the content for a tooltip. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipClosingEvent">
      <summary>Identifies the ToolTipClosing event that is exposed by objects that use the <see cref="T:System.Windows.Controls.ToolTipService" /> service to display tooltips. </summary>
      <returns>The identifier for the ToolTipClosing event.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipOpeningEvent">
      <summary>Identifies the ToolTipOpening event that is exposed by objects that use the <see cref="T:System.Windows.Controls.ToolTipService" /> service to display tooltips. </summary>
      <returns>The identifier for the ToolTipOpening event.</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.VerticalOffset">
      <summary>Gets or sets the distance from the top of the area that is specified for the tooltip by the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> and <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> properties.</summary>
      <returns>A value that specifies a vertical distance. The default value is zero (0).</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Controls.TreeView">
      <summary>Represents a control that displays hierarchical data in a tree structure that has items that can expand and collapse. </summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.ExpandSubtree(System.Windows.Controls.TreeViewItem)">
      <summary>Expands the specified <see cref="T:System.Windows.Controls.TreeViewItem" /> control and all its child <see cref="T:System.Windows.Controls.TreeViewItem" /> elements.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Controls.TreeViewItem" /> and all its child elements were expanded; otherwise, false.</returns>
      <param name="container">The <see cref="T:System.Windows.Controls.TreeViewItem" /> to expand.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
      <summary>Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to use to display content.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a container for content.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.HandlesScrolling">
      <summary>Gets whether the <see cref="T:System.Windows.Controls.TreeView" /> can scroll.</summary>
      <returns>Always returns true because the control has a <see cref="T:System.Windows.Controls.ScrollViewer" /> in its style.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether the specified item is its own container or can be its own container.</summary>
      <returns>true if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false.</returns>
      <param name="item">The object to evaluate.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
      <summary>Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.TreeView" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> for the <see cref="T:System.Windows.Controls.TreeView" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event. </summary>
      <param name="e">The data for the event. </param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides class handling for an <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event when the keyboard focus changes for a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Provides class handling for an <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event that occurs when there is a change in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event for a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> event when the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property value changes.</summary>
      <param name="e">Provides the item that was previously selected and the item that is currently selected for the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item. </summary>
      <param name="element">The element that displays the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedItem">
      <summary>Gets the selected item in a <see cref="T:System.Windows.Controls.TreeView" />.  </summary>
      <returns>The selected object in the <see cref="T:System.Windows.Controls.TreeView" />, or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> routed event.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValue">
      <summary>Gets the value of the property that is the specified by <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> for the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />.   </summary>
      <returns>The value of the property that is specified by the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> for the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />, or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
      <summary>Gets or sets the path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> in a <see cref="T:System.Windows.Controls.TreeView" />.  </summary>
      <returns>A string that contains the path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />. The default value is String.Empty.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> dependency property. </summary>
      <returns>The identifier for the <see cref="F:System.Windows.Controls.TreeView.SelectedValuePathProperty" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.TreeViewItem">
      <summary>Implements a selectable item in a <see cref="T:System.Windows.Controls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeViewItem" /> class.</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from true to false.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.CollapsedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> routed event. </summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Expanded">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from false to true.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.ExpandedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> routed event. </summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ExpandSubtree">
      <summary>Expands the <see cref="T:System.Windows.Controls.TreeViewItem" /> control and all its child <see cref="T:System.Windows.Controls.TreeViewItem" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
      <summary>Creates a new <see cref="T:System.Windows.Controls.TreeViewItem" /> to use to display the object.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
      <summary>Gets or sets whether the nested items in a <see cref="T:System.Windows.Controls.TreeViewItem" /> are expanded or collapsed.  </summary>
      <returns>true if the nested items of a <see cref="T:System.Windows.Controls.TreeViewItem" /> are visible; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> dependency property. </summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether an object is a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <returns>true if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false.</returns>
      <param name="item">The object to evaluate.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
      <summary>Gets or sets whether a <see cref="T:System.Windows.Controls.TreeViewItem" /> control is selected.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.TreeViewItem" /> is selected; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> dependency property. </summary>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.TreeViewItem" /> has keyboard focus.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.TreeViewItem" /> has keyboard focus; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> dependency property. </summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size that is required to lay out child elements.</summary>
      <returns>The size of the control, up to the maximum specified by <paramref name="constraint" />.</returns>
      <param name="constraint">The maximum size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
      <summary>Raises a <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from true to false. </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
      <summary>Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.TreeViewItem" />. </summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> object for the <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
      <summary>Raises an <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from false to true.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event that occurs when there is a change in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for a <see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for a <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> routed event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property changes from false to true.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> routed event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property changes from true to false.</summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Responds to a change in the visual parent of a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <param name="oldParent">The previous visual parent.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item. </summary>
      <param name="element">The element that displays the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Selected">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property of a <see cref="T:System.Windows.Controls.TreeViewItem" /> changes from false to true.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.SelectedEvent">
      <summary>Identified by the <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> routed event. </summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Unselected">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property of a <see cref="T:System.Windows.Controls.TreeViewItem" /> changes from true to false.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.UnselectedEvent">
      <summary>Identified by the <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> routed event. </summary>
    </member>
    <member name="T:System.Windows.Controls.UIElementCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.UIElement" /> child elements. </summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.UIElementCollection" /> class. </summary>
      <param name="visualParent">The <see cref="T:System.Windows.UIElement" /> parent of the collection.</param>
      <param name="logicalParent">The logical parent of the elements in the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)">
      <summary>Adds the specified element to the <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
      <returns>The index position of the added element.</returns>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> to add.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Capacity">
      <summary>Gets or sets the number of elements that the <see cref="T:System.Windows.Controls.UIElementCollection" /> can contain. </summary>
      <returns>The total number of elements the collection can contain.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Clear">
      <summary>Removes all elements from a <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)">
      <summary>Clears the logical parent of an element when the element leaves a <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> whose logical parent is being cleared.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)">
      <summary>Determines whether a specified element is in the <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <returns>true if the specified <see cref="T:System.Windows.UIElement" /> is found in the collection; otherwise, false.</returns>
      <param name="element">The element to find.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies a <see cref="T:System.Windows.UIElement" /> from a <see cref="T:System.Windows.Controls.UIElementCollection" /> to an array, starting at a specified index position. </summary>
      <param name="array">An array into which the collection is copied.</param>
      <param name="index">The index position of the element where copying begins.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)">
      <summary>Copies a <see cref="T:System.Windows.UIElement" /> from a <see cref="T:System.Windows.Controls.UIElementCollection" /> to an array, starting at a specified index position. </summary>
      <param name="array">An array of <see cref="T:System.Windows.UIElement" /> objects.</param>
      <param name="index">The index position of the element where copying begins.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Count">
      <summary>Gets the actual number of elements in the collection. </summary>
      <returns>The actual number of elements in the collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate the <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can list the members of this collection.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)">
      <summary>Returns the index position of a specified element in a <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
      <returns>The index position of the element.  -1 if the element is not in the collection.</returns>
      <param name="element">The element whose index position is required.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)">
      <summary>Inserts an element into a <see cref="T:System.Windows.Controls.UIElementCollection" /> at the specified index position. </summary>
      <param name="index">The index position where you want to insert the element.</param>
      <param name="element">The element to insert into the <see cref="T:System.Windows.Controls.UIElementCollection" />.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> interface is synchronized (thread-safe).</summary>
      <returns>true if access to the collection is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> stored at the zero-based index position of the <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
      <returns>A <see cref="T:System.Windows.UIElement" /> at the specified <paramref name="index" /> position.</returns>
      <param name="index">The index position of the <see cref="T:System.Windows.UIElement" />.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)">
      <summary>Removes the specified element from a <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
      <param name="element">The element to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.UIElement" /> at the specified index. </summary>
      <param name="index">The index of the <see cref="T:System.Windows.UIElement" /> that you want to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of elements from a <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
      <param name="index">The index position of the element where removal begins.</param>
      <param name="count">The number of elements to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)">
      <summary>Sets the logical parent of an element in a <see cref="T:System.Windows.Controls.UIElementCollection" />. </summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> whose logical parent is set.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.SyncRoot">
      <summary>Gets an object that you can use to synchronize access to the <see cref="T:System.Collections.ICollection" /> interface. </summary>
      <returns>
        <see cref="T:System.Object" /> that you can use to synchronize access to the <see cref="T:System.Collections.ICollection" /> interface.</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The object to add.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the object was found in the list; otherwise, false.</returns>
      <param name="value">The object to locate in the list.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1. </returns>
      <param name="value">The object to locate in the list.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
      <param name="value">The object to insert to the list.</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the list has a fixed size; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the list is read-only; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set.</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The object to remove from the list.</param>
    </member>
    <member name="T:System.Windows.Controls.UndoAction">
      <summary> How the undo stack caused or is affected by a text change. </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.None">
      <summary> This change will not affect the undo stack at all </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Merge">
      <summary> This change will merge into the previous undo unit </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Undo">
      <summary> This change is the result of a call to Undo() </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Redo">
      <summary> This change is the result of a call to Redo() </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Clear">
      <summary> This change will clear the undo stack </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Create">
      <summary> This change will create a new undo unit </summary>
    </member>
    <member name="T:System.Windows.Controls.UserControl">
      <summary>Provides a simple way to create a control.</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.UserControl" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.UserControl" />.</summary>
      <returns>A new <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> for this <see cref="T:System.Windows.Controls.UserControl" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Validation">
      <summary>Provides methods and attached properties that support data validation.</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>Adds an event handler for the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event to the specified object.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to add <paramref name="handler" /> to.</param>
      <param name="handler">The handler to add.</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)">
      <summary>Removes all <see cref="T:System.Windows.Controls.ValidationError" /> objects from the specified <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</summary>
      <param name="bindingExpression">The object to turn valid.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="bindingExpression" /> is null.</exception>
    </member>
    <member name="E:System.Windows.Controls.Validation.Error">
      <summary>Occurs when the bound element runs into a validation error, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnValidationError" /> value set to true.</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event.</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.Errors">
      <summary>Gets the collection of all active <see cref="T:System.Windows.Controls.ValidationError" /> objects on the bound element.</summary>
      <returns>A read-only collection of all active <see cref="T:System.Windows.Controls.ValidationError" /> objects on the bound element. The default is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.Errors" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Validation.Errors" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.ErrorTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.ControlTemplate" /> used to generate validation error feedback on the adorner layer.</summary>
      <returns>The default template defines a red border around the element being adorned.</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.Errors" /> attached property of the specified element.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> of <see cref="T:System.Windows.Controls.ValidationError" /> objects.</returns>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to read the value from.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> attached property of the specified element.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ControlTemplate" /> used to generate validation error feedback on the adorner layer.</returns>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to read the value from.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property of the specified element.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property of the specified element.</returns>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to read the value from.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSite(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> attached property for the specified element.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</returns>
      <param name="element">The element from which to get the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSiteFor(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> attached property for the specified element.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</returns>
      <param name="element">The element from which to get the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</param>
    </member>
    <member name="P:System.Windows.Controls.Validation.HasError">
      <summary>Gets a value that indicates whether any binding on the binding target element has a <see cref="T:System.Windows.Controls.ValidationError" />.</summary>
      <returns>Set to true if any binding on the bound element has a non-empty <see cref="P:System.Windows.Controls.Validation.Errors" /> collection; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.HasErrorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Validation.HasError" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)">
      <summary>Marks the specified <see cref="T:System.Windows.Data.BindingExpression" /> object as invalid with the specified <see cref="T:System.Windows.Controls.ValidationError" /> object.</summary>
      <param name="bindingExpression">The <see cref="T:System.Windows.Data.BindingExpression" /> object to mark as invalid.</param>
      <param name="validationError">The <see cref="T:System.Windows.Controls.ValidationError" /> object to use.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="bindingExpression" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="validationError" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>Adds an event handler for the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event from the specified object.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to remove <paramref name="handler" /> from.</param>
      <param name="handler">The handler to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> attached property to the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> object to set <paramref name="value" /> on.</param>
      <param name="value">The <see cref="T:System.Windows.Controls.ControlTemplate" /> to use to generate validation error feedback on the adorner layer.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSite(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Sets the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> attached property to the specified value on the specified element.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</param>
      <param name="value">The <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> of the specified element.</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSiteFor(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Sets the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> attached property to the specified value on the specified element.</summary>
      <param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</param>
      <param name="value">The <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> of the specified element.</param>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSite">
      <summary>Gets or sets the element that appears to indicate that a validation error occurred on the bound element where this property is set.</summary>
      <returns>The element that appears to indicate that a validation error occurred on the bound element.</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor">
      <summary>Gets or sets the element for which this element appears to indicate that an error occurred.</summary>
      <returns>The element for which this element appears to indicate that an error occurred.</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> attached property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationError">
      <summary>Represents a validation error that is created either by the binding engine when a <see cref="T:System.Windows.Controls.ValidationRule" /> reports a validation error, or through the <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> method explicitly.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationError" /> class with the specified parameters.</summary>
      <param name="ruleInError">The rule that detected validation error.</param>
      <param name="bindingInError">The <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object with the validation error.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationError" /> class with the specified parameters.</summary>
      <param name="ruleInError">The rule that detected validation error.</param>
      <param name="bindingInError">The <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object with the validation error.</param>
      <param name="errorContent">Information about the error.</param>
      <param name="exception">The exception that caused the validation failure. This parameter is optional and can be set to null.</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.BindingInError">
      <summary>Gets the <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object of this <see cref="T:System.Windows.Controls.ValidationError" />. The object is either marked invalid explicitly or has a failed validation rule.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object of this <see cref="T:System.Windows.Controls.ValidationError" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.ErrorContent">
      <summary>Gets or sets an object that provides additional context for this <see cref="T:System.Windows.Controls.ValidationError" />, such as a string describing the error.</summary>
      <returns>An object that provides additional context for this <see cref="T:System.Windows.Controls.ValidationError" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.Exception">
      <summary>Gets or sets the <see cref="T:System.Exception" /> object that was the cause of this <see cref="T:System.Windows.Controls.ValidationError" />, if the error is the result of an exception.</summary>
      <returns>The <see cref="T:System.Exception" /> object, if the error is the result of an exception.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.RuleInError">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.ValidationRule" /> object that was the cause of this <see cref="T:System.Windows.Controls.ValidationError" />, if the error is the result of a validation rule.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ValidationRule" /> object, if the error is the result of a validation rule.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventAction">
      <summary>Describes whether a <see cref="T:System.Windows.Controls.ValidationError" /> object has been added or cleared.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
      <summary>A new <see cref="T:System.Windows.Controls.ValidationError" /> object has been detected.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
      <summary>An existing <see cref="T:System.Windows.Controls.ValidationError" /> object has been cleared.</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventArgs">
      <summary>Provides information for the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event.</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
      <summary>Gets a value that indicates whether the error is a new error or an existing error that has now been cleared.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ValidationErrorEventAction" /> value that indicates whether the error is a new error or an existing error that has now been cleared.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
      <summary>Gets the error that caused this <see cref="E:System.Windows.Controls.Validation.Error" /> event.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ValidationError" /> object that caused this <see cref="E:System.Windows.Controls.Validation.Error" /> event.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationErrorEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes the specified handler in a type-specific way on the specified object.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The object to invoke the handler on.</param>
    </member>
    <member name="T:System.Windows.Controls.ValidationResult">
      <summary>Represents the result returned by the <see cref="T:System.Windows.Controls.ValidationRule" />.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /> method that indicates whether the checked value passed the <see cref="T:System.Windows.Controls.ValidationRule" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationResult" /> class.</summary>
      <param name="isValid">Whether or not the value checked against the <see cref="T:System.Windows.Controls.ValidationRule" /> is valid.</param>
      <param name="errorContent">Information about the invalidity.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.Equals(System.Object)">
      <summary>Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.ValidationResult" /> for value equality.</summary>
      <returns>true if <paramref name="obj" /> and this instance of <see cref="T:System.Windows.Controls.ValidationResult" />.have the same values.</returns>
      <param name="obj">The <see cref="T:System.Windows.Controls.ValidationResult" /> instance to compare.</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ErrorContent">
      <summary>Gets an object that provides additional information about the invalidity.</summary>
      <returns>An object that provides additional information about the invalidity.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Controls.ValidationResult" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.IsValid">
      <summary>Gets a value that indicates whether the value checked against the <see cref="T:System.Windows.Controls.ValidationRule" /> is valid.</summary>
      <returns>true if the value is valid; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>Compares two <see cref="T:System.Windows.Controls.ValidationResult" /> objects for value equality.</summary>
      <returns>true if the two objects are equal; otherwise, false.</returns>
      <param name="left">The first instance to compare.</param>
      <param name="right">The second instance to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>Compares two <see cref="T:System.Windows.Controls.ValidationResult" /> objects for value inequality.</summary>
      <returns>true if the values are not equal; otherwise, false.</returns>
      <param name="left">The first instance to compare.</param>
      <param name="right">The second instance to compare.</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ValidResult">
      <summary>Gets a valid instance of <see cref="T:System.Windows.Controls.ValidationResult" />.</summary>
      <returns>A valid instance of <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationRule">
      <summary>Provides a way to create a custom rule in order to check the validity of user input. </summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class with the specified validation step and a value that indicates whether the validation rule runs when the target is updated. </summary>
      <param name="validationStep">One of the enumeration values that specifies when the validation rule runs.</param>
      <param name="validatesOnTargetUpdated">true to have the validation rule run when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>When overridden in a derived class, performs validation checks on a value.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</returns>
      <param name="value">The value from the binding target to check.</param>
      <param name="cultureInfo">The culture to use in this rule.</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated">
      <summary>Gets or sets a value that indicates whether the validation rule runs when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated. </summary>
      <returns>true if the validation rule runs when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidationStep">
      <summary>Gets or sets when the validation rule runs.</summary>
      <returns>One of the enumeration values.  The default is <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationStep">
      <summary>Specifies when a <see cref="T:System.Windows.Controls.ValidationRule" /> runs.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.RawProposedValue">
      <summary>Runs the <see cref="T:System.Windows.Controls.ValidationRule" /> before any conversion occurs.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue">
      <summary>Runs the <see cref="T:System.Windows.Controls.ValidationRule" /> after the value is converted.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.UpdatedValue">
      <summary>Runs the <see cref="T:System.Windows.Controls.ValidationRule" /> after the source is updated.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.CommittedValue">
      <summary>Runs the <see cref="T:System.Windows.Controls.ValidationRule" /> after the value has been committed to the source.</summary>
    </member>
    <member name="T:System.Windows.Controls.ViewBase">
      <summary>Represents the base class for views that define the appearance of data in a <see cref="T:System.Windows.Controls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ViewBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>Removes all bindings and styling that are set for an item.</summary>
      <param name="item">The <see cref="T:System.Windows.Controls.ListViewItem" /> to remove settings from.</param>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.DefaultStyleKey">
      <summary>Gets the object that is associated with the style for the view mode.</summary>
      <returns>The style to use for the view mode. The default value is the style for the <see cref="T:System.Windows.Controls.ListBox" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>Is called when a <see cref="T:System.Windows.Controls.ListView" /> control creates a <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> for its <see cref="P:System.Windows.Controls.ListView.View" />.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> interface that implements the <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> for a custom <see cref="P:System.Windows.Controls.ListView.View" />. </returns>
      <param name="parent">The <see cref="T:System.Windows.Controls.ListView" /> control to use to create the <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />.</param>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.ItemContainerDefaultStyleKey">
      <summary>Gets the style to use for the items in the view mode.</summary>
      <returns>The style of a <see cref="T:System.Windows.Controls.ListViewItem" />. The default value is the style for the <see cref="T:System.Windows.Controls.ListBoxItem" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>Prepares an item in the view for display, by setting bindings and styles.</summary>
      <param name="item">The item to prepare for display.</param>
    </member>
    <member name="T:System.Windows.Controls.Viewbox">
      <summary>Defines a content decorator that can stretch and scale a single child to fill the available space.</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Viewbox" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.Viewbox" /> element.</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Viewbox" /> element and its child elements.</returns>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> this element uses to arrange its child elements.</param>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Child">
      <summary>Gets or sets the single child of a <see cref="T:System.Windows.Controls.Viewbox" /> element. </summary>
      <returns>The single child of a <see cref="T:System.Windows.Controls.Viewbox" /> element. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
      <summary>Gets a <see cref="T:System.Windows.Media.Visual" /> child at the specified <paramref name="index" /> position.</summary>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Controls.Viewbox" /> element.</returns>
      <param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual" /> child.</param>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of this <see cref="T:System.Windows.Controls.Viewbox" /> element.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.Viewbox" /> prior to arranging them during the <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the element size you want.</returns>
      <param name="constraint">A <see cref="T:System.Windows.Size" /> limit that <see cref="T:System.Windows.Controls.Viewbox" /> cannot exceed.</param>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Stretch">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.Viewbox" /> <see cref="T:System.Windows.Media.Stretch" /> mode, which determines how content fits into the available space.  </summary>
      <returns>A <see cref="T:System.Windows.Media.Stretch" /> that determines how content fits in the available space. The default is <see cref="F:System.Windows.Media.Stretch.Uniform" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
      <summary>Gets or sets the <see cref="T:System.Windows.Controls.StretchDirection" />, which determines how scaling is applied to the contents of a <see cref="T:System.Windows.Controls.Viewbox" />.  </summary>
      <returns>A <see cref="T:System.Windows.Controls.StretchDirection" /> that determines how scaling is applied to the contents of a <see cref="T:System.Windows.Controls.Viewbox" />. The default is <see cref="F:System.Windows.Controls.StretchDirection.Both" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
      <summary>Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Controls.Viewbox" />.</summary>
      <returns>The number of <see cref="T:System.Windows.Media.Visual" /> children.</returns>
    </member>
    <member name="T:System.Windows.Controls.Viewport3D">
      <summary>Provides a rendering surface for 3-D visual content. </summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Viewport3D" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.ArrangeOverride(System.Windows.Size)">
      <summary>Causes the <see cref="T:System.Windows.Controls.Viewport3D" /> to arrange its visual content to fit a specified size. </summary>
      <returns>The final size of the arranged <see cref="T:System.Windows.Controls.Viewport3D" />.</returns>
      <param name="finalSize">Size that <see cref="T:System.Windows.Controls.Viewport3D" /> will assume.</param>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Camera">
      <summary>Gets or sets a camera object that projects the 3-D contents of the <see cref="T:System.Windows.Controls.Viewport3D" /> to the 2-D surface of the <see cref="T:System.Windows.Controls.Viewport3D" />. </summary>
      <returns>The camera that projects the 3-D contents to the 2-D surface.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.CameraProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewport3D.Camera" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Viewport3D.Camera" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Children">
      <summary>Gets a collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> children of the <see cref="T:System.Windows.Controls.Viewport3D" />.  </summary>
      <returns>A collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> children of the <see cref="T:System.Windows.Controls.Viewport3D" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Viewport3D.Children" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Viewport3D.Children" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.GetVisualChild(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Media.Visual" /> at a specified position in the <see cref="P:System.Windows.Controls.Viewport3D.Children" /> collection of the <see cref="T:System.Windows.Controls.Viewport3D" />.</summary>
      <returns>Visual at the specified position in the <see cref="P:System.Windows.Controls.Viewport3D.Children" /> collection.</returns>
      <param name="index">Position of the element in the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.OnCreateAutomationPeer">
      <summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.Viewport3D" />.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.Viewport3D" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">   An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">   A string to add to the object.</param>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.VisualChildrenCount">
      <summary>Gets an integer that represents the number of <see cref="T:System.Windows.Media.Visual" /> objects in the <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Children" /> collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</summary>
      <returns>Integer that represents the number of Visuals in the Children collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationMode">
      <summary>Specifies the method the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> uses to manage virtualizing its child items.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Standard">
      <summary>Create and discard the item containers.</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Recycling">
      <summary>Reuse the item containers.</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingPanel">
      <summary>Provides a framework for <see cref="T:System.Windows.Controls.Panel" /> elements that virtualize their child data collection. This is an abstract class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
      <summary>Adds the specified <see cref="T:System.Windows.UIElement" /> to the <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> collection of a <see cref="T:System.Windows.Controls.VirtualizingPanel" /> element.</summary>
      <param name="child">The <see cref="T:System.Windows.UIElement" /> child to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
      <summary>When implemented in a derived class, generates the item at the specified index location and makes it visible.</summary>
      <param name="index">The index position of the item that is generated and made visible.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
      <summary>Adds the specified <see cref="T:System.Windows.UIElement" /> to the <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> collection of a <see cref="T:System.Windows.Controls.VirtualizingPanel" /> element at the specified index position.</summary>
      <param name="index">The index position within the collection at which the child element is inserted.</param>
      <param name="child">The <see cref="T:System.Windows.UIElement" /> child to add to the collection.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
      <summary>Gets a value that identifies the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> for this <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> for this <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the base <see cref="T:System.Windows.Controls.Panel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> for this <see cref="T:System.Windows.Controls.Panel" /> changes.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
      <summary>Removes child elements from the <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> collection.</summary>
      <param name="index">The beginning index position within the collection at which the first child element is removed.</param>
      <param name="range">The total number of child elements to remove from the collection.</param>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingStackPanel">
      <summary>Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>Adds an event handler for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> that is listening for this event.</param>
      <param name="handler">The event handler that is to be added.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> element.</summary>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> element and its child elements.</returns>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
      <summary>Generates the item at the specified index position and brings it into view.</summary>
      <param name="index">The position of the item to generate and make visible.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> position does not exist in the child collection.</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> can scroll in the horizontal dimension.</summary>
      <returns>true if content can scroll in the horizontal dimension; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether content can scroll in the vertical dimension.</summary>
      <returns>true if content can scroll in the vertical dimension; otherwise, false. The default is false.</returns>
    </member>
    <member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem">
      <summary>Occurs when an item is being re-virtualized by the <see cref="T:System.Windows.Controls.ItemsControl" /> that is associated with this instance of <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> attached event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> attached event.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
      <summary>Gets a value that contains the vertical size of the extent. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the extent. The default is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
      <summary>Gets a value that contains the horizontal size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the horizontal size of the extent. The default is 0.0.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing" /> attached property.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is virtualizing its content; otherwise false.</returns>
      <param name="o">The object from which the attached property value is read.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
      <summary>Returns the VirtualizingStackPanel.VirtualizationMode attached property for the specified object.</summary>
      <returns>One of the enumeration values that specifies whether the object uses container recycling.</returns>
      <param name="element">The object from which the VirtualizingStackPanel.VirtualizationMode property is read.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
      <summary>Gets a value that indicates if this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> has a vertical or horizontal orientation.</summary>
      <returns>This property always returns true.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
      <summary>Gets a value that contains the horizontal offset of the scrolled content. </summary>
      <returns>
        <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
      <summary>Scrolls content downward by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
      <summary>Scrolls content to the left by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
      <summary>Scrolls content to the right by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
      <summary>Scrolls content upward by one logical unit.</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation">
      <summary>Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation" /> of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> value.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>Scrolls to the specified coordinates and makes that portion of a <see cref="T:System.Windows.Media.Visual" /> visible.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that is visible.</returns>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</param>
      <param name="rectangle">A <see cref="T:System.Windows.Rect" /> that represents the coordinate space within a <see cref="T:System.Windows.Media.Visual" />.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</returns>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
      <summary>Scrolls content logically downward in response to a downward click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
      <summary>Scrolls content logically to the left in response to a left click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
      <summary>Scrolls content logically to the right in response to a right click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
      <summary>Scrolls content logically upward in response to an upward click of the mouse wheel button.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>Called when an item that is hosted by the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is re-virtualized. </summary>
      <param name="e">Data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the base <see cref="T:System.Windows.Controls.Panel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Called when a descendent object of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> gets focus.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> for this <see cref="T:System.Windows.Controls.Panel" /> changes.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Called when the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> or any of its descendent objects lose keyboard focus.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
      <summary>Called when the offset of the viewport changes as a user scrolls through content.</summary>
      <param name="oldViewportOffset">The old offset of the viewport.</param>
      <param name="newViewportOffset">The new offset of the viewport</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>Called when the size of the viewport changes.</summary>
      <param name="oldViewportSize">The old size of the viewport.</param>
      <param name="newViewportSize">The new size of the viewport.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
      <summary>Gets or sets a value that describes the horizontal or vertical orientation of stacked content.  </summary>
      <returns>The <see cref="T:System.Windows.Controls.Orientation" /> of child content. The default is <see cref="F:System.Windows.Controls.Orientation.Vertical" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
      <summary>Scrolls content downward by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
      <summary>Scrolls content to the left by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
      <summary>Scrolls content to the right by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
      <summary>Scrolls content upward by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>Removes an event handler for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> attached event. </summary>
      <param name="element">The <see cref="T:System.Windows.DependencyObject" /> from which the handler is being removed.</param>
      <param name="handler">Specifies the event handler that is to be removed.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
      <summary>Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />. </summary>
      <returns>The <see cref="T:System.Windows.Controls.ScrollViewer" /> that owns scrolling for this <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />. </returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> property.</summary>
      <param name="offset">The value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty" /> attached property.</summary>
      <param name="element">The object to which the attached property value is set.</param>
      <param name="value">true if the <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> is virtualizing; otherwise false.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> property.</summary>
      <param name="offset">The value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
      <summary>Sets the VirtualizingStackPanel.VirtualizationMode attached property on the specified object.</summary>
      <param name="element">The element on which to set the VirtualizingStackPanel.VirtualizationMode property.</param>
      <param name="value">One of the enumeration values that specifies whether <paramref name="element" /> uses container recycling.</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
      <summary>Gets a value that contains the vertical offset of the scrolled content. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content. The default is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
      <summary>Gets a value that contains the vertical size of the viewport of the content. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the viewport of the content. The default is 0.0.</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
      <summary>Gets a value that contains the horizontal size of the viewport of the content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the vertical size of the viewport of the content. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
      <summary>Identifies the VirtualizingStackPanel.VirtualizationMode attached property.</summary>
      <returns>The identifier for the VirtualizingStackPanel.VirtualizationMode attached property.</returns>
    </member>
    <member name="T:System.Windows.Controls.WebBrowser">
      <summary>Hosts and navigates between HTML documents. Enables interoperability between WPF managed code and HTML script.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.WebBrowser" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoBack">
      <summary>Gets a value that indicates whether there is a document to navigate back to.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether there is a document to navigate back to.</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoForward">
      <summary>Gets a value that indicates whether there is a document to navigate forward to.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether there is a document to navigate forward to.</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Document">
      <summary>Gets the Document object that represents the hosted HTML page. </summary>
      <returns>A Document object.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoBack">
      <summary>Navigate back to the previous document, if there is one.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no document to navigate back to.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoForward">
      <summary>Navigate forward to the next HTML document, if there is one.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no document to navigate forward to.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)">
      <summary>Executes a script function that is implemented by the currently loaded document.</summary>
      <returns>The object returned by the Active Scripting call.</returns>
      <param name="scriptName">The name of the script function to execute.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The script function does not exist.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])">
      <summary>Executes a script function that is defined in the currently loaded document.</summary>
      <returns>The object returned by the Active Scripting call.</returns>
      <param name="scriptName">The name of the script function to execute.</param>
      <param name="args">The parameters to pass to the script function.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The script function does not exist.</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.LoadCompleted">
      <summary>Occurs when the document being navigated to has finished downloading.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String)">
      <summary>Navigates asynchronously to the document at the specified URL.</summary>
      <param name="source">The URL to navigate to.</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)">
      <summary>Navigates asynchronously to the document at the specified URL and specify the target frame to load the document's content into. Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request.</summary>
      <param name="source">The URL to navigate to.</param>
      <param name="targetFrameName">The name of the frame to display the document's content in.</param>
      <param name="postData">HTTP POST data to send to the server when the source is requested.</param>
      <param name="additionalHeaders">HTTP headers to send to the server when the source is requested.</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)">
      <summary>Navigate asynchronously to the document at the specified <see cref="T:System.Uri" />.</summary>
      <param name="source">The <see cref="T:System.Uri" /> to navigate to.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
      <exception cref="T:System.Security.SecurityException">Navigation from an application that is running in partial trust to a <see cref="T:System.Uri" /> that is not located at the site of origin.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)">
      <summary>Navigate asynchronously to the document at the specified <see cref="T:System.Uri" /> and specify the target frame to load the document's content into. Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request.</summary>
      <param name="source">The <see cref="T:System.Uri" /> to navigate to.</param>
      <param name="targetFrameName">The name of the frame to display the document's content in.</param>
      <param name="postData">HTTP POST data to send to the server when the source is requested.</param>
      <param name="additionalHeaders">HTTP headers to send to the server when the source is requested.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
      <exception cref="T:System.Security.SecurityException">Navigation from an application that is running in partial trust:To a <see cref="T:System.Uri" /> that is not located at the site of origin, or <paramref name="targetFrameName" /> name is not null or empty.</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigated">
      <summary>Occurs when the document being navigated to is located and has started downloading.</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)">
      <summary>Navigate asynchronously to a <see cref="T:System.IO.Stream" /> that contains the content for a document.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> that contains the content for a document.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)">
      <summary>Navigate asynchronously to a <see cref="T:System.String" /> that contains the content for a document.</summary>
      <param name="text">The <see cref="T:System.String" /> that contains the content for a document.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigating">
      <summary>Occurs just before navigation to a document.</summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.ObjectForScripting">
      <summary>Gets or sets an instance of a public class, implemented by the host application, that can be accessed by script from a hosted document.</summary>
      <returns>The <see cref="T:System.Object" /> that is an instance of a public class, implemented by the host application, that can be accessed by script from a hosted document.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> is set with an instance of type that is not COMVisible.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh">
      <summary>Reloads the current page.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh(System.Boolean)">
      <summary>Reloads the current page with optional cache validation.</summary>
      <param name="noCache">Specifies whether to refresh without cache validation.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Source">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the current document hosted in the <see cref="T:System.Windows.Controls.WebBrowser" />.</summary>
      <returns>The <see cref="T:System.Uri" /> for the current HTML document.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to the underlying native WebBrowser could not be retrieved.</exception>
      <exception cref="T:System.Security.SecurityException">Navigation from an application that is running in partial trust to a <see cref="T:System.Uri" /> that is not located at the site of origin.</exception>
    </member>
    <member name="T:System.Windows.Controls.WrapPanel">
      <summary>Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> property.</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.WrapPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <see cref="T:System.Windows.Controls.WrapPanel" /> element.</summary>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.WrapPanel" /> element and its children.</returns>
      <param name="finalSize">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</param>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
      <summary>Gets or sets a value that specifies the height of all items that are contained within a <see cref="T:System.Windows.Controls.WrapPanel" />. </summary>
      <returns>The <see cref="T:System.Double" /> that represents the uniform height of all items that are contained within the <see cref="T:System.Windows.Controls.WrapPanel" />. The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />  dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />  dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
      <summary>Gets or sets a value that specifies the width of all items that are contained within a <see cref="T:System.Windows.Controls.WrapPanel" />. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the uniform width of all items that are contained within the <see cref="T:System.Windows.Controls.WrapPanel" />. The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />  dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />  dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of a <see cref="T:System.Windows.Controls.WrapPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <returns>The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</returns>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.Orientation">
      <summary>Gets or sets a value that specifies the dimension in which child content is arranged. </summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> value that represents the physical orientation of content within the <see cref="T:System.Windows.Controls.WrapPanel" /> as horizontal or vertical. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />  dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />  dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.AutoToolTipPlacement">
      <summary>Describes the means by which the automatic <see cref="T:System.Windows.Controls.ToolTip" /> is positioned on a <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None">
      <summary>No automatic <see cref="T:System.Windows.Controls.ToolTip" /></summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.TopLeft">
      <summary>For a horizontal <see cref="T:System.Windows.Controls.Slider" /> show the automatic <see cref="T:System.Windows.Controls.ToolTip" /> at the top edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />. For a vertical <see cref="T:System.Windows.Controls.Slider" /> show the automatic <see cref="T:System.Windows.Controls.ToolTip" /> at the left edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.BottomRight">
      <summary>For a horizontal <see cref="T:System.Windows.Controls.Slider" /> show the automatic <see cref="T:System.Windows.Controls.ToolTip" /> at the bottom edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />. For a vertical <see cref="T:System.Windows.Controls.Slider" /> show the automatic <see cref="T:System.Windows.Controls.ToolTip" /> at the right edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.BulletDecorator">
      <summary>Represents a layout control that aligns a bullet and another visual object.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>Overrides the default content arrangement behavior for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <returns>The computed size of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control. </returns>
      <param name="arrangeSize">The available <see cref="T:System.Windows.Size" /> to use to lay out the content of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Background">
      <summary>Gets or sets the background color for a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control. </summary>
      <returns>The background color for the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> and <see cref="P:System.Windows.Controls.Decorator.Child" /> of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.BulletDecorator.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet">
      <summary>Gets or sets the object to use as the bullet in a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> to use as the bullet. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.GetVisualChild(System.Int32)">
      <summary>Gets the child element that is at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Media.Visual" /> child element that is at the specified index.</returns>
      <param name="index">The specified index for the child element.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0. -or-<paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.LogicalChildren">
      <summary>Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <returns>The enumerator that provides access to the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.MeasureOverride(System.Windows.Size)">
      <summary>Overrides the default measurement behavior for the objects of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <returns>The required <see cref="T:System.Windows.Size" /> for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control, based on the size of its <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> and <see cref="P:System.Windows.Controls.Decorator.Child" /> objects.</returns>
      <param name="constraint">The upper <see cref="T:System.Windows.Size" /> limit of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Renders the content of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext" /> for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />. </param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount">
      <summary>Gets the number of visual child elements for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> control.</summary>
      <returns>The number of visual elements that are defined for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />. The default is 0.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ButtonBase">
      <summary>Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
      <summary>Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.  </summary>
      <returns>When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs. The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
      <summary>Gets or sets the command to invoke when this button is pressed.  </summary>
      <returns>A command to invoke when this button is pressed. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.  </summary>
      <returns>Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
      <summary>Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
      <summary>Gets or sets the element on which to raise the specified command.  </summary>
      <returns>Element on which to raise a command.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
      <summary>Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</summary>
      <returns>true if the control is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called. </summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</summary>
      <param name="e">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary> Called when an element loses keyboard focus. </summary>
      <param name="e">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages. </summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control. </summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element. </summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</summary>
      <param name="e">The event data. </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary> Called when the rendered size of a control changes. </summary>
      <param name="sizeInfo">Specifies the size changes.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarButton">
      <summary>Represents a month or year on a <see cref="T:System.Windows.Controls.Calendar" /> object.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays">
      <summary>Gets a value that indicates whether this button represents a year or month that contains selected dates.</summary>
      <returns>true if this button represents a year or month that contains selected dates; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDaysProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive">
      <summary>Gets a value that indicates whether this button represents a year that is not in the currently displayed decade.</summary>
      <returns>true if this button represents a day that is not in the currently displayed month, or a year that is not in the currently displayed decade; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.IsInactiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarDayButton">
      <summary>Represents a day on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut">
      <summary>Gets a value indicating whether the date represented by this button is blacked out.</summary>
      <returns>true if the date is blacked out; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOutProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted">
      <summary>Gets a value indicating whether this button is highlighted.</summary>
      <returns>true if the button is highlighted; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive">
      <summary>Gets a value indicating whether this button represents a day that is not in the currently displayed month.</summary>
      <returns>true if the button represents a day that is not in the currently displayed month; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsInactiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected">
      <summary>Gets a value indicating whether the date represented by this button is selected.</summary>
      <returns>true if the date is selected; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday">
      <summary>Gets a value indicating whether the date represented by this button is the current date.</summary>
      <returns>true if the date is the current date; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsTodayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarItem">
      <summary>Represents the currently displayed month or year on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarItem.DayTitleTemplateResourceKey">
      <summary>Gets or sets the resource key for the DayTitleTemplate.</summary>
      <returns>The resource key for the DayTitleTemplate.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacement">
      <summary>Defines custom placement parameters for a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.#ctor(System.Windows.Point,System.Windows.Controls.Primitives.PopupPrimaryAxis)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure.</summary>
      <param name="point">The <see cref="T:System.Windows.Point" /> that is relative to the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> where the upper-left corner of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is placed.</param>
      <param name="primaryAxis">The <see cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" /> along which a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control moves when it is obstructed by a screen edge.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)">
      <summary>Compares this structure with another <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to determine whether they are equal.</summary>
      <returns>true if the structures have the same values; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.GetHashCode">
      <summary>Gets the hash code for this structure. </summary>
      <returns>The hash code for this structure.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structures to determine whether they are equal.</summary>
      <returns>true if the structures have the same values; otherwise, false.</returns>
      <param name="placement1">The first <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
      <param name="placement2">The second <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structures to determine whether they are not equal. </summary>
      <returns>true if the structures do not have the same values; otherwise, false.</returns>
      <param name="placement1">The first <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
      <param name="placement2">The second <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> structure to compare.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.Point">
      <summary>Gets or sets the point that is relative to the target object where the upper-left corner of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control is placedl. </summary>
      <returns>A <see cref="T:System.Windows.Point" /> that is used to position a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default value is (0,0).</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.PrimaryAxis">
      <summary>Gets or sets the direction in which to move a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is obscured by screen boundaries.</summary>
      <returns>The direction in which to move a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is obscured by screen boundaries.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback">
      <summary>Represents a method that provides custom positioning for a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. </summary>
      <returns>An array of possible <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> positions for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />.</returns>
      <param name="popupSize">The <see cref="T:System.Windows.Size" /> of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</param>
      <param name="targetSize">The <see cref="T:System.Windows.Size" /> of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />.</param>
      <param name="offset">The <see cref="T:System.Windows.Point" /> computed from the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridCellsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the cells are to be added. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ArrangeOverride(System.Windows.Size)">
      <returns>The size of the control.</returns>
      <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Clears the container reference for the specified cell.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.DataGridCell" /> to clear.</param>
      <param name="item">The data item. This value is not used.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.GetContainerForItemOverride">
      <summary>Returns a new <see cref="T:System.Windows.Controls.DataGridCell" /> instance to contain a cell value.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.DataGridCell" /> instance.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
      <param name="item">The item to check.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item">
      <summary>Gets the data item that the row represents. </summary>
      <returns>The data item that the row represents. </returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.MeasureOverride(System.Windows.Size)">
      <returns>The size of the control, up to the maximum specified by <paramref name="constraint" />.</returns>
      <param name="availableSize">The available size that this element can give to child elements.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnApplyTemplate"></member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called to update the displayed cells when the <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection has changed. </summary>
      <param name="columns">The <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection.</param>
      <param name="e">The event data from the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event of the <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnItemChanged(System.Object,System.Object)">
      <summary>Called to update the displayed cells when the <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> property value has changed. </summary>
      <param name="oldItem">The previous value of the <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> property.</param>
      <param name="newItem">The new value of the <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Called by the layout system to draw a horizontal line below the cells if horizontal grid lines are visible.</summary>
      <param name="drawingContext">The drawing instructions for the cells. This context is provided to the layout system.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the cell to display the specified item.</summary>
      <param name="element">The cell to prepare.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeader">
      <summary>Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> column header.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort">
      <summary>Gets a value that indicates whether the user can click this column header to sort the <see cref="T:System.Windows.Controls.DataGrid" /> by the associated column.</summary>
      <returns>true if the user can click this column header to sort the <see cref="T:System.Windows.Controls.DataGrid" /> by the associated column; otherwise, false. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSortProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.Column">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGridColumn" /> associated with this column header.</summary>
      <returns>The column associated with this column header.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnFloatingHeaderStyleKey">
      <summary>Gets the key that references the style for displaying column headers during a header drag operation. </summary>
      <returns>The style key for floating column headers. </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey">
      <summary>Gets the key that references the style for the drop location indicator during a header drag operation. </summary>
      <returns>The style key for the drop location indicator. </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex">
      <summary>Gets the display position of the column associated with this column header relative to the other columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The display position of associated column relative to the other columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen">
      <summary>Gets a value that indicates whether the column associated with this column header is prevented from scrolling horizontally.</summary>
      <returns>true if the associated column is prevented from scrolling horizontally; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnApplyTemplate">
      <summary>Builds the visual tree for the column header when a new template is applied. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnClick">
      <summary>Called when the header is clicked in order to raise the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event and initiate sorting. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> for this row header.</summary>
      <returns>A new automation peer for this column header.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <param name="e">The event data. </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint the column header separator lines. </summary>
      <returns>The brush used to paint column header separator lines. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility">
      <summary>Gets or sets the user interface (UI) visibility of the column header separator lines. </summary>
      <returns>The UI visibility of the column header separator lines. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DataGrid" /> is sorted by the associated column and whether the column values are in ascending or descending order.</summary>
      <returns>The sort direction of the column or null if unsorted.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the column headers are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ArrangeOverride(System.Windows.Size)">
      <returns>The size of the control.</returns>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <param name="element">The container element.</param>
      <param name="item">The item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetContainerForItemOverride">
      <summary>Returns a new <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> instance to contain a column header value.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> instance. </returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>Returns a geometry for a clipping mask. The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</summary>
      <returns>The clipping geometry.</returns>
      <param name="layoutSlotSize">The rendered size of the column header.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetVisualChild(System.Int32)">
      <summary>Returns the <see cref="T:System.Windows.Media.Visual" /> child at the specified index.</summary>
      <returns>The child. </returns>
      <param name="index">The index of the <see cref="T:System.Windows.Media.Visual" /> child to return.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
      <param name="item">The item to check.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.MeasureOverride(System.Windows.Size)">
      <returns>The size of the control, up to the maximum specified by <paramref name="constraint" />.</returns>
      <param name="availableSize">The available size that this element can give to child elements.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnApplyTemplate"></member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> for this presenter.</summary>
      <returns>A new automation peer for this presenter.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <param name="element">Element used to display the specified item.</param>
      <param name="item">Specified item.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.VisualChildrenCount">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Visual" /> children in this presenter.</summary>
      <returns>The number of visual children. </returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the row details are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ArrangeOverride(System.Windows.Size)">
      <returns>The actual size needed by the element.</returns>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.MeasureOverride(System.Windows.Size)">
      <returns>The size that is required to arrange child content.</returns>
      <param name="availableSize">The available size that this element can give to child elements.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> for this presenter.</summary>
      <returns>A new automation peer for this presenter.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Called by the layout system to draw a horizontal line below the row details section if horizontal grid lines are visible.</summary>
      <param name="drawingContext">The drawing instructions for the row details. This context is provided to the layout system.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnVisualParentChanged(System.Windows.DependencyObject)">
      <param name="oldParent">The old parent element. May be null to indicate that the element did not have a visual parent previously.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowHeader">
      <summary>Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> row header. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected">
      <summary>Gets a value that indicates whether the row is selected. </summary>
      <returns>true if the row is selected; otherwise, false. The registered default is false. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> to prepare for arranging them during the <see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" /> pass. </summary>
      <returns>The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> determines it needs during layout, based on its calculations of child object allocated sizes. </returns>
      <param name="availableSize">The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed. </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnApplyTemplate">
      <summary>Builds the visual tree for the row header when a new template is applied. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnClick">
      <summary>Called when the header is clicked in order to raise the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event and initiate row selection or drag operations. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnCreateAutomationPeer">
      <summary>Returns a new <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> for this row header.</summary>
      <returns>A new automation peer for this row header.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint the row header separator lines. </summary>
      <returns>The brush used to paint row header separator lines. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility">
      <summary>Gets or sets the user interface (UI) visibility of the row header separator lines. </summary>
      <returns>The UI visibility of the row header separator lines. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the rows are to be added. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.MeasureOverride(System.Windows.Size)">
      <returns>The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</returns>
      <param name="constraint">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>Called to raise the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> event for rows that have scrolled out of view. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <param name="oldIsItemsHost">The old property value.</param>
      <param name="newIsItemsHost">The new property value.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <param name="oldViewportSize">The old size of the viewport.</param>
      <param name="newViewportSize">The new size of the viewport.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DatePickerTextBox">
      <summary>Represents the text input of a <see cref="T:System.Windows.Controls.DatePicker" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentPageView">
      <summary>Represents a viewport for a paginated <see cref="T:System.Windows.Documents.DocumentPage" />.    </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content to fit a specified view size.</summary>
      <returns>The actual size that the page view used to arrange itself and its children.</returns>
      <param name="finalSize">The maximum size that the page view should use to arrange itself and its children.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage">
      <summary>Gets the <see cref="T:System.Windows.Documents.DocumentPage" /> associated with this view.</summary>
      <returns>The document page associated with this view.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPaginator">
      <summary>Gets or sets the <see cref="T:System.Windows.Documents.DocumentPaginator" /> used to retrieve content pages for this view.</summary>
      <returns>The paginator that retrieves content pages for this view.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <returns>A service object of type <paramref name="serviceType" />, or null if there is no service object of type <paramref name="serviceType" />.</returns>
      <param name="serviceType">The type of service object to get. </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetVisualChild(System.Int32)">
      <summary>Returns the <see cref="T:System.Windows.Media.Visual" /> child at a specified index.</summary>
      <returns>The visual child at the specified index.</returns>
      <param name="index">The index of the visual child to return.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or greater than or equal to <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.IsDisposed">
      <summary>Gets a value that indicates whether <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> has been called for this instance.</summary>
      <returns>true if <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> has been called for this <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.MeasureOverride(System.Windows.Size)">
      <summary>Returns the available viewport size that can be given to display the current <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" />.</summary>
      <returns>The actual desired size.</returns>
      <param name="availableSize">The maximum available size.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />.</summary>
      <returns>The new <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageConnected">
      <summary>Occurs when a <see cref="T:System.Windows.Media.Visual" /> element of the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> is connected.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageDisconnected">
      <summary>Occurs when a <see cref="T:System.Windows.Media.Visual" /> element of the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> is disconnected.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber">
      <summary>Gets or sets the page number of the current page displayed. </summary>
      <returns>The zero-based page number of the current page displayed.  The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.PageNumberProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration that specifies how content should be stretched to fill the display page. </summary>
      <returns>The enumeration value that specifies how content should be stretched to fill the display page.  The default is <see cref="F:System.Windows.Media.Stretch.Uniform" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.StretchDirection" /> enumeration that specifies in what scaling directions <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> should be applied. </summary>
      <returns>The enumeration value that specifies in what scaling directions <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> should be applied.  The default is <see cref="F:System.Windows.Controls.StretchDirection.DownOnly" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> method instead. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IServiceProvider#GetService(System.Type)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)" /> method instead. </summary>
      <returns>A service object of type <paramref name="serviceType" />.</returns>
      <param name="serviceType"> An object that specifies the type of service object to get.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount">
      <summary>Gets the number of visual children contained in this view.</summary>
      <returns>The number of visual children contained in this view.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentViewerBase">
      <summary>Provides a base class for viewers that are intended to display fixed or flow content (represented by a <see cref="T:System.Windows.Documents.FixedDocument" /> or <see cref="T:System.Windows.Documents.FlowDocument" />, respectively).</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.#ctor">
      <summary>Initializes base class values when called by a derived class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CancelPrint">
      <summary>Cancels any current printing job.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage">
      <summary>Gets a value that indicates whether or not the viewer can jump to the next page in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />. </summary>
      <returns>true if the viewer can jump to the next page; otherwise, false.This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPagePropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> dependency property key.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> dependency property key.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPage(System.Int32)">
      <summary>Returns a value that indicates whether or the viewer is able to jump to the specified page number.</summary>
      <returns>A Boolean value that indicates whether or the viewer is able to jump to the specified page number.</returns>
      <param name="pageNumber">A page number to check for as a valid jump target.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage">
      <summary>Gets a value that indicates whether or not the viewer can jump to the previous page in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />. </summary>
      <returns>true if the viewer can jump to the previous page; otherwise, false.This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPagePropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> dependency property key.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> dependency property key.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document">
      <summary>Gets or sets a <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> to be paginated and displayed by the viewer. </summary>
      <returns>A <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> to be paginated and displayed by the viewer.The default property is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.DocumentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage">
      <summary>Causes the viewer to jump to the first page of the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetIsMasterPage(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property for a specified dependency object.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property, read from the dependency object specified by element.</returns>
      <param name="element">A dependency object from which to retrieve the value of <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" />.</param>
      <exception cref="T:System.ArgumentNullException">Raised if element is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetMasterPageView">
      <summary>Returns the current master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> for this viewer.</summary>
      <returns>The current master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> for this viewer, or null if no master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> can be found.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)">
      <summary>Creates and returns a new, read-only collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects that are associated with the current display document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
      <returns>A read-only collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects that are associated with the current display document.</returns>
      <param name="changed">Returns true on the first call to <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> or if the collection has not changed since the previous <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> call; otherwise, false if the collection has changed since the last <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> call.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)">
      <summary>Causes the viewer to jump to a specified page number.</summary>
      <param name="pageNumber">The number of the page to jump to.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.InvalidatePageViews">
      <summary>Causes the working <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> collection to be re-built.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage">
      <summary>Gets a value that indicates whether or not a child element in the viewer should be used as a master page.</summary>
      <returns>true if the associated element should be used as the master page; otherwise, false.This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage">
      <summary>Causes the viewer to jump to the last page in the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.LogicalChildren">
      <summary>Gets an enumerator for the children in the logical tree of the viewer.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to enumerate the logical children of the viewer.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber">
      <summary>Gets the page number for the current master page. </summary>
      <returns>The page number for the current master page, or 0 if no Document is currently loaded.This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberPropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> dependency property key.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> dependency property key.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage">
      <summary>Causes the viewer to jump to the next page in the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnApplyTemplate">
      <summary>Builds the visual tree for the viewer.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>Invoked whenever the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event reaches an element derived from this class in its route.  Implement this method to add class handling for this event.</summary>
      <param name="element">The element from which the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event originated.</param>
      <param name="rect">A rectangular region, in the coordinate space of element, which should be made visible.</param>
      <param name="pageNumber">The page number for the page that contains element.</param>
      <exception cref="T:System.ArgumentNullException">Raised if element is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCancelPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this viewer.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this viewer.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDocumentChanged">
      <summary>Called whenever the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property is modified.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnFirstPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnGoToPageCommand(System.Int32)">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> routed command.</summary>
      <param name="pageNumber">The number of the page to jump to.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnLastPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnMasterPageNumberChanged">
      <summary>Called whenever the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> property is modified.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnNextPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPageViewsChanged">
      <summary>Called whenever the working set of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects for this viewer (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> property) is modified.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPreviousPageCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> routed command.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPrintCommand">
      <summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> routed command.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount">
      <summary>Gets the total number of pages in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />. </summary>
      <returns>The number of pages in the current document, or 0 if no document is currently loaded.This property has no default value.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountPropertyKey">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> dependency property key.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> dependency property key.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews">
      <summary>Gets a read-only collection of the active <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects contained within the viewer.</summary>
      <returns>A read-only collection of the active <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> objects contained within the viewer.This property has no default value.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged">
      <summary>Occurs when the collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> items associated with this viewer (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> property) changes.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage">
      <summary>Causes the viewer to jump to the previous page of the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> property).</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.Print">
      <summary>Invokes a standard Print dialog which can be used to print the contents of the viewer and configure printing preferences.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.SetIsMasterPage(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> attached property on a specified dependency object.</summary>
      <param name="element">A dependency object on which to set the value of <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" />.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised if element is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#IServiceProvider#GetService(System.Type)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns> A service object of type <paramref name="serviceType" />.</returns>
      <param name="serviceType"> An object that specifies the type of service object to get.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value"> An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text"> A string to add to the object.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
      <summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> event that occurs when a user completes a drag operation with the mouse of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs" /> class. </summary>
      <param name="horizontalChange">The horizontal change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control, resulting from the drag operation.</param>
      <param name="verticalChange">The vertical change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control, resulting from the drag operation.</param>
      <param name="canceled">A Boolean value that indicates whether the drag operation was canceled by a call to the <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> method.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
      <summary>Gets whether the drag operation for a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> was canceled by a call to the <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> method. </summary>
      <returns>true if a drag operation was canceled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
      <summary>Gets the horizontal change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> after the user drags the control with the mouse. </summary>
      <returns>The horizontal difference between the point at which the user pressed the left mouse button and the point at which the user released the button during a drag operation of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control. There is no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> event to the <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventHandler" /> type.</summary>
      <param name="genericHandler">The event handler delegate.</param>
      <param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that uses the handler.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
      <summary>Gets the vertical change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> after the user drags the control with the mouse.</summary>
      <returns>The vertical difference between the point at which the user pressed the left mouse button and the point at which the user released the button during a drag operation of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control. There is no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> routed event  of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control. </summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
      <summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event that occurs one or more times when a user drags a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control with the mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs" /> class.</summary>
      <param name="horizontalChange">The horizontal change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</param>
      <param name="verticalChange">The vertical change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
      <summary>Gets the horizontal distance that the mouse has moved since the previous <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control with the mouse.</summary>
      <returns>A horizontal change in position of the mouse during a drag operation. There is no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event to the <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventHandler" /> type.</summary>
      <param name="genericHandler">The event handler delegate.</param>
      <param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that uses the handler.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
      <summary>Gets the vertical distance that the mouse has moved since the previous <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> event when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> with the mouse.</summary>
      <returns>A vertical change in position of the mouse during a drag operation. There is no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> routed event of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control. </summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
      <summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> event that occurs when a user drags a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control with the mouse..</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs" /> class.</summary>
      <param name="horizontalOffset">The horizontal offset of the mouse click with respect to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</param>
      <param name="verticalOffset">The vertical offset of the mouse click with respect to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
      <summary>Gets the horizontal offset of the mouse click relative to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
      <returns>The horizontal offset of the mouse click with respect to the upper-left corner of the bounding box of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />. There is no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> event to the <see cref="T:System.Windows.Controls.Primitives.DragStartedEventHandler" /> type.</summary>
      <param name="genericHandler">The event handler delegate.</param>
      <param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> that uses the handler.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
      <summary>Gets the vertical offset of the mouse click relative to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
      <returns>The horizontal offset of the mouse click with respect to the upper-left corner of the bounding box of the <see cref="T:System.Windows.Controls.Primitives.Thumb" />. There is no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> routed event of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
      <summary>Specifies the direction in which item generation will occur. <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> is used by <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
      <summary>Specifies to generate items in a forward direction.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
      <summary>Specifies to generate items in a backward direction.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> is used to describe the position of an item that is managed by <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> with the specified index and offset.</summary>
      <param name="index">An <see cref="T:System.Int32" /> index that is relative to the generated (realized) items. -1 is a special value that refers to a fictitious item at the beginning or the end of the items list.</param>
      <param name="offset">An <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item. An offset of 0 refers to the indexed element itself, an offset 1 refers to the next ungenerated (unrealized) item, and an offset of -1 refers to the previous item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
      <summary>Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> for value equality.</summary>
      <returns>true if <paramref name="o" /> and this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> have the same values.</returns>
      <param name="o">The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> instance to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
      <summary>Gets or sets the <see cref="T:System.Int32" /> index that is relative to the generated (realized) items.</summary>
      <returns>An <see cref="T:System.Int32" /> index that is relative to the generated (realized) items.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
      <summary>Gets or sets the <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item.</summary>
      <returns>An <see cref="T:System.Int32" /> offset that is relative to the ungenerated (unrealized) items near the indexed item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> objects for value equality.</summary>
      <returns>true if the two objects are equal; otherwise, false.</returns>
      <param name="gp1">The first instance to compare.</param>
      <param name="gp2">The second instance to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Compares two <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> objects for value inequality.</summary>
      <returns>true if the values are not equal; otherwise, false.</returns>
      <param name="gp1">The first instance to compare.</param>
      <param name="gp2">The second instance to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
      <summary>Returns a string representation of this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>A string representation of this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /></returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorStatus">
      <summary>Used by <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> to indicate the status of its item generation.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.NotStarted">
      <summary>The generator has not tried to generate content.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers">
      <summary>The generator is generating containers.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated">
      <summary>The generator has finished generating containers.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.Error">
      <summary>The generator has finished generating containers, but encountered one or more errors.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase">
      <summary>Represents the base class for classes that define the layout for a row of data where different data items are displayed in different columns.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.GridViewColumnCollection" />. </summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.GridViewColumn" /> objects that display data. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns" /> dependency property. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.GetVisualChild(System.Int32)">
      <summary>Gets the visual child in the row item at the specified index.</summary>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> object that contains the child at the specified index.</returns>
      <param name="index">The index of the child.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.LogicalChildren">
      <summary>Gets an enumerator for the logical children of a row.</summary>
      <returns>The <see cref="T:System.Collections.IEnumerator" /> for the logical children of this row. </returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the listener handled the event.</returns>
      <param name="managerType"> The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</param>
      <param name="sender"> Object that originated the event.</param>
      <param name="args"> Event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ToString">
      <summary>Returns a string representation of a <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> object.</summary>
      <returns>A string that contains the type of the object and the number of columns.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.VisualChildrenCount">
      <summary>Gets the number of visual children for a row. </summary>
      <returns>The number of visual children for the current row. </returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
      <summary>An interface that is implemented by classes which are responsible for generating user interface (UI) content on behalf of a host.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <summary>Returns the container element used to display the next item.</summary>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the container element which is used to display the next item.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
      <summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the container element which is used to display the next item.</returns>
      <param name="isNewlyRealized">Is true if the returned <see cref="T:System.Windows.DependencyObject" /> is newly generated (realized); otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>Returns the <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> object that maps to the item at the specified index.</summary>
      <returns>An <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> object that maps to the item at the specified index.</returns>
      <param name="itemIndex">The index of desired item. </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>Returns the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel.</summary>
      <returns>An <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel.</returns>
      <param name="panel">The panel for which to return an appropriate <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>Returns the index that maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that is the index which maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
      <param name="position">The index of desired item.The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />  for the desired index.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>Prepares the specified element as the container for the corresponding item.</summary>
      <param name="container">The container to prepare. Normally, <paramref name="container" /> is the result of the previous call to <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Removes one or more generated (realized) items.</summary>
      <param name="position">The <see cref="T:System.Int32" /> index of the element to remove. <paramref name="position" /> must refer to a previously generated (realized) item, which means its offset must be zero.</param>
      <param name="count">The <see cref="T:System.Int32" /> number of elements to remove, starting at <paramref name="position" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <summary>Removes all generated (realized) items.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that tracks the lifetime of the generation process.</returns>
      <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, that specifies the position of the item to start generating items at.</param>
      <param name="direction">A <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> that specifies the direction which to generate items.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />, and controlling whether or not to start at a generated (realized) item.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that tracks the lifetime of the generation process.</returns>
      <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, that specifies the position of the item to start generating items at.</param>
      <param name="direction">Specifies the position of the item to start generating items at.</param>
      <param name="allowStartAtRealizedItem">A <see cref="T:System.Boolean" /> that specifies whether to start at a generated (realized) item.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator">
      <summary>Extends the <see cref="T:System.Windows.Controls.Primitives.IItemContainerGenerator" /> interface to reuse the UI content it generates. Classes that are responsible for generating user interface (UI) content on behalf of a host implement this interface.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>Disassociates item containers from their data items and saves the containers so they can be reused later for other data items.</summary>
      <param name="position">The zero-based index of the first element to reuse. <paramref name="position" /> must refer to a previously generated (realized) item.</param>
      <param name="count">The number of elements to reuse, starting at <paramref name="position" />.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IScrollInfo">
      <summary>Represents the main scrollable region inside a <see cref="T:System.Windows.Controls.ScrollViewer" /> control.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
      <returns>true if scrolling is possible; otherwise, false. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible. </summary>
      <returns>true if scrolling is possible; otherwise, false. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
      <summary>Gets the vertical size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the extent.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
      <summary>Gets the horizontal size of the extent.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the extent. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
      <summary>Gets the horizontal offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal offset. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineDown">
      <summary>Scrolls down within content by one logical unit. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft">
      <summary>Scrolls left within content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineRight">
      <summary>Scrolls right within content by one logical unit.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineUp">
      <summary>Scrolls up within content by one logical unit. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>Forces content to scroll until the coordinate space of a <see cref="T:System.Windows.Media.Visual" /> object is visible. </summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that is visible.</returns>
      <param name="visual">A <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</param>
      <param name="rectangle">A bounding rectangle that identifies the coordinate space to make visible.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown">
      <summary>Scrolls down within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft">
      <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight">
      <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp">
      <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageDown">
      <summary>Scrolls down within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft">
      <summary>Scrolls left within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageRight">
      <summary>Scrolls right within content by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageUp">
      <summary>Scrolls up within content by one page.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
      <summary>Gets or sets a <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
      <summary>Sets the amount of horizontal offset.</summary>
      <param name="offset">The degree to which content is horizontally offset from the containing viewport.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
      <summary>Sets the amount of vertical offset.</summary>
      <param name="offset">The degree to which content is vertically offset from the containing viewport.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
      <summary>Gets the vertical offset of the scrolled content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical offset of the scrolled content. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" />. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
      <summary>Gets the vertical size of the viewport for this content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
      <summary>Gets the horizontal size of the viewport for this content.</summary>
      <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the viewport for this content. This property has no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
      <summary>Gets the action that occurred on the items collection.</summary>
      <returns>Returns the action that occurred.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
      <summary>Gets the number of items that were involved in the change.</summary>
      <returns>Integer that represents the number of items involved in the change.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
      <summary>Gets the number of user interface (UI) elements involved in the change.</summary>
      <returns>Integer that represents the number of UI elements involved in the change.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
      <summary>Gets the position in the collection before the change occurred.</summary>
      <returns>Returns a <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
      <summary>Gets the position in the collection where the change occurred.</summary>
      <returns>Returns a <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
      <summary>Represents the method that will handle the  <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.LayoutInformation">
      <summary>Defines methods that provide additional information about the layout state of an element.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
      <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> that represents the visible region of an element.</summary>
      <returns>A <see cref="T:System.Windows.Media.Geometry" /> that represents the visible region of an <paramref name="element" />.</returns>
      <param name="element">The <see cref="T:System.Windows.FrameworkElement" /> whose layout clip is desired.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
      <summary>Returns a <see cref="T:System.Windows.UIElement" /> that was being processed by the layout engine at the moment of an unhandled exception.</summary>
      <returns>A <see cref="T:System.Windows.UIElement" /> that was being processed by the layout engine at the moment of an unhandled exception.</returns>
      <param name="dispatcher">The <see cref="T:System.Windows.Threading.Dispatcher" /> object that defines the scope of the operation. There is one dispatcher per layout engine instance.</param>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="dispatcher" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
      <summary>Returns a <see cref="T:System.Windows.Rect" /> that represents the layout partition that is reserved for a child element.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that represents the layout slot of the element.</returns>
      <param name="element">The <see cref="T:System.Windows.FrameworkElement" /> whose layout slot is desired.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MenuBase">
      <summary>Represents a control that defines choices for users to select. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display the specified item.</summary>
      <returns>A <see cref="T:System.Windows.Controls.MenuItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when a mouse button is pressed or released. </summary>
      <param name="e">The event data for a mouse event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether the specified item is, or is eligible to be, its own item container. </summary>
      <returns>true if the item is a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.Separator" />; otherwise, false.</returns>
      <param name="item">The item to check whether it is an item container.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Responds to a change to the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property. </summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves the control.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MultiSelector">
      <summary>Provides an abstract class for controls that allow multiple items to be selected.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems">
      <summary>Starts a new selection transaction.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> is true when this method is called.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems">
      <summary>Gets or sets a value that indicates whether the multiple items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> can be selected at a time. </summary>
      <returns>true if multiple items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> can be selected at a time; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems">
      <summary>Commits the selected items to the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> is false when this method is called.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> is currently performing a bulk update to the <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> collection.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> is currently performing a bulk update to the <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> collection; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.SelectAll">
      <summary>Selects all of the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" /> is false.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems">
      <summary>Gets the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> that are selected.</summary>
      <returns>The items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> that are selected.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.UnselectAll">
      <summary>Unselects all of the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PlacementMode">
      <summary>Describes the placement of where a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control appears on the screen.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Absolute">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the upper-left corner of the screen and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control then repositions itself to align with the edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Relative">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the upper-left corner of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself to align with the screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control where the control  aligns its upper edge with the lower edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and aligns its left edge with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself so that its lower edge aligns with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control then repositions itself so that its upper edge aligns with the upper screen-edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Center">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control where it is centered over the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If a screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself to align with the screen edge. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that aligns its left edge with the right edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and aligns its upper edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself so that its left edge aligns with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the left screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself so that its left edge aligns with the left screen-edge. If the upper or lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control then repositions itself to align with the obscuring screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.AbsolutePoint">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the upper-left corner of the screen and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control extends in the opposite direction from the axis defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> or <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />=.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.RelativePoint">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the upper-left corner of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If a screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the <see cref="T:System.Windows.Controls.Primitives.Popup" /> extends in the opposite direction from the direction from the axis defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> or <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />. If the opposite screen edge also obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control then aligns with this screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
      <summary>A postion of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that aligns its upper edge with the lower edge of the bounding box of the mouse and aligns its left edge with the left edge of the bounding box of the mouse. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, it repositions itself to align with the upper edge of the bounding box of the mouse. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself to align with the upper screen-edge. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control relative to the tip of the mouse cursor and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> property values. If a horizontal or vertical screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, it opens in the opposite direction from the obscuring edge. If the opposite screen edge also obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, it then aligns with the obscuring screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that aligns its right edge with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and aligns its upper edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the left screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the <see cref="T:System.Windows.Controls.Primitives.Popup" /> repositions itself so that its left edge aligns with the right edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the right edge of the control aligns with the right screen-edge. If the upper or lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself to align with the obscuring screen edge.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
      <summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that aligns its lower edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> and aligns its left edge with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the control repositions itself so that its upper edge aligns with the lower edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, the lower edge of the control aligns with the lower screen-edge. If the left or right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup" />, it then repositions itself to align with the obscuring screen.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Custom">
      <summary>A position and repositioning behavior for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control that is defined by the  <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> delegate specified by the <see cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" /> property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Popup">
      <summary>Represents a pop-up window that has content.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> dependency property. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Child">
      <summary>Gets or sets the content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.  </summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Closed">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to false. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
      <summary>Attaches a child element to a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. </summary>
      <param name="popup">The <see cref="T:System.Windows.Controls.Primitives.Popup" /> to which to add child content. </param>
      <param name="child">The <see cref="T:System.Windows.UIElement" /> child content. </param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
      <summary>Gets or sets a delegate handler method that positions the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.  </summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> delegate method that provides placement information for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty">
      <summary>Identifies the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> dependency property. </summary>
      <returns>The identifier for the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
      <summary>Returns the logical parent of a <see cref="T:System.Windows.Controls.Primitives.Popup" />. </summary>
      <returns>If the <see cref="T:System.Windows.Controls.Primitives.Popup" /> does not have a defined parent and the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is not null, the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is returned. Otherwise, the return values are the same as <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow effect.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> dependency property. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
      <summary>Get or sets the horizontal distance between the target origin and the popup alignment point. </summary>
      <returns>The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
      <summary>Gets an enumerator that you can use to access the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that you can use to access the logical child elements of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
      <summary>Determines the required size of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> content within the visual tree of the logical parent.</summary>
      <returns>A <see cref="T:System.Windows.Size" /> structure that has the <see cref="P:System.Windows.Size.Height" /> and <see cref="P:System.Windows.Size.Width" /> properties both equal to zero (0).</returns>
      <param name="availableSize">The available size that this element can give to the child. You can use infinity as a value to indicate that the element can size to whatever content is available.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
      <summary>Responds when the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from to true to false.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
      <summary>Responds to the condition in which the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from false to true. </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Opened">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to true. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Placement">
      <summary>Gets or sets the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and specifies the behavior of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when it overlaps screen boundaries.  </summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration value that determines the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and that specifies how the control interacts with screen boundaries. The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
      <summary>Gets or sets the rectangle relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control is positioned when it opens.  </summary>
      <returns>The rectangle that is used to position the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
      <summary>Gets or sets the element relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is positioned when it opens.  </summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> that is the logical parent of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
      <summary>Gets or sets an animation for the opening and closing of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.  </summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> enumeration value that defines an animation to open and close a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when the control is no longer in focus.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when the control is no longer in focus; false if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when a mouse or keyboard event occurs outside the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child. </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object. </param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
      <summary>Gets or sets the vertical distance between the target origin and the popup alignment point.  </summary>
      <returns>The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see Popup Placement Behavior. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupAnimation">
      <summary>Describes how a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control animates when it opens.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.None">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Popup" /> control appears without animation. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Fade">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Popup" /> control gradually appears, or fades in. This effect is created by increasing the opacity of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> window over time.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Slide">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Popup" /> control slides down or up into place. By default, a <see cref="T:System.Windows.Controls.Primitives.Popup" /> slides down. However, if the screen does not provide enough room for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> to slide down, it slides up instead.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Scroll">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Popup" /> control scrolls from the upper-left corner of its parent. If the screen does not provide enough room to allow the <see cref="T:System.Windows.Controls.Primitives.Popup" /> default behavior, the <see cref="T:System.Windows.Controls.Primitives.Popup" /> scrolls from the lower-right corner instead.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupPrimaryAxis">
      <summary>Describes the direction to move a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control to increase the amount of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> that is visible.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.None">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.Popup" /> control changes position according to default <see cref="T:System.Windows.Controls.Primitives.Popup" /> behavior. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Horizontal">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.Popup" /> control changes position by moving along the horizontal axis of the screen before moving along the vertical axis. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Vertical">
      <summary>A <see cref="T:System.Windows.Controls.Primitives.Popup" /> control changes position by moving along the vertical axis of the screen before moving along the horizontal axis.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RangeBase">
      <summary>Represents an element that has a value within a specific range. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
      <summary>Gets or sets a value to be added to or subtracted from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> control.  </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to add to or subtract from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> element. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
      <summary>Gets or sets the highest possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element.  </summary>
      <returns>The highest possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
      <summary>Gets or sets the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element.  </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the range element. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property changes. </summary>
      <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
      <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
      <summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property changes. </summary>
      <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
      <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event. </summary>
      <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
      <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
      <summary>Gets or sets a <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to be added to or subtracted from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> control.  </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> to add to or subtract from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> element. The default is 0.1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
      <summary>Provides a string representation of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> object. </summary>
      <returns>Returns the string representation of a <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
      <summary>Gets or sets the current magnitude of the range control.  </summary>
      <returns>The current magnitude of the range control. The default is 0.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
      <summary>Occurs when the range value changes. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RepeatButton">
      <summary>Represents a control that raises its <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event repeatedly from the time it is pressed until it is released. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
      <summary>Gets or sets the amount of time, in milliseconds, the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> waits while it is pressed before it starts repeating. The value must be non-negative.  </summary>
      <returns>The amount of time, in milliseconds, the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> waits while it is pressed before it starts repeating. The default is the value of <see cref="P:System.Windows.SystemParameters.KeyboardDelay" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
      <summary>Gets or sets the amount of time, in milliseconds, between repeats once repeating starts. The value must be non-negative.  </summary>
      <returns>The amount of time, in milliseconds, between repeats after repeating starts. The default is the value of <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnClick">
      <summary>Raises an automation event and calls the base method to raise the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event. </summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.KeyUp" /> event. </summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.KeyUp" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> loses mouse capture. </summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.LostMouseCapture" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Reports when the mouse enters an element. </summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Reports when the mouse leaves an element. </summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event. </summary>
      <param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event. </summary>
      <param name="e">The event data for a <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> event.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ResizeGrip">
      <summary>Represents an implementation of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control that enables a <see cref="T:System.Windows.Window" /> to change its size. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ResizeGrip.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ResizeGrip" /> class. </summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollBar">
      <summary>Represents a control that provides a scroll bar that has a sliding <see cref="T:System.Windows.Controls.Primitives.Thumb" /> whose position corresponds to a value.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand">
      <summary>The command that notifies the <see cref="T:System.Windows.Controls.ScrollViewer" /> that the user is dragging the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of the horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />.  </summary>
      <returns>The command that occurs when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> on a <see cref="T:System.Windows.Controls.ScrollViewer" /> that has deferred scrolling enabled. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand">
      <summary>The command that notifies the <see cref="T:System.Windows.Controls.ScrollViewer" /> that the user is dragging the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of the vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />.  </summary>
      <returns>The command that notifies the <see cref="T:System.Windows.Controls.ScrollViewer" /> that the user is dragging the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of the vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />.  </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.IsEnabledCore">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is enabled.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is enabled in a <see cref="T:System.Windows.Controls.ScrollViewer" /> and the size of the content is larger than the display area; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the vertical direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the vertical direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the horizontal direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the horizontal direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the horizontal direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the horizontal direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the vertical direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a small amount in the vertical direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
      <summary>Creates the visual tree for the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> event that occurs when the <see cref="T:System.Windows.Controls.ContextMenu" /> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> closes.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> event that occurs when the <see cref="T:System.Windows.Controls.ContextMenu" /> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> opens.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is displayed horizontally or vertically.  </summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> enumeration value that defines whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is displayed horizontally or vertically. The default is <see cref="F:System.Windows.Controls.Orientation.Vertical" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the vertical direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the vertical direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the horizontal direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the horizontal direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the horizontal direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the horizontal direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the vertical direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> by a large amount in the vertical direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track" />. </returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
      <summary>Occurs one or more times as content scrolls in a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> when the user moves the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> by using the mouse.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> routed event.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the point of the mouse click that opened the <see cref="T:System.Windows.Controls.ContextMenu" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the point of the mouse click that opened the <see cref="T:System.Windows.Controls.ContextMenu" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToBottomCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand">
      <summary>The command that scrolls the content to the lower-right corner of a <see cref="T:System.Windows.Controls.ScrollViewer" /> control. </summary>
      <returns>The command that scrolls the content to the lower-right corner of a <see cref="T:System.Windows.Controls.ScrollViewer" /> control. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHomeCommand">
      <summary>The command that scrolls the content to the upper-left corner of a <see cref="T:System.Windows.Controls.ScrollViewer" /> control. </summary>
      <returns>The command that scrolls the content to the upper-left corner of a <see cref="T:System.Windows.Controls.ScrollViewer" /> control. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHorizontalOffsetCommand">
      <summary>The command that scrolls a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in a <see cref="T:System.Windows.Controls.ScrollViewer" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />. </summary>
      <returns>The command that scrolls a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in a <see cref="T:System.Windows.Controls.ScrollViewer" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> value for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> value for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand">
      <summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
      <returns>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> value for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToVerticalOffsetCommand">
      <summary>The command that scrolls a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in a <see cref="T:System.Windows.Controls.ScrollViewer" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />. </summary>
      <returns>The command that scrolls a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in a <see cref="T:System.Windows.Controls.ScrollViewer" /> to the value that is provided in <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />. </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Track">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.Track" /> that is used with a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
      <summary>Gets or sets the amount of the scrollable content that is currently visible.  </summary>
      <returns>The amount of the scrollable content that is currently visible. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
      <summary>Provides data for a <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event that occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> moves. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" /> class by using the specified <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> enumeration value and the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
      <param name="scrollEventType">A <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> enumeration value that describes the type of <see cref="T:System.Windows.Controls.Primitives.Thumb" /> movement that caused the event.</param>
      <param name="newValue">The value that corresponds to the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Performs the appropriate type casting to call the type-safe <see cref="T:System.Windows.Controls.Primitives.ScrollEventHandler" /> delegate for the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event. </summary>
      <param name="genericHandler">The event handler to call.</param>
      <param name="genericTarget">The current object along the event's route.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
      <summary>Gets a value that represents the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
      <returns>The value that corresponds to the new position of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> enumeration value that describes the change in the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> position that caused this event.</summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> enumeration value that describes the type of <see cref="T:System.Windows.Controls.Primitives.Thumb" /> movement that caused the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> routed event that occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> moves.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventType">
      <summary>Describes the behavior that caused a <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> control. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> was dragged to a new position and is now no longer being dragged by the user.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> position of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the CTRL+HOME keys are pressed. This movement corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand" /> in a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> and a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand" /> in a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />, to the left for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or upward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the page button that is above the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is pressed, or when the PAGE UP key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" />. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the page button to the left of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />, to the right for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or downward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the page button that is below the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is pressed, or when the PAGE DOWN key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" />. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the page button to the right of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> position of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the CTRL+END keys are pressed. This movement corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand" /> in a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> and a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand" /> in a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a small distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />, to the left for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or upward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the upper <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed or when the UP ARROW key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" />. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the left <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved a small distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />, to the right for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> or downward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the lower <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed or when the DOWN ARROW key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" />. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, this movement occurs when the right <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> moved to a new position because the user selected Scroll Here in the shortcut menu of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. This movement corresponds to the <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand" />. To view the shortcut menu, right-click the mouse when the pointer is over the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
      <summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> was dragged and caused a <see cref="E:System.Windows.UIElement.MouseMove" /> event. A <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> event of this <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> may occur more than one time when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> is dragged in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid">
      <summary>A panel that can hold specified cells in place when the view is scrolled.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.GetSelectiveScrollingOrientation(System.Windows.DependencyObject)">
      <summary>Gets the direction that cells can scroll for a specified object.</summary>
      <returns>The direction that cells can scroll.</returns>
      <param name="obj">The object whose scrolling orientation is retrieved.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation">
      <summary>Gets or sets the direction that cells can scroll.</summary>
      <returns>The direction that cells can scroll.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SetSelectiveScrollingOrientation(System.Windows.DependencyObject,System.Windows.Controls.SelectiveScrollingOrientation)">
      <summary>Sets the direction that cells can scroll for a specified object.</summary>
      <param name="obj">The object whose scrolling orientation is set.</param>
      <param name="value">The scrolling orientation.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Selector">
      <summary>Represents a control that allows a user to select items from among its child elements. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Selector" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> attached event. </summary>
      <param name="element">Element that listens to this event.</param>
      <param name="handler">Event handler to add.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> attached event. </summary>
      <param name="element">Element that listens to this event.</param>
      <param name="handler">Event handler to add.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Returns an item container to the state it was in before <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />.</summary>
      <param name="element">The item container element.</param>
      <param name="item">The data item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelected(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> attached property that indicates whether an item is selected. </summary>
      <returns>Boolean value, true if the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> property is true.</returns>
      <param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
      <summary>Gets a value that indicates whether the keyboard focus is within the <see cref="T:System.Windows.Controls.Primitives.Selector" /></summary>
      <returns>Value of the property, true if the keyboard focus is within the <see cref="T:System.Windows.Controls.Primitives.Selector" />.</returns>
      <param name="element">The element from which to read the attached property.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelected">
      <summary>Gets or sets a value that indicates whether an item is selected.</summary>
      <returns>true if the item is selected; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive">
      <summary>Gets a value that indicates whether the keyboard focus is within the value returned by a <see cref="T:System.Windows.Controls.Primitives.Selector" />.</summary>
      <returns>true if the keyboard focus is within the <see cref="T:System.Windows.Controls.Primitives.Selector" /> control; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Selector" /> should keep the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> synchronized with the current item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property.  </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is always synchronized with the current item in the <see cref="T:System.Windows.Controls.ItemCollection" />; false if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is never synchronized with the current item; null if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> is synchronized with the current item only if the <see cref="T:System.Windows.Controls.Primitives.Selector" /> uses a <see cref="T:System.Windows.Data.CollectionView" />.  The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> dependency property  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property has changed. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Updates the current selection when an item in the <see cref="T:System.Windows.Controls.Primitives.Selector" /> has changed</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Called when the source of an item in a selector changes.</summary>
      <param name="oldValue">Old value of the source.</param>
      <param name="newValue">New value of the source.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Called when the selection changes.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item. </summary>
      <param name="element">Element used to display the specified item.</param>
      <param name="item">Specified item.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> attached event. </summary>
      <param name="element">Element that listens to this event.</param>
      <param name="handler">Event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> attached event. </summary>
      <param name="element">Element that listens to this event.</param>
      <param name="handler">Event handler to remove.</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Selected">
      <summary>Occurs when an item is selected.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
      <summary>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty.  </summary>
      <returns>The index of first item in the current selection. The default value is negative one (-1).</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
      <summary>Gets or sets the first item in the current selection or returns null if the selection is empty  </summary>
      <returns>The first item in the current selection or null if the selection is empty.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
      <summary>Gets or sets the value of the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />, obtained by using <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" />.  </summary>
      <returns>The value of the selected item.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
      <summary>Gets or sets the path that is used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> from the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />.  </summary>
      <returns>The path used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" />. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
      <summary> Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
      <summary>Occurs when the selection of a <see cref="T:System.Windows.Controls.Primitives.Selector" /> changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectionChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> routed event.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a property value that indicates whether an item in a <see cref="T:System.Windows.Controls.Primitives.Selector" /> is selected. </summary>
      <param name="element">Object on which to set the property.</param>
      <param name="isSelected">Value to set.</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Unselected">
      <summary>Occurs when an item is unselected.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.UnselectedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> routed event.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBar">
      <summary>Represents a control that displays items and information in a horizontal bar in an application window.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.GetContainerForItemOverride">
      <summary>Creates a new <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <returns>Returns true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
      <param name="item">The specified object to evaluate.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.OnCreateAutomationPeer">
      <summary>Specifies an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> for this <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares an item for display in the <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</summary>
      <param name="element">The item to display in the <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</param>
      <param name="item">The content of the item to display.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.SeparatorStyleKey">
      <summary>The key that represents the style to use for <see cref="T:System.Windows.Controls.Separator" /> objects in the <see cref="T:System.Windows.Controls.Primitives.StatusBar" />.</summary>
      <returns>A <see cref="T:System.Windows.ResourceKey" /> that references the style to use for <see cref="T:System.Windows.Controls.Separator" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>Determines whether to apply the <see cref="T:System.Windows.Style" /> for an item in the <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> to an object.</summary>
      <returns>true if the <paramref name="item" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, false.</returns>
      <param name="container">The container for the item.</param>
      <param name="item">The object to evaluate.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBarItem">
      <summary>Represents an item of a <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> control. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.OnCreateAutomationPeer">
      <summary>Specifies an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TabPanel">
      <summary>Handles the layout of the <see cref="T:System.Windows.Controls.TabItem" /> objects on a <see cref="T:System.Windows.Controls.TabControl" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of a <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> object. </summary>
      <returns>The size of the tab panel.</returns>
      <param name="arrangeSize">The size that a tab panel assumes to position child elements.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.GetLayoutClip(System.Windows.Size)">
      <summary>Used to override default clipping.</summary>
      <returns>A size that is the layout size of the <see cref="T:System.Windows.Controls.Primitives.TabPanel" />.</returns>
      <param name="layoutSlotSize">The size of the panel.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
      <summary>Called when remeasuring the control is required. </summary>
      <returns>The desired size.</returns>
      <param name="constraint">Constraint size is an upper limit. The return value should not exceed this size.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TextBoxBase">
      <summary>An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn">
      <summary>Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</summary>
      <returns>true if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored. The default value is false for <see cref="T:System.Windows.Controls.TextBox" /> and true for <see cref="T:System.Windows.Controls.RichTextBox" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab">
      <summary>Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.  </summary>
      <returns>true if pressing the TAB key inserts a tab character at the current cursor position; false if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)">
      <summary>Appends a string to the contents of a text control.</summary>
      <param name="textData">A string that specifies the text to append to the current contents of the text control.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection">
      <summary>Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</summary>
      <returns>true if automatic word selection is enabled; otherwise, false.The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange">
      <summary>Begins a change block.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo">
      <summary>Gets a value that indicates whether the most recent undo action can be redone.</summary>
      <returns>true if the most recent undo action can be redone; otherwise, false.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo">
      <summary>Gets a value that indicates whether the most recent action can be undone.</summary>
      <returns>true if the most recent action can be undone; otherwise, false.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush">
      <summary>Gets or sets the brush that is used to paint the caret of the text box.</summary>
      <returns>The brush that is used to paint the caret of the text box.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Copy">
      <summary>Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Cut">
      <summary>Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock">
      <summary>Creates a change block.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that refers to a new change block.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange">
      <summary>Ends a change block.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight">
      <summary>Gets the vertical size of the visible content area.</summary>
      <returns>A floating-point value that specifies the vertical size of the visible content area, in device-independent units (1/96th inch per unit).The value of this property is 0.0 if the text-editing control is not configured to support scrolling.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth">
      <summary>Gets the horizontal size of the visible content area.</summary>
      <returns>A floating-point value that specifies the horizontal size of the visible content area, in device-independent units (1/96th inch per unit).The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset">
      <summary>Gets or sets the horizontal scroll position.</summary>
      <returns>A floating-point value that specifies the horizontal scroll position, in device-independent units (1/96th inch per unit). Setting this property causes the text editing control to scroll to the specified horizontal offset. Reading this property returns the current horizontal offset.The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
      <exception cref="T:System.ArgumentException">An attempt is made to set this property to a negative value.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a horizontal scroll bar is shown. </summary>
      <returns>A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly">
      <summary>Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control. </summary>
      <returns>true if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible">
      <summary>Gets or sets a value that indicates whether a read-only text box displays a caret.</summary>
      <returns>true if a read-only text box displays a caret; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled">
      <summary>Gets or sets a value that indicates whether undo support is enabled for the text-editing control.  </summary>
      <returns>true if undo support is enabled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown">
      <summary>Scrolls the contents of the control down by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft">
      <summary>Scrolls the contents of the control to the left by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight">
      <summary>Scrolls the contents of the control to the right by one line.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp">
      <summary>Scrolls the contents of the control upward by one line. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit">
      <summary>Locks the most recent undo unit of the undo stack of the application. This prevents the locked unit from being merged with undo units that are added subsequently.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate">
      <summary>Is called when a control template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Arguments of the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Arguments of the event. These arguments will include details about which mouse button was depressed, and the handled state.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</summary>
      <param name="e">The mouse wheel arguments that are associated with this event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>  Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)">
      <summary>Is called when the caret or current selection changes position.</summary>
      <param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>Is called when the control template changes.</summary>
      <param name="oldTemplate">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</param>
      <param name="newTemplate">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>Is called when content in this editing control changes.</summary>
      <param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
      <param name="e">Provides data about the event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown">
      <summary>Scrolls the contents of the control down by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft">
      <summary>Scrolls the contents of the control to the left by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight">
      <summary>Scrolls the contents of the control to the right by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp">
      <summary>Scrolls the contents of the control up by one page.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Paste">
      <summary>Pastes the contents of the Clipboard over the current selection in the text editing control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Redo">
      <summary>Undoes the most recent undo command. In other words, redoes the most recent undo unit on the undo stack.</summary>
      <returns>true if the redo operation was successful; otherwise, false. This method returns false if there is no undo command available (the undo stack is empty).</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd">
      <summary>Scrolls the view of the editing control to the end of the content.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome">
      <summary>Scrolls the view of the editing control to the beginning of the viewport.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)">
      <summary>Scrolls the contents of the editing control to the specified horizontal offset.</summary>
      <param name="offset">A double value that specifies the horizontal offset to scroll to.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)">
      <summary>Scrolls the contents of the editing control to the specified vertical offset.</summary>
      <param name="offset">A double value that specifies the vertical offset to scroll to.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll">
      <summary>Selects all the contents of the text editing control.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush">
      <summary>Gets or sets the brush that highlights selected text.</summary>
      <returns>The brush that highlights selected text.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged">
      <summary>Occurs when the text selection has changed.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity">
      <summary>Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</summary>
      <returns>The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />. The default is 0.4.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck">
      <summary>Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.This property has no default value.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged">
      <summary>Occurs when content changes in the text element.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent">
      <summary> Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Undo">
      <summary>Undoes the most recent undo command. In other words, undoes the most recent undo unit on the undo stack.</summary>
      <returns>true if the undo operation was successful; otherwise, false. This method returns false if the undo stack is empty.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit">
      <summary>Gets or sets the number of actions stored in the undo queue.</summary>
      <returns>The number of actions stored in the undo queue. The default is –1, which means the undo queue is limited to the memory that is available.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset">
      <summary>Gets or sets the vertical scroll position.</summary>
      <returns>A floating-point value that specifies the vertical scroll position, in device-independent units (1/96th inch per unit).Setting this property causes the text editing control to scroll to the specified vertical offset. Reading this property returns the current vertical offset.The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
      <exception cref="T:System.ArgumentException">An attempt is made to set this property to a negative value.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates whether a vertical scroll bar is shown. </summary>
      <returns>A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration. The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight">
      <summary>Gets the vertical size of the scrollable content area.</summary>
      <returns>A floating-point value that specifies the vertical size of the scrollable content area, in device-independent units (1/96th inch per unit).The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth">
      <summary>Gets the horizontal size of the scrollable content area.</summary>
      <returns>A floating-point value that specifies the horizontal size of the scrollable content area, in device-independent units (1/96th inch per unit).The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Thumb">
      <summary>Represents a control that can be dragged by the user. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.CancelDrag">
      <summary>Cancels a drag operation for the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control loses mouse capture.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragCompletedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
      <summary>Occurs one or more times as the mouse changes position when a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has logical focus and mouse capture. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragDeltaEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control receives logical focus and mouse capture.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragStartedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
      <summary>Gets whether the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has logical focus and mouse capture and the left mouse button is pressed.   </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control has focus and mouse capture; otherwise false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnDraggingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> property. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBar">
      <summary>Represents a control that draws a set of tick marks for a <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.TickBar" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Fill">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to draw the tick marks.  </summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> to use to draw tick marks. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.FillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Fill" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed">
      <summary>Gets or sets the direction of increasing value of the tick marks.  </summary>
      <returns>true if the direction of increasing value is to the left for a horizontal <see cref="T:System.Windows.Controls.Slider" /> or down for a vertical <see cref="T:System.Windows.Controls.Slider" />; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsDirectionReversedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed" /> dependency property. This property is read-only.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabled">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.TickBar" /> displays a selection range.   </summary>
      <returns>true if a selection range is displayed; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Maximum">
      <summary>Gets or sets the maximum value that is possible for a tick mark.  </summary>
      <returns>The largest possible value for a tick mark. The default value is 100.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Minimum">
      <summary>Gets or sets the minimum value that is possible for a tick mark.  </summary>
      <returns>The smallest possible value for a tick mark. The default value is zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the tick marks for a <see cref="T:System.Windows.Controls.Slider" /> control. </summary>
      <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext" /> that is used to draw the ticks.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Placement">
      <summary>Gets or sets where tick marks appear  relative to a <see cref="T:System.Windows.Controls.Primitives.Track" /> of a <see cref="T:System.Windows.Controls.Slider" /> control.  </summary>
      <returns>A <see cref="T:System.Windows.Controls.Primitives.TickBarPlacement" /> enumeration value that identifies the position of the <see cref="T:System.Windows.Controls.Primitives.TickBar" /> in the <see cref="T:System.Windows.Style" /> layout of a <see cref="T:System.Windows.Controls.Slider" />. The default value is <see cref="F:System.Windows.Controls.Primitives.TickBarPlacement.Top" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.PlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace">
      <summary>Gets or sets a space buffer for the area that contains the tick marks that are specified for a <see cref="T:System.Windows.Controls.Primitives.TickBar" />.  </summary>
      <returns>A value that represents the total buffer area on either side of the row or column of tick marks. The default value is zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.ReservedSpaceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd">
      <summary>Gets or sets the end point of a selection.  </summary>
      <returns>The last value in a range of values for a selection. The default value is -1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionStart">
      <summary>Gets or sets the start point of a selection.   </summary>
      <returns>The first value in a range of values for a selection. The default value is -1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.TickFrequency">
      <summary>Gets or sets the interval between tick marks.  </summary>
      <returns>The distance between tick marks. The default value is one (1.0).</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TickFrequencyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Ticks">
      <summary>Gets or sets the positions of the tick marks.  </summary>
      <returns>A <see cref="T:System.Windows.Media.DoubleCollection" /> that specifies the locations of the tick marks. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TicksProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks" /> dependency property. This property is read-only.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBarPlacement">
      <summary>Specifies the placement of a <see cref="T:System.Windows.Controls.Primitives.TickBar" /> with respect to the <see cref="T:System.Windows.Controls.Primitives.Track" /> of a <see cref="T:System.Windows.Controls.Slider" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Left">
      <summary>The tick bar is positioned to the left of the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Top">
      <summary>The tick bar is positioned above the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Right">
      <summary>The tick bar is positioned to the right of the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Bottom">
      <summary>The tick bar is positioned below the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickPlacement">
      <summary>Specifies the position of tick marks in a <see cref="T:System.Windows.Controls.Slider" /> control with respect to the <see cref="T:System.Windows.Controls.Primitives.Track" /> that the control implements.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.None">
      <summary>No tick marks appear. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.TopLeft">
      <summary>Tick marks appear above the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a horizontal <see cref="T:System.Windows.Controls.Slider" />, or to the left of the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a vertical <see cref="T:System.Windows.Controls.Slider" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.BottomRight">
      <summary>Tick marks appear below the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a horizontal <see cref="T:System.Windows.Controls.Slider" />, or to the right of the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a vertical <see cref="T:System.Windows.Controls.Slider" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.Both">
      <summary>Tick marks appear above and below the <see cref="T:System.Windows.Controls.Primitives.Track" /> bar for a horizontal <see cref="T:System.Windows.Controls.Slider" />, or to the left and right of the <see cref="T:System.Windows.Controls.Primitives.Track" /> for a vertical <see cref="T:System.Windows.Controls.Slider" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToggleButton">
      <summary>Base class for controls that can switch states, such as <see cref="T:System.Windows.Controls.CheckBox" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.CheckedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" />  routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> routed event.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
      <summary>Occurs when the state of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is neither on nor off.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IndeterminateEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" />  routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked.   </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is checked; false if the <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is unchecked; otherwise null. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
      <summary>Determines whether the control supports two or three states.   </summary>
      <returns>true if the control supports three states; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> raises a <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnClick">
      <summary>Called when a control is clicked by the mouse or the keyboard. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer">
      <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> raises an <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle">
      <summary>Called by the <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> method to implement toggle behavior. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> raises an <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> event.</summary>
      <param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> event.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
      <summary>Returns the string representation of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> object. </summary>
      <returns>String representation of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> object.</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> is unchecked.</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" />  routed event. </summary>
      <returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> routed event.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel">
      <summary>Used to arrange overflow <see cref="T:System.Windows.Controls.ToolBar" /> items.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of a <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> object.</summary>
      <returns>The size of the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />.</returns>
      <param name="arrangeBounds">Size that a toolbar overflow panel assumes to position child elements.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>Creates a new <see cref="T:System.Windows.Controls.UIElementCollection" />.</summary>
      <returns>A new collection.</returns>
      <param name="logicalParent">Logical parent of the new collection.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.MeasureOverride(System.Windows.Size)">
      <summary>Remeasures the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />. </summary>
      <returns>The desired size.</returns>
      <param name="constraint">Constraint size is an upper limit. The return value should not exceed this size.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth">
      <summary>Gets or sets the recommended width for an overflow <see cref="T:System.Windows.Controls.ToolBar" /> before items flow to the next line.  </summary>
      <returns>A double value that represents the recommended width of the <see cref="T:System.Windows.Controls.ToolBar" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarPanel">
      <summary>Arranges <see cref="T:System.Windows.Controls.ToolBar" /> items inside a <see cref="T:System.Windows.Controls.ToolBar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes <see cref="T:System.Windows.Controls.ToolBar" /> items inside a <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />.</summary>
      <returns>The size of the panel.</returns>
      <param name="arrangeSize">The size that the <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> assumes to position its children.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.MeasureOverride(System.Windows.Size)">
      <summary>Remeasures a toolbar panel.</summary>
      <returns>The desired size of the panel.</returns>
      <param name="constraint">The measurement constraints; a <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> cannot return a size larger than the constraint.</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Track">
      <summary>Represents a control primitive that handles the positioning and sizing of a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control and two <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> controls that are used to set a <see cref="P:System.Windows.Controls.Primitives.Track.Value" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Track" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ArrangeOverride(System.Windows.Size)">
      <summary>Creates the layout for the <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>The <see cref="T:System.Windows.Size" /> to use for the <see cref="T:System.Windows.Controls.Primitives.Track" /> content.</returns>
      <param name="arrangeSize">The area that is provided for the <see cref="T:System.Windows.Controls.Primitives.Track" />.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that decreases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property of the <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that reduces the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" /> control when the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed. The default is a <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> control that has default settings.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.GetVisualChild(System.Int32)">
      <summary>Gets the child of the <see cref="T:System.Windows.Controls.Primitives.Track" /> at the specified index.</summary>
      <returns>Returns the object of the <see cref="T:System.Windows.Controls.Primitives.Track" /> at the specified index in the list of visual child elements. The index must be a number between zero (0) and the value of the <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> property minus one (1).</returns>
      <param name="index">The index of the child.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is greater than the value of the <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> property minus one (1).</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that increases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property of the <see cref="T:System.Windows.Controls.Primitives.Track" /> class.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> that increases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" /> control when the <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> is pressed. The default is a <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> control that has default settings.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed">
      <summary>Gets or sets whether the direction of increasing <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> is reversed from the default direction.  </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton" /> and the <see cref="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton" /> exchanged positions and the direction of increasing value is reversed; otherwise false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.IsDirectionReversedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed" /> dependency property. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Maximum">
      <summary>Gets or sets the maximum possible <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" />.  </summary>
      <returns>The largest allowable <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> for the <see cref="T:System.Windows.Controls.Primitives.Track" />. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Maximum" /> dependency property. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.MeasureOverride(System.Windows.Size)">
      <summary>Measures the layout size that is required for the <see cref="T:System.Windows.Controls.Primitives.Track" /> and its components.</summary>
      <returns>The layout <see cref="T:System.Windows.Size" /> that is required by the <see cref="T:System.Windows.Controls.Primitives.Track" />.</returns>
      <param name="availableSize">The size of the available space for the track.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Minimum">
      <summary>Gets or sets the minimum possible <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" />.  </summary>
      <returns>The smallest allowable <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> for the <see cref="T:System.Windows.Controls.Primitives.Track" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Minimum" /> dependency property. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Orientation">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Track" /> is displayed horizontally or vertically.  </summary>
      <returns>An <see cref="T:System.Windows.Controls.Orientation" /> enumeration value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Track" /> is displayed horizontally or vertically. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.OrientationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Orientation" /> dependency property. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Thumb">
      <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control that is used to change the <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> of a <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>The <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control that is used with the <see cref="T:System.Windows.Controls.Primitives.Track" />. The default is a <see cref="T:System.Windows.Controls.Primitives.Thumb" /> control that has default settings.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Value">
      <summary>Gets or sets the current value of the <see cref="T:System.Windows.Controls.Primitives.Track" /> as determined by the position of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> control.  </summary>
      <returns>The current value of the <see cref="T:System.Windows.Controls.Primitives.Track" />. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromDistance(System.Double,System.Double)">
      <summary>Calculates the change in the <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" /> when the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> moves.</summary>
      <returns>The change in <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> that corresponds to the displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> of the <see cref="T:System.Windows.Controls.Primitives.Track" />.</returns>
      <param name="horizontal">The horizontal displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" />.</param>
      <param name="vertical">The vertical displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" />.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromPoint(System.Windows.Point)">
      <summary>Calculates the distance from the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> to a specified point along the <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>The distance between the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> and the specified <paramref name="pt" /> value.</returns>
      <param name="pt">The specified point.</param>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> dependency property. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.ViewportSize">
      <summary>Gets or sets the size of the part of the scrollable content that is visible.  </summary>
      <returns>The size of the visible area of the scrollable content. The default is <see cref="F:System.Double.NaN" />, which means that the content size is not defined.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ViewportSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.ViewportSize" /> dependency property. </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount">
      <summary>Gets the number of child elements of a <see cref="T:System.Windows.Controls.Primitives.Track" />.</summary>
      <returns>An integer between 0 and 2 that specifies the number of child elements in the <see cref="T:System.Windows.Controls.Primitives.Track" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.UniformGrid">
      <summary>Provides a way to arrange content in a grid where all the cells in the grid have the same size.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.ArrangeOverride(System.Windows.Size)">
      <summary>Defines the layout of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> by distributing space evenly among all of the child elements.</summary>
      <returns>The actual <see cref="T:System.Windows.Size" /> of the grid that is rendered to display the child elements that are visible.</returns>
      <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> of the area for the grid to use.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Columns">
      <summary>Gets or sets the number of columns that are in the grid.  </summary>
      <returns>The number of columns that are in the grid. The default is 0. </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.ColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn">
      <summary>Gets or sets the number of leading blank cells in the first row of the grid.  </summary>
      <returns>The number of empty cells that are in the first row of the grid. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.FirstColumnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.MeasureOverride(System.Windows.Size)">
      <summary>Computes the desired size of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> by measuring all of the child elements.</summary>
      <returns>The desired <see cref="T:System.Windows.Size" /> based on the child content of the grid and the <paramref name="constraint" /> parameter.</returns>
      <param name="constraint">The <see cref="T:System.Windows.Size" /> of the available area for the grid.</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Rows">
      <summary>Gets or sets the number of rows that are in the grid.  </summary>
      <returns>The number of rows that are in the grid. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.RowsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Data.Binding">
      <summary>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</summary>
      <param name="path">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event. </summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</param>
      <param name="handler">The handler to add.</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event. </summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</param>
      <param name="handler">The handler to add.</param>
    </member>
    <member name="P:System.Windows.Data.Binding.AsyncState">
      <summary>Gets or sets opaque data passed to the asynchronous data dispatcher.</summary>
      <returns>Data passed to the asynchronous data dispatcher.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
      <summary>Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</summary>
      <returns>false to evaluate the path relative to the data item itself; otherwise, true. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Converter">
      <summary>Gets or sets the converter to use.</summary>
      <returns>A value of type <see cref="T:System.Windows.Data.IValueConverter" />. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterCulture">
      <summary>Gets or sets the culture in which to evaluate the converter.</summary>
      <returns>The default is null.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</summary>
      <returns>The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Data.Binding.DoNothing">
      <summary>Used as a returned value to instruct the binding engine not to perform any action.</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.ElementName">
      <summary>Gets or sets the name of the element to use as the binding source object.</summary>
      <returns>The value of the Name property or x:Name Attribute of the element of interest. You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through RegisterName. For more information, see WPF XAML Namescopes.The default is null.</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
      <summary>Returns an XML namespace manager object used by the binding attached to the specified object. </summary>
      <returns>A returned object used for viewing XML namespaces that relate to the binding on the passed object element. This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
      <param name="target">The object from which to get namespace information.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> parameter cannot be null.</exception>
    </member>
    <member name="F:System.Windows.Data.Binding.IndexerName">
      <summary>Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed. </summary>
    </member>
    <member name="P:System.Windows.Data.Binding.IsAsync">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</summary>
      <returns>The default is null.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Mode">
      <summary>Gets or sets a value that indicates the direction of the data flow in the binding.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.BindingMode" /> values. The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</summary>
      <returns>true if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</summary>
      <returns>true if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</summary>
      <returns>true if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Path">
      <summary>Gets or sets the path to the binding source property.</summary>
      <returns>The path to the binding source. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.RelativeSource">
      <summary>Gets or sets the binding source by specifying its location relative to the position of the binding target.</summary>
      <returns>A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event. </summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</param>
      <param name="handler">The handler to remove.</param>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event. </summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</param>
      <param name="handler">The handler to remove.</param>
    </member>
    <member name="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
      <summary>Sets a namespace manager object used by the binding attached to the provided element. </summary>
      <param name="target">The object from which to get namespace information.</param>
      <param name="value">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null. </exception>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializePath">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeSource">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Source">
      <summary>Gets or sets the object to use as the binding source.</summary>
      <returns>The object to use as the binding source.</returns>
    </member>
    <member name="E:System.Windows.Data.Binding.SourceUpdated">
      <summary>Occurs when a value is transferred from the binding target to the binding source, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> value set to true.</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.SourceUpdatedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</returns>
    </member>
    <member name="E:System.Windows.Data.Binding.TargetUpdated">
      <summary>Occurs when a value is transferred from the binding source to the binding target, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> value set to true.</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.TargetUpdatedEvent">
      <summary>Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
      <summary>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</summary>
      <returns>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
      <summary>Gets or sets a value that determines the timing of binding source updates.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values. The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property. However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</summary>
      <returns>true to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnExceptions">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
      <returns>true to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidationRules">
      <summary>Gets a collection of rules that check the validity of the user input.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.XmlNamespaceManager">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to perform namespace-aware XPath queries in XML bindings.</summary>
      <returns>The <see cref="T:System.Xml.XmlNamespaceManager" /> used to perform namespace-aware XPath queries in XML bindings. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.XPath">
      <summary>Gets or sets an XPath query that returns the value on the XML binding source to use.</summary>
      <returns>The XPath query. The default is null.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingBase">
      <summary>Defines the common characteristics of the <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />, and <see cref="T:System.Windows.Data.MultiBinding" /> classes. </summary>
    </member>
    <member name="P:System.Windows.Data.BindingBase.BindingGroupName">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</summary>
      <returns>The name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.FallbackValue">
      <summary>Gets or sets the value to use when the binding is unable to return a value.</summary>
      <returns>The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set on the property where this binding and extension are applied.</summary>
      <returns>The value to set on the binding target property.</returns>
      <param name="serviceProvider">The object that can provide services for the markup extension. May be null; see the Remarks section for more information.</param>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
      <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property on instances of this class.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
      <summary>Returns a value that indicates whether the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.StringFormat">
      <summary>Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</summary>
      <returns>A string that specifies how to format the binding if it displays the bound value as a string.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.TargetNullValue">
      <summary>Gets or sets the value that is used in the target when the value of the source is null.</summary>
      <returns>The value that is used in the target when the value of the source is null.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingExpression">
      <summary>Contains information about a single instance of a <see cref="T:System.Windows.Data.Binding" />. </summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.DataItem">
      <summary>Gets the binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</summary>
      <returns>The binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ParentBinding">
      <summary>Returns the <see cref="T:System.Windows.Data.Binding" /> object of the current <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
      <returns>The <see cref="T:System.Windows.Data.Binding" /> object of the current binding expression.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the listener handled the event; otherwise, false.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateSource">
      <summary>Sends the current binding target value to the binding source property in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</summary>
      <exception cref="T:System.InvalidOperationException">The binding has been detached from its target.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateTarget">
      <summary>Forces a data transfer from the binding source property to the binding target property.</summary>
      <exception cref="T:System.InvalidOperationException">The binding has been detached from its target.</exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpressionBase">
      <summary>Represents the base class for <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.PriorityBindingExpression" />, and <see cref="T:System.Windows.Data.MultiBindingExpression" />.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasError">
      <summary>Gets a value that indicates whether the parent binding has a failed validation rule.</summary>
      <returns>true if the parent binding has a failed validation rule; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase">
      <summary>Gets the <see cref="T:System.Windows.Data.BindingBase" /> object from which this <see cref="T:System.Windows.Data.BindingExpressionBase" /> object is created.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingBase" /> object from which this <see cref="T:System.Windows.Data.BindingExpressionBase" /> object is created.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Status">
      <summary>Gets the status of the binding expression.</summary>
      <returns>A <see cref="T:System.Windows.Data.BindingStatus" /> value that describes the status of the binding expression.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the listener handled the event; otherwise, false.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
      <summary>Sends the current binding target value to the binding source in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
      <summary>Forces a data transfer from the binding source to the binding target.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate">
      <summary>Runs any <see cref="T:System.Windows.Controls.ValidationRule" /> objects on the associated <see cref="T:System.Windows.Data.Binding" /> that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />. This method does not update the source.</summary>
      <returns>true if the validation rules succeed; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationError">
      <summary>Gets the <see cref="T:System.Windows.Controls.ValidationError" /> that caused this instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> to be invalid.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ValidationError" /> that caused this instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> to be invalid.</returns>
    </member>
    <member name="T:System.Windows.Data.BindingGroup">
      <summary>Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class. </summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.BeginEdit">
      <summary>Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.BindingExpressions">
      <summary>Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CancelEdit">
      <summary>Ends the edit transaction and discards the pending changes.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.CanRestoreValues">
      <summary>Gets whether each source in the binding can discard pending changes and restore the original values.</summary>
      <returns>true if each source in the binding can discard pending changes and restore the original values; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CommitEdit">
      <summary>Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</summary>
      <returns>true if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
      <summary>Returns the proposed value for the specified property and item.</summary>
      <returns>The proposed property value. </returns>
      <param name="item">The object that contains the specified property.</param>
      <param name="propertyName">The property whose proposed value to get.</param>
      <exception cref="T:System.InvalidOperationException">There is not a binding for the specified item and property.</exception>
      <exception cref="T:System.Windows.Data.ValueUnavailableException">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Items">
      <summary>Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
      <returns>The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Name">
      <summary>Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
      <returns>The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
      <summary>Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</summary>
      <returns>true if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.SharesProposedValues">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</summary>
      <returns>true if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
      <summary>Attempts to get the proposed value for the specified property and item.</summary>
      <returns>true if value is the proposed value for the specified property; otherwise, false.</returns>
      <param name="item">The object that contains the specified property.</param>
      <param name="propertyName">The property whose proposed value to get.</param>
      <param name="value">When this method returns, contains an object that represents the proposed property value. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.UpdateSources">
      <summary>Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</summary>
      <returns>true if all validation rules succeed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
      <summary>Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</summary>
      <returns>true if the validation rules succeed; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationRules">
      <summary>Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />. </returns>
    </member>
    <member name="T:System.Windows.Data.BindingListCollectionView">
      <summary>Represents the <see cref="T:System.Windows.Data.CollectionView" /> for collections that implement <see cref="T:System.ComponentModel.IBindingList" />, such as Microsoft ActiveX Data Objects (ADO) data views.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.#ctor(System.ComponentModel.IBindingList)">
      <summary>Initializes an instance of <see cref="T:System.Windows.Data.BindingListCollectionView" /> over the given list.</summary>
      <param name="list">The underlying <see cref="T:System.ComponentModel.IBindingList" />.</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.AddNew">
      <summary>Starts an add transaction and returns the pending new item.</summary>
      <returns>The pending new item.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanAddNew">
      <summary>Gets a value that indicates whether a new item can be added to the collection.</summary>
      <returns>true if a new item can be added to the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCancelEdit">
      <summary>Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</summary>
      <returns>true if the collection view can discard pending changes and restore the original values of an edited object; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelEdit">
      <summary>Ends the edit transaction and, if possible, restores the original value to the item.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelNew">
      <summary>Ends the add transaction and discards the pending new item.</summary>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter">
      <summary>Gets a value that indicates whether the view supports custom filtering.</summary>
      <returns>true if the view supports custom filtering; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanFilter">
      <summary>Gets a value that indicates whether the view supports callback-based filtering.</summary>
      <returns>This property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanGroup">
      <summary>Gets a value that indicates whether the view supports grouping.</summary>
      <returns>For a default instance of <see cref="T:System.Windows.Data.BindingListCollectionView" /> this property always returns true.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanRemove">
      <summary>Gets a value that indicates whether an item can be removed from the collection.</summary>
      <returns>true if an item can be removed from the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanSort">
      <summary>Gets a value that indicates whether the collection supports sorting.</summary>
      <returns>For a default instance of <see cref="T:System.Windows.Data.BindingListCollectionView" /> this property always returns true.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitEdit">
      <summary>Ends the edit transaction and saves the pending changes.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitNew">
      <summary>Ends the add transaction and saves the pending new item.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)">
      <summary>Returns a value that indicates whether a given item belongs to the collection view.</summary>
      <returns>true if the item belongs to the collection view; otherwise, false.</returns>
      <param name="item">The object to check.</param>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Count">
      <summary>Gets the estimated number of records in the collection. </summary>
      <returns>One of the following:ValueMeaning-1Could not determine the count of the collection. This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is attempting to increase efficiency and minimize dependence on always having the entire collection available.any other integerThe count of the collection.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentAddItem">
      <summary>Gets the item that is being added during the current add transaction.</summary>
      <returns>The item that is being added if <see cref="P:System.Windows.Data.BindingListCollectionView.IsAddingNew" /> is true; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentEditItem">
      <summary>Gets the item in the collection that is being edited.</summary>
      <returns>The item in the collection that is being edited if <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> is true; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CustomFilter">
      <summary>Gets or sets a custom filter.</summary>
      <returns>A string that specifies how the items are filtered.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.EditItem(System.Object)">
      <summary>Begins an edit transaction of the specified item.</summary>
      <param name="item">The item to edit.</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified position in the view.</summary>
      <returns>The item at the specified position in the view.</returns>
      <param name="index">The zero-based index at which the item is located.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupBySelector">
      <summary>Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level. </summary>
      <returns>A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Groups">
      <summary>Gets the top-level groups.</summary>
      <returns>A read-only collection of the top-level groups, or null if there are no groups.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)">
      <summary>Returns the index at which the given item belongs in the collection view.</summary>
      <returns>The index of the item in the collection, or -1 if the item does not exist in the collection view.</returns>
      <param name="item">The object to look for in the collection.</param>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsAddingNew">
      <summary>Gets a value that indicates whether an add transaction is in progress.</summary>
      <returns>true if an add transaction is in progress; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder">
      <summary>Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</summary>
      <returns>true if the list of items is already in the correct order for grouping; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEditingItem">
      <summary>Gets a value that indicates whether an edit transaction is in progress.</summary>
      <returns>true if an edit transaction is in progress; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEmpty">
      <summary>Returns a value that indicates whether the resulting (filtered) view is empty.</summary>
      <returns>true if the resulting view is empty; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.ItemProperties">
      <summary>Gets a collection of objects that describes the properties of the items in the collection.</summary>
      <returns>A collection of objects that describes the properties of the items in the collection.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
      <param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the index is out of range. </exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.NewItemPlaceholderPosition">
      <summary>Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.BindingListCollectionView" />.</summary>
      <returns>One of the enumeration values that specifies the position of the new item placeholder in the <see cref="T:System.Windows.Data.BindingListCollectionView" />.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)">
      <summary>Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</summary>
      <returns>true if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, false.</returns>
      <param name="item">The item to check.</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Remove(System.Object)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="item">The item to remove.</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified position from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Less than zero means <paramref name="o1" /> is less than <paramref name="o2" />, a value of zero means they are equal, and over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</returns>
      <param name="o1">  First object to compare.</param>
      <param name="o2">  Second object to compare.</param>
    </member>
    <member name="T:System.Windows.Data.BindingMode">
      <summary>Describes the direction of the data flow in a binding.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.TwoWay">
      <summary>Causes changes to either the source property or the target property to automatically update the other. This type of binding is appropriate for editable forms or other fully-interactive UI scenarios.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWay">
      <summary>Updates the binding target (target) property when the binding source (source) changes. This type of binding is appropriate if the control being bound is implicitly read-only. For instance, you may bind to a source such as a stock ticker. Or perhaps your target property has no control interface provided for making changes, such as a data-bound background color of a table. If there is no need to monitor the changes of the target property, using the <see cref="F:System.Windows.Data.BindingMode.OneWay" /> binding mode avoids the overhead of the <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> binding mode.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneTime">
      <summary>Updates the binding target when the application starts or when the data context changes. This type of binding is appropriate if you are using data where either a snapshot of the current state is appropriate to use or the data is truly static. This type of binding is also useful if you want to initialize your target property with some value from a source property and the data context is not known in advance. This is essentially a simpler form of <see cref="F:System.Windows.Data.BindingMode.OneWay" /> binding that provides better performance in cases where the source value does not change.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWayToSource">
      <summary>Updates the source property when the target property changes.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.Default">
      <summary>Uses the default <see cref="P:System.Windows.Data.Binding.Mode" /> value of the binding target. The default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings. A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</summary>
    </member>
    <member name="T:System.Windows.Data.BindingOperations">
      <summary>Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
      <summary>Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="target">The object from which to remove bindings.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Removes the binding from a property if there is one.</summary>
      <param name="target">The object from which to remove the binding.</param>
      <param name="dp">The dependency property from which to remove the binding.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</summary>
      <returns>The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or null if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</returns>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the binding.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or null if no binding object has been set.</returns>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or null if none exists. If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</returns>
      <param name="target">The binding target object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</summary>
      <returns>The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or null if no binding object has been set.</returns>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</summary>
      <returns>The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or null if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</returns>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the binding.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</summary>
      <returns>The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or null if none exists.</returns>
      <param name="target">The binding target object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</summary>
      <returns>The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or null if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</returns>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the binding.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</summary>
      <returns>The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or null if none exists.</returns>
      <param name="target">The binding target object where <paramref name="dp" /> is.</param>
      <param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Returns a value that indicates whether the specified property is currently data-bound.</summary>
      <returns>true if the specified property is data-bound; otherwise, false.</returns>
      <param name="target">The object where <paramref name="dp" /> is.</param>
      <param name="dp">The dependency property to check.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</summary>
      <returns>The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property. The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</returns>
      <param name="target">The binding target of the binding.</param>
      <param name="dp">The target property of the binding.</param>
      <param name="binding">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> parameter cannot be null.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dp" /> parameter cannot be null.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="binding" /> parameter cannot be null.</exception>
    </member>
    <member name="T:System.Windows.Data.BindingStatus">
      <summary>Describes the status of a binding.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Unattached">
      <summary>The binding has not yet been attached to its target property.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Inactive">
      <summary>The binding has not been activated.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Active">
      <summary>The binding has been successfully activated. This means that the binding has been attached to its binding target (target) property and has located the binding source (source), resolved the Path and/or XPath, and begun transferring values.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Detached">
      <summary>The binding has been detached from its target property.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.AsyncRequestPending">
      <summary>The binding is waiting for an asynchronous operation to complete.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.PathError">
      <summary>The binding was unable to resolve the source path.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateTargetError">
      <summary>The binding could not successfully return a source value to update the target value. For more information, see the remarks on <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />.</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateSourceError">
      <summary>The binding was unable to send the value to the source property.</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionContainer">
      <summary>Holds an existing collection structure, such as an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> or a <see cref="T:System.Data.DataSet" />, to be used inside a <see cref="T:System.Windows.Data.CompositeCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Data.CollectionContainer" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionContainer.Collection">
      <summary>Gets or sets the collection to add. </summary>
      <returns>The collection to add. The default is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.CollectionChanged">
      <summary>Occurs when the contained collection changes.</summary>
    </member>
    <member name="F:System.Windows.Data.CollectionContainer.CollectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionContainer.CollectionChanged" /> event.</summary>
      <param name="args">The event data.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Handles events from the centralized event table.</summary>
      <returns>true if the listener handled the event; otherwise, false.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">The object that originated the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ShouldSerializeCollection">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> property should be persisted. </summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the continaed collection has changed.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the listener handled the event; otherwise, false.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="T:System.Windows.Data.CollectionView">
      <summary>Represents a view for grouping, sorting, filtering, and navigating a data collection.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionView" /> class that represents a view of the specified collection. </summary>
      <param name="collection">The underlying collection.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanFilter">
      <summary>Gets a value that indicates whether the view supports filtering.</summary>
      <returns>true if the view supports filtering; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanGroup">
      <summary>Gets a value that indicates whether the view supports grouping.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanSort">
      <summary>Gets a value that indicates whether the view supports sorting.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearChangeLog">
      <summary>Clears any pending changes from the change log.</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CollectionChanged">
      <summary>Occurs when the view has changed.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Comparer">
      <summary>Returns an object that you can use to compare items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IComparer" /> object that you can use to compare items in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Contains(System.Object)">
      <summary>Returns a value that indicates whether the specified item belongs to the view.</summary>
      <returns>true if the item belongs to the view; otherwise, false.</returns>
      <param name="item">The object to check.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Count">
      <summary>Gets the number of records in the view.</summary>
      <returns>The number of records in the view, or –1 if the number of records is unknown.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Culture">
      <summary>Gets or sets the culture information to use during sorting.</summary>
      <returns>The culture information to use during sorting.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanged">
      <summary>Occurs after the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> has changed.</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanging">
      <summary>Occurs when the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is changing.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentItem">
      <summary>Gets the current item in the view.</summary>
      <returns>The current item of the view. By default, the first item of the collection starts as the current item.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentPosition">
      <summary>Gets the ordinal position of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> within the (optionally sorted and filtered) view.</summary>
      <returns>The ordinal position of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> within the (optionally sorted and filtered) view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Filter">
      <summary>Gets or sets a method used to determine if an item is suitable for inclusion in the view.</summary>
      <returns>A delegate that represents the method used to determine if an item is suitable for inclusion in the view.</returns>
      <exception cref="T:System.NotSupportedException">The current implementation does not support filtering. </exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetEnumerator">
      <summary>Returns an object that you can use to enumerate the items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified zero-based index in the view.</summary>
      <returns>The item at the specified zero-based index in the view.</returns>
      <param name="index">The zero-based index of the item to retrieve.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0. </exception>
    </member>
    <member name="P:System.Windows.Data.CollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describes how the items in the collection are grouped in the view.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Groups">
      <summary>Gets a collection of the top-level groups that is constructed based in the <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" /> property.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
      <summary>Returns the index at which the specified item is located.</summary>
      <returns>The index at which the specified item is located, or –1 if the item is unknown.</returns>
      <param name="item">The item to locate.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentAfterLast">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> of the view is beyond the end of the collection.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> of the view is beyond the end of the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> of the view is before the beginning of the collection.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> of the view is before the beginning of the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentInSync">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is at the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" />.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is in the view and at the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsDynamic">
      <summary>Gets a value that indicates whether the underlying collection provides change notifications.</summary>
      <returns>true if the underlying collection provides change notifications; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsEmpty">
      <summary>Gets a value that indicates whether the resulting (filtered) view is empty.</summary>
      <returns>true if the resulting view is empty; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsRefreshDeferred">
      <summary>Gets a value that indicates whether there is an outstanding <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> in use.</summary>
      <returns>true if there is an outstanding <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> in use; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is within the view; otherwise, false.</returns>
      <param name="item">The item to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToLast">
      <summary>Sets the last item in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToNext">
      <summary>Sets the item after the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
      <param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious">
      <summary>Sets the item before the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NeedsRefresh">
      <summary>Gets a value that indicates whether the view needs to be refreshed.</summary>
      <returns>true if the view needs to be refreshed; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NewItemPlaceholder">
      <summary>Gets the object that is in the collection to represent a new item.</summary>
      <returns>The object that is in the collection to represent a new item.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OKToChangeCurrent">
      <summary>Returns a value that indicates whether the view can change which item is the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</summary>
      <returns>false if a listener cancels the change; otherwise, true.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called by the base class to notify the derived class that an <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null. </exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> event. </summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to pass to the event handler.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> event.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to pass to the event handler.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanged">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CurrentChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging">
      <summary>Raises a <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> event that is not cancelable.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> event with the specified arguments.</summary>
      <param name="args">Information about the event.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event using the specified arguments.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
      <summary>Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</summary>
      <returns>true if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, false.</returns>
      <param name="item">The item to check.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>When overridden in a derived class, processes a single change on the UI thread.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</param>
    </member>
    <member name="E:System.Windows.Data.CollectionView.PropertyChanged">
      <summary>Occurs when a property value has changed.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Refresh">
      <summary>Re-creates the view.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOrDefer">
      <summary>Refreshes the view or specifies that the view needs to be refreshed when the defer cycle completes.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOverride">
      <summary>Re-creates the view.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)">
      <summary>Sets the specified item and index as the values of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> and <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> properties.</summary>
      <param name="newItem">The item to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</param>
      <param name="newPosition">The value to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> property value.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
      <summary>Sets the specified item and index as the values of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> and <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> properties. This method can be called from a constructor of a derived class.</summary>
      <param name="newItem">The item to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />.</param>
      <param name="newPosition">The value to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> property value.</param>
      <param name="count">The number of items in the <see cref="T:System.Windows.Data.CollectionView" />. </param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> structures that describes how the items in the collection are sorted in the view.</summary>
      <returns>An empty <see cref="T:System.ComponentModel.SortDescriptionCollection" /> in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SourceCollection">
      <summary>Returns the underlying unfiltered collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object that is the underlying collection.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the view has changed.</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher">
      <summary>Gets a value that indicates whether it has been necessary to update the change log because a <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> notification has been received on a different thread without first entering the user interface (UI) thread dispatcher.</summary>
      <returns>true if it has been necessary to update the change log because a <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> notification has been received on a different thread without first entering the user interface (UI) thread dispatcher; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionViewGroup">
      <summary>Represents a group created by a <see cref="T:System.Windows.Data.CollectionView" /> object based on the <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" />.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionViewGroup" /> class with the name of the group.</summary>
      <param name="name">The name of this group.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
      <summary>Gets a value that indicates whether this group has any subgroups.</summary>
      <returns>true if this group is at the bottom level and does not have any subgroups; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
      <summary>Gets the number of items in the subtree under this group.</summary>
      <returns>The number of items (leaves) in the subtree under this group.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Items">
      <summary>Gets the immediate items contained in this group.</summary>
      <returns>A read-only collection of the immediate items in this group. This is either a collection of subgroups or a collection of items if this group does not have any subgroups.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Name">
      <summary>Gets the name of this group.</summary>
      <returns>The name of this group which is the common value of the property used to divide items into groups.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" /> event using the provided arguments.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
      <summary>Gets and sets the number of items in the subtree under this group.</summary>
      <returns>The number of items (leaves) in the subtree under this group</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
      <summary>Gets the immediate items contained in this group.</summary>
      <returns>A collection of immediate items in this group. This is either a collection of subgroups or a collection of items if this group does not have any subgroups.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewSource">
      <summary>The Extensible Application Markup Language (XAML) proxy of a <see cref="T:System.Windows.Data.CollectionView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionViewSource" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CollectionViewType">
      <summary>Gets or sets the desired view type.  </summary>
      <returns>The desired view type.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Culture">
      <summary>Gets or sets the culture that is used for operations such as sorting and comparisons. </summary>
      <returns>The culture that is used for operations such as sorting and comparisons.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewSource.Filter">
      <summary>Provides filtering logic.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)">
      <summary>Returns the default view for the given source.</summary>
      <returns>Returns an <see cref="T:System.ComponentModel.ICollectionView" /> object that is the default view for the given source collection.</returns>
      <param name="source">An object reference to the binding source.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
      <summary>Gets or sets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describes how the items in the collection are grouped in the view.</summary>
      <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describes how the items in the collection are grouped in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)">
      <summary>Returns a value that indicates whether the given view is the default view for the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> collection.</summary>
      <returns>true if the given view is the default view for the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> collection or if the given view is nulll; otherwise, false.</returns>
      <param name="view">The view object to check.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>Invoked when the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> property changes.</summary>
      <param name="oldCollectionViewType">The old value of the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> property.</param>
      <param name="newCollectionViewType">The new value of the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> property.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
      <summary>Invoked when the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property changes.</summary>
      <param name="oldSource">The old value of the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property.</param>
      <param name="newSource">The new value of the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> property.</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Handles events from the centralized event table.</summary>
      <returns>true if the listener handled the event; otherwise, false.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Windows.Data.DataChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
      <summary>Gets or sets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Source">
      <summary>Gets or sets the collection object from which to create this view.   </summary>
      <returns>The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> dependency property. </returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the listener handled the event; otherwise, false.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Windows.Data.DataChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.View">
      <summary>Gets the view object that is currently associated with this instance of <see cref="T:System.Windows.Data.CollectionViewSource" />.  </summary>
      <returns>The view object that is currently associated with this instance of <see cref="T:System.Windows.Data.CollectionViewSource" />.</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Data.CollectionViewSource.View" /> dependency property. </returns>
    </member>
    <member name="T:System.Windows.Data.CompositeCollection">
      <summary>Enables multiple collections and items to be displayed as a single list.</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection" /> class that is empty and has default initial capacity. </summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection" /> class that is empty and has a specified initial capacity. </summary>
      <param name="capacity">The number of items that the new list is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Add(System.Object)">
      <summary>Adds the specified item to this collection.</summary>
      <returns>Zero-based index where the new item is added.</returns>
      <param name="newItem">New item to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Clear">
      <summary>Clears the collection.</summary>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.CollectionChanged">
      <summary>Occurs when the collection changes, either by adding or removing an item. </summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Contains(System.Object)">
      <summary>Checks to see if a given item is in this collection.</summary>
      <returns>true if the collection contains the given item; otherwise, false.</returns>
      <param name="containItem">The item to check.</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)">
      <summary>Makes a shallow copy of object references from this collection to the given array.</summary>
      <param name="array">The array that is the destination of the copy operation.</param>
      <param name="index">Zero-based index in the target array at which the copying starts.</param>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Count">
      <summary>Gets the number of items stored in this collection.</summary>
      <returns>The number of items stored in this collection.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)">
      <summary>Returns the index in this collection where the given item is found. </summary>
      <returns>If the item appears in the collection, then the zero-based index in the collection where the given item is found; otherwise, -1.</returns>
      <param name="indexItem">The item to retrieve the index for.</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts an item in the collection at a given index. All items after the given position are moved down by one. </summary>
      <param name="insertIndex">The index to insert the item at.</param>
      <param name="insertItem">The item reference to add to the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">If index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Item(System.Int32)">
      <summary>Indexer property that retrieves or replaces the item at the given zero-based offset in the collection. </summary>
      <returns>The item at the specified zero-based offset.</returns>
      <param name="itemIndex">The zero-based offset of the item to retrieve or replace.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">If the index is out of range.</exception>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Handles events from the centralized event table.</summary>
      <returns>true if the listener handled the event; otherwise, false.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Remove(System.Object)">
      <summary>Removes the given item reference from the collection. All remaining items move up by one. </summary>
      <param name="removeItem">The item to remove.</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)">
      <summary>Removes an item from the collection at the given index. All remaining items move up by one. </summary>
      <param name="removeIndex">The index at which to remove an item.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">If index is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator.</summary>
      <returns>An IEnumerator object.</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the collection has changed.</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The view created.</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the listener handled the event; otherwise, false.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
      <param name="sender">Object that originated the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="T:System.Windows.Data.DataChangedEventManager">
      <summary>Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>Adds the specified listener to the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event of the specified source.</summary>
      <param name="source">The object with the event.</param>
      <param name="listener">The object to add as a listener.</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>Removes the specified listener from the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event of the specified source.</summary>
      <param name="source">The object with the event.</param>
      <param name="listener">The listener to remove.</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)">
      <summary>Begins listening for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event on the specified source.</summary>
      <param name="source">The object with the event.</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)">
      <summary>Stops listening for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> event on the specified source.</summary>
      <param name="source">The source object to stop listening for.</param>
    </member>
    <member name="T:System.Windows.Data.DataTransferEventArgs">
      <summary>Encapsulates arguments for data transfer events.</summary>
    </member>
    <member name="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes the specified handler in a type-specific way on the specified object.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The object to invoke the handler on.</param>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.Property">
      <summary>Gets the specific binding target property that is involved in the data transfer event.</summary>
      <returns>The property that changed.</returns>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.TargetObject">
      <summary>Gets the binding target object of the binding that raised the event.</summary>
      <returns>The target object of the binding that raised the event.</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventArgs">
      <summary>Provides information and event data that is associated with the <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> event.</summary>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Accepted">
      <summary>Gets or sets a value that indicates whether the item passes the filter.</summary>
      <returns>true if the item passes the filter; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Item">
      <summary>Gets the object that the filter should test.</summary>
      <returns>The object that the filter should test. The default is null.</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
      <summary>Represents a method that is used to provide custom logic to select the <see cref="T:System.ComponentModel.GroupDescription" /> based on the parent group and its level.</summary>
      <returns>The <see cref="T:System.ComponentModel.GroupDescription" /> chosen based on the parent group and its level. </returns>
      <param name="group">The parent group.</param>
      <param name="level">The level of <paramref name="group" />.</param>
    </member>
    <member name="T:System.Windows.Data.IMultiValueConverter">
      <summary>Provides a way to apply custom logic in a <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.</summary>
      <returns>A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.</returns>
      <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide for conversion.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a binding target value to the source binding values.</summary>
      <returns>An array of values that have been converted from the target value back to the source values.</returns>
      <param name="value">The value that the binding target produces.</param>
      <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="T:System.Windows.Data.IValueConverter">
      <summary>Provides a way to apply custom logic to a binding.</summary>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <returns>A converted value. If the method returns null, the valid null value is used.</returns>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <returns>A converted value. If the method returns null, the valid null value is used.</returns>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="T:System.Windows.Data.ListCollectionView">
      <summary>Represents the collection view for collections that implement <see cref="T:System.Collections.IList" />. </summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView" /> class, using a supplied collection that implements <see cref="T:System.Collections.IList" />.</summary>
      <param name="list">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveComparer">
      <summary>Gets or sets the current active comparer that is used in sorting.</summary>
      <returns>An <see cref="T:System.Collections.IComparer" /> object that is the active comparer.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveFilter">
      <summary>Gets or sets the current active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</summary>
      <returns>The active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNew">
      <summary>Starts an add transaction and returns the pending new item.</summary>
      <returns>The pending new item.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)">
      <summary>Adds the specified object to the collection.</summary>
      <returns>The object that was added to the collection.</returns>
      <param name="newItem">The object to add to the collection.</param>
      <exception cref="T:System.InvalidOperationException">An object cannot be added to the <see cref="T:System.Windows.Data.ListCollectionView" /> by using the <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> method.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNew">
      <summary>Gets a value that indicates whether a new item can be added to the collection.</summary>
      <returns>true if a new item can be added to the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNewItem">
      <summary>Gets a value that indicates whether a specified object can be added to the collection.</summary>
      <returns>true if a specified object can be added to the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanCancelEdit">
      <summary>Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</summary>
      <returns>true if the collection view can discard pending changes and restore the original values of an edited object; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelEdit">
      <summary>Ends the edit transaction, and if possible, restores the original value to the item.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelNew">
      <summary>Ends the add transaction and discards the pending new item.</summary>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanFilter">
      <summary>Gets a value that indicates whether the view supports callback-based filtering.</summary>
      <returns>For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns true.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanGroup">
      <summary>Gets a value that indicates whether the collection view supports grouping.</summary>
      <returns>true if the collection view supports grouping; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanRemove">
      <summary>Gets a value that indicates whether an item can be removed from the collection.</summary>
      <returns>true if an item can be removed from the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanSort">
      <summary>Gets a value that indicates whether the collection view supports sorting.</summary>
      <returns>For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns true.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitEdit">
      <summary>Ends the edit transaction and saves the pending changes.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitNew">
      <summary>Ends the add transaction and saves the pending new item.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)">
      <summary>Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</summary>
      <returns>Less than zero if <paramref name="o1" /> is less than <paramref name="o2" />, zero if <paramref name="o1" /> and <paramref name="o2" /> are equal, or greater than zero if <paramref name="o1" /> is greater than <paramref name="o2" />.</returns>
      <param name="o1">The first object to compare.</param>
      <param name="o2">The second object to compare.</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Contains(System.Object)">
      <summary>Returns a value that indicates whether a given item belongs to the collection view.</summary>
      <returns>true if the item belongs to the collection view; otherwise, false.</returns>
      <param name="item">The object to check.</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Count">
      <summary>Gets the estimated number of records.</summary>
      <returns>One of the following:ValueMeaning-1Could not determine the count of the collection. This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is trying to increase efficiency and minimize dependence on always having the whole collection available.any other integerThe count of the collection.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentAddItem">
      <summary>Gets the item that is being added during the current add transaction.</summary>
      <returns>The item that is being added if <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> is true; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentEditItem">
      <summary>Gets the item in the collection that is being edited.</summary>
      <returns>The item in the collection that is being edited if <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> is true; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CustomSort">
      <summary>Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer" /> to sort items in the view.</summary>
      <returns>The sort criteria as an implementation of <see cref="T:System.Collections.IComparer" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)">
      <summary>Begins an edit transaction of the specified item.</summary>
      <param name="item">The item to edit.</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Filter">
      <summary>Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.</summary>
      <returns>A delegate that represents the method that is used to determine whether an item is suitable for inclusion in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetEnumerator">
      <summary>Returns an object that you can use to enumerate the items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified position in the view.</summary>
      <returns>The item at the specified position in the view.</returns>
      <param name="index">The zero-based index at which the item is located.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupBySelector">
      <summary>Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level. </summary>
      <returns>A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Groups">
      <summary>Gets the top-level groups.</summary>
      <returns>A read-only collection of the top-level groups, or null if there are no groups.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)">
      <summary>Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown. </summary>
      <returns>The index of the item in the collection, or -1 if the item does not exist in the collection.</returns>
      <param name="item">The object to check for in the collection.</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)">
      <summary>Return a value that indicates whether the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item; otherwise, false.</returns>
      <param name="item">The item to locate.</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalCount">
      <summary>Gets the number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</summary>
      <returns>The number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator">
      <summary>Returns an enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />. </summary>
      <returns>An enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)">
      <summary>Returns the index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</summary>
      <returns>The index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</returns>
      <param name="item">The item to return an index for.</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)">
      <summary>Returns the item at the given index in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</summary>
      <returns>The item at the specified zero-based index in the view.</returns>
      <param name="index">The index at which the item is located.</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalList">
      <summary>Gets the complete and unfiltered underlying collection.</summary>
      <returns>The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsAddingNew">
      <summary>Gets a value that indicates whether an add transaction is in progress.</summary>
      <returns>true if an add transaction is in progress; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder">
      <summary>Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</summary>
      <returns>true if the list of items is already in the correct order for grouping; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEditingItem">
      <summary>Gets a value that indicates whether an edit transaction is in progress.</summary>
      <returns>true if an edit transaction is in progress; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEmpty">
      <summary>Returns a value that indicates whether the resulting (filtered) view is empty.</summary>
      <returns>true if the resulting view is empty; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsGrouping">
      <summary>Gets a value that indicates whether there are groups in the view.</summary>
      <returns>true if there are groups in the view; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ItemProperties">
      <summary>Gets a collection of objects that describes the properties of the items in the collection.</summary>
      <returns>A collection of objects that describes the properties of the items in the collection.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
      <param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the index is out of range. </exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition">
      <summary>Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</summary>
      <returns>One of the enumeration values that specifies the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="args" /> is null. </exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)">
      <summary>Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</summary>
      <returns>true if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, false.</returns>
      <param name="item">The item to check.</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Handles <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> events.</summary>
      <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="args" /> is null. </exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RefreshOverride">
      <summary>Recreates the view.</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Remove(System.Object)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="item">The item to remove.</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified position from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A value that is less than zero means <paramref name="o1" /> is less than <paramref name="o2;" /> a value of zero means the objects are equal; and a value that is over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</returns>
      <param name="o1">The first object to compare.</param>
      <param name="o2">The second object to compare.</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.UsesLocalArray">
      <summary>Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</summary>
      <returns>true if a private copy of the data is needed for sorting and filtering; otherwise, false. The default implementation returns true if there is an <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> or <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />, or both.</returns>
    </member>
    <member name="T:System.Windows.Data.MultiBinding">
      <summary>Describes a collection of <see cref="T:System.Windows.Data.Binding" /> objects attached to a single binding target property.</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.MultiBinding" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Bindings">
      <summary>Gets the collection of <see cref="T:System.Windows.Data.Binding" /> objects within this <see cref="T:System.Windows.Data.MultiBinding" /> instance.</summary>
      <returns>A collection of <see cref="T:System.Windows.Data.Binding" /> objects. <see cref="T:System.Windows.Data.MultiBinding" /> currently supports only objects of type <see cref="T:System.Windows.Data.Binding" /> and not <see cref="T:System.Windows.Data.MultiBinding" /> or <see cref="T:System.Windows.Data.PriorityBinding" />. Adding a <see cref="T:System.Windows.Data.Binding" /> child to a <see cref="T:System.Windows.Data.MultiBinding" /> object implicitly adds the child to the <see cref="T:System.Windows.Data.BindingBase" /> collection for the <see cref="T:System.Windows.Data.MultiBinding" /> object.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Converter">
      <summary>Gets or sets the converter to use to convert the source values to or from the target value.</summary>
      <returns>A value of type <see cref="T:System.Windows.Data.IMultiValueConverter" /> that indicates the converter to use. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterCulture">
      <summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> object that applies to any converter assigned to bindings wrapped by the <see cref="T:System.Windows.Data.MultiBinding" /> or on the <see cref="T:System.Windows.Data.MultiBinding" /> itself.</summary>
      <returns>A valid <see cref="T:System.Globalization.CultureInfo" />.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterParameter">
      <summary>Gets or sets an optional parameter to pass to a converter as additional information.</summary>
      <returns>A parameter to pass to a converter. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Mode">
      <summary>Gets or sets a value that indicates the direction of the data flow of this binding.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.BindingMode" /> values. The default value is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as <see cref="P:System.Windows.Controls.TextBox.Text" />, default to two-way bindings, whereas most other properties default to one-way bindings.A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</summary>
      <returns>true if the <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> event will be raised when the binding source value is updated; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</summary>
      <returns>true if the <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> event will be raised when the binding target value is updated; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnValidationError">
      <summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound element.</summary>
      <returns>true if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event will be raised on the bound element when there is a validation error during source updates; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.MultiBinding.Bindings" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add. </param>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object. </summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter">
      <summary>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated the <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your <see cref="T:System.Windows.Data.MultiBinding" /> object.</summary>
      <returns>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger">
      <summary>Gets or sets a value that determines the timing of binding source updates.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values. The default value is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property. However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</summary>
      <returns>true to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions">
      <summary>Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
      <returns>true to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidationRules">
      <summary>Gets the collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects for this instance of <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
      <returns>The collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects for this instance of <see cref="T:System.Windows.Data.MultiBinding" />.</returns>
    </member>
    <member name="T:System.Windows.Data.MultiBindingExpression">
      <summary>Contains instance information about a single instance of a <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.BindingExpressions">
      <summary>Gets the collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects in this instance of <see cref="T:System.Windows.Data.MultiBindingExpression" />.</summary>
      <returns>A read-only collection of the <see cref="T:System.Windows.Data.BindingExpression" /> objects. Even though the return type is a collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects the returned collection would only contain <see cref="T:System.Windows.Data.BindingExpression" /> objects because the <see cref="T:System.Windows.Data.MultiBinding" /> class currently only supports <see cref="T:System.Windows.Data.Binding" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasError">
      <summary>Returns a value that indicates whether any of the inner <see cref="T:System.Windows.Data.Binding" /> objects or the <see cref="T:System.Windows.Data.MultiBinding" /> itself has a failing validation rule.</summary>
      <returns>true if at least one of the inner <see cref="T:System.Windows.Data.Binding" /> objects or the <see cref="T:System.Windows.Data.MultiBinding" /> itself has a failing validation rule; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding">
      <summary>Gets the <see cref="T:System.Windows.Data.MultiBinding" /> object from which this <see cref="T:System.Windows.Data.MultiBindingExpression" /> is created.</summary>
      <returns>The <see cref="T:System.Windows.Data.MultiBinding" /> object from which this <see cref="T:System.Windows.Data.MultiBindingExpression" /> is created.</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateSource">
      <summary>Sends the current binding target value to the binding source properties in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateTarget">
      <summary>Forces a data transfer from the binding source properties to the binding target property.</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ValidationError">
      <summary>Gets the <see cref="T:System.Windows.Controls.ValidationError" /> object that caused this instance of <see cref="T:System.Windows.Data.MultiBindingExpression" /> to be invalid.</summary>
      <returns>The <see cref="T:System.Windows.Controls.ValidationError" /> object that caused this instance of <see cref="T:System.Windows.Data.MultiBindingExpression" /> to be invalid.</returns>
    </member>
    <member name="T:System.Windows.Data.ObjectDataProvider">
      <summary>Wraps and creates an object that you can use as a binding source.</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ObjectDataProvider" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.BeginQuery">
      <summary>Starts to create the requested object, either immediately or on a background thread, based on the value of the <see cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" /> property.</summary>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters">
      <summary>Gets the list of parameters to pass to the constructor.</summary>
      <returns>The list of parameters to pass to the constructor. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous">
      <summary>Gets or sets a value that indicates whether to perform object creation in a worker thread or in the active context.</summary>
      <returns>true to perform object creation in a worker thread; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodName">
      <summary>Gets or sets the name of the method to call.</summary>
      <returns>The name of the method to call. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodParameters">
      <summary>Gets the list of parameters to pass to the method.</summary>
      <returns>The list of parameters to pass to the method. The default is an empty list.</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectInstance">
      <summary>Gets or sets the object used as the binding source.</summary>
      <returns>The instance of the object constructed from <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> and <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" />, or the <see cref="T:System.Windows.Data.DataSourceProvider" /> of which the <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> is used as the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> is assigned both an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> and an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />; only one is allowed.</exception>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectType">
      <summary>Gets or sets the type of object to create an instance of.</summary>
      <returns>This property is null when the <see cref="T:System.Windows.Data.ObjectDataProvider" /> is uninitialized or explicitly set to null. If <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> is assigned, <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> returns the type of the object or null if the object is null. The default value is null.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> is assigned both an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> and an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />; only one is allowed.</exception>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.MethodParameters" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Data.PriorityBinding">
      <summary>Describes a collection of <see cref="T:System.Windows.Data.Binding" /> objects that is attached to a single binding target property, which receives its value from the first binding in the collection that produces a value successfully.</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PriorityBinding" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.PriorityBinding.Bindings">
      <summary>Gets the collection of <see cref="T:System.Windows.Data.Binding" /> objects that is established for this instance of <see cref="T:System.Windows.Data.PriorityBinding" />.</summary>
      <returns>A collection of <see cref="T:System.Windows.Data.Binding" /> objects. <see cref="T:System.Windows.Data.PriorityBinding" /> currently supports only objects of type <see cref="T:System.Windows.Data.Binding" /> and not <see cref="T:System.Windows.Data.MultiBinding" /> or <see cref="T:System.Windows.Data.PriorityBinding" />. Adding a <see cref="T:System.Windows.Data.Binding" /> child to a <see cref="T:System.Windows.Data.PriorityBinding" /> object implicitly adds the child to the <see cref="T:System.Windows.Data.BindingBase" /> collection for the <see cref="T:System.Windows.Data.MultiBinding" /> object. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.ShouldSerializeBindings">
      <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> property on instances of this class.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value">An object to add as a child.</param>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text">A string to add to the object.</param>
    </member>
    <member name="T:System.Windows.Data.PriorityBindingExpression">
      <summary>Contains instance information about a single instance of a <see cref="T:System.Windows.Data.PriorityBinding" />.</summary>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression">
      <summary>Gets the active <see cref="T:System.Windows.Data.BindingExpression" /> object.</summary>
      <returns>The active <see cref="T:System.Windows.Data.BindingExpression" /> object; or null, if no <see cref="T:System.Windows.Data.BindingExpression" /> object is active. Although the return type is <see cref="T:System.Windows.Data.BindingExpressionBase" />, the returned object is only a <see cref="T:System.Windows.Data.BindingExpression" /> object because the <see cref="T:System.Windows.Data.PriorityBinding" /> class currently supports only <see cref="T:System.Windows.Data.Binding" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions">
      <summary>Gets the collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects inside this instance of <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</summary>
      <returns>A read-only collection of the <see cref="T:System.Windows.Data.BindingExpression" /> objects. Although the return type is a collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects, the returned collection only contains <see cref="T:System.Windows.Data.BindingExpression" /> objects because the <see cref="T:System.Windows.Data.PriorityBinding" /> class currently supports only <see cref="T:System.Windows.Data.Binding" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding">
      <summary>Gets the <see cref="T:System.Windows.Data.PriorityBinding" /> object from which this <see cref="T:System.Windows.Data.PriorityBindingExpression" /> is created.</summary>
      <returns>The <see cref="T:System.Windows.Data.PriorityBinding" /> object from which this <see cref="T:System.Windows.Data.PriorityBindingExpression" /> is created.</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateSource">
      <summary>Updates the source on the active binding.</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateTarget">
      <summary>Updates the target on the active binding. </summary>
    </member>
    <member name="T:System.Windows.Data.PropertyGroupDescription">
      <summary>Describes the grouping of items using a property name as the criteria.</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified property name.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to.</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified property name and converter.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to. If this is null, the item itself is passed to the value converter.</param>
      <param name="converter">An <see cref="T:System.Windows.Data.IValueConverter" /> object to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to. The converter may return a collection, which indicates the items can appear in more than one group.</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription" /> class with the specified parameters.</summary>
      <param name="propertyName">The name of the property that specifies which group an item belongs to. If this is null, the item itself is passed to the value converter.</param>
      <param name="converter">An <see cref="T:System.Windows.Data.IValueConverter" /> object to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to. The converter may return a collection, which indicates the items can appear in more than one group.</param>
      <param name="stringComparison">A <see cref="T:System.StringComparison" /> value that specifies the comparison between the value of an item and the name of a group.</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
      <summary>Gets or sets a converter to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to.</summary>
      <returns>The default value is null.</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Returns the group name(s) for the given item. </summary>
      <returns>The group name(s) for the given item.</returns>
      <param name="item">The item to return group names for.</param>
      <param name="level">The level of grouping.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to supply to the converter.</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Returns a value that indicates whether the group name and the item name match so that the item belongs to the group.</summary>
      <returns>true if the names match and the item belongs to the group; otherwise, false.</returns>
      <param name="groupName">The name of the group to check.</param>
      <param name="itemName">The name of the item to check.</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
      <summary>Gets or sets the name of the property that is used to determine which group(s) an item belongs to.</summary>
      <returns>The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
      <summary>Gets or sets a <see cref="T:System.StringComparison" /> value that specifies the comparison between the value of an item (as determined by <see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName" /> and <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter" />) and the name of a group.</summary>
      <returns>The default value is <see cref="T:System.StringComparison" />.Ordinal.</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSource">
      <summary>Implements a markup extension that describes the location of the binding source relative to the position of the binding target.</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class with an initial mode.</summary>
      <param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values.</param>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class with an initial mode and additional tree-walking qualifiers for finding the desired relative source.</summary>
      <param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values. For this signature to be relevant, this should be <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />.</param>
      <param name="ancestorType">The <see cref="T:System.Type" /> of ancestor to look for.</param>
      <param name="ancestorLevel">The ordinal position of the desired ancestor among all ancestors of the given type. </param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorLevel">
      <summary>Gets or sets the level of ancestor to look for, in <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> mode. Use 1 to indicate the one nearest to the binding target element.</summary>
      <returns>The ancestor level. Use 1 to indicate the one nearest to the binding target element.</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorType">
      <summary>Gets or sets the type of ancestor to look for.</summary>
      <returns>The type of ancestor. The default value is null.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.RelativeSource" /> is not in the <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> mode.</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Mode">
      <summary>Gets or sets a <see cref="T:System.Windows.Data.RelativeSourceMode" /> value that describes the location of the binding source relative to the position of the binding target.</summary>
      <returns>One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values. The default value is null.</returns>
      <exception cref="T:System.InvalidOperationException">This property is immutable after initialization. Instead of changing the <see cref="P:System.Windows.Data.RelativeSource.Mode" /> on this instance, create a new <see cref="T:System.Windows.Data.RelativeSource" /> or use a different static instance.</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.PreviousData">
      <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" /> mode.</summary>
      <returns>A static <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that should be set as the value on the target object's property for this markup extension. For <see cref="T:System.Windows.Data.RelativeSource" />, this is another <see cref="T:System.Windows.Data.RelativeSource" />, using the appropriate source for the specified mode. </summary>
      <returns>Another <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
      <param name="serviceProvider">An object that can provide services for the markup extension. In this implementation, this parameter can be null.</param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Self">
      <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.Self" /> mode.</summary>
      <returns>A static <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.TemplatedParent">
      <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" /> mode.</summary>
      <returns>A static <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSourceMode">
      <summary>Describes the location of the binding source relative to the position of the binding target.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.PreviousData">
      <summary>Allows you to bind the previous data item (not that control that contains the data item) in the list of data items being displayed.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
      <summary>Refers to the element to which the template (in which the data-bound element exists) is applied. This is similar to setting a <see cref="T:System.Windows.TemplateBindingExtension" /> and is only applicable if the <see cref="T:System.Windows.Data.Binding" /> is within a template.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.Self">
      <summary>Refers to the element on which you are setting the binding and allows you to bind one property of that element to another property on the same element.</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.FindAncestor">
      <summary>Refers to the ancestor in the parent chain of the data-bound element. You can use this to bind to an ancestor of a specific type or its subclasses. This is the mode you use if you want to specify <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> and/or <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />.</summary>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceExceptionFilterCallback">
      <summary>Represents the method that handles exceptions that are thrown during the update of the binding source value. This must be used with the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
      <returns>An object that is typically one of the following:ValueDescriptionnullTo ignore any exceptions. The default behavior (if there is no <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) is to create a <see cref="T:System.Windows.Controls.ValidationError" /> with the exception and adds it to the <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.Any objectTo create a <see cref="T:System.Windows.Controls.ValidationError" /> object with the <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> set to that object.The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.A <see cref="T:System.Windows.Controls.ValidationError" /> objectTo set the <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object as the <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />. The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.</returns>
      <param name="bindExpression">The object with the exception.</param>
      <param name="exception">The exception encountered.</param>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceTrigger">
      <summary>Describes the timing of binding source updates.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
      <summary>The default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the binding target property. The default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged">
      <summary>Updates the binding source immediately whenever the binding target property changes.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.LostFocus">
      <summary>Updates the binding source whenever the binding target element loses focus.</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
      <summary>Updates the binding source only when you call the <see cref="M:System.Windows.Data.BindingExpression.UpdateSource" /> method.</summary>
    </member>
    <member name="T:System.Windows.Data.ValueConversionAttribute">
      <summary>Represents an attribute that allows the author of a value converter to specify the data types involved in the implementation of the converter.</summary>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueConversionAttribute" /> class with the specified source type and target type.</summary>
      <param name="sourceType">The type this converter converts.</param>
      <param name="targetType">The type this converter converts to.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="sourceType" /> parameter cannot be null.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="targetType" /> parameter cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.GetHashCode">
      <summary>Returns the hash code for this instance of <see cref="T:System.Windows.Data.ValueConversionAttribute" />.</summary>
      <returns>The hash code for this instance of <see cref="T:System.Windows.Data.ValueConversionAttribute" />.</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.ParameterType">
      <summary>Gets and sets the type of the optional value converter parameter object.</summary>
      <returns>The type of the optional value converter parameter object.</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.SourceType">
      <summary>Gets the type this converter converts.</summary>
      <returns>The type this converter converts.</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TargetType">
      <summary>Gets the type this converter converts to.</summary>
      <returns>The type this converter converts to.</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TypeId">
      <summary>Gets the unique identifier of this <see cref="T:System.Windows.Data.ValueConversionAttribute" /> instance.</summary>
      <returns>The unique identifier of this <see cref="T:System.Windows.Data.ValueConversionAttribute" /> instance.</returns>
    </member>
    <member name="T:System.Windows.Data.ValueUnavailableException">
      <summary>The exception that is thrown by the <see cref="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" /> method when the value is not available.</summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueUnavailableException" /> class. </summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueUnavailableException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueUnavailableException" /> class with the specified message. </summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueUnavailableException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Windows.Data.XmlDataProvider">
      <summary>Enables declarative access to XML data for data binding.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlDataProvider" /> class.</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.BaseUri">
      <summary> This type or member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The base URI.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.BeginQuery">
      <summary>Prepares the loading of either the inline XML or the external XML file to produce a collection of XML nodes.</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Document">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlDocument" /> to use as the binding source.</summary>
      <returns>The <see cref="T:System.Xml.XmlDocument" /> to use as the binding source. The default value is null.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.EndInit">
      <summary>Indicates that the initialization of this element has completed; this causes a <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> if no other <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> is outstanding.</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.IsAsynchronous">
      <summary>Gets or sets a value that indicates whether node collection creation will be performed in a worker thread or in the active context.</summary>
      <returns>true to perform node collection creation in a worker thread; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeSource">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.Source" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.XmlSerializer" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXPath">
      <summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Source">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the XML data file to use as the binding source.</summary>
      <returns>The <see cref="T:System.Uri" /> of the XML data file to use as the binding source. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The base URI.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to run <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> queries.</summary>
      <returns>The <see cref="T:System.Xml.XmlNamespaceManager" /> used to run <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> queries. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlSerializer">
      <summary>Gets the inline XML content.</summary>
      <returns>The inline XML content.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XPath">
      <summary>Gets or sets the XPath query used to generate the data collection.</summary>
      <returns>The XPath query used to generate the data collection. The default is an empty string.</returns>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMapping">
      <summary>Declares a mapping between a uniform resource identifier (URI) and a prefix.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> class with the specified prefix and uniform resource identifier (URI).</summary>
      <param name="prefix">The prefix to use in Extensible Application Markup Language (XAML).</param>
      <param name="uri">The <see cref="T:System.Uri" /> of the namespace to create the mapping for.</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> is equivalent to the specified instance.</summary>
      <returns>true if the two instances are the same; otherwise, false.</returns>
      <param name="obj">The instance to compare for equality.</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Data.XmlNamespaceMapping" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Data.XmlNamespaceMapping" />.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>Performs equality comparison by value.</summary>
      <returns>true if the two <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects are the same; otherwise, false.</returns>
      <param name="mappingA">The first <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to compare.</param>
      <param name="mappingB">The second <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to compare.</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>Performs inequality comparison by value.</summary>
      <returns>true if the two <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects are not the same; otherwise, false.</returns>
      <param name="mappingA">The first <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to compare.</param>
      <param name="mappingB">The second <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to compare.</param>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Prefix">
      <summary>Gets or sets the prefix to use in Extensible Application Markup Language (XAML).</summary>
      <returns>The prefix to associate with the URI. The default is an empty string("").</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Uri">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the namespace for which to create a mapping.</summary>
      <returns>The URI of the namespace. The default is null.</returns>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMappingCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)">
      <summary>Adds a <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to this collection.</summary>
      <param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to add. This cannot be null.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="mapping" /> is null.</exception>
      <exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object is null. </exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)">
      <summary>Adds a <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to this collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to add. This cannot be null.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="mapping" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> object.</summary>
      <param name="text">The text string to add as a child.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="text" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects in this collection.</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)">
      <summary>Returns a value that indicates whether this collection contains the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object.</summary>
      <returns>true if this collection contains the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object; otherwise, false.</returns>
      <param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object of interest. This cannot be null.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="mapping" /> is null.</exception>
      <exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object is null. </exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)">
      <summary>Copies the items of the collection to the specified array, starting at the specified index.</summary>
      <param name="array">The array that is the destination of the items copied from the collection.</param>
      <param name="arrayIndex">The zero-based index in array at which copying starts.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentException">If the number of items exceed the length of the array. </exception>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in this collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in this collection.</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly">
      <summary>Gets a value that indicates whether this collection is read-only.</summary>
      <returns>This always returns false.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator">
      <summary>Returns a generic <see cref="T:System.Collections.Generic.IEnumerator`1" /> object.</summary>
      <returns>A generic <see cref="T:System.Collections.Generic.IEnumerator`1" /> object.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)">
      <summary>Removes the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object from this collection.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object has been successfully removed; otherwise, false.</returns>
      <param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object to remove. This cannot be null.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="mapping" /> is null.</exception>
      <exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> object is null. </exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</summary>
      <param name="value">The child <see cref="T:System.Object" /> to add.</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</summary>
      <param name="text">The text to add to the <see cref="T:System.Object" />.</param>
    </member>
    <member name="T:System.Windows.Documents.Adorner">
      <summary>Abstract class that represents a <see cref="T:System.Windows.FrameworkElement" /> that decorates a <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.Adorner.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Adorner" /> class.</summary>
      <param name="adornedElement">The element to bind the adorner to.</param>
      <exception cref="T:System.ArgumentNullException">adornedElement is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.Adorner.AdornedElement">
      <summary>Gets the <see cref="T:System.Windows.UIElement" /> that this adorner is bound to.</summary>
      <returns>The element that this adorner is bound to. The default value is null.</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
      <summary>Returns a <see cref="T:System.Windows.Media.Transform" /> for the adorner, based on the transform that is currently applied to the adorned element.</summary>
      <returns>A transform to apply to the adorner.</returns>
      <param name="transform">The transform that is currently applied to the adorned element.</param>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetLayoutClip(System.Windows.Size)">
      <summary>For a description of this member, see <see cref="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />.</summary>
      <returns>The potential clipping geometry. See Remarks.</returns>
      <param name="layoutSlotSize">The available size provided by the element.</param>
    </member>
    <member name="P:System.Windows.Documents.Adorner.IsClipEnabled">
      <summary>Gets or sets a value that indicates whether clipping of the adorner is enabled.</summary>
      <returns>A Boolean value indicating whether clipping of the adorner is enabled.If this property is false, the adorner is not clipped.If this property is true, the adorner is clipped using the same clipping geometry as the adorned element.The default value is false.</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.MeasureOverride(System.Windows.Size)">
      <summary>Implements any custom measuring behavior for the adorner.</summary>
      <returns>A <see cref="T:System.Windows.Size" /> object representing the amount of layout space needed by the adorner.</returns>
      <param name="constraint">A size to constrain the adorner to.</param>
    </member>
    <member name="T:System.Windows.Documents.AdornerDecorator">
      <summary>Provides an adorner layer for elements beneath it in the visual tree.</summary>
      <exception cref="T:System.ArgumentException">Raised an attempt is made to add more than a single childe to the <see cref="T:System.Windows.Documents.AdornerDecorator" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.AdornerDecorator" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.AdornerLayer">
      <summary>Gets the <see cref="T:System.Windows.Documents.AdornerLayer" /> associated with this <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <returns>The <see cref="T:System.Windows.Documents.AdornerLayer" /> associated with this adorner decorator. </returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <returns>The actual size needed by the element.  This return value is typically the same as the value passed to finalSize.</returns>
      <param name="finalSize">The size reserved for this element by its parent.</param>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.Child">
      <summary>Gets or sets the single child of an <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <returns>The single child of an <see cref="T:System.Windows.Documents.AdornerDecorator" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.GetVisualChild(System.Int32)">
      <summary>Gets a <see cref="T:System.Windows.Media.Visual" /> child at the specified <paramref name="index" /> position.</summary>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Controls.Viewbox" /> element.</returns>
      <param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual" /> child.</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size required for child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <returns>A <see cref="T:System.Windows.Size" /> object representing the amount of layout space needed by the <see cref="T:System.Windows.Documents.AdornerDecorator" />.</returns>
      <param name="constraint">A size to constrain the <see cref="T:System.Windows.Documents.AdornerDecorator" /> to.</param>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.VisualChildrenCount">
      <summary>Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Documents.AdornerDecorator" />.</summary>
      <returns>Either returns 2 (one for the <see cref="T:System.Windows.Documents.AdornerLayer" /> and one for the <see cref="P:System.Windows.Documents.AdornerDecorator.Child" />) or the property returns 0 if the <see cref="T:System.Windows.Documents.AdornerDecorator" /> has no child.</returns>
    </member>
    <member name="T:System.Windows.Documents.AdornerLayer">
      <summary>Represents a surface for rendering adorners.</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Add(System.Windows.Documents.Adorner)">
      <summary>Adds an adorner to the adorner layer.</summary>
      <param name="adorner">The adorner to add.</param>
      <exception cref="T:System.ArgumentNullException">Raised when adorner is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)">
      <summary>Gets an <see cref="T:System.Windows.Media.AdornerHitTestResult" /> for a specified point.</summary>
      <returns>An <see cref="T:System.Windows.Media.AdornerHitTestResult" /> for the specified point.</returns>
      <param name="point">The point to hit test.</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerLayer" />.</summary>
      <returns>The actual size needed by the element.  This return value is typically the same as the value passed to finalSize.</returns>
      <param name="finalSize">The size reserved for this element by its parent.</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdornerLayer(System.Windows.Media.Visual)">
      <summary>Returns the first adorner layer in the visual tree above a specified <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>An adorner layer for the specified visual, or null if no adorner layer can be found.</returns>
      <param name="visual">The visual element for which to find an adorner layer.</param>
      <exception cref="T:System.ArgumentNullException">Raised when visual is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdorners(System.Windows.UIElement)">
      <summary>Returns an array of adorners that are bound to the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <returns>An array of adorners that decorate the specified <see cref="T:System.Windows.UIElement" />, or null if there are no adorners bound to the specified element.</returns>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> to retrieve an array of adorners for.</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetVisualChild(System.Int32)">
      <summary>Gets a <see cref="T:System.Windows.Media.Visual" /> child at the specified <paramref name="index" /> position.</summary>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Documents.AdornerLayer" /> element.</returns>
      <param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual" /> child.</param>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical child elements of this <see cref="T:System.Windows.Documents.AdornerLayer" /> element. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size required for child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerLayer" />.</summary>
      <returns>This method always returns a <see cref="T:System.Windows.Size" /> of (0,0).</returns>
      <param name="constraint">Unused.</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Remove(System.Windows.Documents.Adorner)">
      <summary>Removes the specified <see cref="T:System.Windows.Documents.Adorner" /> from the adorner layer.</summary>
      <param name="adorner">The <see cref="T:System.Windows.Documents.Adorner" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">Raised when adorner is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update">
      <summary>Updates the layout and redraws all of the adorners in the adorner layer.</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update(System.Windows.UIElement)">
      <summary>Updates the layout and redraws all of the adorners in the adorner layer that are bound to the specified <see cref="T:System.Windows.UIElement" />.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> associated with the adorners to update.</param>
      <exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
      <exception cref="T:System.InvalidOperationException">Raised when the specified element cannot be found.</exception>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.VisualChildrenCount">
      <summary>Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Documents.AdornerLayer" />.</summary>
      <returns>The number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Documents.AdornerLayer" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.AnchoredBlock">
      <summary>An abstract class that provides a base for <see cref="T:System.Windows.Documents.Inline" /> elements that are used to anchor <see cref="T:System.Windows.Documents.Block" /> elements to flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>Initializes base class values when called by a derived class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new descendant of <see cref="T:System.Windows.Documents.AnchoredBlock" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.AnchoredBlock" /> descendant.</summary>
      <param name="block">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new element.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Block" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Blocks">
      <summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the element. This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderBrush">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border. </summary>
      <returns>The brush used to apply to the element's border.The default value is a null brush.</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderThickness">
      <summary>Gets or sets the border thickness for the element. </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of border to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineHeight">
      <summary>Gets or sets the height of each line of content. </summary>
      <returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> must be equal to or greater than 0.0034 and equal to or less then 160000.A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") causes the line height is determined automatically from the current font characteristics.  The default value is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the text element. </summary>
      <returns>The mechanism by which a line box is determined for each line of text within the text element. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" />  dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Margin">
      <summary>Gets or sets the margin thickness for the element. </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of margin to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.MarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Padding">
      <summary>Gets or sets the padding thickness for the element. </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of padding to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> property should be serialized during serialization of an object deriving from <see cref="T:System.Windows.Documents.AnchoredBlock" />.</summary>
      <returns>true if the <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> property should be serialized; otherwise, false.</returns>
      <param name="manager">A serialization service manager object for this object.</param>
      <exception cref="T:System.NullReferenceException">Raised when <paramref name="manager" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content. </summary>
      <returns>A member of the <see cref="T:System.Windows.TextAlignment" /> enumerations specifying the desired alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.Block">
      <summary>An abstract class that provides a base for all block-level flow content elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.#ctor">
      <summary>Initializes <see cref="T:System.Windows.Documents.Block" /> base class values when called by a derived class.</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderBrush">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.  </summary>
      <returns>The brush used to apply to the element's border. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderThickness">
      <summary>Gets or sets the border thickness for the element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of border to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakColumnBefore">
      <summary>Gets or sets a value that indicates whether to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.  </summary>
      <returns>true to automatically insert a column-break before this element; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakColumnBeforeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakPageBefore">
      <summary>Gets or sets a value that indicates whether to automatically insert a page-break before this element.  </summary>
      <returns>true to automatically insert a page-break before this element; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakPageBeforeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.ClearFloaters">
      <summary>Gets or sets the direction in which any <see cref="T:System.Windows.Documents.Floater" /> elements contained by a <see cref="T:System.Windows.Documents.Block" /> element should be repositioned.  </summary>
      <returns>One of the <see cref="T:System.Windows.WrapDirection" /> values that specifies the direction in which to separate any <see cref="T:System.Windows.Documents.Floater" /> elements from other content contained in the <see cref="T:System.Windows.Documents.Block" /> element. The default is <see cref="F:System.Windows.WrapDirection.None" />, which indicates that floaters should be rendered in place.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.ClearFloatersProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.FlowDirection">
      <summary>Gets or sets the relative direction for flow of content within a <see cref="T:System.Windows.Documents.Block" /> element.  </summary>
      <returns>One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction. The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.FlowDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.FlowDirection" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.IsHyphenationEnabled">
      <summary>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.  </summary>
      <returns>true if automatic breaking and hyphenation of words is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.LineHeight">
      <summary>Gets or sets the height of each line of content.  </summary>
      <returns>The height of each line in device independent pixels, in the range of 0.0034 to 160000, or <see cref="F:System.Double.NaN" /> to determine the height automatically. The default is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Documents.Block.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.LineHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.LineHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.LineStackingStrategy">
      <summary>Gets or sets how a line box is determined for each line of text within the block-level flow content element.  </summary>
      <returns>One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies how a line box is determined for each line of text within the block-level flow content element. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.Margin">
      <summary>Gets or sets the margin thickness for the element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of margin to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.MarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.Margin" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.Margin" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.NextBlock">
      <summary>Gets the sibling <see cref="T:System.Windows.Documents.Block" /> element that directly follows the current <see cref="T:System.Windows.Documents.Block" /> element.</summary>
      <returns>The sibling <see cref="T:System.Windows.Documents.Block" /> element that directly follows the current <see cref="T:System.Windows.Documents.Block" /> element, or null if no such element exists.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.Padding">
      <summary>Gets or sets the padding thickness for the element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.Padding" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.PreviousBlock">
      <summary>Gets the sibling <see cref="T:System.Windows.Documents.Block" /> element that directly precedes the current <see cref="T:System.Windows.Documents.Block" /> element.</summary>
      <returns>The sibling <see cref="T:System.Windows.Documents.Block" /> element that directly precedes the current <see cref="T:System.Windows.Documents.Block" /> element, or null if no such element exists.</returns>
    </member>
    <member name="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is negative.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property on a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.SiblingBlocks">
      <summary>Gets a collection of <see cref="T:System.Windows.Documents.Block" /> elements that are siblings to the current <see cref="T:System.Windows.Documents.Block" /> element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> that contains the child <see cref="T:System.Windows.Documents.Block" /> elements that are directly hosted by the parent of the current <see cref="T:System.Windows.Documents.Block" /> element, or null if the current <see cref="T:System.Windows.Documents.Block" /> element has no parent.</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.TextAlignment">
      <summary>Gets or sets the horizontal alignment of text content.  </summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Documents.Block" /> elements. <see cref="T:System.Windows.Documents.BlockCollection" /> defines the allowable child content of the <see cref="T:System.Windows.Documents.FlowDocument" />, <see cref="T:System.Windows.Documents.Section" />, <see cref="T:System.Windows.Documents.ListItem" />, <see cref="T:System.Windows.Documents.TableCell" />, <see cref="T:System.Windows.Documents.Floater" />, and <see cref="T:System.Windows.Documents.Figure" /> elements.</summary>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.FirstBlock">
      <summary>Gets the first <see cref="T:System.Windows.Documents.Block" /> element within this instance of <see cref="T:System.Windows.Documents.BlockCollection" />.</summary>
      <returns>The first <see cref="T:System.Windows.Documents.Block" /> element in the <see cref="T:System.Windows.Documents.BlockCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.LastBlock">
      <summary>Gets the last <see cref="T:System.Windows.Documents.Block" /> element within this instance of <see cref="T:System.Windows.Documents.BlockCollection" />.</summary>
      <returns>The last <see cref="T:System.Windows.Documents.Block" /> element in the <see cref="T:System.Windows.Documents.BlockCollection" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockUIContainer">
      <summary>A block-level flow content element which enables <see cref="T:System.Windows.UIElement" /> elements (i.e. a <see cref="T:System.Windows.Controls.Button" />) to be embedded (hosted) in flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.BlockUIContainer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.BlockUIContainer" /> class, taking a specified <see cref="T:System.Windows.UIElement" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
      <param name="uiElement">An <see cref="T:System.Windows.UIElement" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.BlockUIContainer" />.</param>
    </member>
    <member name="P:System.Windows.Documents.BlockUIContainer.Child">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.BlockUIContainer" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Bold">
      <summary>An inline-level flow content element which causes content to render with a bold font weight.</summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Bold" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Bold" />.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Bold" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Bold" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Bold" />.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Bold" /> element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold" /> class, taking two <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold" />.</summary>
      <param name="start">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold" />.</param>
      <param name="end">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold" />.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="start" /> or <paramref name="end" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Bold" /> element, for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="T:System.Windows.Documents.DocumentReference">
      <summary>Provides access to reference a <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentReference" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.GetDocument(System.Boolean)">
      <summary>Synchronously loads and parses the document specified by the <see cref="P:System.Windows.Documents.DocumentReference.Source" /> property location.</summary>
      <returns>The document that was loaded.</returns>
      <param name="forceReload">true to force a new load of the <see cref="P:System.Windows.Documents.DocumentReference.Source" /> document, even if it was previously loaded.</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.SetDocument(System.Windows.Documents.FixedDocument)">
      <summary>Attaches a <see cref="T:System.Windows.Documents.FixedDocument" /> to the <see cref="T:System.Windows.Documents.DocumentReference" />.</summary>
      <param name="doc">The document that is attached.</param>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.Source">
      <summary>Gets or sets the uniform resource identifier (URI) for this document reference. </summary>
      <returns>A <see cref="T:System.Uri" /> representing the document reference.</returns>
    </member>
    <member name="F:System.Windows.Documents.DocumentReference.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.DocumentReference.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.DocumentReference.Source" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.System#Windows#Markup#IUriContext#BaseUri">
      <summary>For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentReferenceCollection">
      <summary>Defines an ordered list of <see cref="T:System.Windows.Documents.DocumentReference" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.Add(System.Windows.Documents.DocumentReference)">
      <summary>Adds an element to the end of the collection.</summary>
      <param name="item">The element to add to the end of the collection.</param>
    </member>
    <member name="E:System.Windows.Documents.DocumentReferenceCollection.CollectionChanged">
      <summary>Occurs when an element is added or removed.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.CopyTo(System.Windows.Documents.DocumentReference[],System.Int32)">
      <summary>Copies the whole collection to an array that starts at a given array index.</summary>
      <param name="array">The destination array to which the elements from the collection should be copied.</param>
      <param name="arrayIndex">The zero-based starting index within the array where the collection elements are to be copied.</param>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Count">
      <summary>Gets the number of elements that are in the collection.</summary>
      <returns>The number of items that the collection contains.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator">
      <summary>Returns an enumerator for iterating through the collection.</summary>
      <returns>An enumerator that you can use to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Item(System.Int32)">
      <summary>Gets the element that is at the specified index.</summary>
      <returns>The collection element that is at the specified <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the element in the collection to get.</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator" /> method instead. </summary>
    </member>
    <member name="T:System.Windows.Documents.EditingCommands">
      <summary>Provides a standard set of editing related commands.</summary>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignCenter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+E.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignJustify">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+J.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignLeft">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+L.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignRight">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+R.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Backspace">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Backspace.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.CorrectSpellingError">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</summary>
      <returns>The requested command.  This command has no default key gesture.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseFontSize">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+OemOpenBrackets.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseIndentation">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+T.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Delete">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</summary>
      <returns>The requested command.  The default key gesture for this command is Delete.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeleteNextWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Delete.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeletePreviousWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Backspace.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterLineBreak">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+Enter.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Enter.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</summary>
      <returns>The requested command.  This command has no default key gesture.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseFontSize">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+OemCloseBrackets.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseIndentation">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+T.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByLine">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</summary>
      <returns>The requested command.  The default key gesture for this command is Down.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByPage">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</summary>
      <returns>The requested command.  The default key gesture for this command is PageDown.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Down.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</summary>
      <returns>The requested command.  The default key gesture for this command is Left.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Left.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</summary>
      <returns>The requested command.  The default key gesture for this command is Right.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Right.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+End.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Home.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineEnd">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</summary>
      <returns>The requested command.  The default key gesture for this command is End.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineStart">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</summary>
      <returns>The requested command.  The default key gesture for this command is Home.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByLine">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</summary>
      <returns>The requested command.  The default key gesture for this command is Up.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByPage">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</summary>
      <returns>The requested command.  The default key gesture for this command is PageUp.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Up.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByLine">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+Down.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByPage">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+PageDown.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Down.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+Left.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Left.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+Right.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByWord">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Right.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+End.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Home.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineEnd">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+End.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineStart">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+Home.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByLine">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+Up.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByPage">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+PageUp.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Up.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabBackward">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</summary>
      <returns>The requested command.  The default key gesture for this command is Shift+Tab.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabForward">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</summary>
      <returns>The requested command.  The default key gesture for this command is Tab.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBold">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+B.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBullets">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+L.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleInsert">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</summary>
      <returns>The requested command.  The default key gesture for this command is Insert.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleItalic">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+I.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleNumbering">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+N.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSubscript">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+OemPlus.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSuperscript">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+Shift+OemPlus.</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleUnderline">
      <summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</summary>
      <returns>The requested command.  The default key gesture for this command is Ctrl+U.</returns>
    </member>
    <member name="T:System.Windows.Documents.Figure">
      <summary>An inline-level flow content element used to host a figure.  A figure is a portion of flow content with placement properties that can be customized independently from the primary content flow within a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Figure" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Figure" /> class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Figure" />.</summary>
      <param name="childBlock">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Figure" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Figure" /> class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Figure" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Figure" /> element.</summary>
      <param name="childBlock">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Figure" />.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Block" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Figure" /> element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="P:System.Windows.Documents.Figure.CanDelayPlacement">
      <summary>Gets or sets a value that indicates whether this figure can delay its placement in the flow of content.  </summary>
      <returns>true if this figure can delay placement; otherwise, false.The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.CanDelayPlacementProperty">
      <summary> Identifies the <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.Height">
      <summary>Gets or sets a value that indicates the height of a <see cref="T:System.Windows.Documents.Figure" /> element.  </summary>
      <returns>A <see cref="T:System.Windows.FigureLength" /> structure specifying the height characteristics for the <see cref="T:System.Windows.Documents.Figure" />.The default value is <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.Value" /> = 1.0 and <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.Height" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.Height" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalAnchor">
      <summary>Gets or sets a value that indicates the position that content is anchored to in the horizontal direction.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FigureHorizontalAnchor" /> enumeration specifying a horizontal anchor location for the <see cref="T:System.Windows.Documents.Figure" />.The default value is <see cref="F:System.Windows.FigureHorizontalAnchor.ColumnRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalAnchorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalOffset">
      <summary>Gets or sets a value that indicates the distance that a <see cref="T:System.Windows.Documents.Figure" /> is offset from its baseline in the horizontal direction.  </summary>
      <returns>The distance that a <see cref="T:System.Windows.Documents.Figure" /> is offset from its baseline in the horizontal direction, in device independent pixels.The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.HorizontalOffset" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.HorizontalOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalAnchor">
      <summary>Gets or sets a value that indicates the position that content is anchored to in the vertical direction.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FigureVerticalAnchor" /> enumeration specifying a vertical anchor location for the <see cref="T:System.Windows.Documents.Figure" />.The default value is <see cref="F:System.Windows.FigureVerticalAnchor.ParagraphTop" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalAnchorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.VerticalAnchor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.VerticalAnchor" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalOffset">
      <summary>Gets or sets a value that indicates the distance that a <see cref="T:System.Windows.Documents.Figure" /> is offset from its baseline in the vertical direction.  </summary>
      <returns>The distance that a <see cref="T:System.Windows.Documents.Figure" /> is offset from its baseline in the vertical direction, in device independent pixels.The default value is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.VerticalOffset" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.VerticalOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.Width">
      <summary>Gets or sets a value that indicates the width of a <see cref="T:System.Windows.Documents.Figure" /> element.  </summary>
      <returns>A <see cref="T:System.Windows.FigureLength" /> structure specifying the width characteristics for the <see cref="T:System.Windows.Documents.Figure" />.The default value is <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.Value" /> = 1.0 and <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.Width" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.Width" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.WrapDirection">
      <summary>Gets or sets a value that indicates the allowable ways in which content can flow around a <see cref="T:System.Windows.Documents.Figure" />.   </summary>
      <returns>A member of the <see cref="T:System.Windows.WrapDirection" /> enumeration specifying the allowable ways in which content can flow around a <see cref="T:System.Windows.Documents.Figure" />.The default value is <see cref="F:System.Windows.WrapDirection.Both" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WrapDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Figure.WrapDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.WrapDirection" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.FixedDocument">
      <summary>Hosts a portable, high fidelity, fixed-format document with read access for user text selection, keyboard navigation, and search.</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedDocument" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.DocumentPaginator">
      <summary>Gets the paginator for the <see cref="T:System.Windows.Documents.FixedDocument" /> that provides page-oriented services such as getting a particular page and repaginating in response to changes. </summary>
      <returns>An object of a class derived from <see cref="T:System.Windows.Documents.DocumentPaginator" /> that provides pagination services.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.LogicalChildren">
      <summary>Gets an enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent" /> child elements.</summary>
      <returns>An enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent" /> child elements.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.OnCreateAutomationPeer">
      <summary>Creates an automation peer for the document. </summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> that exposes the <see cref="T:System.Windows.Documents.FixedDocument" /> to Microsoft UI Automation.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.Pages">
      <summary>Gets a collection of the document's <see cref="T:System.Windows.Documents.PageContent" /> elements. </summary>
      <returns>A collection of the document's <see cref="T:System.Windows.Documents.PageContent" /> elements.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.PrintTicket">
      <summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is associated with this document. </summary>
      <returns>The <see cref="T:System.Printing.PrintTicket" /> for this document.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocument.PrintTicketProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="serviceType"></param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.System#Windows#Markup#IUriContext#BaseUri">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Documents.FixedDocumentSequence">
      <summary>Hosts one or more <see cref="T:System.Windows.Documents.DocumentReference" /> elements that define a sequence of fixed documents. </summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.DocumentPaginator">
      <summary>Gets the paginator for the <see cref="T:System.Windows.Documents.FixedDocument" /> that provides page-oriented services such as getting a particular page and repaginating in response to changes. </summary>
      <returns>An object of a class derived from <see cref="T:System.Windows.Documents.DocumentPaginator" /> that provides pagination services</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.LogicalChildren">
      <summary>Gets an enumerator for accessing the document sequence's <see cref="T:System.Windows.Documents.DocumentReference" /> child elements. </summary>
      <returns>An enumerator for accessing the document sequence's <see cref="T:System.Windows.Documents.DocumentReference" /> child elements.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.OnCreateAutomationPeer">
      <summary>Creates an automation peer for the sequence. </summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> that exposes the <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to Microsoft UI Automation.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket">
      <summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is associated with this document sequence. </summary>
      <returns>The <see cref="T:System.Printing.PrintTicket" /> for this sequence.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocumentSequence.PrintTicketProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.References">
      <summary>Gets a collection of the document sequence's <see cref="T:System.Windows.Documents.DocumentReference" /> child elements. </summary>
      <returns>A collection of the document sequence's <see cref="T:System.Windows.Documents.DocumentReference" /> child elements.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#IServiceProvider#GetService(System.Type)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="serviceType"></param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IUriContext#BaseUri">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Documents.FixedPage">
      <summary>Provides the content for a high fidelity, fixed-format page. </summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedPage" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used for rendering the page background.   </summary>
      <returns>The brush for rendering the page background.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Background" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.Background" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.BleedBox">
      <summary>Gets or sets a rectangle defining the overflow area for bleeds, registration marks, and crop marks.  </summary>
      <returns>The <see cref="T:System.Windows.Rect" /> defining the overflow area.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BleedBoxProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.BleedBox" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.DocumentPage.BleedBox" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Bottom">
      <summary>Gets or sets the distance between the bottom of the page and the bottom of the parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The distance between the bottom of the page and the bottom of the parent canvas.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BottomProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Bottom" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.Bottom" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Children">
      <summary>Gets a collection of the <see cref="T:System.Windows.Documents.FixedPage" /> child elements. </summary>
      <returns>The <see cref="T:System.Windows.Controls.UIElementCollection" /> of the child elements.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.ContentBox">
      <summary>Gets or sets the bounding rectangle of the content area; that is, the area of the page within the margins, if any.  </summary>
      <returns>The <see cref="T:System.Windows.Rect" /> that defines the content area.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.ContentBoxProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.ContentBox" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.ContentBox" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetBottom(System.Windows.UIElement)">
      <summary>Returns the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The distance between the bottom of an element and the bottom of its parent canvas.</returns>
      <param name="element">The element from which to get the bottom offset.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetLeft(System.Windows.UIElement)">
      <summary>Returns the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The distance between the right side of an element and the right side of its parent canvas.</returns>
      <param name="element">The element from which to get the left offset.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetNavigateUri(System.Windows.UIElement)">
      <summary>Returns the <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> property for a given element.</summary>
      <returns>The <see cref="T:System.Uri" /> of <paramref name="element" />.</returns>
      <param name="element">The element from which to get the property.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetRight(System.Windows.UIElement)">
      <summary>Returns the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The distance between the right side of an element and the right side of its parent canvas.</returns>
      <param name="element">The element from which to get the right offset.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetTop(System.Windows.UIElement)">
      <summary>Returns the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The distance between the top of an element and the top of its parent canvas.</returns>
      <param name="element">The element from which to get the top offset.</param>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Left">
      <summary>Gets or sets the distance between the left edge of the page and the left edge of the parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The distance between the left edge of the page and the left edge of the parent canvas.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.LeftProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Left" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.Left" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.NavigateUri">
      <summary>Gets or sets the URI associated with the page.</summary>
      <returns>The uniform resource identifier (URI) associated with the <see cref="T:System.Windows.Documents.FixedPage" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.NavigateUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.PrintTicket">
      <summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is associated with the page.  </summary>
      <returns>The <see cref="T:System.Printing.PrintTicket" /> for the page.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.PrintTicketProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.PrintTicket" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.PrintTicket" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Right">
      <summary>Gets or sets the distance between the right edge of the page and the right edge of the parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The distance between the right edge of the page and the right edge of the parent canvas.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.RightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Right" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.Right" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>Sets the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element on which to set the bottom offset.</param>
      <param name="length">The new distance between the bottom side of the element and the bottom side of its parent canvas.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>Sets the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element on which to set the left offset.</param>
      <param name="length">The new distance between the left side of the element and the left side of its parent canvas.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetNavigateUri(System.Windows.UIElement,System.Uri)">
      <summary>Sets the uniform resource identifier (URI) to navigate to when a hyperlink is clicked.</summary>
      <param name="element">The element on which to set the URI offset.</param>
      <param name="uri">The URI to navigate to when a hyperlink is clicked.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetRight(System.Windows.UIElement,System.Double)">
      <summary>Sets the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element on which to set the right offset.</param>
      <param name="length">The new distance between the right side of the element and the right side of its parent canvas.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetTop(System.Windows.UIElement,System.Double)">
      <summary>Sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <param name="element">The element on which to set the top offset.</param>
      <param name="length">The new distance between the top side of the element and the top side of its parent canvas.</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.System#Windows#Markup#IUriContext#BaseUri">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Top">
      <summary>Gets or sets the distance between the top of the page and the top of the parent <see cref="T:System.Windows.Controls.Canvas" />.</summary>
      <returns>The distance between the top of the page and the top of the parent canvas.</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.TopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Top" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.Top" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Documents.Floater">
      <summary>Provides an inline-level flow content element used to host a floater. A floater displays images and other content parallel to the main content flow in a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater" /> class with the specified <see cref="T:System.Windows.Documents.Block" /> object as its initial content.</summary>
      <param name="childBlock">The initial content of the new <see cref="T:System.Windows.Documents.Floater" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater" /> class with the specified <see cref="T:System.Windows.Documents.Block" /> object as its initial content, and a <see cref="T:System.Windows.Documents.TextPointer" /> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Floater" />.</summary>
      <param name="childBlock">The initial content of the new <see cref="T:System.Windows.Documents.Floater" />. This parameter can be null, in which case no <see cref="T:System.Windows.Documents.Block" /> is inserted.</param>
      <param name="insertionPosition">The position at which to insert the <see cref="T:System.Windows.Documents.Floater" /> element after it is created.</param>
    </member>
    <member name="P:System.Windows.Documents.Floater.HorizontalAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment for a <see cref="T:System.Windows.Documents.Floater" /> object. </summary>
      <returns>A member of the <see cref="T:System.Windows.HorizontalAlignment" /> enumeration specifying the horizontal alignment for the <see cref="T:System.Windows.Documents.Floater" />. The default is <see cref="F:System.Windows.HorizontalAlignment.Stretch" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.HorizontalAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Floater.Width">
      <summary>Gets or sets a value that indicates the width of a <see cref="T:System.Windows.Documents.Floater" /> object. </summary>
      <returns>The width of the <see cref="T:System.Windows.Documents.Floater" />, in device independent pixels. The default value is <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of Auto), which indicates that the line height is determined automatically. </returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Floater.Width" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Floater.Width" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.FlowDocument">
      <summary>Hosts and formats flow content with advanced document features, such as pagination and columns.</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.FlowDocument" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FlowDocument" /> class, adding a specified <see cref="T:System.Windows.Documents.Block" /> element as the initial content. </summary>
      <param name="block">An object deriving from the abstract <see cref="T:System.Windows.Documents.Block" /> class, to be added as the initial content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="block" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to fill the background of content area.  </summary>
      <returns>The brush used to fill the background of the content area, or null to not use a background brush. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.Background" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.Background" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Blocks">
      <summary>Gets the top-level <see cref="T:System.Windows.Documents.Block" /> elements of the contents of the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that make up the contents of the <see cref="T:System.Windows.Documents.FlowDocument" />.  </returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnGap">
      <summary>Gets or sets the column gap value, which indicates the spacing between columns in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The column gap, in device independent pixels.  A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") indicates that the column gap is equal to the <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> property. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnGapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to draw the rule between columns.  </summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> to use when drawing the rule line between columns, or null to not use a background brush. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth">
      <summary>Gets or sets the column rule width.  </summary>
      <returns>The column rule width, in device independent pixels. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnWidth">
      <summary>Gets or sets the minimum desired width of the columns in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The minimum desired column width, in device independent pixels. A value of <see cref="F:System.Double.NaN" /> causes only one column to be displayed, regardless of the page width.  The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the content in a <see cref="T:System.Windows.Documents.FlowDocument" />. </summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> representing the end of the contents in the <see cref="T:System.Windows.Documents.FlowDocument" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the start of content within a <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointerContext" /> representing the start of the contents in the <see cref="T:System.Windows.Documents.FlowDocument" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FlowDirection">
      <summary>Gets or sets the relative direction for flow of content in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction. The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>A <see cref="T:System.Windows.Media.FontFamily" /> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families. The default is the font determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontSize">
      <summary>Gets or sets the top-level font size for the <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The desired font size to use, in device independent pixels).   The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStretch">
      <summary>Gets or sets the top-level font-stretching characteristics for the <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FontStretch" /> class that specifies the desired font-stretching characteristics to use. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStyle">
      <summary>Gets or sets the top-level font style for the <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FontStyles" /> class that specifies the desired font style. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontWeight">
      <summary>Gets or sets the top-level font weight for the <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FontWeights" /> class that specifies the desired font weight. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the text contents of the <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The brush used to apply to the text contents. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> value is flexible or fixed.  </summary>
      <returns>true if the column width is flexible; false if the column width is fixed. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsEnabledCore">
      <summary>Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property for the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>The value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property for the <see cref="T:System.Windows.Documents.FlowDocument" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled">
      <summary>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.  </summary>
      <returns>true if automatic breaking and hyphenation of words is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled">
      <summary>Gets or sets a value that indicates whether optimal paragraph layout is enabled or disabled.  </summary>
      <returns>true if optimal paragraph layout is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineHeight">
      <summary>Gets or sets the height of each line of content.  </summary>
      <returns>The height of each line, in device independent pixels, in the range 0.0034 to 160000. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") causes the line height to be determined automatically from the current font characteristics. The default is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies the mechanism by which a line box is determined for each line of text in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" />  dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Documents.FlowDocument" />. </summary>
      <returns>An enumerator for the logical children.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageHeight">
      <summary>Gets or sets the maximum height for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The maximum height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is <see cref="F:System.Double.PositiveInfinity" /> (no maximum page height).</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageWidth">
      <summary>Gets or sets the maximum width for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The maximum width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is <see cref="F:System.Double.PositiveInfinity" /> (no maximum page width).</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageHeight">
      <summary>Gets or sets the minimum height for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The minimum height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageWidth">
      <summary>Gets or sets the minimum width for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The minimum width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is 0.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnCreateAutomationPeer">
      <summary>When overridden in a derived class, provides specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when one or more of the dependency properties that exist on the element have had their effective values changed.</summary>
      <param name="e">Arguments for the associated event.</param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageHeight">
      <summary>Gets or sets the preferred height for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The preferred height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") causes the page height to be determined automatically. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PagePadding">
      <summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of a page and the page's content.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PagePaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageWidth">
      <summary>Gets or sets the preferred width for pages in a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>The preferred width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument" />. A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") causes the page width to be determined automatically. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>null</returns>
      <param name="serviceType"></param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text"></param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.  </summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextEffects">
      <summary>Gets or sets the effects to apply to the text of a <see cref="T:System.Windows.Documents.FlowDocument" />.  </summary>
      <returns>A <see cref="T:System.Windows.Media.TextEffectCollection" /> containing one or more <see cref="T:System.Windows.Media.TextEffect" /> objects that define effects to apply to the text of the <see cref="T:System.Windows.Documents.FlowDocument" />. The default is null (no effects applied).</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextEffectsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Typography">
      <summary>Gets the currently effective typography variations for the text contents of the <see cref="T:System.Windows.Documents.FlowDocument" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations. For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.FrameworkRichTextComposition">
      <summary>  Represents a composition related to text input. You can use this class to find the text position of the composition or the result string.</summary>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionEnd">
      <summary> Gets the end position of the current composition text. </summary>
      <returns>The end position of the current composition text.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionStart">
      <summary> Gets the start position of the current composition text. </summary>
      <returns>The start position of the current composition text.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultEnd">
      <summary> Gets the end position of the result text of the text input. </summary>
      <returns>The end position of the result text of the text input.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultStart">
      <summary> Gets the start position of the result text of the text input. </summary>
      <returns>The start position of the result text of the text input.</returns>
    </member>
    <member name="T:System.Windows.Documents.FrameworkTextComposition">
      <summary>Represents a composition during the text input events of a <see cref="T:System.Windows.Controls.TextBox" />. </summary>
    </member>
    <member name="M:System.Windows.Documents.FrameworkTextComposition.Complete">
      <summary>Finalizes the composition. </summary>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionLength">
      <summary>Gets the length of the current composition in Unicode symbols.</summary>
      <returns>The length of the current composition in Unicode symbols.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionOffset">
      <summary>Gets the position at which the composition text occurs in the <see cref="T:System.Windows.Controls.TextBox" />.</summary>
      <returns>The position at which the composition text occurs in the <see cref="T:System.Windows.Controls.TextBox" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultLength">
      <summary>Gets the length of the finalized text in Unicode symbols when the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event occurs.</summary>
      <returns>The length of the finalized text in Unicode symbols when the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event occurs.</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultOffset">
      <summary>Gets the offset of the finalized text when the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event occurs.</summary>
      <returns>The offset of the finalized text when the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event occurs.</returns>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventArgs">
      <summary> Provides data for the <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" /> event. </summary>
    </member>
    <member name="P:System.Windows.Documents.GetPageRootCompletedEventArgs.Result">
      <summary> Gets the <see cref="T:System.Windows.Documents.FixedPage" /> content asynchronously requested by <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />. </summary>
      <returns>The root element of the visual tree for the <see cref="T:System.Windows.Documents.PageContent" /> requested by <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" />  event of the <see cref="T:System.Windows.Documents.PageContent" />  class. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Glyphs">
      <summary>Represents the set of glyphs that are used for rendering fixed text.</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Glyphs" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.BidiLevel">
      <summary>Gets or sets the bidirectional nesting level of <see cref="T:System.Windows.Documents.Glyphs" />.  </summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the bidirectional nesting level.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.BidiLevelProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.BidiLevel" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.BidiLevel" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.CaretStops">
      <summary>Gets or sets the caret stops that correspond to the code points in the Unicode string representing the <see cref="T:System.Windows.Documents.Glyphs" />.  </summary>
      <returns>A value of type <see cref="T:System.String" /> that represents whether the code points have caret stops.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.CaretStopsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.CaretStops" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.CaretStops" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.DeviceFontName">
      <summary>Gets or sets the specific device font for which the <see cref="T:System.Windows.Documents.Glyphs" /> object has been optimized.  </summary>
      <returns>A <see cref="T:System.String" /> value that represents the name of the device font.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.DeviceFontNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Fill">
      <summary>Gets the sets the <see cref="T:System.Windows.Media.Brush" /> that is used for the fill of the <see cref="T:System.Windows.Documents.Glyphs" /> class.  </summary>
      <returns>A value of type <see cref="T:System.Windows.Media.Brush" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.Fill" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.Fill" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
      <summary>Gets or sets the em size used for rendering the <see cref="T:System.Windows.Documents.Glyphs" /> class.  </summary>
      <returns>A <see cref="T:System.Double" /> value that represents the em size used for rendering.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontUri">
      <summary>Gets or sets the <see cref="T:System.Uri" /> that represents the location of the font used for rendering the <see cref="T:System.Windows.Documents.Glyphs" /> class.  </summary>
      <returns>A value of type <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Indices">
      <summary>Gets or sets the glyph indices that represent the <see cref="T:System.Windows.Documents.Glyphs" /> object.  </summary>
      <returns>A value of type <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.Indices" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.Indices" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.IsSideways">
      <summary>Determines whether to rotate the <see cref="T:System.Windows.Documents.Glyphs" /> object.  </summary>
      <returns>true if the glyphs that make up the <see cref="T:System.Windows.Documents.Glyphs" /> object are rotated 90° counter-clockwise; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IsSidewaysProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.IsSideways" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.IsSideways" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginX">
      <summary>Gets or sets the value of the x origin for the <see cref="T:System.Windows.Documents.Glyphs" /> object.  </summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginY">
      <summary>Gets or sets the value of the x origin for the <see cref="T:System.Windows.Documents.Glyphs" /> object.  </summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.StyleSimulations" /> for the <see cref="T:System.Windows.Documents.Glyphs" /> class.  </summary>
      <returns>A value of type <see cref="T:System.Windows.Media.StyleSimulations" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> dependency property. </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.System#Windows#Markup#IUriContext#BaseUri">
      <summary>For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.ToGlyphRun">
      <summary>Creates a <see cref="T:System.Windows.Media.GlyphRun" /> from the properties of the <see cref="T:System.Windows.Documents.Glyphs" /> object.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.GlyphRun" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.UnicodeString">
      <summary>Gets or sets the <see cref="T:System.String" /> that represents the Unicode string for the <see cref="T:System.Windows.Documents.Glyphs" /> object.  </summary>
      <returns>A value of type <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> dependency property. </returns>
    </member>
    <member name="T:System.Windows.Documents.Hyperlink">
      <summary>An inline-level flow content element that provides facilities for hosting hyperlinks within flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor">
      <summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink" />.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Hyperlink" /> element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink" /> class, taking two <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <param name="start">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink" />.</param>
      <param name="end">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> or <paramref name="end" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Span" /> element; for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.BaseUri">
      <summary>Gets or sets a base URI for the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>A base URI for the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.Click">
      <summary>Occurs when the left mouse button is clicked on a <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.ClickEvent">
      <summary>Identifies the <see cref="E:System.Windows.Documents.Hyperlink.Click" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Documents.Hyperlink.Click" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.Command">
      <summary>Gets or sets a command to associate with the <see cref="T:System.Windows.Documents.Hyperlink" />.  </summary>
      <returns>A command to associate with the <see cref="T:System.Windows.Documents.Hyperlink" />. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
      <summary>Gets or sets command parameters associated with the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property.  </summary>
      <returns>An object specifying parameters for the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandTarget">
      <summary>Gets or sets a target element on which to execute the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property.  </summary>
      <returns>A target element on which to execute the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.DoClick">
      <summary>Simulates the act of a user clicking the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.IsEnabledCore">
      <summary>Gets a value that indicates whether or not the <see cref="T:System.Windows.Documents.Hyperlink" /> is enabled.</summary>
      <returns>true if the <see cref="T:System.Windows.Documents.Hyperlink" /> is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
      <summary>Gets or sets a URI to navigate to when the <see cref="T:System.Windows.Documents.Hyperlink" /> is activated. </summary>
      <returns>The <see cref="T:System.Uri" /> to navigate to when the <see cref="T:System.Windows.Documents.Hyperlink" /> is activated. The default is null.Note<see cref="T:System.Windows.Documents.Hyperlink" /> can navigate to the value of the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> property only if either the direct or indirect parent of a <see cref="T:System.Windows.Documents.Hyperlink" /> is a navigation host, including <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />, or any browser that can host XBAPs (which includes Internet Explorer 7, Microsoft Internet Explorer 6, and Firefox 2.0+). For more information, see the Navigation Hosts section in Navigation Overview.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnClick">
      <summary>Handles the <see cref="E:System.Windows.Documents.Hyperlink.Click" /> routed event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</summary>
      <param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</summary>
      <param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> event.</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Handles the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</summary>
      <param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> event.</param>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.RequestNavigate">
      <summary>Occurs when navigation events are requested.</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.RequestNavigateEvent">
      <summary>Identifies the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> routed event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> routed event.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.System#Windows#Markup#IUriContext#BaseUri">
      <summary>Gets or sets a base URI for the <see cref="T:System.Windows.Documents.Hyperlink" />.</summary>
      <returns>A base URI for the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.TargetName">
      <summary>Gets or sets the name of a target window or frame for the <see cref="T:System.Windows.Documents.Hyperlink" />.  </summary>
      <returns>A string specifying the name of a target window or frame for the <see cref="T:System.Windows.Documents.Hyperlink" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.Inline">
      <summary>An abstract class that provides a base for all inline flow content elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Inline.#ctor">
      <summary>Initializes base class values when called by a derived class.</summary>
    </member>
    <member name="P:System.Windows.Documents.Inline.BaselineAlignment">
      <summary>Gets or sets the baseline alignment for the <see cref="T:System.Windows.Documents.Inline" /> element.   </summary>
      <returns>A member or the <see cref="T:System.Windows.BaselineAlignment" /> enumeration specifying the baseline alignment for the <see cref="T:System.Windows.Documents.Inline" /> element.The default value is <see cref="T:System.Windows.BaselineAlignment" />.Baseline.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.BaselineAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.FlowDirection">
      <summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.Inline" /> element.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FlowDirection" /> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.Inline" /> element to re-flow in the indicated direction.The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.NextInline">
      <summary>Gets the next <see cref="T:System.Windows.Documents.Inline" /> element that is a peer to this element.</summary>
      <returns>An <see cref="T:System.Windows.Documents.Inline" /> object representing the next <see cref="T:System.Windows.Documents.Inline" /> element that is a peer to this element, or null if there is no next <see cref="T:System.Windows.Documents.Inline" /> element.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.PreviousInline">
      <summary>Gets the previous <see cref="T:System.Windows.Documents.Inline" /> element that is a peer to this element.</summary>
      <returns>An <see cref="T:System.Windows.Documents.Inline" /> object representing the previous <see cref="T:System.Windows.Documents.Inline" /> element that is a peer to this element, or null if there is no previous <see cref="T:System.Windows.Documents.Inline" /> element.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.SiblingInlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> that contains the <see cref="T:System.Windows.Documents.Inline" /> elements that are siblings (peers) to this element.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> object that contains the <see cref="T:System.Windows.Documents.Inline" /> elements that are siblings to this element.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.TextDecorations">
      <summary>Gets a <see cref="T:System.Windows.TextDecorationCollection" /> that contains text decorations to apply to this element.  </summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to this element.The default value is null (no text decorations applied).</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Documents.Inline" /> elements. <see cref="T:System.Windows.Documents.InlineCollection" /> defines the allowable child content of the <see cref="T:System.Windows.Documents.Paragraph" />, <see cref="T:System.Windows.Documents.Span" />, and <see cref="T:System.Windows.Controls.TextBlock" /> elements. </summary>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.String)">
      <summary>Adds an implicit <see cref="T:System.Windows.Documents.Run" /> element with the given text, supplied as a <see cref="T:System.String" />.</summary>
      <param name="text">Text set as the <see cref="P:System.Windows.Documents.Run.Text" /> property for the implicit <see cref="T:System.Windows.Documents.Run" />.</param>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.Windows.UIElement)">
      <summary>Adds an implicit <see cref="T:System.Windows.Documents.InlineUIContainer" /> with the supplied <see cref="T:System.Windows.UIElement" /> already in it. </summary>
      <param name="uiElement">
        <see cref="T:System.Windows.UIElement" /> set as the <see cref="P:System.Windows.Documents.InlineUIContainer.Child" /> property for the implicit <see cref="T:System.Windows.Documents.InlineUIContainer" />.</param>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.FirstInline">
      <summary>Gets the first <see cref="T:System.Windows.Documents.Inline" /> element within this instance of <see cref="T:System.Windows.Documents.InlineCollection" />.</summary>
      <returns>The first <see cref="T:System.Windows.Documents.Inline" /> element within this instance of <see cref="T:System.Windows.Documents.InlineCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.LastInline">
      <summary>Gets the last <see cref="T:System.Windows.Documents.Inline" /> element within this instance of <see cref="T:System.Windows.Documents.InlineCollection" />.</summary>
      <returns>The last <see cref="T:System.Windows.Documents.Inline" /> element within this instance of <see cref="T:System.Windows.Documents.InlineCollection" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineUIContainer">
      <summary>An inline-level flow content element which enables <see cref="T:System.Windows.UIElement" /> elements (i.e. a <see cref="T:System.Windows.Controls.Button" />) to be embedded (hosted) in flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.InlineUIContainer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.InlineUIContainer" /> class, taking a specified <see cref="T:System.Windows.UIElement" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer" />.</summary>
      <param name="childUIElement">An <see cref="T:System.Windows.UIElement" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer" />.</param>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.InlineUIContainer" /> class, taking a specified <see cref="T:System.Windows.UIElement" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.InlineUIContainer" /> element.</summary>
      <param name="childUIElement">A <see cref="T:System.Windows.UIElement" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer" />.  This parameter may be null, in which case no <see cref="T:System.Windows.UIElement" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.InlineUIContainer" /> element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="P:System.Windows.Documents.InlineUIContainer.Child">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.InlineUIContainer" />.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> hosted by the <see cref="T:System.Windows.Documents.InlineUIContainer" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Italic">
      <summary>Provides an inline-level flow content element that causes content to render with an italic font style.</summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class with the specified <see cref="T:System.Windows.Documents.Inline" /> object as its initial content.</summary>
      <param name="childInline">The initial content of the new <see cref="T:System.Windows.Documents.Italic" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class with the specified <see cref="T:System.Windows.Documents.Inline" /> object as its initial content, and a <see cref="T:System.Windows.Documents.TextPointer" /> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <param name="childInline">The initial content. This parameter can be null, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">The insertion position at which to insert the <see cref="T:System.Windows.Documents.Italic" /> element after it is created.</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic" /> class with the specified <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a content selection that the new <see cref="T:System.Windows.Documents.Italic" /> will contain.</summary>
      <param name="start">The beginning of a selection of content that the new <see cref="T:System.Windows.Documents.Italic" /> will contain.</param>
      <param name="end">The end of a selection of content that the new <see cref="T:System.Windows.Documents.Italic" /> will contain.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> or <paramref name="end" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by an <see cref="T:System.Windows.Documents.Italic" /> element; for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="T:System.Windows.Documents.LineBreak">
      <summary>An inline flow content element that causes a line break to occur in flow content.</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor">
      <summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.LineBreak" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor(System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LineBreak" /> class, and inserts the new <see cref="T:System.Windows.Documents.LineBreak" /> at a specified position.</summary>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.LineBreak" /> element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="T:System.Windows.Documents.LinkTarget">
      <summary>Represents an element on a page that can be linked to from other documents or other places in the same document.</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LinkTarget" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.LinkTarget.Name">
      <summary>Gets or sets the name of the element that this <see cref="T:System.Windows.Documents.LinkTarget" /> identifies as a linkable element.</summary>
      <returns>A <see cref="T:System.String" /> that is identical to the <see cref="P:System.Windows.FrameworkElement.Name" /> property of the markup element that corresponds to this <see cref="T:System.Windows.Documents.LinkTarget" /> element.</returns>
    </member>
    <member name="T:System.Windows.Documents.LinkTargetCollection">
      <summary>Provides a collection of all of the <see cref="T:System.Windows.Documents.LinkTarget" /> elements in a <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LinkTargetCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Add(System.Windows.Documents.LinkTarget)">
      <summary>Adds a specified <see cref="T:System.Windows.Documents.LinkTarget" /> to the collection.</summary>
      <returns>The zero-based index in the collection of the <paramref name="value" /> added.</returns>
      <param name="value">The link target that is added.</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Contains(System.Windows.Documents.LinkTarget)">
      <summary>Specifies a value that indicates whether a particular <see cref="T:System.Windows.Documents.LinkTarget" /> is in the collection.</summary>
      <returns>true if <paramref name="value" /> is present; otherwise, false.</returns>
      <param name="value">The link to test for.</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.CopyTo(System.Windows.Documents.LinkTarget[],System.Int32)">
      <summary>Copies the items in the collection to the specified array beginning at the specified index.</summary>
      <param name="array">The target array.</param>
      <param name="index">The zero-based index of the array position where the first item is copied. </param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.IndexOf(System.Windows.Documents.LinkTarget)">
      <summary>Gets the index of the specified item.</summary>
      <returns>The index of <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
      <param name="value">The object to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Insert(System.Int32,System.Windows.Documents.LinkTarget)">
      <summary>Inserts the specified item into the collection at the specified index.</summary>
      <param name="index">The point where the link target is inserted.</param>
      <param name="value">The target to insert.</param>
    </member>
    <member name="P:System.Windows.Documents.LinkTargetCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Documents.LinkTarget" /> at the specified index.</summary>
      <returns>A <see cref="T:System.Windows.Documents.LinkTarget" />.</returns>
      <param name="index">The index of the target being written or read.</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Remove(System.Windows.Documents.LinkTarget)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="value">The link target to remove.</param>
    </member>
    <member name="T:System.Windows.Documents.List">
      <summary>A block-level flow content element that provides facilities for presenting content in an ordered or unordered list.</summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.List" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor(System.Windows.Documents.ListItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.List" /> class, taking a specified <see cref="T:System.Windows.Documents.ListItem" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.List" />.</summary>
      <param name="listItem">A <see cref="T:System.Windows.Documents.ListItem" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.List" />.</param>
    </member>
    <member name="P:System.Windows.Documents.List.ListItems">
      <summary>Gets a <see cref="T:System.Windows.Documents.ListItemCollection" /> containing the <see cref="T:System.Windows.Documents.ListItem" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.List" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.ListItemCollection" /> containing the <see cref="T:System.Windows.Documents.ListItem" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.List" />.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerOffset">
      <summary>Gets or sets the desired distance between the contents of each <see cref="T:System.Windows.Documents.ListItem" /> element, and the near edge of the list marker.  </summary>
      <returns>A double value specifying the desired distance between list content and the near edge of list markers, in device independent pixels.  A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") causes the marker offset to be determined automatically.The default value is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.List.MarkerOffset" />  dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.List.MarkerOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerStyle">
      <summary>Gets or sets the marker style for the <see cref="T:System.Windows.Documents.List" />.  </summary>
      <returns>A member of the <see cref="T:System.Windows.TextMarkerStyle" /> enumeration specifying the marker style to use.The default value is <see cref="F:System.Windows.TextMarkerStyle.Disc" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.List.MarkerStyle" />  dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.List.MarkerStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.List.StartIndex">
      <summary>Gets or sets the starting index for labeling the items in an ordered list.  </summary>
      <returns>The starting index for labeling items in an ordered list.The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Documents.List.StartIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.List.StartIndex" />  dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.List.StartIndex" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.ListItem">
      <summary>A flow content element that represents a particular content item in an ordered or unordered <see cref="T:System.Windows.Documents.List" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.ListItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.ListItem" /> class, taking a specified <see cref="T:System.Windows.Documents.Paragraph" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      <param name="paragraph">A <see cref="T:System.Windows.Documents.Paragraph" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.ListItem" />.</param>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Blocks">
      <summary>Gets a block collection that contains the top-level <see cref="T:System.Windows.Documents.Block" /> elements of the <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      <returns>A block collection that contains the <see cref="T:System.Windows.Documents.Block" /> elements of the <see cref="T:System.Windows.Documents.ListItem" /></returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderBrush">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.  </summary>
      <returns>The brush used to apply to the element's border. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderThickness">
      <summary>Gets or sets the border thickness for the element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of border to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.FlowDirection">
      <summary>Gets or sets the relative direction for flow of content within a <see cref="T:System.Windows.Documents.ListItem" /> element.  </summary>
      <returns>One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction.  The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineHeight">
      <summary>Gets or sets the height of each line of content.  </summary>
      <returns>The height of each line in device independent pixels with a value range of 0.0034 to 160000.  A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") causes the line height to be determined automatically from the current font characteristics.  The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem" />.  </summary>
      <returns>One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem" />. The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.List">
      <summary>Gets the <see cref="T:System.Windows.Documents.List" /> that contains the <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      <returns>The list that contains the <see cref="T:System.Windows.Documents.ListItem" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Margin">
      <summary>Gets or sets the margin thickness for the element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of margin to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.MarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.Margin" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.Margin" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.NextListItem">
      <summary>Gets the next <see cref="T:System.Windows.Documents.ListItem" /> in the containing <see cref="T:System.Windows.Documents.List" />.</summary>
      <returns>The next <see cref="T:System.Windows.Documents.ListItem" /> in the <see cref="T:System.Windows.Documents.List" />, or null if there is no next <see cref="T:System.Windows.Documents.ListItem" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Padding">
      <summary>Gets or sets the padding thickness for the element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels. The default is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.Padding" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.PreviousListItem">
      <summary>Gets the previous <see cref="T:System.Windows.Documents.ListItem" /> in the containing <see cref="T:System.Windows.Documents.List" />.</summary>
      <returns>The previous <see cref="T:System.Windows.Documents.ListItem" /> in the <see cref="T:System.Windows.Documents.List" />, or null if there is no previous <see cref="T:System.Windows.Documents.ListItem" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Documents.ListItem.Blocks" /> property should be serialized during serialization of the <see cref="T:System.Windows.Documents.ListItem" /> object.</summary>
      <returns>true if the <see cref="P:System.Windows.Documents.ListItem.Blocks" /> property should be serialized; otherwise, false.</returns>
      <param name="manager">A serialization service manager object for the object.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.ListItem.SiblingListItems">
      <summary>Gets a <see cref="T:System.Windows.Documents.ListItemCollection" /> that contains the <see cref="T:System.Windows.Documents.ListItem" /> elements that are siblings of the current <see cref="T:System.Windows.Documents.ListItem" /> element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.ListItemCollection" /> that contains the child <see cref="T:System.Windows.Documents.ListItem" /> elements that are directly hosted by the parent of the current <see cref="T:System.Windows.Documents.ListItem" /> element, or null if the current <see cref="T:System.Windows.Documents.ListItem" /> element has no parent.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.  </summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.ListItemCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Documents.ListItem" /> elements. <see cref="T:System.Windows.Documents.ListItemCollection" /> defines the allowable child content of a <see cref="T:System.Windows.Documents.List" /> element.</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.FirstListItem">
      <summary>Gets the first <see cref="T:System.Windows.Documents.ListItem" /> element within this instance of <see cref="T:System.Windows.Documents.ListItemCollection" />.</summary>
      <returns>The first <see cref="T:System.Windows.Documents.ListItem" /> element within this instance of <see cref="T:System.Windows.Documents.ListItemCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.LastListItem">
      <summary>Gets the last <see cref="T:System.Windows.Documents.ListItem" /> element within this instance of <see cref="T:System.Windows.Documents.ListItemCollection" />.</summary>
      <returns>The last <see cref="T:System.Windows.Documents.ListItem" /> element within this instance of <see cref="T:System.Windows.Documents.ListItemCollection" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.LogicalDirection">
      <summary>Specifies a logical direction in which to perform certain text operations, such as inserting, retrieving, or navigating through text relative to a specified position (a <see cref="T:System.Windows.Documents.TextPointer" />).</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Backward">
      <summary>Backward, or from right to left.</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Forward">
      <summary>Forward, or from left to right.</summary>
    </member>
    <member name="T:System.Windows.Documents.PageContent">
      <summary>Provides information about the <see cref="T:System.Windows.Documents.FixedPage" /> elements within a <see cref="T:System.Windows.Documents.FixedDocument" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.PageContent" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Child">
      <summary>Gets the <see cref="T:System.Windows.Documents.FixedPage" /> associated with this <see cref="T:System.Windows.Documents.PageContent" />.</summary>
      <returns>The <see cref="T:System.Windows.Documents.FixedPage" /> associated with this <see cref="T:System.Windows.Documents.PageContent" />, or null when the <see cref="T:System.Windows.Documents.FixedPage" /> is set by the <see cref="P:System.Windows.Documents.PageContent.Source" /> property. </returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)">
      <summary>Loads and returns the <see cref="T:System.Windows.Documents.FixedPage" /> content element. </summary>
      <returns>The root element of the visual tree for this page.</returns>
      <param name="forceReload">true to always reload the <see cref="T:System.Windows.Documents.FixedPage" /> even if it has been previously loaded and cached; false to load the <see cref="T:System.Windows.Documents.FixedPage" /> only if there is no cached version.</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)">
      <summary>Asynchronously loads and returns the <see cref="T:System.Windows.Documents.FixedPage" /> content element. </summary>
      <param name="forceReload">true to always reload the <see cref="T:System.Windows.Documents.FixedPage" /> even if it has been previously loaded and cached; false to load the <see cref="T:System.Windows.Documents.FixedPage" /> only if there is no cached version.</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel">
      <summary>Cancels any current <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> operation in progress.</summary>
    </member>
    <member name="E:System.Windows.Documents.PageContent.GetPageRootCompleted">
      <summary>Occurs when <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> has completed.</summary>
    </member>
    <member name="P:System.Windows.Documents.PageContent.LinkTargets">
      <summary>Gets a collection of <see cref="T:System.Windows.Documents.LinkTarget" /> elements that identify the hyperlink-addressable locations on the page. </summary>
      <returns>The <see cref="T:System.Windows.Documents.LinkTargetCollection" /> of <see cref="T:System.Windows.Documents.LinkTarget" /> elements that identify the hyperlink-addressable locations on the page.</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.ShouldSerializeChild(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Gets a value indicating whether the value of the <see cref="P:System.Windows.Documents.PageContent.Child" /> property should be serialized when this <see cref="T:System.Windows.Documents.PageContent" /> is serialized.</summary>
      <returns>true if <paramref name="manager" /> is not null and it does not have an XmlWriter; otherwise, false. The default is false.</returns>
      <param name="manager">The serialization services provider.</param>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Source">
      <summary>Gets or sets the uniform resource identifier (URI) to the <see cref="T:System.Windows.Documents.FixedPage" /> content data stream.  </summary>
      <returns>The <see cref="T:System.Uri" /> of the corresponding <see cref="T:System.Windows.Documents.FixedPage" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.PageContent.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.PageContent.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.PageContent.Source" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</summary>
      <param name="value">The child <see cref="T:System.Object" /> to add.</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="P:System.Windows.Documents.PageContent.System#Windows#Markup#IUriContext#BaseUri">
      <summary>For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</summary>
      <returns>The base URI of the current context. </returns>
    </member>
    <member name="T:System.Windows.Documents.PageContentCollection">
      <summary>Provides collection support for a collection of document pages. </summary>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.Add(System.Windows.Documents.PageContent)">
      <summary>Adds a new page to the page collection.</summary>
      <returns>The zero-based index within the collection where the page was added.</returns>
      <param name="newPageContent">The new page to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newPageContent" /> was passed as null.</exception>
      <exception cref="T:System.InvalidOperationException">The page passed as <paramref name="newPageContent" /> already existed in the collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Count">
      <summary>Gets the number of elements contained in the page collection.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.GetEnumerator">
      <summary>Returns an enumerator for iterating through the page collection. </summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Documents.PageContent" /> element at the specified index within the collection. </summary>
      <returns>The page content element at the specified index within the collection. </returns>
      <param name="pageIndex">The zero-based index of the page to get. </param>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.PageContentCollection.GetEnumerator" /> method instead. </summary>
      <returns>The enumerator.</returns>
    </member>
    <member name="T:System.Windows.Documents.Paragraph">
      <summary>A block-level flow content element used to group content into a paragraph.</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Paragraph" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Paragraph" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as its initial contents.</summary>
      <param name="inline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Paragraph" />.</param>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.Inlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Paragraph" />.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> containing the <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Paragraph" />.This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepTogether">
      <summary>Gets or sets a value that indicates whether the text of the paragraph may be broken by a page break or column break.  </summary>
      <returns>true to prevent the text of the paragraph from being broken; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepTogetherProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.KeepTogether" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.KeepTogether" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepWithNext">
      <summary>Gets or sets a value that indicates whether a break may occur between this paragraph and the next paragraph.  </summary>
      <returns>true to prevent a break from occurring between this paragraph and the next paragraph; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepWithNextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinOrphanLines">
      <summary>Gets or sets a value that specifies the minimum number of lines that can be left before the break when a <see cref="T:System.Windows.Documents.Paragraph" /> is broken by a page break or column break.  </summary>
      <returns>An integer specifying the minimum number of lines that can be left before the break when a <see cref="T:System.Windows.Documents.Paragraph" /> is broken by a page break or column break. A value of 0 indicates no minimum.The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinOrphanLinesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinWidowLines">
      <summary>Gets or sets a value that specifies the minimum number of lines that can be placed after the break when a <see cref="T:System.Windows.Documents.Paragraph" /> is broken by a page break or column break.  </summary>
      <returns>An integer specifying the minimum number of lines that can be placed after the break when a <see cref="T:System.Windows.Documents.Paragraph" /> is broken by a page break or column break.  A value of 0 indicates no minimum.The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinWidowLinesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Indicates whether the <see cref="P:System.Windows.Documents.Paragraph.Inlines" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
      <param name="manager">A serialization service manager object for this object.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextDecorations">
      <summary>Gets or sets a <see cref="T:System.Windows.TextDecorationCollection" /> that contains text decorations to apply to this element.  </summary>
      <returns>A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to this element. A value of null means no text decorations will be applied. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextDecorationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.TextDecorations" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.TextDecorations" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextIndent">
      <summary>Gets or sets a value that indicates how far to indent the first line of a <see cref="T:System.Windows.Documents.Paragraph" />.  </summary>
      <returns>A double value specifying the amount to indent the first line of the paragraph, in device independent pixels. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextIndentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.TextIndent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.TextIndent" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.Run">
      <summary>An inline-level flow content element intended to contain a run of formatted or unformatted text.</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor">
      <summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.Run" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Run" /> class, taking a specified string as the initial contents of the text run.</summary>
      <param name="text">A string specifying the initial contents of the <see cref="T:System.Windows.Documents.Run" /> object.</param>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Run" /> class, taking a specified string as the initial contents of the text run, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the text run.</summary>
      <param name="text">A string specifying the initial contents of the <see cref="T:System.Windows.Documents.Run" /> object.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the text run after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Run.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.Run.Text" /> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.Run" /> object.</summary>
      <returns>true if the <see cref="P:System.Windows.Documents.Run.Text" /> property should be serialized; otherwise, false.</returns>
      <param name="manager">A serialization service manager object for this object.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.Run.Text">
      <summary>Gets or sets the unformatted text contents of this text <see cref="T:System.Windows.Documents.Run" />.</summary>
      <returns>A string that specifies the unformatted text contents of this text <see cref="T:System.Windows.Documents.Run" />. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Run.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Run.Text" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Run.Text" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.Section">
      <summary>A block-level flow content element used for grouping other <see cref="T:System.Windows.Documents.Block" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Section" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Section" /> class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Section" />.</summary>
      <param name="block">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Section" />.</param>
    </member>
    <member name="P:System.Windows.Documents.Section.Blocks">
      <summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Section" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Section" />This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
      <summary>Gets or sets a value that indicates whether or not a trailing paragraph break should be inserted after the last paragraph when placing the contents of a root <see cref="T:System.Windows.Documents.Section" /> element on the clipboard.</summary>
      <returns>true to indicate that a trailing paragraph break should be included; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Documents.Section.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>true if the <see cref="P:System.Windows.Documents.Section.Blocks" /> property should be serialized; otherwise, false.</returns>
      <param name="manager">A serialization service manager object for this object.</param>
      <exception cref="T:System.NullReferenceException">Raised when <paramref name="manager" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Documents.Span">
      <summary>Groups other <see cref="T:System.Windows.Documents.Inline" /> flow content elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Span" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span" /> class with the specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents.</summary>
      <param name="childInline">The initial contents of the new <see cref="T:System.Windows.Documents.Span" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Span" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object that specifies the initial contents of the new <see cref="T:System.Windows.Documents.Span" />. This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies the position at which to insert the <see cref="T:System.Windows.Documents.Span" /> element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span" /> class, taking two <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a selection of content that the new <see cref="T:System.Windows.Documents.Span" /> will contain.</summary>
      <param name="start">A <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the beginning of a selection of content that the new <see cref="T:System.Windows.Documents.Span" /> will contain.</param>
      <param name="end">A <see cref="T:System.Windows.Documents.TextPointer" /> that indicates the end of a selection of content that the new <see cref="T:System.Windows.Documents.Span" /> will contain.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="start" /> or <paramref name="end" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Span" /> element; for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="P:System.Windows.Documents.Span.Inlines">
      <summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Span" />.</summary>
      <returns>An <see cref="T:System.Windows.Documents.InlineCollection" /> containing the <see cref="T:System.Windows.Documents.Inline" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Span" />.This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.Span.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Returns a value that indicates whether the content of a <see cref="T:System.Windows.Documents.Span" /> element should be serialized during serialization of a <see cref="T:System.Windows.Documents.Run" /> object.</summary>
      <returns>true if the content should be serialized; otherwise, false.</returns>
      <param name="manager">A serialization service manager object for this object.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Documents.Table">
      <summary>A block-level flow content element that provides a grid-based presentation organized by rows and columns.</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Table" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.BeginInit"></member>
    <member name="P:System.Windows.Documents.Table.CellSpacing">
      <summary>Gets or sets the amount of spacing between cells in a table.  </summary>
      <returns>The amount of spacing between cells in a table, in device independent pixels.The default value is 2.0.</returns>
    </member>
    <member name="F:System.Windows.Documents.Table.CellSpacingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Table.CellSpacing" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Table.CellSpacing" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.Columns">
      <summary>Gets a <see cref="T:System.Windows.Documents.TableColumnCollection" /> object that contains the columns hosted by the table.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TableColumnCollection" /> object that contains the columns (represented by <see cref="T:System.Windows.Documents.TableColumn" /> objects) hosted by the table. Note that this number might not be the actual number of columns rendered in the table. It is the <see cref="T:System.Windows.Documents.TableCell" /> objects in a table that determine how many columns are actually rendered.This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.EndInit"></member>
    <member name="P:System.Windows.Documents.Table.LogicalChildren">
      <summary>Gets an enumerator that can be used to iterate the logical children of the <see cref="T:System.Windows.Documents.Table" />.</summary>
      <returns>An enumerator for the logical children of the <see cref="T:System.Windows.Documents.Table" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.Table" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.Table" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.RowGroups">
      <summary>Gets a <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> collection object that contains the row groups hosted by the table.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> collection object that contains the row groups (represented by <see cref="T:System.Windows.Documents.TableRowGroup" /> objects) hosted by the table.This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.ShouldSerializeColumns">
      <summary>Gets a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.Table.Columns" /> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.Table" /> object.</summary>
      <returns>true if the <see cref="P:System.Windows.Documents.Table.Columns" /> property should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.TableCell">
      <summary>A flow content element that defines a cell of content within a <see cref="T:System.Windows.Documents.Table" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.TableCell" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor(System.Windows.Documents.Block)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TableCell" /> class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.TableCell" />.</summary>
      <param name="blockItem">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.TableCell" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Blocks">
      <summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableCell" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableCell" />This property has no default value.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderBrush">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.  </summary>
      <returns>The brush used to apply to the element's border.The default value is a null brush.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderThickness">
      <summary>Gets or sets the border thickness for the element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of border to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.ColumnSpan">
      <summary>Gets or sets the number of columns that the <see cref="T:System.Windows.Documents.TableCell" /> should span.  </summary>
      <returns>The number of columns the <see cref="T:System.Windows.Documents.TableCell" /> should span.The default value is 1 (no spanning).</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.ColumnSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.FlowDirection">
      <summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.TableCell" /> element.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FlowDirection" /> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.TableCell" /> element to re-flow in the indicated direction.The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.FlowDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineHeight">
      <summary>Gets or sets the height of each line of content.  </summary>
      <returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> must be equal to or greater than 0.0034 and equal to or less then 160000.A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "Auto") causes the line height to be determined automatically from the current font characteristics.  The default value is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> to a non-positive value.</exception>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineStackingStrategy">
      <summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.TableCell" />.  </summary>
      <returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.TableCell" />. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineStackingStrategyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" />  dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCell.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.TableCell" />.</summary>
      <returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for this <see cref="T:System.Windows.Documents.TableCell" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Padding">
      <summary>Gets or sets the padding thickness for the element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of padding to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.PaddingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.Padding" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.RowSpan">
      <summary>Gets or sets the number of rows that the <see cref="T:System.Windows.Documents.TableCell" /> should span.  </summary>
      <returns>The number of rows the <see cref="T:System.Windows.Documents.TableCell" /> should span.The default value is 1 (no spanning).</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.RowSpanProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.TextAlignment">
      <summary>Gets or sets a value that indicates the horizontal alignment of text content.  </summary>
      <returns>A member of the <see cref="T:System.Windows.TextAlignment" /> enumerations specifying the desired alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.TextAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.TableCellCollection">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableCell" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)">
      <summary>Appends a specified <see cref="T:System.Windows.Documents.TableCell" /> to the collection of table cells.</summary>
      <param name="item">The <see cref="T:System.Windows.Documents.TableCell" /> to append to the collection of table cells.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="item" /> already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Capacity">
      <summary>Gets or sets the preallocated collection item capacity for this collection.</summary>
      <returns>The preallocated collection item capacity for this collection. The default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <returns>true if the specified <paramref name="item" /> is present in the collection; otherwise, false.</returns>
      <param name="item">An item to query for the presence of in the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied. This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="array" /> includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableCell" />, or if <paramref name="index" /> specifies a position that falls outside the bounds of <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableCell" /> array of starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableCell" /> array to which the collection contents will be copied. This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in <paramref name="array" /> that specifies the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="array" /> includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableCell" />, or if <paramref name="index" /> specifies a position that falls outside of the bounds of <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Count">
      <summary>Gets the number of items currently contained by the collection.</summary>
      <returns>The number of items currently contained by the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)">
      <summary>Returns the zero-based index of specified collection item.</summary>
      <returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
      <param name="item">A collection item to return the index of.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)">
      <summary>Inserts a specified item in the collection at a specified index position.</summary>
      <param name="index">A zero-based index that specifies the position in the collection at which to insert <paramref name="item" />.</param>
      <param name="item">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)">
      <summary>Gets or sets the collection item at a specified index. This is an indexed property.</summary>
      <returns>The collection item at the specified index.</returns>
      <param name="index">A zero-based index that specifies the position of the collection item.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)">
      <summary>Removes a specified item from the collection.</summary>
      <returns>true if the specified item was found and removed; otherwise, false.</returns>
      <param name="item">An item to remove from the collection.</param>
      <exception cref="T:System.ArgumentException">Raised if <paramref name="item" /> is not present in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)">
      <summary>Removes an item, specified by index, from the collection.</summary>
      <param name="index">A zero-based index that specifies the collection item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
      <param name="index">A zero-based index that indicates the beginning of a range of items to remove.</param>
      <param name="count">The number of items to remove, beginning from the position specified by <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when <paramref name="index" /> or <paramref name="count" /> is less than zero, or when <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Documents.TableCellCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Documents.TableCellCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Documents.TableCellCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Documents.TableCellCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.TrimToSize">
      <summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> equal to the <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> of items currently in the collection.</summary>
    </member>
    <member name="T:System.Windows.Documents.TableColumn">
      <summary>A flow content element that defines a column within a <see cref="T:System.Windows.Documents.Table" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TableColumn" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Background">
      <summary>Gets or sets the background <see cref="T:System.Windows.Media.Brush" /> used to fill the content of the <see cref="T:System.Windows.Documents.TableColumn" />.  </summary>
      <returns>The background <see cref="T:System.Windows.Media.Brush" /> used to fill the content of the <see cref="T:System.Windows.Documents.TableColumn" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableColumn.Background" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableColumn.Background" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Width">
      <summary>Gets or sets the width of a <see cref="T:System.Windows.Documents.TableColumn" /> element. The <see cref="P:System.Windows.Documents.TableColumn.Width" /> property measures the sum of the <see cref="T:System.Windows.Documents.TableColumn" /> content, padding, and border from side to side.  </summary>
      <returns>The width of the <see cref="T:System.Windows.Documents.TableColumn" /> element, as a <see cref="T:System.Windows.GridLength" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.WidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TableColumn.Width" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TableColumn.Width" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Documents.TableColumnCollection">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableColumn" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)">
      <summary>Appends a specified item to the collection.</summary>
      <param name="item">A table column to append to the collection of columns.</param>
      <exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Capacity">
      <summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
      <returns>The pre-allocated collection item capacity for this collection.  The default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <returns>true if the specified item is present in the collection; otherwise, false.</returns>
      <param name="item">An item to query for the presence of in the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableColumn" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Windows.Documents.TableColumn[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableColumn" /> array of starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableColumn" /> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableColumn" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Count">
      <summary>Gets the number of items currently contained by the collection.</summary>
      <returns>The number of items currently contained by the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)">
      <summary>Returns the zero-based index of specified collection item.</summary>
      <returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
      <param name="item">A collection item to return the index of.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)">
      <summary>Inserts a specified item in the collection at a specified index position.</summary>
      <param name="index">A zero-based index that specifies the position in the collection at which to insert item.</param>
      <param name="item">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Item(System.Int32)">
      <summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
      <returns>The collection item at the specified index.</returns>
      <param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)">
      <summary>Removes a specified item from the collection.</summary>
      <returns>true if the specified item was found and removed; otherwise, false.</returns>
      <param name="item">An item to remove from the collection.</param>
      <exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)">
      <summary>Removes an item, specified by index, from the collection.</summary>
      <param name="index">A zero-based index that specifies the collection item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
      <param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
      <param name="count">The number of items to remove, beginning from the position specified by index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)" /> method instead.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Clear" /> method instead.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)" /> method instead.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Documents.TableColumnCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)" /> method instead.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)" /> method instead.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Documents.TableCellCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Documents.TableColumnCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />. Use the type-safe <see cref="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)" /> property instead.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />, <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" />, or <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> methods instead.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Documents.TableColumnCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />. Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />, <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" />, or <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> methods instead.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.TrimToSize">
      <summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableColumnCollection.Capacity" /> equal to the <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> of items currently in the collection.</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRow">
      <summary>A flow content element that defines a row within a <see cref="T:System.Windows.Documents.Table" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRow.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.TableRow" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableRow.Cells">
      <summary>Gets a <see cref="T:System.Windows.Documents.TableCellCollection" /> that contains cells of a <see cref="T:System.Windows.Documents.TableRow" />. </summary>
      <returns>A collection of child cells.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.ShouldSerializeCells">
      <summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.TableRow.Cells" /> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.TableRow" /> object.</summary>
      <returns>true if the <see cref="P:System.Windows.Documents.TableRow.Cells" /> property should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the <see cref="P:System.Windows.Documents.TableRow.Cells" /> property to add child <see cref="T:System.Windows.Documents.TableCell" /> elements to a <see cref="T:System.Windows.Documents.TableRow" />.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.TableRowCollection">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableRow" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Add(System.Windows.Documents.TableRow)">
      <summary>Appends a specified item to the collection.</summary>
      <param name="item">A table row to append to the collection or rows.</param>
      <exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Capacity">
      <summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
      <returns>The pre-allocated collection item capacity for this collection.  The default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Contains(System.Windows.Documents.TableRow)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <returns>true if the specified item is present in the collection; otherwise, false.</returns>
      <param name="item">An item to query for the presence of in the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRow" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Windows.Documents.TableRow[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableRow" /> array of starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableRow" /> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRow" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Count">
      <summary>Gets the number of items currently contained by the collection.</summary>
      <returns>The number of items currently contained by the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.IndexOf(System.Windows.Documents.TableRow)">
      <summary>Returns the zero-based index of specified collection item.</summary>
      <returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
      <param name="item">A collection item to return the index of.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Insert(System.Int32,System.Windows.Documents.TableRow)">
      <summary>Inserts a specified item in the collection at a specified index position.</summary>
      <param name="index">A zero-based index that specifies the position in the collection at which to insert item.</param>
      <param name="item">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Item(System.Int32)">
      <summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
      <returns>The collection item at the specified index.</returns>
      <param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Remove(System.Windows.Documents.TableRow)">
      <summary>Removes a specified item from the collection.</summary>
      <returns>true if the specified item was found and removed; otherwise, false.</returns>
      <param name="item">An item to remove from the collection.</param>
      <exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveAt(System.Int32)">
      <summary>Removes an item, specified by index, from the collection.</summary>
      <param name="index">A zero-based index that specifies the collection item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
      <param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
      <param name="count">The number of items to remove, beginning form the position specified by index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Documents.TableRowCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Documents.TableRowCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Documents.TableRowCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Documents.TableRowCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the item to remove. </param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.TrimToSize">
      <summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableRowCollection.Capacity" /> equal to the <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> of items currently in the collection.</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroup">
      <summary>Represents a flow content element used to group <see cref="T:System.Windows.Documents.TableRow" /> elements within a <see cref="T:System.Windows.Documents.Table" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TableRowGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroup.Rows">
      <summary>Gets a <see cref="T:System.Windows.Documents.TableRowCollection" /> that contains the <see cref="T:System.Windows.Documents.TableRow" /> objects that comprise the contents of the <see cref="T:System.Windows.Documents.TableRowGroup" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TableRowCollection" /> that contains the <see cref="T:System.Windows.Documents.TableRow" /> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableRowGroup" />. This property has no default value.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.ShouldSerializeRows">
      <summary>Indicates whether the <see cref="P:System.Windows.Documents.TableRowGroup.Rows" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a table row to the <see cref="T:System.Windows.Documents.TableRowGroup" /> collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Documents.TableRow" /> to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroupCollection">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableRowGroup" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Add(System.Windows.Documents.TableRowGroup)">
      <summary>Appends a specified item to the collection.</summary>
      <param name="item">An item to append to the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Capacity">
      <summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
      <returns>The pre-allocated collection item capacity for this collection.  The default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Contains(System.Windows.Documents.TableRowGroup)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <returns>true if the specified item is present in the collection; otherwise, false.</returns>
      <param name="item">An item to query for the presence of in the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRowGroup" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Windows.Documents.TableRowGroup[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableRowGroup" /> array of starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableRowGroup" /> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRowGroup" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Count">
      <summary>Gets the number of items currently contained by the collection.</summary>
      <returns>The number of items currently contained by the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.IndexOf(System.Windows.Documents.TableRowGroup)">
      <summary>Returns the zero-based index of specified collection item.</summary>
      <returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
      <param name="item">A collection item to return the index of.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Insert(System.Int32,System.Windows.Documents.TableRowGroup)">
      <summary>Inserts a specified item in the collection at a specified index position.</summary>
      <param name="index">A zero-based index that specifies the position in the collection at which to insert item.</param>
      <param name="item">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Currently, this property always returns false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Item(System.Int32)">
      <summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
      <returns>The collection item at the specified index.</returns>
      <param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Remove(System.Windows.Documents.TableRowGroup)">
      <summary>Removes a specified item from the collection.</summary>
      <returns>true if the specified item was found and removed; otherwise, false.</returns>
      <param name="item">An item to remove from the collection.</param>
      <exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveAt(System.Int32)">
      <summary>Removes an item, specified by index, from the collection.</summary>
      <param name="index">A zero-based index that specifies the collection item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
      <param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
      <param name="count">The number of items to remove, beginning form the position specified by index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Documents.TableRowGroupCollection" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the item to remove. </param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.TrimToSize">
      <summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableRowGroupCollection.Capacity" /> equal to the <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> of items currently in the collection.</summary>
    </member>
    <member name="T:System.Windows.Documents.TextEffectResolver">
      <summary> A helper class that sets text effects in a text container </summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectResolver.Resolve(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer,System.Windows.Media.TextEffect)">
      <summary> Resolves text effect on a text range to a list of text effect targets. </summary>
      <returns>Collection of <see cref="T:System.Windows.Documents.TextEffectTarget" /> objects corresponding to the text range.</returns>
      <param name="startPosition">The starting text pointer</param>
      <param name="endPosition">The end text pointer</param>
      <param name="effect">The effect to apply on the text</param>
    </member>
    <member name="T:System.Windows.Documents.TextEffectTarget">
      <summary>Result from using <see cref="T:System.Windows.Documents.TextEffectResolver" /> to set an effect on text. This consists of the <see cref="T:System.Windows.Media.TextEffect" /> created and the <see cref="T:System.Windows.DependencyObject" /> to which the <see cref="T:System.Windows.Media.TextEffect" /> should be set. </summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Disable">
      <summary> Disables the <see cref="T:System.Windows.Media.TextEffect" /> on the effect target. </summary>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.Element">
      <summary> Gets the <see cref="T:System.Windows.DependencyObject" /> that the <see cref="T:System.Windows.Media.TextEffect" /> is targeting. </summary>
      <returns>The <see cref="T:System.Windows.DependencyObject" /> that the <see cref="T:System.Windows.Media.TextEffect" /> is targeting. </returns>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Enable">
      <summary>Enables the <see cref="T:System.Windows.Media.TextEffect" /> on the target text. </summary>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.IsEnabled">
      <summary>Gets a value that determines whether the text effect is enabled on the target element </summary>
      <returns>true if the <see cref="T:System.Windows.Media.TextEffect" />is enabled on the target; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.TextEffect">
      <summary> Gets the <see cref="T:System.Windows.Media.TextEffect" /> of the <see cref="T:System.Windows.Documents.TextEffectTarget" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.TextEffect" /> of the <see cref="T:System.Windows.Documents.TextEffectTarget" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElement">
      <summary>An abstract class used as the base class for the abstract <see cref="T:System.Windows.Documents.Block" /> and <see cref="T:System.Windows.Documents.Inline" /> classes.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Background">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to fill the background of the content area.  </summary>
      <returns>The brush used to fill the background of the content area, or null to not use a background brush. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.BackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.Background" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the content in the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the end of the content in the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the start of content in the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointerContext" /> that represents the start of the content in the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just after the end of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just after the end of the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> that represents the position just before the start of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointerContext" /> that represents the position just before the start of the <see cref="T:System.Windows.Documents.TextElement" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontFamily">
      <summary>Gets or sets the preferred top-level font family for the content of the element.  </summary>
      <returns>A <see cref="T:System.Windows.Media.FontFamily" /> object that specifies the preferred font family, or a primary preferred font family with one or more fallback font families. The default is the font determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontSize">
      <summary>Gets or sets the font size for the content of the element.  </summary>
      <returns>The desired font size to use in device independent pixels,  greater than 0.001 and less than or equal to 35791.  The default depends on current system settings and depends on the <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> value.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> is set to a value greater than 35791 or less than or equal to 0.001.</exception>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStretch">
      <summary>Gets or sets the font-stretching characteristics for the content of the element.  </summary>
      <returns>A <see cref="T:System.Windows.FontStretch" /> structure that specifies the desired font-stretching characteristics to use. The default is <see cref="P:System.Windows.FontStretches.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStyle">
      <summary>Gets or sets the font style for the content of the element.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FontStyles" /> class that specifies the desired font style. The default is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontWeight">
      <summary>Gets or sets the top-level font weight for the content of the element.  </summary>
      <returns>A member of the <see cref="T:System.Windows.FontWeights" /> class that specifies the desired font weight. The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> value.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the content of the element.  </summary>
      <returns>The brush used to apply to the text contents. The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElement.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical children of the element.</summary>
      <returns>An enumerator for the logical children.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Handles notifications that one or more of the dependency properties that exist on the element have had their effective values changed. </summary>
      <param name="e">Arguments associated with the property value change.  The <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.Property" /> property specifies which property has changed, the <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" /> property specifies the previous property value, and the <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" /> property specifies the new property value.</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text"></param>
    </member>
    <member name="P:System.Windows.Documents.TextElement.TextEffects">
      <summary>Gets or sets a collection of text effects to apply to the content of the element.  </summary>
      <returns>A <see cref="T:System.Windows.Media.TextEffectCollection" /> containing one or more <see cref="T:System.Windows.Media.TextEffect" /> objects that define effects to apply to the content in this element. The default is null (not an empty collection).</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.TextEffectsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.TextEffects" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.TextEffects" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Typography">
      <summary>Gets the currently effective typography variations for the content of the element.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations. For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElementCollection`1">
      <summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TextElement" /> objects.  This is a generic collection for working with objects of a specified type that derives from <see cref="T:System.Windows.Documents.TextElement" />.</summary>
      <typeparam name="TextElementType">Type specifier for the generic collection.  Acceptable types are constrained to a type of <see cref="T:System.Windows.Documents.TextElement" /> or a descendant of <see cref="T:System.Windows.Documents.TextElement" />.</typeparam>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Add(`0)">
      <summary>Appends a specified item to the collection.</summary>
      <param name="item">An item to append to the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)">
      <summary>Appends a specified range of items to the collection.</summary>
      <param name="range">An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface, and that specifies a range of items to add to the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when range includes any null items.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when range is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Clear">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)">
      <summary>Queries for the presence of a specified item in the collection.</summary>
      <returns>true if the specified item is present in the collection; otherwise, false.</returns>
      <param name="item">An item to query for the presence of in the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
      <param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
      <param name="arrayIndex">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
      <exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TextElement" />, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.Count">
      <summary>Gets the number of items currently in the collection.</summary>
      <returns>The number of items currently in the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator">
      <summary>Returns an enumerator for the contents of the collection.</summary>
      <returns>An enumerator for the contents of the collection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)">
      <summary>Inserts a specified item in the collection after a specified collection item.</summary>
      <param name="previousSibling">An item in the collection after which the new item will be inserted.</param>
      <param name="newItem">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when newItem already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when previousSibling or newItem is null.</exception>
      <exception cref="T:System.InvalidOperationException">Raised when previousSibling does not belong to this collection.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)">
      <summary>Inserts a specified item in the collection before a specified collection item.</summary>
      <param name="nextSibling">An item in the collection before which the new item will be inserted.</param>
      <param name="newItem">An item to insert into the collection.</param>
      <exception cref="T:System.ArgumentException">Raised when newItem already belongs to a collection.</exception>
      <exception cref="T:System.ArgumentNullException">Raised when nextSibling or newItem is null.</exception>
      <exception cref="T:System.InvalidOperationException">Raised when nextSibling does not belong to this collection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.IsReadOnly">
      <summary>Gets a value that indicates whether or not the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)">
      <summary>Removes a specified item from the collection.</summary>
      <returns>true if the specified item was found and removed; otherwise, false.</returns>
      <param name="item">An item to be removed fro the collection.</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)" /> method instead.</summary>
      <param name="array"></param>
      <param name="arrayIndex"></param>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="P:System.Windows.Documents.TextElementCollection`1.Count" /> property instead.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator" /> method instead.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Add(`0)" /> method instead.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Clear" /> method instead.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)" /> method instead.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)" /> or <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)" /> methods instead.</summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)" /> method instead.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)" /> method instead.</summary>
      <param name="index"></param>
    </member>
    <member name="T:System.Windows.Documents.TextElementEditingBehaviorAttribute">
      <summary>Specifies how a <see cref="T:System.Windows.Controls.RichTextBox" /> should handle a custom text element.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.RichTextBox" /> can merge two adjacent text elements.</summary>
      <returns>true if a <see cref="T:System.Windows.Controls.RichTextBox" /> is free to merge adjacent custom text elements that have identical property values; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly">
      <summary>Gets or sets a value indicating whether the text element provides formatting on a character basis, or if the formatting applies to the entire element. </summary>
      <returns>true if formatting should apply to the individual characters; false if the formatting should apply to the entire element.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextPointer">
      <summary>Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
      <summary>Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <returns>–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.  </returns>
      <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> specifies a position outside of the text container associated with the current position.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
      <summary>Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <returns>The number of characters actually deleted.</returns>
      <param name="count">The number of characters to delete, starting at the current position. Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</param>
      <exception cref="T:System.InvalidOperationException">The method is called at a position where text is not allowed.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentEnd">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentStart">
      <summary>Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
      <summary>Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction. </summary>
      <returns>The adjacent element in the specified <paramref name="direction" />, or null if no adjacent element exists.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</summary>
      <returns>A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or null if the specified line is out of range or otherwise cannot be located.</returns>
      <param name="count">The number of start-of-line markers to skip when determining the line for which to return the starting position. Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</returns>
      <param name="count">The number of start-of-line markers to skip when determining the line for which to return the starting position. Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</param>
      <param name="actualCount">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.  This value may be less than <paramref name="count" /> if the beginning or end of content is encountered before the specified number of lines are skipped. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a pointer to the next symbol in the specified logical direction.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or null if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or null if no next insertion position can be found.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
      <summary>Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <returns>The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.  A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</returns>
      <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> specifies a position outside of the text container associated with the current position.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</summary>
      <returns>One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or null if no corresponding position can be found.</returns>
      <param name="offset">An offset, in symbols, for which to calculate and return the position.  If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or null if the offset extends past the end of the content.</returns>
      <param name="offset">An offset, in symbols, for which to calculate and return the position.  If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</param>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
      <summary>Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</summary>
      <returns>A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
      <summary>Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</summary>
      <returns>The number of characters actually copied into <paramref name="textBuffer" />.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</param>
      <param name="textBuffer">A buffer into which any text is copied.</param>
      <param name="startIndex">An index into <paramref name="textBuffer" /> at which to begin writing copied text.</param>
      <param name="count">The maximum number of characters to copy.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />. -or-<paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /> minus <paramref name="startIndex" />).</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
      <summary>Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</summary>
      <returns>The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.  This number may be 0 if there is no adjacent text.</returns>
      <param name="direction">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</param>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.HasValidLayout">
      <summary>Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</summary>
      <returns>true if the layout is current and valid; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertLineBreak">
      <summary>Inserts a line break at the current position.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
      <summary>Inserts a paragraph break at the current position.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</returns>
      <exception cref="T:System.InvalidOperationException">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />. </exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
      <summary>Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</summary>
      <param name="textData">The text to insert.</param>
      <exception cref="T:System.InvalidOperationException">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textData" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
      <summary>Gets a value that indicates whether the current position is an insertion position.</summary>
      <returns>true if the current position is an insertion position; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
      <summary>Gets a value that indicates whether the current position is at the beginning of a line.</summary>
      <returns>true if the current position is at the beginning of a line; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
      <summary>Indicates whether the specified position is in the same text container as the current position.</summary>
      <returns>true if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, false.</returns>
      <param name="textPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textPosition" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
      <summary>Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</summary>
      <returns>The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Paragraph">
      <summary>Gets the paragraph that scopes the current position, if any.</summary>
      <returns>The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or null if no such paragraph exists.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Parent">
      <summary>Gets the logical parent that scopes the current position.</summary>
      <returns>The logical parent that scopes the current position.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.ToString">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The string that represents the object.</returns>
    </member>
    <member name="T:System.Windows.Documents.TextPointerContext">
      <summary>Determines the category of content that is adjacent to a <see cref="T:System.Windows.Documents.TextPointer" /> in a specified <see cref="T:System.Windows.Documents.LogicalDirection" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.None">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to the beginning or end of content.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.Text">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to text.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.EmbeddedElement">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to an embedded <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementStart">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to the opening tag of a <see cref="T:System.Windows.Documents.TextElement" />.</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementEnd">
      <summary>The <see cref="T:System.Windows.Documents.TextPointer" /> is adjacent to the closing tag of a <see cref="T:System.Windows.Documents.TextElement" />.</summary>
    </member>
    <member name="T:System.Windows.Documents.TextRange">
      <summary>Represents a selection of content between two <see cref="T:System.Windows.Documents.TextPointer" /> positions.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TextRange" /> class, taking two specified <see cref="T:System.Windows.Documents.TextPointer" /> positions as the beginning and end positions for the new range.</summary>
      <param name="position1">A fixed anchor position that marks one end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange" />.</param>
      <param name="position2">A movable position that marks the other end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange" />.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="position1" /> and <paramref name="position2" /> are not positioned within the same document.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="position1" /> or <paramref name="position2" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Applies a specified formatting property and value to the current selection.</summary>
      <param name="formattingProperty">A formatting property to apply.</param>
      <param name="value">The value for the formatting property.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="formattingProperty" /> does not specify a valid formatting property, or <paramref name="value" /> specifies an invalid value for <paramref name="formattingProperty" />.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="formattingProperty" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanLoad(System.String)">
      <summary>Checks whether the current selection can be loaded with content in a specified data format.</summary>
      <returns>true if the current selection can be loaded with content in the specified data format; otherwise, false.</returns>
      <param name="dataFormat">A data format to check for load-compatibility into the current selection.  See <see cref="T:System.Windows.DataFormats" /> for a list of predefined data formats.</param>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanSave(System.String)">
      <summary>Checks whether the current selection can be saved as a specified data format.</summary>
      <returns>true if the current selection can be saved as the specified data format; otherwise, false.</returns>
      <param name="dataFormat">A data format to check for save compatibility with the current selection.  See <see cref="T:System.Windows.DataFormats" /> for a list of predefined data formats.</param>
    </member>
    <member name="E:System.Windows.Documents.TextRange.Changed">
      <summary>Occurs when the range is repositioned to cover a new span of content.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ClearAllProperties">
      <summary>Removes all formatting properties (represented by <see cref="T:System.Windows.Documents.Inline" /> elements) from the current selection.</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)">
      <summary>Checks whether a position (specified by a <see cref="T:System.Windows.Documents.TextPointer" />) is located within the current selection.</summary>
      <returns>true if the specified position is located within the current selection; otherwise, false.</returns>
      <param name="textPointer">A position to test for inclusion in the current selection.</param>
      <exception cref="T:System.ArgumentException">Occurs when textPointer is not in the same document as the current selection.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.End">
      <summary>Get the position that marks the end of the current selection.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that points to the end of the current selection.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)">
      <summary>Returns the effective value of a specified formatting property on the current selection.</summary>
      <returns>An object specifying the value of the specified formatting property.</returns>
      <param name="formattingProperty">A formatting property to get the value of with respect to the current selection.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="formattingProperty" /> does not specify a valid formatting property, or <paramref name="value" /> specifies an invalid value for <paramref name="formattingProperty" />.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="formattingProperty" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.IsEmpty">
      <summary>Gets a value indicating whether or not the current selection is empty.</summary>
      <returns>true if the current selection is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)">
      <summary>Loads the current selection in a specified data format from a specified stream.</summary>
      <param name="stream">A readable stream that contains data to load into the current selection.</param>
      <param name="dataFormat">A data format to load the data as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="stream" /> or <paramref name="dataFormat" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Occurs when the specified data format is unsupported.  May also be raised if content loaded from <paramref name="stream" /> does not match the specified data format.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)">
      <summary>Saves the current selection to a specified stream in a specified data format.</summary>
      <param name="stream">An empty, writable stream to save the current selection to.</param>
      <param name="dataFormat">A data format to save the current selection as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="dataFormat" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The specified data format is unsupported.-orContent loaded from <paramref name="stream" /> does not match the specified data format.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)">
      <summary>Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <see cref="T:System.Windows.Documents.TextElement" /> objects.</summary>
      <param name="stream">An empty, writable stream to save the current selection to.</param>
      <param name="dataFormat">A data format to save the current selection as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
      <param name="preserveTextElements">true to preserve custom <see cref="T:System.Windows.Documents.TextElement" /> objects; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="stream" /> or <paramref name="dataFormat" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Occurs when the specified data format is unsupported.  May also be raised if content loaded from <paramref name="stream" /> does not match the specified data format.</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Updates the current selection, taking two <see cref="T:System.Windows.Documents.TextPointer" /> positions to indicate the updated selection.</summary>
      <param name="position1">A fixed anchor position that marks one end of the updated selection.</param>
      <param name="position2">A movable position that marks the other end of the updated selection.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="position1" /> and <paramref name="position2" /> are not positioned within the same document.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs when <paramref name="position1" /> or <paramref name="position2" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Start">
      <summary>Gets the position that marks the beginning of the current selection.</summary>
      <returns>A <see cref="T:System.Windows.Documents.TextPointer" /> that points to the beginning of the current selection.</returns>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Text">
      <summary>Gets or sets the plain text contents of the current selection.</summary>
      <returns>A string containing the plain text contents of the current selection.</returns>
      <exception cref="T:System.ArgumentNullException">Occurs when an attempt is made to set this property to null.</exception>
    </member>
    <member name="T:System.Windows.Documents.TextSelection">
      <summary>Encapsulates the selection state for the <see cref="T:System.Windows.Controls.RichTextBox" /> control.</summary>
    </member>
    <member name="T:System.Windows.Documents.Typography">
      <summary>Provides access to a rich set of OpenType typography properties.</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.AnnotationAlternates">
      <summary>Gets or sets a value that specifies the index of an alternate annotation form. </summary>
      <returns>The index of the alternate annotation form. The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.AnnotationAlternatesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Capitals">
      <summary>Gets or sets a <see cref="T:System.Windows.FontCapitals" /> enumerated value that indicates the capital form of the selected font. </summary>
      <returns>A <see cref="T:System.Windows.FontCapitals" /> enumerated value. The default value is <see cref="F:System.Windows.FontCapitals.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CapitalSpacing">
      <summary>Gets or sets a value that determines whether inter-glyph spacing for all-capital text is globally adjusted to improve readability. </summary>
      <returns>true if spacing is adjusted; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalSpacingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CaseSensitiveForms">
      <summary>Gets or sets a value that determines whether glyphs adjust their vertical position to better align with uppercase glyphs. </summary>
      <returns>true if the vertical position is adjusted; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CaseSensitiveFormsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualAlternates">
      <summary>Gets or sets a value that determines whether custom glyph forms can be used based upon the context of the text being rendered. </summary>
      <returns>true if custom glyph forms can be used; otherwise, false. The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualAlternatesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualLigatures">
      <summary>Gets or sets a value that determines whether contextual ligatures are enabled. </summary>
      <returns>true if contextual ligatures are enabled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualLigaturesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualSwashes">
      <summary>Gets or sets a value that specifies the index of a contextual swashes form. </summary>
      <returns>The index of the standard swashes form. The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualSwashesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.DiscretionaryLigatures">
      <summary>Gets or sets a value that determines whether discretionary ligatures are enabled. </summary>
      <returns>true if discretionary ligatures are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianExpertForms">
      <summary>Gets or sets a value that determines whether the standard Japanese font forms have been replaced with the corresponding preferred typographic forms. </summary>
      <returns>true if standard Japanese font forms have been replaced with the corresponding preferred typographic forms; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianExpertFormsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianLanguage">
      <summary>Gets or sets a <see cref="T:System.Windows.FontEastAsianLanguage" /> enumerated value that indicates the version of glyphs to be used for a specific writing system or language. </summary>
      <returns>A <see cref="T:System.Windows.FontEastAsianLanguage" /> enumerated value. The default value is <see cref="F:System.Windows.FontEastAsianLanguage.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianLanguageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianWidths">
      <summary>Gets or sets a <see cref="T:System.Windows.FontEastAsianWidths" /> enumerated value that indicates the proportional width to be used for Latin characters in an East Asian font. </summary>
      <returns>A <see cref="T:System.Windows.FontEastAsianWidths" /> enumerated value. The default value is <see cref="F:System.Windows.FontEastAsianWidths.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianWidthsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Fraction">
      <summary>Gets or sets a <see cref="T:System.Windows.FontFraction" /> enumerated value that indicates the fraction style. </summary>
      <returns>A <see cref="T:System.Windows.FontFraction" /> enumerated value. The default value is <see cref="F:System.Windows.FontFraction.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.FractionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetAnnotationAlternates(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> property.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitals(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitalSpacing(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCaseSensitiveForms(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualAlternates(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualLigatures(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualSwashes(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetDiscretionaryLigatures(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianExpertForms(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianLanguage(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianWidths(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetFraction(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalForms(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalLigatures(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetKerning(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetMathematicalGreek(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralAlignment(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralStyle(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetSlashedZero(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardLigatures(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardSwashes(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticAlternates(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet1(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet10(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet11(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet12(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet13(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet14(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet15(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet16(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet17(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet18(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet19(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet2(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet20(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet3(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet4(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet5(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet6(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet7(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet8(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet9(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> property.</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetVariants(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property on the specified dependency object.</returns>
      <param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> property.</param>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalForms">
      <summary>Gets or sets a value that determines whether historical forms are enabled. </summary>
      <returns>true if historical forms are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalFormsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalLigatures">
      <summary>Gets or sets a value that indicates whether historical ligatures are enabled. </summary>
      <returns>true if historical ligatures are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalLigaturesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Kerning">
      <summary>Gets or sets a value that indicates whether kerning is enabled. </summary>
      <returns>true if kerning is enabled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.KerningProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.MathematicalGreek">
      <summary>Gets or sets a value that indicates whether standard typographic font forms of Greek glyphs have been replaced with corresponding font forms commonly used in mathematical notation. </summary>
      <returns>true if mathematical Greek forms are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.MathematicalGreekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralAlignment">
      <summary>Gets or sets a <see cref="T:System.Windows.FontNumeralAlignment" /> enumerated value that indicates the alighnment of widths when using numerals. </summary>
      <returns>A <see cref="T:System.Windows.FontNumeralAlignment" /> enumerated value. The default value is <see cref="F:System.Windows.FontNumeralAlignment.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralAlignmentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralStyle">
      <summary>Gets or sets a <see cref="T:System.Windows.FontNumeralStyle" /> enumerated value that determines the set of glyphs that are used to render numeric alternate font forms. </summary>
      <returns>A <see cref="T:System.Windows.FontNumeralStyle" /> enumerated value. The default value is <see cref="F:System.Windows.FontNumeralStyle.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetAnnotationAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitals(System.Windows.DependencyObject,System.Windows.FontCapitals)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Capitals" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitalSpacing(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCaseSensitiveForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualAlternates(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetDiscretionaryLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianExpertForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianLanguage(System.Windows.DependencyObject,System.Windows.FontEastAsianLanguage)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianWidths(System.Windows.DependencyObject,System.Windows.FontEastAsianWidths)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetFraction(System.Windows.DependencyObject,System.Windows.FontFraction)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Fraction" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetKerning(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Kerning" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetMathematicalGreek(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralAlignment(System.Windows.DependencyObject,System.Windows.FontNumeralAlignment)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralStyle(System.Windows.DependencyObject,System.Windows.FontNumeralStyle)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetSlashedZero(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet1(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet10(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet11(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet12(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet13(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet14(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet15(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet16(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet17(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet18(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet19(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet2(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet20(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet3(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet4(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet5(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet6(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet7(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet8(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet9(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetVariants(System.Windows.DependencyObject,System.Windows.FontVariants)">
      <summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property for a specified dependency object.</summary>
      <param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Variants" /> property.</param>
      <param name="value">The new value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.Typography.SlashedZero">
      <summary>Gets or sets a value that indicates whether a nominal zero font form should be replaced with a slashed zero. </summary>
      <returns>true if slashed zero forms are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.SlashedZeroProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardLigatures">
      <summary>Gets or sets a value that indicates whether standard ligatures are enabled. </summary>
      <returns>true if standard ligatures are enabled; otherwise, false. The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardLigaturesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardSwashes">
      <summary>Gets or sets a value that specifies the index of a standard swashes form. </summary>
      <returns>The index of the standard swashes form. The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardSwashesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticAlternates">
      <summary>Gets or sets a value that specifies the index of a stylistic alternates form. </summary>
      <returns>The index of the stylistic alternates form. The default value is 0 (zero).</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticAlternatesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet1">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet10">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet10Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet11">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet11Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet12">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet12Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet13">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet13Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet14">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet14Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet15">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet15Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet16">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet16Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet17">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet17Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet18">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet18Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet19">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet19Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> attached property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet1Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet2">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet20">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet20Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> attached property.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet2Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet3">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet3Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet4">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet4Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet5">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet5Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet6">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet6Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet7">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet7Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet8">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet8Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet9">
      <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled. </summary>
      <returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet9Property">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Variants">
      <summary>Gets or sets a <see cref="T:System.Windows.FontVariants" /> enumerated value that indicates a variation of the standard typographic form to be used. </summary>
      <returns>A <see cref="T:System.Windows.FontVariants" /> enumerated value. The default value is <see cref="F:System.Windows.FontVariants.Normal" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.VariantsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property.</summary>
      <returns>The identifier for <see cref="P:System.Windows.Documents.Typography.Variants" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Documents.Underline">
      <summary>An inline-level flow content element which causes content to render with an underlined text decoration.</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Underline" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Underline" />.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Underline" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline" /> class, taking a specified <see cref="T:System.Windows.Documents.Inline" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.Underline" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Inline" /> element.</summary>
      <param name="childInline">An <see cref="T:System.Windows.Documents.Inline" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Underline" />.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline" /> is inserted.</param>
      <param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Underline" /> element after it is created, or null for no automatic insertion.</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline" /> class, taking two <see cref="T:System.Windows.Documents.TextPointer" /> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline" />.</summary>
      <param name="start">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline" />.</param>
      <param name="end">A <see cref="T:System.Windows.Documents.TextPointer" /> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline" />.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="start" /> or <paramref name="end" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Raised when <paramref name="start" /> and <paramref name="end" /> do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Underline" /> element, for example, if <paramref name="start" /> and <paramref name="end" /> indicate positions in different paragraphs.</exception>
    </member>
    <member name="T:System.Windows.Documents.ZoomPercentageConverter">
      <summary>Implements a type converter for converting <see cref="T:System.Double" /> (used as the value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />) to and from other types.</summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.ZoomPercentageConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the <see cref="T:System.Double" /> (used as the value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />) to an object of the specified type. </summary>
      <returns>
        <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> when the converter cannot produce a value; for example, when <paramref name="value" /> is null or when <paramref name="targetType" /> is not <see cref="T:System.Double" /> or <see cref="T:System.String" />.- or -The new <see cref="T:System.Object" /> of the designated type. As implemented in this class, this must be either a <see cref="T:System.Double" /> or a <see cref="T:System.String" />. If it is a string, it will be formatted appropriately for the <paramref name="culture" />.</returns>
      <param name="value">The current value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />.</param>
      <param name="targetType">The type to which <paramref name="value" /> is to be converted. This must be <see cref="T:System.Double" /> or <see cref="T:System.String" />. See Remarks.</param>
      <param name="parameter">null. See Remarks.</param>
      <param name="culture">The language and culture assumed during the conversion.</param>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns a previously converted value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> back to a <see cref="T:System.Double" /> that can be assigned to <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />. </summary>
      <returns>
        <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> when the converter cannot produce a value; for example, when <paramref name="value" /> is not a valid percentage when <paramref name="targetType" /> is not <see cref="T:System.Double" /> or <see cref="T:System.String" />.- or -A <see cref="T:System.Double" /> representing the zoom percentage of a <see cref="T:System.Windows.Controls.DocumentViewer" />.</returns>
      <param name="value">The object that is to be converted back to a <see cref="T:System.Double" />. </param>
      <param name="targetType">The type of <paramref name="value" />. This must be <see cref="T:System.Double" /> or <see cref="T:System.String" />. See Remarks.</param>
      <param name="parameter">null. See Remarks.</param>
      <param name="culture">The language and culture assumed during the conversion.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.BlockElement">
      <summary>Do not use.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.BlockElement.#ctor">
      <summary>Do not use. </summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.FigureStructure">
      <summary>Represents a drawing, chart, or diagram in a document. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.FigureStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>Add a named element to the figure.</summary>
      <param name="element">The element to add.</param>
      <exception cref="T:System.ArgumentNullException">The element is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method is not implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value">The child <see cref="T:System.Object" /> to add. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks. </exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListItemStructure">
      <summary>Represents an item in a list or outline. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ListItemStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>Adds a block to a list item.</summary>
      <param name="element">The block to add.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.ListItemStructure.Marker">
      <summary>Gets or sets the name of the numeral, character, or bullet symbol for the list item as it appears in the formatting markup of the document.</summary>
      <returns>A <see cref="T:System.String" /> marking list item.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Not implemented.</summary>
      <param name="text">Not used.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListStructure">
      <summary>Represents a list of items in a document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ListStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.Add(System.Windows.Documents.DocumentStructures.ListItemStructure)">
      <summary>Adds a list item to the list.</summary>
      <param name="listItem">The list item to add.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="listItem" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.NamedElement">
      <summary>Identifies an element within the hierarchy of elements under a <see cref="T:System.Windows.Documents.FixedPage" />.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.NamedElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" /> class.</summary>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.NamedElement.NameReference">
      <summary>Gets or sets the name of the element in the <see cref="T:System.Windows.Documents.FixedPage" /> markup hierarchy that provides the content for the parent of the <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" />. </summary>
      <returns>The name of the element.</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ParagraphStructure">
      <summary>Represents a paragraph in a document. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ParagraphStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>Adds a named element to the paragraph.</summary>
      <param name="element">The element to add.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Not implemented.</summary>
      <param name="text">Not used.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SectionStructure">
      <summary>Represents a section of content in a document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.SectionStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>Adds a block to the section.</summary>
      <param name="element">The block element to add.</param>
      <exception cref="T:System.ArgumentNullException">The element is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>System.Collections.Generic.IEnumerator`1</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>System.Collections.IEnumerator</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SemanticBasicElement">
      <summary>An XML element in the markup for XML Paper Specification (XPS) documents. </summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryBreak">
      <summary>Identifies the start or end of story composed of one or more <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryBreak.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" /> class.</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragment">
      <summary>Represents all or part of a story within an XPS document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>Add a block to the story fragment.</summary>
      <param name="element">The block to add.</param>
      <exception cref="T:System.ArgumentNullException">The block passed is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName">
      <summary>Gets or sets the name of the story fragment. </summary>
      <returns>A <see cref="T:System.String" /> representing the name of this fragment. </returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType">
      <summary>Gets or sets the type of fragment. </summary>
      <returns>A <see cref="T:System.String" /> representing the type of fragment.</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName">
      <summary>Gets or sets the name of the story. </summary>
      <returns>A <see cref="T:System.String" /> representing the name of the story.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragments">
      <summary>Represents a set of one or more <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> elements.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.Add(System.Windows.Documents.DocumentStructures.StoryFragment)">
      <summary>Adds a <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> to the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> collection.</summary>
      <param name="storyFragment">The <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This API is not implemented.</summary>
      <returns>This API is not implemented.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#IEnumerable#GetEnumerator">
      <summary>This API is not implemented.</summary>
      <returns>This API is not implemented.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object to the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" />.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableCellStructure">
      <summary>Represents a cell in a table.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>Adds a block element to the table cell.</summary>
      <param name="element">The element to add.</param>
      <exception cref="T:System.ArgumentNullException">The element is null.</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.ColumnSpan">
      <summary>Gets or sets the number of columns spanned by the cell.</summary>
      <returns>The number of columns that the cell spans. The default is 1.</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.RowSpan">
      <summary>Gets or sets the number of rows spanned by the cell.</summary>
      <returns>The number of rows that the cell spans. The default is 1.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This API is not implemented.</summary>
      <returns>This API is not implemented.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This API is not implemented.</summary>
      <returns>This API is not implemented.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>Adds a child object to the <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" />. </summary>
      <param name="value">The child object to add.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks. </exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>Adds the text content of a node to the object. </summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure">
      <summary>Represents a set of one or more rows in a table.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.Add(System.Windows.Documents.DocumentStructures.TableRowStructure)">
      <summary>Adds a row to the table row group.</summary>
      <param name="tableRow">The row to add.</param>
      <exception cref="T:System.ArgumentNullException">The row is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowStructure">
      <summary>Represents a row of one or more cells in a table.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableRowStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.Add(System.Windows.Documents.DocumentStructures.TableCellStructure)">
      <summary>Adds a cell to a table row.</summary>
      <param name="tableCell">The cell to add.</param>
      <exception cref="T:System.ArgumentNullException">The cell is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableStructure">
      <summary>Represents a table in a document.</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableStructure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.Add(System.Windows.Documents.DocumentStructures.TableRowGroupStructure)">
      <summary>Adds a group of rows to a table.</summary>
      <param name="tableRowGroup">The group of rows to add.</param>
      <exception cref="T:System.ArgumentNullException">The group of rows is null.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>This method has not been implemented.</summary>
      <returns>Always raises <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="value">The child <see cref="T:System.Object" /> that is added.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not one of the types that can be a child of this class. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="text"></param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.ISerializerFactory">
      <summary>Provides a means for creating a software component that can serialize any part of a Windows Presentation Foundation (WPF) application's content to a manufacturer's proprietary format. </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter(System.IO.Stream)">
      <summary>Initializes an object derived from the abstract <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> class for the specified <see cref="T:System.IO.Stream" />. </summary>
      <returns>An object of a class derived from <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which the returned object writes.</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DefaultFileExtension">
      <summary>Gets the default extension for files of the manufacturer's proprietary format. </summary>
      <returns>A <see cref="T:System.String" /> representing the proprietary format's default file extension.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DisplayName">
      <summary>Gets the public name of the manufacturer's serializing component. </summary>
      <returns>A <see cref="T:System.String" /> representing the public name of the serializing component. </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerName">
      <summary>Gets the name of the serializing component's manufacturer. </summary>
      <returns>A <see cref="T:System.String" /> representing the manufacturer's name. </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerWebsite">
      <summary>Gets the web address of the serializing component's manufacturer. </summary>
      <returns>A <see cref="T:System.Uri" /> representing the manufacturer's website.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerDescriptor">
      <summary>Provides information about installed plug-in serializers.    </summary>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName">
      <summary>Gets the name of the assembly that contains the serializer. </summary>
      <returns>The name of the assembly (usually a DLL) that contains the plug-in serializer. </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath">
      <summary>Gets the path to the assembly file that contains the serializer. </summary>
      <returns>The path to the assembly file that contains the plug-in serializer. </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion">
      <summary>Gets the version of the assembly that contains the serializer. </summary>
      <returns>The version of the assembly that contains the plug-in serializer. </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)">
      <summary>Creates a new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> through a given <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> implementation. </summary>
      <returns>A new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> with its properties initialized with values from the given <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> implementation. </returns>
      <param name="factoryInstance">The source of data for the new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factoryInstance" /> is null.</exception>
      <exception cref="T:System.ArgumentException">One or more of the following properties of the <paramref name="factoryInstance" /> is null: <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName" />, <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName" />, <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite" />, and <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension" /></exception>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension">
      <summary>Gets the default extension associated with files that the serializer outputs. </summary>
      <returns>The default extension associated with files that the serializer outputs. </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName">
      <summary>Gets the public display name of the serializer. </summary>
      <returns>The public display name of the serializer. </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)">
      <summary>Tests two <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> objects for equality.</summary>
      <returns>true if both are equal; otherwise, false. </returns>
      <param name="obj">The object to be compared with this <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />.</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName">
      <summary>Gets the name of the <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> derived class that implements the serializer. </summary>
      <returns>The name of the <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> derived class that implements the serializer. </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode">
      <summary>Gets the unique hash code value of the serializer. </summary>
      <returns>The unique hash code value of the serializer. </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable">
      <summary>Gets a value indicating whether the serializer can be loaded with the currently installed version of Microsoft .NET Framework.</summary>
      <returns>true if the serializer assembly can be loaded; otherwise, false.  The default is false.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName">
      <summary>Gets the name of the company that developed the serializer. </summary>
      <returns>The name of the company that developed the plug-in serializer. </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite">
      <summary>Gets the web address of the company that developed the serializer. </summary>
      <returns>The web address of the company that developed the serializer. </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion">
      <summary>Gets the version of Microsoft .NET Framework required by the serializer.</summary>
      <returns>The version of Microsoft .NET Framework required by the plug-in serializer. </returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerProvider">
      <summary>Manages serialization plug-ins created, using <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> and <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />, by manufacturers who have their own proprietary serialization formats.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerProvider" /> class. </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter(System.Windows.Documents.Serialization.SerializerDescriptor,System.IO.Stream)">
      <summary>Initializes an object derived from the abstract <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> class for the specified <see cref="T:System.IO.Stream" /> that will use the specified descriptor.</summary>
      <returns>An object of a class derived from <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />.</returns>
      <param name="serializerDescriptor">A <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> that contains serialization information for the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which the returned object writes.</param>
      <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="serializerDescriptor" /> is specifying the wrong version.-or-It is not registered.-or-The assembly file cannot be found.-or-The assembly cannot be loaded.</exception>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerProvider.InstalledSerializers">
      <summary>Gets a collection of the installed plug-in serializers.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of the <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> objects already registered. </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.RegisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor,System.Boolean)">
      <summary>Registers a serializer plug-in. </summary>
      <param name="serializerDescriptor">The <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> for the plug-in.</param>
      <param name="overwrite">true to overwrite an existing registration for the same plug-in; otherwise, false. See Remarks.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="overwrite" /> is false and the plug-in is already registered.</exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.UnregisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor)">
      <summary>Deletes a serializer plug-in from the registry.</summary>
      <param name="serializerDescriptor">The <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> for the plug-in.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The plug-in is not registered. See Remarks.</exception>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriter">
      <summary>Defines the abstract methods and events that are required to implement a plug-in document output serializer. </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync">
      <summary>When overridden in a derived class, cancels an asynchronous write operation.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements to the document output serialization <see cref="T:System.IO.Stream" />. </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements together with the given print tickets.</summary>
      <returns>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements to the document output serialization <see cref="T:System.IO.Stream" />.</returns>
      <param name="documentSequencePT">The default print preferences for <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> content.</param>
      <param name="documentPT">The default print preferences for <see cref="T:System.Windows.Documents.FixedDocument" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)">
      <summary>When overridden in a derived class, synchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes paginated content together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="documentPaginator" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocument" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocumentSequence" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedPage" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)">
      <summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="documentPaginator" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes paginated content together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="documentPaginator" /> content.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocument" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocument" /> content.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocumentSequence" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedDocumentSequence" /> content.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedPage" /> content.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="fixedPage" /> content.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> and identifier to the serialization <see cref="T:System.IO.Stream" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled">
      <summary>When overridden in a derived class, occurs when a <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> operation is performed.</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted">
      <summary>When overridden in a derived class, occurs when a write operation finishes.</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired">
      <summary>When overridden in a derived class, occurs just before a <see cref="T:System.Printing.PrintTicket" /> is added to a stream by a <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> or <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> method.</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged">
      <summary>When overridden in a derived class, occurs when the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> updates its progress. </summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriterCollator">
      <summary>Defines the abstract methods required to implement a plug-in document serialization <see cref="T:System.Windows.Media.Visual" /> collator.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite">
      <summary>When overridden in a derived class, initiates the start of a batch write operation.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel">
      <summary>When overridden in a derived class, cancels a synchronous <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" /> operation. </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync">
      <summary>When overridden in a derived class, cancels an asynchronous <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" /> operation. </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite">
      <summary>When overridden in a derived class, completes a batch write operation.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated print ticket to the serialization stream.</summary>
      <param name="visual">A <see cref="T:System.Windows.Media.Visual" /> that is written to the stream.</param>
      <param name="printTicket">An object specifying preferences for how the material should be printed.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element with a specified event identifier to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated print ticket to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated print ticket and identifier to the serialization stream.</summary>
      <param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream" />.</param>
      <param name="printTicket">The default print preferences for the <paramref name="visual" /> element.</param>
      <param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCancelledEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs" /> class.</summary>
      <param name="exception">The exception that canceled the write operation.</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingCancelledEventArgs.Error">
      <summary>Gets the exception that canceled the write operation.</summary>
      <returns>The exception that canceled the write operation.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" /> event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCompletedEventArgs.#ctor(System.Boolean,System.Object,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs" /> class.</summary>
      <param name="cancelled">true if canceled; otherwise, false if the write operation completed normally.</param>
      <param name="state">The user-supplied state object that was passed to the <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> method.</param>
      <param name="exception">Error that occurred during the write operation or null if there is no error.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventHandler">
      <summary>Represents a method that handles the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" /> event of the <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.#ctor(System.Windows.Xps.Serialization.PrintTicketLevel,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs" /> class.</summary>
      <param name="printTicketLevel">An enumeration value that specifies scope of the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> as a page, document, or sequence of documents.</param>
      <param name="sequence">Based on the scope of defined by <paramref name="printTicketLevel" />, the number of pages or the number of documents associated with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />.</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket">
      <summary>Gets or sets the default printer settings to use when the document is printed.</summary>
      <returns>The default printer settings to use when the document is printed.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicketLevel">
      <summary>Gets a value that indicates the scope of the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> event.</summary>
      <returns>An enumeration that indicates the scope of the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> event as for a sequence of documents, a single document, or a single page.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.Sequence">
      <summary>Gets the number of documents or pages output with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />.</summary>
      <returns>The number of documents or pages output with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired" /> event of an <see cref="T:System.Windows.Xps.XpsDocumentWriter" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.#ctor(System.Windows.Documents.Serialization.WritingProgressChangeLevel,System.Int32,System.Int32,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs" /> class.</summary>
      <param name="writingLevel">An enumeration value that specifies the scope of the progress changed event such as for an entire multiple document sequence, a single document, or a single page.</param>
      <param name="number">Based on the scope defined by <paramref name="writingLevel" />, the number of documents or the number of pages that have been written.</param>
      <param name="progressPercentage">The percentage of data that has been written.</param>
      <param name="state">The user-supplied object that identifies the write operation.</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.Number">
      <summary>Gets the number of documents or pages that have been written.</summary>
      <returns>The number of documents or pages that have been written at the time of the event.</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.WritingLevel">
      <summary>Gets a value that indicates the scope of the writing progress.</summary>
      <returns>An enumeration that indicates the scope of writing a multiple document sequence, a single document, or single page.</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> event of an <see cref="T:System.Windows.Xps.XpsDocumentWriter" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangeLevel">
      <summary>Specifies the scope of a <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" /> event.</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.None">
      <summary>The output progress is unspecified.</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentSequenceWritingProgress">
      <summary>The output progress of a multiple document sequence.</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentWritingProgress">
      <summary>The output progress of a single document.</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedPageWritingProgress">
      <summary>The output progress of a single page.</summary>
    </member>
    <member name="T:System.Windows.Input.CommandConverter">
      <summary>Converts an <see cref="T:System.Windows.Input.ICommand" /> object to and from other types.</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.CommandConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</summary>
      <returns>true if <paramref name="sourceType" /> is of type <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.Input.ICommand" /> can be converted to the specified type, using the specified context.</summary>
      <returns>true if <paramref name="destinationType" /> is of type <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to an <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</summary>
      <returns>The converted object, or null if <paramref name="source" /> is an empty string.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="source">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> cannot be converted.</exception>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an <see cref="T:System.Windows.Input.ICommand" /> to the specified type, using the specified context.</summary>
      <returns>The converted object, or an empty string.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> cannot be converted.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigation">
      <summary>Provides logical and directional navigation between focusable objects. </summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn">
      <summary>Gets or sets a value indicating whether the Return character is accepted by a control.</summary>
      <returns>true if the Return character is accepted; otherwise, false.  The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.AcceptsReturnProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation">
      <summary>Gets or sets the logical control tab navigation behavior for the children of the element that this property is set on.</summary>
      <returns>How the container will move the focus when control tab navigation occurs.  The default value is <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />.</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.ControlTabNavigationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> attached property. </summary>
      <returns>The identifier for the  attached property.</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation">
      <summary>Gets or sets the directional navigation behavior for the children of the element that this property is set on. </summary>
      <returns>How the container will move the focus when directional navigation occurs.  The default value is <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />.</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.DirectionalNavigationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetAcceptsReturn(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> attached property for the specified element. </summary>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> property.</returns>
      <param name="element">The element from which to read the attached property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetControlTabNavigation(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> attached property for the specified element. </summary>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> property.</returns>
      <param name="element">Element from which to get the attached property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetDirectionalNavigation(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> attached property for the specified element. </summary>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> property.</returns>
      <param name="element">Element from which to get the attached property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetIsTabStop(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> attached property for the specified element. </summary>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> property.</returns>
      <param name="element">The element from which to read the attached property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabIndex(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" />  attached property for the specified element. </summary>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> property.</returns>
      <param name="element">The element from which to read the attached property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabNavigation(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> attached property for the specified element. </summary>
      <returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> property.</returns>
      <param name="element">Element from which to get the attached property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.IsTabStop">
      <summary>Gets or sets a value indicating whether the element that this property is set on is a tab stop. </summary>
      <returns>true if the element is a tab stop; otherwise, false.  The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.IsTabStopProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetAcceptsReturn(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" />  attached property for the specified element. </summary>
      <param name="element">The element to write the attached property to.</param>
      <param name="enabled">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetControlTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> attached property for the specified element. </summary>
      <param name="element">Element on which to set the attached property.</param>
      <param name="mode">The property value to set</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetDirectionalNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> attached property for the specified element. </summary>
      <param name="element">Element on which to set the attached property.</param>
      <param name="mode">Property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetIsTabStop(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> attached property for the specified element. </summary>
      <param name="element">The element to which to write the attached property.</param>
      <param name="isTabStop">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabIndex(System.Windows.DependencyObject,System.Int32)">
      <summary>Set the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> attached property for the specified element. </summary>
      <param name="element">The element on which to set the attached property to.</param>
      <param name="index">The property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> attached property for the specified element. </summary>
      <param name="element">Element on which to set the attached property.</param>
      <param name="mode">Property value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabIndex">
      <summary>Gets or sets the tab index for the element that this property is set on. </summary>
      <returns>The tab index.</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabNavigation">
      <summary>Gets or sets the logical tab navigation behavior for the children of the element that this property is set on. </summary>
      <returns>How the container will move the focus when tab navigation occurs.  The default value is <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />.</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabNavigationProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigationMode">
      <summary>Specifies the possible values for changes in focus when logical and directional navigation occurs.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Continue">
      <summary>Each element receives keyboard focus, as long as it is a navigation stop.  Navigation leaves the containing element when an edge is reached.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
      <summary>The container and all of its child elements as a whole receive focus only once. Either the first tree child or the or the last focused element in the group receives focus</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
      <summary>Depending on the direction of the navigation, the focus returns to the first or the last item when the end or the beginning of the container is reached.  Focus cannot leave the container using logical navigation.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.None">
      <summary>No keyboard navigation is allowed inside this container.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Contained">
      <summary>Depending on the direction of the navigation, focus returns to the first or the last item when the end or the beginning of the container is reached, but does not move past the beginning or end of the container.</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
      <summary>Tab Indexes are considered on local subtree only inside this container and behave like <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" /> after that.</summary>
    </member>
    <member name="T:System.Windows.Interop.ActiveXHost">
      <summary>Hosts an ActiveX control as an element within Windows Presentation Foundation (WPF) content. </summary>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>Creates the <see cref="T:System.Windows.Interop.ActiveXHost" /> window and assigns it to a parent.</summary>
      <returns>A <see cref="T:System.Runtime.InteropServices.HandleRef" /> to the <see cref="T:System.Windows.Interop.ActiveXHost" /> window.</returns>
      <param name="hwndParent">The parent window.</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <param name="hwnd"></param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Windows.Interop.ActiveXHost" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Interop.ActiveXHost.IsDisposed">
      <summary>Gets a value that indicates whether the <see cref="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" /> method has been called on the <see cref="T:System.Windows.Interop.ActiveXHost" /> instance. </summary>
      <returns>true if the <see cref="T:System.Windows.Interop.ActiveXHost" /> instance has been disposed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
      <param name="swConstraint"></param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <param name="args"></param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)">
      <param name="bounds"></param>
    </member>
    <member name="T:System.Windows.Interop.BrowserInteropHelper">
      <summary>A helper class that provides information about the browser environment in which a XAML browser application (XBAP) application is hosted.</summary>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.ClientSite">
      <summary>Returns a reference to an object that can be used to access the host browser via its OLE container interfaces (for example, IOleClientSite::GetContainer();).</summary>
      <returns>An object that can be cast to <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.HostScript">
      <summary>Gets a script object that provides access to the HTML window object, custom script functions, and global variables for the HTML page, if the XAML browser application (XBAP) is hosted in a frame.</summary>
      <returns>A script object that provides access to the HTML window object, custom script functions, and global variables for the HTML page, if the XAML browser application (XBAP) is hosted in a frame; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted">
      <summary>Gets a value that specifies whether the current Windows Presentation Foundation (WPF) application is browser hosted.</summary>
      <returns>true if the application is browser hosted; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.Source">
      <summary>Gets the uniform resource identifier (URI) for the location from which a XAML browser application (XBAP) application was launched.</summary>
      <returns>The <see cref="T:System.Uri" /> for the location from which a XAML browser application (XBAP) application was launched; otherwise, null.</returns>
    </member>
    <member name="T:System.Windows.Interop.DocObjHost">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.#ctor">
      <summary> This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.InitializeLifetimeService">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <returns>A new <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> object. </returns>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.System#IServiceProvider#GetService(System.Type)">
      <summary>For a description of this member, see <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <returns>A service object of type <paramref name="serviceType" />.-or- null if there is no service object of type <paramref name="serviceType" />.</returns>
      <param name="serviceType">An object that specifies the type of service object to get. </param>
    </member>
    <member name="T:System.Windows.Interop.DynamicScriptObject">
      <summary>Enables calls from a XAML browser application (XBAP) to the HTML window that hosts the application. </summary>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.ToString">
      <summary>Attempts to convert the script object to a string representation.</summary>
      <returns>A string representation of the script object, if the object can be converted; otherwise, a string representation of the object's default property or method.</returns>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
      <summary>Gets an indexed value from the script object by using the first index value from the <paramref name="indexes" /> collection.</summary>
      <returns>Always returns true. </returns>
      <param name="binder">The binder provided by the call site.</param>
      <param name="indexes">The index to be retrieved.</param>
      <param name="result">The method result.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is null.-or-<paramref name="indexes" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="indexes" /> is not equal to 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The first <paramref name="indexes" /> value is null.</exception>
      <exception cref="T:System.MissingMemberException">The member does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Gets an member value from the script object.</summary>
      <returns>Always returns true. </returns>
      <param name="binder">The binder provided by the call site.</param>
      <param name="result">The method result.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is null.</exception>
      <exception cref="T:System.MissingMemberException">The member does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
      <summary>Calls the default script method.</summary>
      <returns>Always return true.</returns>
      <param name="binder">The binder provided by the call site.</param>
      <param name="args">The arguments to pass to the default method.</param>
      <param name="result">The method result.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is null.</exception>
      <exception cref="T:System.MissingMethodException">The method does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Calls a method on the script object. </summary>
      <returns>Always return true. </returns>
      <param name="binder">The binder provided by the call site.</param>
      <param name="args">The arguments to pass to the default method.</param>
      <param name="result">The method result.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is null.</exception>
      <exception cref="T:System.MissingMethodException">The method does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
      <summary>Sets a member on the script object by using the first index specified in the <paramref name="indexes" /> collection.</summary>
      <returns>Always returns true.</returns>
      <param name="binder">The binder provided by the call site.</param>
      <param name="indexes">The index to be retrieved.</param>
      <param name="value">The method result</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is null.-or-<paramref name="indexes" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="indexes" /> is not equal to 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The first <paramref name="indexes" /> value is null.</exception>
      <exception cref="T:System.MissingMemberException">The member does not exist.</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Sets a member on the script object to the specified value.</summary>
      <returns>Always returns true.</returns>
      <param name="binder">The binder provided by the call site.</param>
      <param name="value">The value to set for the member.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> is null.-or-<paramref name="indexes" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="indexes" /> is not equal to 1.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The first <paramref name="indexes" /> value is null.</exception>
      <exception cref="T:System.MissingMemberException">The member does not exist.</exception>
    </member>
    <member name="T:System.Windows.Interop.HwndHost">
      <summary>Hosts a Win32 window as an element within Windows Presentation Foundation (WPF) content. </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndHost" /> class. </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>When overridden in a derived class, creates the window to be hosted. </summary>
      <returns>The handle to the child Win32 window to create.</returns>
      <param name="hwndParent">The window handle of the parent window.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>When overridden in a derived class, destroys the hosted window. </summary>
      <param name="hwnd">A structure that contains the window handle.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose">
      <summary>Immediately frees any system resources that the object might hold. </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
      <summary>Immediately frees any system resources that the object might hold. </summary>
      <param name="disposing">Set to true if called from an explicit disposer and false otherwise.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Finalize">
      <summary>Performs the final cleanup before the garbage collector destroys the object. </summary>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.Handle">
      <summary>Gets the window handle  of the hosted window. </summary>
      <returns>The window handle.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
      <summary>Gets a value that indicates whether the sink or one of its contained components has focus.</summary>
      <returns>true if the sink or one of its contained components has focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
      <summary>Returns the size of the window represented by the <see cref="T:System.Windows.Interop.HwndHost" /> object, as requested by layout engine operations. </summary>
      <returns>The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</returns>
      <param name="constraint">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</param>
    </member>
    <member name="E:System.Windows.Interop.HwndHost.MessageHook">
      <summary>Occurs for each unhandled message that is received by the hosted window. </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
      <summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for <see cref="T:System.Windows.Interop.HwndHost" /> . </summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation. </returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when the hosted window receives a WM_KEYDOWN message. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary> Called when the hosted window receives a WM_KEYUP message. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Called when one of the mnemonics (access keys) for this sink is invoked. </summary>
      <returns>Always returns false. </returns>
      <param name="msg">The message for the mnemonic and associated data.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary> Called when the hosted window's position changes. </summary>
      <param name="rcBoundingBox">The window's position.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
      <summary>Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.  </summary>
      <returns>The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</returns>
      <param name="sink">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
      <summary>For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</summary>
      <returns>true if the sink or one of its contained components has focus; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
      <summary>For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</summary>
      <returns>A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="msg">The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</summary>
      <returns>The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</returns>
      <param name="sink">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</summary>
      <returns>true if the focus has been set as requested; false, if there are no tab stops.</returns>
      <param name="request">Specifies whether focus should be set to the first or the last tab stop.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <returns>true if the message was handled by the method implementation; otherwise, false.</returns>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <returns>true if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, false.</returns>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
      <summary>Sets focus on either the first tab stop or the last tab stop of the sink.</summary>
      <returns>Always returns false.</returns>
      <param name="request">Specifies whether focus should be set to the first or the last tab stop.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Processes keyboard input at the keydown message level.</summary>
      <returns>Always returns false.</returns>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</summary>
      <returns>Always returns false.</returns>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
      <summary> Updates the child window's size, visibility, and position to reflect the current state of the element. </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>When overridden in a derived class, accesses the window process (handle) of the hosted child window. </summary>
      <returns>The window handle of the child window.</returns>
      <param name="hwnd">The window handle of the hosted window.</param>
      <param name="msg">The message to act upon.</param>
      <param name="wParam">Information that may be relevant to handling the message. This is typically used to store small pieces of information, such as flags.</param>
      <param name="lParam">Information that may be relevant to handling the message. This is typically used to reference an object.</param>
      <param name="handled">Whether events resulting should be marked handled.</param>
    </member>
    <member name="T:System.Windows.Interop.IErrorPage">
      <summary>Defines the interaction between Windows Presentation Foundation (WPF) applications that are hosting interoperation content and interpreted by the Windows Presentation Foundation (WPF) executable, and a host supplied error page. </summary>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.DeploymentPath">
      <summary>Gets or sets the path to an application's deployment manifest.</summary>
      <returns>The path to an application's deployment manifest.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorFlag">
      <summary>Gets or sets a value that indicates whether this represents an error or some other condition such as a warning. true denotes an error.</summary>
      <returns>true denotes an error; false denotes another condition such as a warning.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorText">
      <summary>Gets or sets a verbose description of the error.</summary>
      <returns>Description of the error.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorTitle">
      <summary>Gets or sets the string title of the error page.</summary>
      <returns>The string title of the error page.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.GetWinFxCallback">
      <summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback" />  handler, which can handle requests for Microsoft .NET Framework runtime downloads.</summary>
      <returns>A <see cref="T:System.Windows.Threading.DispatcherOperationCallback" />  handler,</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.LogFilePath">
      <summary>Gets or sets the string path to the error's log file, if any.</summary>
      <returns>Path to an associated error file. May be an empty string.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.RefreshCallback">
      <summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler, that can handle refresh of the error page.</summary>
      <returns>A <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler to handle refresh of error page.</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.SupportUri">
      <summary>Gets or sets a uniform resource identifier (URI) for support information associated with the error.</summary>
      <returns>A link for support information.</returns>
    </member>
    <member name="T:System.Windows.Interop.IProgressPage">
      <summary>Defines the interaction between Windows Presentation Foundation (WPF) applications that are hosting interoperation content, and a host supplied progress page. </summary>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.ApplicationName">
      <summary>Gets or sets  the application's name.</summary>
      <returns>Name of the application that originates the progress page.</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.DeploymentPath">
      <summary>Gets or sets the <see cref="T:System.Uri" /> path to the application deployment manifest.</summary>
      <returns>The application deployment manifest path.</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.PublisherName">
      <summary>Gets or sets the application's publisher.</summary>
      <returns>The publisher identifying string.</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.RefreshCallback">
      <summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler, that can handle the case of a user-initiated Refresh command.</summary>
      <returns>The callback reference.</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.StopCallback">
      <summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> handler, that can handle the case of a user-initiated Stop command.</summary>
      <returns>The callback reference.</returns>
    </member>
    <member name="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)">
      <summary>Provides upload progress numeric information that can be used to update the progress indicators.</summary>
      <param name="bytesDownloaded">Total bytes downloaded thus far.</param>
      <param name="bytesTotal">Total bytes that need to be downloaded for the application.</param>
    </member>
    <member name="T:System.Windows.Interop.WindowInteropHelper">
      <summary>Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code. </summary>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified Windows Presentation Foundation (WPF) window. </summary>
      <param name="window">A WPF window object.</param>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
      <summary>Creates the HWND of the window if the HWND has not been created yet.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that represents the HWND.</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Handle">
      <summary>Gets the window handle for a Windows Presentation Foundation (WPF) window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />. </summary>
      <returns>The Windows Presentation Foundation (WPF) window handle (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Owner">
      <summary>Gets or sets the handle of the Windows Presentation Foundation (WPF) owner window. </summary>
      <returns>The owner window handle (HWND).</returns>
    </member>
    <member name="T:System.Windows.Markup.ComponentResourceKeyConverter">
      <summary>Implements a type converter for <see cref="T:System.Windows.ComponentResourceKey" /> objects, which deliberately have no type conversion pathways. The type converter enforces and reports that behavior.</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ComponentResourceKeyConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.ComponentResourceKey" />, using the specified context. Always returns false.</summary>
      <returns>false in all cases.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.ComponentResourceKey" /> can be converted to the specified type, using the specified context. Always returns false.</summary>
      <returns>false in all cases.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.ComponentResourceKey" />, using the specified context. Throws an exception in all cases.</summary>
      <returns>Throws an exception in all cases.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">Cannot perform the conversion.</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.ComponentResourceKey" /> to the specified type, using the specified context. Throws an exception in all cases.</summary>
      <returns>Throws an exception in all cases.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <exception cref="T:System.NotSupportedException">Cannot perform the conversion.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not type of <see cref="T:System.Windows.ComponentResourceKey" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependencyPropertyConverter">
      <summary>Converts from a string to a <see cref="T:System.Windows.DependencyProperty" /> object.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.DependencyPropertyConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns>true if this converter can perform the operation; otherwise, false.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.DependencyProperty" /> can be converted to the specified type.</summary>
      <returns>true if this converter can perform the operation; otherwise, false.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.DependencyProperty" />, using the specified context.</summary>
      <returns>The converted object. If the conversion is successful, this is a <see cref="T:System.Windows.DependencyProperty" />.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="source">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> cannot be converted.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="source" /> are null.</exception>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.DependencyProperty" /> to the specified type, using the specified context. Always throws an exception.</summary>
      <returns>Always throws an exception.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="T:System.Windows.Markup.EventSetterHandlerConverter">
      <summary>Converts the string name of an event setter handler to a delegate representation.</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of one type to a <see cref="T:System.Delegate" />.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false. </returns>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
      <returns>Always returns false.</returns>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to. </param>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified string to a new <see cref="T:System.Delegate" /> for the event handler.</summary>
      <returns>A new <see cref="T:System.Delegate" /> that represents the referenced event handler.</returns>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="source">The source string to convert.</param>
      <exception cref="T:System.NotSupportedException">The necessary services are not available.-or-Could not perform the specific conversion.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeDescriptorContext" /> or <paramref name="source" /> are null.</exception>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified value object to the specified type. Always throws an exception.</summary>
      <returns>Always throws an exception.</returns>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The value to convert.</param>
      <param name="destinationType">The type to convert the <paramref name="value" /> parameter to. </param>
      <exception cref="T:System.NotSupportedException">Thrown in all cases.</exception>
    </member>
    <member name="T:System.Windows.Markup.IStyleConnector">
      <summary>Provides methods used internally by the WPF XAML parser to attach events and event setters in compiled XAML. </summary>
    </member>
    <member name="M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)">
      <summary>Attaches events on event setters and templates in compiled content. </summary>
      <param name="connectionId">The unique connection ID for event wiring purposes. </param>
      <param name="target">The target for event wiring.</param>
    </member>
    <member name="T:System.Windows.Markup.NamespaceMapEntry">
      <summary>Provides information that the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> uses for mapping between an XML namespace, a CLR namespace, and the assembly that contains the relevant types for that CLR namespace.</summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> class. </summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> class, using provided XML namespace, CLR namespace, and assembly information. </summary>
      <param name="xmlNamespace">The mapping prefix for the XML namespace.</param>
      <param name="assemblyName">The assembly that contains the CLR namespace and types to map to the XML namespace.</param>
      <param name="clrNamespace">The CLR  namespace in the assembly that contains the relevant types.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> is null-or- <paramref name="assemblyName" /> is null-or- <paramref name="clrNamespace" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName">
      <summary>Gets or sets the assembly name that contains the types in the CLR namespace. </summary>
      <returns>The assembly name.</returns>
      <exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName" /> is being set to is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace">
      <summary>Gets or sets the CLR namespace that contains the types being mapped. </summary>
      <returns>The CLR namespace.</returns>
      <exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace" /> is being set to is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace">
      <summary>Gets or sets the mapping prefix for the XML namespace being mapped to. </summary>
      <returns>The mapping prefix for the XML namespace.</returns>
      <exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace" /> is being set to is null.</exception>
    </member>
    <member name="T:System.Windows.Markup.ParserContext">
      <summary>Provides context information required by a XAML parser. </summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ParserContext" /> class. </summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ParserContext" /> class by using the specified <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlParserContext">The XML processing context to base the new <see cref="T:System.Windows.Markup.ParserContext" /> on.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlParserContext" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.BaseUri">
      <summary>Gets or sets the base URI for this context.</summary>
      <returns>The base URI, as a string.</returns>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
      <summary>Converts a XAML <see cref="T:System.Windows.Markup.ParserContext" /> to an <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>The converted XML parser context.</returns>
      <param name="parserContext">The XAML parser context to convert to an <see cref="T:System.Xml.XmlParserContext" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
      <summary>Converts an <see cref="T:System.Windows.Markup.ParserContext" /> to an <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>The XML parser context.</returns>
      <param name="parserContext">The context to convert to an <see cref="T:System.Xml.XmlParserContext" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XamlTypeMapper">
      <summary>Gets or sets the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> to use with this <see cref="T:System.Windows.Markup.ParserContext" />.</summary>
      <returns>The type mapper to use when mapping XAML elements to CLR types. </returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlLang">
      <summary>Gets or sets the xml:lang string for this context.</summary>
      <returns>The xml:lang string value.</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
      <summary>Gets the XAML namespace dictionary for this XAML parser context.</summary>
      <returns>The XAML namespace dictionary.</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlSpace">
      <summary>Gets or sets the character for xml:space or this context.</summary>
      <returns>The character for xml:space or this context.</returns>
    </member>
    <member name="T:System.Windows.Markup.ResourceReferenceExpressionConverter">
      <summary>Converts instances of ResourceReferenceExpression to and from other types. </summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ResourceReferenceExpressionConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the converter can convert from a source object to a ResourceReferenceExpression object. </summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the converter can convert a ResourceReferenceExpression object to the specified destination type. </summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">The type to convert to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified value to the ResourceReferenceExpression type. </summary>
      <returns>The converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified ResourceReferenceExpression object to the specified type.</summary>
      <returns>The converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> must be of type ResourceReferenceExpression.</exception>
    </member>
    <member name="T:System.Windows.Markup.RoutedEventConverter">
      <summary>Converts a <see cref="T:System.Windows.RoutedEvent" /> object from a string.</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.RoutedEventConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.RoutedEvent" />.</summary>
      <returns>true if this converter can perform the operation; otherwise, false.</returns>
      <param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.RoutedEvent" /> can be converted to the specified type.</summary>
      <returns>Always returns false.</returns>
      <param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.RoutedEvent" />, using the specified context.</summary>
      <returns>The conversion result.</returns>
      <param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="cultureInfo">Culture specific information.</param>
      <param name="source">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> is not a string or cannot be converted.</exception>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.RoutedEvent" /> to the specified type. Throws an exception in all cases.</summary>
      <returns>Always throws an exception.</returns>
      <param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="cultureInfo">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> cannot be converted. This is not a functioning converter for a save path..</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> or <paramref name="destinationType" /> are null.</exception>
    </member>
    <member name="T:System.Windows.Markup.SetterTriggerConditionValueConverter">
      <summary>Provides type conversion analogous behavior for <see cref="T:System.Windows.Setter" />, <see cref="T:System.Windows.Trigger" /> and <see cref="T:System.Windows.Condition" /> types that deal with <see cref="T:System.Windows.DependencyProperty" /> values. This converter only supports ConvertFrom.</summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.SetterTriggerConditionValueConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the converter can convert from a source object to a side-effect-produced <see cref="T:System.Windows.Setter" />, <see cref="T:System.Windows.Trigger" /> or <see cref="T:System.Windows.Condition" /> . </summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether the converter can convert to the specified destination type. Always returns false.</summary>
      <returns>Always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the converted source value if an underlying type converter can be obtained from context. Otherwise returns an unconverted source.</summary>
      <returns>The converter object, or possibly an unconverted source.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="source">The object to convert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="source" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">No <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> service available.</exception>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified object to the specified type. Always throws an exception.</summary>
      <returns>Always throws an exception.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert to.</param>
      <exception cref="T:System.InvalidOperationException">Thrown in all cases.</exception>
    </member>
    <member name="T:System.Windows.Markup.TemplateKeyConverter">
      <summary>Implements a type converter for <see cref="T:System.Windows.TemplateKey" /> objects, which deliberately have no type conversion pathways. The type converter enforces and reports that behavior.</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.TemplateKeyConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.TemplateKey" />.</summary>
      <returns>Always returns false.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.TemplateKey" /> can be converted to the specified type.</summary>
      <returns>Always returns false.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="destinationType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object (string) to a <see cref="T:System.Windows.TemplateKey" />.</summary>
      <returns>Always throws an exception.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="source">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> cannot be converted.</exception>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.TemplateKey" /> to the specified type, using the specified context.</summary>
      <returns>Always throws an exception.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> cannot be converted.</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlDesignerSerializationManager">
      <summary>Provides services for XAML serialization by XAML designers or other callers that require advanced serialization.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDesignerSerializationManager.#ctor(System.Xml.XmlWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" /> class.</summary>
      <param name="xmlWriter">The XML writer implementation to use as basis for the <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />. </param>
    </member>
    <member name="P:System.Windows.Markup.XamlDesignerSerializationManager.XamlWriterMode">
      <summary>Gets or sets the XAML writer mode.</summary>
      <returns>The XAML writer mode.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Not a valid member of the <see cref="T:System.Windows.Markup.XamlWriterMode" /> enumeration.</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlInstanceCreator">
      <summary>Abstract class that provides a means to store parser records for later instantiation. </summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlInstanceCreator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.CreateObject">
      <summary>When overridden in a derived class, creates a new object to store parser records.</summary>
      <returns>The created object.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlParseException">
      <summary>Represents the exception class for parser-specific exceptions (for XAML API or WPF XAML parser operations from .NET Framework 3.0 and .NET Framework 3.5). </summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class. </summary>
      <param name="info">Contains all the information that is required to serialize or deserialize the object.</param>
      <param name="context">The source and destination of a serialized stream.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string and inner exception. </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The initial exception that occurred.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string, and the specified line number and position in the line.</summary>
      <param name="message">The exception message.</param>
      <param name="lineNumber">The line number where the exception occurred.</param>
      <param name="linePosition">The position in the line at which the exception occurred.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message, inner exception, line number, and position in the line.</summary>
      <param name="message">The exception message.</param>
      <param name="lineNumber">The line number where the exception occurred.</param>
      <param name="linePosition">The position in the line at which the exception occurred.</param>
      <param name="innerException">The initial exception that occurred.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.BaseUri">
      <summary>Gets base URI information when the exception is thrown.</summary>
      <returns>The parser context base URI. </returns>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the data that is required to serialize the specified object by populating the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="info">The serialization information object to add the serialization data to.</param>
      <param name="context">The destination for this serialization.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.KeyContext">
      <summary>Gets or sets the key value of the item in a dictionary where the exception occurred. </summary>
      <returns>The relevant XAML x:Key value.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LineNumber">
      <summary>Gets the line number where the exception occurred. </summary>
      <returns>The line number.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LinePosition">
      <summary>Gets the position in the line where the exception occurred. </summary>
      <returns>The line position.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.NameContext">
      <summary>Gets or sets the XAML name of the object where the exception occurred.</summary>
      <returns>The XAML name of the object.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.UidContext">
      <summary>Gets or sets the x:Uid Attribute of the object where the exception occurred. </summary>
      <returns>The value of the UID.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlReader">
      <summary>Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer. </summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlReader" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.CancelAsync">
      <summary>Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext">
      <summary>Returns a <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</summary>
      <returns>A <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)">
      <summary>Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an <see cref="T:System.Object" /> that is the root of the corresponding object tree.</summary>
      <returns>The object at the root of the created object tree.</returns>
      <param name="stream">The XAML to load, in stream form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an object that is the root of the corresponding object tree.</summary>
      <returns>The object that is the root of the created object tree.</returns>
      <param name="stream">The stream that contains the XAML input to load.</param>
      <param name="parserContext">Context information used by the parser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.-or-<paramref name="parserContext" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)">
      <summary>Reads the XAML input through a provided <see cref="T:System.Xaml.XamlReader" /> and returns an object that is the root of the corresponding object tree.</summary>
      <returns>The object that is the root of the created object tree.</returns>
      <param name="reader">A <see cref="T:System.Xaml.XamlReader" /> object. This is expected to be initialized with input XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)">
      <summary>Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns an object that is the root of the corresponding object tree.</summary>
      <returns>The object that is the root of the created object tree.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> that has already loaded the XAML input to load in XML form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)">
      <summary>Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</summary>
      <returns>The object that is the root of the created object tree.</returns>
      <param name="stream">The stream containing the XAML input to load.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Multiple load operations are pending concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree. </summary>
      <returns>The root of the created object tree.</returns>
      <param name="stream">A stream containing the XAML input to load.</param>
      <param name="parserContext">Context information used by the parser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)">
      <summary>Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns the root of the corresponding object tree. </summary>
      <returns>The root of the created object tree.</returns>
      <param name="reader">An existing  <see cref="T:System.Xml.XmlReader" /> that has already loaded/read the XAML input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</exception>
    </member>
    <member name="E:System.Windows.Markup.XamlReader.LoadCompleted">
      <summary>Occurs when an asynchronous load operation completes. </summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String)">
      <summary>Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</summary>
      <returns>The root of the created object tree.</returns>
      <param name="xamlText">The input XAML, as a single text string.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)">
      <summary>Reads the XAML markup in the specified text string (using a specified <see cref="T:System.Windows.Markup.ParserContext" />) and returns an object that corresponds to the root of the specified markup.</summary>
      <returns>The root of the created object tree.</returns>
      <param name="xamlText">The input XAML, as a single text string.</param>
      <param name="parserContext">Context information used by the parser.</param>
    </member>
    <member name="T:System.Windows.Markup.XamlTypeMapper">
      <summary>Maps a XAML element name to the appropriate CLR <see cref="T:System.Type" /> in assemblies.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class by specifying an array of assembly names that the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</summary>
      <param name="assemblyNames">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class, using the specified array of assembly names and the specified namespace maps.</summary>
      <param name="assemblyNames">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</param>
      <param name="namespaceMaps">The array of namespace maps the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
      <summary>Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> information.</summary>
      <param name="xmlNamespace">The prefix for the XML namespace..</param>
      <param name="clrNamespace">The CLR  namespace that contains the types to map.</param>
      <param name="assemblyName">The assembly that contains the CLR  namespace.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> is null-or-<paramref name="clrNamespace" /> is null-or-<paramref name="assemblyName" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
      <summary>Requests permission for a <see cref="T:System.Windows.Markup.XamlTypeMapper" /> derived type that is called under full trust to access a specific internal type.</summary>
      <returns>true if the internal type can be accessed; otherwise, false.</returns>
      <param name="type">The type to access.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
      <summary>Gets an instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> to use if one has not been specified.</summary>
      <returns>The default type mapper.</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
      <summary>Gets the CLR <see cref="T:System.Type" /> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.</summary>
      <returns>The <see cref="T:System.Type" /> for the object, or null if no mapping could be resolved.</returns>
      <param name="xmlNamespace">The specified XML namespace prefix.</param>
      <param name="localName">The "local" name of the XAML element to obtain the mapped <see cref="T:System.Type" /> for. Local in this context means as mapped versus the provided <paramref name="xmlNamespace" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> is null-or-<paramref name="localName" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
      <summary>Specifies the path to use when loading an assembly.</summary>
      <param name="assemblyName">The short name of the assembly without an extension or path specified (equivalent to <see cref="P:System.Reflection.AssemblyName.Name" />).  </param>
      <param name="assemblyPath">The file path of the assembly. The assembly path must be a full file path containing a file extension.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null-or-<paramref name="assemblyPath" /> is null.</exception>
      <exception cref="T:System.Windows.Markup.XamlParseException">
        <paramref name="assemblyName" /> is <see cref="F:System.String.Empty" />-or-<paramref name="assemblyPath" /> is <see cref="F:System.String.Empty" />-or-<paramref name="assemblyPath" /> is not a full file path containing a file extension.</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlWriter">
      <summary>Provides a single static <see cref="Overload:System.Windows.Markup.XamlWriter.Save" /> method (multiple overloads) that can be used for limited XAML serialization of provided run-time objects into XAML markup.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object)">
      <summary>Returns a XAML string that serializes the specified object and its properties.</summary>
      <returns>A XAML string that can be written to a stream or file. The logical tree of all elements that fall under the provided <paramref name="obj" /> element will be serialized.</returns>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.Stream)">
      <summary>Saves XAML information into a specified stream to serialize the specified object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <param name="stream">Destination stream for the serialized XAML information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> or <paramref name="stream" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.TextWriter)">
      <summary>Saves XAML information as the source for a provided <see cref="T:System.IO.TextWriter" /> object. The output of the <see cref="T:System.IO.TextWriter" /> can then be used to serialize the provided object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance as the destination where the serialized XAML information is written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> or <paramref name="writer" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Saves XAML information into a custom serializer. The output of the serializer can then be used to serialize the provided object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <param name="manager">A custom serialization implementation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> or <paramref name="manager" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Xml.XmlWriter)">
      <summary>Saves XAML information as the source for a provided <see cref="T:System.Xml.XmlWriter" /> object. The output of the <see cref="T:System.Xml.XmlWriter" /> can then be used to serialize the provided object and its properties.</summary>
      <param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
      <param name="xmlWriter">Writer to use to write the serialized XAML information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> or <paramref name="xmlWriter" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The application is not running in full trust.</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterMode">
      <summary>Specifies the XAML writer mode for serializing values that are expressions (such as binding declarations).</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Expression">
      <summary>The <see cref="T:System.Windows.Expression" /> is serialized.</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Value">
      <summary>The evaluated value of the <see cref="T:System.Windows.Expression" /> is serialized.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterState">
      <summary>Describes possible writing states for a custom XAML writer.</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Starting">
      <summary>The <see cref="T:System.Windows.Markup.XamlWriter" /> has started its operation.</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Finished">
      <summary>The <see cref="T:System.Windows.Markup.XamlWriter" /> has completed its operation.</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlAttributeProperties">
      <summary>Encapsulates the XML language-related attributes of a <see cref="T:System.Windows.DependencyObject" />. </summary>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlNamespaceMaps(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> property for the specified object.</returns>
      <param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> property from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDefinition(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property for the specified object.</returns>
      <param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property value from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDictionary(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property for the specified object.</returns>
      <param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property value from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property for the specified object.</returns>
      <param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property value from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlNamespaceMaps(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property.</param>
      <param name="value">The string value to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDefinition(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> property.</param>
      <param name="value">The XML namespace definition in string form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDictionary(System.Windows.DependencyObject,System.Windows.Markup.XmlnsDictionary)">
      <summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property.</param>
      <param name="value">The xmlns dictionary in string form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlSpace(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property.</param>
      <param name="value">The string to use for an XML space.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps">
      <summary>Gets or sets an attached property value that stores XML namespace maps for use by the WPF XAML parser for .NET Framework 3.0 and .NET Framework 3.5.</summary>
      <returns>An XML namespace map in string form.</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMapsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition">
      <summary>Gets or sets the attached property value that stores xmlns definitions for use by the WPF XAML parser for .NET Framework 3.0 and .NET Framework 3.5.</summary>
      <returns>An xmlns definition in string form.</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinitionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary">
      <summary>Gets or sets the attached property value that stores xmlns dictionaries for use by the WPF XAML parser for .NET Framework 3.0 and .NET Framework 3.5.</summary>
      <returns>The <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionaryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace">
      <summary>Gets or sets the mapped value of the xml:space property.</summary>
      <returns>The string to use as xml:space.</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlSpaceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDictionary">
      <summary>Represents a dictionary that contains xmlns mappings for XAML namespaces in WPF. </summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor(System.Windows.Markup.XmlnsDictionary)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> class by using the specified dictionary as a copy source.</summary>
      <param name="xmlnsDictionary">The dictionary on which to base the new <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlnsDictionary" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.Object,System.Object)">
      <summary>Adds a prefix-URI pair to this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <param name="prefix">The prefix of the XAML namespace to be added. </param>
      <param name="xmlNamespace">The XAML namespace URI the prefix maps to. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> or <paramref name="xmlNamespace" /> is not a string. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> or <paramref name="xmlNamespace" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.String,System.String)">
      <summary>Adds a prefix-URI pair to this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <param name="prefix">The prefix of this XML namespace.</param>
      <param name="xmlNamespace">The XML namespace URI the prefix maps to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> or <paramref name="xmlNamespace" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Clear">
      <summary>Removes all entries from this <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Contains(System.Object)">
      <summary>Returns a value that indicates whether the specified prefix key is in this <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <returns>true if the requested prefix key is in the dictionary; otherwise, false.</returns>
      <param name="key">The prefix key to search for.</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entries in the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> to the specified array. </summary>
      <param name="array">The array to copy the table data into.</param>
      <param name="index">The zero-based index in the destination array where copying starts.</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>Copies the entries in the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> to the specified <see cref="T:System.Collections.DictionaryEntry" /> array. </summary>
      <param name="array">The array to copy the table data into.</param>
      <param name="index">The zero-based index in the destination array where copying starts.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Count">
      <summary>Gets the number of items in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <returns>The number of items in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.DefaultNamespace">
      <summary>Looks up the XAML namespace that corresponds to the default XAML namespace. </summary>
      <returns>The namespace that corresponds to the default XML namespace if one exists; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetDictionaryEnumerator">
      <summary>Returns a dictionary enumerator that iterates through this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <returns>The dictionary enumerator for this dictionary.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetEnumerator">
      <summary>Returns an enumerator that iterates through this <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</summary>
      <returns>The enumerator for this dictionary.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespace(System.String)">
      <summary>Retrieves a XAML namespace for the provided prefix string.</summary>
      <returns>The requested XAML namespace URI.</returns>
      <param name="prefix">The prefix to retrieve the XAML namespace for.</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespacePrefixes">
      <summary>Returns all possible prefix-XAML namespace mappings (<see cref="T:System.Xaml.NamespaceDeclaration" /> values) that are available in the active schema context.</summary>
      <returns>An enumerable set of <see cref="T:System.Xaml.NamespaceDeclaration" /> values. To get the prefix strings specifically, get the <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> value from each value returned.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsFixedSize">
      <summary>Gets a value that indicates whether the size of the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is fixed. </summary>
      <returns>true if the size is fixed; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is read-only. </summary>
      <returns>true if the dictionary is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsSynchronized">
      <summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is thread safe. </summary>
      <returns>true if access to this dictionary is thread-safe; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.Object)">
      <summary>Gets or sets the XAML namespace URI associated with the specified prefix.</summary>
      <returns>The corresponding XAML namespace URI.</returns>
      <param name="prefix">The prefix from which to get or set the associated XML namespace URI.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> is not a string-or-The value to set is not a string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> is null-or-The value to set is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.String)">
      <summary>Gets or sets the XAML namespace URI associated with the specified prefix.</summary>
      <returns>The corresponding XML namespace URI.</returns>
      <param name="prefix">The prefix from which to get or set the associated namespace.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> is null-or-The value to set is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Keys">
      <summary>Gets a collection of all the keys in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <returns>The collection of all the keys in the dictionary.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupNamespace(System.String)">
      <summary>Returns the XAML namespace URI that corresponds to the specified XML namespace prefix. </summary>
      <returns>The XAML namespace URI that corresponds to the specified prefix if it exists in this <see cref="T:System.Windows.Markup.XmlnsDictionary" />; otherwise, null.</returns>
      <param name="prefix">The XAML namespace prefix to look up.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupPrefix(System.String)">
      <summary>Returns the prefix that corresponds to the specified XAML namespace URI. </summary>
      <returns>The XML prefix that corresponds to the given namespace; otherwise, null.</returns>
      <param name="xmlNamespace">The XAML namespace URI to look up.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PopScope">
      <summary>Pops the scope of the <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PushScope">
      <summary>Pushes the scope of the <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.Object)">
      <summary>Removes the item with the specified prefix key from the <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <param name="prefix">The prefix key to remove.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.String)">
      <summary>Removes the item with the specified prefix key from the <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <param name="prefix">The prefix key to remove.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Seal">
      <summary>Locks the dictionary so that it cannot be changed. </summary>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Sealed">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.XmlnsDictionary" /> is sealed. </summary>
      <returns>true if the dictionary is sealed; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Values">
      <summary>Gets a collection of all the values in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />. </summary>
      <returns>A collection of all the values in the <see cref="T:System.Windows.Markup.XmlnsDictionary" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver">
      <summary>Resolves localizable settings for classes and properties in binary XAML (BAML). </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> class. </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetElementLocalizability(System.String,System.String)">
      <summary>Returns a value that indicates whether a specified type of element can be localized and, if so, whether it can be formatted inline. </summary>
      <returns>An object that contains the localizability information for the specified assembly and element.</returns>
      <param name="assembly">The full name of the assembly that contains BAML to be localized.</param>
      <param name="className">The full class name of the element that you want to retrieve localizability information for.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetPropertyLocalizability(System.String,System.String,System.String)">
      <summary>Returns a value that indicates whether a specified property of a specified type of element can be localized. </summary>
      <returns>An object that specifies whether and how the property can be localized.</returns>
      <param name="assembly">The full name of the assembly that contains BAML to be localized.</param>
      <param name="className">The full class name of the element that you want to retrieve localizability information for.</param>
      <param name="property">The name of the property that you want to retrieve localizability information for.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveAssemblyFromClass(System.String)">
      <summary>Returns the full name of the assembly that contains the specified class.</summary>
      <returns>The full name of the assembly that contains the class.</returns>
      <param name="className">The full class name.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveFormattingTagToClass(System.String)">
      <summary>Returns the full class name of a XAML tag that has not been encountered in BAML.</summary>
      <returns>The full class name associated with the tag.</returns>
      <param name="formattingTag">The name of the tag.</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResource">
      <summary>Represents a localizable resource in a BAML stream. </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> class. </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor(System.String,System.String,System.Windows.LocalizationCategory,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> class, with the specified localizable value, localization comments, resource category, localization lock status, and visibility of the resource.</summary>
      <param name="content">The localizable value.</param>
      <param name="comments">Comments used for localizing.</param>
      <param name="category">The string category of the resource.</param>
      <param name="modifiable">true if the resource should be modifiable; otherwise, false.</param>
      <param name="readable">true if the resource should be visible for translation purposes because it is potentially readable as text in the UI; otherwise, false.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Category">
      <summary>Gets or sets the localization category of a resource. </summary>
      <returns>The localization category, as a value of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Comments">
      <summary>Gets or sets the localization comments associated with a resource. </summary>
      <returns>The localization comment string.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Content">
      <summary>Gets or sets the localizable content.</summary>
      <returns>The localizable content string.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.Equals(System.Object)">
      <summary>Determines whether a specified <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> object is equal to this object.</summary>
      <returns>true if <paramref name="other" /> is equal to this object; otherwise, false.</returns>
      <param name="other">The <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> object test for equality.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.GetHashCode">
      <summary>Returns an integer hash code representing this instance. </summary>
      <returns>An integer hash code.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Modifiable">
      <summary>Gets or sets a value that indicates whether the localizable resource is modifiable. </summary>
      <returns>true if the resource is modifiable; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Readable">
      <summary>Gets or sets whether the resource is visible for translation. </summary>
      <returns>true if the resource is visible for translation; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey">
      <summary>Represents a key that is used to identify localizable resources in a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> class with the supplied Uid, class name, and property name.</summary>
      <param name="uid">The Uid of an element that has a localizable resource.</param>
      <param name="className">The class name of a localizable resource in binary XAML (BAML).</param>
      <param name="propertyName">The property name of a localizable resource in BAML.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.AssemblyName">
      <summary>Gets the name of the assembly that defines the type of the localizable resource as declared by its <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName" />.</summary>
      <returns>The name of the assembly.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName">
      <summary>Gets the class name component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</summary>
      <returns>The class name component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Object)">
      <summary>Compares an object to an instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> for equality.</summary>
      <returns>true if the two instances are equal; otherwise, false.</returns>
      <param name="other">The object to compare for equality.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>Compares two instances of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> for equality.</summary>
      <returns>true if the two instances are equal; otherwise, false.</returns>
      <param name="other">The other instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> to compare for equality.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.GetHashCode">
      <summary>Returns an integer hash code representing this instance.</summary>
      <returns>An integer hash code.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.PropertyName">
      <summary>Gets the property name component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</summary>
      <returns>The property name component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid">
      <summary>Gets the Uid component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</summary>
      <returns>The Uid component of this <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary">
      <summary>Contains all the localizable resources in a BAML record. </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Add(System.Windows.Markup.Localizer.BamlLocalizableResourceKey,System.Windows.Markup.Localizer.BamlLocalizableResource)">
      <summary>Adds an item with the provided key and value to the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
      <param name="key">A key for the resource.</param>
      <param name="value">An object that contains the resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An item with the same key already exists.</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Clear">
      <summary>Deletes all resources from the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Contains(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>Determines whether a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object contains a resource with a specified key.</summary>
      <returns>true if the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object contains a resource with the specified key; otherwise, false.</returns>
      <param name="key">The resource key to find.</param>
      <exception cref="T:System.ArgumentNullException">key is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>Copies the contents of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object to a one-dimensional array of <see cref="T:System.Collections.DictionaryEntry" /> objects, starting at a specified index. </summary>
      <param name="array">An array of objects to hold the data.</param>
      <param name="arrayIndex">The starting index value.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> exceeds the destination array length.-or-Copy cannot fit in the remaining array space between <paramref name="arrayIndex" /> and the destination array length.</exception>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Count">
      <summary>Gets the number of localizable resources in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
      <returns>The number of localizable resources.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />. </summary>
      <returns>A specialized <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator" /> that can iterate the contents of the dictionary. </returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object has a fixed size. </summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object is read-only. </summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Item(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>Gets or sets a localizable resource specified by its key.</summary>
      <returns>The value of the resource.</returns>
      <param name="key">The key value of the resource.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Keys">
      <summary>Gets a collection that contains all the keys in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object. </summary>
      <returns>A collection that contains all the keys in the object.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Remove(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>Removes a specified localizable resource from the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</summary>
      <param name="key">The key for the resource to be removed.</param>
      <exception cref="T:System.ArgumentNullException">key is null.</exception>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.RootElementKey">
      <summary>Gets the key of the root element, if it is localizable. </summary>
      <returns>The key of the root element, if it is localizable. Otherwise, the value is set to null.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />.</summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The object value to add to the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />; otherwise, false.</returns>
      <param name="key">The key  to locate in the dictionary.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.GetEnumerator" />.</summary>
      <returns>An enumerator object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.</summary>
      <returns>The item with the specified key.</returns>
      <param name="key">The key of the item to get or set. </param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />.</summary>
      <param name="key">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Values">
      <summary>Gets a collection that contains all the values in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />. </summary>
      <returns>A collection that contains all the values in the object.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator">
      <summary>Defines a specialized enumerator that can enumerate over the content of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> object.</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Current">
      <summary>Gets the current object in the collection. </summary>
      <returns>The current object.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Entry">
      <summary>Gets the current position's <see cref="T:System.Collections.DictionaryEntry" /> object. </summary>
      <returns>An object containing the key and value of the entry at the current position.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Key">
      <summary>Gets the key of the current entry. </summary>
      <returns>The key of the current entry.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.MoveNext">
      <summary>Moves to the next item in the collection. </summary>
      <returns>true if the enumerator successfully advances to the next element. If there are no remaining elements, this method returns false.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Reset">
      <summary>Returns the enumerator to its initial position, which is before the first object in the collection. </summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionaryEnumerator.Key" />.</summary>
      <returns>The key of the current element of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionaryEnumerator.Value" />.</summary>
      <returns>The value of the current element of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Value">
      <summary>Gets the value of the current entry. </summary>
      <returns>The value of the current entry.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizer">
      <summary>Extracts resources from a BAML file and generates a localized version of a BAML source.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> class with the specified BAML source stream. </summary>
      <param name="source">A file stream that contains the BAML input to be localized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> class with the specified localizability resolver and BAML source stream. </summary>
      <param name="source">A file stream that contains the BAML input to be localized.</param>
      <param name="resolver">An instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver,System.IO.TextReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> class with the specified localizability resolver, BAML source stream, and <see cref="T:System.IO.TextReader" />.</summary>
      <param name="source">A file stream that contains the BAML input to be localized.</param>
      <param name="resolver">An instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" />.</param>
      <param name="comments">Reads the localized XML comments associated with this BAML input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify">
      <summary>Occurs when the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> encounters abnormal conditions.</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.ExtractResources">
      <summary>Extracts all localizable resources from a BAML stream. </summary>
      <returns>A copy of the localizable resources from a BAML stream, in the form of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.OnErrorNotify(System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> event.</summary>
      <param name="e">Required event arguments.</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.UpdateBaml(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizationDictionary)">
      <summary>Applies resource updates to the BAML source and writes the updated version to a specified stream in order to create a localized version of the source BAML. </summary>
      <param name="target">The stream that will receive the updated BAML.</param>
      <param name="updates">The resource updates to be applied to the source BAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> or <paramref name="updates" /> are null.</exception>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerError">
      <summary>Specifies error conditions that may be encountered by the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateUid">
      <summary>More than one element has the same <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> value.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateElement">
      <summary>The localized BAML  contains more than one reference to the same element.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.IncompleteElementPlaceholder">
      <summary>The element's substitution contains incomplete child placeholders.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidCommentingXml">
      <summary>XML comments do not have the correct format.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationAttributes">
      <summary>The localization commenting text contains invalid attributes.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationComments">
      <summary>The localization commenting text contains invalid comments.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidUid">
      <summary>The <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> does not correspond to any element in the BAML source.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.MismatchedElements">
      <summary>Indicates a mismatch between substitution and source. The substitution must contain all the element placeholders in the source.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.SubstitutionAsPlaintext">
      <summary>The substitution of an element's content cannot be parsed as XML, therefore any formatting tags in the substitution are not recognized. The substitution is instead applied as plain text.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UidMissingOnChildElement">
      <summary>A child element does not have a <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" />. As a result, it cannot be represented as a placeholder in the parent's content string.</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UnknownFormattingTag">
      <summary>A formatting tag in the substitution is not recognized.</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs">
      <summary>Provides required event data for the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> event.</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Error">
      <summary>Gets the specific error condition encountered by <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />.</summary>
      <returns>The error condition encountered by <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />, as a value of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Key">
      <summary>Gets the key associated with the resource that generated the error condition.</summary>
      <returns>The key associated with the resource that generated the error condition.</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.ElementLocalizability">
      <summary>Represents localizability settings for an element in BAML. </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> class. </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor(System.String,System.Windows.LocalizabilityAttribute)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> class with a specified formatting tag and localizability attribute. </summary>
      <param name="formattingTag">A formatting tag name. Assign a non-empty value to this parameter to indicate inline formatting.</param>
      <param name="attribute">The associated element's localizability attribute.</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.Attribute">
      <summary> Gets or sets the associated element's localizability attribute. </summary>
      <returns>The associated element's localizability attribute.</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.FormattingTag">
      <summary>Gets or sets the associated element's formatting tag. </summary>
      <returns>The formatting tag string.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupWriter">
      <summary>Provides methods to write an object to XAML format.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Windows.Markup.Primitives.MarkupWriter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object)">
      <summary>Creates an instance of a <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> from the specified object.</summary>
      <returns>A markup object that enables navigating through the tree of objects.</returns>
      <param name="instance">An object that will be the root of the serialized tree.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>Creates an instance of a <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> from the specified object and the specified serialization manager.</summary>
      <returns>A markup object that enables navigating through the tree of objects.</returns>
      <param name="instance">An object that will be the root of the serialized tree.</param>
      <param name="manager">The serialization manager.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> or <paramref name="manager" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Media.AdornerHitTestResult">
      <summary>Represents data returned from calling the <see cref="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)" /> method.</summary>
    </member>
    <member name="P:System.Windows.Media.AdornerHitTestResult.Adorner">
      <summary> Gets the visual that was hit. </summary>
      <returns>The visual that was hit.</returns>
    </member>
    <member name="T:System.Windows.Media.TextOptions">
      <summary>Defines a set of attached properties that affect the way text is displayed in an element.</summary>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextFormattingMode(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormattingMode" /> for the specified element.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextFormattingMode" /> for <paramref name="element" />.</returns>
      <param name="element">The element to get the <see cref="T:System.Windows.Media.TextFormattingMode" /> for.</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextHintingMode(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="T:System.Windows.Media.TextHintingMode" /> for the specified element.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextHintingMode" /> for <paramref name="element" />.</returns>
      <param name="element">The element to get the <see cref="T:System.Windows.Media.TextHintingMode" />  for.</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextRenderingMode(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="T:System.Windows.Media.TextRenderingMode" /> for the specified element.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextRenderingMode" /> for <paramref name="element" />.</returns>
      <param name="element">The element to get the <see cref="T:System.Windows.Media.TextRenderingMode" /> for.</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextFormattingMode(System.Windows.DependencyObject,System.Windows.Media.TextFormattingMode)">
      <summary>Sets the <see cref="T:System.Windows.Media.TextFormattingMode" /> for the specified element. </summary>
      <param name="element">The element to set the <see cref="T:System.Windows.Media.TextFormattingMode" /> for.</param>
      <param name="value">The <see cref="T:System.Windows.Media.TextFormattingMode" /> to set on <paramref name="element" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextHintingMode(System.Windows.DependencyObject,System.Windows.Media.TextHintingMode)">
      <summary>Sets the <see cref="T:System.Windows.Media.TextHintingMode" /> for the specified element.</summary>
      <param name="element">The element to set the <see cref="T:System.Windows.Media.TextHintingMode" /> for.</param>
      <param name="value">The <see cref="T:System.Windows.Media.TextHintingMode" /> to set on <paramref name="element" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextRenderingMode(System.Windows.DependencyObject,System.Windows.Media.TextRenderingMode)">
      <summary>Sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> for the specified element.</summary>
      <param name="element">The element to set the <see cref="T:System.Windows.Media.TextRenderingMode" /> for.</param>
      <param name="value">The <see cref="T:System.Windows.Media.TextRenderingMode" /> to set on <paramref name="element" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextFormattingMode">
      <summary>Gets the <see cref="T:System.Windows.Media.TextFormattingMode" /> for the element. This is an attached property.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextFormattingMode" /> for the element.</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextFormattingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextOptions.TextFormattingMode" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextOptions.TextFormattingMode" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextHintingMode">
      <summary>Gets the <see cref="T:System.Windows.Media.TextHintingMode" /> for the element. This is an attached property.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextHintingMode" /> for the element.</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextHintingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextRenderingMode">
      <summary>Sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> for the element. This is an attached property.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextRenderingMode" /> for the element.</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextRenderingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextOptions.TextRenderingMode" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextOptions.TextRenderingMode" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BeginStoryboard">
      <summary>A trigger action that begins a <see cref="T:System.Windows.Media.Animation.Storyboard" /> and distributes its animations to their targeted objects and properties.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior">
      <summary>Gets or sets the proper hand-off behavior to start an animation clock in this storyboard </summary>
      <returns>One of the <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> enumeration values. The default value is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> object. By naming the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> object, the <see cref="T:System.Windows.Media.Animation.Storyboard" /> can be controlled after it is started.</summary>
      <returns>The name of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" />. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Storyboard" /> that this <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> starts. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Storyboard" /> that the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> starts. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ControllableStoryboardAction">
      <summary>Manipulates a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that has been applied by a <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> action.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ControllableStoryboardAction.BeginStoryboardName">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" /> of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> that began the <see cref="T:System.Windows.Media.Animation.Storyboard" /> you want to interactively control. </summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" /> of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> that began the <see cref="T:System.Windows.Media.Animation.Storyboard" /> you want to interactively control. The default value is null.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Thickness" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Interpolates, between the previous key frame value and the value of the current key frame using discrete interpolation. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingThicknessKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> class with the specified <see cref="T:System.Windows.Thickness" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Thickness" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> class with the specified <see cref="T:System.Windows.Thickness" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Thickness" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> class with the specified <see cref="T:System.Windows.Thickness" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Thickness" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearThicknessKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Thickness" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.PauseStoryboard">
      <summary>A trigger action that pauses a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PauseStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PauseStoryboard" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.RemoveStoryboard">
      <summary>A trigger action that removes a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RemoveStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RemoveStoryboard" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ResumeStoryboard">
      <summary>Supports a trigger action that resumes a paused <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ResumeStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ResumeStoryboard" /> class. </summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SeekStoryboard">
      <summary>A trigger action that provides functionality for seeking (skipping) to a specified time within the active period of a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Offset">
      <summary>Gets or sets the amount by which the storyboard should move forward or backward from the seek origin <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" />. .</summary>
      <returns>A positive or negative value that specifies the amount by which the storyboard should move forward or backward from the seek origin <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" />. The default value is 0. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Origin">
      <summary>Gets or sets the position from which this seek operation's <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> is applied. </summary>
      <returns>The position from which this seek operation's <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> is applied. The default value is <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.ShouldSerializeOffset">
      <summary>Returns a value that indicates whether the <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> property of this <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> should be serialized.</summary>
      <returns>true if the <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> property of this <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio">
      <summary>A trigger action that changes the speed of a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SetStoryboardSpeedRatio.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SetStoryboardSpeedRatio.SpeedRatio">
      <summary>Gets or sets a new <see cref="T:System.Windows.Media.Animation.Storyboard" /> animation speed as a ratio of the old animation speed.</summary>
      <returns>The speed ratio for the <see cref="T:System.Windows.Media.Animation.Storyboard" />. The default value is 1.0. </returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SkipStoryboardToFill">
      <summary>A trigger action that advances a <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the end of its fill period. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SkipStoryboardToFill.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SkipStoryboardToFill" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineThicknessKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Thickness" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> using splined interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> class with the specified ending value.  </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline" />. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline" /> represents a Bezier curve which defines animation progress of the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline">
      <summary>Gets or sets the two control points that define animation progress for this key frame.  </summary>
      <returns>The two control points that specify the cubic  Bezier curve which defines the progress of the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySplineProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.StopStoryboard">
      <summary>A trigger action that stops a <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StopStoryboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StopStoryboard" /> class.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Storyboard">
      <summary>A container timeline that provides object and property targeting information for its child animations. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="isControllable">true if the storyboard should be interactively controllable; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />. </summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
      <param name="isControllable">Declares whether the animation is controllable (can be paused) once started.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="isControllable">true if the storyboard should be interactively controllable; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</summary>
      <param name="containingObject">The object to which the specified <paramref name="frameworkTemplate" /> has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />. </param>
      <param name="frameworkTemplate">The template to animate. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</summary>
      <param name="containingObject">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.  Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="frameworkTemplate">The template to animate.</param>
      <param name="isControllable">true if the storyboard should be interactively controllable; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</summary>
      <param name="containingObject">The object to which the specified <paramref name="frameworkTemplate" /> has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="frameworkTemplate">The template to animate.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</summary>
      <param name="containingObject">The object to which the specified <paramref name="frameworkTemplate" /> has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="frameworkTemplate">The template to animate.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
      <param name="isControllable">true if the storyboard should be interactively controllable; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</summary>
      <param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</param>
      <param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
      <param name="isControllable">Declares whether the animation is controllable (can be paused) once started.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.  </summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <returns>The current global speed, or 0 if the clock is stopped. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <returns>The current global speed, or null if the clock is stopped. </returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>The current global speed, or null if the clock is stopped. </returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>This clock's current iteration within its current active period, or null if this clock is stopped.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>This clock's current iteration within its current active period, or null if this clock is stopped.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>This clock's current iteration within its current active period, or null if this clock is stopped.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>null if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>null if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>null if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>null if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>null if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <returns>null if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
      <summary>Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
      <summary>Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused. </summary>
      <returns>true if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, false.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
      <summary>Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, false.</returns>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
      <returns>The dependency object targeted by <paramref name="element" />.</returns>
      <param name="element">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />. </summary>
      <returns>The name of the dependency object targeted by <paramref name="element" />.</returns>
      <param name="element">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
      <summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />. </summary>
      <returns>The property targeted by <paramref name="element" />.</returns>
      <param name="element">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause">
      <summary>Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
      <summary>Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
      <summary>Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume">
      <summary>Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
      <summary>Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
      <summary>Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</summary>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</summary>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</summary>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</summary>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</param>
      <param name="origin">The position from which <paramref name="offset" /> is applied.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
      <summary>Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="speedRatio">A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
      <summary>Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="speedRatio">A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
      <summary>Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
      <param name="speedRatio">A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object. </summary>
      <param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</param>
      <param name="value">The dependency object to target.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
      <summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name. </summary>
      <param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</param>
      <param name="name">The name of the dependency object to target.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
      <summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</summary>
      <param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property. </param>
      <param name="path">A path that describe the dependency property to be animated.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
      <summary>Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
      <summary>Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
      <summary>Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop">
      <summary>Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
      <summary>Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
      <summary>Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />. </summary>
      <param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.Target">
      <summary>Gets or sets the object that should be animated. </summary>
      <returns>The object to animate.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
      <summary>Gets or sets the name of the object to animate. The object must be a <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" />, or <see cref="T:System.Windows.Freezable" />.</summary>
      <returns>The name of the <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" />, or <see cref="T:System.Windows.Freezable" /> to animate.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>Gets or sets the property that should be animated. </summary>
      <returns>The property to animate.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimation">
      <summary> Animates the value of a  <see cref="T:System.Windows.Thickness" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.By" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.By" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" />.          </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.From">
      <summary>  Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.From" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.From" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" />. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.To" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.To" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Thickness" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Thickness" /> property along a set of <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValue(System.Windows.Thickness,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Add(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Contains(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ThicknessKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Remove(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Navigation.CustomContentState">
      <summary>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> enables the ability to navigate through different states of a single piece of source content without reloading the source content for each subsequent navigation.</summary>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.CustomContentState" /> class.</summary>
    </member>
    <member name="P:System.Windows.Navigation.CustomContentState.JournalEntryName">
      <summary>The name for the content that is stored in navigation history. The value of <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> is displayed from <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />, and Windows Internet Explorer 7 navigation UI.</summary>
      <returns>The <see cref="T:System.String" /> name of the content that is stored in navigation history.</returns>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)">
      <summary>Called to reapply state to a piece of content when navigation occurs.</summary>
      <param name="navigationService">The <see cref="T:System.Windows.Navigation.NavigationService" /> owned by the navigator responsible for the content to which this <see cref="T:System.Windows.Navigation.CustomContentState" /> is being applied.</param>
      <param name="mode">A <see cref="T:System.Windows.Navigation.NavigationMode" /> that specifies how the content to which the <see cref="T:System.Windows.Navigation.CustomContentState" /> is being applied was navigated to.</param>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
      <summary>Provides data for the FragmentNavigation event.</summary>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
      <summary>Gets the uniform resource identifier (URI) fragment.</summary>
      <returns>The URI fragment. If you set the property to an empty string, the top of the content will be navigated to by default.</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the fragment navigation has been handled. </summary>
      <returns>true if the navigation has been handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Navigator">
      <summary>The navigator that raised the <see cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" /> event.</summary>
      <returns>A <see cref="T:System.Object" /> that refers to the navigator (Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />.) that is navigating to the content fragment.</returns>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
      <summary>Represents the method that will handle FragmentNavigation events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.IProvideCustomContentState">
      <summary>Implemented by a class that needs to add custom state to the navigation history entry for content before the content is navigated away from.</summary>
    </member>
    <member name="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState">
      <summary>Returns an instance of a custom state class that is to be associated with content in navigation history.</summary>
      <returns>An instance of a custom <see cref="T:System.Windows.Navigation.CustomContentState" /> class that is to be associated with content in navigation history.</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntry">
      <summary>Represents an entry in either back or forward navigation history.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.JournalEntry" /> class. </summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.CustomContentState">
      <summary>Gets or sets the <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is associated with this journal entry.</summary>
      <returns>The <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is associated with this journal entry. If one is not associated, null is returned.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)">
      <summary>Returns the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property of the journal entry for the specified element. </summary>
      <returns>The value of the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property of the journal entry for the specified element. </returns>
      <param name="dependencyObject">The element from which to get the attached property value.</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property of the journal entry for the specified element. </summary>
      <returns>The <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property of the journal entry for the specified element. </returns>
      <param name="dependencyObject">The element from which to get the attached property value.</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Called when this object is serialized.</summary>
      <param name="info">The data that is required to serialize the target object.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.KeepAlive">
      <summary>Gets or sets a value that indicates whether the content of a journal entry is either retained or re-created when navigated to in navigation history.</summary>
      <returns>true if the content is retained in navigation history; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Name">
      <summary>Gets or sets the name of the journal entry.</summary>
      <returns>The name of the journal entry.</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.NameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> attached property of the specified element.</summary>
      <param name="dependencyObject">The element on which to set the attached property value.</param>
      <param name="keepAlive">true to keep the journal entry in memory; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)">
      <summary>Sets the <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> attached property of the specified element.</summary>
      <param name="dependencyObject">The element on which to set the attached property value.</param>
      <param name="name">The name to be assigned to the attached property.</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Source">
      <summary>Gets or sets the URI of the content that was navigated to.</summary>
      <returns>The URI of the content that was navigated to, or null if no URI is associated with the entry.</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryListConverter">
      <summary>This type or member supports the Microsoft .NET infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.#ctor">
      <summary>This type or member supports the Microsoft .NET infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <returns>A converted value.</returns>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A converted value.</returns>
      <param name="value">The value produced by the binding target.</param>
      <param name="targetType">The type of the binding source property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryPosition">
      <summary>Specifies the position in navigation history of a piece of content with respect to current content. <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> is used by <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" />.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Back">
      <summary>Content is in back navigation history relative to current content.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Current">
      <summary>Content is the current content.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Forward">
      <summary>Content is in forward navigation history with respect to current content.</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter">
      <summary>
        <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> merges navigation back history and navigation forward history (as exposed by <see cref="T:System.Windows.Controls.Frame" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" />) into a single, Windows Internet Explorer 7-style navigation menu.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Merges two navigation history stacks.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> that can be used to enumerate the merged list of navigation history stacks if neither passed navigation stack is null. null, otherwise.</returns>
      <param name="values">An array of two navigation stacks. For <see cref="T:System.Windows.Controls.Frame" />, the navigation stacks are available from the following properties:<see cref="P:System.Windows.Controls.Frame.BackStack" /><see cref="P:System.Windows.Controls.Frame.ForwardStack" />For <see cref="T:System.Windows.Navigation.NavigationWindow" />, the navigation stacks are available from the following properties:<see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /><see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /></param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
      <returns>Always returns <see cref="F:System.Windows.Data.Binding.DoNothing" />.</returns>
      <param name="value">This parameter is not used.</param>
      <param name="targetTypes">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.GetJournalEntryPosition(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> attached property for the specified element.</summary>
      <returns>The value of the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> attached property of the journal entry for the specified element. </returns>
      <param name="element">The element from which to get the attached property value.</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition">
      <summary>Gets or sets a value that specifies whether an entry is in back navigation history, forward navigation history, or is the current content of a navigator.</summary>
      <returns>A <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> value that specifies whether an entry is in back navigation history, forward navigation history, or is the current content of a navigator.</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> attached property.</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.SetJournalEntryPosition(System.Windows.DependencyObject,System.Windows.Navigation.JournalEntryPosition)">
      <summary>Sets the <see cref="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty" /> attached property of the specified element.</summary>
      <param name="element">The element on which to set the attached property value.</param>
      <param name="position">Position of the <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> object.</param>
    </member>
    <member name="T:System.Windows.Navigation.JournalOwnership">
      <summary>Specifies whether a <see cref="T:System.Windows.Controls.Frame" /> uses its own journal. <see cref="T:System.Windows.Navigation.JournalOwnership" /> is used by the <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> property.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
      <summary>Whether or not this <see cref="T:System.Windows.Controls.Frame" /> will create and use its own journal depends on its parent.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
      <summary>The <see cref="T:System.Windows.Controls.Frame" /> maintains its own journal.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
      <summary>The <see cref="T:System.Windows.Controls.Frame" /> uses the journal of the next available navigation host up the content tree, if available. Otherwise, navigation history is not maintained for the <see cref="T:System.Windows.Controls.Frame" />.</summary>
    </member>
    <member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
      <summary>Represents the method that will handle LoadCompleted events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatedEventHandler">
      <summary>Represents the method that will handle Navigated events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
      <summary>Provides data for the Navigating event.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Content">
      <summary>Gets a reference to the content object that is being navigated to.</summary>
      <returns>A <see cref="T:System.Object" /> reference to the content object that is being navigated to; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave">
      <summary>Gets and sets the <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is associated with the back navigation history entry for the page being navigated from.</summary>
      <returns>The <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is associated with the back navigation history entry for the page being navigated from.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData">
      <summary>Gets the optional data <see cref="T:System.Object" /> that was passed when navigation started.</summary>
      <returns>The optional data <see cref="T:System.Object" /> that was passed when navigation started.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator">
      <summary>Indicates whether the navigator (<see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />) that is specified by <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> is servicing this navigation, or whether a parent navigator is doing so.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the navigator that is specified by <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> is servicing this navigation. Otherwise, false is returned, such as during a nested <see cref="T:System.Windows.Controls.Frame" /> navigation.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
      <summary>Gets a <see cref="T:System.Windows.Navigation.NavigationMode" /> value that indicates the type of navigation that is occurring.</summary>
      <returns>A <see cref="T:System.Windows.Navigation.NavigationMode" /> value that indicates the type of navigation that is occurring.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator">
      <summary>The navigator that raised this event.</summary>
      <returns>An <see cref="T:System.Object" /> that is the navigator that raised this event</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.TargetContentState">
      <summary>Gets the <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is to be applied to the content being navigated to.</summary>
      <returns>The <see cref="T:System.Windows.Navigation.CustomContentState" /> object that is to be applied to the content being navigated to.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) for the content being navigated to.</summary>
      <returns>The <see cref="T:System.Uri" /> for the content being navigated to. If navigating to an object, <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri" /> is null.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.WebRequest">
      <summary>Gets the <see cref="T:System.Net.WebRequest" /> object that is used to request the specified content.</summary>
      <returns>Gets the <see cref="T:System.Net.WebRequest" /> object that is used to request the specified content. </returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
      <summary>Represents the method that will handle Navigating events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationEventArgs">
      <summary>Provides data for non-cancelable navigation events, including <see cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />, <see cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />, and <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />.  </summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
      <summary>Gets the root node of the target page's content. </summary>
      <returns>The root element of the target page's content.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.ExtraData">
      <summary>Gets an optional user-defined data object. </summary>
      <returns>The data object.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.IsNavigationInitiator">
      <summary>Gets a value that indicates whether the current navigator initiated the navigation.</summary>
      <returns>true if the navigation was initiated inside the current frame; false if the parent navigator is also navigating.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Navigator">
      <summary>Gets the navigator that raised the event </summary>
      <returns>The navigator that raised the event.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) of the target page.</summary>
      <returns>The URI of the target page.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.WebResponse">
      <summary>Gets the Web response to allow access to HTTP headers and other properties. </summary>
      <returns>The Web response.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
      <summary>Provides data for the NavigationFailed event.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
      <summary>Gets the <see cref="T:System.Exception" /> that was raised as the result of a failed navigation.</summary>
      <returns>The <see cref="T:System.Exception" /> that was raised as the result of a failed navigation.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData">
      <summary>Gets the optional data <see cref="T:System.Object" /> that was passed when navigation commenced.</summary>
      <returns>The optional data <see cref="T:System.Object" /> that was passed when navigation commenced.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
      <summary>Gets or sets whether the failed navigation exception has been handled.</summary>
      <returns>true if the exception is handled; otherwise, false (default).</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Navigator">
      <summary>The navigator that raised this event.</summary>
      <returns>An <see cref="T:System.Object" /> that is the navigator that raised this event</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) for the content that could not be navigated to.</summary>
      <returns>The <see cref="T:System.Uri" /> for the content that could not be navigated to.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest">
      <summary>Gets the web request that was used to request the specified content.</summary>
      <returns>Gets the <see cref="T:System.Net.WebRequest" /> object that was used to request the specified content. If navigating to an object, <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest" /> is null.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse">
      <summary>Gets the web response that was returned after attempting to download the requested the specified content.</summary>
      <returns>The <see cref="T:System.Net.WebResponse" /> that was returned after attempting to download the requested the specified content. If the navigation failed, <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse" /> is null.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
      <summary>Represents the method that will handle NavigationFailed events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationMode">
      <summary>Specifies the type of navigation that is taking place <see cref="T:System.Windows.Navigation.NavigationMode" /> is used by the <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode" /> property.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.New">
      <summary>Navigating to new content. This occurs when the Navigate method is called, or when Source property is set.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Back">
      <summary>Navigating back to the most recent content in back navigation history. This occurs when the GoBack method is called.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Forward">
      <summary>Navigating to the most recent content on forward navigation history. This occurs when the GoForward method is called.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Refresh">
      <summary>Reloading the current content. This occurs when the Refresh method is called.</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Application.NavigationProgress" /> and <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" /> events. </summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead">
      <summary>Gets the number of bytes that have been read. </summary>
      <returns>The number of bytes that have been read.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes">
      <summary>Gets the maximum number of bytes. </summary>
      <returns>The maximum number of bytes.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Navigator">
      <summary>Gets the navigator that raised the event </summary>
      <returns>The navigator that raised the event</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) of the target page. </summary>
      <returns>The URI of the target page.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventHandler">
      <summary>Represents the method that will handle NavigationProgress events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationService">
      <summary>Contains methods, properties, and events to support navigation.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState" /> object.</summary>
      <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> object that represents application-defined state that is associated with a specific piece of content.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> is null, and a <see cref="T:System.Windows.Navigation.CustomContentState" /> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
      <summary>Gets a value that indicates whether there is at least one entry in back navigation history.</summary>
      <returns>true if there is at least one entry in back navigation history; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
      <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.</summary>
      <returns>true if there is at least one entry in forward navigation history; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Content">
      <summary>Gets or sets a reference to the object that contains the current content.</summary>
      <returns>An object that is a reference to the object that contains the current content.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
      <summary>Gets the uniform resource identifier (URI) of the content that was last navigated to.</summary>
      <returns>A <see cref="T:System.Uri" /> for the content that was last navigated to, if navigated to by using a URI; otherwise, null.</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
      <summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)">
      <summary>Gets a reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>A reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />; can be null in some cases (see Remarks).</returns>
      <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> in content that is hosted by a navigator.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dependencyObject" /> parameter is null.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoBack">
      <summary>Navigates to the most recent entry in back navigation history, if there is one.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> is called when there are no entries in back navigation history.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoForward">
      <summary>Navigate to the most recent entry in forward navigation history, if there is one.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> is called when there are no entries in forward navigation history.</exception>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.LoadCompleted">
      <summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)">
      <summary>Navigate asynchronously to content that is contained by an object.</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="root">An object that contains the content to navigate to.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)">
      <summary>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="root">An object that contains the content to navigate to.</param>
      <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
      <summary>Navigate asynchronously to content that is specified by a uniform resource identifier (URI).</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)">
      <summary>Navigate asynchronously to source content located at a uniform resource identifier (URI), and pass an object that contains data to be used for processing during navigation.</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)">
      <summary>Navigate asynchronously to source content located at a uniform resource identifier (URI), pass an object containing navigation state for processing during navigation, and sandbox the content.</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
      <param name="sandboxExternalContent">Download content into a partial trust security sandbox (with the default Internet zone set of permissions, if true. The default is false.</param>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigated">
      <summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Navigation.NavigationService.Content" /> property, although it may not have completed loading.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigating">
      <summary>Occurs when a new navigation is requested.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
      <summary>Occurs when an error occurs while navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationProgress">
      <summary>Occurs periodically during a download to provide navigation progress information.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
      <summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Refresh">
      <summary>Reloads the current content.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.RemoveBackEntry">
      <summary>Removes the most recent journal entry from back history.</summary>
      <returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry" /> in back navigation history, if there is one.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Source">
      <summary>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI for the current content, or the content that is currently being navigated to.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.StopLoading">
      <summary>Stops further downloading of content for the current navigation request.</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
      <summary>Represents the method that will handle NavigationStopped events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationUIVisibility">
      <summary>Specifies whether a <see cref="T:System.Windows.Controls.Frame" /> displays its navigation chrome. <see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> is used by the <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> property.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Automatic">
      <summary>The navigation chrome is visible when a <see cref="T:System.Windows.Controls.Frame" /> uses its own journal (see <see cref="P:System.Windows.Controls.Frame.JournalOwnership" />).</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Visible">
      <summary>The navigation chrome is visible.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Hidden">
      <summary>The navigation chrome is not visible.</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationWindow">
      <summary>Represents a window that supports content navigation.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.NavigationWindow" /> class. </summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState" /> object.</summary>
      <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> object that represents application-defined state that is associated with a specific piece of content.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> is null, and a <see cref="T:System.Windows.Navigation.CustomContentState" /> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
      <exception cref="T:System.InvalidOperationException">when this method is called. This prevents content from being added to <see cref="T:System.Windows.Navigation.NavigationWindow" /> using XAML.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddText(System.String)">
      <summary>Adds text to the object.</summary>
      <param name="text">The text to add to the object.</param>
      <exception cref="T:System.ArgumentException">if the text parameter value contains non-whitespace characters.</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.BackStack">
      <summary>Gets an <see cref="T:System.Collections.IEnumerable" /> that you use to enumerate the entries in back navigation history for a <see cref="T:System.Windows.Navigation.NavigationWindow" />.  </summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> if at least one entry has been added to back navigation history, or null if there are not entries or the <see cref="T:System.Windows.Navigation.NavigationWindow" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.BackStackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoBack">
      <summary>Gets a value that indicates whether there is at least one entry in back navigation history.  </summary>
      <returns>true if there is at least one entry in back navigation history; false if there are no entries in back navigation history or the <see cref="T:System.Windows.Navigation.NavigationWindow" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoBackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoForward">
      <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.  </summary>
      <returns>true if there is at least one entry in forward navigation history; false if there are no entries in forward navigation history, or the <see cref="T:System.Windows.Navigation.NavigationWindow" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoForwardProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CurrentSource">
      <summary>Gets the uniform resource identifier (URI) of the content that was last navigated to.</summary>
      <returns>The URI for the content that was last navigated to, if navigated to by using a URI; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ForwardStack">
      <summary>Gets an <see cref="T:System.Collections.IEnumerable" /> that you use to enumerate the entries in back navigation history for a <see cref="T:System.Windows.Navigation.NavigationWindow" />.  </summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> if at least one entry has been added to forward navigation history, or null if there are no entries or the <see cref="T:System.Windows.Navigation.NavigationWindow" /> does not own its own navigation history.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ForwardStackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation">
      <summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoBack">
      <summary>Navigates to the most recent item in back navigation history.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationWindow.GoBack" /> is called when there are no entries in back navigation history.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoForward">
      <summary>Navigates to the most recent item in forward navigation history.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationWindow.GoForward" /> is called when there are no entries in forward navigation history.</exception>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.LoadCompleted">
      <summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)">
      <summary>Navigates asynchronously to content that is contained by an object.</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="content">An <see cref="T:System.Object" /> that contains the content to navigate to.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)">
      <summary>Navigates asynchronously to content that is contained by an object, and passes an object that contains data to be used for processing during navigation.</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="content">An <see cref="T:System.Object" /> that contains the content to navigate to.</param>
      <param name="extraData">A <see cref="T:System.Object" /> that contains data to be used for processing during navigation.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)">
      <summary>Navigates asynchronously to content that is specified by a uniform resource identifier (URI).</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)">
      <summary>Navigates asynchronously to source content located at a uniform resource identifier (URI), and pass an object that contains data to be used for processing during navigation.</summary>
      <returns>true if a navigation is not canceled; otherwise, false.</returns>
      <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
      <param name="extraData">A <see cref="T:System.Object" /> that contains data to be used for processing during navigation.</param>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigated">
      <summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property, although it may not have completed loading.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigating">
      <summary>Occurs when a new navigation is requested.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationFailed">
      <summary>Occurs when an error is raised while navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationProgress">
      <summary>Occurs periodically during a download to provide navigation progress information.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.NavigationService">
      <summary>Gets the <see cref="T:System.Windows.Navigation.NavigationService" /> that is used by this <see cref="T:System.Windows.Navigation.NavigationWindow" /> to provide navigation services to its content.</summary>
      <returns>The navigation service used by this <see cref="T:System.Windows.Navigation.NavigationWindow" />.</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationStopped">
      <summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading" /> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnApplyTemplate">
      <summary>Called when the template generation for the visual tree is created.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.Closed" /> event.</summary>
      <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnCreateAutomationPeer">
      <summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> object for this <see cref="T:System.Windows.Navigation.NavigationWindow" />.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> object for this <see cref="T:System.Windows.Navigation.NavigationWindow" />.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Refresh">
      <summary>Reloads the current content.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry">
      <summary>Removes the most recent journal entry from back history.</summary>
      <returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry" /> in back navigation history, if there is one.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Navigation.NavigationWindow" /> isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with default Internet zone permission set).  </summary>
      <returns>true if content is isolated within a partial trust security sandbox; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> is set when an application is executing in partial trust.</exception>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SandboxExternalContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.ShouldSerializeContent">
      <summary>Indicates whether the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Navigation.NavigationWindow" /> shows its navigation UI.  </summary>
      <returns>true if the navigation UI is displayed; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ShowsNavigationUIProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.Source">
      <summary>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to.  </summary>
      <returns>The URI for the current content, or the content that is currently being navigated to.</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.StopLoading">
      <summary>Stops further downloading of content for the current navigation request.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.System#Windows#Markup#IUriContext#BaseUri">
      <summary>Gets or sets the base uniform resource identifier (URI) of the current context.</summary>
      <returns>The base URI of the current context.</returns>
    </member>
    <member name="T:System.Windows.Navigation.PageFunction`1">
      <summary>Represents a special type of page that allows you to treat navigation to a page in a similar fashion to calling a method. </summary>
      <typeparam name="T">The type of value that the <see cref="T:System.Windows.Navigation.PageFunction`1" /> returns to a caller.</typeparam>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.PageFunction`1" /> class. </summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})">
      <summary>A <see cref="T:System.Windows.Navigation.PageFunction`1" /> calls <see cref="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})" /> to return to the caller, passing a return value via a <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> object</summary>
      <param name="e">A <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> object that contains the <see cref="T:System.Windows.Navigation.PageFunction`1" /> return value (<see cref="P:System.Windows.Navigation.ReturnEventArgs`1.Result" />).</param>
    </member>
    <member name="E:System.Windows.Navigation.PageFunction`1.Return">
      <summary>Occurs when a called <see cref="T:System.Windows.Navigation.PageFunction`1" /> returns, and can only be handled by the calling page.</summary>
    </member>
    <member name="T:System.Windows.Navigation.PageFunctionBase">
      <summary>An abstract base class that is the parent of all page function classes.</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.PageFunctionBase" /> type.</summary>
    </member>
    <member name="P:System.Windows.Navigation.PageFunctionBase.RemoveFromJournal">
      <summary>Gets or sets a value that indicates whether the page function should not be added to navigation history.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether a page function should not be added to navigation history. The default value is false.</returns>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.Start">
      <summary>Override this method to initialize a <see cref="T:System.Windows.Navigation.PageFunction`1" /> when it is navigated to for the first time.</summary>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> event. </summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> class. This constructor is protected.</summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> class with a uniform resource identifier (URI) and target name.</summary>
      <param name="uri">The target URI.</param>
      <param name="target">The target name.</param>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes a specified event handler from a specified sender. </summary>
      <param name="genericHandler">The name of the handler.</param>
      <param name="genericTarget">The object that is raising the event.</param>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Target">
      <summary>The navigator that will host the content that is navigated to.</summary>
      <returns>The navigator (<see cref="T:System.Windows.Navigation.NavigationWindow" /> or <see cref="T:System.Windows.Controls.Frame" />) that will host the content that is navigated to.</returns>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Uri">
      <summary>The uniform resource identifier (URI) for the content that is being navigated to.</summary>
      <returns>The URI for the content that is being navigated to.</returns>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> routed event of the <see cref="T:System.Windows.Documents.Hyperlink" /> class.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventArgs`1">
      <summary>Provides data for the <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> event. </summary>
      <typeparam name="T">The type of the return value.</typeparam>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> class. </summary>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> class with the return value.</summary>
      <param name="result">The value to be returned.</param>
    </member>
    <member name="P:System.Windows.Navigation.ReturnEventArgs`1.Result">
      <summary>Gets or sets the value that is returned by the page function.</summary>
      <returns>The value that is returned by the page function.</returns>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventHandler`1">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> event of the <see cref="T:System.Windows.Navigation.PageFunction`1" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
      <typeparam name="T">The type specifier for the event.</typeparam>
    </member>
    <member name="T:System.Windows.Resources.ContentTypes">
      <summary>Supports Extensible Application Markup Language (XAML) as a content type and resource.</summary>
    </member>
    <member name="M:System.Windows.Resources.ContentTypes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.ContentTypes" /> class.</summary>
    </member>
    <member name="F:System.Windows.Resources.ContentTypes.XamlContentType">
      <summary>Declares the Extensible Application Markup Language (XAML) content type.</summary>
      <returns>A string that is used to identify Extensible Application Markup Language (XAML) as a Multipurpose Internet Mail Extensions (MIME) type.</returns>
    </member>
    <member name="T:System.Windows.Resources.StreamResourceInfo">
      <summary>Stores information for a stream resource used in Windows Presentation Foundation (WPF), such as images.</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.StreamResourceInfo" /> class.</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.StreamResourceInfo" /> class based on a provided stream.</summary>
      <param name="stream">The reference stream.</param>
      <param name="contentType">The Multipurpose Internet Mail Extensions (MIME)  content type of the stream.</param>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
      <summary> Gets or sets the content type of a stream. </summary>
      <returns>The Multipurpose Internet Mail Extensions (MIME) content type.</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
      <summary> Gets or sets the actual stream of the resource. </summary>
      <returns>The stream for the resource.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Ellipse">
      <summary>Draws an ellipse. </summary>
    </member>
    <member name="M:System.Windows.Shapes.Ellipse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Ellipse" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.GeometryTransform">
      <summary>Gets the value of any <see cref="P:System.Windows.Media.Transform.Identity" /> transforms that are applied to the <see cref="T:System.Windows.Media.Geometry" /> of an <see cref="T:System.Windows.Shapes.Ellipse" /> before it is rendered.</summary>
      <returns>The value of any <see cref="P:System.Windows.Media.Transform.Identity" /> transforms that are applied to the <see cref="T:System.Windows.Media.Geometry" /> of an <see cref="T:System.Windows.Shapes.Ellipse" /> before it is rendered.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.RenderedGeometry">
      <summary>Gets the final rendered <see cref="T:System.Windows.Media.Geometry" /> of an <see cref="T:System.Windows.Shapes.Ellipse" />.</summary>
      <returns>The final rendered <see cref="T:System.Windows.Media.Geometry" /> of an <see cref="T:System.Windows.Shapes.Ellipse" />.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Line">
      <summary>Draws a straight line between two points. </summary>
    </member>
    <member name="M:System.Windows.Shapes.Line.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Line" /> class. </summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X1">
      <summary>Gets or sets the x-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> start point.  </summary>
      <returns>The x-coordinate for the start point of the line. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X1Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.X1" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.X1" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.X2">
      <summary>Gets or sets the x-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> end point.  </summary>
      <returns>The x-coordinate for the end point of the line. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X2Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.X2" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.X2" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y1">
      <summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> start point.  </summary>
      <returns>The y-coordinate for the start point of the line. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y1Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.Y1" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.Y1" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y2">
      <summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Shapes.Line" /> end point.  </summary>
      <returns>The y-coordinate for the end point of the line. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y2Property">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Line.Y2" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.Y2" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Path">
      <summary>Draws a series of connected lines and curves. </summary>
    </member>
    <member name="M:System.Windows.Shapes.Path.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Path" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Path.Data">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Geometry" /> that specifies the shape to be drawn.  </summary>
      <returns>A description of the shape to be drawn. </returns>
    </member>
    <member name="F:System.Windows.Shapes.Path.DataProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Path.Data" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Path.Data" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polygon">
      <summary>Draws a polygon, which is a connected series of lines that form a closed shape.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polygon.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polygon" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.FillRule">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.FillRule" /> enumeration that specifies how the interior fill of the shape is determined.   </summary>
      <returns>One of the <see cref="T:System.Windows.Media.FillRule" /> enumeration values. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.Points">
      <summary>Gets or sets a collection that contains the vertex points of the polygon.   </summary>
      <returns>A collection of <see cref="T:System.Windows.Point" /> structures that describe the vertex points of the polygon. The default is a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polygon.Points" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Polygon.Points" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polyline">
      <summary>Draws a series of connected straight lines. </summary>
    </member>
    <member name="M:System.Windows.Shapes.Polyline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polyline" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.FillRule">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.FillRule" /> enumeration that specifies how the interior fill of the shape is determined.  </summary>
      <returns>One of the <see cref="T:System.Windows.Media.FillRule" /> enumeration values. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.Points">
      <summary>Gets or sets a collection that contains the vertex points of the <see cref="T:System.Windows.Shapes.Polyline" />.  </summary>
      <returns>A collection of <see cref="T:System.Windows.Point" /> structures that describe the vertex points of the <see cref="T:System.Windows.Shapes.Polyline" />. The default is a null  reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.PointsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Polyline.Points" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Polyline.Points" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Rectangle">
      <summary>Draws a rectangle.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Rectangle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Rectangle" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.GeometryTransform">
      <summary>Gets the <see cref="T:System.Windows.Media.Transform" /> that is applied to this <see cref="T:System.Windows.Shapes.Rectangle" />. </summary>
      <returns>The transform that is applied to this <see cref="T:System.Windows.Shapes.Rectangle" />.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusX">
      <summary>Gets or sets the x-axis radius of the ellipse that is used to round the corners of the rectangle.  </summary>
      <returns>The x-axis radius of the ellipse that is used to round the corners of the rectangle.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusY">
      <summary>Gets or sets the y-axis radius of the ellipse that is used to round the corners of the rectangle.  </summary>
      <returns>The y-axis radius of the ellipse that is used to round the corners of the rectangle. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RenderedGeometry">
      <summary>Gets a <see cref="T:System.Windows.Media.Geometry" /> object that represents the final rendered shape. </summary>
      <returns>The final rendered shape.</returns>
    </member>
    <member name="T:System.Windows.Shapes.Shape">
      <summary>Provides a base class for shape elements, such as <see cref="T:System.Windows.Shapes.Ellipse" />, <see cref="T:System.Windows.Shapes.Polygon" />, and <see cref="T:System.Windows.Shapes.Rectangle" />.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Shape" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges a <see cref="T:System.Windows.Shapes.Shape" /> by evaluating its <see cref="P:System.Windows.Shapes.Shape.RenderedGeometry" /> and <see cref="P:System.Windows.Shapes.Shape.Stretch" /> properties.</summary>
      <returns>The final size of the arranged <see cref="T:System.Windows.Shapes.Shape" /> element.</returns>
      <param name="finalSize">The final evaluated size of the <see cref="T:System.Windows.Shapes.Shape" />.</param>
    </member>
    <member name="P:System.Windows.Shapes.Shape.DefiningGeometry">
      <summary>Gets a value that represents the <see cref="T:System.Windows.Media.Geometry" /> of the <see cref="T:System.Windows.Shapes.Shape" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> of the <see cref="T:System.Windows.Shapes.Shape" />.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Fill">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the shape's interior is painted. </summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.FillProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Fill" /> dependency property. This field is read-only.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Fill" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.GeometryTransform">
      <summary>Gets a value that represents a <see cref="T:System.Windows.Media.Transform" /> that is applied to the geometry of a <see cref="T:System.Windows.Shapes.Shape" /> prior to when it is drawn.</summary>
      <returns>A <see cref="T:System.Windows.Media.Transform" /> that is applied to the geometry of a <see cref="T:System.Windows.Shapes.Shape" /> prior to when it is drawn.</returns>
    </member>
    <member name="M:System.Windows.Shapes.Shape.MeasureOverride(System.Windows.Size)">
      <summary>Measures a <see cref="T:System.Windows.Shapes.Shape" /> during the first layout pass prior to arranging it.</summary>
      <returns>The maximum <see cref="T:System.Windows.Size" /> for the <see cref="T:System.Windows.Shapes.Shape" />.</returns>
      <param name="constraint">A maximum <see cref="T:System.Windows.Size" /> to not exceed.</param>
    </member>
    <member name="M:System.Windows.Shapes.Shape.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Provides a means to change the default appearance of a <see cref="T:System.Windows.Shapes.Shape" /> element.</summary>
      <param name="drawingContext">A <see cref="T:System.Windows.Media.DrawingContext" /> object that is drawn during the rendering pass of this <see cref="T:System.Windows.Shapes.Shape" />.</param>
    </member>
    <member name="P:System.Windows.Shapes.Shape.RenderedGeometry">
      <summary>Gets a value that represents the final rendered <see cref="T:System.Windows.Media.Geometry" /> of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
      <returns>The final rendered <see cref="T:System.Windows.Media.Geometry" /> of a <see cref="T:System.Windows.Shapes.Shape" />.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stretch">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Stretch" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Stretch" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stroke">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted. </summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
      <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
      <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
      <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
      <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
      <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
      <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineJoin" /></returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
      <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
      <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Stroke" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Stroke" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
      <returns>One of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration values. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeThickness">
      <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> outline. </summary>
      <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline.</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItem">
      <summary>Represents the base class for the <see cref="T:System.Windows.Shell.JumpPath" /> and <see cref="T:System.Windows.Shell.JumpTask" /> classes.</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpItem.CustomCategory">
      <summary>Gets or sets the name of the category the <see cref="T:System.Windows.Shell.JumpItem" /> is grouped with in the Windows 7 taskbar Jump List.</summary>
      <returns>The name of the category the <see cref="T:System.Windows.Shell.JumpItem" /> is grouped with. The default is null.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItemRejectionReason">
      <summary>Describes why a <see cref="T:System.Windows.Shell.JumpItem" /> could not be added to the Jump List by the Windows shell.</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.None">
      <summary>The reason is not specified.</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.InvalidItem">
      <summary>The <see cref="T:System.Windows.Shell.JumpItem" /> references an invalid file path, or the operating system does not support Jump Lists.</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.NoRegisteredHandler">
      <summary>The application is not registered to handle the file name extension of the <see cref="T:System.Windows.Shell.JumpItem" />.</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.RemovedByUser">
      <summary>The item was previously in the Jump List but was removed by the user.</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRejectedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" /> event.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem},System.Collections.Generic.IList{System.Windows.Shell.JumpItemRejectionReason})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> class that has the specified parameters.</summary>
      <param name="rejectedItems">The list of Jump List items that could not be added to the Jump List by the Windows shell.</param>
      <param name="reasons">The list of reasons why the rejected Jump List items could not be added to the Jump List.</param>
      <exception cref="T:System.ArgumentException">The count of <paramref name="rejectedItems " />does not equal the count of rejection <paramref name="reasons" />.</exception>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectedItems">
      <summary>Gets the list of Jump List items that could not be added to the Jump List by the Windows shell.</summary>
      <returns>The list of Jump List items that could not be added to the Jump List by the Windows shell.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectionReasons">
      <summary>Gets the list of reasons why the rejected Jump List items could not be added to the Jump List.</summary>
      <returns>The list of reasons why the rejected Jump List items could not be added to the Jump List.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRemovedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" /> event.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> class that has the specified parameters.</summary>
      <param name="removedItems">The list of Jump List items that have been removed by the user since <see cref="M:System.Windows.Shell.JumpList.Apply" /> was last called.</param>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRemovedEventArgs.RemovedItems">
      <summary>Gets the list of Jump List items that have been removed by the user since the <see cref="M:System.Windows.Shell.JumpList.Apply" /> method was last called.</summary>
      <returns>The list of Jump List items that have been removed by the user since the <see cref="M:System.Windows.Shell.JumpList.Apply" /> method was last called.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpList">
      <summary>Represents a list of items and tasks displayed as a menu on a Windows 7 taskbar button.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpList" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpList" /> class with the specified parameters.</summary>
      <param name="items">The collection of <see cref="T:System.Windows.Shell.JumpItem" /> objects that are displayed in the Jump List.</param>
      <param name="showFrequent">A value that indicates whether frequently used items are displayed in the Jump List.</param>
      <param name="showRecent">A value that indicates whether recently used items are displayed in the Jump List.</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
      <summary>Adds the specified item path to the Recent category of the Jump List.</summary>
      <param name="itemPath">The path to add to the Jump List.</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
      <summary>Adds the specified jump path to the Recent category of the Jump List.</summary>
      <param name="jumpPath">The <see cref="T:System.Windows.Shell.JumpPath" /> to add to the Jump List.</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
      <summary>Adds the specified jump task to the Recent category of the Jump List.</summary>
      <param name="jumpTask">The <see cref="T:System.Windows.Shell.JumpTask" /> to add to the Jump List.</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.Apply">
      <summary>Sends the <see cref="T:System.Windows.Shell.JumpList" /> to the Windows shell in its current state.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Shell.JumpList" /> is not completely initialized.</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.BeginInit">
      <summary>Signals the start of the <see cref="T:System.Windows.Shell.JumpList" /> initialization.</summary>
      <exception cref="T:System.InvalidOperationException">This call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> is nested in a previous call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.EndInit">
      <summary>Signals the end of the <see cref="T:System.Windows.Shell.JumpList" /> initialization.</summary>
      <exception cref="T:System.NotSupportedException">This call to <see cref="M:System.Windows.Shell.JumpList.EndInit" /> is not paired with a call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
      <summary>Returns the <see cref="T:System.Windows.Shell.JumpList" /> object associated with an application.</summary>
      <returns>The <see cref="T:System.Windows.Shell.JumpList" /> object associated with the specified application.</returns>
      <param name="application">The application associated with the <see cref="T:System.Windows.Shell.JumpList" />.</param>
    </member>
    <member name="P:System.Windows.Shell.JumpList.JumpItems">
      <summary>Gets the collection of <see cref="T:System.Windows.Shell.JumpItem" /> objects that are displayed in the Jump List.</summary>
      <returns>The collection of <see cref="T:System.Windows.Shell.JumpItem" /> objects displayed in the Jump List. The default is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRejected">
      <summary>Occurs when jump items are not successfully added to the Jump List by the Windows shell.</summary>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
      <summary>Occurs when jump items previously in the Jump List are removed from the list by the user.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
      <summary>Sets the <see cref="T:System.Windows.Shell.JumpList" /> object associated with an application.</summary>
      <param name="application">The application associated with the <see cref="T:System.Windows.Shell.JumpList" />.</param>
      <param name="value">The <see cref="T:System.Windows.Shell.JumpList" /> to associate with the application.</param>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
      <summary>Gets or sets a value that indicates whether frequently used items are displayed in the Jump List.</summary>
      <returns>true if frequently used items are displayed in the Jump List; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowRecentCategory">
      <summary>Gets or sets a value that indicates whether recently used items are displayed in the Jump List.</summary>
      <returns>true if recently used items are displayed in the Jump List; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpPath">
      <summary>Represents a link to a file that is displayed in a Windows 7 taskbar Jump List.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpPath" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpPath.Path">
      <summary>Gets or sets the path to the file to be included in the Jump List.</summary>
      <returns>The path to the file to be included in the Jump List.</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpTask">
      <summary>Represents a shortcut to an application in the Windows 7 taskbar Jump List.</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpTask.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpTask" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.ApplicationPath">
      <summary>Gets or sets the path to the application.</summary>
      <returns>The path to the application. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Arguments">
      <summary>Gets or sets the arguments passed to the application on startup.</summary>
      <returns>The arguments passed to the application on startup. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Description">
      <summary>Gets or sets the text displayed in the tooltip for the task in the Jump List.</summary>
      <returns>The text displayed in the tooltip for the task. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourceIndex">
      <summary>Gets or sets the zero-based index of an icon embedded in a resource.</summary>
      <returns>The zero-based index of the icon, or -1 if no icon is used. The default is 0.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourcePath">
      <summary>Gets or sets the path to a resource that contains the icon to display in the Jump List.</summary>
      <returns>The path to a resource that contains the icon. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Title">
      <summary>Gets or sets the text displayed for the task in the Jump List.</summary>
      <returns>The text displayed for the task in the Jump List. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.WorkingDirectory">
      <summary>Gets or sets the working directory of the application on startup.</summary>
      <returns>The working directory of the application on startup. The default is null.</returns>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemInfo">
      <summary>Represents information about how the taskbar thumbnail is displayed.</summary>
    </member>
    <member name="M:System.Windows.Shell.TaskbarItemInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> class.</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Description">
      <summary>Gets or sets the text for the taskbar item tooltip.</summary>
      <returns>The text for the taskbar item tooltip. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Overlay">
      <summary>Gets or sets the image that is displayed over the program icon in the taskbar button.</summary>
      <returns>The image that is displayed over the program icon in the taskbar button. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressState">
      <summary>Gets or sets a value that indicates how the progress indicator is displayed in the taskbar button.</summary>
      <returns>An enumeration value that indicates how the progress indicator is displayed in the taskbar button. The default is <see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue">
      <summary>Gets or sets a value that indicates the fullness of the progress indicator in the taskbar button.</summary>
      <returns>A value that indicates the fullness of the progress indicator in the taskbar button. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos">
      <summary>Gets or sets the collection of <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> objects that are associated with the <see cref="T:System.Windows.Window" />.</summary>
      <returns>The collection of <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> objects that are associated with the <see cref="T:System.Windows.Window" />. The default is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin">
      <summary>Gets or sets a value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.</summary>
      <returns>A value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail. The default is an empty <see cref="T:System.Windows.Thickness" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemProgressState">
      <summary>Specifies the state of the progress indicator in the Windows taskbar.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.None">
      <summary>No progress indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Indeterminate">
      <summary>A pulsing green indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Normal">
      <summary>A green progress indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Error">
      <summary>A red progress indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Paused">
      <summary>A yellow progress indicator is displayed in the taskbar button.</summary>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfo">
      <summary>Represents information about how to display a button in the Windows 7 taskbar thumbnail.</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> class.</summary>
    </member>
    <member name="E:System.Windows.Shell.ThumbButtonInfo.Click">
      <summary>Occurs when the thumbnail button is clicked.</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Command">
      <summary>Gets or sets the command to invoke when this thumbnail button is clicked.</summary>
      <returns>The command to invoke when this thumbnail button is clicked. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter">
      <summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> property.</summary>
      <returns>The parameter to pass to the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget">
      <summary>Gets or sets the element on which to raise the specified command.</summary>
      <returns>The element on which to raise the specified command. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Description">
      <summary>Gets or sets the text to display for the thumbnail button tooltip.</summary>
      <returns>The text to display for the thumbnail button tooltip. The default is an empty string.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DescriptionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked">
      <summary>Gets or sets a value that indicates whether the taskbar thumbnail closes when the thumbnail button is clicked.</summary>
      <returns>true if the thumbnail closes; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.ImageSource">
      <summary>Gets or sets the image that is displayed on the thumbnail button.</summary>
      <returns>The image that is displayed on the thumbnail button. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible">
      <summary>Gets or sets a value that indicates whether a border and highlight is displayed around the thumbnail button.</summary>
      <returns>true if a border and highlight is displayed around the thumbnail button; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled">
      <summary>Gets or sets a value that indicates whether the thumbnail button is enabled.</summary>
      <returns>true if the thumbnail button is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive">
      <summary>Gets or sets a value that indicates whether the user can interact with the thumbnail button.</summary>
      <returns>true if the user can interact with the thumbnail button; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Visibility">
      <summary>Gets or sets a value that specifies the display state of the thumbnail button.</summary>
      <returns>An enumeration value that specifies the display state of the thumbnail button. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.VisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfoCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> objects that are associated with a <see cref="T:System.Windows.Window" />.</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.ThumbButtonInfoCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.CreateInstanceCore">
      <summary>Creates a new instance of the collection.</summary>
      <returns>The new instance of the collection.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Data.Entity.Design.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Entity.Design</name>
  </assembly>
  <members>
    <member name="T:System.Data.Entity.Design.EdmToObjectNamespaceMap">
      <summary>Represents a collection of conceptual model to code namespace mappings.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EdmToObjectNamespaceMap.Add(System.String,System.String)">
      <summary>Adds a namespace mapping to the <see cref="T:System.Data.Entity.Design.EdmToObjectNamespaceMap" />.</summary>
      <param name="edmNamespace">The model namespace name.</param>
      <param name="objectNamespace">The code namespace name.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EdmToObjectNamespaceMap.Clear">
      <summary>Removes all namespace mappings from the <see cref="T:System.Data.Entity.Design.EdmToObjectNamespaceMap" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EdmToObjectNamespaceMap.Contains(System.String)">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.Entity.Design.EdmToObjectNamespaceMap" /> contains the specified model namespace name.</summary>
      <returns>true if the model namespace name is found; otherwise false.</returns>
      <param name="edmNamespace">The model namespace name.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EdmToObjectNamespaceMap.Count">
      <summary>Gets the number of mappings in the <see cref="T:System.Data.Entity.Design.EdmToObjectNamespaceMap" />.</summary>
      <returns>The number of mappings.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EdmToObjectNamespaceMap.EdmNamespaces">
      <summary>Gets the list of model namespace names in the <see cref="T:System.Data.Entity.Design.EdmToObjectNamespaceMap" />.</summary>
      <returns>The list of model namespace names.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EdmToObjectNamespaceMap.Item(System.String)">
      <summary>Gets or sets the code namespace name of the specified model namespace name.</summary>
      <returns>The code namespace name that maps to the specified model namespace name.</returns>
      <param name="edmNamespace">The model namespace name.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EdmToObjectNamespaceMap.Remove(System.String)">
      <summary>Removes the specified namespace mapping.</summary>
      <returns>true if the namespace mapping was successfully removed; otherwise false.</returns>
      <param name="edmNamespace">The model namespace mapping to remove.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EdmToObjectNamespaceMap.TryGetObjectNamespace(System.String,System.String@)">
      <summary>Gets a value indicating whether the object namespace was retrieved.</summary>
      <returns>true if the object namespace was retrieved; otherwise false.</returns>
      <param name="edmNamespace">The model namespace name.</param>
      <param name="objectNamespace">The code namespace name.</param>
    </member>
    <member name="T:System.Data.Entity.Design.EntityClassGenerator">
      <summary>Generates object context and entity classes (object layer code) from conceptual schema definition language (CSDL) files.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityClassGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityClassGenerator" /> class with a <see cref="F:System.Data.Entity.Design.LanguageOption.GenerateCSharpCode" /> language option. </summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityClassGenerator.#ctor(System.Data.Entity.Design.LanguageOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityClassGenerator" /> class with the specified <see cref="T:System.Data.Entity.Design.LanguageOption" />. </summary>
      <param name="languageOption">A <see cref="T:System.Data.Entity.Design.LanguageOption" /> value that specifies the language of the generated code. The default language is C#.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityClassGenerator.EdmToObjectNamespaceMap">
      <summary>Gets an <see cref="T:System.Data.Entity.Design.EdmToObjectNamespaceMap" /> that contains the conceptual schema definition language (CSDL) to code namespace mappings.</summary>
      <returns>The CSDL to code namespace mappings.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityClassGenerator.GenerateCode(System.String,System.String)">
      <summary>Generates a source code file that contains the objects that were generated from the specified conceptual schema definition language (CSDL) file.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> that contains any generated errors.</returns>
      <param name="sourceEdmSchemaFilePath">The CSDL file path.</param>
      <param name="targetFilePath">The generated source code file path.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityClassGenerator.GenerateCode(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Generates source code using the specified conceptual schema definition language (CSDL) file. The list of schema file paths is used to resolve any references contained in the CSDL file.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects that contains any generated errors.</returns>
      <param name="sourceEdmSchemaFilePath">The CSDL file path.</param>
      <param name="targetPath">The generated source code file path.</param>
      <param name="additionalEdmSchemaFilePaths">A list of schema file paths that can be used to resolve any references in the source schema (the CSDL file). If the source schema does not have any dependencies, pass in an empty list.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityClassGenerator.GenerateCode(System.Xml.XmlReader,System.IO.TextWriter)">
      <summary>Generates source code using the conceptual schema definition language (CSDL) file contained in the <see cref="T:System.Xml.XmlReader" /> object and outputs the generated source code to a <see cref="T:System.IO.TextWriter" />.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> that contains any generated errors.</returns>
      <param name="sourceEdmSchema">An <see cref="T:System.Xml.XmlReader" /> that contains the CSDL file.</param>
      <param name="target">The <see cref="T:System.IO.TextWriter" /> to which the source code is written.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityClassGenerator.GenerateCode(System.Xml.XmlReader,System.IO.TextWriter,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>Generates source code based on the conceptual schema definition language (CSDL) file in the <see cref="T:System.Xml.XmlReader" /> object, then outputs the generated source code to a <see cref="T:System.IO.TextWriter" />. An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Xml.XmlReader" /> objects is used to resolve any references that are contained in the CSDL file.</summary>
      <returns>A list of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects that contains any generated errors.</returns>
      <param name="sourceEdmSchema">An <see cref="T:System.Xml.XmlReader" /> that contains the CSDL file.</param>
      <param name="target">The <see cref="T:System.IO.TextWriter" /> to which you want to output the generated source code.</param>
      <param name="additionalEdmSchemas">The list of <see cref="T:System.Xml.XmlReader" /> objects that contain schemas that are referenced by the source schema (the CSDL file). If the source schema does not have any dependencies, pass in an empty <see cref="T:System.Collections.IList" /> object.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityClassGenerator.LanguageOption">
      <summary>Gets or sets a <see cref="T:System.Data.Entity.Design.LanguageOption" /> value that indicates the language of the generated code. </summary>
      <returns>One of the <see cref="T:System.Data.Entity.Design.LanguageOption" /> values. The default is <see cref="F:System.Data.Entity.Design.LanguageOption.GenerateCSharpCode" />.</returns>
    </member>
    <member name="E:System.Data.Entity.Design.EntityClassGenerator.OnPropertyGenerated">
      <summary>Occurs when a property has changed.</summary>
    </member>
    <member name="E:System.Data.Entity.Design.EntityClassGenerator.OnTypeGenerated">
      <summary>Occurs when type information has changed.</summary>
    </member>
    <member name="T:System.Data.Entity.Design.EntityCodeGenerator">
      <summary>Generates object layer source code from conceptual schema definition language (CSDL).</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityCodeGenerator.#ctor(System.Data.Entity.Design.LanguageOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityCodeGenerator" /> class with the specified <see cref="T:System.Data.Entity.Design.LanguageOption" />.</summary>
      <param name="languageOption">Specifies the language of the generated code.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityCodeGenerator.EdmToObjectNamespaceMap">
      <summary>Gets an <see cref="T:System.Data.Entity.Design.EdmToObjectNamespaceMap" /> that contains the conceptual schema definition language (CSDL) to code namespace mappings.</summary>
      <returns>The CSDL to code namespace mappings.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityCodeGenerator.GenerateCode(System.String,System.String)">
      <summary>Creates a source code file that contains the object layer code generated from the specified conceptual schema definition language (CSDL) file.</summary>
      <returns>A list of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects that contains any generated errors.</returns>
      <param name="sourceEdmSchemaFilePath">The path of the CSDL file.</param>
      <param name="targetPath">The path of the file that contains the generated object layer code.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityCodeGenerator.GenerateCode(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Creates a source code file that contains object layer code generated from the specified conceptual schema definition language (CSDL) file. The list of schema file paths is used to resolve any references contained in the CSDL file.</summary>
      <returns>A list of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects that contains any generated errors.</returns>
      <param name="sourceEdmSchemaFilePath">The path of the CSDL file.</param>
      <param name="targetPath">The path of the file that contains the generated object layer code.</param>
      <param name="additionalEdmSchemaFilePaths">A list of schema file paths that can be used to resolve any references in the source schema (the CSDL file). If the source schema does not have any dependencies, pass in an empty list.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityCodeGenerator.GenerateCode(System.Xml.XmlReader,System.IO.TextWriter)">
      <summary>Generates object layer code using the conceptual schema definition language (CSDL) specified in the <see cref="T:System.Xml.XmlReader" /> object, and outputs the generated code to a <see cref="T:System.IO.TextWriter" />.</summary>
      <returns>A list of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects that contains any generated errors.</returns>
      <param name="sourceEdmSchema">An <see cref="T:System.Xml.XmlReader" /> that contains the CSDL.</param>
      <param name="target">The <see cref="T:System.IO.TextWriter" /> to which the object layer code is written.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityCodeGenerator.GenerateCode(System.Xml.XmlReader,System.IO.TextWriter,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>Generates object layer code based on the conceptual schema definition language (CSDL) specified in the <see cref="T:System.Xml.XmlReader" /> object, then outputs the generated code to a <see cref="T:System.IO.TextWriter" />. An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Xml.XmlReader" /> objects is used to resolve any references that are contained in the CSDL.</summary>
      <returns>A list of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects that contains any generated errors.</returns>
      <param name="sourceEdmSchema">An <see cref="T:System.Xml.XmlReader" /> that contains the CSDL.</param>
      <param name="target">The <see cref="T:System.IO.TextWriter" /> to which you want to output the generated object layer code.</param>
      <param name="additionalEdmSchemas">A list of <see cref="T:System.Xml.XmlReader" /> objects that contain schemas that are referenced by the source schema (the CSDL). If the source schema does not have any dependencies, pass in an empty <see cref="T:System.Collections.IList" /> object.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityCodeGenerator.LanguageOption">
      <summary>Gets or sets a <see cref="T:System.Data.Entity.Design.LanguageOption" /> value that indicates the language of the generated code. </summary>
      <returns>One of the <see cref="T:System.Data.Entity.Design.LanguageOption" /> values.</returns>
    </member>
    <member name="T:System.Data.Entity.Design.EntityFrameworkVersions">
      <summary>Provides information about different versions of the Entity Framework.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityFrameworkVersions.GetSchemaXsd(System.Version,System.Data.Metadata.Edm.DataSpace)">
      <summary>Returns a stream of the XSD that corresponds to the specified Entity Framework version, with default model names as specified in the <see cref="T:System.Data.Metadata.Edm.DataSpace" /> parameter.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> of the XSD that corresponds to the specified Entity Framework version and <see cref="T:System.Data.Metadata.Edm.DataSpace" />.</returns>
      <param name="entityFrameworkVersion">The property of <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> that corresponds to the targeted version of the Entity Framework.</param>
      <param name="dataSpace">The desired <see cref="T:System.Data.Metadata.Edm.DataSpace" /> of the XSD.</param>
    </member>
    <member name="F:System.Data.Entity.Design.EntityFrameworkVersions.Version1">
      <summary>A read-only property that represents version 1 of the Entity Framework.</summary>
      <returns>A <see cref="T:System.Version" /> object that represents version 1 of the Entity Framework.</returns>
    </member>
    <member name="F:System.Data.Entity.Design.EntityFrameworkVersions.Version2">
      <summary>A read-only property that represents version 2 of the Entity Framework.</summary>
      <returns>A <see cref="T:System.Version" /> object that represents version 2 of the Entity Framework.</returns>
    </member>
    <member name="T:System.Data.Entity.Design.EntityModelSchemaGenerator">
      <summary>Generates conceptual schema definition language (CSDL) and mapping specification language (MSL), based on store schema definition language (SSDL).</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</summary>
      <param name="storeEntityContainer">The storage model <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> from which conceptual and mapping metadata is created.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</summary>
      <param name="storeEntityContainer">The storage model <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> from which conceptual and mapping metadata is created.</param>
      <param name="namespaceName">The name for the conceptual model namespace. If this value is null, the <paramref name="storeEntityContainer" /> name is used for the namespace name.</param>
      <param name="modelEntityContainerName">The EntityContainer name declared in the conceptual model.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection">
      <summary>Gets the <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> that was created by the <see cref="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata" /> method.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> object that contains the conceptual schema definition language (CSDL).</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer">
      <summary>Gets the conceptual model <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> that was created by the <see cref="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata" /> method.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object that contains the conceptual model EntityContainer.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties">
      <summary>Gets or sets the flag for generating foreign key properties in a conceptual model.</summary>
      <returns>If the value of this property is set to true then foreign key properties are generated in the conceptual model; otherwise foreign key properties are not generated in the conceptual model.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata">
      <summary>Generates the conceptual model metadata information and returns any schema errors.</summary>
      <returns>A collection of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(System.Version)">
      <summary>Generates the conceptual model metadata information and returns any schema errors.</summary>
      <returns>A collection of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects.</returns>
      <param name="targetEntityFrameworkVersion">The property of <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> that corresponds to the targeted version of the Entity Framework.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService">
      <summary>Gets or sets the <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> value that indicates the service used when generating a model.</summary>
      <returns>The <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> value that indicates the service used when generating a model.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.String)">
      <summary>Writes the generated conceptual schema definition language (CSDL) to the specified file.</summary>
      <param name="outputFileName">The name of the output file.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.Xml.XmlWriter)">
      <summary>Writes the generated conceptual schema definition language (CSDL) to an <see cref="T:System.Xml.XmlWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the CSDL is written.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.String)">
      <summary>Writes the generated mapping specification language (MSL) to the specified file.</summary>
      <param name="outputFileName">The name of the output file.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.Xml.XmlWriter)">
      <summary>Writes the generated mapping specification language (MSL) to an <see cref="T:System.Xml.XmlWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the MSL is written.</param>
    </member>
    <member name="T:System.Data.Entity.Design.EntityStoreSchemaFilterEffect">
      <summary>Specifies whether to allow or exclude database objects that match the pattern specified in the <see cref="T:System.Data.Entity.Design.EntityStoreSchemaFilterEntry" />.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.EntityStoreSchemaFilterEffect.Allow">
      <summary>Allow the entries that match the specified pattern.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.EntityStoreSchemaFilterEffect.Exclude">
      <summary>Exclude the entries that match the specified pattern.</summary>
    </member>
    <member name="T:System.Data.Entity.Design.EntityStoreSchemaFilterEntry">
      <summary>Represents a single filter entry. The filter is used to allow or exclude particular database objects during generation.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityStoreSchemaFilterEntry" /> class with the specified catalog, schema, and name filters. </summary>
      <param name="catalog">The pattern to use to select the appropriate catalog.</param>
      <param name="schema">The pattern to use to select the appropriate schema or null to not limit by schema.</param>
      <param name="name">The pattern to use to select the appropriate name or null to not limit by name.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaFilterEntry.#ctor(System.String,System.String,System.String,System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes,System.Data.Entity.Design.EntityStoreSchemaFilterEffect)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityStoreSchemaFilterEntry" /> class the specified catalog, schema, name, and type filters, and filter effect setting.</summary>
      <param name="catalog">The pattern to use to select the appropriate catalog or null to not limit by catalog.</param>
      <param name="schema">The pattern to use to select the appropriate schema or null to not limit by schema.</param>
      <param name="name">The pattern to use to select the appropriate name or null to not limit by name.</param>
      <param name="types">The type of objects to apply this filter to.</param>
      <param name="effect">An <see cref="T:System.Data.Entity.Design.EntityStoreSchemaFilterEffect" /> value indicating whether to allow or exclude entries that match the specified filters.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Catalog">
      <summary>Gets the pattern that will be used to select the appropriate catalog.</summary>
      <returns>The Catalog part of the database name where the database name is formatted as Catalog.Schema.Name.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Effect">
      <summary>Gets the effect that this filter has on results.</summary>
      <returns>An <see cref="T:System.Data.Entity.Design.EntityStoreSchemaFilterEffect" /> value that indicates whether to allow or exclude entries that match the specified filters.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Name">
      <summary>Gets the pattern that will be used to select the appropriate name.</summary>
      <returns>The Name part of the database name where the database name is formatted as Catalog.Schema.Name.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Schema">
      <summary>Gets the pattern that will be used to select the appropriate schema.</summary>
      <returns>The Schema part of the database name where the database name is formatted as Catalog.Schema.Name.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EntityStoreSchemaFilterEntry.Types">
      <summary>Gets the types of objects that this filter applies to.</summary>
      <returns>An <see cref="T:System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes" /> value indicating the types of objects to apply to the filter to.</returns>
    </member>
    <member name="T:System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes">
      <summary>Specifies the store object type to apply the schema filter to.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes.None">
      <summary>Initial value. This is not a valid value to apply.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes.Table">
      <summary>Apply the filter to table object types.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes.View">
      <summary>Apply the filter to view object types.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes.Function">
      <summary>Apply this filter to function object types.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes.All">
      <summary>Apply the filter to all object types.</summary>
    </member>
    <member name="T:System.Data.Entity.Design.EntityStoreSchemaGenerator">
      <summary>Provides methods and properties for loading database schema information and generating store schema definition language (SSDL).</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" /> class. </summary>
      <param name="providerInvariantName">The invariant name of a provider.The invariant name is a name that can be used programmatically to refer to the data provider. You can retrieve information about all of the data providers installed on the local computer by using the <see cref="M:System.Data.Common.DbProviderFactories.GetFactoryClasses" />  method.</param>
      <param name="connectionString">The connection used to open the database.</param>
      <param name="namespaceName">The namespace name for the store schema definition language (SSDL).</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String)">
      <summary>Creates an <see cref="T:System.Data.EntityClient.EntityConnection" /> loaded with the conceptual schema metadata of the specified the provider.</summary>
      <returns>An <see cref="T:System.Data.EntityClient.EntityConnection" /> that can query the <see cref="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition" /> for the provider.</returns>
      <param name="providerInvariantName">The invariant name of a provider.The invariant name is a name that can be used programmatically to refer to the data provider. You can retrieve information about all of the data providers installed on the local computer by using the <see cref="M:System.Data.Common.DbProviderFactories.GetFactoryClasses" />  method.</param>
      <param name="connectionString">The connection used to open the database.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer">
      <summary>Gets the storage model <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> that was created. The returned <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> is the same as the <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> in the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> that is returned by the <see cref="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection" /> property.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties">
      <summary>Gets or sets the flag for generating foreign key properties in a storage model.</summary>
      <returns>true (True in Visual Basic) if foreign key properties are generated in the storage model; false (False in Visual Basic) otherwise.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata">
      <summary>Generates store metadata and returns any schema errors.</summary>
      <returns>A collection of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})">
      <summary>Generates store metadata and returns any schema errors.</summary>
      <returns>A collection of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects.</returns>
      <param name="filters">An <see cref="T:System.Data.Entity.Design.EntityStoreSchemaFilterEntry" /> that specifies which database objects to allow or exclude during generation.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)">
      <summary>Generates store schema definition language (SSDL) and returns any schema errors.</summary>
      <returns>A collection of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> objects.</returns>
      <param name="filters">An <see cref="T:System.Data.Entity.Design.EntityStoreSchemaFilterEntry" /> that specifies which database objects to allow or exclude during generation.</param>
      <param name="targetEntityFrameworkVersion">The property of <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> that corresponds to the targeted version of the Entity Framework.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection">
      <summary>Gets the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> that was created.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> object.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.String)">
      <summary>Writes the generated store schema definition language (SSDL) to a file.</summary>
      <param name="outputFileName">The name of the output file.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.Xml.XmlWriter)">
      <summary>Writes the generated store schema definition language (SSDL) to an <see cref="T:System.Xml.XmlWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the SSDL is written.</param>
    </member>
    <member name="T:System.Data.Entity.Design.EntityViewGenerator">
      <summary>Generates views for the extents in the <see cref="T:System.Data.Mapping.StorageMappingItemCollection" />, and creates a source code file for a type that will cache these views.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityViewGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityViewGenerator" /> class with a <see cref="F:System.Data.Entity.Design.LanguageOption.GenerateCSharpCode" /> language option.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.EntityViewGenerator.#ctor(System.Data.Entity.Design.LanguageOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityViewGenerator" /> class with the specified <see cref="T:System.Data.Entity.Design.LanguageOption" />.</summary>
      <param name="languageOption">One of the <see cref="T:System.Data.Entity.Design.LanguageOption" /> values that specifies the language of the generated code. The default language is C#.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityViewGenerator.GenerateViews(System.Data.Mapping.StorageMappingItemCollection,System.IO.TextWriter)">
      <summary>Generates views at compile time for the extents in a <see cref="T:System.Data.Mapping.StorageMappingItemCollection" />. Sends a source code file to a <see cref="T:System.IO.TextWriter" /> to make these views available at run time.</summary>
      <returns>A list that contains any generated errors.</returns>
      <param name="mappingCollection">The <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> from which views will be generated. </param>
      <param name="outputWriter">The <see cref="T:System.IO.TextWriter" /> to which the generated code will be sent.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityViewGenerator.GenerateViews(System.Data.Mapping.StorageMappingItemCollection,System.IO.TextWriter,System.Version)">
      <summary>Generates views at compile time for the extents in a <see cref="T:System.Data.Mapping.StorageMappingItemCollection" />. Sends a source code file to a <see cref="T:System.IO.TextWriter" /> to make these views available at run time.</summary>
      <returns>A list that contains any generated errors.</returns>
      <param name="mappingCollection">The <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> to be validated.</param>
      <param name="outputWriter">The <see cref="T:System.IO.TextWriter" /> to which the output is written.</param>
      <param name="targetEntityFrameworkVersion">The property of <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> that corresponds to the targeted version of the Entity Framework.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityViewGenerator.GenerateViews(System.Data.Mapping.StorageMappingItemCollection,System.String)">
      <summary>Generates views at compile time for the extents in a <see cref="T:System.Data.Mapping.StorageMappingItemCollection" />. Writes a source code file to a specified location that makes the views available at run time.</summary>
      <returns>A list that contains any generated errors.</returns>
      <param name="mappingCollection">The <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> from which views will be generated.</param>
      <param name="outputPath">The <see cref="T:System.String" /> that specifies the location to which the source code file will be written.</param>
    </member>
    <member name="P:System.Data.Entity.Design.EntityViewGenerator.LanguageOption">
      <summary>Gets or sets a <see cref="T:System.Data.Entity.Design.LanguageOption" /> value that indicates the language of the generated code.</summary>
      <returns>One of the <see cref="T:System.Data.Entity.Design.LanguageOption" /> values. The default is <see cref="F:System.Data.Entity.Design.LanguageOption.GenerateCSharpCode" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.EntityViewGenerator.Validate(System.Data.Mapping.StorageMappingItemCollection)">
      <summary>Validates a <see cref="T:System.Data.Mapping.StorageMappingItemCollection" />.</summary>
      <returns>A list that contains any generated errors.</returns>
      <param name="mappingCollection">The <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> to be validated.</param>
    </member>
    <member name="M:System.Data.Entity.Design.EntityViewGenerator.Validate(System.Data.Mapping.StorageMappingItemCollection,System.Version)">
      <summary>Validates a <see cref="T:System.Data.Mapping.StorageMappingItemCollection" />.</summary>
      <returns>A list that contains any validation errors. </returns>
      <param name="mappingCollection">The <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> to be validated.</param>
      <param name="targetEntityFrameworkVersion">The property of <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> that corresponds to the targeted version of the Entity Framework.</param>
    </member>
    <member name="T:System.Data.Entity.Design.LanguageOption">
      <summary>Specifies the language for the generated code.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.LanguageOption.GenerateCSharpCode">
      <summary>C# code. This is the default.</summary>
    </member>
    <member name="F:System.Data.Entity.Design.LanguageOption.GenerateVBCode">
      <summary>Visual Basic code. </summary>
    </member>
    <member name="T:System.Data.Entity.Design.MetadataItemCollectionFactory">
      <summary>Represents a set of methods for creating metadata <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> instances.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.MetadataItemCollectionFactory.CreateEdmItemCollection(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
      <summary>Creates an <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> and loads the metadata that is contained in the <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> that contains the specified metadata.</returns>
      <param name="readers">An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.XmlReader" /> that contains the metadata files.</param>
      <param name="errors">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" />. Any errors that are generated during the <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> creation are added to the list.</param>
    </member>
    <member name="M:System.Data.Entity.Design.MetadataItemCollectionFactory.CreateEdmItemCollection(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Version,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
      <summary>Creates an <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> and loads the metadata that is contained in the <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> that contains the specified metadata.</returns>
      <param name="readers">An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.XmlReader" /> that contains the metadata files.</param>
      <param name="targetEntityFrameworkVersion">The property of <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> that corresponds to the targeted version of the Entity Framework.</param>
      <param name="errors">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" />. Any errors that are generated during the <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> creation are added to the list.</param>
    </member>
    <member name="M:System.Data.Entity.Design.MetadataItemCollectionFactory.CreateStorageMappingItemCollection(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
      <summary>Creates a <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> and loads the metadata that is contained in the specified <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" />, <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />, and collection of <see cref="T:System.Xml.XmlReader" /> objects.</summary>
      <returns>A <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> that contains the specified metadata.</returns>
      <param name="edmCollection">An <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> object.</param>
      <param name="storeCollection">A <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> object.</param>
      <param name="readers">An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.XmlReader" /> containing the metadata files.</param>
      <param name="errors">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" />. Any errors generated during the <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> creation are added to the list.</param>
    </member>
    <member name="M:System.Data.Entity.Design.MetadataItemCollectionFactory.CreateStorageMappingItemCollection(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Version,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
      <summary>Creates a <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> from the mapping information in the <see cref="T:System.Xml.XmlReader" /> objects and the metadata in the specified <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> and <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> objects.</summary>
      <returns>A <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> that contains the specified metadata.</returns>
      <param name="edmCollection">An <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> object.</param>
      <param name="storeCollection">A <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> object.</param>
      <param name="readers">An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.XmlReader" /> containing the metadata files.</param>
      <param name="targetEntityFrameworkVersion">The property of <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> that corresponds to the targeted version of the Entity Framework.</param>
      <param name="errors">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" />. Any errors generated during the <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> creation are added to the list.</param>
    </member>
    <member name="M:System.Data.Entity.Design.MetadataItemCollectionFactory.CreateStoreItemCollection(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
      <summary>Constructs a <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> and provides a list of errors and warnings.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</returns>
      <param name="readers">A collection of <see cref="T:System.Xml.XmlReader" /> objects, each of which each reads from a storage model file. The storage model file is written in the store schema definition language (SSDL).</param>
      <param name="errors">A list of errors that were encountered while loading the SSDL metadata.</param>
    </member>
    <member name="M:System.Data.Entity.Design.MetadataItemCollectionFactory.CreateStoreItemCollection(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Version,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
      <summary>Constructs a <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> and provides a list of errors and warnings.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</returns>
      <param name="readers">A collection of <see cref="T:System.Xml.XmlReader" /> objects, each of which each reads from a storage model file. The storage model file is written in the store schema definition language (SSDL).</param>
      <param name="targetEntityFrameworkVersion">The property of <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> that corresponds to the targeted version of the Entity Framework.</param>
      <param name="errors">A list of errors that were encountered while loading the SSDL metadata.</param>
    </member>
    <member name="T:System.Data.Entity.Design.PropertyGeneratedEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.Entity.Design.EntityClassGenerator.OnPropertyGenerated" /> event. </summary>
    </member>
    <member name="M:System.Data.Entity.Design.PropertyGeneratedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.PropertyGeneratedEventArgs" /> class.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.PropertyGeneratedEventArgs.#ctor(System.Data.Metadata.Edm.MetadataItem,System.String,System.CodeDom.CodeTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.PropertyGeneratedEventArgs" /> class with the specified property source, backing field name, and return type.</summary>
      <param name="propertySource">The <see cref="T:System.Data.Metadata.Edm.MetadataItem" /> object that is the source of the property.</param>
      <param name="backingFieldName">The name of the field that backs the property.</param>
      <param name="returnType">The base type of the property.</param>
    </member>
    <member name="P:System.Data.Entity.Design.PropertyGeneratedEventArgs.AdditionalAttributes">
      <summary>Gets a List(CodeAttributeDeclaration) of attributes that will be added to the property.</summary>
      <returns>A collection that contains the attributes that will be added to the property. The collection is empty if no attributes will be added.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.PropertyGeneratedEventArgs.AdditionalGetStatements">
      <summary>Gets a List(CodeStatement) containing the get statements to be added to the property.</summary>
      <returns>A collection that contains the get statements to be added to the property.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.PropertyGeneratedEventArgs.AdditionalSetStatements">
      <summary>Gets a List(CodeStatement) containing the set statements to be added to the property.</summary>
      <returns>A collection that contains the set statements to be added to the property. </returns>
    </member>
    <member name="P:System.Data.Entity.Design.PropertyGeneratedEventArgs.BackingFieldName">
      <summary>Gets the name of the field that backs the property.</summary>
      <returns>The name of the field that backs the property. This can be null for navigation properties.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.PropertyGeneratedEventArgs.PropertySource">
      <summary>Gets the <see cref="T:System.Data.Metadata.Edm.MetadataItem" /> object that is the source of the property.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.MetadataItem" /> object that is the source of the property.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.PropertyGeneratedEventArgs.ReturnType">
      <summary>Gets or sets the type of the property.</summary>
      <returns>The type of the property. </returns>
    </member>
    <member name="T:System.Data.Entity.Design.PropertyGeneratedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.Entity.Design.EntityClassGenerator.OnPropertyGenerated" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Data.Entity.Design.TypeGeneratedEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.Entity.Design.EntityClassGenerator.OnTypeGenerated" /> event. </summary>
    </member>
    <member name="M:System.Data.Entity.Design.TypeGeneratedEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.TypeGeneratedEventArgs" /> class.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.TypeGeneratedEventArgs.#ctor(System.Data.Metadata.Edm.GlobalItem,System.CodeDom.CodeTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.TypeGeneratedEventArgs" /> class with the specified source and base type. </summary>
      <param name="typeSource">The source of the type.</param>
      <param name="baseType">The base type.</param>
    </member>
    <member name="P:System.Data.Entity.Design.TypeGeneratedEventArgs.AdditionalAttributes">
      <summary>Gets a List(CodeAttributeDeclaration) containing the attributes that will be added to the type.</summary>
      <returns>A collection that contains the attributes that will be added to the type. The collection is empty if no attributes will be added to the type.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.TypeGeneratedEventArgs.AdditionalInterfaces">
      <summary>Gets a List(Type) containing the interfaces that will be added to the type.</summary>
      <returns>A collection that contains the interfaces that will be added to the type. The collection is empty if no interfaces will be added.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.TypeGeneratedEventArgs.AdditionalMembers">
      <summary>Gets a List(CodeTypeMember) containing the members that will be added to the type.</summary>
      <returns>A collection that contains the members that will be added to the type. The collection is empty if no members will be added.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.TypeGeneratedEventArgs.BaseType">
      <summary>Gets or sets the base type.</summary>
      <returns>The base type. The default is <see cref="T:System.Data.Objects.DataClasses.EntityObject" />, <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />, or <see cref="T:System.Data.Objects.ObjectContext" />, depending on the <see cref="P:System.Data.Entity.Design.TypeGeneratedEventArgs.TypeSource" /> property value.</returns>
    </member>
    <member name="P:System.Data.Entity.Design.TypeGeneratedEventArgs.TypeSource">
      <summary>Gets the <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object that is the source of the type.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object that is the source of the type.</returns>
    </member>
    <member name="T:System.Data.Entity.Design.TypeGeneratedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.Entity.Design.EntityClassGenerator.OnTypeGenerated" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Data.Entity.Design.AspNet.EntityDesignerBuildProvider">
      <summary>Extracts the model and mapping portions of .edmx files under the App_Code directory of an ASP.NET Web site, and embeds them as resources in the assembly that is dynamically compiled by the ASP.NET runtime. </summary>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.EntityDesignerBuildProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.AspNet.EntityDesignerBuildProvider" /> class.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.EntityDesignerBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>Generates C# or Visual Basic code based on the model and mapping portions of an .edmx file.</summary>
      <param name="assemblyBuilder">A container for building an assembly.</param>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.EntityDesignerBuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)">
      <summary>Provides instructions to the ASP.NET compiler about building a project.</summary>
      <returns>The required behavior when a virtual path is built.</returns>
      <param name="results">The results of compilation returned from the ASP.NET compiler.</param>
    </member>
    <member name="T:System.Data.Entity.Design.AspNet.EntityModelBuildProvider">
      <summary>Represents the CSDL build provider for the ASP.NET build environment.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.EntityModelBuildProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.AspNet.EntityModelBuildProvider" /> class.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.EntityModelBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>Generates source code for the entity model build provider, and adds the source code to a specified assembly builder.</summary>
      <param name="assemblyBuilder">The assembly builder that references the source code generated by the build provider.</param>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.EntityModelBuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)">
      <summary>Returns a value indicating actions required when a entity model build provider is built.</summary>
      <returns>The <see cref="F:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange" /> value, which indicates that the containing <see cref="T:System.AppDomain" /> will be unloaded and restarted.</returns>
      <param name="results">The compilation results for the build provider.</param>
    </member>
    <member name="T:System.Data.Entity.Design.AspNet.MappingModelBuildProvider">
      <summary>Represents the MSL build provider for the ASP.NET build environment.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.MappingModelBuildProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.AspNet.MappingModelBuildProvider" /> class.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.MappingModelBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>Embeds the MSL file as a resource to the specified assembly builder.</summary>
      <param name="assemblyBuilder">The assembly builder that references the source code generated by the build provider.</param>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.MappingModelBuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)">
      <summary>Returns a value indicating actions required when a storage model build provider is built.</summary>
      <returns>The <see cref="F:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange" /> value, which indicates that the containing <see cref="T:System.AppDomain" /> will be unloaded and restarted.</returns>
      <param name="results">The compilation results for the build provider.</param>
    </member>
    <member name="T:System.Data.Entity.Design.AspNet.StorageModelBuildProvider">
      <summary>Represents the SSDL build provider for the ASP.NET build environment.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.StorageModelBuildProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.AspNet.StorageModelBuildProvider" /> class.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.StorageModelBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>Embeds the SSDL file as a resource to the specified assembly builder.</summary>
      <param name="assemblyBuilder">The assembly builder that references the source code generated by the build provider.</param>
    </member>
    <member name="M:System.Data.Entity.Design.AspNet.StorageModelBuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)">
      <summary>Returns a value indicating actions required when a storage model build provider is built.</summary>
      <returns>The <see cref="F:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange" /> value, which indicates that the containing <see cref="T:System.AppDomain" /> will be unloaded and restarted.</returns>
      <param name="results">The compilation results for the build provider.</param>
    </member>
    <member name="T:System.Data.Entity.Design.PluralizationServices.ICustomPluralizationMapping">
      <summary>Represents a collection of the singular and plural forms of words.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.PluralizationServices.ICustomPluralizationMapping.AddWord(System.String,System.String)">
      <summary>Adds singular and plural forms of a word to the <see cref="T:System.Data.Entity.Design.PluralizationServices.ICustomPluralizationMapping" /> object.</summary>
      <param name="singular">The singular version of the word added to the <see cref="T:System.Data.Entity.Design.PluralizationService" />.</param>
      <param name="plural">The plural version of the word added to the <see cref="T:System.Data.Entity.Design.PluralizationService" />.</param>
    </member>
    <member name="T:System.Data.Entity.Design.PluralizationServices.PluralizationService">
      <summary>Provides methods for constructing plural and singular forms of words.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.Design.PluralizationServices" /> class.</summary>
    </member>
    <member name="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)">
      <summary>Creates a <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> that applies language rules that correspond to the specified <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <returns>A <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />.</returns>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> that corresponds to the language rules applied for singular and plural forms of words.</param>
    </member>
    <member name="P:System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture">
      <summary>Gets or sets the <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> culture.</summary>
      <returns>An object that specifies which language rules to apply for singulars and plurals.</returns>
    </member>
    <member name="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)">
      <summary>Determines if the specified word is plural.</summary>
      <returns>true if the word is plural; otherwise, false.</returns>
      <param name="word">The <see cref="T:System.String" /> value to be analyzed.</param>
    </member>
    <member name="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)">
      <summary>Determines if the specified word is singular.</summary>
      <returns>true if the word is singular; otherwise, false.</returns>
      <param name="word">The value to be analyzed.</param>
    </member>
    <member name="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)">
      <summary>Returns the plural form of the specified word</summary>
      <returns>A <see cref="T:System.String" /> that is the plural form of the input parameter.</returns>
      <param name="word">The word to be made plural.</param>
    </member>
    <member name="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)">
      <summary>Returns the singular form of the specified word.</summary>
      <returns>The singular form of the input parameter.</returns>
      <param name="word">The  the word to be made singular.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Data.Entity.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Entity</name>
  </assembly>
  <members>
    <member name="T:System.Data.EntityCommandCompilationException">
      <summary>Represents errors that occur during command compilation; when a command tree could not be produced to represent the command text.</summary>
    </member>
    <member name="M:System.Data.EntityCommandCompilationException.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Data.EntityCommandCompilationException" />.</summary>
    </member>
    <member name="M:System.Data.EntityCommandCompilationException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Data.EntityCommandCompilationException" />.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.EntityCommandCompilationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of <see cref="T:System.Data.EntityCommandCompilationException" />.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="T:System.Data.EntityCommandExecutionException">
      <summary>Represents errors that occur when the underlying storage provider could not execute the specified command. This exception usually wraps a provider-specific exception.</summary>
    </member>
    <member name="M:System.Data.EntityCommandExecutionException.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Data.EntityCommandExecutionException" />.</summary>
    </member>
    <member name="M:System.Data.EntityCommandExecutionException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Data.EntityCommandExecutionException" />.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.EntityCommandExecutionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of <see cref="T:System.Data.EntityCommandExecutionException" />.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="T:System.Data.EntityException">
      <summary>Represents Entity Framework-related errors that occur in the EntityClient namespace. The EntityException is the base class for all Entity Framework exceptions thrown by the EntityClient.</summary>
    </member>
    <member name="M:System.Data.EntityException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityException" /> class.</summary>
    </member>
    <member name="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityException" /> class.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Data.EntityException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityException" /> class.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.EntityException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="T:System.Data.EntityKey">
      <summary>Provides a durable reference to an object that is an instance of an entity type.</summary>
    </member>
    <member name="M:System.Data.EntityKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</summary>
    </member>
    <member name="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</summary>
      <param name="qualifiedEntitySetName">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</param>
      <param name="entityKeyValues">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.Each key/value pair has a property name as the key and the value of that property as the value. There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />. The order of the key/value pairs is not important, but each key property should be included. The property names are simple names that are not qualified with an entity type name or the schema name.</param>
    </member>
    <member name="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</summary>
      <param name="qualifiedEntitySetName">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</param>
      <param name="entityKeyValues">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key. </param>
    </member>
    <member name="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</summary>
      <param name="qualifiedEntitySetName">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</param>
      <param name="keyName">A <see cref="T:System.String" /> that is the name of the key.</param>
      <param name="keyValue">An <see cref="T:System.Object" /> that is the key value.</param>
    </member>
    <member name="P:System.Data.EntityKey.EntityContainerName">
      <summary>Gets or sets the name of the entity container.</summary>
      <returns>A <see cref="T:System.String" /> value that is the name of the entity container for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</returns>
    </member>
    <member name="P:System.Data.EntityKey.EntityKeyValues">
      <summary>Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of key values for this <see cref="T:System.Data.EntityKey" />.</returns>
    </member>
    <member name="F:System.Data.EntityKey.EntityNotValidKey">
      <summary>A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed TREAT operation.</summary>
    </member>
    <member name="P:System.Data.EntityKey.EntitySetName">
      <summary>Gets or sets the name of the entity set.</summary>
      <returns>A <see cref="T:System.String" /> value that is the name of the entity set for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</returns>
    </member>
    <member name="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
      <summary>Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />. </summary>
      <returns>true if this instance and <paramref name="other" /> have equal values; otherwise, false. </returns>
      <param name="other">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</param>
    </member>
    <member name="M:System.Data.EntityKey.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object. </summary>
      <returns>true if this instance and <paramref name="obj" /> have equal values; otherwise, false. </returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance.</param>
    </member>
    <member name="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
      <summary>Gets the entity set for this entity key from the given metadata workspace.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</returns>
      <param name="metadataWorkspace">The metadata workspace that contains the entity.</param>
      <exception cref="T:System.ArgumentException">The entity set could not be located in the specified metadata workspace.</exception>
    </member>
    <member name="M:System.Data.EntityKey.GetHashCode">
      <summary>Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object. <see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Data.EntityKey" />.</returns>
    </member>
    <member name="P:System.Data.EntityKey.IsTemporary">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.  </summary>
      <returns>true if the <see cref="T:System.Data.EntityKey" /> is temporary; otherwise, false.</returns>
    </member>
    <member name="F:System.Data.EntityKey.NoEntitySetKey">
      <summary>A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified. </summary>
    </member>
    <member name="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</summary>
      <param name="context">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</param>
    </member>
    <member name="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
      <summary>Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</summary>
      <param name="context">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</param>
    </member>
    <member name="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
      <summary>Compares two <see cref="T:System.Data.EntityKey" /> objects. </summary>
      <returns>true if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, false.</returns>
      <param name="key1">A <see cref="T:System.Data.EntityKey" /> to compare.</param>
      <param name="key2">A <see cref="T:System.Data.EntityKey" /> to compare.</param>
    </member>
    <member name="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
      <summary>Compares two <see cref="T:System.Data.EntityKey" /> objects. </summary>
      <returns>true if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, false.</returns>
      <param name="key1">A <see cref="T:System.Data.EntityKey" /> to compare.</param>
      <param name="key2">A <see cref="T:System.Data.EntityKey" /> to compare.</param>
    </member>
    <member name="T:System.Data.EntityKeyMember">
      <summary>Represents a key name and value pair that is part of an <see cref="T:System.Data.EntityKey" />.</summary>
    </member>
    <member name="M:System.Data.EntityKeyMember.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityKeyMember" /> class.</summary>
    </member>
    <member name="M:System.Data.EntityKeyMember.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityKeyMember" /> class with the specified entity key pair.</summary>
      <param name="keyName">A <see cref="T:System.String" /> that is the name of the key.</param>
      <param name="keyValue">An <see cref="T:System.Object" /> that is the key value.</param>
    </member>
    <member name="P:System.Data.EntityKeyMember.Key">
      <summary>The name of the entity key.</summary>
      <returns>A <see cref="T:System.String" /> that is the key name.</returns>
    </member>
    <member name="M:System.Data.EntityKeyMember.ToString">
      <summary>Returns a string representation of the entity key.</summary>
      <returns>A <see cref="T:System.String" />. </returns>
    </member>
    <member name="P:System.Data.EntityKeyMember.Value">
      <summary>The value of the entity key.</summary>
      <returns>An <see cref="T:System.Object" /> that is the key value.</returns>
    </member>
    <member name="T:System.Data.EntitySqlException">
      <summary>Represents errors that occur when parsing Entity SQL command text. This exception is thrown when syntactic or semantic rules are violated.</summary>
    </member>
    <member name="M:System.Data.EntitySqlException.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Data.EntitySqlException" />.</summary>
    </member>
    <member name="M:System.Data.EntitySqlException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Data.EntitySqlException" /> with a specialized error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.EntitySqlException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntitySqlException" /> class that uses a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="P:System.Data.EntitySqlException.Column">
      <summary>Gets the approximate column number where the error occurred.</summary>
      <returns>An integer that describes the column number where the error occurred.</returns>
    </member>
    <member name="P:System.Data.EntitySqlException.ErrorContext">
      <summary>Gets the approximate context where the error occurred, if available.</summary>
      <returns>A string that describes the approximate context where the error occurred, if available.</returns>
    </member>
    <member name="P:System.Data.EntitySqlException.ErrorDescription">
      <summary>Gets a description of the error.</summary>
      <returns>A string that describes the error.</returns>
    </member>
    <member name="M:System.Data.EntitySqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.Data.EntitySqlException.Line">
      <summary>Gets the approximate line number where the error occurred.</summary>
      <returns>An integer that describes the line number where the error occurred.</returns>
    </member>
    <member name="P:System.Data.EntitySqlException.Message">
      <summary>Gets the full error message. As available, the message contains the error description, context, line number, and column number.</summary>
      <returns>A string describing the full error message. As available, the message contains the error description, context, line number, and column number. </returns>
    </member>
    <member name="T:System.Data.EntityState">
      <summary>The state of an entity object. </summary>
    </member>
    <member name="F:System.Data.EntityState.Detached">
      <summary>The object exists but it is not being tracked by Object Services. An entity is in this state immediately after it has been created and before it is added to the object context. An entity is also in this state after it has been removed from the context by calling the <see cref="M:System.Data.Objects.ObjectContext.Detach(System.Object)" /> method or if it is loaded using a <see cref="F:System.Data.Objects.MergeOption.NoTracking" /><see cref="T:System.Data.Objects.MergeOption" />.</summary>
    </member>
    <member name="F:System.Data.EntityState.Unchanged">
      <summary>The object has not been modified since it was loaded into the context or since the last time that the <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> method was called.</summary>
    </member>
    <member name="F:System.Data.EntityState.Added">
      <summary>The object is added to the object context and the <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> method has not been called. Objects are added to the object context by calling the <see cref="M:System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)" /> method.</summary>
    </member>
    <member name="F:System.Data.EntityState.Deleted">
      <summary>The object is deleted from the object context by using the <see cref="M:System.Data.Objects.ObjectContext.DeleteObject(System.Object)" /> method.</summary>
    </member>
    <member name="F:System.Data.EntityState.Modified">
      <summary>The object is changed but the <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> method has not been called.</summary>
    </member>
    <member name="T:System.Data.IExtendedDataRecord">
      <summary>Provides access to the column values within each row of a <see cref="T:System.Data.Common.DbDataRecord" /> for a <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="P:System.Data.IExtendedDataRecord.DataRecordInfo">
      <summary>Gets <see cref="T:System.Data.Common.DataRecordInfo" /> for this <see cref="T:System.Data.IExtendedDataRecord" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DataRecordInfo" /> object.</returns>
    </member>
    <member name="M:System.Data.IExtendedDataRecord.GetDataReader(System.Int32)">
      <summary>Returns nested readers as <see cref="T:System.Data.Common.DbDataReader" /> objects.</summary>
      <returns>Nested readers as <see cref="T:System.Data.Common.DbDataReader" /> objects.</returns>
      <param name="i">The ordinal of the column.</param>
    </member>
    <member name="M:System.Data.IExtendedDataRecord.GetDataRecord(System.Int32)">
      <summary>Gets a <see cref="T:System.Data.Common.DbDataRecord" /> object with the specified index.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataRecord" /> object. </returns>
      <param name="i">The index of the row.</param>
    </member>
    <member name="T:System.Data.InvalidCommandTreeException">
      <summary>The exception that is thrown to indicate that a command tree is invalid. This exception is currently not thrown anywhere in the Entity Framework.</summary>
    </member>
    <member name="M:System.Data.InvalidCommandTreeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidCommandTreeException" /> class  with a default message. </summary>
    </member>
    <member name="M:System.Data.InvalidCommandTreeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidCommandTreeException" /> class with the specified message. </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Data.InvalidCommandTreeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidCommandTreeException" /> class  with the specified message and inner exception. </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The exception that is the cause of this <see cref="T:System.Data.InvalidCommandTreeException" />.</param>
    </member>
    <member name="T:System.Data.MappingException">
      <summary>The exception that is thrown when mapping related service requests fail.</summary>
    </member>
    <member name="M:System.Data.MappingException.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Data.MappingException" />.</summary>
    </member>
    <member name="M:System.Data.MappingException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Data.MappingException" /> with a specialized error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.MappingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of <see cref="T:System.Data.MappingException" /> that uses a specified error message and a reference to the inner exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="T:System.Data.MetadataException">
      <summary>The exception that is thrown when metadata related service requests fails. </summary>
    </member>
    <member name="M:System.Data.MetadataException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.MetadataException" /> class with a default message. </summary>
    </member>
    <member name="M:System.Data.MetadataException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.MetadataException" /> class with the specified message. </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Data.MetadataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.MetadataException" /> class with the specified message and inner exception. </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The exception that is the cause of this <see cref="T:System.Data.MetadataException" />.</param>
    </member>
    <member name="M:System.Data.MetadataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.Data.ObjectNotFoundException">
      <summary>The exception that is thrown when an object is not present.</summary>
    </member>
    <member name="M:System.Data.ObjectNotFoundException.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Data.ObjectNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.ObjectNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Data.ObjectNotFoundException" /> with a specialized error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of <see cref="T:System.Data.ObjectNotFoundException" /> class that uses a specified error message and a reference to the inner exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="T:System.Data.OptimisticConcurrencyException">
      <summary>The exception that is thrown when an optimistic concurrency violation occurs. </summary>
    </member>
    <member name="M:System.Data.OptimisticConcurrencyException.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Data.OptimisticConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Data.OptimisticConcurrencyException" /> with a specialized error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of <see cref="T:System.Data.OptimisticConcurrencyException" /> that uses a specified error message and a reference to the inner exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
      <summary>Initializes a new instance of <see cref="T:System.Data.OptimisticConcurrencyException" /> that uses a specified error message, a reference to the inner exception, and an enumerable collection of <see cref="T:System.Data.Objects.ObjectStateEntry" /> objects.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
      <param name="stateEntries">The enumerable collection of <see cref="T:System.Data.Objects.ObjectStateEntry" /> objects.</param>
    </member>
    <member name="T:System.Data.ProviderIncompatibleException">
      <summary>The exception that is thrown when the underlying data provider is incompatible with the Entity Framework. </summary>
    </member>
    <member name="M:System.Data.ProviderIncompatibleException.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Data.ProviderIncompatibleException" />.</summary>
    </member>
    <member name="M:System.Data.ProviderIncompatibleException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Data.ProviderIncompatibleException" /> with a specialized error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of <see cref="T:System.Data.ProviderIncompatibleException" /> that uses a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="T:System.Data.UpdateException">
      <summary>The exception that is thrown when modifications to object instances cannot be persisted to the data source.</summary>
    </member>
    <member name="M:System.Data.UpdateException.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Data.UpdateException" />.</summary>
    </member>
    <member name="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of <see cref="T:System.Data.UpdateException" /> with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Data.UpdateException.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Data.UpdateException" /> with a specialized error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Data.UpdateException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UpdateException" /> class that uses a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UpdateException" /> class that uses a specified error message, a reference to the inner exception, and an enumerable collection of <see cref="T:System.Data.Objects.ObjectStateEntry" /> objects.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
      <param name="stateEntries">The collection of <see cref="T:System.Data.Objects.ObjectStateEntry" /> objects.</param>
    </member>
    <member name="P:System.Data.UpdateException.StateEntries">
      <summary>Gets the <see cref="T:System.Data.Objects.ObjectStateEntry" /> objects for this <see cref="T:System.Data.UpdateException" />.</summary>
      <returns>A collection of <see cref="T:System.Data.Objects.ObjectStateEntry" /> objects comprised of either a single entity and 0 or more relationships, or 0 entities and 1 or more relationships.</returns>
    </member>
    <member name="T:System.Data.Common.DataRecordInfo">
      <summary>Provides access to information about the structural type and column information for a <see cref="T:System.Data.Common.DbDataRecord" />.  </summary>
    </member>
    <member name="M:System.Data.Common.DataRecordInfo.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember})">
      <summary>Initializes a new <see cref="T:System.Data.Common.DbDataRecord" /> object for a specific type with an enumerable collection of data fields.</summary>
      <param name="metadata">The metadata for the type represented by this object, supplied by <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</param>
      <param name="memberInfo">An enumerable collection of <see cref="T:System.Data.Metadata.Edm.EdmMember" /> objects that represent column information.</param>
    </member>
    <member name="P:System.Data.Common.DataRecordInfo.FieldMetadata">
      <summary>Gets <see cref="T:System.Data.Common.FieldMetadata" /> for this <see cref="P:System.Data.IExtendedDataRecord.DataRecordInfo" /> object.</summary>
      <returns>A <see cref="T:System.Data.Common.FieldMetadata" /> object.</returns>
    </member>
    <member name="P:System.Data.Common.DataRecordInfo.RecordType">
      <summary>Gets type info for this object as a <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> object.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandDefinition">
      <summary>Defines a cacheable command plan.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandDefinition.#ctor">
      <summary>Initializes a new <see cref="T:System.Data.Common.DbCommandDefinition" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandDefinition.#ctor(System.Data.Common.DbCommand)">
      <summary>Initializes a new <see cref="T:System.Data.Common.DbCommandDefinition" /> using the supplied <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="prototype">The supplied <see cref="T:System.Data.Common.DbCommand" />.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandDefinition.CreateCommand">
      <summary>Creates and returns a <see cref="T:System.Data.Common.DbCommand" /> object that can be executed. </summary>
      <returns>A <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderManifest">
      <summary>Represents the metadata interface for all CLR types.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbProviderManifest" /> class. </summary>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition">
      <summary>Value to pass to the <see cref="M:System.Data.Common.DbProviderManifest.GetInformation" /> method to get the conceptual schema definition information.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)">
      <summary>Provider writers should override this method to return the argument with the wildcards and the escape  character escaped. This method is only used if <see cref="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)" /> returns true.</summary>
      <returns>The argument with the wildcards and the escape character escaped.</returns>
      <param name="argument">The argument to be escaped.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)">
      <summary>When overridden in a derived class, this method returns provider-specific information. This method should never return null.</summary>
      <returns>The <see cref="T:System.Xml.XmlReader" /> object that contains the requested information.</returns>
      <param name="informationType">The type of the information to return.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
      <summary>When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.</summary>
      <returns>The T:System.Data.Metadata.Edm.TypeUsage instance that describes an EDM type and a set of facets for that type.</returns>
      <param name="storeType">The <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
      <summary>Returns the <see cref="T:System.Data.Metadata.Edm.FacetDescription" /> objects for a particular type.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.FacetDescription" /> objects for the specified EDM type.</returns>
      <param name="edmType">The EDM type to return the facet description for.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)">
      <summary>Gets provider-specific information.</summary>
      <returns>The <see cref="T:System.Xml.XmlReader" /> object that contains the requested information.</returns>
      <param name="informationType">The type of the information to return.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetStoreFunctions">
      <summary>When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.</summary>
      <returns>A collection of EDM functions.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
      <summary>When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> instance that describes a storage type and a set of facets for that type.</returns>
      <param name="edmType">The <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetStoreTypes">
      <summary>When overridden in a derived class, returns the set of types supported by the data source.</summary>
      <returns>The set of types supported by the data source.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderManifest.NamespaceName">
      <summary>Gets the namespace used by this provider manifest.</summary>
      <returns>The namespace used by this provider manifest.</returns>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinition">
      <summary>Value to pass to the <see cref="M:System.Data.Common.DbProviderManifest.GetInformation" /> method to get the store schema definition information.</summary>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.StoreSchemaMapping">
      <summary>Value to pass to the <see cref="M:System.Data.Common.DbProviderManifest.GetInformation" /> method to get the store schema mapping information.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
      <summary>Indicates if the provider supports escaping strings to be used as patterns in a Like expression.</summary>
      <returns>Returns true if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, false. The default implementation returns false.</returns>
      <param name="escapeCharacter">If the provider supports escaping, the character that would be used as the escape character.</param>
    </member>
    <member name="T:System.Data.Common.DbProviderServices">
      <summary>Represents a set of methods for creating correct command definition objects and accessing provider manifest information.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Data.Common.DbProviderServices" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)">
      <summary>Creates a command definition object from the specified command tree.</summary>
      <returns>An exectable command definition object.</returns>
      <param name="commandTree">The command tree for the statement. </param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
      <summary>Creates a <see cref="T:System.Data.Common.DbCommandDefinition" /> that uses the specified <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DbCommandDefinition" /> object that represents the executable command definition object.</returns>
      <param name="prototype">A <see cref="T:System.Data.Common.DbCommand" /> used to create the <see cref="T:System.Data.Common.DbCommandDefinition" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
      <summary>Creates a <see cref="T:System.Data.Common.DbCommandDefinition" /> object from a command tree.</summary>
      <returns>An exectable command definition object.</returns>
      <param name="providerManifest">A provider manifest previously retrieved from the store provider.</param>
      <param name="commandTree">A command tree for the statement.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Creates a database indicated by connection and creates schema objects (tables, primary keys, foreign keys) based on the contents of a <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</summary>
      <param name="connection">A connection to a non-existent database that needs to be created and populated with the store objects indicated by the <paramref name="storeItemCollection" /> parameter.</param>
      <param name="commandTimeout">Execution timeout for any commands needed to create the database.</param>
      <param name="storeItemCollection">The collection of all store items based on which the script should be created.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Generates a data definition langauge (DDL0 script that creates schema objects (tables, primary keys, foreign keys) based on the contents of the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> parameter and targeted for the version of the database corresponding to the provider manifest token.</summary>
      <returns>A DDL script that creates schema objects based on the contents of the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> parameter and targeted for the version of the database corresponding to the provider manifest token.</returns>
      <param name="providerManifestToken">The provider manifest token identifying the target version.</param>
      <param name="storeItemCollection">The structure of the database to create.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
      <summary>Creates a command definition object for the specified provider manifest and command tree.</summary>
      <returns>An exectable command definition object.</returns>
      <param name="providerManifest">Provider manifest previously retrieved from the store provider.</param>
      <param name="commandTree">Command tree for the statement.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Returns a value indicating whether a given database exists on the server and whether schema objects contained in the storeItemCollection have been created.</summary>
      <returns>true if the database indicated by the connection and the <paramref name="storeItemCollection" /> parameter exists.</returns>
      <param name="connection">Connection to a database whose existence is verified by this method.</param>
      <param name="commandTimeout">Execution timeout for any commands needed to determine the existence of the database.</param>
      <param name="storeItemCollection">The collection of all store items contained in the database whose existence is determined by this method.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Creates a database indicated by connection and creates schema objects (tables, primary keys, foreign keys) based on the contents of a <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</summary>
      <param name="connection">Connection to a non-existent database that needs to be created and populated with the store objects indicated with the storeItemCollection parameter.</param>
      <param name="commandTimeout">Execution timeout for any commands needed to create the database.</param>
      <param name="storeItemCollection">The collection of all store items based on which the script should be created.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Generates a data definition langauge (DDL0 script that creates schema objects (tables, primary keys, foreign keys) based on the contents of the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> parameter and targeted for the version of the database corresponding to the provider manifest token.</summary>
      <returns>A DDL script that creates schema objects based on the contents of the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> parameter and targeted for the version of the database corresponding to the provider manifest token.</returns>
      <param name="providerManifestToken">The provider manifest token identifying the target version.</param>
      <param name="storeItemCollection">The structure of the database.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Returns a value indicating whether a given database exists on the server and whether schema objects contained in the storeItemCollection have been created.</summary>
      <returns>true if the database indicated by the connection and the <paramref name="storeItemCollection" /> parameter exists.</returns>
      <param name="connection">Connection to a database whose existence is verified by this method.</param>
      <param name="commandTimeout">Execution timeout for any commands needed to determine the existence of the database.</param>
      <param name="storeItemCollection">The structure of the database whose existence is determined by this method.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Deletes all store objects specified in the store item collection from the database and the database itself.</summary>
      <param name="connection">Connection to an existing database that needs to be deleted.</param>
      <param name="commandTimeout">Execution timeout for any commands needed to delete the database.</param>
      <param name="storeItemCollection">The structure of the database to be deleted.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Deletes all store objects specified in the store item collection from the database and the database itself.</summary>
      <param name="connection">Connection to an existing database that needs to be deleted.</param>
      <param name="commandTimeout">Execution timeout for any commands needed to delete the database.</param>
      <param name="storeItemCollection">The structure of the database to be deleted.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)">
      <summary>When overridden in a derived class, returns an instance of a class that derives from the <see cref="T:System.Data.Common.DbProviderManifest" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DbProviderManifest" /> object that represents the provider manifest.</returns>
      <param name="manifestToken">The token information associated with the provider manifest.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
      <summary>Returns provider manifest token given a connection.</summary>
      <returns>The provider manifest token for the specified connection.</returns>
      <param name="connection">Connection to provider.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)">
      <summary>Returns the provider manifest by using the specified version information.</summary>
      <returns>A <see cref="T:System.Data.Common.DbProviderManifest" /> object that represents the provider manifest.</returns>
      <param name="manifestToken">The token information associated with the provider manifest.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)">
      <summary>Returns provider manifest token.</summary>
      <returns>The provider manifest token.</returns>
      <param name="connection">Connection to provider.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)">
      <summary>Returns providers given a connection.</summary>
      <returns>The T:System.Data.Common. DbProviderServices instanced based on the specified connection.</returns>
      <param name="connection">Connection to provider.</param>
    </member>
    <member name="T:System.Data.Common.DbXmlEnabledProviderManifest">
      <summary>Represents a base class that implements the <see cref="T:System.Data.Common.DbProviderManifest" /> based on an XML definition. You can use the <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> class to obtain provider-specific information at runtime. </summary>
    </member>
    <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> class.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> object that provides access to the XML data in the provider manifest file.</param>
    </member>
    <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
      <summary>Returns the list of facet descriptions for the specified Entity Data Model (EDM) type.</summary>
      <returns>A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of facet descriptions for the specified EDM type.</returns>
      <param name="type">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> for which the facet descriptions are to be retrieved.</param>
    </member>
    <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions">
      <summary>Returns the list of provider-supported functions.</summary>
      <returns>A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of provider-supported functions.</returns>
    </member>
    <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes">
      <summary>Returns the list of primitive types supported by the storage provider.</summary>
      <returns>A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of primitive types supported by the storage provider.</returns>
    </member>
    <member name="P:System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName">
      <summary>Gets the namespace name supported by this provider manifest.</summary>
      <returns>The namespace name supported by this provider manifest.</returns>
    </member>
    <member name="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType">
      <summary>Gets the best mapped equivalent Entity Data Model (EDM) type for a specified storage type name.</summary>
      <returns>The best mapped equivalent EDM type for a specified storage type name.</returns>
    </member>
    <member name="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType">
      <summary>Gets the best mapped equivalent storage primitive type for a specified storage type name.</summary>
      <returns>The best mapped equivalent storage primitive type for a specified storage type name.</returns>
    </member>
    <member name="T:System.Data.Common.EntityRecordInfo">
      <summary>Provides access to entity metadata. </summary>
    </member>
    <member name="M:System.Data.Common.EntityRecordInfo.#ctor(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
      <summary>Initializes a new <see cref="T:System.Data.Common.EntityRecordInfo" /> object of a specific entity type with an enumerable collection of data fields and with specific key and entity set information.</summary>
      <param name="metadata">The <see cref="T:System.Data.Metadata.Edm.EntityType" /> of the entity represented by the <see cref="T:System.Data.Common.DbDataRecord" /> described by this <see cref="T:System.Data.Common.EntityRecordInfo" /> object.</param>
      <param name="memberInfo">An enumerable collection of <see cref="T:System.Data.Metadata.Edm.EdmMember" /> objects that represent column information.</param>
      <param name="entityKey">The <see cref="T:System.Data.EntityKey" /> that is the key for the entity.</param>
      <param name="entitySet">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object that is the entity set to which the entity belongs.</param>
    </member>
    <member name="P:System.Data.Common.EntityRecordInfo.EntityKey">
      <summary>Gets the <see cref="T:System.Data.EntityKey" /> for the entity.</summary>
      <returns>An <see cref="T:System.Data.EntityKey" />.</returns>
    </member>
    <member name="T:System.Data.Common.FieldMetadata">
      <summary>Provides access to field metadata for a <see cref="T:System.Data.Common.DataRecordInfo" /> object. </summary>
    </member>
    <member name="M:System.Data.Common.FieldMetadata.#ctor(System.Int32,System.Data.Metadata.Edm.EdmMember)">
      <summary>Initializes a new <see cref="T:System.Data.Common.FieldMetadata" /> object with the specified ordinal value and field type.</summary>
      <param name="ordinal">An integer specified the location of the metadata.</param>
      <param name="fieldType">The field type.</param>
    </member>
    <member name="P:System.Data.Common.FieldMetadata.FieldType">
      <summary>Gets the type of field for this <see cref="T:System.Data.Common.FieldMetadata" /> object.</summary>
      <returns>The type of field for this <see cref="T:System.Data.Common.FieldMetadata" /> object.</returns>
    </member>
    <member name="P:System.Data.Common.FieldMetadata.Ordinal">
      <summary>Gets the ordinal for this <see cref="T:System.Data.Common.FieldMetadata" /> object.</summary>
      <returns>An integer representing the ordinal value.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbAggregate">
      <summary>Implements the basic functionality required by aggregates in a GroupBy clause. </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbAggregate.Arguments">
      <summary>Gets the list of expressions that define the arguments to this <see cref="T:System.Data.Common.CommandTrees.DbAggregate" />.</summary>
      <returns>The list of expressions that define the arguments to this <see cref="T:System.Data.Common.CommandTrees.DbAggregate" />.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbAggregate.ResultType">
      <summary>Gets the result type of this <see cref="T:System.Data.Common.CommandTrees.DbAggregate" />. </summary>
      <returns>The result type of this <see cref="T:System.Data.Common.CommandTrees.DbAggregate" />.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbAndExpression">
      <summary>Represents the logical AND of two Boolean arguments. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbAndExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by the <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbApplyExpression">
      <summary>Represents an apply operation, which is the invocation of the specified function for each element in the specified input set. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by the <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbApplyExpression.Apply">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the function that is invoked for each element in the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the function that is invoked for each element in the input set.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbApplyExpression.Input">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbArithmeticExpression">
      <summary>Represents an arithmetic operation applied to numeric arguments. Addition, subtraction, multiplication, division, modulo, and negation are arithmetic operations. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbArithmeticExpression.Arguments">
      <summary>Gets the list of <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> elements that define the current arguments.</summary>
      <returns>A fixed-size list of <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> elements.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbBinaryExpression">
      <summary>Implements the basic functionality required by expressions that accept two expression operands.</summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left">
      <summary>Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the left argument.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the left argument.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,or its result type is not equal or promotable to the required type for the left argument.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right">
      <summary>Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the right argument.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the right argument.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,or its result type is not equal or promotable to the required type for the right argument.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbCaseExpression">
      <summary>Represents the When, Then, and Else clauses of the <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCaseExpression.Else">
      <summary>Gets or sets the Else clause of this <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</summary>
      <returns>The Else clause of this <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />,or its result type is not equal or promotable to the result type of the <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCaseExpression.Then">
      <summary>Gets the Then clauses of this <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</summary>
      <returns>The Then clauses of this <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCaseExpression.When">
      <summary>Gets the When clauses of this <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</summary>
      <returns>The When clauses of this <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbCastExpression">
      <summary>Represents the type conversion of a single argument to the specified type. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCastExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbCommandTree">
      <summary>An immutable class that implements the basic functionality for the Query, Insert, Update, Delete, and function invocation command tree types. </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters">
      <summary>Gets the name and corresponding type of each parameter that can be referenced within this <see cref="T:System.Data.Common.CommandTrees.DbCommandTree" />.</summary>
      <returns>The name and corresponding type of each parameter that can be referenced within this <see cref="T:System.Data.Common.CommandTrees.DbCommandTree" />.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbComparisonExpression">
      <summary>Represents a comparison operation applied to two arguments. Equality, greater than, greater than or equal, less than, less than or equal, and inequality are comparison operations. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbConstantExpression">
      <summary>Represents different kinds of constants (literals). This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbConstantExpression.Value">
      <summary>Gets the constant value.</summary>
      <returns>The constant value.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbCrossJoinExpression">
      <summary>Represents an unconditional join operation between the given collection arguments. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCrossJoinExpression.Inputs">
      <summary>Gets a <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> list that provides the input sets to the join.</summary>
      <returns>A <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> list that provides the input sets to the join.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbDeleteCommandTree">
      <summary>Represents a single row delete operation expressed as a command tree. This class cannot be inherited.  </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the predicate used to determine which members of the target collection should be deleted.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the predicate used to determine which members of the target collection should be deleted.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbDerefExpression">
      <summary>Represents the an expression that retrieves an entity based on the specified reference. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbDistinctExpression">
      <summary>Removes duplicate elements from the specified set argument. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbElementExpression">
      <summary>Represents the conversion of the specified set argument to a singleton. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbElementExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbEntityRefExpression">
      <summary>Represents an expression that extracts a reference from the underlying entity instance. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExceptExpression">
      <summary>Represents the set subtraction operation between the left and right operands. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor." /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpression">
      <summary>Implements the basic functionality required by expression types.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>The type of the result produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null).</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> instance.</summary>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Data.Common.CommandTrees.DbExpression" />; otherwise, false.</returns>
      <param name="obj">The object to compare to the current <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</param>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind">
      <summary>Gets the kind of the expression, which indicates the operation of this expression.</summary>
      <returns>The kind of the expression, which indicates the operation of this expression.</returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode">
      <summary>Serves as a hash function for the type.</summary>
      <returns>A hash code for the current <see cref="T:System.Data.Common.CommandTrees.DbExpression" />. </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpression.ResultType">
      <summary>Gets the type metadata for the result type of the expression.</summary>
      <returns>The type metadata for the result type of the expression.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpressionBinding">
      <summary>Represents an input set to relational expressions such as <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, and <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.Expression">
      <summary>Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the input set.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the binding, or its result type is not equal or promotable to the result type of the current value of the property.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.Variable">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references the element variable.</summary>
      <returns>The variable reference.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableName">
      <summary>Gets the name assigned to the element variable.</summary>
      <returns>The name assigned to the element variable.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableType">
      <summary>Gets the type metadata of the element variable.</summary>
      <returns>The type metadata of the element variable. </returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpressionKind">
      <summary>Contains values that each expression class uses to denote the operation it represents. The <see cref="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" /> property of an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> can be retrieved to determine which operation that expression represents. </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.All">
      <summary>true-for-all expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.And">
      <summary>Logical AND expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Any">
      <summary>true-for-any expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Case">
      <summary>Conditional case statement expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Cast">
      <summary>Polymorphic type cast expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Constant">
      <summary>Constant value expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.CrossApply">
      <summary>Cross apply expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin">
      <summary>Cross join expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Deref">
      <summary>Dereference expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Distinct">
      <summary>Duplicate removal expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Divide">
      <summary>Division expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Element">
      <summary>Set-to-singleton conversion expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.EntityRef">
      <summary>Entity reference value retrieval expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Equals">
      <summary>Equality expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Except">
      <summary>Set subtraction expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Filter">
      <summary>Restriction expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin">
      <summary>Full outer join expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Function">
      <summary>Standalone function expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan">
      <summary>Greater than expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals">
      <summary>Greater than or equal expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.GroupBy">
      <summary>Grouping expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin">
      <summary>Inner join expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Intersect">
      <summary>Set intersection expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty">
      <summary>Empty set determination expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.IsNull">
      <summary>Null determination expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.IsOf">
      <summary>Type comparison (specified Type or Subtype) expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly">
      <summary>Type comparison (specified Type only) expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Lambda">
      <summary>Lambda function expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin">
      <summary>Left outer join expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.LessThan">
      <summary>Less than expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals">
      <summary>Less than or equal expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Like">
      <summary>String comparison expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Limit">
      <summary>Result count restriction (TOP n).</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Minus">
      <summary>Subtraction expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Modulo">
      <summary>Modulo expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Multiply">
      <summary>Multiplication expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.NewInstance">
      <summary>Instance, row, and set construction expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Not">
      <summary>Logical NOT expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.NotEquals">
      <summary>Inequality expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Null">
      <summary>Null expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType">
      <summary>Set members by type (or subtype) expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly">
      <summary>Set members by exact type expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Or">
      <summary>Logical OR expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.OuterApply">
      <summary>Outer apply expressions</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference">
      <summary>Reference to a parameter expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Plus">
      <summary>Addition expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Project">
      <summary>Projection expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Property">
      <summary>Static or instance property retrieval expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Ref">
      <summary>Reference expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.RefKey">
      <summary>Ref key value retrieval expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation">
      <summary>Relationship (composition or association) navigation expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Scan">
      <summary>Entity or relationship set scan expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Skip">
      <summary>Skip elements of an ordered collection.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Sort">
      <summary>Sorting expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Treat">
      <summary>Type conversion expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus">
      <summary>Negation expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.UnionAll">
      <summary>Set union (with duplicates) expressions.</summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.VariableReference">
      <summary>Reference to a variable expressions.</summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpressionVisitor">
      <summary>Defines the basic functionality that should be implemented by visitors that do not return a result value.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> class.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
      <summary>When overridden in a derived class, handles any expression of an unrecognized type.</summary>
      <param name="expression">The expression to be handled.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that is visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.</summary>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that is visited.</param>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1">
      <summary>Defines the basic functionality that should be implemented by visitors that return a result value of a specific type. </summary>
      <typeparam name="TResultType">The type of the result produced by the visitor.</typeparam>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" /> class. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />. </summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)">
      <summary>When overridden in a derived class, handles any expression of an unrecognized type.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern method for <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that is being visited.</param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.</summary>
      <returns>A result value of a specific type.</returns>
      <param name="expression">The <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that is being visited.</param>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbFilterExpression">
      <summary>Represents a predicate applied to filter an input set. This produces the set of elements that satisfy the predicate. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFilterExpression.Input">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFilterExpression.Predicate">
      <summary>Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the predicate used to filter the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the predicate used to filter the input set.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, or its result type is not a Boolean type.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbFunctionAggregate">
      <summary>Supports standard aggregate functions, such as MIN, MAX, AVG, SUM, and so on. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct">
      <summary>Gets a value indicating whether this aggregate is a distinct aggregate.</summary>
      <returns>true if the aggregate is a distinct aggregate; otherwise, false. </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Function">
      <summary>Gets the method metadata that specifies the aggregate function to invoke.</summary>
      <returns>The method metadata that specifies the aggregate function to invoke.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbFunctionCommandTree">
      <summary>Represents the invocation of a database function. </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.EdmFunction">
      <summary>Gets the <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> that represents the function that is being invoked.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> that represents the function that is being invoked.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.ResultType">
      <summary>Gets the expected result type for the function’s first result set.</summary>
      <returns>The expected result type for the function’s first result set.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbFunctionExpression">
      <summary>Represents an invocation of a function. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionExpression.Arguments">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides the arguments to the function.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides the arguments to the function.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionExpression.Function">
      <summary>Gets the metadata for the function to invoke.</summary>
      <returns>The metadata for the function to invoke.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbGroupAggregate">
      <summary>Represents a collection of elements that compose a group.  </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbGroupByExpression">
      <summary>Represents a group by operation. A group by operation is a grouping of the elements in the input set based on the specified key expressions followed by the application of the specified aggregates. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates">
      <summary>Gets a <see cref="T:System.Data.Common.CommandTrees.DbAggregate" /> list that provides the aggregates to apply.</summary>
      <returns>A <see cref="T:System.Data.Common.CommandTrees.DbAggregate" /> list that provides the aggregates to apply.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupByExpression.Input">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set and provides access to the set element and group element variables.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set and provides access to the set element and group element variables.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupByExpression.Keys">
      <summary>Gets a <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides grouping keys.</summary>
      <returns>A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides grouping keys.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding">
      <summary>Defines the binding for the input set to a <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Expression">
      <summary>Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the input set.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />, or its result type is not equal or promotable to the result type of the current value of the property.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupAggregate">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbGroupAggregate" /> that represents the collection of elements in the group.</summary>
      <returns>The elements in the group.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariable">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references the group element variable.</summary>
      <returns>A reference to the group element variable.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableName">
      <summary>Gets the name assigned to the group element variable.</summary>
      <returns>The name assigned to the group element variable.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableType">
      <summary>Gets the type metadata of the group element variable.</summary>
      <returns>The type metadata of the group element variable.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Variable">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references the element variable.</summary>
      <returns>A reference to the element variable.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableName">
      <summary>Gets the name assigned to the element variable.</summary>
      <returns>The name assigned to the element variable.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableType">
      <summary>Gets the type metadata of the element variable.</summary>
      <returns>The type metadata of the element variable.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbInsertCommandTree">
      <summary>Represents a single row insert operation expressed as a command tree. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbInsertCommandTree.Returning">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies a projection of results to be returned based on the modified rows. </summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies a projection of results to be returned based on the modified rows. null indicates that no results should be returned from this command.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbInsertCommandTree.SetClauses">
      <summary>Gets the list of insert set clauses that define the insert operation. </summary>
      <returns>The list of insert set clauses that define the insert operation. </returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbIntersectExpression">
      <summary>Represents the set intersection operation between the left and right operands. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbIsEmptyExpression">
      <summary>Represents an empty set determination applied to a single set argument. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbIsNullExpression">
      <summary>Represents null determination applied to a single argument. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbIsOfExpression">
      <summary>Represents the type comparison of a single argument against the specified type. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbIsOfExpression.OfType">
      <summary>Gets the type metadata that the type metadata of the argument should be compared to.</summary>
      <returns>The type metadata that the type metadata of the argument should be compared to.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbJoinExpression">
      <summary>Represents an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type. </param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition">
      <summary>Gets or sets the join condition to apply.</summary>
      <returns>The join condition to apply.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, or its result type is not a Boolean type.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbJoinExpression.Left">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that provides the left input.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that provides the left input.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbJoinExpression.Right">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that provides the right input.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that provides the right input.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbLambda">
      <summary>Represents a lambda function that can be invoked to produce a <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />. This class cannot be inherited.  </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLambda.Body">
      <summary>Gets the body of the lambda expression.</summary>
      <returns>A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that represents the body of the lambda function.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLambda.Variables">
      <summary>Gets the parameters of the lambda expression.</summary>
      <returns>The list of lambda function parameters represented as <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> objects.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbLambdaExpression">
      <summary>Allows the application of a lambda function to arguments represented by <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> objects.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>The visitor pattern method for expression visitors that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>The visitor pattern method for expression visitors that produce a result value of a specific type.</summary>
      <returns>The type of the result produced by the expression visitor.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of type TResultType.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" /></typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLambdaExpression.Arguments">
      <summary>Gets a <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides the arguments to which the Lambda function should be applied.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLambdaExpression.Lambda">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> representing the Lambda function applied by this expression.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> representing the Lambda function applied by this expression.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbLikeExpression">
      <summary>Represents a string comparison against the specified pattern with an optional escape string. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLikeExpression.Argument">
      <summary>Gets or sets an expression that specifies the string to compare against the given pattern.</summary>
      <returns>An expression that specifies the string to compare against the given pattern.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, or its result type is not a string type.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLikeExpression.Escape">
      <summary>Gets or sets an expression that provides an optional escape string to use for the comparison.</summary>
      <returns>An expression that provides an optional escape string to use for the comparison.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, or its result type is not a string type.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLikeExpression.Pattern">
      <summary>Gets or sets an expression that specifies the pattern against which the given string should be compared.</summary>
      <returns>An expression that specifies the pattern against which the given string should be compared.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, or its result type is not a string type.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbLimitExpression">
      <summary>Represents the restriction of the number of elements in the argument collection to the specified limit value.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLimitExpression.Argument">
      <summary>Gets or sets an expression that specifies the input collection.</summary>
      <returns>An expression that specifies the input collection.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, or its result type is not a collection type.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit">
      <summary>Gets or sets an expression that specifies the limit on the number of elements returned from the input collection.</summary>
      <returns>An expression that specifies the limit on the number of elements returned from the input collection.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, or is not one of <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, or its result type is not equal or promotable to a 64-bit integer type.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLimitExpression.WithTies">
      <summary>Gets whether the limit operation will include tied results. Including tied results might produce more results than specified by the <see cref="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit" /> value.</summary>
      <returns>true if the limit operation will include tied results; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbModificationClause">
      <summary>Specifies a single clause in an insert or update modification operation.</summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbModificationCommandTree">
      <summary>Represents a data manipulation language (DML) operation expressed as a command tree.</summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the target table for the data manipulation language (DML) operation.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the target table for the DML operation.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbNewInstanceExpression">
      <summary>Represents the construction of a new instance of a given type, including set and record types. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbNewInstanceExpression.Arguments">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides the property/column values or set elements for the new instance.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides the property/column values or set elements for the new instance.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbNotExpression">
      <summary>Represents the logical NOT of a single Boolean argument. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNotExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbNullExpression">
      <summary>Represents a reference to a typed null literal. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbOfTypeExpression">
      <summary>Represents the retrieval of elements of the specified type from the given set argument. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbOfTypeExpression.OfType">
      <summary>Gets the metadata of the type of elements that should be retrieved from the set argument.</summary>
      <returns>The metadata of the type of elements that should be retrieved from the set argument. </returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbOrExpression">
      <summary>Represents the logical OR of two Boolean arguments. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbOrExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression">
      <summary>Represents a reference to a parameter declared on the command tree that contains this expression. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbParameterReferenceExpression.ParameterName">
      <summary>Gets the name of the referenced parameter.</summary>
      <returns>The name of the referenced parameter.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbProjectExpression">
      <summary>Represents the projection of a given input set over the specified expression. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbProjectExpression.Input">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbProjectExpression.Projection">
      <summary>Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the projection.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the projection.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, or its result type is not equal or promotable to the reference type of the current projection.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbPropertyExpression">
      <summary>Provides methods and properties for retrieving an instance property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbPropertyExpression.Instance">
      <summary>Gets or sets a <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the instance from which the property should be retrieved.</summary>
      <returns>A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the instance from which the property should be retrieved.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, or its result type is not equal or promotable to the type that defines the property.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.op_Implicit(System.Data.Common.CommandTrees.DbPropertyExpression)~System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}">
      <summary>Creates a new key/value pair based on this property expression.</summary>
      <returns>A new key/value pair with the key and value derived from the <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</returns>
      <param name="value">This property expression.</param>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbPropertyExpression.Property">
      <summary>Gets the property metadata for the property to retrieve.</summary>
      <returns>The property metadata for the property to retrieve.</returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.ToKeyValuePair">
      <summary>Creates a new key/value pair based on this property expression.</summary>
      <returns>A new key/value pair with the key and value derived from the <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbQuantifierExpression">
      <summary>Represents a quantifier operation of the specified kind over the elements of the specified input set. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate">
      <summary>Gets or sets the Boolean predicate that should be evaluated for each element in the input set.</summary>
      <returns>The Boolean predicate that should be evaluated for each element in the input set.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree for the <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />,or its result type is not a Boolean type.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbQueryCommandTree">
      <summary>Represents a query operation expressed as a command tree. This class cannot be inherited.  </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the logic of the query operation.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the logic of the query operation.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is associated with a different command tree.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbRefExpression">
      <summary>Represents a strongly typed reference to a specific instance within an entity set. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRefExpression.EntitySet">
      <summary>Gets the metadata for the entity set that contains the instance.</summary>
      <returns>The metadata for the entity set that contains the instance.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbRefKeyExpression">
      <summary>Represents the retrieval of the key value (in its structural form) from the underlying reference value. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression">
      <summary>Represents the navigation of a relationship. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value. </summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom">
      <summary>Gets the metadata for the relationship end to navigate from.</summary>
      <returns>The metadata for the relationship end to navigate from.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateTo">
      <summary>Gets the metadata for the relationship end to navigate to.</summary>
      <returns>The metadata for the relationship end to navigate to.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigationSource">
      <summary>Gets or sets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the starting point of the navigation and must be a reference to an entity instance.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the instance of the source relationship end from which navigation should occur.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />, or its result type is not equal or promotable to the reference type of the <see cref="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom" /> property.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Relationship">
      <summary>Gets the metadata for the relationship over which navigation occurs.</summary>
      <returns>The metadata for the relationship over which navigation occurs.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbScanExpression">
      <summary>Represents a scan over an entity set or relationship set, as indicated by the <see cref="P:System.Data.Common.CommandTrees.DbScanExpression.Target" /> property. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbScanExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbScanExpression.Target">
      <summary>Gets the metadata for the referenced entity or relationship set.</summary>
      <returns>The metadata for the referenced entity or relationship set.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbSetClause">
      <summary>Specifies the clause in a modification operation that sets the value of a property. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSetClause.Property">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the property that should be updated.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the property that should be updated.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSetClause.Value">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the new value with which to update the property.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the new value with which to update the property. </returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbSkipExpression">
      <summary>Skips a specified number of elements in the input set. <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> can only be used after the input collection has been sorted as specified by the sort keys.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSkipExpression.Count">
      <summary>Gets or sets an expression that specifies the number of elements to skip from the input collection.</summary>
      <returns>An expression that specifies the number of elements to skip from the input collection.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />; the expression is not either a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or a <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />; or the result type of the expression is not equal or promotable to a 64-bit integer type.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSkipExpression.Input">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder">
      <summary>Gets a <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> list that defines the sort order.</summary>
      <returns>A <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> list that defines the sort order.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbSortClause">
      <summary>Specifies a sort key that can be used as part of the sort order in a <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortClause.Ascending">
      <summary>Gets a Boolean value indicating whether or not this sort key uses an ascending sort order.</summary>
      <returns>true if this sort key uses an ascending sort order; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortClause.Collation">
      <summary>Gets a string value that specifies the collation for this sort key.</summary>
      <returns>A string value that specifies the collation for this sort key.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortClause.Expression">
      <summary>Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the value for this sort key.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the value for this sort key.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbSortExpression">
      <summary>Represents a sort operation applied to the elements of the specified input set based on the given sort keys. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbSortExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortExpression.Input">
      <summary>Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortExpression.SortOrder">
      <summary>Gets a <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> list that defines the sort order.</summary>
      <returns>A <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> list that defines the sort order.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbTreatExpression">
      <summary>Represents a type conversion operation applied to a polymorphic argument. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />. </returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbUnaryExpression">
      <summary>Implements the basic functionality required by expressions that accept a single expression argument. </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument">
      <summary>Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the argument.</summary>
      <returns>The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the argument.</returns>
      <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
      <exception cref="T:System.ArgumentException">The expression is not associated with the command tree of a <see cref="T:System.Data.Common.CommandTrees.DbUnaryExpression" />, or its result type is not equal or promotable to the required type for the argument.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbUnionAllExpression">
      <summary>Represents the set union (without duplicate removal) operation between the left and right operands. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbUpdateCommandTree">
      <summary>Represents a single-row update operation expressed as a command tree. This class cannot be inherited.  </summary>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Predicate">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the predicate used to determine which members of the target collection should be updated.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the predicate used to determine which members of the target collection should be updated.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Returning">
      <summary>Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies a projection of results to be returned, based on the modified rows.</summary>
      <returns>An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies a projection of results to be returned based, on the modified rows. null indicates that no results should be returned from this command.</returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.SetClauses">
      <summary>Gets the list of update set clauses that define the update operation.</summary>
      <returns>The list of update set clauses that define the update operation.</returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression">
      <summary>Represents a reference to a variable that is currently in scope. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implements the visitor pattern for expressions that do not produce a result value.</summary>
      <param name="visitor">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implements the visitor pattern for expressions that produce a result value of a specific type.</summary>
      <returns>A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</param>
      <typeparam name="TResultType">The type of the result produced by <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> is null.</exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbVariableReferenceExpression.VariableName">
      <summary>Gets the name of the referenced variable.</summary>
      <returns>The name of the referenced variable.</returns>
    </member>
    <member name="T:System.Data.EntityClient.EntityCommand">
      <summary>Represents a command to be executed against an Entity Data Model (EDM). </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.EntityClient.EntityCommand" /> is not associated with an <see cref="T:System.Data.EntityClient.EntityConnection" /> property that was changed while a transaction was in progress. -or-The associated <see cref="T:System.Data.EntityClient.EntityConnection" /> does not have store metadata.-or-The associated <see cref="T:System.Data.EntityClient.EntityConnection" /> is in the <see cref="F:System.Data.ConnectionState.Broken" /> state.The <see cref="T:System.Data.Common.DbDataReader" /> associated with this <see cref="T:System.Data.EntityClient.EntityCommand" /> is open.</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityCommand" /> class.</summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityCommand" /> class with the text of the command.</summary>
      <param name="statement"> The text of the command.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.String,System.Data.EntityClient.EntityConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityCommand" /> class with the text of the command and an <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
      <param name="statement">The text of the command.</param>
      <param name="connection">An <see cref="T:System.Data.EntityClient.EntityConnection" /> that represents a connection to the data source.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.String,System.Data.EntityClient.EntityConnection,System.Data.EntityClient.EntityTransaction)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityCommand" /> class with the text of the command, an <see cref="T:System.Data.EntityClient.EntityConnection" /> and an <see cref="T:System.Data.EntityClient.EntityTransaction" />.</summary>
      <param name="statement">The text of the command.</param>
      <param name="connection">An <see cref="T:System.Data.EntityClient.EntityConnection" /> that represents a connection to the data source.</param>
      <param name="transaction">A <see cref="T:System.Data.EntityClient.EntityTransaction" /> in which the <see cref="P:System.Data.EntityClient.EntityCommand.CommandText" /> executes.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.Cancel">
      <summary>Tries to cancel the execution of a <see cref="T:System.Data.EntityClient.EntityCommand" /> by calling the Cancel method of the underlying data provider.</summary>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.CommandText">
      <summary>Gets or sets an Entity SQL statement that specifies a command or stored procedure to execute.</summary>
      <returns>The Entity SQL statement or stored procedure to execute. The default is an empty string.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.CommandTimeout">
      <summary>Gets or sets the amount of time to wait before timing out. </summary>
      <returns>The time in seconds to wait for the command to execute. The default is the underlying data provider's default command time out.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.CommandType">
      <summary>Gets or sets a value that indicates how the <see cref="P:System.Data.EntityClient.EntityCommand.CommandText" /> property is to be interpreted.</summary>
      <returns>One of the <see cref="T:System.Data.CommandType" /> enumeration values. The default is Text.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.Connection">
      <summary>Gets or sets the <see cref="T:System.Data.EntityClient.EntityConnection" /> used by this <see cref="T:System.Data.EntityClient.EntityCommand" />.</summary>
      <returns>The <see cref="T:System.Data.EntityClient.EntityConnection" />. </returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.EntityClient.EntityConnection" /> property was changed while a transaction was in progress. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.CreateParameter">
      <summary>Creates a new instance of a <see cref="T:System.Data.EntityClient.EntityParameter" /> object.</summary>
      <returns>A <see cref="T:System.Data.EntityClient.EntityParameter" /> object.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.DesignTimeVisible">
      <summary>Gets or sets a value that indicates whether the command object should be visible in a Windows Form Designer control.</summary>
      <returns>A value that indicates whether the command object should be visible in a control. The default is true. </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.EnablePlanCaching">
      <summary>Gets or sets Boolean value that enables or disables query plan caching for this <see cref="T:System.Data.EntityClient.EntityCommand" />.</summary>
      <returns>A Boolean value that indicates whether query plan caching is enabled or disabled for this <see cref="T:System.Data.EntityClient.EntityCommand" />.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ExecuteNonQuery">
      <summary>Executes the current command.</summary>
      <returns>The number of rows affected.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ExecuteReader">
      <summary>Executes the command and returns a <see cref="T:System.Data.EntityClient.EntityDataReader" />.</summary>
      <returns>The <see cref="T:System.Data.EntityClient.EntityDataReader" /> that contains the results.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Compiles the <see cref="P:System.Data.EntityClient.EntityCommand.CommandText" /> into a command tree and passes it to the underlying store provider for execution. Then builds an <see cref="T:System.Data.EntityClient.EntityDataReader" /> out of the produced result set using the specified <see cref="T:System.Data.CommandBehavior" />.</summary>
      <returns>The <see cref="T:System.Data.EntityClient.EntityDataReader" /> that contains the results.</returns>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ExecuteScalar">
      <summary>Executes the command, and returns the first column of the first row in the result set. Additional columns or rows are ignored.</summary>
      <returns>The first column of the first row in the result set, or a null reference (Nothing in Visual Basic) if the result set is empty.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.Parameters">
      <summary>Gets the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
      <returns>The parameters of the Entity SQL statement or stored procedure. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.Prepare">
      <summary>Compiles the entity-level command and creates a prepared version of the command by calling the Prepare method of the underlying data provider's Command object.</summary>
      <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Data.EntityClient.EntityConnection" /> is closed. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ToTraceString">
      <summary>Compiles the entity-level command and returns the store command text.</summary>
      <returns>A string that represents the store command text.NoteThis method is intended for diagnostic use only. Do not make your code dependent on the trace string that this method returns, because the format of the string might change in future releases. </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.Transaction">
      <summary>Gets or sets the <see cref="T:System.Data.EntityClient.EntityTransaction" /> within which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</summary>
      <returns>The <see cref="T:System.Data.EntityClient.EntityTransaction" />. The default value is null.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.UpdatedRowSource">
      <summary>Gets or sets how command results are applied to rows.</summary>
      <returns>One of the <see cref="T:System.Data.UpdateRowSource" /> values.</returns>
    </member>
    <member name="T:System.Data.EntityClient.EntityConnection">
      <summary>Contains a reference to a conceptual model and a data source connection. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class.</summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class with a specified <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> and <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <param name="workspace">A <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> to be associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</param>
      <param name="connection">The underlying data source connection for this <see cref="T:System.Data.EntityClient.EntityConnection" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="workspace" /> or <paramref name="connection" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The conceptual model is missing from the workspace.-or-The mapping file is missing from the workspace.-or-The storage model is missing from the workspace.-or-The <paramref name="connection" /> is not in a closed state.</exception>
      <exception cref="T:System.Data.ProviderIncompatibleException">The <paramref name="connection" /> is not from an ADO.NET Entity Framework-compatible provider.</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class, based on the connection string.</summary>
      <param name="connectionString">The provider-specific connection string.</param>
      <exception cref="T:System.ArgumentException">An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
      <summary>Begins a transaction by using the underlying provider. </summary>
      <returns>A new <see cref="T:System.Data.EntityClient.EntityTransaction" />. The returned <see cref="T:System.Data.EntityClient.EntityTransaction" /> instance can later be associated with the <see cref="T:System.Data.EntityClient.EntityCommand" /> to execute the command under that transaction.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying provider is not known.-or-The call to <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> was made on an <see cref="T:System.Data.EntityClient.EntityConnection" /> that already has a current transaction.-or-The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Begins a transaction with the specified isolation level by using the underlying provider. </summary>
      <returns>A new <see cref="T:System.Data.EntityClient.EntityTransaction" />. The returned <see cref="T:System.Data.EntityClient.EntityTransaction" /> instance can later be associated with the <see cref="T:System.Data.EntityClient.EntityCommand" /> to execute the command under that transaction.</returns>
      <param name="isolationLevel">The isolation level of the transaction.</param>
      <exception cref="T:System.InvalidOperationException">The underlying provider is not known.-or-The call to <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> was made on an <see cref="T:System.Data.EntityClient.EntityConnection" /> that already has a current transaction.-or-The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
      <summary>Not supported.</summary>
      <param name="databaseName">Not supported. </param>
      <exception cref="T:System.NotSupportedException">When the method is called. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.Close">
      <summary>Closes the connection to the database.</summary>
      <exception cref="T:System.InvalidOperationException">An error occurred when closing the connection.</exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.ConnectionString">
      <summary>Gets or sets the <see cref="T:System.Data.EntityClient.EntityConnection" /> connection string.</summary>
      <returns>The connection string required to establish the initial connection to a data source. The default value is an empty string. On a closed connection, the currently set value is returned. If no value has been set, an empty string is returned.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set the <see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" /> property after the <see cref="EntityConnection" />’s <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> was initialized. The <see cref="MetadataWorkspace" /> is initialized either when the <see cref="EntityConnection" /> instance is constructed through the overload that takes a <see cref="MetadataWorkspace" /> as a parameter, or when the <see cref="T:System.Data.EntityClient.EntityConnection" /> instance has been opened.</exception>
      <exception cref="T:System.ArgumentException">An invalid connection string keyword has been provided or a required connection string keyword has not been provided.</exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout">
      <summary>Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.</summary>
      <returns>The time (in seconds) to wait for a connection to open. The default value is the underlying data provider's default time-out. </returns>
      <exception cref="T:System.ArgumentException">The value set is less than 0. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.CreateCommand">
      <summary>Creates a new instance of an <see cref="T:System.Data.EntityClient.EntityCommand" />, with the <see cref="P:System.Data.EntityClient.EntityCommand.Connection" /> set to this <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
      <returns>An <see cref="T:System.Data.EntityClient.EntityCommand" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The name of the underlying data provider is not known.</exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.Database">
      <summary>Gets the name of the current database, or the database that will be used after a connection is opened.</summary>
      <returns>The value of the Database property of the underlying data provider.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying data provider is not known. </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.DataSource">
      <summary>Gets the name or network address of the data source to connect to.</summary>
      <returns>The name of the data source. The default value is an empty string.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying data provider is not known. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists this <see cref="T:System.Data.EntityClient.EntityConnection" /> in the specified transaction.</summary>
      <param name="transaction">The transaction object to enlist into.</param>
      <exception cref="T:System.InvalidOperationException">The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
      <summary>Returns the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</returns>
      <exception cref="T:System.Data.MetadataException">The inline connection string contains an invalid Metadata keyword value.</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.Open">
      <summary>Establishes a connection to the data source by calling the underlying data provider's Open method.</summary>
      <exception cref="T:System.InvalidOperationException">An error occurs when you open the connection, or the name of the underlying data provider is not known.</exception>
      <exception cref="T:System.Data.MetadataException">The inline connection string contains an invalid Metadata keyword value.</exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.ServerVersion">
      <summary>Gets a string that contains the version of the data source to which the client is connected.</summary>
      <returns>The version of the data source that is contained in the provider connection string.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.State">
      <summary>Gets the <see cref="T:System.Data.ConnectionState" /> property of the underlying provider if the <see cref="T:System.Data.EntityClient.EntityConnection" /> is open. Otherwise, returns <see cref="F:System.Data.ConnectionState.Closed" />.</summary>
      <returns>
        <see cref="F:System.Data.ConnectionState.Open" />, if and only if both the <see cref="T:System.Data.EntityClient.EntityConnection" />’s internal state and the underlying provider's <see cref="T:System.Data.ConnectionState" /> are open. If the <see cref="T:System.Data.EntityClient.EntityConnection" />’s state is open but the provider's <see cref="T:System.Data.ConnectionState" /> is closed, this property returns <see cref="F:System.Data.ConnectionState.Broken" />. Otherwise, it returns <see cref="F:System.Data.ConnectionState.Closed" />.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.StoreConnection">
      <summary>Provides access to the underlying data source connection that is used by the <see cref="T:System.Data.EntityClient.EntityConnection" /> object.</summary>
      <returns>The <see cref="T:System.Data.Common.DbConnection" /> for the data source connection.</returns>
    </member>
    <member name="T:System.Data.EntityClient.EntityConnectionStringBuilder">
      <summary>Provides a simple way to create and manage the contents of connection strings used by the EntityClient. </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class using the supplied connection string. </summary>
      <param name="connectionString">A provider-specific connection string to the underlying data source.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.Clear">
      <summary>Clears the contents of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains a specific key.</summary>
      <returns>Returns true if the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains an element that has the specified key; otherwise, false.</returns>
      <param name="keyword">The key to locate in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> has a fixed size.</summary>
      <returns>Returns true in every case, because the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> supplies a fixed-size collection of keyword/value pairs.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key. In C#, this property is the indexer.</summary>
      <returns>The value associated with the specified key. </returns>
      <param name="keyword">The key of the item to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Tried to add a key that does not exist in the available keys.</exception>
      <exception cref="T:System.FormatException">Invalid value in the connection string (specifically, a Boolean or numeric value was expected but not supplied).</exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Metadata">
      <summary>Gets or sets the metadata locations in the connection string.</summary>
      <returns>Gets or sets the metadata locations in the connection string.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Name">
      <summary>Gets or sets the name of a section as defined in a configuration file.</summary>
      <returns>The name of a section in a configuration file.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Provider">
      <summary>Gets or sets the name of the underlying .NET Framework data provider in the connection string.</summary>
      <returns>The invariant name of the underlying .NET Framework data provider.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString">
      <summary>Gets or sets the inner, provider-specific connection string.</summary>
      <returns>The inner, provider-specific connection string.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)">
      <summary>Removes the entry with the specified key from the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance. </summary>
      <returns>Returns true if the key existed in the connection string and was removed; false if the key did not exist.</returns>
      <param name="keyword">The key of the keyword/value pair to be removed from the connection string in this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is null (Nothing in Visual Basic)</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Retrieves a value corresponding to the supplied key from this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</summary>
      <returns>Returns true if <paramref name="keyword" /> was found in the connection string; otherwise, false.</returns>
      <param name="keyword">The key of the item to retrieve.</param>
      <param name="value">The value corresponding to <paramref name="keyword." /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> contains a null value (Nothing in Visual Basic).</exception>
    </member>
    <member name="T:System.Data.EntityClient.EntityDataReader">
      <summary>Reads a forward-only stream of rows from a data source. </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.Close">
      <summary>Closes the <see cref="T:System.Data.EntityClient.EntityDataReader" /> object.</summary>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.DataRecordInfo">
      <summary>Gets <see cref="T:System.Data.Common.DataRecordInfo" /> for this <see cref="T:System.Data.IExtendedDataRecord" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DataRecordInfo" /> object.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.Depth">
      <summary>Gets a value indicating the depth of nesting for the current row. </summary>
      <returns>The depth of nesting for the current row. </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.Dispose(System.Boolean)">
      <summary>Releases the resources consumed by this <see cref="T:System.Data.EntityClient.EntityDataReader" /> and calls <see cref="M:System.Data.EntityClient.EntityDataReader.Close" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.FieldCount">
      <summary>Gets the number of columns in the current row. </summary>
      <returns>The number of columns in the current row.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column, starting at location indicated by <paramref name="dataIndex" />, into the buffer, starting at the location indicated by <paramref name="bufferIndex" />.</summary>
      <returns>The actual number of bytes read.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <param name="dataOffset">The index within the row from which to begin the read operation.</param>
      <param name="buffer">The buffer into which to copy the data.</param>
      <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
      <param name="length">The maximum number of characters to read.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a single character.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column, starting at location indicated by <paramref name="dataIndex" />, into the buffer, starting at the location indicated by <paramref name="bufferIndex" />.</summary>
      <returns>The actual number of characters read.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <param name="dataOffset">The index within the row from which to begin the read operation.</param>
      <param name="buffer">The buffer into which to copy the data.</param>
      <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
      <param name="length">The maximum number of characters to read.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDataReader(System.Int32)">
      <summary>Returns nested readers as <see cref="T:System.Data.Common.DbDataReader" /> objects.</summary>
      <returns>Nested readers as <see cref="T:System.Data.Common.DbDataReader" /> objects.</returns>
      <param name="i">The ordinal of the column.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDataRecord(System.Int32)">
      <summary>Returns a nested <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataRecord" />.</returns>
      <param name="i">The number of the DbDataRecord to return.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets name of the data type of the specified column.</summary>
      <returns>A string representing the name of the data type.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The zero-based column ordinal.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDbDataReader(System.Int32)">
      <summary>Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal that can be overridden with a provider-specific implementation.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataReader" /> object.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetFieldType(System.Int32)">
      <summary>Gets the data type of the specified column.</summary>
      <returns>The data type of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally-unique identifier (GUID).</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetName(System.Int32)">
      <summary>Gets the name of the column, given the zero-based column ordinal.</summary>
      <returns>The name of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal given the name of the column.</summary>
      <returns>The zero-based column ordinal.</returns>
      <param name="name">The name of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The name specified is not a valid column name.</exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Returns the provider-specific field type of the specified column.</summary>
      <returns>The <see cref="T:System.Type" /> object that describes the data type of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Gets all provider-specific attribute columns in the collection for the current row.</summary>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetSchemaTable">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.String" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetValue(System.Int32)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetValues(System.Object[])">
      <summary>Populates an array of objects with the column values of the current row.</summary>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.HasRows">
      <summary>Gets a value that indicates whether this <see cref="T:System.Data.EntityClient.EntityDataReader" /> contains one or more rows. </summary>
      <returns>true if the <see cref="T:System.Data.EntityClient.EntityDataReader" /> contains one or more rows; otherwise false. </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.IsClosed">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.EntityClient.EntityDataReader" /> is closed.</summary>
      <returns>true if the <see cref="T:System.Data.EntityClient.EntityDataReader" /> is closed; otherwise false. </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.IsDBNull(System.Int32)">
      <summary>Gets a value that indicates whether the column contains nonexistent or missing values.</summary>
      <returns>true if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise false.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.Item(System.Int32)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal</param>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.Item(System.String)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="name">The name of the column.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.NextResult">
      <summary>Advances the reader to the next result when reading the results of a batch of statements.</summary>
      <returns>true if there are more result sets; otherwise false.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.Read">
      <summary>Advances the reader to the next record in a result set.</summary>
      <returns>true if there are more rows; otherwise false.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement. </summary>
      <returns>The number of rows changed, inserted, or deleted. Returns -1 for SELECT statements; 0 if no rows were affected or the statement failed.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.VisibleFieldCount">
      <summary>Gets the number of fields in the <see cref="T:System.Data.EntityClient.EntityDataReader" /> that are not hidden.</summary>
      <returns>The number of fields that are not hidden.</returns>
    </member>
    <member name="T:System.Data.EntityClient.EntityParameter">
      <summary>Represents a parameter to an <see cref="T:System.Data.EntityClient.EntityCommand" />. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityParameter" /> class.</summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityParameter" /> class that uses the parameter name and the data type.</summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityParameter" /> class that uses the parameter name, the data type, and the size.</summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityParameter" /> class that uses the parameter name, the type, the size, the direction, the precision, the scale, the source column, a <see cref="T:System.Data.DataRowVersion" /> to use, and the value of the parameter.</summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable">true if the value of the field can be null; otherwise false. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.EntityClient.EntityParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.EntityClient.EntityParameter.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.EntityClient.EntityParameter" />. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityParameter" /> class that uses the parameter name, the data type, the size, and the source column name.</summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values. The default is String.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Direction">
      <summary>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</summary>
      <returns>One of the <see cref="T:System.Data.ParameterDirection" /> enumeration values. The default is Input.</returns>
      <exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.IsNullable">
      <summary>Gets or sets a value that indicates whether the parameter accepts null values.</summary>
      <returns>true if null values are accepted; otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:System.Data.EntityClient.EntityParameter" />.</summary>
      <returns>The name of the <see cref="T:System.Data.EntityClient.EntityParameter" />. The default is an empty string.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Precision">
      <summary>Gets or sets the maximum number of digits used to represent the <see cref="P:System.Data.EntityClient.EntityParameter.Value" /> property.</summary>
      <returns>The maximum number of digits used to represent the <see cref="P:System.Data.EntityClient.EntityParameter.Value" /> property. The default value is 0. This indicates that the data provider sets the precision for <see cref="P:System.Data.EntityClient.EntityParameter.Value" />.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.ResetDbType">
      <summary>Resets the type associated with this <see cref="T:System.Data.EntityClient.EntityParameter" />.</summary>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Scale">
      <summary>Gets or sets the number of decimal places to which <see cref="P:System.Data.EntityClient.EntityParameter.Value" /> is resolved.</summary>
      <returns>The number of decimal places to which <see cref="P:System.Data.EntityClient.EntityParameter.Value" /> is resolved. The default is 0.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data in the column.</summary>
      <returns>The maximum size, in bytes, of the data in the column. The default value is inferred from the parameter value.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.SourceColumn">
      <summary>Gets or sets the name of the source column in a cached row that the <see cref="T:System.Data.EntityClient.EntityParameter" /> is mapped to.</summary>
      <returns>The name of the source column in the cached row. The default is an empty string.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.SourceColumnNullMapping">
      <summary>Gets or sets a value which indicates whether the source column is nullable. </summary>
      <returns>true if the source column is nullable; false if it is not. The default is false.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:System.Data.EntityClient.EntityParameter.Value" /></summary>
      <returns>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default is Current.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.ToString">
      <summary>Gets a string that contains the <see cref="P:System.Data.EntityClient.EntityParameter.ParameterName" />.</summary>
      <returns>A string that contains the <see cref="P:System.Data.EntityClient.EntityParameter.ParameterName" />.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Value">
      <summary>Gets or sets the value of the parameter.</summary>
      <returns>An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null.</returns>
    </member>
    <member name="T:System.Data.EntityClient.EntityParameterCollection">
      <summary>Represents a collection of parameters associated with a <see cref="T:System.Data.EntityClient.EntityCommand" />.</summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Add(System.Data.EntityClient.EntityParameter)">
      <summary>Adds the specified <see cref="T:System.Data.EntityClient.EntityParameter" /> object to the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
      <returns>A new <see cref="T:System.Data.EntityClient.EntityParameter" /> object.</returns>
      <param name="value">The <see cref="T:System.Data.EntityClient.EntityParameter" /> to add to the collection.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.EntityClient.EntityParameter" /> specified in the <paramref name="value" /> parameter is already added to this or another <see cref="T:System.Data.EntityClient.EntityParameterCollection" />. </exception>
      <exception cref="T:System.InvalidCastException">The parameter passed was not a <see cref="T:System.Data.EntityClient.EntityParameter" />. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Add(System.Object)">
      <summary>Adds the specified object to the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
      <returns>The index of the new <see cref="T:System.Data.EntityClient.EntityParameter" /> object.</returns>
      <param name="value">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Add(System.String,System.Data.DbType)">
      <summary>Adds a <see cref="T:System.Data.EntityClient.EntityParameter" /> to the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> given the parameter name and the data type.</summary>
      <returns>A new <see cref="T:System.Data.EntityClient.EntityParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values. </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Add(System.String,System.Data.DbType,System.Int32)">
      <summary>Adds a <see cref="T:System.Data.EntityClient.EntityParameter" /> to the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> with the parameter name, the data type, and the column length.</summary>
      <returns>A new <see cref="T:System.Data.EntityClient.EntityParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="size">The column length.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.AddRange(System.Array)">
      <summary>Adds an array of values to the end of the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
      <param name="values">The <see cref="T:System.Array" /> values to add.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.AddRange(System.Data.EntityClient.EntityParameter[])">
      <summary>Adds an array of <see cref="T:System.Data.EntityClient.EntityParameter" /> values to the end of the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
      <param name="values">The <see cref="T:System.Data.EntityClient.EntityParameter" /> values to add.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Adds a value to the end of the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
      <returns>A <see cref="T:System.Data.EntityClient.EntityParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter.</param>
      <param name="value">The value to be added.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Clear">
      <summary>Removes all the <see cref="T:System.Data.EntityClient.EntityParameter" /> objects from the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Contains(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is in this <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
      <returns>true if the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> contains the value; otherwise false.</returns>
      <param name="value">The <see cref="T:System.Object" /> value.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Contains(System.String)">
      <summary>Determines whether the specified <see cref="T:System.Data.EntityClient.EntityParameter" /> is in this <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</summary>
      <returns>true if the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> contains the value; otherwise false.</returns>
      <param name="parameterName">The <see cref="T:System.Data.EntityClient.EntityParameter" /> value.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</param>
      <param name="index">A 32-bit integer that represents the index in the <see cref="T:System.Array" /> at which copying starts.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.CopyTo(System.Data.EntityClient.EntityParameter[],System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> to the specified <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> starting at the specified destination index.</summary>
      <param name="array">The <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> that is the destination of the elements copied from the current <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</param>
      <param name="index">A 32-bit integer that represents the index in the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> at which copying starts.</param>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.Count">
      <summary>Gets an Integer that contains the number of elements in the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />. </summary>
      <returns>The number of elements in the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> as an Integer.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />. </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.IndexOf(System.Data.EntityClient.EntityParameter)">
      <summary>Gets the location of the specified <see cref="T:System.Data.EntityClient.EntityParameter" /> in the collection.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Data.EntityClient.EntityParameter" /> that is a <see cref="T:System.Data.EntityClient.EntityParameter" /> in the collection. Returns -1 when the object does not exist in the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</returns>
      <param name="value">The <see cref="T:System.Data.EntityClient.EntityParameter" /> to find. </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.IndexOf(System.Object)">
      <summary>Gets the location of the specified <see cref="T:System.Object" /> in the collection.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Object" /> that is a <see cref="T:System.Data.EntityClient.EntityParameter" /> in the collection. Returns -1 when the object does not exist in the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</returns>
      <param name="value">The <see cref="T:System.Object" /> to find. </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.IndexOf(System.String)">
      <summary>Gets the location of the specified <see cref="T:System.Data.EntityClient.EntityParameter" /> with the specified name.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Data.EntityClient.EntityParameter" /> with the specified case-sensitive name. Returns -1 when the object does not exist in the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</returns>
      <param name="parameterName">The case-sensitive name of the <see cref="T:System.Data.EntityClient.EntityParameter" /> to find.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Insert(System.Int32,System.Data.EntityClient.EntityParameter)">
      <summary>Inserts a <see cref="T:System.Data.EntityClient.EntityParameter" /> object into the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">A <see cref="T:System.Data.EntityClient.EntityParameter" /> object to be inserted in the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">An <see cref="T:System.Object" /> to be inserted in the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</param>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> has a fixed size. </summary>
      <returns>Returns true if the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> has a fixed size; otherwise false. </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> is read-only. </summary>
      <returns>Returns true if the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> is read only; otherwise false.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.IsSynchronized">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> is synchronized.</summary>
      <returns>Returns true if the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> is synchronized; otherwise false.</returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.EntityClient.EntityParameter" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Data.EntityClient.EntityParameter" /> at the specified index.</returns>
      <param name="index">The zero-based index of the parameter to retrieve. </param>
      <exception cref="T:System.IndexOutOfRangeException">The specified index does not exist. </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.EntityClient.EntityParameter" /> with the specified name.</summary>
      <returns>The <see cref="T:System.Data.EntityClient.EntityParameter" /> with the specified name.</returns>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <exception cref="T:System.IndexOutOfRangeException">The specified name does not exist. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Remove(System.Data.EntityClient.EntityParameter)">
      <summary>Removes the specified <see cref="T:System.Data.EntityClient.EntityParameter" /> from the collection.</summary>
      <param name="value">A <see cref="T:System.Data.EntityClient.EntityParameter" /> object to remove from the collection. </param>
      <exception cref="T:System.InvalidCastException">The parameter is not a <see cref="T:System.Data.EntityClient.EntityParameter" />. </exception>
      <exception cref="T:System.SystemException">The parameter does not exist in the collection. </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Remove(System.Object)">
      <summary>Removes the specified parameter from the collection.</summary>
      <param name="value">A <see cref="T:System.Object" /> object to remove from the collection. </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.EntityClient.EntityParameter" /> from the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.EntityClient.EntityParameter" /> object to remove.</param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.EntityClient.EntityParameter" /> from the <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> at the specified parameter name.</summary>
      <param name="parameterName">The name of the <see cref="T:System.Data.EntityClient.EntityParameter" /> to remove. </param>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />. </summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.</returns>
    </member>
    <member name="T:System.Data.EntityClient.EntityProviderFactory">
      <summary>Represents a set of methods for creating instances of a provider's implementation of the data source classes. </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateCommand">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.EntityClient.EntityCommand" /> class. </summary>
      <returns>A new instance of <see cref="T:System.Data.EntityClient.EntityCommand" />. </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateCommandBuilder">
      <summary>Throws a <see cref="T:System.NotSupportedException" />. This method is currently not supported.</summary>
      <returns>This method is currently not supported.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateConnection">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.EntityClient.EntityConnection" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.EntityClient.EntityConnection" />. </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateConnectionStringBuilder">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />. </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateDataAdapter">
      <summary>
        <see cref="M:System.Data.EntityClient.EntityProviderFactory.CreateDataAdapter" /> is not supported in this version of the .NET Framework.</summary>
      <returns>A <see cref="T:System.NotSupportedException" /> object.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateParameter">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.EntityClient.EntityParameter" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.EntityClient.EntityParameter" />. </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Returns a new instance of the provider's class that implements the provider's version of the <see cref="T:System.Security.CodeAccessPermission" /> class. </summary>
      <returns>A <see cref="T:System.Security.CodeAccessPermission" /> object for the specified <see cref="T:System.Security.Permissions.PermissionState" />. </returns>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" />  values.</param>
    </member>
    <member name="F:System.Data.EntityClient.EntityProviderFactory.Instance">
      <summary>This <see cref="T:System.Data.EntityClient.EntityProviderFactory" /> instance. </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.System#IServiceProvider#GetService(System.Type)">
      <summary>Returns the requested <see cref="T:System.IServiceProvider" /> class.</summary>
      <returns>A new instance of <see cref="T:System.IServiceProvider" />. The supported types are <see cref="T:System.Data.Common.DbProviderServices" />, <see cref="T:System.Data.Common.DbCommandDefinitionBuilder" />, and <see cref="T:System.Data.IEntityAdapter" />. Returns null (or Nothing in Visual Basic) for every other type. </returns>
      <param name="serviceType"> The <see cref="T:System.Type" /> to return.</param>
    </member>
    <member name="T:System.Data.EntityClient.EntityTransaction">
      <summary>Specifies the transaction for an <see cref="P:System.Data.EntityClient.EntityCommand" />.</summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityTransaction.Commit">
      <summary>Commits the underlying transaction.</summary>
    </member>
    <member name="P:System.Data.EntityClient.EntityTransaction.Connection">
      <summary>Gets <see cref="T:System.Data.EntityClient.EntityConnection" /> for this <see cref="T:System.Data.EntityClient.EntityTransaction" />.</summary>
      <returns>An <see cref="T:System.Data.EntityClient.EntityConnection" /> to the underlying data source. </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityTransaction.IsolationLevel">
      <summary>Gets the isolation level of this <see cref="T:System.Data.EntityClient.EntityTransaction" />.</summary>
      <returns>An <see cref="T:System.Data.IsolationLevel" /> enumeration value that represents the isolation level of the underlying transaction.</returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityTransaction.Rollback">
      <summary>Rolls back the underlying transaction.</summary>
    </member>
    <member name="T:System.Data.Mapping.EntityViewContainer">
      <summary>Base class for the type created at design time to store generated views. </summary>
    </member>
    <member name="M:System.Data.Mapping.EntityViewContainer.#ctor">
      <summary>Initializes a new instance of the EntityViewContainer class.</summary>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.EdmEntityContainerName">
      <summary>Gets or sets the name of <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</summary>
      <returns>The container name.</returns>
    </member>
    <member name="M:System.Data.Mapping.EntityViewContainer.GetViewAt(System.Int32)">
      <summary>Returns the key/value pair at the specified index, which contains the view and its key.</summary>
      <returns>The key/value pair at <paramref name="index" />, which contains the view and its key.</returns>
      <param name="index">The index of the view.</param>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.HashOverAllExtentViews">
      <summary>Hash value of views.</summary>
      <returns>Hash value.</returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.HashOverMappingClosure">
      <summary>Hash value.</summary>
      <returns>Hash value.</returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.StoreEntityContainerName">
      <summary>Gets or sets <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> in storage schema.</summary>
      <returns>Container name.</returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.ViewCount">
      <summary>Gets or sets view count.</summary>
      <returns>View count.</returns>
    </member>
    <member name="T:System.Data.Mapping.EntityViewGenerationAttribute">
      <summary>Attribute to mark the assemblies containing the generated views type.</summary>
    </member>
    <member name="M:System.Data.Mapping.EntityViewGenerationAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Mapping.EntityViewGenerationAttribute" /> class. </summary>
      <param name="viewGenerationType">The view type.</param>
    </member>
    <member name="P:System.Data.Mapping.EntityViewGenerationAttribute.ViewGenerationType">
      <summary>Gets the T:System.Type of the view.</summary>
      <returns>The T:System.Type of the view.</returns>
    </member>
    <member name="T:System.Data.Mapping.MappingItemCollection">
      <summary>Collection of <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> objects designed for storing mapping information. </summary>
    </member>
    <member name="T:System.Data.Mapping.StorageMappingItemCollection">
      <summary>The <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> contains a collection of storage mappings for <see cref="T:System.Data.Metadata.Edm.EntitySet" /> and <see cref="T:System.Data.Metadata.Edm.AssociationSet" /> objects. </summary>
    </member>
    <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> class based on the supplied <see cref="T:System.Data.Metadata.Edm.ItemCollection" />, the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />, and a collection of <see cref="T:System.String" /> indicating the metadata file paths.</summary>
      <param name="edmCollection">The <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> that this mapping is to use.</param>
      <param name="storeCollection">The <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> collection that this mapping is to use.</param>
      <param name="xmlReaders">The XML Readers that this mapping is to use.</param>
    </member>
    <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> class based on the supplied <see cref="T:System.Data.Metadata.Edm.ItemCollection" />, the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />, and a collection of <see cref="T:System.String" /> indicating the metadata file paths.</summary>
      <param name="edmCollection">The <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> that this mapping is to use.</param>
      <param name="storeCollection">The <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> collection that this mapping is to use.</param>
      <param name="filePaths">A <see cref="T:System.String" /> indicating the file paths that this mapping is to use.</param>
    </member>
    <member name="T:System.Data.Metadata.Edm.AssociationEndMember">
      <summary>Represents the End of an association in the conceptual model. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationEndMember.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" />. </summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.AssociationSet">
      <summary>Represents an association set in the conceptual model. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSet.AssociationSetEnds">
      <summary>Gets the ends of this <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.</summary>
      <returns>A collection of type <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains the ends of this <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSet.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents built-in type kind for this <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSet.ElementType">
      <summary>Gets the association related to this <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.AssociationType" /> object that represents the association related to this <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.AssociationSetEnd">
      <summary>Represents the End of the association set in a conceptual model.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.CorrespondingAssociationEndMember">
      <summary>Gets the End member that this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" /> object corresponds to.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" /> object that represents the End member that this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" /> object corresponds to.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.EntitySet">
      <summary>Gets the entity set referenced by this End role. </summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object that represents the entity set referred by this End role.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.Name">
      <summary>Gets the name of the End for this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>The name of the End for this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.ParentAssociationSet">
      <summary>Gets the parent association set of this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.AssociationSet" /> object that represents the parent association set of this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.Role">
      <summary>Gets the name of the End role for this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>The name of the End role for this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.AssociationSetEnd.ToString">
      <summary>Returns the name of the End role for this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>The name of the End role for this <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.AssociationType">
      <summary>Represents an association in a conceptual model.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationType.AssociationEndMembers">
      <summary>Gets the list of ends for this <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</summary>
      <returns>A collection of type <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains the list of ends for this <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationType.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationType.IsForeignKey">
      <summary>Gets the Boolean property value that specifies whether the column is a foreign key.</summary>
      <returns>A Boolean value that specifies whether the column is a foreign key. If true, the column is a foreign key. If false (default), the column is not a foreign key.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationType.ReferentialConstraints">
      <summary>Gets the list of constraints for this <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</summary>
      <returns>A collection of type <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains the list of constraints for this <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.BuiltInTypeKind">
      <summary>Represents an enumeration that specifies the list of all built-in types in a conceptual model. </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.AssociationEndMember">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.AssociationSetEnd">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.AssociationSet">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.AssociationSet" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.AssociationType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.AssociationType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntitySetBase">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EntitySetBase" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntityTypeBase">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.CollectionType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.CollectionType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.CollectionKind">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.CollectionKind" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.ComplexType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.ComplexType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.Documentation">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.Documentation" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.OperationAction">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.OperationAction" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EdmType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EdmType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntityContainer">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntitySet">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntityType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EntityType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EnumType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EnumType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EnumMember">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.EdmEnumMember" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.Facet">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.Facet" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EdmFunction">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.FunctionParameter">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.FunctionParameter" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.GlobalItem">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.MetadataProperty">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.MetadataProperty" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.NavigationProperty">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.NavigationProperty" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.MetadataItem">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.MetadataItem" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EdmMember">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EdmMember" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.ParameterMode">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.ParameterMode" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.PrimitiveType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.PrimitiveTypeKind">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.PrimitiveTypeKind" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EdmProperty">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.EdmProperty" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.ProviderManifest">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.ProviderManifest" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.ReferentialConstraint">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RefType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.RefType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RelationshipEndMember">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.RelationshipEndMember" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RelationshipMultiplicity">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RelationshipSet">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RelationshipType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.RelationshipType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RowType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.RowType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.SimpleType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.SimpleType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.StructuralType">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.StructuralType" /> type.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.TypeUsage">
      <summary>An enumeration member that indicates the <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> type.</summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.CollectionKind">
      <summary>Represents an enumeration that specifies the kind of the collection that is applied to the properties in the conceptual schema definition language (CSDL) files. You can apply this to the properties of any type. </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.CollectionKind.None">
      <summary>The property is not a collection.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.CollectionKind.Bag">
      <summary>The collection has bag semantics. The items are unordered and duplicates are acceptable.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.CollectionKind.List">
      <summary>The collection has list semantics. The order of the items is deterministic and duplicates are acceptable.</summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.CollectionType">
      <summary>Represents a collection of instances of a specific type. You cannot explicitly define a <see cref="T:System.Data.Metadata.Edm.CollectionType" /> in a conceptual model.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.CollectionType.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.CollectionType" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.CollectionType" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.CollectionType.TypeUsage">
      <summary>Gets the instance of the <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> class that contains the type of the element that this current <see cref="T:System.Data.Metadata.Edm.CollectionType" /> object includes and facets for that type. </summary>
      <returns>The instance of the <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> class that contains the type of the element that this current <see cref="T:System.Data.Metadata.Edm.CollectionType" /> object includes and facets for that type.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.ComplexType">
      <summary>Represents a complex type in a conceptual model.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.ComplexType.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.ComplexType" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.ComplexType" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ComplexType.Properties">
      <summary>Gets the list of properties for this <see cref="T:System.Data.Metadata.Edm.ComplexType" />.</summary>
      <returns>A collection of type <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains the list of properties for this <see cref="T:System.Data.Metadata.Edm.ComplexType" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.ConcurrencyMode">
      <summary>Specifies the concurrency options for the properties in a conceptual model. </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ConcurrencyMode.None">
      <summary>The property is never validated at write time. This is the default concurrency mode.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ConcurrencyMode.Fixed">
      <summary>The property is always validated at write time.</summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.DataSpace">
      <summary>Specifies the default names for the models in the Entity Framework.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.OSpace">
      <summary>Represents the default name for the object model.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.CSpace">
      <summary>Represents the default name for the conceptual model.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.SSpace">
      <summary>Represents the default name for the storage model.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.OCSpace">
      <summary>Represents the default name for the mapping between the object model and the conceptual model.</summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.CSSpace">
      <summary>Represents the default name for the mapping between the conceptual model and the storage model.</summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.Documentation">
      <summary>Represents the documentation associated with a conceptual model construct. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.Documentation.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.Documentation" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.Documentation" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Documentation.IsEmpty">
      <summary>Gets a value indicating whether this <see cref="T:System.Data.Metadata.Edm.Documentation" /> object contains only a null or an empty <see cref="P:System.Data.Metadata.Edm.Documentation.Summary" /> and a <see cref="P:System.Data.Metadata.Edm.Documentation.Longdescription" />.</summary>
      <returns>true if this <see cref="T:System.Data.Metadata.Edm.Documentation" /> object contains only a null or an empty <see cref="P:System.Data.Metadata.Edm.Documentation.Summary" /> and a <see cref="P:System.Data.Metadata.Edm.Documentation.LongDescription" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Documentation.LongDescription">
      <summary>Gets the long description for this <see cref="T:System.Data.Metadata.Edm.Documentation" />.</summary>
      <returns>The long description for this <see cref="T:System.Data.Metadata.Edm.Documentation" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Documentation.Summary">
      <summary>Gets the summary for this <see cref="T:System.Data.Metadata.Edm.Documentation" />.</summary>
      <returns>The summary for this <see cref="T:System.Data.Metadata.Edm.Documentation" />.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.Documentation.ToString">
      <summary>Returns the summary for this <see cref="T:System.Data.Metadata.Edm.Documentation" />.</summary>
      <returns>The summary for this <see cref="T:System.Data.Metadata.Edm.Documentation" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmError">
      <summary>Encapsulates the error information for a generic conceptual model error. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmError.Message">
      <summary>Gets the error message.</summary>
      <returns>The error message.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmFunction">
      <summary>Represents information about the functions that may be invoked from the queries written by the Entity SQL query language. These may be the built-in functions exposed by the storage provider or user-defined functions in a particular database.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.CommandTextAttribute">
      <summary>Represents a query in the language that is used by the database management system or storage model.</summary>
      <returns>A string value in the syntax used by the database management system or storage model that contains the query or update statement of the <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.FullName">
      <summary>Returns the full name (namespace plus name) of this type. </summary>
      <returns>The full name of the type.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.Parameters">
      <summary>Gets the parameters of this <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.</summary>
      <returns>A collection of type <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains the parameters of this <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.ReturnParameter">
      <summary>Gets the return parameter of this <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.FunctionParameter" /> object that represents the return parameter of this <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmItemCollection">
      <summary>Loads metadata about the conceptual model. The <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> loads metadata from conceptual schema definition language (CSDL) files. This class is derived from the <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> class. </summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> class by using the collection of the <see cref="T:System.XML.XMLReader" /> objects where the conceptual schema definition language (CSDL) files  exist.</summary>
      <param name="xmlReaders">The collection of the <see cref="T:System.XML.XMLReader" /> objects where the conceptual schema definition language (CSDL) files exist.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> class by using the paths where the conceptual schema definition language (CSDL) files exist.</summary>
      <param name="filePaths">The paths where the conceptual schema definition language (CSDL) files exist.</param>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmItemCollection.EdmVersion">
      <summary>Gets the version of the conceptual schema definition language (CSDL) that this item collection represents.</summary>
      <returns>The version of the CSDL that this item collection represents. CSDL with XML namespace http://schemas.microsoft.com/ado/2006/04/edm corresponds to version 1.0. CSDL with XML namespace http://schemas.microsoft.com/ado/2008/09/edm corresponds to version 2.0.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmItemCollection.GetPrimitiveTypes">
      <summary>Returns a collection of the <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> objects.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection" /> object that represents a collection of the <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> objects.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmMember">
      <summary>Represents a member that can be declared in any <see cref="T:System.Data.Metadata.Edm.StructuralType" />. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmMember.DeclaringType">
      <summary>Gets the type on which this member is declared.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the type on which this member is declared.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmMember.Name">
      <summary>Gets the name of this member.</summary>
      <returns>The name of this member.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmMember.ToString">
      <summary>Returns the name of this member.</summary>
      <returns>The name of this member.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmMember.TypeUsage">
      <summary>Gets the instance of the <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> class that contains both the type of the member and facets for the type.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> object that contains both the type of the member and facets for the type.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmProperty">
      <summary>Represents a property for the <see cref="T:System.Data.Metadata.Edm.EntityType" /> in a conceptual model. An <see cref="T:System.Data.Metadata.Edm.EdmProperty" /> class derives from the <see cref="T:System.Data.Metadata.Edm.EdmMember" /> class and provides the <see cref="P:System.Data.Metadata.Edm.EdmProperty.Default" /> and the <see cref="P:System.Data.Metadata.Edm.EdmProperty.Nullable" /> facets for the type of this <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmProperty.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmProperty.DefaultValue">
      <summary>Gets the default value for this <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.</summary>
      <returns>The default value for this <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmProperty.Nullable">
      <summary>Gets a value indicating whether this <see cref="T:System.Data.Metadata.Edm.EdmProperty" /> can have a null value.</summary>
      <returns>true if this <see cref="T:System.Data.Metadata.Edm.EdmProperty" /> can have a null value; otherwise, false. </returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmSchemaError">
      <summary>Encapsulates the detailed information about a conceptual model schema error.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.Column">
      <summary>Gets the column where the error occurred.</summary>
      <returns>The column where the error occurred.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.ErrorCode">
      <summary>Gets the error code.</summary>
      <returns>The error code.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.Line">
      <summary>Gets the line number where the error occurred.</summary>
      <returns>The line number where the error occurred.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.SchemaLocation">
      <summary>Gets the location of the schema that contains the error. This string also includes the name of the schema at the end.</summary>
      <returns>The location of the schema that contains the error.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.SchemaName">
      <summary>Gets the name of the schema that contains the error.</summary>
      <returns>The name of the schema that contains the error.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.Severity">
      <summary>Gets the severity level of the error.</summary>
      <returns>One of the <see cref="T:System.Data.Metadata.Edm.EdmSchemaErrorSeverity" /> values. The default is <see cref="F:System.Data.Metadata.Edm.EdmSchemaErrorSeverity.Warning" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.StackTrace">
      <summary>Gets a string representation of the stack trace at the time the error occurred.</summary>
      <returns>A string representation of the stack trace at the time the error occurred.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmSchemaError.ToString">
      <summary>Returns the error message.</summary>
      <returns>The error message.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmSchemaErrorSeverity">
      <summary>Specifies the severity level of the error. </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.EdmSchemaErrorSeverity.Warning">
      <summary>A warning indicates that there are some problems in the schema but it is still usable. </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.EdmSchemaErrorSeverity.Error">
      <summary>An error indicates that a severe problem occurred and the schema cannot be used.</summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmType">
      <summary>Represents a base class for all the types in a conceptual model. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.Abstract">
      <summary>Gets a value indicating whether this type is abstract or not. </summary>
      <returns>true if this type is abstract; otherwise, false. </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.BaseType">
      <summary>Gets the base type of this type.</summary>
      <returns>The base type of this type.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.FullName">
      <summary>Gets the full name of this type.</summary>
      <returns>The full name of this type. </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmType.GetCollectionType">
      <summary>Returns an instance of the <see cref="T:System.Data.Metadata.Edm.CollectionType" /> whose element type is this type. </summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.CollectionType" /> object whose element type is this type.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.Name">
      <summary>Gets the name of this type.</summary>
      <returns>The name of this type.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.NamespaceName">
      <summary>Gets the namespace of this type.</summary>
      <returns>The namespace of this type.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmType.ToString">
      <summary>Returns the full name of this type.</summary>
      <returns>The full name of this type. </returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntityContainer">
      <summary>Represents an entity container in a conceptual model. An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> is a logical grouping of entity sets and association sets.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityContainer.BaseEntitySets">
      <summary>Gets a list of entity sets and association sets that this <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> includes.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> object that contains a list of entity sets and association sets that this <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> includes.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityContainer.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityContainer.FunctionImports">
      <summary>Specifies a collection of <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> elements. Each function contains the details of a stored procedure that exists in the database or equivalent CommandText that is mapped to an entity and its properties.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> elements.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.GetEntitySetByName(System.String,System.Boolean)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object by using the specified name for the entity set.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object that represents the entity set that has the specified name.</returns>
      <param name="name">The name of the entity set that is searched for.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.GetRelationshipSetByName(System.String,System.Boolean)">
      <summary>Returns a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object by using the specified name for the relationship set.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object that represents the relationship set that has the specified name.</returns>
      <param name="name">The name of the relationship set that is searched for.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityContainer.Name">
      <summary>Gets the name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</summary>
      <returns>The name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.ToString">
      <summary>Returns the name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</summary>
      <returns>The name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.TryGetEntitySetByName(System.String,System.Boolean,System.Data.Metadata.Edm.EntitySet@)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object by using the specified name for the entity set.</summary>
      <returns>true if there is an entity set that matches the search criteria; otherwise, false.</returns>
      <param name="name">The name of the entity set that is searched for.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
      <param name="entitySet">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object. If there is no entity set, this output parameter contains null.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.TryGetRelationshipSetByName(System.String,System.Boolean,System.Data.Metadata.Edm.RelationshipSet@)">
      <summary>Returns a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object by using the specified name for the relationship set.</summary>
      <returns>true if there is a relationship set that matches the search criteria; otherwise, false. </returns>
      <param name="name">The name of the relationship set that is searched for.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
      <param name="relationshipSet">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object. </param>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntitySet">
      <summary>Represents an entity set in a conceptual model. An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for an <see cref="T:System.Data.Metadata.Edm.EntityType" /> contains instances of the <see cref="T:System.Data.Metadata.Edm.EntityType" /> or any of its subtypes. More than one <see cref="T:System.Data.Metadata.Edm.EntitySet" /> can be defined by using the same <see cref="T:System.Data.Metadata.Edm.EntityType" />. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySet.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySet.ElementType">
      <summary>Gets the entity type of this <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EntityType" /> object that represents the entity type of this <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntitySetBase">
      <summary>A base class for an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> and a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySetBase.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntitySetBase" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntitySetBase" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySetBase.ElementType">
      <summary>Gets the entity type of this <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" />.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" /> object that represents the entity type of this <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySetBase.EntityContainer">
      <summary>Gets the entity container of the current entity or relationship set.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object that represents the entity container of the current entity or relationship set.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySetBase.Name">
      <summary>Gets the name of the current entity or relationship set.</summary>
      <returns>The name of the current entity or relationship set.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntitySetBase.ToString">
      <summary>Returns the name of the current entity or relationship set.</summary>
      <returns>The name of the current entity or relationship set.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntityType">
      <summary>Represents a particular type of data, such as a customer entity or an order entity in a conceptual model. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityType.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntityType" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityType.GetReferenceType">
      <summary>Returns a <see cref="T:System.Data.Metadata.Edm.RefType" /> object that references this <see cref="T:System.Data.Metadata.Edm.EntityType" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.RefType" /> object that references this <see cref="T:System.Data.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityType.NavigationProperties">
      <summary>Gets the navigation properties of this <see cref="T:System.Data.Metadata.Edm.EntityType" />.</summary>
      <returns>A collection of type <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains the list of navigation properties on this <see cref="T:System.Data.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityType.Properties">
      <summary>Gets the list of properties for this <see cref="T:System.Data.Metadata.Edm.EntityType" />.</summary>
      <returns>A collection of type <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains the list of properties for this <see cref="T:System.Data.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntityTypeBase">
      <summary>A base type for <see cref="T:System.Data.Metadata.Edm.EntityType" /> and <see cref="T:System.Data.Metadata.Edm.RelationshipType" />.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityTypeBase.KeyMembers">
      <summary>Gets the list of all the key members for the current entity or relationship type.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> object that represents the list of key members for the current entity or relationship type. </returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.Facet">
      <summary>Provides additional information about members. In the ADO.NET metadata type hierarchy, facets provide additional information about members through the declared type for the member. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.Facet" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.Description">
      <summary>Gets the description of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.FacetDescription" /> object that represents the description of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.FacetType">
      <summary>Gets the type of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</summary>
      <returns>The <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.IsUnbounded">
      <summary>Gets a value indicating whether the value of the facet is unbounded.</summary>
      <returns>true if the value of the facet is unbounded; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.Name">
      <summary>Gets the name of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</summary>
      <returns>The name of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.Facet.ToString">
      <summary>Returns the name of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</summary>
      <returns>The name of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.Value">
      <summary>Gets the value of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</summary>
      <returns>The value of this <see cref="T:System.Data.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.FacetDescription">
      <summary>Specifies a description of the facet. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.DefaultValue">
      <summary>Gets the default value of a facet with this facet description.</summary>
      <returns>The default value of a facet with this facet description.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.FacetName">
      <summary>Gets the name of this facet.</summary>
      <returns>The name of this facet.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.FacetType">
      <summary>Gets the type of this facet.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type of this facet.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.IsConstant">
      <summary>Gets a value indicating whether the value of this facet is a constant.</summary>
      <returns>true if this facet is a constant; otherwise, false. </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.IsRequired">
      <summary>Gets a value indicating whether this facet is a required facet.</summary>
      <returns>true if this facet is a required facet; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.MaxValue">
      <summary>Gets the maximum value for this facet.</summary>
      <returns>The maximum value for this facet.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.MinValue">
      <summary>Gets the minimum value for this facet.</summary>
      <returns>The minimum value for this facet.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.FacetDescription.ToString">
      <summary>Returns the name of this facet. </summary>
      <returns>The name of this facet.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.FunctionParameter">
      <summary>Describes the parameters of an <see cref="T:System.Data.Metadata.Edm.EdmFunction" />. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.DeclaringFunction">
      <summary>Gets or sets the <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> on which this parameter is declared. </summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> object that represents the function on which this parameter is declared.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.Mode">
      <summary>Gets the mode of this <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>One of the <see cref="T:System.Data.Metadata.Edm.ParameterMode" /> values. </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.Name">
      <summary>Gets the name of this <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>The name of this <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.FunctionParameter.ToString">
      <summary>Returns the name of this <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>The name of this <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />. </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.TypeUsage">
      <summary>Gets the instance of the <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> class that contains both the type of the parameter and facets for the type.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> object that contains both the type of the parameter and facets for the type.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.GlobalItem">
      <summary>Represents the base item class for all the  conceptual model types and entity containers. </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ItemCollection">
      <summary>A base class for <see cref="T:System.Data.Metadata.Edm.ObjectItemCollection" />, <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" />, and <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> classes. An <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> class is an abstract class and provides the core API for loading and holding the in-memory metadata. This class is derived from the <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> class.</summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.ItemCollection.DataSpace">
      <summary>Gets the data model associated with this item collection. </summary>
      <returns>The data model associated with this item collection. </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name.</summary>
      <returns>If there is no entity container, this method returns null; otherwise, it returns the first one.</returns>
      <param name="name">The name of the entity container.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name.</summary>
      <returns>If there is no entity container, this method returns null; otherwise, it returns the first entity container.</returns>
      <param name="name">The name of the entity container.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)">
      <summary>Returns all the overloads of the functions by using the specified name from this item collection.</summary>
      <returns>A collection of type ReadOnlyCollection that contains all the functions that have the specified name.</returns>
      <param name="functionCollection">A dictionary of functions.</param>
      <param name="functionName">The full name of the function.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)">
      <summary>Returns all the overloads of the functions by using the specified name from this item collection.</summary>
      <returns>A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that have the specified name.</returns>
      <param name="functionName">The full name of the function.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)">
      <summary>Returns all the overloads of the functions by using the specified name from this item collection.</summary>
      <returns>A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that have the specified name.</returns>
      <param name="functionName">The full name of the function.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)">
      <summary>Returns a strongly typed <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object by using the specified identity.</summary>
      <returns>The item that is specified by the identity.</returns>
      <param name="identity">The identity of the item.</param>
      <typeparam name="T">The type returned by the method.</typeparam>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)">
      <summary>Returns a strongly typed <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object by using the specified identity with either case-sensitive or case-insensitive search.</summary>
      <returns>The item that is specified by the identity.</returns>
      <param name="identity">The identity of the item.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
      <typeparam name="T">The type returned by the method.</typeparam>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1">
      <summary>Returns all the items of the specified type from this item collection.</summary>
      <returns>A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items of the specified type.</returns>
      <typeparam name="T">The type returned by the method.</typeparam>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name and the namespace name in this item collection.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the specified type name and the namespace name in this item collection. If there is no matched type, this method returns null.</returns>
      <param name="name">The name of the type.</param>
      <param name="namespaceName">The namespace of the type.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name and the namespace name from this item collection.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the specified type name and the namespace name in this item collection. If there is no matched type, this method returns null.</returns>
      <param name="name">The name of the type.</param>
      <param name="namespaceName">The namespace of the type.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.</summary>
      <returns>true if there is an entity container that matches the search criteria; otherwise, false.</returns>
      <param name="name">The name of the entity container.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
      <param name="entityContainer">When this method returns, it contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name. If there is no entity container, the output parameter contains null; otherwise, it contains the first entity container.</summary>
      <returns>true if there is an entity container that matches the search criteria; otherwise, false.</returns>
      <param name="name">The name of the entity container.</param>
      <param name="entityContainer">When this method returns, it contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)">
      <summary>Returns a strongly typed <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object by using the specified identity from this item collection.</summary>
      <returns>true if there is an item that matches the search criteria; otherwise, false.</returns>
      <param name="identity">The identity of the item.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
      <param name="item">When this method returns, the output parameter contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object. If there is no global item with the specified identity in the item collection, this output parameter contains null.</param>
      <typeparam name="T">The type returned by the method.</typeparam>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)">
      <summary>Returns a strongly typed <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object by using the specified identity from this item collection.</summary>
      <returns>true if there is an item that matches the search criteria; otherwise, false.</returns>
      <param name="identity">The identity of the item.</param>
      <param name="item">When this method returns, the output parameter contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object. If there is no global item with the specified identity in the item collection, this output parameter contains null.</param>
      <typeparam name="T">The type returned by the method.</typeparam>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name and the namespace name from this item collection.</summary>
      <returns>true if there is a type that matches the search criteria; otherwise, false. </returns>
      <param name="name">The name of the type.</param>
      <param name="namespaceName">The namespace of the type.</param>
      <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
      <param name="type">When this method returns, this output parameter contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object. If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)">
      <summary>Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name and the namespace name from this item collection.</summary>
      <returns>true if there is a type that matches the search criteria; otherwise, false.</returns>
      <param name="name">The name of the type.</param>
      <param name="namespaceName">The namespace of the type.</param>
      <param name="type">When this method returns, this output parameter contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object. If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.</param>
    </member>
    <member name="T:System.Data.Metadata.Edm.MetadataItem">
      <summary>Represents the base item class for all the metadata in the ADO.NET metadata type hierarchy. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataItem.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this type.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this type.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataItem.Documentation">
      <summary>Gets or sets the documentation associated with this type.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.Documentation" /> object that represents the documentation on this type.</returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataItem.GetBuiltInType(System.Data.Metadata.Edm.BuiltInTypeKind)">
      <summary>Returns a conceptual model built-in type that matches one of the <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> values.</summary>
      <returns>An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the built-in type in the EDM.</returns>
      <param name="builtInTypeKind">One of the <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> values.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataItem.GetGeneralFacetDescriptions">
      <summary>Returns the list of the general facet descriptions for a specified type.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that represents the list of the general facet descriptions for a specified type.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataItem.MetadataProperties">
      <summary>Gets the list of properties of the current type.</summary>
      <returns>A collection of type <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains the list of properties of the current type.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.MetadataProperty">
      <summary>Represents a metadata attribute for an item in the ADO.NET metadata hierarchy. </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.BuiltInTypeKind">
      <summary>Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.</summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.Name">
      <summary>Gets the name of this <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.</summary>
      <returns>The name of this <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.PropertyKind">
      <summary>Gets the value of this <see cref="T:System.Data.Metadata.Edm.PropertyKind" />.</summary>
      <returns>The value of this <see cref="T:System.Data.Metadata.Edm.PropertyKind" />.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.TypeUsage">
      <summary>Gets the instance of the <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> class that contains both the type of this <see cref="T:System.Data.Metadata.Edm.MetadataProperty" /> and facets for the type. </summary>
      <returns>A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> object that contains both the type of this <see cref="T:System.Data.Metadata.Edm.MetadataProperty" /> and facets for the type.</returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.Value">
      <summary>Gets the value of this <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.</summary>
      <returns>The value of this <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.</returns>
    </member>
    <member name="T:System.Data.Metadata.Edm.MetadataWorkspace">
      <summary>Represents the ADO.NET metadata runtime service component that provides support for retrieving metadata from various sources.</summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class. </summary>
      <param name="paths">Paths to workspace metadata.</param>
      <param name="assembliesToConsider">Names of assemblies used to construct workspace.</param>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache">
      <summary>Clears all the metadata cache entries.</summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)">
      <summary>Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />. </summary>
      <returns>A <see cref="T:Sy