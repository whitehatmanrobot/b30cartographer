System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectorySearcher" /> properties that were specified before the search was executed.</summary>
      <returns>An array of type <see cref="T:System.String" /> that contains the properties that were specified in the <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property collection before the search was executed.</returns>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />. </exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="T:System.DirectoryServices.SearchScope">
      <summary>Specifies the possible scopes for a directory search that is performed using the <see cref="T:System.DirectoryServices.DirectorySearcher" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.Base">
      <summary>Limits the search to the base object. The result contains a maximum of one object.  When the <see cref="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" /> property is specified for a search, the scope of the search must be set to <see cref="F:System.DirectoryServices.SearchScope.Base" />.</summary>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.OneLevel">
      <summary>Searches the immediate child objects of the base object, excluding the base object.</summary>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.Subtree">
      <summary>Searches the whole subtree, including the base object and all its child objects. If the scope of a directory search is not specified, a <see cref="F:System.DirectoryServices.SearchScope.Subtree" /> type of search is performed. </summary>
    </member>
    <member name="T:System.DirectoryServices.SecurityMasks">
      <summary>Specifies the available options for examining security information of a directory object. This enumeration is used with the <see cref="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" /> and <see cref="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks" /> properties.          </summary>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.None">
      <summary>Does not read or write security data.</summary>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.Owner">
      <summary>Reads or writes the owner data.</summary>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.Group">
      <summary>Reads or writes the group data.</summary>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.Dacl">
      <summary>Reads or writes the discretionary access-control list (DACL) data. </summary>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.Sacl">
      <summary>Reads or writes the system access-control list (SACL) data.</summary>
    </member>
    <member name="T:System.DirectoryServices.SortDirection">
      <summary>The <see cref="T:System.DirectoryServices.SortDirection" /> enumeration specifies how to sort the results of an Active Directory Domain Services query.</summary>
    </member>
    <member name="F:System.DirectoryServices.SortDirection.Ascending">
      <summary>Sort from smallest to largest. For example, A to Z.</summary>
    </member>
    <member name="F:System.DirectoryServices.SortDirection.Descending">
      <summary>Sort from largest to smallest. For example, Z to A.</summary>
    </member>
    <member name="T:System.DirectoryServices.SortOption">
      <summary>Specifies how to sort the results of a search.          </summary>
    </member>
    <member name="M:System.DirectoryServices.SortOption.#ctor">
      <summary>Initializes a new instance of the <see cref="M:System.DirectoryServices.SortOption.#ctor" /> class.          </summary>
    </member>
    <member name="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.SortOption" /> class, which contains the specified property name and specified sort direction.          </summary>
      <param name="propertyName">The name of the property to sort by. The <see cref="P:System.DirectoryServices.SortOption.PropertyName" /> property is set to this value.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.SortDirection" /> values. The <see cref="P:System.DirectoryServices.SortOption.Direction" /> property is set to this value.</param>
    </member>
    <member name="P:System.DirectoryServices.SortOption.Direction">
      <summary>Gets or sets the direction in which to sort the results of a query.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.SortDirection" /> values. The default is Ascending.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="T:System.DirectoryServices.SortDirection" /> values.</exception>
    </member>
    <member name="P:System.DirectoryServices.SortOption.PropertyName">
      <summary>Gets or sets the name of the property to sort on.</summary>
      <returns>The name of the property to sort on. The default is a null reference (Nothing in Visual Basic).</returns>
      <exception cref="T:System.ArgumentNullException">The property value is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> class represents an inter-site transport object.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks">
      <summary>Gets or sets a value that indicates whether all site links are bridged.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether to bridge all site links. true if all site links are bridged; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
      <summary>Releases all resources that are used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the object and optionally releases the managed resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object for a given directory context and transport type.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object for the item found. An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" /> exception is thrown if an object was not found.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for the search.</param>
      <param name="transport">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> object that specifies a transport type to find in the search.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The object was not found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">The target in the <paramref name="context" /> parameter is not a forest, configuration set, domain controller, or an AD LDS server.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> parameter is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transport" /> parameter is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory entry for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule">
      <summary>Gets or sets a value that indicates whether the replication schedule is ignored.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether to ignore the replication schedule. true if the replication schedule is ignored; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save">
      <summary>Commits all changes to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" /> object that contains all site link bridges for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" /> object that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> objects that represent site link bridges.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" /> object that contains all site links for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" /> object that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> objects that represent site links.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString">
      <summary>Gets the string representation of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> transport type of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> object that represents the transport type for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" /> object.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> values that represents the transport type for this object.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" /> class exception is thrown when an Active Directory Domain Services object is created and that object already exists in the underlying directory store.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" /> class, using a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" /> class, using a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" /> class exception is thrown when a requested object is not found in the underlying directory store.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" /> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" /> class with a specified error message and information about the requested object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="type">A <see cref="T:System.Type" /> object that describes the type of the requested object.</param>
      <param name="name">A <see cref="T:System.String" /> that contains the name of the requested object.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds serialized object data about the exception that is being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name">
      <summary>Gets the name of the requested object.</summary>
      <returns>A string that contains the name of the requested object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type">
      <summary>Gets the type of the requested object.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the type of the requested object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" /> class exception is thrown when an underlying directory operation fails.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" /> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" /> class with a specified error message, an underlying exception object, and a specified error code.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
      <param name="errorCode">An error code that identifies the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" /> class with a specified error message and a specified error code.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="errorCode">An error code that identifies the error.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode">
      <summary>Gets the error code for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" /> object.</summary>
      <returns>An <see cref="T:System.Int32" /> value that identifies the error.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds serialized object data about the exception being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" /> class is an abstract class that represents a directory partition in a domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
      <summary>Releases all managed and unmanaged resources that are held by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean" /> value that determines if the managed resources should be released. true if the managed resources are released; false if only the unmanaged resources are released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory partition.</summary>
      <returns>Returns a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory partition.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name">
      <summary>Gets the partition name.</summary>
      <returns>A <see cref="T:System.String" /> that contains the partition name.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString">
      <summary>Retrieves a string representation of the current directory partition.</summary>
      <returns>Returns a string representation of the current directory partition.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" /> class contains replication information for a set of Active Directory Domain Services attributes.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames">
      <summary>Gets the names that are contained in this collection.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object that contains the LDAP display names of the attributes in this collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)">
      <summary>Determines if the specified attribute is in this collection.</summary>
      <returns>true if the attribute is in this collection; otherwise, false.</returns>
      <param name="attributeName">The LDAP display name of the attribute to search for.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough to hold the required number of elements.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range of the destination array.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object in this collection.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object that represents the specified attribute.</returns>
      <param name="name">The LDAP display name of the attribute to get.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values">
      <summary>Gets the values that are contained in this collection.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> objects in this collection.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole">
      <summary>Identifies specific roles within a domain.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.SchemaRole">
      <summary>Identifies the schema master role.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.NamingRole">
      <summary>Identifies the domain naming master role.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.PdcRole">
      <summary>Identifies the primary domain controller (PDC) emulator role.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.RidRole">
      <summary>Identifies the relative identifier (RID) master role.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.InfrastructureRole">
      <summary>Identifies the infrastructure role.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object is in this collection; otherwise, false.</returns>
      <param name="role">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="role" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> objects in this collection to the specified array, starting at the specified index in the array.</summary>
      <param name="roles">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="roles" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough to hold the required number of elements.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roles" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object.</returns>
      <param name="role">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="role" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> class represents the weekly schedule for an Active Directory Domain Services replication.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object. </summary>
      <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that is copied to this object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schedule" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule">
      <summary>Gets or sets a three-dimensional array that indicates at what time during the week that the source is available for replication.</summary>
      <returns>A three-dimensional array of <see cref="T:System.Boolean" /> elements in which the element is true if the source is available for replication during that specific 15-minute interval. The element is false if the source is not available for replication.The array is in the form RawSchedule[&lt;day-of-week&gt;, &lt;hour&gt;, &lt;15-minute interval&gt;]. All of these values are zero-based and the week begins at 00:00 on Sunday morning, Coordinated Universal Time.The following are the valid values for the day-of-week.Day-of-week valueIndicated day of the week.0Sunday1Monday2Tuesday3Wednesday4Thursday5Friday6SaturdayThe hour is zero-based and specified in 24-hour format. For example, 2 P.M. would be specified as 14. Valid values are 0-23.The 15-minute interval specifies the 15-minute block within the hour that the source is available for replication. The following table identifies the possible values for the 15-minute interval.15-minute intervalDescription0The source is available for replication from 0 to 14 minutes after the hour.1The source is available for replication from 15 to 29 minutes after the hour.2The source is available for replication from 30 to 44 minutes after the hour.3The source is available for replication from 45 to 59 minutes after the hour.The following C# example shows how to use this property to determine if the source is available for replication at 15:50 Coordinated Universal Time on Tuesday.C# Copy CodeBoolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];
The following C# example shows how to use this property to calculate the 15-minute interval at runtime by dividing the minutes by 15.C# Copy CodeBoolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];
</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule">
      <summary>Resets the entire schedule to unavailable.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <summary>Adds a range of times for every day of the week to the schedule.</summary>
      <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the first hour that the source will be available for replication.</param>
      <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the first 15-minute interval that the source will be available for replication.</param>
      <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the final hour that the source will be available for replication.</param>
      <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the final 15-minute interval that the source will be available for replication.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <summary>Adds a range of times for a single day to the schedule.</summary>
      <param name="day">One of the <see cref="T:System.DayOfWeek" /> members that specifies the day of the week that the source will be available for replication.</param>
      <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the first hour that the source will be available for replication.</param>
      <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the first 15-minute interval that the source will be available for replication.</param>
      <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the final hour that the source will be available for replication.</param>
      <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the final 15-minute interval that the source will be available for replication.</param>
      <exception cref="T:System.ArgumentException">The start time is after the end time.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters is not valid.</exception>
      <exception cref="T:System.ArgumentException">The start time is after the end time.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="days" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <summary>Adds a range of times for multiple days to the schedule.</summary>
      <param name="days">One of the <see cref="T:System.DayOfWeek" /> members that specifies the day of the week that the source will be available for replication.</param>
      <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the first hour that the source will be available for replication.</param>
      <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the first 15-minute interval that the source will be available for replication.</param>
      <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the final hour that the source will be available for replication.</param>
      <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the final 15-minute interval that the source will be available for replication.</param>
      <exception cref="T:System.ArgumentException">The start time is after the end time.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters is not valid.</exception>
      <exception cref="T:System.ArgumentException">The start time is after the end time.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="days" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters is not valid.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> class represents the schema partition for a particular domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
      <summary>Retrieves all Active Directory Domain Services classes in the schema.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> object that contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects for the classes that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)">
      <summary>Retrieves all Active Directory Domain Services classes in the schema that are of the specified type.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> object that contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects for the classes that were retrieved.</returns>
      <param name="type">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" /> members that identifies which type of classes to retrieve.</param>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses">
      <summary>Retrieves all of the defunct Active Directory Domain Services classes in the schema.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> object that contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects for the classes that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties">
      <summary>Retrieves all of the defunct Active Directory Domain Services properties in the schema.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> object that contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects for the properties that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
      <summary>Retrieves all of the Active Directory Domain Services properties in the schema.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> object that contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects for the properties that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)">
      <summary>Retrieves all of the Active Directory Domain Services properties in the schema of the specified type.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> object that contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects for the properties that were retrieved.</returns>
      <param name="type">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" /> members that identifies which type of properties to retrieve.</param>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)">
      <summary>Retrieves the class with the specified name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object that represents the class with the specified name.</returns>
      <param name="ldapDisplayName">The LDAP display name of the class to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A class with the specified name cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ldapDisplayName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ldapDisplayName" /> is zero length.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)">
      <summary>Retrieves the defunct class that has the specified common name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object that represents the class with the specified common name.</returns>
      <param name="commonName">The common name of the defunct class to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A class with the specified name cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="commonName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="commonName" /> is zero length.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)">
      <summary>Retrieves the defunct property that has the specified common name.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object that represents the property.</returns>
      <param name="commonName">The common name of the defunct property to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A property with the specified name cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="commonName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="commonName" /> is zero length.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)">
      <summary>Retrieves the property with the specified name.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object that represents the property with the specified name.</returns>
      <param name="ldapDisplayName">The LDAP display name of the property to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A property with the specified name cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyName" /> is zero length.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema">
      <summary>Gets the schema object for the forest that the currently logged-on user is a member of.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> object that represents the schema for the domain that the local computer is a member of.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the local domain cannot be made.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory partition.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Retrieves the schema object for the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> object that represents the schema for the specified context.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object. The target of the context must be a forest, directory server, or configuration set.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context" /> cannot be made.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is invalid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema">
      <summary>Refreshes the schema cache on the client computer.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner">
      <summary>Gets the schema master role owner.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that represents the server that is the schema master.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> class represents a schema class definition that is contained in the schema partition.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</param>
      <param name="ldapDisplayName">A <see cref="T:System.String" /> that represents the LDAP display name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> does not refer to a valid <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />, <paramref name="ldapDisplayName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="ldapDisplayName" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> object that contains the auxiliary classes of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> object that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects that represent the auxiliary classes of the current schema class object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName">
      <summary>Gets or sets the Common Name (CN) of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the CN of the current class object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor">
      <summary>Gets or sets the default <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> descriptor of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> object that represents the default security descriptor for the current schema class object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description">
      <summary>Gets or sets a description of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that contains a description of the current class object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
      <summary>Releases the resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object in the Active Directory Domain Services schema partition that matches a given directory context and name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object for the schema class that was found. Returns null if the class was not found.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for the search.</param>
      <param name="ldapDisplayName">A <see cref="T:System.String" /> that specifies the LDAP display name of the schema class for the search.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The object was not found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> does not refer to a valid <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />, <paramref name="ldapDisplayName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="ldapDisplayName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> collection that contains all properties, including ancestor properties, of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> collection of the properties of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />, including ancestor properties.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory entry for the schema class.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is not a valid instance.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is defunct.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates if the current schema class object is defunct. true if the object is defunct; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" /> object that contains the properties that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> must contain.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects that represent the properties that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object must contain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name">
      <summary>Gets the ldapDisplayName of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object. For more information, see the topic LDAP-Display-Name in the MSDN Library at http://msdn.microsoft.com.  </summary>
      <returns>A <see cref="T:System.String" /> that contains the ldapDisplayName of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object. For more information, see the topic LDAP-Display-Name in the MSDN Library at http://msdn.microsoft.com.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid">
      <summary>Gets or sets the OID for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the OID of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" /> object that contains the properties that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> can contain.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object can contain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> class can contain.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects that this class can contain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects that can contain this class.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects that can contain this class.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save">
      <summary>Commits all changes to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The context is an AD LDS configuration set and the AD LDS instance could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid">
      <summary>Gets or sets the schemaIDGUID for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object. For more information, see the topic "schemaIDGUID" or "Schema-ID-GUID" in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <returns>A <see cref="T:System.Guid" /> object that contains the schemaIDGUID for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object. For more information, see the topic "schemaIDGUID" or "Schema-ID-GUID" in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf">
      <summary>Gets or sets the schema class from which the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is derived.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object that contains the schema class from which the current schema class is derived. null if no schema class was specified during the creation of the current class.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString">
      <summary>Gets the LDAP display name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the LDAP display name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type">
      <summary>Gets or sets the <see cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" /> type for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" /> value that contains the type of the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified type is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" /> value (applies to set only).</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to this collection.</summary>
      <returns>The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object that is appended to this collection.</returns>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClass" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> array to this collection.</summary>
      <param name="schemaClasses">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClasses" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object has not yet been saved to the underlying directory store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> object to this collection.</summary>
      <param name="schemaClasses">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" /> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClasses" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object has not yet been saved to the underlying directory store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> object to this collection.</summary>
      <param name="schemaClasses">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClasses" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is in this collection; otherwise, false.</returns>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClass" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="schemaClasses">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="schemaClasses" /> where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClasses" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</returns>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClass" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClass" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to get or set.</param>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> specified has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by <paramref name="newValue" />.</param>
      <param name="newValue">The element that replaced <paramref name="oldValue" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> method.</summary>
      <param name="value">The element to validate in this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</summary>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaClass" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> class represents a schema property definition that is contained in the schema partition.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> class.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</param>
      <param name="ldapDisplayName">A <see cref="T:System.String" /> that represents the LDAP display name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> does not refer to a valid <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />, or <paramref name="ldapDisplayName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="ldapDisplayName" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName">
      <summary>Gets or sets the Common Name (CN) of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that gets or sets the CN of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description">
      <summary>Gets or sets a description of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that gets or sets a description of the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
      <summary>Releases the resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object in the Active Directory Domain Services schema partition that matches a given directory context and name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object for the schema property that is found. null if the property is not found.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for the search.</param>
      <param name="ldapDisplayName">A <see cref="T:System.String" /> that specifies the LDAP display name of the schema property to search for.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The object was not found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> does not refer to a valid <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />, or <paramref name="ldapDisplayName" /> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="ldapDisplayName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory entry for the schema property.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object is not a valid instance.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object is defunct.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether  the current schema property object is defunct. true if the object is defunct; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr">
      <summary>Gets or sets a value indicating whether the schema property is in the ANR set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the schema property is in the ANR set. true if it is in the ANR set; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed">
      <summary>Gets or sets a value indicating whether the schema property is indexed in the Active Directory Domain Services store.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether  the current schema property is indexed in the Active Directory Domain Services store. true if the property is indexed; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer">
      <summary>Gets or sets a value indicating whether the schema property is indexed in all containers.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the schema property is indexed in all containers.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog">
      <summary>Gets or sets a value indicating whether the schema property is contained in the global catalog.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the schema property is contained in the global catalog. true if it is contained in the global catalog; otherwise, false. </returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject">
      <summary>Gets or sets a value indicating whether the schema property is in the tombstone object that contains deleted properties.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the schema property is contained in the tombstone object. true if it is contained in the tombstone object; otherwise, false. </returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued">
      <summary>Gets or sets a value indicating whether the schema property is single-valued.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the schema property is single valued. true if it is single-valued; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed">
      <summary>Gets or sets a value indicating whether there is a tuple index for this schema property.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the schema property has a tuple index. true if there is a tuple index for the property; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> that links to the current schema property.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object that is linked to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId">
      <summary>Gets or sets the value for the link identifier when the schema property is linked.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the linkID value when the schema property is linked. For more information, see the topic Link-ID in the MSDN Library at http://msdn.microsoft.com/library. </returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name">
      <summary>Gets the ldapDisplayName of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object. For more information, see the topic LDAP-Display-Name in the MSDN Library at http://msdn.microsoft.com/library. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the ldapDisplayName of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object. For more information, see the topic LDAP-Display-Name in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid">
      <summary>Gets or sets the OID of the schema property.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the OID of the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower">
      <summary>Gets or sets a value that represents the minimum value or length that the schema property can have.</summary>
      <returns>An <see cref="T:System.Int32" /> that represents the minimum value or length of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object value.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">There is no lower range for this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper">
      <summary>Gets or sets a value that represents the maximum value or length that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object can have.</summary>
      <returns>An <see cref="T:System.Int32" /> value that indicates the maximum value or length of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object value.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">There is no upper range for this property.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save">
      <summary>Commits all changes to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object of the same name already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid">
      <summary>Gets or sets the schemaIDGuid for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object. For more information, see the topic Schema-ID-GUID in the MSDN Library at http://msdn.microsoft.com/library. </summary>
      <returns>A <see cref="T:System.Guid" /> that represents the schemaIDGuid for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object. For more information, see the topic Schema-ID-GUID in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" /> object indicating the property type (syntax) of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" /> object that defines the property type of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified type is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" /> value (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString">
      <summary>Gets the LDAP display name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the LDAP display name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" /> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to this collection.</summary>
      <returns>The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object that is appended to this collection.</returns>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaProperty" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> array to this collection.</summary>
      <param name="properties">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="properties" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" /> object to this collection.</summary>
      <param name="properties">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" /> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="properties" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> object to this collection.</summary>
      <param name="properties">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="properties" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object is in this collection; otherwise, false.</returns>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaProperty" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="properties">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="properties" /> where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="properties" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaProperty" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="schemaProperty" /> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to get or set.</param>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />                                      object has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by <paramref name="newValue" />.</param>
      <param name="newValue">The element that replaced <paramref name="oldValue" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> method.</summary>
      <param name="value">The element in this collection to validate.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</summary>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaProperty" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> class exception is thrown when a server is unavailable to respond to a service request.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> class with a specified error message, an underlying exception object, a specified error code, and a specified server name.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
      <param name="errorCode">An error code that identifies the error.</param>
      <param name="name">The name of the server that caused the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> class with a specified error message, a specified error code, and a specified server name.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="errorCode">An error code that identifies the error.</param>
      <param name="name">The name of the server that caused the error.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode">
      <summary>Gets the error code for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> object.</summary>
      <returns>An <see cref="T:System.Int32" /> value that identifies the error.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds serialized object data about the exception that is being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message">
      <summary>Gets the message that describes the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> object error.</summary>
      <returns>A <see cref="T:System.String" /> that describes the error.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name">
      <summary>Gets the name of the server that is associated with the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the server that caused this error.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> class defines a set of domain controllers that are well-connected in terms of speed and cost. A site object consists of a set of one or more IP subnets.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object for creating this site.</param>
      <param name="siteName">The name for the new site.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target in the <paramref name="context" /> parameter is not a forest, configuration set, domain controller, or an AD LDS server.<paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites">
      <summary>Gets a read-only collection of sites that are connected through a common site link with this site object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" /> collection that contains a read-only collection of sites that are connected through a common site link with this site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers">
      <summary>Gets a read-only collection of bridgehead servers for this site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> collection that contains a read-only collection of directory servers in this site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete">
      <summary>Deletes the current site.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
      <summary>Releases all resources used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the object and optionally releases the managed resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains">
      <summary>Gets all domains in the site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> object containing all domains in the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Returns a site based on a site name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object for the requested site.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that is valid for this site.</param>
      <param name="siteName">The name of the site to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The site could not be found for the given <paramref name="siteName" /> in the <paramref name="context" /> specified.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target in the <paramref name="context" /> parameter is not a forest, configuration set, domain controller, or an AD LDS server.<paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite">
      <summary>Gets the site that this computer is a member of.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object that contains the caller's current site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The caller's computer does not belong to a site.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for this site.</summary>
      <returns>The <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for this site.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator">
      <summary>Gets or sets the directory server that serves as the inter-site topology generator.</summary>
      <returns>A read/write <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that represents the directory server that serves as the inter-site topology generator.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.NotSupportedException">The transport type is not supported.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule">
      <summary>Gets or sets the default setting for the replication schedule for the site.</summary>
      <returns>A read/write <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> that represents the default setting for the replication schedule for the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location">
      <summary>Gets or sets the location of the site.</summary>
      <returns>A string value that gets or sets the location of the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name">
      <summary>Gets the name of the site.</summary>
      <returns>A string value that contains the name of the site.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options">
      <summary>Gets or sets the site options.</summary>
      <returns>A read/write <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" /> value that gets or sets the site options.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers">
      <summary>Returns a collection of directory servers that are designated as preferred bridgehead servers for the RPC transport.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" /> object that contains the directory servers that are designated as preferred bridgehead servers for the RPC transport.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers">
      <summary>Returns a collection of directory servers that are designated as preferred bridgehead servers for the SMTP transport.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" /> object that contains a collection of directory servers that are designated as preferred bridgehead servers for the SMTP transport.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save">
      <summary>Writes any changes to the object to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The site object already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.NotSupportedException">The transport type is not supported.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers">
      <summary>Returns a read-only collection of directory servers in the site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> that contains a read-only collection of directory servers in the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks">
      <summary>Gets a read-only collection of site links that involve this site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" /> object that contains a read-only collection of site links that this site is in.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets">
      <summary>Returns a writable collection of subnets in the site.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" /> object that contains a writable collection of subnets in the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString">
      <summary>Returns the name of the site.</summary>
      <returns>A <see cref="T:System.String" /> that represents the name of the site.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" /> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to this collection.</summary>
      <returns>The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object that is appended to this collection.</returns>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> array to this collection.</summary>
      <param name="sites">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sites" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" /> object to this collection. </summary>
      <param name="sites">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" /> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sites" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object is in this collection; otherwise, false.</returns>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index of <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object.</returns>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in the collection where the object is inserted.</param>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to get or set.</param>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index where the element was inserted.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index where the element was removed.</param>
      <param name="value">The element that was removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> method.</summary>
      <param name="index">The zero-based index where the object was set.</param>
      <param name="oldValue">The element that was replaced by <paramref name="newValue" />.</param>
      <param name="newValue">The element that replaced <paramref name="oldValue" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> method.</summary>
      <param name="value">The element in this collection to validate.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object.</summary>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> class represents a set of two or more sites that can be scheduled, for replication, to communicate at uniform cost and through a particular transport.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object and name.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object for creating this site link.</param>
      <param name="siteLinkName">The name for the site link.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.The target in the <paramref name="context" /> parameter is not a forest,  configuration set, domain controller, or an AD LDS server.<paramref name="siteLinkName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteLinkName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object, name, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object for creating this site link.</param>
      <param name="siteLinkName">The name for the site link.</param>
      <param name="transport">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> object that specifies the transport type.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.The target in the <paramref name="context" /> parameter is not a forest, configuration set, domain controller, or an AD LDS server.<paramref name="siteLinkName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> parameter or <paramref name="siteLinkName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="transport" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="transport" /> type is not supported.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object, name, transport type, and replication schedule.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object for creating this site link.</param>
      <param name="siteLinkName">The name for the site link.</param>
      <param name="transport">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> object that specifies the transport type.</param>
      <param name="schedule">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that specifies the replication schedule for this site link.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.The target in the <paramref name="context" /> parameter is not a forest, configuration set, domain controller, or an AD LDS server.<paramref name="siteLinkName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or the <paramref name="siteLinkName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="transport" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="transport" /> type is not supported.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost">
      <summary>Gets or sets the site link cost.</summary>
      <returns>A cost that is associated with this site link. The default value is 100.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ArgumentException">The cost is less than zero. (applies to set only)</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled">
      <summary>Gets or sets the data compression mode of the site link.</summary>
      <returns>true if data compression mode is enabled; false if data compression is disabled.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete">
      <summary>Deletes the current site link.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
      <summary>Releases all resources used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the object and optionally releases the managed resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Returns a site link based on a site link name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object for the requested site link.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that is valid for this site link.</param>
      <param name="siteLinkName">The name of the site link to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The site could not be found for the given <paramref name="siteLinkName" /> in the <paramref name="context" /> specified.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target in the <paramref name="context" /> parameter is not a forest,  configuration set, domain controller, or an AD LDS server.<paramref name="siteLinkName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteLinkName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Returns a site link based on a site link name and transport.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object for the requested site link.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that is valid for this site link.</param>
      <param name="siteLinkName">The name of the site link to find.</param>
      <param name="transport">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> object that specifies the transport type.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The site could not be found for the given <paramref name="siteLinkName" /> in the <paramref name="context" /> specified.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target in the <paramref name="context" /> parameter is not a forest, configuration set, domain controller, or an AD LDS server.<paramref name="siteLinkName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteLinkName" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transport" /> parameter is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="transport" /> type is not supported.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> for this object.</summary>
      <returns>The <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for this site link.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule">
      <summary>Gets or sets the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object for the current site link object.</summary>
      <returns>Gets or sets the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object for the current site link object. Setting this property changes the replication schedule for the site link.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name">
      <summary>Gets the name of the site link.</summary>
      <returns>The name of the site link.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled">
      <summary>Gets or sets a value indicating whether notifications are enabled.</summary>
      <returns>true if notifications are enabled; false if notifications are disabled.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled">
      <summary>Gets or sets the mode for reciprocal replication between sites.</summary>
      <returns>true if reciprocal replication is enabled; false if reciprocal replication is disabled.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval">
      <summary>Gets or sets the replication interval between sites.</summary>
      <returns>The replication interval between sites.</returns>
      <exception cref="T:System.ArgumentException">Invalid <paramref name="ReplicationInterval" /> specified.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save">
      <summary>Writes any changes to the object to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The site object already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites">
      <summary>Gets a read/write collection of sites that this site link contains.</summary>
      <returns>A writable <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" /> collection of sites that this site link contains. Sites can be added and deleted from this collection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString">
      <summary>Returns the site link name.</summary>
      <returns>A string that contains the name of the site link.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType">
      <summary>Gets the transport type of the site link.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value indicating the transport type of this site link.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> class represents a set of site links that communicate through a transport.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object and name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</param>
      <param name="bridgeName">A <see cref="T:System.String" /> that specifies the name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:The <paramref name="context" /> parameter does not refer to a valid forest, configuration set,  domain controller, or AD LDS server.The <paramref name="bridgeName" /> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> parameter or the <paramref name="bridgeName" /> parameter is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes an instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object, name, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</param>
      <param name="bridgeName">A <see cref="T:System.String" /> that specifies the name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</param>
      <param name="transport">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value that specifies the transport type to be used.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:The <paramref name="context" /> parameter does not refer to a valid forest, configuration set, domain controller, or AD LDS server.The <paramref name="bridgeName" /> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> parameter or the <paramref name="bridgeName" /> parameter is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="transport" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value.</exception>
      <exception cref="T:System.NotSupportedException">The transport type specified in the <paramref name="transport" /> parameter is not supported.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete">
      <summary>Deletes the site link bridge.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
      <summary>Releases the resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object that matches a given directory context and name.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object. null if the object was not found.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for the search.</param>
      <param name="bridgeName">A <see cref="T:System.String" /> that specifies the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to search for.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">In the <paramref name="context" /> parameter that was specified, the site link bridge could not be found for the given <paramref name="bridgeName" /> parameter. </exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.The target in the <paramref name="context" /> parameter is not a forest, configuration set,  domain controller, or an AD LDS server.The <paramref name="bridgeName" /> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> or the <paramref name="bridgeName" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object that matches a given directory context, name, and transport type.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object. null if the object was not found.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for the search.</param>
      <param name="bridgeName">A <see cref="T:System.String" /> that specifies the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to search for.</param>
      <param name="transport">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value that specifies the transport type of the object to search for.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">In the <paramref name="context" /> parameter that was specified, the site link bridge could not be found for the given <paramref name="bridgeName" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:The target in the <paramref name="context" /> parameter is not a forest, configuration set, domain controller, or an AD LDS server.The <paramref name="bridgeName" /> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> or the <paramref name="bridgeName" /> parameter is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transport" /> parameter is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory entry for the site link bridge object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name">
      <summary>Gets the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the name of the current site link bridge object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save">
      <summary>Commits all changes to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The site link bridge object already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks">
      <summary>Gets a collection of site link objects that are associated with the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" /> object that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> objects that are associated with the current site link bridge object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString">
      <summary>Gets the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the name of the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType">
      <summary>Gets the transport type for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value that represents the transport type that is used by the current site link bridge object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" /> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to this collection.</summary>
      <returns>The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object that is appended to this collection.</returns>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="link" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> array to this collection.</summary>
      <param name="links">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="links" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" /> object to this collection.</summary>
      <param name="links">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" /> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="links" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object is in this collection; otherwise false.</returns>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="link" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> array that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object.</returns>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="link" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="link" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to get or set.</param>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> specified has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by <paramref name="newValue" />.</param>
      <param name="newValue">The element that replaced <paramref name="oldValue" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> method.</summary>
      <param name="value">The element in this collection to validate.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object.</summary>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="link" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions">
      <summary>Specifies the bit identifiers for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object site options.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.None">
      <summary>No site options are set.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoTopologyDisabled">
      <summary>Inter-site topology generation is disabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.TopologyCleanupDisabled">
      <summary>Topology cleanup is disabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoMinimumHopDisabled">
      <summary>Automatic minimum hops topology is disabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.StaleServerDetectDisabled">
      <summary>Stale server detection is disabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoInterSiteTopologyDisabled">
      <summary>Automatic intra-site topology generation is disabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.GroupMembershipCachingEnabled">
      <summary>Group memberships for users is enabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.ForceKccWindows2003Behavior">
      <summary>The KCC (Knowledge Consistency Checker) is forced to operate in Windows Server 2003 behavior mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseWindows2000IstgElection">
      <summary>The KCC is forced to use the Windows 2000 ISTG election algorithm.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RandomBridgeHeaderServerSelectionDisabled">
      <summary>The KCC can randomly pick a bridgehead server when creating a connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseHashingForReplicationSchedule">
      <summary>The KCC is allowed to use hashing when creating a replication schedule.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RedundantServerTopologyEnabled">
      <summary>Creation of static failover connections is enabled.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> class represents a subnet in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes an instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object and subnet name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</param>
      <param name="subnetName">A <see cref="T:System.String" /> that specifies the name of the subnet.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
        <paramref name="context" /> specifies a configuration set, but no AD LDS instance was found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:<paramref name="context" /> does not refer a valid forest, configuration set, domain controller, or AD LDS server.<paramref name="subnetName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="subnetName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object, subnet name, and site name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</param>
      <param name="subnetName">A <see cref="T:System.String" /> that specifies the name of the subnet.</param>
      <param name="siteName">A <see cref="T:System.String" /> that specifies the name of the site that contains the subnet.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
        <paramref name="context" /> specifies a configuration set, but no AD LDS instance was found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:<paramref name="context" /> does not refer to a valid forest, configuration set, domain controller, or AD LDS server.<paramref name="subnetName" /> or <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="subnetName" />, or <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete">
      <summary>Deletes the subnet that is represented by this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Returns a subnet that is based on a subnet name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> for the requested subnet.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that is valid for this subnet.</param>
      <param name="subnetName">The name of the subnet to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">In the <paramref name="context" /> parameter that was specified, the site could not be found for the given <paramref name="subnetName" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:The target in the <paramref name="context" /> parameter is not a forest, configuration set, domain controller, or AD LDS server.<paramref name="subnetName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="subnetName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</summary>
      <returns>The <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location">
      <summary>Gets or sets the location description of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</summary>
      <returns>The location description of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name">
      <summary>Gets the subnet name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</summary>
      <returns>The name of the subnet.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save">
      <summary>Writes any changes to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The subnet object already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site">
      <summary>Gets or sets the site that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object is a member of.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object for the site that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object is a member of.</returns>
      <exception cref="T:System.InvalidOperationException">Applies to set only. The specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object does not exist. If it was newly created, it must be committed to the directory store before assigning it to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString">
      <summary>Returns the name of the subnet.</summary>
      <returns>A <see cref="T:System.String" /> that represents the name of the subnet.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" /> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object to this collection.</summary>
      <returns>The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> that is appended to this collection.</returns>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subnet" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> array to this collection.</summary>
      <param name="subnets">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subnets" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" /> object to this collection.</summary>
      <param name="subnets">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" /> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subnets" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object is in this collection; otherwise, false.</returns>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subnet" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</returns>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subnet" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subnet" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object to get or set.</param>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> specified has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by <paramref name="newValue" />.</param>
      <param name="newValue">The element that replaced <paramref name="oldValue" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> method.</summary>
      <param name="value">The element in this collection to validate.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object.</summary>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subnet" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax">
      <summary>Specifies the data representation (syntax) type of a <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseExactString">
      <summary>A case-sensitive string type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseIgnoreString">
      <summary>A case-insensitive string type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.NumericString">
      <summary>A numeric value represented as a string.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DirectoryString">
      <summary>A directory string specification.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.OctetString">
      <summary>A byte array represented as a string.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.SecurityDescriptor">
      <summary>A security descriptor value type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int">
      <summary>A 32-bit integer value type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int64">
      <summary>A 64 bit (large) integer value type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Bool">
      <summary>A Boolean value type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Oid">
      <summary>An OID value type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.GeneralizedTime">
      <summary>A time expressed in generalized time format.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.UtcTime">
      <summary>A time expressed in Coordinated Universal Time format.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DN">
      <summary>A distinguished name of a directory service object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithBinary">
      <summary>An ADS_DN_WITH_BINARY structure used for mapping a distinguished name to a non-varying GUID. For more information, see the topic "ADS_DN_WITH_BINARY" in the MSDN Library at http://msdn.microsoft.com/library.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithString">
      <summary>An ADS_DN_WITH_STRING structure used for mapping a distinguished name to a non-varying string value. For more information, see the topic "ADS_DN_WITH_STRING" in the MSDN Library at http://msdn.microsoft.com/library</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Enumeration">
      <summary>An enumeration value type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.IA5String">
      <summary>An IA5 character set string.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PrintableString">
      <summary>A printable character set string.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Sid">
      <summary>An SID value type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.AccessPointDN">
      <summary>An AccessPoint object type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ORName">
      <summary>An OR-Name object type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PresentationAddress">
      <summary>A Presentation-Address object type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ReplicaLink">
      <summary>A Replica-Link object type.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType">
      <summary>Identifies the transport type of a replication connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Rpc">
      <summary>Specifies the RPC transport type.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp">
      <summary>Specifies the SMTP transport type.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> class represents an AD LDS instance server.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency">
      <summary>Invokes the Knowledge Consistency Checker (KCC) that verifies the replication topology for this AD LDS instance.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> object for this AD LDS instance.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> object for this <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition">
      <summary>Gets or sets the default partition that this AD LDS instance serves.</summary>
      <returns>A <see cref="T:System.String" /> that contains the distinguished name of the default partition that this AD LDS instance serves.  If the default partition is not set, this will return null.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">The partition name is not in a valid distinguished name format, or the AD LDS instance does not serve this partition. Applies to set only.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object and, optionally, releases managed resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean" /> value that determines if the managed resources should be released. true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds all AD LDS instances in the specified context that host the specified partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" /> that contains the AD LDS instances that are found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search. The target of this context must be an AD LDS configuration set.</param>
      <param name="partitionName">A <see cref="T:System.String" /> that contains the name of the partition to search for AD LDS instances.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="context" /> or <paramref name="partitionName" /> parameter is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> or <paramref name="partitionName" /> parameter is null.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No AD LDS instance was found.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds a single AD LDS instance in the specified context that hosts the specified partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object that represents the AD LDS instance that is found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search. The target of this context must be an AD LDS configuration set.</param>
      <param name="partitionName">A <see cref="T:System.String" /> that contains the name of the partition to search for an AD LDS instance.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No AD LDS instance was found.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="context" /> or <paramref name="partitionName" />  parameter is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> or <paramref name="partitionName" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Returns an AD LDS instance for a specified context.</summary>
      <returns>A <see cref="M:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object that refers to the AD LDS instance that is found.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object. The target of the context must be an AD LDS instance.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target that was specified in the <paramref name="context" /> parameter could not be made.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="context" /> parameter is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors">
      <summary>Returns the replication neighbors for this AD LDS instance.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> object that contains the replication neighbors for this AD LDS instance.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures">
      <summary>Returns a list of replication connection failures that are recorded by this AD LDS instance.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" /> object that contains the replication connection failures that are recorded by this AD LDS instance.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)">
      <summary>Returns the replication cursor information for a specified partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" /> object that contains the replication cursor information.</returns>
      <param name="partition">A <see cref="T:System.String" /> that contains the distinguished name of the partition for which to retrieve the replication cursor information.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition" /> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)">
      <summary>Returns the replication metadata for a specific Active Directory Domain Services object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" /> object that contains the replication cursor information.</returns>
      <param name="objectPath">A <see cref="T:System.String" /> that contains the path to the Active Directory Domain Services object for which to retrieve the replication metadata.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectPath" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="objectPath" /> is not valid.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)">
      <summary>Returns the replication neighbors for a specified partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> object that contains the replication neighbors for this AD LDS instance.</returns>
      <param name="partition">A <see cref="T:System.String" /> that contains the distinguished name of the partition for which to retrieve the replication neighbors.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition" /> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation">
      <summary>Returns the current and pending replication operations for this AD LDS instance.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> object that contains the current and pending replications operations.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName">
      <summary>Gets the host name of the computer that hosts this AD LDS instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the computer host name.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections">
      <summary>Gets the inbound replication connections for this AD LDS instance.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> object that contains the inbound replication connections for this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress">
      <summary>Gets the IP address of the computer that hosts this AD LDS instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the IP address of the computer that hosts this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort">
      <summary>Gets the LDAP port number of this AD LDS instance.</summary>
      <returns>A <see cref="T:System.Int32" /> value that contains the LDAP port number of this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections">
      <summary>Gets the outbound replication connections for this AD LDS instance.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> object that contains the outbound replication connections for this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles">
      <summary>Gets the roles that this AD LDS instance holds.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" /> object that contains <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> members that indicate the roles that this AD LDS instance serves.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save">
      <summary>Commits changes to the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <summary>Seizes ownership of the specified role.</summary>
      <param name="role">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> members that specifies which role the AD LDS instance should take ownership of.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="role" /> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName">
      <summary>Gets the name of the site of which this AD LDS instance is a member.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the site of which this AD LDS instance is a member.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort">
      <summary>Gets the SSL port number of this AD LDS instance.</summary>
      <returns>A <see cref="T:System.Int32" /> value that contains the SSL port number of this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback">
      <summary>Gets or sets the synchronization delegate for this AD LDS instance.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" /> delegate that this AD LDS instance will use for synchronization notifications.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <summary>Synchronizes the specified partition with all other domain controllers.</summary>
      <param name="partition">A <see cref="T:System.String" /> that contains the distinguished name of the partition of the domain controller to synchronize.</param>
      <param name="options">A combination of one of more of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" /> members.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition" /> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">An error occurred in the synchronization operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)">
      <summary>Synchronizes the specified partition with the specified domain controller.</summary>
      <param name="partition">A <see cref="T:System.String" /> that contains the distinguished name of the partition to synchronize.</param>
      <param name="sourceServer">A <see cref="T:System.String" /> that contains the name of the server with which to synchronize.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition" /> or <paramref name="sourceServer" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition" /> or <paramref name="sourceServer" /> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <summary>Transfers the specified role to this AD LDS instance.</summary>
      <param name="role">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> members that specifies which role should be transferred to this AD LDS instance.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="role" /> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)">
      <summary>Begins a synchronization of the specified partition.</summary>
      <param name="partition">A <see cref="T:System.String" /> that contains the distinguished name of the partition to synchronize.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition" /> is parameter not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object is in this collection; otherwise, false.</returns>
      <param name="adamInstance">The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adamInstance" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="adamInstances">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="adamInstances" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough to hold the required number of elements.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adamInstances" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object.</returns>
      <param name="adamInstance">The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adamInstance" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AdamRole">
      <summary>Indicates specific roles of a <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.AdamRole.SchemaRole">
      <summary>The AD LDS server holds the schema operations master role.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.AdamRole.NamingRole">
      <summary>The AD LDS server holds the domain naming master role.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> items.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> item is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> item is in this collection; otherwise, false.</returns>
      <param name="role">The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> item to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="role" /> parameter is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="role" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> value.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> items in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="roles">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> items that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="roles" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough to hold the required number of elements.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="roles" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter that is specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> item in this collection.</summary>
      <returns>The zero-based index of the first matching item. -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> item.</returns>
      <param name="role">The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> item to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="role" /> parameter is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="role" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> value.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> item in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> class represents an application partition for a particular domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> class, using the specified distinguished name.</summary>
      <param name="context">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that is used to create this application partition.</param>
      <param name="distinguishedName">The <see cref="T:System.String" /> that specifies the distinguished name for this application partition.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">The target in the <paramref name="context" /> parameter is not a server, or the <paramref name="distinguishedName" /> parameter is not in a valid distinguished name format.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="distinguishedName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> class, using the specified distinguished name and object class.</summary>
      <param name="context">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that is used to create this application partition.</param>
      <param name="distinguishedName">The <see cref="T:System.String" /> that specifies the distinguished name for this application partition.</param>
      <param name="objectClass">The <see cref="T:System.String" /> that specifies the object class that represents this application partition.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">The target in the <paramref name="context" /> parameter is not a server, or the <paramref name="distinguishedName" /> parameter is not in a valid distinguished name format.  This exception is also thrown if the application partition is being created within an Active Directory forest, rather than an AD LDS configuration set, because the <paramref name="objectClass" /> can only be specified for AD LDS configuration sets.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="distinguishedName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete">
      <summary>Deletes this application partition.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been saved in the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" /> object that contains the directory servers that host this application partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" /> object that contains <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects that represent directory servers for this application partition.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object and optionally releases unmanaged resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean" /> value that determines if the managed resources should be released. true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> object that contains all of the directory servers that host this application partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> object that contains all of the directory servers that host this application partition.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)">
      <summary>Returns an <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> object that contains all of the directory servers that host this application partition in the specified site.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> object that contains the directory servers that host this application partition in the specified site.</returns>
      <param name="siteName">A <see cref="T:System.String" /> that specifies the name of the site to search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> object that contains all of the directory servers that have registered either a site-specific DNS record for the current site or a non-site-specific DNS record for the application partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> object that contains the directory servers that were found.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.NotSupportedException">The application partition is an AD LDS application partition.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> object that contains all of the directory servers that have registered a site-specific DNS record, for the specified site, for the application partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> object that contains the directory servers that are found.</returns>
      <param name="siteName">A <see cref="T:System.String" /> that specifies the name of the site to search.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.NotSupportedException">The application partition is an AD LDS application partition.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Returns an <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object for a given <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object and distinguished name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object that represents the results of the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="distinguishedName">A <see cref="T:System.String" /> that contains the distinguished name of the application partition to search for.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">This exception will occur for any one of the following reasons:A target specified in the <paramref name="context" /> parameter could not be found.The target is a configuration set and no AD LDS instance was found in that configuration set.The target is a forest and the application partition was not found in that forest.The target does not host the current application partition.No AD LDS instance was found for the application partition.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="distinguishedName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:The <paramref name="context" /> parameter is not a valid forest, configuration set, or directory server.The <paramref name="distinguishedName" /> has a zero lengthThe <paramref name="distinguishedName" /> parameter is in an invalid format.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object for this application partition and current site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object for this application partition and site.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object for the application partition and current site with an option to ignore cached information.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object for this application partition and site.</returns>
      <param name="forceRediscovery">A <see cref="T:System.Boolean" /> value that indicates whether cached information should be ignored. true if cached information should be ignored; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object for the application partition and a specified site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object for this application partition and specified site.</returns>
      <param name="siteName">A <see cref="T:System.String" /> that specifies a site name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object for this application partition for a specified site, with an option to ignore cached information.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object for this application partition and specified site.</returns>
      <param name="siteName">A <see cref="T:System.String" /> that specifies a site name.</param>
      <param name="forceRediscovery">A <see cref="T:System.Boolean" /> value that indicates whether cached information should be ignored. true if cached information should be ignored; otherwise, false.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Returns an <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object for a specified directory context.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object that represents the application partition for the specified directory context.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the application partition object.  The directory context must specify the DNS name of the application partition.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A target specified in <paramref name="context" /> could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry">
      <summary>Gets a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for this application partition.</summary>
      <returns>The <see cref="T:System.DirectoryServices.DirectoryEntry" /> for this application partition.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been saved in the Active Directory Domain Services store. </exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save">
      <summary>Commits all changes to the current application partition object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">An application partition with the same name already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain">
      <summary>Gets and sets the security reference domain for this application partition.</summary>
      <returns>The distinguished name of the security reference domain for this application.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object has not yet been committed to the underlying directory store (applies to set only).</exception>
      <exception cref="T:System.NotSupportedException">The application partition is an AD LDS application partition.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> is in this collection, otherwise, false.</returns>
      <param name="applicationPartition">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationPartition" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="applicationPartitions">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="applicationPartitions" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationPartitions" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching item. -1 if no member of this collection is identical to <paramref name="applicationPartition" />.</returns>
      <param name="applicationPartition">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationPartition" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> class is used to contain replication metadata for an Active Directory Domain Services attribute.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime">
      <summary>Gets the time at which the last originating change was made to this attribute.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the last originating change time for this attribute.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId">
      <summary>Gets the invocation identifier of the server on which the last change was made to this attribute.</summary>
      <returns>A <see cref="T:System.Guid" /> structure that contains the identifier.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn">
      <summary>Gets the update sequence number (USN) on the destination server at which the last change to this attribute was applied.</summary>
      <returns>An <see cref="T:System.Int64" /> value that contains the USN.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name">
      <summary>Gets the name of the attribute.</summary>
      <returns>The LDAP display name of the attribute.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn">
      <summary>Gets the update sequence number (USN) on the originating server at which the last change to this attribute was made.</summary>
      <returns>An <see cref="T:System.Int64" /> value that contains the USN.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer">
      <summary>Gets the name of the originating server.</summary>
      <returns>The distinguished name of the originating server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version">
      <summary>Gets the version number of this attribute.</summary>
      <returns>The version number of this attribute. Each originating modification of the attribute increases this value by one.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <summary>A read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> objects. </summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> is in this collection, otherwise, false.</returns>
      <param name="metadata">The <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metadata" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="metadata">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="metadata" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metadata" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching item. -1 if no member of this collection is identical to <paramref name="metadata" />.</returns>
      <param name="metadata">The <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metadata" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" /> object to get.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> class represents a configuration set for one or more AD LDS instances.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances">
      <summary>Gets a read-only collection of AD LDS instances that are in the configuration set.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> objects that are in the configuration set.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions">
      <summary>Gets a read-only collection of application partitions that are in the configuration set.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" /> objects that are in the configuration set.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
      <summary>Releases all managed and unmanaged resources that are used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the object and optionally releases managed resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean" /> value that determines if the managed resources should be released. true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
      <summary>Finds an AD LDS instance in this configuration set.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object that represents an AD LDS instance that was found.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">An AD LDS instance could be not found in this configuration set.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)">
      <summary>Finds an AD LDS instance in this configuration set for a given partition name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object that represents an AD LDS instance that was found.</returns>
      <param name="partitionName">A <see cref="T:System.String" /> that specifies a partition in which to search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partitionName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">An AD LDS instance for the specified <paramref name="partitionName" /> could not be found in this configuration set.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)">
      <summary>Finds an AD LDS instance in this configuration set for a given partition name and site name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object that represents an AD LDS instance that was found.</returns>
      <param name="partitionName">A <see cref="T:System.String" /> that specifies a partition in which to search.</param>
      <param name="siteName">A <see cref="T:System.String" /> that specifies a site in which to search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">An AD LDS instance for the specified <paramref name="partitionName" /> and <paramref name="siteName" /> parameters could not be found in this configuration set.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
      <summary>Returns all AD LDS instances in this configuration set.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> objects that were found.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)">
      <summary>Returns all AD LDS instances in this configuration set for a given partition name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> objects that were found.</returns>
      <param name="partitionName">A <see cref="T:System.String" /> that specifies a partition in which to search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partitionName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)">
      <summary>Returns all AD LDS instances in this configuration set for a given partition name and site name.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> objects that are found.</returns>
      <param name="partitionName">A <see cref="T:System.String" /> that specifies a partition in which to search.</param>
      <param name="siteName">A <see cref="T:System.String" /> that specifies a partition in which to search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Returns an <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> object for the specified directory context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> object that represents the configuration set for the specified context.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object. The target of the context can be an AD LDS instance or keywords that are specified in the serviceConnectionPoint object in the current forest that can identify the configuration set.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A target specified in the <paramref name="context" /> parameter could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="context" /> parameter is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for the configuration partition.</summary>
      <returns> The <see cref="T:System.DirectoryServices.DirectoryEntry" /> object for the configuration partition.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel">
      <summary>Returns the AD LDS replication security level.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" /> value that indicates  the current AD LDS replication authentication mode.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name">
      <summary>Gets the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner">
      <summary>Gets the AD LDS instance that is the current owner of the domain naming master role.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object that represents the AD LDS instance that currently holds the domain naming master role.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema">
      <summary>Gets the schema object for the configuration set.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> object that represents the schema for this configuration set.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner">
      <summary>Gets the AD LDS instance that is the current owner of the schema operations master role.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> object that represents the AD LDS+ instance that currently holds the schema operations master role.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)">
      <summary>Sets the AD LDS replication security level.</summary>
      <param name="securityLevel">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" /> value to which to set the AD LDS replication authentication mode.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="securityLevel" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" /> value.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites">
      <summary>Gets a read-only collection of sites that are in the configuration set.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" /> object that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects that are in the configuration set.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString">
      <summary>Returns the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the current <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" /> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> class identifies a specific directory and the credentials that are used to access the directory.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> class of the specified type that contains the credentials of the current user context.</summary>
      <param name="contextType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" /> members that specifies the type of context to create.  For this constructor, the context type must be <see cref="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain" /> or <see cref="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest" />.  Other types of directory contexts cannot be created using this constructor because other types require a constructor that includes a parameter specifying the directory or target name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="contextType" /> is not valid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This class does not work on the current platform.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> class of the specified type that contains the specified name and the credentials of the current user context.</summary>
      <param name="contextType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" /> members that specifies the type of context to create.</param>
      <param name="name">The target of the directory context. This string can take any of the formats defined in the Remarks section of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> topic.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="contextType" /> is not valid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This class does not work on the current platform.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> class of the specified type that contains the specified user name and password.</summary>
      <param name="contextType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" /> members that specifies the type of context to create. For this constructor, this parameter must be <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" />.</param>
      <param name="username">The user name to use for access.</param>
      <param name="password">The password to use for access.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="contextType" /> is not valid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This class does not work on the current platform.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> class of the specified type that contains the specified target, user name, and password.</summary>
      <param name="contextType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" /> members that specifies the type of context to create.</param>
      <param name="name">The target of the directory context. This string can take any of the formats defined in the Remarks section of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> topic.</param>
      <param name="username">The user name to use for access.</param>
      <param name="password">The password to use for access.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="contextType" /> is not valid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This class does not work on the current platform.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType">
      <summary>Gets the type of the context object.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" /> members that specifies the type of context.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name">
      <summary>Gets the name of the context.</summary>
      <returns>The name of the context.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName">
      <summary>Gets the user name of the context.</summary>
      <returns>The user name to use for access by this context.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType">
      <summary>Specifies the context type for an <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object represents a domain.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object represents a forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.DirectoryServer">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object represents a directory server.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ConfigurationSet">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object represents an AD LDS configuration set.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ApplicationPartition">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object represents an application partition.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> class is an abstract class that represents an Active Directory Domain Services server or AD LDS instance.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
      <summary>Uses the Knowledge Consistency Checker (KCC) to verify and recalculate the replication topology for this server.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
      <summary>Releases all managed and unmanaged resources that are used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
      <summary>Releases all unmanaged resources and, optionally, all managed resources that are used by the object.</summary>
      <param name="disposing">Determines if the managed resources should be released. true if the managed resources are released; false if the managed resources are not released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
      <summary>Retrieves all of the replication neighbors for this object.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> object that contains the replication neighbors for this object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the directory server.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
      <summary>Retrieves a collection of the replication connection failures for this directory server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" /> object that contains the replication connection failures for this directory server.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
      <summary>Retrieves the replication cursor information for the specified partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" /> that contains the replication cursor information.</returns>
      <param name="partition">The distinguished name of the partition for which to retrieve the replication cursor information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
      <summary>Retrieves the replication metadata for a specific Active Directory Domain Services object.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" /> object that contains the replication metadata for the specified object.</returns>
      <param name="objectPath">The path to the object for which to retrieve the replication metadata.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
      <summary>Retrieves the replication neighbors of this directory server for the specified partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> object that contains the replication neighbors for this object.</returns>
      <param name="partition">The distinguished name of the partition for which to retrieve the replication.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
      <summary>Retrieves the current and pending replication operations for this directory server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> object that contains the current and pending replication operations.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
      <summary>Retrieves the inbound replication connections for this directory server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> object that contains the inbound replication connections for this directory server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
      <summary>Retrieves the IP address of this directory server.</summary>
      <returns>The Internet protocol (IP) address of this directory server in string form.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)">
      <summary>Moves the directory server to another site within the forest or configuration set.</summary>
      <param name="siteName">The name of the site within the domain to which to move the directory server.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name">
      <summary>Gets the name of the directory server.</summary>
      <returns>The name of the directory server.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
      <summary>Gets the outbound replication connections for this directory server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> object that contains the outbound replication connections for this directory server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions">
      <summary>Gets the partitions on this directory server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" /> object that contains the distinguished names of the partitions on this directory server.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
      <summary>Gets the name of the site that this directory server belongs to.</summary>
      <returns>The name of the site that this directory server belongs to.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
      <summary>Gets or sets the synchronization delegate for this directory server.</summary>
      <returns>The delegate that this directory server will use for synchronization notifications.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <summary>Causes this directory server to synchronize the specified partition with all other directory servers in the same site that hosts the partition.</summary>
      <param name="partition">The distinguished name of the partition to synchronize.</param>
      <param name="options">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" /> members.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
      <summary>Causes this directory server to synchronize the specified partition with the specified directory server.</summary>
      <param name="partition">The distinguished name of the partition to synchronize.</param>
      <param name="sourceServer">The name of the server to synchronize the partition with.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString">
      <summary>Retrieves the name of the directory server.</summary>
      <returns>The name of the server.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
      <summary>Begins a synchronization of the specified partition.</summary>
      <param name="partition">The distinguished name of the partition to synchronize.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" /> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to this collection.</summary>
      <returns>The zero-based <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that is appended to this collection.</returns>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="server" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> array to this collection.</summary>
      <param name="servers">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="servers" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object is in this collection; otherwise, false.</returns>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="server" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object in this array.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object.</returns>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="server" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="server" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to get or set.</param>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> specified has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by <paramref name="newValue" />.</param>
      <param name="newValue">The element that replaced <paramref name="oldValue" />.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> method.</summary>
      <param name="value">The element in this collection to validate.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object.</summary>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="server" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.Domain">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> class represents an Active Directory domain.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Children">
      <summary>Gets the domains that are children of this domain.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> object that contains the child domains.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <summary>Creates the local side of a trust relationship with the specified domain.</summary>
      <param name="targetDomainName">The DNS name of the domain that the trust is created with.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> members that determines the direction of the trust, relative to this domain.</param>
      <param name="trustPassword">The password for the trust. See remarks below.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The trust relationship already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> or <paramref name="trustPassword" /> is empty.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> or <paramref name="trustPassword" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="direction" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Creates both sides of a trust relationship with the specified domain.</summary>
      <param name="targetDomain">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain that the trust is being created with.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> members that determines the direction of the trust, relative to this domain.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The trust relationship already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomain" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="direction" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)">
      <summary>Deletes the local side of a trust relationship.</summary>
      <param name="targetDomainName">The DNS name of the domain that the trust exists with.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> that is specified by the <paramref name="targetDomainName" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <summary>Deletes both sides of a trust relationship.</summary>
      <param name="targetDomain">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain that the trust exists with.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the specified <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomain" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers">
      <summary>Gets the domain controllers in this domain.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> object that contains the domain controllers in this domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode">
      <summary>Gets the mode that this domain is operating in.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> values that indicates the mode that this domain is operating in.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
      <summary>Finds all of the discoverable domain controllers in this domain.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> that contains the domain controller objects that were found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)">
      <summary>Finds all of the discoverable domain controllers in this domain that are also in the specified site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> that contains the domain controller objects that were found by this method.</returns>
      <param name="siteName">The name of the site to search for the domain controllers.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
      <summary>Finds all of the domain controllers in this domain.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> that contains the domain controller objects that were found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)">
      <summary>Finds all of the domain controllers in this domain that are also in the specified site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> that contains the domain controller objects that were found by this method.</returns>
      <param name="siteName">The name of the site to search for the domain controllers.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
      <summary>Finds any domain controller in this domain.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> that represents the domain controller that is found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A domain controller cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a domain controller in this domain that meets the specified criteria.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> that represents the domain controller that is found by this method.</returns>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of domain controller to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A domain controller cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="flag" /> parameter contains an invalid value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)">
      <summary>Finds a domain controller in this domain and in the specified site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that is found by this method.</returns>
      <param name="siteName">The name of the site to search for the domain controller.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A domain controller cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a domain controller in this domain and in the specified site that meets the specified criteria.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that is found by this method.</returns>
      <param name="siteName">The name of the site to search for the domain controller.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of domain controller to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A domain controller cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.<paramref name="siteName" /> is an empty string.<paramref name="flag" /> contains an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Forest">
      <summary>Gets the forest that this domain is a member of.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that represents the forest that this domain is a member of.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships">
      <summary>Retrieves all of the trust relationships for this domain.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> object that contains all of the trust relationships for this domain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain to which the local computer is joined.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain to which the local machine is joined.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the domain could not be made.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object for the current user credentials in effect for the security context under which the application is running.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain for the specified user credentials in effect for the security context under which the application is running.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the current context could not be made.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the default naming context of the domain.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object for the specified context.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain for the specified context.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object. The type of the context must be a domain or directory server.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context" /> could not be made.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)">
      <summary>Determines the authentication type of an inbound trust.</summary>
      <returns>true if the authentication of the trust is selective; false if the authentication is domain-wide.</returns>
      <param name="targetDomainName">The DNS name of the domain which with the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by the <paramref name="targetForestName" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic LsaQueryTrustedDomainInfoByName in the MSDN Library at http://msdn.microsoft.com/library.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)">
      <summary>Determines the SID filtering status of a trust.</summary>
      <returns>true if SID filtering is enabled; otherwise, false.</returns>
      <param name="targetDomainName">The DNS name of the domain which with the trust relationship exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by the <paramref name="targetForestName" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)">
      <summary>Gets the trust relationship between this domain and the specified domain.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object that represents the trust relationship between this domain and the specified domain.</returns>
      <param name="targetDomainName">The DNS name of the domain with which the trust relationship exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by the <paramref name="targetForestName" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner">
      <summary>Gets the infrastructure role owner for this domain.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that holds the infrastructure owner role.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Parent">
      <summary>Gets the parent domain of this domain.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the parent domain of this domain. null if this domain has no parent domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that holds the primary domain controller (PDC) for this domain.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that holds the PDC emulator role for this domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)">
      <summary>Raises the mode of operation for the domain.</summary>
      <param name="domainMode">An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> enumeration value that specifies the new operation level for the domain.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">Based on the current operating mode of the domain, the value specified for <paramref name="domainMode" /> is not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="domainMode" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> enumeration value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <summary>Repairs a trust relationship.</summary>
      <param name="targetDomain">An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> that is specified by <paramref name="targetDomain" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target or source server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomain" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner">
      <summary>Gets the RID master role holder for this domain.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that holds the relative identifier (RID) master role for this domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <summary>Enables or disables selective authentication for an inbound trust.</summary>
      <param name="targetDomainName">The DNS name of the domain with which the inbound trust exists.</param>
      <param name="enable">true if selective authentication is enabled; otherwise, false.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain controller that is specified by <paramref name="targetDomainName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)">
      <summary>Sets the SID filtering state for the specified domain.</summary>
      <param name="targetDomainName">The DNS name of the domain with which the trust exists.</param>
      <param name="enable">true if SID filtering must be enabled; otherwise, false.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by <paramref name="targetDomainName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <summary>Updates the password and trust direction for the local side of a trust relationship.</summary>
      <param name="targetDomainName">The DNS name of the domain with which a trust exists.</param>
      <param name="newTrustDirection">An <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value for the new trust direction for the trust relationship.</param>
      <param name="newTrustPassword">The new password for the trust.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by the <paramref name="targetDomainName" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> or <paramref name="newTrustPassword" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> or <paramref name="newTrustPassword" /> are null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="newTrustDirection" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <summary>Updates the password for the local side of a trust relationship.</summary>
      <param name="targetDomainName">The DNS name of the domain with which a trust exists.</param>
      <param name="newTrustPassword">The new password for the trust.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by <paramref name="targetDomainName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> or <paramref name="newTrustPassword" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> or <paramref name="newTrustPassword" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Updates the trust direction for an existing trust relationship. The trust directions are updated on both sides of the trust.</summary>
      <param name="targetDomain">An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain with which the trust exists.</param>
      <param name="newTrustDirection">An <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value that specifies the new trust direction for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by the <paramref name="targetDomain" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomain" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="newTrustDirection" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)">
      <summary>Verifies that a previously established outbound trust with the specified domain is valid.</summary>
      <param name="targetDomainName">The DNS name of the domain with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no outbound trust relationship with the domain that is specified by <paramref name="targetDomainName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetDomainName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomainName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Verifies that a previously established trust with the specified domain is valid.</summary>
      <param name="targetDomain">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain with which the trust exists.</param>
      <param name="direction">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value that specifies the direction, relative to this domain, of the trust.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by the <paramref name="targetDomain" /> parameter, or the target domain does not have the trust direction that is specified by the <paramref name="direction" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetDomain" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="direction" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object is in this collection; otherwise, false.</returns>
      <param name="domain">The <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="domains">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="domains" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domains" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)">
      <summary>Returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
      <param name="domain">The <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions">
      <summary>Specifies additional information about a forest trust collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" /> property value is <see cref="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain" />.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.None">
      <summary>No action has occurred.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByAdmin">
      <summary>The forest trust SID was disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByConflict">
      <summary>The forest trust SID was disabled due to a conflict with an existing SID.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByAdmin">
      <summary>The forest trust NetBIOS record was disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByConflict">
      <summary>The forest trust NetBIOS record was disabled due to a conflict with an existing NetBIOS record.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainController">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> class represents a domain controller in an Active Directory domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency">
      <summary>Uses the Knowledge Consistency Checker (KCC) to verify the replication topology for this domain controller.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime">
      <summary>Gets the current date and time from this domain controller.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the current date and time from this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)">
      <summary>Causes the object to release all managed and/or unmanaged resources.</summary>
      <param name="disposing">Determines if the managed resources should be released. true if the managed resources are released; otherwise, false.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain">
      <summary>Gets the domain that this domain controller is a member of.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain that this domain controller is a member of.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
      <summary>Promotes this domain controller to a global catalog server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds all domain controllers in the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> object that contains the domain controllers found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search. The target of this <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object is the name of the domain that will be searched for domain controllers.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds all domain controllers in the specified context and site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> object that contains the domain controllers that were found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for domain controllers.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds a single domain controller in the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that was found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No domain controller was found.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single domain controller in the specified context, allowing for additional search options.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that was found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of domain controller to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No domain controller was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="flag" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds a single domain controller in the specified context and site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that was found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a domain controller.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No domain controller was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="siteName" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single domain controller in the specified context and site, allowing for additional search options.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that was found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a domain controller.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of domain controller to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No domain controller was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" />, <paramref name="siteName" />, or <paramref name="flag" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest">
      <summary>Gets the forest that this domain controller is a member of.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that represents the forest that this domain controller is a member of.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors">
      <summary>Retrieves the replication neighbors for this domain controller.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> object that contains the replication neighbors for this domain controller.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectorySearcher" /> object for the domain controller.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectorySearcher" /> object for the domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object for the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that was found.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object. The target of this context must be a domain controller.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context" /> could not be made.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures">
      <summary>Retrieves a list of the replication connection failures recorded by this domain controller.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" /> object that contains the replication connection failures that were recorded by this domain controller.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)">
      <summary>Retrieves the replication cursor information for the specified partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" /> that contains the replication cursor information.</returns>
      <param name="partition">The distinguished name of the partition for which to retrieve the replication cursor information.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partition" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partition" /> is an empty string.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)">
      <summary>Retrieves the replication metadata for a specific Active Directory Domain Services object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" /> object that contains the replication metadata for the specified object.</returns>
      <param name="objectPath">The path to the object for which to retrieve the replication metadata.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectPath" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="objectPath" /> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)">
      <summary>Retrieves the replication neighbors for the specified partition.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> object that contains the replication neighbors for this object.</returns>
      <param name="partition">The distinguished name of the partition for which to retrieve the replication neighbors.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partition" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partition" /> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation">
      <summary>Retrieves the current and pending replication operations for this domain controller.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> object that contains the current and pending replication operations.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn">
      <summary>Gets the highest update sequence number that has been committed to this domain controller.</summary>
      <returns>The highest update sequence number (USN) that has been committed to this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections">
      <summary>Gets the inbound replication connections for this domain controller.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> object that contains the inbound replication connections for this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress">
      <summary>Gets the IP address of this domain controller.</summary>
      <returns>The Internet protocol (IP) address of this domain controller in string form.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog">
      <summary>Determines if this domain controller is a global catalog server.</summary>
      <returns>true if this domain controller is a global catalog server or false otherwise.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion">
      <summary>Gets the operating system version of this domain controller.</summary>
      <returns>The version of the operating system that is in use on this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections">
      <summary>Gets the outbound replication connections for this domain controller.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> object that contains the outbound replication connections for this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles">
      <summary>Gets the roles that this domain controller serves.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" /> object that contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> members that indicate the roles that this domain controller serves.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <summary>Causes this domain controller to take ownership of the specified role.</summary>
      <param name="role">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> members that specifies which role the domain controller should take ownership of.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="role" /> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName">
      <summary>Gets the name of the site that this domain controller belongs to.</summary>
      <returns>The name of the site that this domain controller belongs to.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The site name was not found.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback">
      <summary>Gets or sets the synchronization delegate for this domain controller.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" /> delegate that will be used for synchronization notifications.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <summary>Causes this domain controller to synchronize the specified partition with all other domain controllers.</summary>
      <param name="partition">The distinguished name of the partition for the domain controller to synchronize.</param>
      <param name="options">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" /> members.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partition" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partition" /> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">An error occurred in the synchronization operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)">
      <summary>Causes this domain controller to synchronize the specified partition with the specified domain controller.</summary>
      <param name="partition">The distinguished name of the partition with which to synchronize the domain controller.</param>
      <param name="sourceServer">The name of the server with which to synchronize the partition.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partition" /> or <paramref name="sourceServer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partition" /> or <paramref name="sourceServer" /> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <summary>Causes ownership of the specified role to be transferred to this domain controller.</summary>
      <param name="role">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> members that specifies which role will be transferred to this domain controller.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="role" /> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)">
      <summary>Begins a synchronization of the specified partition.</summary>
      <param name="partition">The distinguished name of the partition to synchronize.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partition" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partition" /> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object is in this collection; otherwise, false.</returns>
      <param name="domainController">The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domainController" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="domainControllers">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="domainControllers" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domainControllers" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object.</returns>
      <param name="domainController">The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domainController" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainMode">
      <summary>Indicates the mode that a domain is operating in.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain">
      <summary>The domain is operating in Windows 2000 mixed mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain">
      <summary>The domain is operating in Windows 2000 native mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain">
      <summary>The domain is operating in Windows Server 2003 domain-function mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain">
      <summary>The domain is operating in Windows Server 2003 mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008Domain">
      <summary>The domain is operating in  mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008R2Domain">
      <summary />
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> class represents an Active Directory Domain Services forest.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions">
      <summary>Gets a collection of all application partitions in the forest.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" /> object that contains all of the application partitions in this forest.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <summary>Creates the local side of a trust relationship with the specified forest.</summary>
      <param name="targetForestName">The DNS name of the forest that the trust is created with.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> members that determines the direction of the trust, relative to this forest.</param>
      <param name="trustPassword">The password for the trust. See the Remarks section for more information.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The trust relationship already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForest" /> name or <paramref name="trustPassword" /> string is empty.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForest" /> or <paramref name="trustPassword" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="direction" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Creates both sides of a trust relationship with the specified forest.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that represents the forest that the trust is being created with.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> members that determines the direction of the trust, relative to this forest.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The trust relationship already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForest" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="direction" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)">
      <summary>Deletes the local side of a trust relationship.</summary>
      <param name="targetForestName">The DNS name of the forest that the trust exists with.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by the <paramref name="targetForestName" /> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <summary>Deletes both sides of a trust relationship.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that represents the forest that the trust exists with.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the specified <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForest" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
      <summary>Releases all managed and unmanaged resources that are held by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean" /> value that determines if the managed resources should be released. true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Domains">
      <summary>Gets a collection of all domains in the forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> collection that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> domains in the current <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
      <summary>Finds all of the discoverable global catalogs in this forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> that contains the collection of global catalogs that were found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)">
      <summary>Finds all of the discoverable global catalogs in this forest in a specified site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> that contains the collection of global catalogs that were found.</returns>
      <param name="siteName">The name of the site to search.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
      <summary>Finds all the global catalogs in this forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> that contains the collection of global catalogs that were found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)">
      <summary>Finds all the global catalogs in this forest for a given site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> object that contains the collection of global catalogs that were found.</returns>
      <param name="siteName">The name of the site to search.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
      <summary>Finds any global catalog in this forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> of this <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A global catalog cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a global catalog in this forest for a specified location criteria.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object for the specified location criteria.</returns>
      <param name="flag">A <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> value specifying the location criteria.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A global catalog cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)">
      <summary>Finds a global catalog in this forest for a specified site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object for the specified site.</returns>
      <param name="siteName">The name of the site to search.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A global catalog cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a global catalog in this forest for a specified site and location criteria.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object for the specified site and location criteria.</returns>
      <param name="siteName">The name of the site to search.</param>
      <param name="flag">A <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> value that specifies the location criteria.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A global catalog cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="siteName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="siteName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode">
      <summary>Gets the operating mode of the forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> value that represents the current forest mode of this <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships">
      <summary>Gets a collection of the trust relationships of the current forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> objects that represents trust relationships of the current <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for the current user context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that represents the current forest.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that represents the forest that was retrieved by this method.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target that is specified in <paramref name="context" /> could not be made.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)">
      <summary>Gets a Boolean value that indicates whether selective authentication is enabled on the inbound trust relationship with the specified forest.  true if selective authentication is enabled; otherwise, false. For more information, see the Remarks section.</summary>
      <returns>true if selective authentication is enabled; otherwise, false.</returns>
      <param name="targetForestName">The DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> with which the inbound trust relationship exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic LsaQueryTrustedDomainInfoByName in the MSDN Library at http://msdn.microsoft.com/library.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)">
      <summary>Gets the SID filtering status of a trust.</summary>
      <returns>true if SID filtering is enabled; otherwise, false.</returns>
      <param name="targetForestName">The DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object with which the trust relationship exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)">
      <summary>Gets the trust relationship between this forest and the specified forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> object that represents the trust relationship between this forest and the specified forest.</returns>
      <param name="targetForestName">The name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for which the trust relationship information is to be obtained.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs">
      <summary>Gets a collection of all global catalogs in the forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> collection that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> global catalogs in the current <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Name">
      <summary>Gets the name of the forest.</summary>
      <returns>The name of this <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner">
      <summary>Gets the domain controller that holds the FSMO naming master role for the forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that is the FSMO naming master of this <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)">
      <summary>Raises the mode of operation for the forest.</summary>
      <param name="forestMode">A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> enumeration value that specifies the new operation level for the forest.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">Based on the current operating mode of the forest, the value specified for <paramref name="forestMode" /> is not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="forestMode" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> enumeration value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <summary>Repairs a trust relationship.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that represents the forest object with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that is specified by <paramref name="targetForest" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForest" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain">
      <summary>Gets the first domain that was created in a forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the first domain that was created in this <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Schema">
      <summary>Gets the schema of the forest.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> object that represents the schema of the current <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner">
      <summary>Gets the domain controller that holds the FSMO schema master role for the forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that is the FSMO schema master of this <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <summary>Enables or disables selective authentication for an inbound trust.</summary>
      <param name="targetForestName">The DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object with which the inbound trust relationship exists.</param>
      <param name="enable">true if selective authentication is to be enabled; otherwise, false.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)">
      <summary>Sets the SID filtering state with the specified forest.</summary>
      <param name="targetForestName">The DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object with which the trust relationship exists.</param>
      <param name="enable">true if SID filtering is to be enabled; otherwise, false.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Sites">
      <summary>Gets a collection of sites that are contained in the forest.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" /> that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> sites in the current <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.ToString">
      <summary>Returns a string representation of the current forest.</summary>
      <returns>A <see cref="T:System.String" /> that represents the DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <summary>Updates the password and trust direction for the local side of a trust relationship.</summary>
      <param name="targetForestName">The name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for which the local trust direction and password must be changed.</param>
      <param name="newTrustDirection">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value for the new trust direction for the trust relationship.</param>
      <param name="newTrustPassword">The new password for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> or <paramref name="newTrustPassword" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> or <paramref name="newTrustPassword" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="newTrustDirection" /> parameter is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <summary>Updates the password for the local side of a trust relationship.</summary>
      <param name="targetForestName">The name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for which the local trust password is to be changed.</param>
      <param name="newTrustPassword">The new password for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> or <paramref name="newTrustPassword" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> or <paramref name="newTrustPassword" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Updates the trust direction for a trust relationship. The trust directions are updated on both sides of the trust.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for which the trust directions must be changed.</param>
      <param name="newTrustDirection"> A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value that specifies the new trust direction for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForest" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForest" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="newTrustDirection" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)">
      <summary>Verifies that a previously established outbound trust with the specified forest is valid.</summary>
      <param name="targetForestName">The DNS name of the domain with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no outbound trust relationship with the forest that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Verifies that a previously established trust with the specified forest is valid.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for which to verify the trust relationship.</param>
      <param name="direction">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value that specifies the direction of the trust, relative to this forest.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForest" />, or the target forest does not have the trust direction that is specified by <paramref name="direction" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForest" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="direction" /> parameter is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestMode">
      <summary>Indicates the mode in which a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating in Windows 2000 mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating in Windows Server 2003 domain-function mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating in Windows Server 2003 mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating in  mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008R2Forest">
      <summary />
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class exception is thrown when a trust collision occurs during a trust relationship management request.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class with a specified error message, an underlying exception object, and a specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
      <param name="collisions">A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> object that contains one or more <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects that describe the trust relationship collision errors.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects that describe the trust relationship collision errors.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> that contains one or more <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects that describe the trust relationship collision errors.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains serialized object data about the exception being thrown. </param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.  </param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType">
      <summary>Specifies the collision type of a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName">
      <summary>The collision is between top-level domains. This collision type indicates a collision with a namespace element of another forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain">
      <summary>The collision is between domain cross-references. This collision type indicates a collision with a domain in the same forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other">
      <summary>The collision is not a collision between top-level domains or domain cross references.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object is in the collection; otherwise, false.</returns>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="information" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object.</returns>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="information" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object to get.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> class contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object and is contained in a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" /> object.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName">
      <summary>Gets the DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</summary>
      <returns>A string that contains the DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid">
      <summary>Gets the SID of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</summary>
      <returns>A string that contains the SID of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName">
      <summary>Gets the NetBIOS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</summary>
      <returns>A string that contains the NetBIOS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status">
      <summary>Gets or sets the status of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" /> values that represents the status of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="Status" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" /> enumeration value.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus">
      <summary>Indicates the status of a forest trust relationship.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled">
      <summary>The forest trust relationship is enabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled">
      <summary>The forest trust SID is disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled">
      <summary>The forest trust SID is disabled due to a conflict with an existing SID.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled">
      <summary>The forest trust NetBIOS record is disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled">
      <summary>The forest trust NetBIOS record is disabled due to a conflict with an existing NetBIOS record.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <summary>Represents a collision record resulting from a collision between forest trust records.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord">
      <summary>Gets the collision record from the underlying Active Directory Domain Services service.</summary>
      <returns>A <see cref="T:System.String" /> containing the collision record resulting from a collision between forest trust records.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" /> value for the forest trust collision.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" /> value indicating the collision type.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" /> value for the forest trust collision.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" /> value that provides information about the collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" /> type is <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" />.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" /> value for the forest trust collision.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" /> value that provides information about the collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" /> type is <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" />.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object is in the collection; otherwise, false.</returns>
      <param name="collision">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collision" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object.</returns>
      <param name="collision">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collision" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> class contains information about a trust relationship between two <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames">
      <summary>Gets the excluded top-level names in the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> object.</summary>
      <returns>A read/write <see cref="T:System.Collections.Specialized.StringCollection" /> that contains the excluded top-level names in the current object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save">
      <summary>Commits any changes to the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> properties to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">A collision occurred with an existing trust relationship. </exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames">
      <summary>Gets the top-level names in the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> object.</summary>
      <returns>A read-only <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" /> object that contains the top-level names in the current object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation">
      <summary>Gets the trusted domain information for this <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object.</summary>
      <returns>A read-only <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object  for the current object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> class represents a global catalog server. A global catalog server is a domain controller that hosts a replica of the global catalog. </summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog">
      <summary>Demotes this domain controller from a global catalog server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is not a global catalog server or the global catalog server has already been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog">
      <summary>Not supported for the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> class because this domain controller is already a global catalog server.</summary>
      <returns>Not applicable. This method will always throw an <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is already a global catalog server.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds all global catalog servers in the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> object that contains the global catalog servers found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search. The target of the context must be a forest.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds all global catalog servers in the specified context and site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> object that contains the global catalog servers found by the search.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search. The target of the context must be a forest.</param>
      <param name="siteName">The name of the site to search for global catalog servers.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="siteName" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties">
      <summary>Retrieves all of the Active Directory Domain Services properties that are stored on this global catalog server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> object that contains the Active Directory Domain Services properties that are stored on this global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is not a global catalog server or the global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds a single global catalog server in the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single global catalog server in the specified context, allowing for additional search options.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of global catalog server to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="flag" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds a single global catalog server in the specified context and site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a global catalog server.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="siteName" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single global catalog server in the specified context and site, allowing for additional search options.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a global catalog server.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of global catalog server to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" />, <paramref name="siteName" />, or <paramref name="flag" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectorySearcher" /> object for the global catalog server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectorySearcher" /> object for the global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object for the specified context.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server that was found.</returns>
      <param name="context">An  <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object. The target of the context must be a domain controller.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context" /> could not be made.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog">
      <summary>Determines if this domain controller is a global catalog server.</summary>
      <returns>true if this domain controller is a global catalog server; false if it is not a global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> is in this collection; otherwise, false.</returns>
      <param name="globalCatalog">The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="globalCatalog" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="globalCatalogs">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="globalCatalogs" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="globalCatalogs" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object.</returns>
      <param name="globalCatalog">The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="globalCatalog" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.HourOfDay">
      <summary>Indicates the hour of the day.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero">
      <summary>12:00 A.M. (midnight)</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One">
      <summary>1:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two">
      <summary>2:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three">
      <summary>3:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four">
      <summary>4:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five">
      <summary>5:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six">
      <summary>6:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven">
      <summary>7:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight">
      <summary>8:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine">
      <summary>9:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten">
      <summary>10:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven">
      <summary>11:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve">
      <summary>12:00 P.M. (noon)</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen">
      <summary>1:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen">
      <summary>2:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen">
      <summary>3:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen">
      <summary>4:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen">
      <summary>5:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen">
      <summary>6:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen">
      <summary>7:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty">
      <summary>8:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne">
      <summary>9:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo">
      <summary>10:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree">
      <summary>11:00 P.M.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.LocatorOptions">
      <summary>Specifies search flags for finding a domain controller in a domain.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery">
      <summary>Forces cached domain controller data to be ignored when searching for domain controllers.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired">
      <summary>Search only for domain controllers that are currently running the Kerberos Key Distribution Center service.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired">
      <summary>Search only for domain controllers that are currently running the Windows Time service.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.WriteableRequired">
      <summary>Search only for writeable domain controllers.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf">
      <summary>When searching for domain controllers from a domain controller, exclude this domain controller from the search. If the current computer is not a domain controller, this flag is ignored.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour">
      <summary>Indicates the 15-minute intervals within an hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero">
      <summary>Represents 0 to 14 minutes after the hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen">
      <summary>Represents 15 to 29 minutes after the hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty">
      <summary>Represents 30 to 44 minutes after the hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive">
      <summary>Represents 45 to 59 minutes after the hour.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.NotificationStatus">
      <summary>Represents the notification status of a replication connection. </summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification">
      <summary>Do not send notifications.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly">
      <summary>Send notifications only for intra-site connections.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways">
      <summary>Always send notifications.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.PropertyTypes">
      <summary>Specifies the property types to select when calling the <see cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" /> method.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed">
      <summary>A property that is indexed.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog">
      <summary>A property that is replicated in the global catalog.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is in this collection; otherwise, false.</returns>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemaClass" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="classes">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="classes" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="classes" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</returns>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemaClass" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object is in this collection; otherwise, false.</returns>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaProperty" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="properties">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="properties" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="properties" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaProperty" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object is in this collection; otherwise, false.</returns>
      <param name="directoryServer">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directoryServer" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="directoryServers">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="directoryServers" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directoryServers" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object.</returns>
      <param name="directoryServer">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directoryServer" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" /> class is a read-only collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object is in this collection.             </summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object is in this collection; otherwise, false.</returns>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects in this collection to the specified array, starting at the specified index of the target array.             </summary>
      <param name="sites">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="sites" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="sites" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object in this collection.             </summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object.</returns>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object in this collection.             </summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object is in this collection; otherwise, false.</returns>
      <param name="bridge">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bridge" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="bridges">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="bridges" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bridges" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</returns>
      <param name="bridge">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bridge" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object is in this collection; otherwise, false.</returns>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to search for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="link" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="links">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> array that receives the elements of this collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="links" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="links" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member in this collection is identical to the specified <paramref name="link" /> object.</returns>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to locate in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="link" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" /> class is a read-only collection that contains <see cref="T:System.String" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)">
      <summary>Determines if the specified <see cref="T:System.String" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.String" /> object is in this collection, otherwise, false.</returns>
      <param name="value">The <see cref="T:System.String" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies all <see cref="T:System.String" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="values">The array of <see cref="T:System.String" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="values" /> where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.String" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.String" /> object.</returns>
      <param name="value">The <see cref="T:System.String" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.String" /> object in this collection.</summary>
      <returns>The <see cref="T:System.String" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.String" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class represents a replication connection.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class, using the specified context, name, and source server.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that identifies the source server of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target of the <paramref name="context" /> parameter is not a domain controller or AD LDS instance.<paramref name="sourceServer" /> is invalid or an empty string.The target specified in the <paramref name="context" /> parameter does not match the server type specified in the <paramref name="sourceServer" /> parameter. The servers must both be either domain controllers or AD LDS instances.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are domain controllers, but are not in the same forest.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="sourceServer" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class, using the specified context, name, source server, and schedule.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that identifies the source server of the connection.</param>
      <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that specifies when the source is available for replication.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target of the <paramref name="context" /> parameter is not a domain controller or AD LDS instance.<paramref name="sourceServer" /> is invalid or an empty string.The target specified in the <paramref name="context" /> parameter does not match the server type specified in the <paramref name="sourceServer" /> parameter. The servers must both be either domain controllers or AD LDS instances.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are domain controllers, but are not in the same forest.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceServer" /> or <paramref name="schedule" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class, using the specified context, name, source server, schedule, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that identifies the source server of the connection.</param>
      <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that specifies when the source is available for replication.</param>
      <param name="transport">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> members that specifies the transport type of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target of the <paramref name="context" /> parameter is not a domain controller or AD LDS instance.<paramref name="sourceServer" /> is invalid or an empty string.The target specified in the <paramref name="context" /> parameter does not match the server type specified in the <paramref name="sourceServer" /> parameter. The servers must both be either domain controllers or AD LDS instances.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are domain controllers, but are not in the same forest.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceServer" /> or <paramref name="schedule" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="transport" /> is not valid.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="context" /> is an AD LDS instance and <paramref name="transport" /> is <see cref="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp" />, which is not supported.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class, using the specified context, name, source server, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to establish a replication connection with.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that identifies the source server of the connection.</param>
      <param name="transport">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> members that specifies the transport type of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target of the <paramref name="context" /> parameter is not a domain controller or AD LDS instance.<paramref name="sourceServer" /> is invalid or an empty string.The target specified in the <paramref name="context" /> parameter does not match the server type specified in the <paramref name="sourceServer" /> parameter. The servers must both be either domain controllers or AD LDS instances.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are domain controllers, but are not in the same forest.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="sourceServer" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="transport" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="context" /> is an AD LDS instance and <paramref name="transport" /> is <see cref="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp" />, which is not supported.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus">
      <summary>Gets or sets the change notification status of this replication connection.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" /> members that specifies the change notification status of this replication connection.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">When setting the property, the new value is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled">
      <summary>Gets or sets a value indicating whether this replication connection compresses data.</summary>
      <returns>true if this replication connection uses data compression; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete">
      <summary>Deletes this replication connection.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object has not yet been saved to the underlying directory store.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer">
      <summary>Gets the DNS name of the server that is the destination of this replication connection.</summary>
      <returns>A string that contains the DNS name of the server that is the destination of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
      <summary>Releases the unmanaged and managed resources held by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged and, optionally, the managed resources, held by the object.</summary>
      <param name="disposing">true to release the managed resources; otherwise, false.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled">
      <summary>Gets or sets a value indicating whether this replication connection is enabled.</summary>
      <returns>true if this replication connection is enabled; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Retrieves the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object that matches the specified target context and name.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object that represents the connection.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to search for.</param>
      <param name="name">The name of the connection to search for.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The connection could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="name" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="name" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc">
      <summary>Gets or sets a value indicating whether this replication connection was generated by the knowledge consistency checker (KCC).</summary>
      <returns>true if this replication connection was generated by the KCC; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the replication connection.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the target of the replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The current object has not been committed to the server. <see cref="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save" /> must be called first.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name">
      <summary>Gets the name of this replication connection.</summary>
      <returns>A string that contains the user-defined name of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled">
      <summary>Gets or sets a value indicating whether this replication connection supports reciprocal replication.</summary>
      <returns>true if this replication connection supports reciprocal replication; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule">
      <summary>Gets or sets the schedule on which the source server is available for replication.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that represents the schedule on which the source server is available for replication. If this property is null, then the default schedule is used.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser">
      <summary>Gets or sets a value indicating whether the replication schedule is owned by the user.</summary>
      <returns>true if the replication schedule is owned by the user; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan">
      <summary>Gets the span of this replication connection.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" /> members that specifies the span of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save">
      <summary>Commits the replication connection to the server. The replication connection object does not actually exist in Active Directory Domain Services until this method is called.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer">
      <summary>Gets the DNS name of the server that is the source of this replication connection.</summary>
      <returns>A string that contains the DNS name of the server that is the source of this replication connection.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString">
      <summary>Retrieves the name of the replication connection.</summary>
      <returns>A string that contains the name of the replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType">
      <summary>Gets the type of transport that is used by this replication connection.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> members that specifies the type of transport that is used by this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> class is a read-only collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object is in this collection; otherwise, false.</returns>
      <param name="connection">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connection" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="connections">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="connections" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connections" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of the collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object.</returns>
      <param name="connection">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connection" /> parameter is null.</exception>
      <exception cref="T:System.InvalidOperationException">The specified <paramref name="connection" /> does not exist.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> class represents a replication operation occurrence.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime">
      <summary>Gets the time of the last successful replication synchronization with the replication source server.</summary>
      <returns>The time at which the last successful replication synchronization occurred.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not supported on Windows 2000.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName">
      <summary>Gets the name of the partition to which this replication operation was applied.</summary>
      <returns>The name of the partition represented by this replication cursor.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId">
      <summary>Gets the invocation identifier of the replication source server.</summary>
      <returns>The invocation identifier of the replication source server</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer">
      <summary>Gets the name of the replication source server.</summary>
      <returns>The name of the replication source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn">
      <summary>Gets the maximum update sequence number (USN) for which the destination server has accepted changes from the source server.</summary>
      <returns>The maximum update sequence number (USN) for which the destination server has accepted changes from the source server.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object is in this collection; otherwise, false.</returns>
      <param name="cursor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="values">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="values" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="values" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object.</returns>
      <param name="cursor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <summary>Contains information about a failed replication attempt.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount">
      <summary>Gets the number of consecutive failures since the last successful replication. </summary>
      <returns>The number of consecutive failures since the last successful replication.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime">
      <summary>Gets the date and time that the first failure occurred.</summary>
      <returns>The date and time that the first failure occurred when replicating from the source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode">
      <summary>Gets the error code for the most recent failure.</summary>
      <returns>An HRESULT that contains the error code that is associated with the most recent failure. This will be ERROR_SUCCESS if the specific error is unavailable.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage">
      <summary>Gets the error message for the most recent failure.</summary>
      <returns>The error message for the most recent failure.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer">
      <summary>Gets the DNS name of the source server.</summary>
      <returns>The DNS name of the source server.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object is in this collection; otherwise, false.</returns>
      <param name="failure">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="failure" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="failures">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="failures" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="failures" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object.</returns>
      <param name="failure">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="failure" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> class contains information about a replication neighbor of an <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount">
      <summary>Gets the number of replication failures since the last successful replication cycle.</summary>
      <returns>The number of failed replication attempts from this source since the last successful replication attempt. If no previous attempt was successful, the return value is the number of failed replication attempts since the source was added as a neighbor.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync">
      <summary>Gets the time of the last replication attempt from this source.</summary>
      <returns>The time of the last replication attempt. If no replication attempt occurred, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync">
      <summary>Gets the time of the last successful replication cycle from this source.</summary>
      <returns>The time of the last successful synchronization. If no replication succeeded, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage">
      <summary>Gets the message that is associated with the last replication attempt from this source.</summary>
      <returns>The message that corresponds to the last replication attempt. If the last attempt succeeded, the value is an empty string. </returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult">
      <summary>Gets the error code that is associated with the last replication attempt from this source.</summary>
      <returns>The error code for the last replication attempt. If the last attempt succeeded, the value is ERROR_SUCCESS.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName">
      <summary>Gets the partition name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</summary>
      <returns>The name of the partition for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption">
      <summary>Gets the attribute and object settings for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" /> value that contains the attribute and option settings for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId">
      <summary>Gets the invocation identifier that was used by the replication source server in the last replication attempt.</summary>
      <returns>The invocation identifier that was used by the replication source server in the last replication attempt.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer">
      <summary>Gets the name of the replication source server.</summary>
      <returns>The name of the replication source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType">
      <summary>Gets the transport type that was used for replication.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> enumeration value that indicates the transport type that was used for the replication connection. </returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter">
      <summary>Gets the update sequence number (USN) value for the last successful replication cycle.</summary>
      <returns>The USN value for the last successful replication cycle. If no replication succeeded, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced">
      <summary>Gets the update sequence number (USN) of the last object update that was received.</summary>
      <returns>The USN of the last update that was received.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions">
      <summary>Specifies the options for a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable">
      <summary>The local copy of the naming context is writable.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup">
      <summary>Replication of this naming context from this source is attempted when the destination server is restarted. This normally only applies to intra-site neighbors.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync">
      <summary>Perform replication on a schedule. This option is normally set unless the schedule for this naming context/source is "never", that is, the empty schedule.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport">
      <summary>Perform replication indirectly through the Inter-Site Messaging Service. This flag is set only when replicating over SMTP. This flag is not set when replicating over inter-site RPC/IP.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync">
      <summary>If set, this option indicates that when inbound replication is complete, the destination server must tell the source server to synchronize in the reverse direction. This feature is used in dial-up scenarios where only one of the two servers can initiate a dial-up connection. For example, this option would be used in a corporate headquarters and branch office, where the branch office connects to the corporate headquarters over the Internet by means of a dial-up ISP connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent">
      <summary>This neighbor is in a state where it returns parent objects before children objects. It goes into this state after it receives a child object before its parent.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress">
      <summary>The destination server is performing a full synchronization from the source server. Full synchronizations do not use vectors that create updates (DS_REPL_CURSORS) for filtering updates. Full synchronizations are not used as a part of the normal replication protocol.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket">
      <summary>The last packet from the source indicated that an object that has not yet been created by the destination server has been modified. The next packet that is requested will instruct the source server to put all attributes of the modified object into the packet.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced">
      <summary>A synchronization has never been successfully completed from this source.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted">
      <summary>The replication engine has temporarily stopped processing this neighbor in order to service another higher-priority neighbor, either for this partition or another partition. The replication engine will resume processing this neighbor after the higher-priority work is completed.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications">
      <summary>This option is set to disable notification based synchronizations. Within a site, domain controllers synchronize with each other based on notifications when changes occur. This setting prevents this neighbor from performing syncs that are triggered by notifications. The neighbor will still do synchronizations based on its schedule, or if requested manually.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync">
      <summary>This option is set to disable synchronizations based on its schedule. The only way this neighbor will perform synchronizations is in response to a change notification or to a manual request for synchronizations.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges">
      <summary>Changes that are received from this source are compressed. This option is usually set only if the source server is in a different site.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications">
      <summary>No change notifications should be received from this source. This option is usually set only if the source server is in a different site.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet">
      <summary>This neighbor is in a state where it is rebuilding the contents of this replica because of a change in the partial attribute set.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object is in this collection, otherwise, false.</returns>
      <param name="neighbor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="neighbor" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="neighbors">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="neighbors" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="neighbors" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</returns>
      <param name="neighbor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="neighbor" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> class represents an Active Directory Domain Services replication operation.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber">
      <summary>Contains the operation number of this replication operation.</summary>
      <returns>An integer that contains the operation number of this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType">
      <summary>Contains the type of replication operation that this operation represents.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" /> members that indicates the type of replication operation that this operation represents.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName">
      <summary>Contains the distinguished name of the partition that is associated with this replication operation.</summary>
      <returns>A string that contains the distinguished name of the partition that is associated with this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority">
      <summary>Contains the priority of this replication operation.</summary>
      <returns>An integer that contains the priority of this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer">
      <summary>Contains the DNS name of the source server for this replication operation.</summary>
      <returns>A string that contains the DNS name of the source server for this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued">
      <summary>Contains the time that this replication operation was added to the operation queue.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the date and time that this replication operation was added to the operation queue.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object is in this collection; otherwise, false.</returns>
      <param name="operation">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operation" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="operations">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="operations" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operations" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object.</returns>
      <param name="operation">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operation" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> class contains information about an Active Directory Domain Services replication operation.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> class.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation">
      <summary>Gets the current replication operation.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object that represents the current replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime">
      <summary>Gets the time that this replication operation started.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the date and time that this replication operation started.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations">
      <summary>Gets the replication operations that have not been run.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" /> object that contains the pending replication operations.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType">
      <summary>Indicates a specific type of replication operation.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync">
      <summary>Indicates an inbound replication over an existing replication agreement from a direct replication partner.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add">
      <summary>Indicates the addition of a replication agreement for a new direct replication partner.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete">
      <summary>Indicates the removal of a replication agreement for an existing direct replication partner.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify">
      <summary>Indicates the modification of a replication agreement for an existing direct replication partner.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference">
      <summary>Indicates the addition, deletion, or update of outbound change notification data for a direct replication partner.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel">
      <summary>Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication">
      <summary>Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate">
      <summary>Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough">
      <summary>All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan">
      <summary>Determines the span of a replication connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite">
      <summary>The source and destination servers are in the same site.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite">
      <summary>The source and destination servers are in different sites.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SchemaClassType">
      <summary>
                     
                        Specifies the class type of an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.
                     </summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88">
      <summary>The class is a type 88 class. Classes defined before 1993 are not required to be included in another category; assigning classes to categories was not required in the X.500 1988 specification. Classes defined prior to the X.500 1993 standards default to the 1988 class. This type of class is specified by a value of 0 in the objectClassCategory attribute.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural">
      <summary>The class is a structural class.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract">
      <summary>The class is an abstract class.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary">
      <summary>The class is an auxiliary class.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory">
      <summary>Contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />. </summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer">
      <summary>The server could not be contacted for replication.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating">
      <summary>The replication operation failed to complete.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable">
      <summary>The server is not reachable.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <summary>Contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory">
      <summary>Gets the category of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" /> enumeration value that indicates the category of the error.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode">
      <summary>Gets the error code for the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</summary>
      <returns>A value that identifies the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception error.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage">
      <summary>Gets the message that describes the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</summary>
      <returns>A message that describes the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer">
      <summary>Gets the name of the source server for which the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception occurred.</summary>
      <returns>The name of the source server that is involved in the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer">
      <summary>Gets the name of the target server for which the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception occurred.</summary>
      <returns>The name of the target server that is involved in the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent">
      <summary>Used in the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" /> delegate to specify the type of synchronization event. </summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error">
      <summary>An error occurred.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted">
      <summary>Synchronization of two servers has started.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted">
      <summary>Synchronization of two servers has just completed.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished">
      <summary>The entire replication process has completed.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception is thrown when the request to synchronize from all servers fails. </summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class with a specified error message, an underlying exception object, and a specified <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" /> object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
      <param name="errors">An array of one or more <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" /> objects that describe the errors.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation">
      <summary>Gets an array of <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" /> objects that describe the errors.</summary>
      <returns>An array of one or more <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" /> objects that describe the errors.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds serialized object data about the exception being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions">
      <summary>Specifies additional options when performing a synchronization.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None">
      <summary>No synchronization options.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable">
      <summary>Aborts the synchronization if any server cannot be contacted or if any server is unreachable.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly">
      <summary>Disables transitive replication. Synchronization is performed only with adjacent servers.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly">
      <summary>Disables all synchronization. The topology is analyzed and unavailable or unreachable servers are identified.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck">
      <summary>Assumes that all servers are responding. This will speed up the operation of this method, but if some servers are not responding, some transitive replications might be blocked.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward">
      <summary>Pushes changes from the home server out to all partners using transitive replication. This reverses the direction of replication and the order of execution of the replication sets from the usual mode of execution.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite">
      <summary>Synchronizes across site boundaries. By default, this method attempts to synchronize only with domain controllers in the same site as the home system. Set this flag to attempt to synchronize with all domain controllers in the enterprise forest. However, the domain controllers can be synchronized only if connected by a synchronous (RPC) transport.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback">
      <summary>Receives event notifications during a replica synchronization.</summary>
      <returns>true if the SyncReplicaFromAllServers method invoked on a <see cref="T:System.DirectoryServices.ActiveDirectory.ADAMInstance" />,  <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object should resume; false if the SyncReplicaFromAllServers method should terminate.</returns>
      <param name="eventType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" /> members that specifies the type of event.</param>
      <param name="targetServer">Contains the DNS name of the server that is the target of the replication. This parameter will be null if it is not used by the notification.</param>
      <param name="sourceServer">Contains the DNS name of the server that is the source of the replication. This parameter will be null if it is not used by the notification.</param>
      <param name="exception">A <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> object that contains additional information about any error that has occurred. This parameter will be null if no error has occurred.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <summary>Contains forest trust account information about a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name">
      <summary>Gets the name of a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status">
      <summary>Gets or sets the status of a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" /> value that contains the status of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" /> values.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object is in this collection; otherwise, false.</returns>
      <param name="name">The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="names">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="names" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> parameter that was specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="names" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object.</returns>
      <param name="name">The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)" /> property gets a <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> that is located at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter that was specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions">
      <summary>Specifies additional information about a forest trust collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" /> property value is <see cref="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName" />.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None">
      <summary>No action has occurred.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated">
      <summary>The forest trust account has been created and is disabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin">
      <summary>The forest trust account was disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict">
      <summary>The forest trust account was disabled due to a conflict with an existing forest trust account.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus">
      <summary>Indicates the forest trust account status of a top-level domain in a forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled">
      <summary>The forest trust account is enabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated">
      <summary>The forest trust account was disabled on creation.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled">
      <summary>The forest trust account is disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled">
      <summary>The forest trust account is disabled due to a conflict with an existing forest trust account.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustDirection">
      <summary>Indicates the direction of a trust.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound">
      <summary>This is a trusting domain or forest. The other domain or forest has access to the resources of this domain or forest. This domain or forest does not have access to resources that belong to the other domain or forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound">
      <summary>This is a trusted domain or forest. This domain or forest has access to resources of the other domain or forest. The other domain or forest does not have access to the resources of this domain or forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional">
      <summary>Each domain or forest has access to the resources of the other domain or forest.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> class contains information for a trust relationship between a pair of <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName">
      <summary>Obtains the name of the source <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects for this trust relationship.</summary>
      <returns>A string that contains the name of the source <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects for this trust relationship.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName">
      <summary>Obtains the name of the target <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects for this trust relationship.</summary>
      <returns>A string that contains the name of the target <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects for this trust relationship.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection">
      <summary>Obtains the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> objects for this trust relationship relative to the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects that created the trust.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value for this trust relationship relative to the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects that created the trust.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType">
      <summary>Obtains the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustType" /> object of the trust relationship.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustType" /> value that represents the type of the trust relationship.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> class contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object is contained in this collection.</summary>
      <returns>true if the specified object is in this collection; otherwise, false.</returns>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="information" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object.</returns>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="information" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustType">
      <summary>Indicates the type of a <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot">
      <summary>One of the domains in the trust relationship is a tree root.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild">
      <summary>The trust relationship is between a parent and a child domain.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink">
      <summary>The trust relationship is a shortcut between two domains that exists to optimize the authentication processing between two domains that are in separate domain trees.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.External">
      <summary>The trust relationship is with a domain outside of the current forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest">
      <summary>The trust relationship is between two forest root domains in separate Windows Server 2003 forests.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos">
      <summary>The trusted domain is an MIT Kerberos realm.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown">
      <summary>The trust is a non-specific type.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Data.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Server.DataAccessKind">
      <summary>Describes the type of access to user data for a user-defined method or function.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.DataAccessKind.None">
      <summary>The method or function does not access user data.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.DataAccessKind.Read">
      <summary>The method or function reads user data.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.Format">
      <summary>Used by <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> and <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> to indicate the serialization format of a user-defined type (UDT) or aggregate.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.Unknown">
      <summary>The serialization format is unknown.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.Native">
      <summary>The Native serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk. Types marked for Native serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members. Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <see cref="T:System.String" />), are not supported.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.UserDefined">
      <summary>The UserDefined serialization format gives the developer full control over the binary format through the <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" />.Write and <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" />.Read methods.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.IBinarySerialize">
      <summary>Provides custom implementation for user-defined type (UDT) and user-defined aggregate serialization and deserialization.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)">
      <summary>Generates a user-defined type (UDT) or user-defined aggregate from its binary form.</summary>
      <param name="r">The <see cref="T:System.IO.BinaryReader" /> stream from which the object is deserialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)">
      <summary>Converts a user-defined type (UDT) or user-defined aggregate into its binary format so that it may be persisted.</summary>
      <param name="w">The <see cref="T:System.IO.BinaryWriter" /> stream to which the UDT or user-defined aggregate is serialized.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Server.InvalidUdtException">
      <summary>Thrown when SQL Server or the ADO.NET <see cref="N:System.Data.SqlClient" /> provider detects an invalid user-defined type (UDT). </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.InvalidUdtException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Streams all the <see cref="T:Microsoft.SqlServer.Server.InvalidUdtException" /> properties into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class for the given <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlContext">
      <summary>Represents an abstraction of the caller's context, which provides access to the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, and <see cref="T:System.Security.Principal.WindowsIdentity" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable">
      <summary>Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.</summary>
      <returns>True if the context connection is available and the other <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> members can be accessed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.Pipe">
      <summary>Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.</summary>
      <returns>An instance of <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> if a pipe is available, or null if called in a context where pipe is not available (for example, in a user-defined function).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext">
      <summary>Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.</summary>
      <returns>An instance of <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> if a trigger context is available, or null if called outside of a trigger invocation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity">
      <summary>The Microsoft Windows identity of the caller.</summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> instance representing the Windows identity of the caller, or null if the client was authenticated using SQL Server Authentication. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlDataRecord">
      <summary>Represents a single row of data and its metadata. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])">
      <summary>Inititializes a new <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> instance with the schema based on the array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> objects passed as an argument.</summary>
      <param name="metaData">An array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> objects that describe each column in the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="metaData" /> is null. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount">
      <summary>Gets the number of columns in the data row. This property is read-only.</summary>
      <returns>The number of columns in the data row as an integer.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Boolean" />.</summary>
      <returns>The column value as a <see cref="T:System.Boolean" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Byte" />.</summary>
      <returns>The column value as a <see cref="T:System.Byte" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as an array of <see cref="T:System.Byte" /> objects.</summary>
      <returns>The number of bytes copied.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="fieldOffset">The offset into the field value to start retrieving bytes.</param>
      <param name="buffer">The target buffer to which to copy bytes.</param>
      <param name="bufferOffset">The offset into the buffer to which to start copying bytes.</param>
      <param name="length">The number of bytes to copy to the buffer.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Char" />.</summary>
      <returns>The column value as a <see cref="T:System.Char" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as an array of <see cref="T:System.Char" /> objects.</summary>
      <returns>The number of characters copied.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="fieldOffset">The offset into the field value to start retrieving characters.</param>
      <param name="buffer">The target buffer to copy chars to.</param>
      <param name="bufferOffset">The offset into the buffer to start copying chars to.</param>
      <param name="length">The number of chars to copy to the buffer.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)">
      <summary>Returns the name of the data type for the column specified by the ordinal argument.</summary>
      <returns>A <see cref="T:System.String" /> that contains the data type of the column.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />). </exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.DateTime" />.</summary>
      <returns>The column value as a <see cref="T:System.DateTime" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)">
      <summary>Returns the specified column’s data as a <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>The value of the specified column as a <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Decimal" />.</summary>
      <returns>The column value as a <see cref="T:System.Decimal" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Double" />.</summary>
      <returns>The column value as a <see cref="T:System.Double" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)">
      <summary>Returns a <see cref="T:System.Type" /> object representing the common language runtime (CLR) type that maps to the SQL Server type of the column specified by the <paramref name="ordinal" /> argument.</summary>
      <returns>The column type as a <see cref="T:System.Type" /> object.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />). </exception>
      <exception cref="T:System.TypeLoadException">The column is of a user-defined type that is not available to the calling application domain.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The column is of a user-defined type that is not available to the calling application domain.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a float.</summary>
      <returns>The column value as a float.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Guid" />.</summary>
      <returns>The column value as a <see cref="T:System.Guid" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Int16" />.</summary>
      <returns>The column value as a <see cref="T:System.Int16" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Int32" />.</summary>
      <returns>The column value as a <see cref="T:System.Int32" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Int64" />.</summary>
      <returns>The column value as a <see cref="T:System.Int64" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)">
      <summary>Returns the name of the column specified by the ordinal argument.</summary>
      <returns>A <see cref="T:System.String" /> containing the column name.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />). </exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)">
      <summary>Returns the column ordinal specified by the column name.</summary>
      <returns>The zero-based ordinal of the column as an integer.</returns>
      <param name="name">The name of the column to look up.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The column name could not be found.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)">
      <summary>Returns a <see cref="T:System.Type" /> object that represents the type (as a SQL Server type, defined in <see cref="N:System.Data.SqlTypes" />) that maps to the SQL Server type of the column.</summary>
      <returns>The column type as a <see cref="T:System.Type" /> object.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />). </exception>
      <exception cref="T:System.TypeLoadException">The column is of a user-defined type that is not available to the calling application domain.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The column is of a user-defined type that is not available to the calling application domain.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> object, describing the metadata of the column specified by the column ordinal.</summary>
      <returns>The column metadata as a <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> object.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)">
      <summary>Returns the data value stored in the column, expressed as a SQL Server type, specified by the column ordinal.</summary>
      <returns>The value of the column, expressed as a SQL Server type, as a <see cref="T:System.Object" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])">
      <summary>Returns the values for all the columns in the record, expressed as SQL Server types, in an array.</summary>
      <returns>An <see cref="T:System.Int32" /> that indicates the number of columns copied.</returns>
      <param name="values">The array into which to copy the values column values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.String" />.</summary>
      <returns>The column value as a <see cref="T:System.String" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)">
      <summary>Returns the specified column’s data as a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The value of the specified column as a <see cref="T:System.TimeSpan" />.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)">
      <summary>Returns the common language runtime (CLR) type value for the column specified by the ordinal argument.</summary>
      <returns>The CLR type value of the column specified by the ordinal.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])">
      <summary>Returns the values for all the columns in the record, expressed as common language runtime (CLR) types, in an array.</summary>
      <returns>An <see cref="T:System.Int32" /> that indicates the number of columns copied.</returns>
      <param name="values">The array into which to copy the values column values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)">
      <summary>Returns true if the column specified by the column ordinal parameter is null.</summary>
      <returns>true if the column is null; false otherwise.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)">
      <summary>Gets the common language runtime (CLR) type value for the column specified by the column <paramref name="ordinal" /> argument.</summary>
      <returns>The CLR type value of the column specified by the <paramref name="ordinal" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)">
      <summary>Gets the common language runtime (CLR) type value for the column specified by the column <paramref name="name" /> argument.</summary>
      <returns>The CLR type value of the column specified by the <paramref name="name" />.</returns>
      <param name="name">The name of the column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Boolean" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Byte" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Sets the data stored in the column to the specified array of <see cref="T:System.Byte" /> values.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="fieldOffset">The offset into the field value to start copying bytes.</param>
      <param name="buffer">The target buffer from which to copy bytes.</param>
      <param name="bufferOffset">The offset into the buffer from which to start copying bytes.</param>
      <param name="length">The number of bytes to copy from the buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Char" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Sets the data stored in the column to the specified array of <see cref="T:System.Char" /> values.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="fieldOffset">The offset into the field value to start copying characters.</param>
      <param name="buffer">The target buffer from which to copy chars.</param>
      <param name="bufferOffset">The offset into the buffer from which to start copying chars.</param>
      <param name="length">The number of chars to copy from the buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.DateTime" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)">
      <summary>Sets the value of the column specified to the <see cref="T:System.DateTimeOffset" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)">
      <summary>Sets the value in the specified column to <see cref="T:System.DBNull" />.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Decimal" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Double" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)">
      <summary>Sets the data stored in the column to the specified float value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Guid" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Int16" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Int32" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Int64" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBinary" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlByte" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBytes" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlChars" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDateTime" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDouble" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlGuid" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt16" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt64" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlMoney" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlString" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlXml" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.String" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)">
      <summary>Sets the value of the column specified to the <see cref="T:System.TimeSpan" />.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> passed in is a negative number.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.TimeSpan" /> value passed in is greater than 24 hours in length.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)">
      <summary>Sets a new value, expressed as a common language runtime (CLR) type, for the column specified by the column ordinal.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value for the specified column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])">
      <summary>Sets new values for all of the columns in the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />. These values are expressed as common language runtime (CLR) types.</summary>
      <returns>The number of column values set as an integer.</returns>
      <param name="values">The array of new values, expressed as CLR types boxed as <see cref="T:System.Object" /> references, for the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The size of values does not match the number of columns in the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> instance.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Not supported in this release.</summary>
      <returns>
        <see cref="T:System.Data.IDataReader" />Always throws an exception.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlFacetAttribute">
      <summary>Annotates the returned result of a user-defined type (UDT) with additional information that can be used in Transact-SQL.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlFacetAttribute.#ctor">
      <summary>An optional attribute on a user-defined type (UDT) return type, used to annotate the returned result with additional information that can be used in Transact-SQL.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength">
      <summary>Indicates whether the return type of the user-defined type is of a fixed length.</summary>
      <returns>true if the return type is of a fixed length; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable">
      <summary>Indicates whether the return type of the user-defined type can be null.</summary>
      <returns>true if the return type of the user-defined type can be null; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize">
      <summary>The maximum size, in logical units, of the underlying field type of the user-defined type.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the maximum size, in logical units, of the underlying field type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision">
      <summary>The precision of the return type of the user-defined type.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the precision of the return type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale">
      <summary>The scale of the return type of the user-defined type.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the scale of the return type.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlFunctionAttribute">
      <summary>Used to mark a method definition of a user-defined aggregate as a function in SQL Server. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlFunctionAttribute.#ctor">
      <summary>An optional attribute on a user-defined aggregate, used to indicate that the method should be registered in SQL Server as a function. Also used to set the <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.Name" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess" />, and <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition" /> properties of the function attribute.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess">
      <summary>Indicates whether the function involves access to user data stored in the local instance of SQL Server.</summary>
      <returns>
        <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.None: Does not access data. <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.Read: Only reads user data.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName">
      <summary>The name of a method in the same class as the table-valued function (TVF) that is used by the TVF contract.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name of a method used by the TVF contract.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic">
      <summary>Indicates whether the user-defined function is deterministic.</summary>
      <returns>true if the function is deterministic; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise">
      <summary>Indicates whether the function involves imprecise computations, such as floating point operations.</summary>
      <returns>true if the function involves precise computations; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.Name">
      <summary>The name under which the function should be registered in SQL Server.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name under which the function should be registered.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess">
      <summary>Indicates whether the function requires access to data stored in the system catalogs or virtual system tables of SQL Server.</summary>
      <returns>
        <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.None: Does not access system data. <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.Read: Only reads system data.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition">
      <summary>A string that represents the table definition of the results, if the method is used as a table-valued function (TVF).</summary>
      <returns>A <see cref="T:System.String" /> value representing the table definition of the results.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMetaData">
      <summary>Specifies and retrieves metadata information from parameters and columns of <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name and type.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, precision, and scale.</summary>
      <param name="name">The name of the parameter or column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="precision">The precision of the parameter or column.</param>
      <param name="scale">The scale of the parameter or column.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="scale" /> was greater than <paramref name="precision" />. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, precision, scale, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="precision">The precision of the parameter or column.</param>
      <param name="scale">The scale of the parameter or column.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, and maximum length.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT).</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <param name="precision">The precision of the parameter or column.</param>
      <param name="scale">The scale of the parameter or column.</param>
      <param name="locale">The locale ID of the parameter or column.</param>
      <param name="compareOptions">The comparison rules of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="userDefinedType" /> points to a type that does not have <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> declared.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT). This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <param name="precision">The precision of the parameter or column.</param>
      <param name="scale">The scale of the parameter or column.</param>
      <param name="localeId">The locale ID of the parameter or column.</param>
      <param name="compareOptions">The comparison rules of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, locale, and compare options.</summary>
      <param name="name">The name of the parameter or column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type. </param>
      <param name="locale">The locale ID of the parameter or column.</param>
      <param name="compareOptions">The comparison rules of the parameter or column.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, locale, compare options, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <param name="locale">The locale ID of the parameter or column.</param>
      <param name="compareOptions">The comparison rules of the parameter or column.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, database name, owning schema, and object name.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="database">The database name of the XML schema collection of a typed XML instance.</param>
      <param name="owningSchema">The relational schema name of the XML schema collection of a typed XML instance.</param>
      <param name="objectName">The name of the XML schema collection of a typed XML instance.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null, or <paramref name="objectName" /> is null when <paramref name="database" /> and <paramref name="owningSchema" /> are non-null.</exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, database name, owning schema, object name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="database">The database name of the XML schema collection of a typed XML instance.</param>
      <param name="owningSchema">The relational schema name of the XML schema collection of a typed XML instance.</param>
      <param name="objectName">The name of the XML schema collection of a typed XML instance.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, and user-defined type (UDT).</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="userDefinedType" /> points to a type that does not have <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> declared. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, user-defined type (UDT), and SQLServer type.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <param name="serverTypeName">The SQL Server type name for <paramref name="userDefinedType" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, user-defined type, SQL Server type, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <param name="serverTypeName">The SQL Server type name for <paramref name="userDefinedType" />.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)">
      <summary>Validates the specified <see cref="T:System.Boolean" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Boolean" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)">
      <summary>Validates the specified <see cref="T:System.Byte" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Byte" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])">
      <summary>Validates the specified array of <see cref="T:System.Byte" /> values against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as an array of <see cref="T:System.Byte" /> values.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)">
      <summary>Validates the specified <see cref="T:System.Char" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Char" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])">
      <summary>Validates the specified array of <see cref="T:System.Char" /> values against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as an array <see cref="T:System.Char" /> values.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlBinary" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlByte" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlBytes" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlChars" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlDateTime" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlDouble" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlGuid" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt16" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt64" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlMoney" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlString" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlXml" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)">
      <summary>Validates the specified <see cref="T:System.DateTime" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.DateTime" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)">
      <summary>Validates the specified <see cref="T:System.DateTimeOffset" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as an array of <see cref="T:System.DateTimeOffset" /> values.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)">
      <summary>Validates the specified <see cref="T:System.Decimal" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Decimal" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)">
      <summary>Validates the specified <see cref="T:System.Double" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Double" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)">
      <summary>Validates the specified <see cref="T:System.Guid" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Guid" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)">
      <summary>Validates the specified <see cref="T:System.Int16" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Int16" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)">
      <summary>Validates the specified <see cref="T:System.Int32" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Int32" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)">
      <summary>Validates the specified <see cref="T:System.Int64" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Int64" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)">
      <summary>Validates the specified <see cref="T:System.Object" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Object" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)">
      <summary>Validates the specified <see cref="T:System.Single" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Single" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)">
      <summary>Validates the specified <see cref="T:System.String" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.String" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)">
      <summary>Validates the specified <see cref="T:System.TimeSpan" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as an array of <see cref="T:System.TimeSpan" /> values.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.CompareOptions">
      <summary>Gets the comparison rules used for the column or parameter.</summary>
      <returns>The comparison rules used for the column or parameter as a <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.DbType">
      <summary>Gets the data type of the column or parameter.</summary>
      <returns>The data type of the column or parameter as a <see cref="T:System.Data.DbType" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)">
      <summary>Infers the metadata from the specified object and returns it as a <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</summary>
      <returns>The inferred metadata as a <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</returns>
      <param name="value">The object used from which the metadata is inferred.</param>
      <param name="name">The name assigned to the returned <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">The v<paramref name="alue" /> is null. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey">
      <summary>Indicates if the column in the table-valued parameter is unique.</summary>
      <returns>A Boolean value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.LocaleId">
      <summary>Gets the locale ID of the column or parameter.</summary>
      <returns>The locale ID of the column or parameter as a <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Max">
      <summary>Gets the length of text, ntext, and image data types. </summary>
      <returns>The length of text, ntext, and image data types.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.MaxLength">
      <summary>Gets the maximum length of the column or parameter.</summary>
      <returns>The maximum length of the column or parameter as a <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Name">
      <summary>Gets the name of the column or parameter.</summary>
      <returns>The name of the column or parameter as a <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <paramref name="Name" /> specified in the constructor is longer than 128 characters. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Precision">
      <summary>Gets the precision of the column or parameter.</summary>
      <returns>The precision of the column or parameter as a <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Scale">
      <summary>Gets the scale of the column or parameter.</summary>
      <returns>The scale of the column or parameter.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrder">
      <summary>Returns the sort order for a column.</summary>
      <returns>A <see cref="T:System.Data.SqlClient.SortOrder" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal">
      <summary>Returns the ordinal of the sort column.</summary>
      <returns>The ordinal of the sort column.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SqlDbType">
      <summary>Gets the data type of the column or parameter.</summary>
      <returns>The data type of the column or parameter as a <see cref="T:System.Data.DbType" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Type">
      <summary>Gets the common language runtime (CLR) type of a user-defined type (UDT).</summary>
      <returns>The CLR type name of a user-defined type as a <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.TypeName">
      <summary>Gets the three-part name of the user-defined type (UDT) or the SQL Server type represented by the instance.</summary>
      <returns>The name of the UDT or SQL Server type as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault">
      <summary>Reports whether this column should use the default server value.</summary>
      <returns>A Boolean value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase">
      <summary>Gets the name of the database where the schema collection for this XML instance is located.</summary>
      <returns>The name of the database where the schema collection for this XML instance is located as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName">
      <summary>Gets the name of the schema collection for this XML instance.</summary>
      <returns>The name of the schema collection for this XML instance as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema">
      <summary>Gets the owning relational schema where the schema collection for this XML instance is located.</summary>
      <returns>The owning relational schema where the schema collection for this XML instance is located as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMethodAttribute">
      <summary>Indicates the determinism and data access properties of a method or property on a user-defined type (UDT). The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor">
      <summary>An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull">
      <summary>Indicates whether SQL Server should invoke the method on null instances.</summary>
      <returns>true if SQL Server should invoke the method on null instances; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator">
      <summary>Indicates whether a method on a user-defined type (UDT) is a mutator.</summary>
      <returns>true if the method is a mutator; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall">
      <summary>Indicates whether the method on a user-defined type (UDT) is called when null input arguments are specified in the method invocation.</summary>
      <returns>true if the method is called when null input arguments are specified in the method invocation; false if the method returns a null value when any of its input parameters are null.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlPipe">
      <summary>Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)">
      <summary>Executes the command passed as a parameter and sends the results to the client.</summary>
      <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">This method is not supported on commands bound to out-of-process connections.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client. This property is read-only.</summary>
      <returns>true if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Sends a single-row result set directly to the client or current output consumer.</summary>
      <param name="record">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="record" /> is null. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)">
      <summary>Sends a multirow result set directly to the client or current output consumer.</summary>
      <param name="reader">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="reader" /> is null. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)">
      <summary>Sends a string message directly to the client or current output consumer.</summary>
      <param name="message">The message string to be sent to the client.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> is null. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd">
      <summary>Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Sends a single row of data back to the client.</summary>
      <param name="record">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client. The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="record" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</summary>
      <param name="record">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="record" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="record" /> has no columns or has not been initialized.</exception>
      <exception cref="T:System.InvalidOperationException">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlProcedureAttribute">
      <summary>Used to mark a method definition in an assembly as a stored procedure. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlProcedureAttribute.#ctor">
      <summary>An attribute on a method definition in an assembly, used to indicate that the given method should be registered as a stored procedure in SQL Server.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlProcedureAttribute.Name">
      <summary>The name of the stored procedure.</summary>
      <returns>A <see cref="T:System.String" /> representing the name of the stored procedure.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlTriggerAttribute">
      <summary>Used to mark a method definition in an assembly as a trigger in SQL Server. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor">
      <summary>An attribute on a method definition in an assembly, used to mark the method as a trigger in SQL Server.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event">
      <summary>The type of trigger and what data manipulation language (DML) action activates the trigger.</summary>
      <returns>A <see cref="T:System.String" /> value representing the type of trigger and what data manipulation language (DML) action activates the trigger.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Name">
      <summary>The name of the trigger.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name of the trigger.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target">
      <summary>The table to which the trigger applies.</summary>
      <returns>A <see cref="T:System.String" /> value representing the table name.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlTriggerContext">
      <summary>Provides contextual information about the trigger that was fired. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount">
      <summary>Gets the number of columns contained by the data table bound to the trigger. This property is read-only.</summary>
      <returns>The number of columns contained by the data table bound to the trigger, as an integer. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData">
      <summary>Gets the event data specific to the action that fired the trigger.</summary>
      <returns>The event data specific to the action that fired the trigger as a <see cref="T:System.Data.SqlTypes.SqlXml" /> if more information is available; null otherwise.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)">
      <summary>Returns true if a column was affected by an INSERT or UPDATE statement.</summary>
      <returns>true if the column was affected by an INSERT or UPDATE operation.</returns>
      <param name="columnOrdinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.InvalidOperationException">Called in the context of a trigger where the value of the <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> property is not Insert or Update.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction">
      <summary>Indicates what action fired the trigger.</summary>
      <returns>The action that fired the trigger as a <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute">
      <summary>Indicates that the type should be registered as a user-defined aggregate. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor(Microsoft.SqlServer.Server.Format)">
      <summary>A required attribute on a user-defined aggregate, used to indicate that the given type is a user-defined aggregate and the storage format of the user-defined aggregate.</summary>
      <param name="format">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the aggregate.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format">
      <summary>The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Server.Format" /> representing the serialization format.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates">
      <summary>Indicates whether the aggregate is invariant to duplicates.</summary>
      <returns>true if the aggregate is invariant to duplicates; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls">
      <summary>Indicates whether the aggregate is invariant to nulls.</summary>
      <returns>true if the aggregate is invariant to nulls; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder">
      <summary>Indicates whether the aggregate is invariant to order.</summary>
      <returns>true if the aggregate is invariant to order; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty">
      <summary>Indicates whether the aggregate returns null if no values have been accumulated.</summary>
      <returns>true if the aggregate returns null if no values have been accumulated; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize">
      <summary>The maximum size, in bytes, of the aggregate instance.</summary>
      <returns>An <see cref="T:System.Int32" /> value representing the maximum size of the aggregate instance.</returns>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue">
      <summary>The maximum size, in bytes, required to store the state of this aggregate instance during computation.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name">
      <summary>The name of the aggregate.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name of the aggregate.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
      <summary>Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)">
      <summary>A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</summary>
      <param name="format">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format">
      <summary>The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered">
      <summary>Indicates whether the user-defined type is byte ordered.</summary>
      <returns>true if the user-defined type is byte ordered; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength">
      <summary>Indicates whether all instances of this user-defined type are the same length.</summary>
      <returns>true if all instances of this type are the same length; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize">
      <summary>The maximum size of the instance, in bytes.</summary>
      <returns>An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name">
      <summary>The SQL Server name of the user-defined type.</summary>
      <returns>A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName">
      <summary>The name of the method used to validate instances of the user-defined type.</summary>
      <returns>A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SystemDataAccessKind">
      <summary>Describes the type of access to system data for a user-defined method or function.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SystemDataAccessKind.None">
      <summary>The method or function does not access system data. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SystemDataAccessKind.Read">
      <summary>The method or function reads system data.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.TriggerAction">
      <summary>The <see cref="T:Microsoft.SqlServer.Server.TriggerAction" /> enumeration is used by the <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> class to indicate what action fired the trigger. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Invalid">
      <summary>An invalid trigger action, one that is not exposed to the user, occurred.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Insert">
      <summary>An INSERT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Update">
      <summary>An UPDATE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Delete">
      <summary>A DELETE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateTable">
      <summary>A CREATE TABLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterTable">
      <summary>An ALTER TABLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropTable">
      <summary>A DROP TABLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateIndex">
      <summary>A CREATE INDEX Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterIndex">
      <summary>An ALTER INDEX Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropIndex">
      <summary>A DROP INDEX Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSynonym">
      <summary>A CREATE SYNONYM Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSynonym">
      <summary>A DROP SYNONYM Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSecurityExpression">
      <summary>unused</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSecurityExpression">
      <summary>unused</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateView">
      <summary>A CREATE VIEW Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterView">
      <summary>An ALTER VIEW Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropView">
      <summary>A DROP VIEW Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateProcedure">
      <summary>A CREATE PROCEDURE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterProcedure">
      <summary>An ALTER PROCEDURE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropProcedure">
      <summary>A DROP PROCEDURE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateFunction">
      <summary>A CREATE FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterFunction">
      <summary>An ALTER FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropFunction">
      <summary>A DROP FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateTrigger">
      <summary>A CREATE TRIGGER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterTrigger">
      <summary>An ALTER TRIGGER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropTrigger">
      <summary>A DROP TRIGGER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateEventNotification">
      <summary>A CREATE EVENT NOTIFICATION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropEventNotification">
      <summary>A DROP EVENT NOTIFICATION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateType">
      <summary>A CREATE TYPE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropType">
      <summary>A DROP TYPE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateAssembly">
      <summary>A CREATE ASSEMBLY Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterAssembly">
      <summary>An ALTER ASSEMBLY Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropAssembly">
      <summary>A DROP ASSEMBLY Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateUser">
      <summary>A CREATE USER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterUser">
      <summary>An ALTER USER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropUser">
      <summary>A DROP USER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateRole">
      <summary>A CREATE ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterRole">
      <summary>An ALTER ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropRole">
      <summary>A DROP ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateAppRole">
      <summary>A CREATE APPLICATION ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterAppRole">
      <summary>An ALTER APPLICATION ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropAppRole">
      <summary>A DROP APPLICATION ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSchema">
      <summary>A CREATE SCHEMA Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterSchema">
      <summary>An ALTER SCHEMA Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSchema">
      <summary>A DROP SCHEMA Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateLogin">
      <summary>A CREATE LOGIN Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterLogin">
      <summary>An ALTER LOGIN Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropLogin">
      <summary>A DROP LOGIN Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateMsgType">
      <summary>A CREATE MESSAGE TYPE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropMsgType">
      <summary>A DROP MESSAGE TYPE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateContract">
      <summary>A CREATE CONTRACT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropContract">
      <summary>A DROP CONTRACT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateQueue">
      <summary>A CREATE QUEUE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterQueue">
      <summary>An ALTER QUEUE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropQueue">
      <summary>A DROP QUEUE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateService">
      <summary>A CREATE SERVICE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterService">
      <summary>An ALTER SERVICE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropService">
      <summary>A DROP SERVICE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateRoute">
      <summary>A CREATE ROUTE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterRoute">
      <summary>An ALTER ROUTE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropRoute">
      <summary>A DROP ROUTE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.GrantStatement">
      <summary>A GRANT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DenyStatement">
      <summary>A DENY Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.RevokeStatement">
      <summary>A REVOKE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.GrantObject">
      <summary>A GRANT OBJECT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DenyObject">
      <summary>A DENY Object Permissions Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.RevokeObject">
      <summary>A REVOKE OBJECT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateBinding">
      <summary>A CREATE_REMOTE_SERVICE_BINDING event type was specified when an event notification was created on the database or server instance.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterBinding">
      <summary>An ALTER_REMOTE_SERVICE_BINDING event type was specified when an event notification was created on the database or server instance.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropBinding">
      <summary>A DROP_REMOTE_SERVICE_BINDING event type was specified when an event notification was created on the database or server instance.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreatePartitionFunction">
      <summary>A CREATE PARTITION FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterPartitionFunction">
      <summary>An ALTER PARTITION FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropPartitionFunction">
      <summary>A DROP PARTITION FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreatePartitionScheme">
      <summary>A CREATE PARTITION SCHEME Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterPartitionScheme">
      <summary>An ALTER PARTITION SCHEME Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropPartitionScheme">
      <summary>A DROP PARTITION SCHEME Transact-SQL statement was executed.</summary>
    </member>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>Determines the action that occurs when the <see cref="M:System.Data.DataSet.AcceptChanges" /> or <see cref="M:System.Data.DataTable.RejectChanges" /> method is invoked on a <see cref="T:System.Data.DataTable" /> with a <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>No action occurs (default).</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>Changes are cascaded across the relationship.</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>Provides a description of the results of the query and its effect on the database.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>The query may return multiple result sets. Execution of the query may affect the database state. Default sets no <see cref="T:System.Data.CommandBehavior" /> flags, so calling ExecuteReader(CommandBehavior.Default) is functionally equivalent to calling ExecuteReader().</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>The query returns a single result set.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>The query returns column information only. When using <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>The query returns column and primary key information. </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>The query is expected to return a single row. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify <see cref="F:System.Data.CommandBehavior.SingleRow" /> with the <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> method of the <see cref="T:System.Data.OleDb.OleDbCommand" /> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB IRow interface if it is available. Otherwise, it uses the IRowset interface. If your SQL statement is expected to return only a single row, specifying <see cref="F:System.Data.CommandBehavior.SingleRow" /> can also improve application performance. It is possible to specify SingleRow when executing queries that return multiple result sets. In that case, multiple result sets are still returned, but each result set has a single row.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>Provides a way for the DataReader to handle rows that contain columns with large binary values. Rather than loading the entire row, SequentialAccess enables the DataReader to load data as a stream. You can then use the GetBytes or GetChars method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>When the command is executed, the associated Connection object is closed when the associated DataReader object is closed.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>Specifies how a command string is interpreted.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>An SQL text command. (Default.) </summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>The name of a stored procedure.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>The name of a table.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary>Specifies how conflicting changes to the data source will be detected and resolved.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary>Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying CompareAllValuesUpdate | CompareAllValuesDelete.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary>If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying CompareRowVersionUpdate | CompareRowVersionDelete.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary>All update and delete statements include only <see cref="P:System.Data.DataTable.PrimaryKey" /> columns in the WHERE clause. If no <see cref="P:System.Data.DataTable.PrimaryKey" /> is defined, all searchable columns are included in the WHERE clause. This is equivalent to OverwriteChangesUpdate | OverwriteChangesDelete.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>Describes the current state of the connection to a data source.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>The connection is closed.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>The connection is open.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>The connection object is connecting to the data source. (This value is reserved for future versions of the product.) </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>The connection object is executing a command. (This value is reserved for future versions of the product.) </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>The connection object is retrieving data. (This value is reserved for future versions of the product.) </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.) </summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>Represents a constraint that can be enforced on one or more <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Constraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Constraint" /> class.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> to which this constraint belongs.</summary>
      <returns>The <see cref="T:System.Data.DataSet" /> to which the constraint belongs.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> to which this constraint belongs.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>The name of a constraint in the <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns>The name of the <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.Constraint" /> name is a null value or empty string. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The <see cref="T:System.Data.ConstraintCollection" /> already contains a <see cref="T:System.Data.Constraint" /> with the same name (The comparison is not case-sensitive.). </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>Gets the collection of user-defined constraint properties.</summary>
      <returns>A <see cref="T:System.Data.PropertyCollection" /> of custom information.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary>Sets the constraint's <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to which this constraint will belong. </param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> to which the constraint applies.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> to which the constraint applies.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>Gets the <see cref="P:System.Data.Constraint.ConstraintName" />, if there is one, as a string.</summary>
      <returns>The string value of the <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>Represents a collection of constraints for a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>Adds the specified <see cref="T:System.Data.Constraint" /> object to the collection.</summary>
      <param name="constraint">The Constraint to add. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="constraint" /> argument is null. </exception>
      <exception cref="T:System.ArgumentException">The constraint already belongs to this collection, or belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a constraint with the same name. (The comparison is not case-sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Constructs a new <see cref="T:System.Data.UniqueConstraint" /> with the specified name, <see cref="T:System.Data.DataColumn" />, and value that indicates whether the column is a primary key, and adds it to the collection.</summary>
      <returns>A new UniqueConstraint.</returns>
      <param name="name">The name of the UniqueConstraint. </param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to which the constraint applies. </param>
      <param name="primaryKey">Specifies whether the column should be the primary key. If true, the column will be a primary key column. </param>
      <exception cref="T:System.ArgumentException">The constraint already belongs to this collection.-Or- The constraint belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a constraint with the specified name. (The comparison is not case-sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" /> with the specified name, parent column, and child column, and adds the constraint to the collection.</summary>
      <returns>A new <see cref="T:System.Data.ForeignKeyConstraint" />.</returns>
      <param name="name">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />. </param>
      <param name="primaryKeyColumn">The primary key, or parent, <see cref="T:System.Data.DataColumn" />. </param>
      <param name="foreignKeyColumn">The foreign key, or child, <see cref="T:System.Data.DataColumn" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Constructs a new <see cref="T:System.Data.UniqueConstraint" /> with the specified name, array of <see cref="T:System.Data.DataColumn" /> objects, and value that indicates whether the column is a primary key, and adds it to the collection.</summary>
      <returns>A new <see cref="T:System.Data.UniqueConstraint" />.</returns>
      <param name="name">The name of the <see cref="T:System.Data.UniqueConstraint" />. </param>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to which the constraint applies. </param>
      <param name="primaryKey">Specifies whether the column should be the primary key. If true, the column will be a primary key column.</param>
      <exception cref="T:System.ArgumentException">The constraint already belongs to this collection.-Or- The constraint belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a constraint with the specified name. (The comparison is not case-sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" />, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.</summary>
      <returns>A new <see cref="T:System.Data.ForeignKeyConstraint" />.</returns>
      <param name="name">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />. </param>
      <param name="primaryKeyColumns">An array of <see cref="T:System.Data.DataColumn" /> objects that are the primary key, or parent, columns. </param>
      <param name="foreignKeyColumns">An array of <see cref="T:System.Data.DataColumn" /> objects that are the foreign key, or child, columns. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.ConstraintCollection" /> array to the end of the collection.</summary>
      <param name="constraints">An array of <see cref="T:System.Data.ConstraintCollection" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>Indicates whether a <see cref="T:System.Data.Constraint" /> can be removed.</summary>
      <returns>true if the <see cref="T:System.Data.Constraint" /> can be removed from collection; otherwise, false.</returns>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to be tested for removal from the collection. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>Clears the collection of any <see cref="T:System.Data.Constraint" /> objects.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>Occurs whenever the <see cref="T:System.Data.ConstraintCollection" /> is changed because of <see cref="T:System.Data.Constraint" /> objects being added or removed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>Indicates whether the <see cref="T:System.Data.Constraint" /> object specified by name exists in the collection.</summary>
      <returns>true if the collection contains the specified constraint; otherwise, false.</returns>
      <param name="name">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance starting at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection.</param>
      <param name="index">The index of the array at which to start inserting. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>Gets the index of the specified <see cref="T:System.Data.Constraint" />.</summary>
      <returns>The zero-based index of the <see cref="T:System.Data.Constraint" /> if it is in the collection; otherwise, -1.</returns>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to search for. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>Gets the index of the <see cref="T:System.Data.Constraint" /> specified by name.</summary>
      <returns>The index of the <see cref="T:System.Data.Constraint" /> if it is in the collection; otherwise, -1.</returns>
      <param name="constraintName">The name of the <see cref="T:System.Data.Constraint" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.Constraint" /> from the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Data.Constraint" /> at the specified index.</returns>
      <param name="index">The index of the constraint to return. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.Constraint" /> from the collection with the specified name.</summary>
      <returns>The <see cref="T:System.Data.Constraint" /> with the specified name; otherwise a null value if the <see cref="T:System.Data.Constraint" /> does not exist.</returns>
      <param name="name">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint to return. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>Removes the specified <see cref="T:System.Data.Constraint" /> from the collection.</summary>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to remove. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="constraint" /> argument is null. </exception>
      <exception cref="T:System.ArgumentException">The constraint does not belong to the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Data.Constraint" /> object specified by name from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Data.Constraint" /> to remove. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.Constraint" /> object at the specified index from the collection.</summary>
      <param name="index">The index of the <see cref="T:System.Data.Constraint" /> to remove. </param>
      <exception cref="T:System.IndexOutOfRangeException">The collection does not have a constraint at this index. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>Represents the exception that is thrown when attempting an action that violates a constraint.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class. This is the default constructor.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class using the specified serialization and stream context.</summary>
      <param name="info">The data necessary to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class using the specified string and inner exception.</summary>
      <param name="message">The string to display when the exception is thrown. </param>
      <param name="innerException">Gets the Exception instance that caused the current exception.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" />. </param>
      <exception cref="T:System.ArgumentNullException">No <paramref name="dataType" /> was specified. </exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" />. </param>
      <param name="expr">The expression used to create this column. For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property. </param>
      <exception cref="T:System.ArgumentNullException">No <paramref name="dataType" /> was specified. </exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" />. </param>
      <param name="expr">The expression used to create this column. For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property. </param>
      <param name="type">One of the <see cref="T:System.Data.MappingType" /> values. </param>
      <exception cref="T:System.ArgumentNullException">No <paramref name="dataType" /> was specified. </exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</summary>
      <returns>true if null values values are allowed; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</summary>
      <returns>true if the value of the column increments automatically; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ArgumentException">The column is a computed column. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to true.</summary>
      <returns>The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to true.</summary>
      <returns>The number by which the value of the column is automatically incremented. The default is 1.</returns>
      <exception cref="T:System.ArgumentException">The value set is zero. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>Gets or sets the caption for the column.</summary>
      <returns>The caption of the column. If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</summary>
      <returns>One of the <see cref="T:System.Data.MappingType" /> values.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The name of the column.</returns>
      <exception cref="T:System.ArgumentException">The property is set to null or an empty string and the column belongs to a collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">A column with the same name already exists in the collection. The name comparison is not case sensitive. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>Gets or sets the type of data stored in the column.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the column data type.</returns>
      <exception cref="T:System.ArgumentException">The column already has data stored. - or -<see cref="P:System.Data.DataColumn.AutoIncrement" /> is true, but the value is set to a type a unsupported by <see cref="P:System.Data.DataColumn.AutoIncrement" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary>Gets or sets the DateTimeMode for the column.</summary>
      <returns>The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>Gets or sets the default value for the column when you are creating new rows.</summary>
      <returns>A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</returns>
      <exception cref="T:System.InvalidCastException">When you are adding a row, the default value is not an instance of the column's data type. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</summary>
      <returns>An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to true. </exception>
      <exception cref="T:System.FormatException">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter. </exception>
      <exception cref="T:System.InvalidCastException">When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">When you use the SUBSTRING function, the start argument is out of range.-Or- When you use the SUBSTRING function, the length argument is out of range. </exception>
      <exception cref="T:System.Exception">When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to <see cref="T:System.Char" />. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>A <see cref="T:System.Data.PropertyCollection" /> of custom information.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>Gets or sets the maximum length of a text column.</summary>
      <returns>The maximum length of the column in characters. If the column has no maximum length, the value is –1 (default).</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>The namespace of the <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException">The namespace already has data. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="pcevent">Parameter reference.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>Gets the position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</summary>
      <returns>The position of the column. Gets -1 if the column is not a member of a collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="name">Parameter reference.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</summary>
      <returns>true if the column is read only; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ArgumentException">The property is set to false on a computed column. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary>Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</summary>
      <param name="ordinal">The specified ordinal.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</summary>
      <returns>The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</summary>
      <returns>The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>Gets or sets a value that indicates whether the values in each row of the column must be unique.</summary>
      <returns>true if the value must be unique; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ArgumentException">The column is a calculated column. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataColumnChangeEventArgs" /> class.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> of the column with the changing value. </param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> with the changing value. </param>
      <param name="value">The new value. </param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>Gets the <see cref="T:System.Data.DataColumn" /> with a changing value.</summary>
      <returns>The <see cref="T:System.Data.DataColumn" /> with a changing value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>Gets or sets the proposed new value for the column.</summary>
      <returns>The proposed value, of type <see cref="T:System.Object" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>Gets the <see cref="T:System.Data.DataRow" /> of the column with a changing value.</summary>
      <returns>The <see cref="T:System.Data.DataRow" /> of the column with a changing value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>Represents a collection of <see cref="T:System.Data.DataColumn" /> objects for a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>Creates and adds a <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The newly created <see cref="T:System.Data.DataColumn" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>Creates and adds the specified <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to add. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The column already belongs to this collection, or to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception>
      <exception cref="T:System.Data.InvalidExpressionException">The expression is invalid. See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The newly created <see cref="T:System.Data.DataColumn" />.</returns>
      <param name="columnName">The name of the column. </param>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name and type to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The newly created <see cref="T:System.Data.DataColumn" />.</returns>
      <param name="columnName">The <see cref="P:System.Data.DataColumn.ColumnName" /> to use when you create the column. </param>
      <param name="type">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column. </param>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception>
      <exception cref="T:System.Data.InvalidExpressionException">The expression is invalid. See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name, type, and expression to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The newly created <see cref="T:System.Data.DataColumn" />.</returns>
      <param name="columnName">The name to use when you create the column. </param>
      <param name="type">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column. </param>
      <param name="expression">The expression to assign to the <see cref="P:System.Data.DataColumn.Expression" /> property. </param>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception>
      <exception cref="T:System.Data.InvalidExpressionException">The expression is invalid. See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.DataColumn" /> array to the end of the collection.</summary>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>Checks whether a specific column can be removed from the collection.</summary>
      <returns>true if the column can be removed; otherwise, false.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> in the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The column does not belong to this collection.-Or- The column is part of a relationship.-Or- Another column's expression depends on this column. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>Clears the collection of any columns.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>Occurs when the columns collection changes, either by adding or removing a column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>Checks whether the collection contains a column with the specified name.</summary>
      <returns>true if a column exists with this name; otherwise, false.</returns>
      <param name="name">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to look for. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary>Copies the entire collection into an existing array, starting at a specified index within the array.</summary>
      <param name="array">An array of <see cref="T:System.Data.DataColumn" /> objects to copy the collection into. </param>
      <param name="index">The index to start from.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>Gets the index of a column specified by name.</summary>
      <returns>The index of the column specified by <paramref name="column" /> if it is found; otherwise, -1.</returns>
      <param name="column">The name of the column to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>Gets the index of the column with the specific name (the name is not case sensitive).</summary>
      <returns>The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.</returns>
      <param name="columnName">The name of the column to find. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.DataColumn" /> from the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Data.DataColumn" /> at the specified index.</returns>
      <param name="index">The zero-based index of the column to return. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.DataColumn" /> from the collection with the specified name.</summary>
      <returns>The <see cref="T:System.Data.DataColumn" /> in the collection with the specified <see cref="P:System.Data.DataColumn.ColumnName" />; otherwise a null value if the <see cref="T:System.Data.DataColumn" /> does not exist.</returns>
      <param name="name">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to return. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>Removes the specified <see cref="T:System.Data.DataColumn" /> object from the collection.</summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to remove. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The column does not belong to this collection.-Or- The column is part of a relationship.-Or- Another column's expression depends on this column. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Data.DataColumn" /> object that has the specified name from the collection.</summary>
      <param name="name">The name of the column to remove. </param>
      <exception cref="T:System.ArgumentException">The collection does not have a column with the specified name. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>Removes the column at the specified index from the collection.</summary>
      <param name="index">The index of the column to remove. </param>
      <exception cref="T:System.ArgumentException">The collection does not have a column at the specified index. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataException">
      <summary>Represents the exception that is thrown when errors are generated using ADO.NET components.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class. This is the default constructor.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified serialization information and context.</summary>
      <param name="info">The data necessary to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified string and inner exception.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
      <param name="innerException">A reference to an inner exception. </param>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>Represents a parent/child relationship between two <see cref="T:System.Data.DataTable" /> objects.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name, and parent and child <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="relationName">The name of the <see cref="T:System.Data.DataRelation" />. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <see cref="T:System.Data.DataColumn" /> objects contains null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types -Or- The tables do not belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, parent and child <see cref="T:System.Data.DataColumn" /> objects, and a value that indicates whether to create constraints.</summary>
      <param name="relationName">The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the relation. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the relation. </param>
      <param name="createConstraints">A value that indicates whether constraints are created. true, if constraints are created. Otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <see cref="T:System.Data.DataColumn" /> objects contains null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types -Or- The tables do not belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name and matched arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="relationName">The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <see cref="T:System.Data.DataColumn" /> objects contains null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The <see cref="T:System.Data.DataColumn" /> objects have different data types -Or- One or both of the arrays are not composed of distinct columns from the same table.-Or- The tables do not belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, matched arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects, and value that indicates whether to create constraints.</summary>
      <param name="relationName">The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="createConstraints">A value that indicates whether to create constraints. true, if constraints are created. Otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <see cref="T:System.Data.DataColumn" /> objects is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types -Or- The tables do not belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>This constructor is provided for design time support in the Visual Studio environment.</summary>
      <param name="relationName">The name of the <see cref="T:System.Data.DataRelation" />. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentTableName">The name of the <see cref="T:System.Data.DataTable" /> that is the parent table of the relation.</param>
      <param name="parentTableNamespace">The name of the parent table namespace.</param>
      <param name="childTableName">The name of the <see cref="T:System.Data.DataTable" /> that is the child table of the relation. </param>
      <param name="childTableNamespace">The name of the child table namespace.</param>
      <param name="parentColumnNames">An array of <see cref="T:System.Data.DataColumn" /> object names in the parent <see cref="T:System.Data.DataTable" /> of the relation.</param>
      <param name="childColumnNames">An array of <see cref="T:System.Data.DataColumn" /> object names in the child <see cref="T:System.Data.DataTable" /> of the relation.</param>
      <param name="nested">A value that indicates whether relationships are nested.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>This constructor is provided for design time support in the Visual Studio environment.</summary>
      <param name="relationName">The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentTableName">The name of the <see cref="T:System.Data.DataTable" /> that is the parent table of the relation. </param>
      <param name="childTableName">The name of the <see cref="T:System.Data.DataTable" /> that is the child table of the relation. </param>
      <param name="parentColumnNames">An array of <see cref="T:System.Data.DataColumn" /> object names in the parent <see cref="T:System.Data.DataTable" /> of the relation. </param>
      <param name="childColumnNames">An array of <see cref="T:System.Data.DataColumn" /> object names in the child <see cref="T:System.Data.DataTable" /> of the relation. </param>
      <param name="nested">A value that indicates whether relationships are nested. </param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <exception cref="T:System.Data.DataException">The parent and child tables belong to different <see cref="T:System.Data.DataSet" /> objects.-Or- One or more pairs of parent and child <see cref="T:System.Data.DataColumn" /> objects have mismatched data types.-Or- The parent and child <see cref="T:System.Data.DataColumn" /> objects are identical. </exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>Gets the child <see cref="T:System.Data.DataColumn" /> objects of this relation.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>Gets the <see cref="T:System.Data.ForeignKeyConstraint" /> for the relation.</summary>
      <returns>A <see cref="T:System.Data.ForeignKeyConstraint" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>Gets the child table of this relation.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that is the child table of the relation.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> to which the <see cref="T:System.Data.DataRelation" /> belongs.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> to which the <see cref="T:System.Data.DataRelation" /> belongs.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>Gets the collection that stores customized properties.</summary>
      <returns>A <see cref="T:System.Data.PropertyCollection" /> that contains customized properties.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Data.DataRelation" /> objects are nested.</summary>
      <returns>true, if <see cref="T:System.Data.DataRelation" /> objects are nested; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="pcevent">Parameter reference.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>Gets an array of <see cref="T:System.Data.DataColumn" /> objects that are the parent columns of this <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects that are the parent columns of this <see cref="T:System.Data.DataRelation" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>Gets the <see cref="T:System.Data.UniqueConstraint" /> that guarantees that values in the parent column of a <see cref="T:System.Data.DataRelation" /> are unique.</summary>
      <returns>A <see cref="T:System.Data.UniqueConstraint" /> that makes sure that values in a parent column are unique.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>Gets the parent <see cref="T:System.Data.DataTable" /> of this <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that is the parent table of this relation.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="name">Parameter reference.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>Gets or sets the name used to retrieve a <see cref="T:System.Data.DataRelation" /> from the <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <returns>The name of the a <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException">null or empty string ("") was passed into a <see cref="T:System.Data.DataColumn" /> that is a <see cref="T:System.Data.DataRelation" />. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The <see cref="T:System.Data.DataRelation" /> belongs to a collection that already contains a <see cref="T:System.Data.DataRelation" /> with the same name. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>Gets the <see cref="P:System.Data.DataRelation.RelationName" />, if one exists.</summary>
      <returns>The value of the <see cref="P:System.Data.DataRelation.RelationName" /> property.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>Represents the collection of <see cref="T:System.Data.DataRelation" /> objects for this <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelationCollection" /> class. </summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with a specified parent and child column, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="parentColumn">The parent column of the relation. </param>
      <param name="childColumn">The child column of the relation. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified parent and child columns, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="parentColumns">The parent columns of the relation. </param>
      <param name="childColumns">The child columns of the relation. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> argument is a null value. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the same name. (The comparison is not case sensitive.) </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation has entered an invalid state since it was created. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>Adds a <see cref="T:System.Data.DataRelation" /> to the <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation">The DataRelation to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> parameter is a null value. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the specified name. (The comparison is not case sensitive.) </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation has entered an invalid state since it was created. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, and parent and child columns, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="name">The name of the relation. </param>
      <param name="parentColumn">The parent column of the relation. </param>
      <param name="childColumn">The child column of the relation. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, parent and child columns, with optional constraints according to the value of the <paramref name="createConstraints" /> parameter, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="name">The name of the relation. </param>
      <param name="parentColumn">The parent column of the relation. </param>
      <param name="childColumn">The child column of the relation. </param>
      <param name="createConstraints">true to create constraints; otherwise false. (The default is true). </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name and arrays of parent and child columns, and adds it to the collection.</summary>
      <returns>The created DataRelation.</returns>
      <param name="name">The name of the DataRelation to create. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child DataColumn objects. </param>
      <exception cref="T:System.ArgumentNullException">The relation name is a null value. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the same name. (The comparison is not case sensitive.) </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation has entered an invalid state since it was created. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="name">The name of the DataRelation to create. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child DataColumn objects. </param>
      <param name="createConstraints">true to create a constraint; otherwise false. </param>
      <exception cref="T:System.ArgumentNullException">The relation name is a null value. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the same name. (The comparison is not case sensitive.) </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation has entered an invalid state since it was created. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>Performs verification on the table.</summary>
      <param name="relation">The relation to check.</param>
      <exception cref="T:System.ArgumentNullException">The relation is null. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the same name. (The comparison is not case sensitive.) </exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.DataRelation" /> array to the end of the collection.</summary>
      <param name="relations">The array of <see cref="T:System.Data.DataRelation" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>Verifies whether the specified <see cref="T:System.Data.DataRelation" /> can be removed from the collection.</summary>
      <returns>true if the <see cref="T:System.Data.DataRelation" /> can be removed; otherwise, false.</returns>
      <param name="relation">The relation to perform the check against. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>Clears the collection of any relations.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>Occurs when the collection has changed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>Verifies whether a <see cref="T:System.Data.DataRelation" /> with the specific name (case insensitive) exists in the collection.</summary>
      <returns>true, if a relation with the specified name exists; otherwise false.</returns>
      <param name="name">The name of the relation to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary>Copies the collection of <see cref="T:System.Data.DataRelation" /> objects starting at the specified index.</summary>
      <param name="array">The array of <see cref="T:System.Data.DataRelation" /> objects to copy the collection to.</param>
      <param name="index">The index to start from.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The referenced DataSet.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>Gets the index of the specified <see cref="T:System.Data.DataRelation" /> object.</summary>
      <returns>The 0-based index of the relation, or -1 if the relation is not found in the collection.</returns>
      <param name="relation">The relation to search for. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>Gets the index of the <see cref="T:System.Data.DataRelation" /> specified by name.</summary>
      <returns>The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.</returns>
      <param name="relationName">The name of the relation to find. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.DataRelation" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Data.DataRelation" />, or a null value if the specified <see cref="T:System.Data.DataRelation" /> does not exist.</returns>
      <param name="index">The zero-based index to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.DataRelation" /> object specified by name.</summary>
      <returns>The named <see cref="T:System.Data.DataRelation" />, or a null value if the specified <see cref="T:System.Data.DataRelation" /> does not exist.</returns>
      <param name="name">The name of the relation to find. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event.</summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event.</summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>Removes the specified relation from the collection.</summary>
      <param name="relation">The relation to remove. </param>
      <exception cref="T:System.ArgumentNullException">The relation is a null value.</exception>
      <exception cref="T:System.ArgumentException">The relation does not belong to the collection.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>Removes the relation with the specified name from the collection.</summary>
      <param name="name">The name of the relation to remove. </param>
      <exception cref="T:System.IndexOutOfRangeException">The collection does not have a relation with the specified name.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>Removes the relation at the specified index from the collection.</summary>
      <param name="index">The index of the relation to remove. </param>
      <exception cref="T:System.ArgumentException">The collection does not have a relation at the specified index. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>Performs a verification on the specified <see cref="T:System.Data.DataRelation" /> object.</summary>
      <param name="relation">The DataRelation object to verify. </param>
      <exception cref="T:System.ArgumentNullException">The collection does not have a relation at the specified index. </exception>
      <exception cref="T:System.ArgumentException">The specified relation does not belong to this collection, or it belongs to another collection. </exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary>Represents a row of data in a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary>Initializes a new instance of the DataRow. Constructs a row from the builder. Only for internal usage..</summary>
      <param name="builder">builder </param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>Commits all the changes made to this row since the last time <see cref="M:System.Data.DataRow.AcceptChanges" /> was called.</summary>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>Starts an edit operation on a <see cref="T:System.Data.DataRow" /> object.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">The method was called upon a deleted row. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>Cancels the current edit on the row.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>Clears the errors for the row. This includes the <see cref="P:System.Data.DataRow.RowError" /> and errors set with <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>Deletes the <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">The <see cref="T:System.Data.DataRow" /> has already been deleted. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>Ends the edit occurring on the row.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event. </exception>
      <exception cref="T:System.Data.ConstraintException">The edit broke a constraint. </exception>
      <exception cref="T:System.Data.ReadOnlyException">The row belongs to the table and the edit tried to change the value of a read-only column. </exception>
      <exception cref="T:System.Data.NoNullAllowedException">The edit tried to put a null value into a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>Gets the child rows of this <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The relation is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have this version of data. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>Gets the error description of the specified <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>The text of the error description.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>Gets the error description for the column specified by index.</summary>
      <returns>The text of the error description.</returns>
      <param name="columnIndex">The zero-based index of the column. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="columnIndex" /> argument is out of range. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>Gets the error description for a column, specified by name.</summary>
      <returns>The text of the error description.</returns>
      <param name="columnName">The name of the column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>Gets an array of columns that have errors.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects that contain errors.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>The parent <see cref="T:System.Data.DataRow" /> of the current row.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> does not belong to the <see cref="T:System.Data.DataTable" />.The row is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">This row does not belong to the child table of the <see cref="T:System.Data.DataRelation" /> object. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to a table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>The parent <see cref="T:System.Data.DataRow" /> of the current row.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. </param>
      <exception cref="T:System.ArgumentNullException">The row is null.The <paramref name="relation" /> does not belong to this table's parent relations. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to a table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have this version of data. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>The parent <see cref="T:System.Data.DataRow" /> of the current row.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>The parent <see cref="T:System.Data.DataRow" /> of the current row.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.DataRelation" /> does not belong to this row's <see cref="T:System.Data.DataSet" />. </exception>
      <exception cref="T:System.ArgumentNullException">The row is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to a <see cref="T:System.Data.DataTable" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.DataRelation" /> does not belong to this row's <see cref="T:System.Data.DataSet" />. </exception>
      <exception cref="T:System.ArgumentNullException">The row is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to a <see cref="T:System.Data.DataTable" />. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>Gets a value that indicates whether there are errors in a row.</summary>
      <returns>true if the row contains an error; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>Gets a value that indicates whether a specified version exists.</summary>
      <returns>true if the version exists; otherwise, false.</returns>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Data.DataColumn" /> contains a null value.</summary>
      <returns>true if the column contains a null value; otherwise, false.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Data.DataColumn" /> and <see cref="T:System.Data.DataRowVersion" /> contains a null value.</summary>
      <returns>true if the column contains a null value; otherwise, false.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. Possible values are Default, Original, Current, and Proposed. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>Gets a value that indicates whether the column at the specified index contains a null value.</summary>
      <returns>true if the column contains a null value; otherwise, false.</returns>
      <param name="columnIndex">The zero-based index of the column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>Gets a value that indicates whether the named column contains a null value.</summary>
      <returns>true if the column contains a null value; otherwise, false.</returns>
      <param name="columnName">The name of the column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>Gets or sets the data stored in the specified <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the data.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> that contains the data. </param>
      <exception cref="T:System.ArgumentException">The column does not belong to this table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> is null. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to set a value on a deleted row. </exception>
      <exception cref="T:System.InvalidCastException">The data types of the value and the column do not match. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Gets the specified version of data stored in the specified <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the data.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> that contains information about the column. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version that you want. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.ArgumentException">The column does not belong to the table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> argument contains null. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have this version of data. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>Gets or sets the data stored in the column specified by index.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the data.</returns>
      <param name="columnIndex">The zero-based index of the column. </param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when you try to set a value on a deleted row. </exception>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="columnIndex" /> argument is out of range. </exception>
      <exception cref="T:System.InvalidCastException">Occurs when you set the value and the new value's <see cref="T:System.Type" /> does not match <see cref="P:System.Data.DataColumn.DataType" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>Gets the data stored in the column, specified by index and version of the data to retrieve.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the data.</returns>
      <param name="columnIndex">The zero-based index of the column. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version that you want. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="columnIndex" /> argument is out of range. </exception>
      <exception cref="T:System.InvalidCastException">The data types of the value and the column do not match. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have this version of data. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to set a value on a deleted row. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>Gets or sets the data stored in the column specified by name.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the data.</returns>
      <param name="columnName">The name of the column. </param>
      <exception cref="T:System.ArgumentException">The column specified by <paramref name="columnName" /> cannot be found. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when you try to set a value on a deleted row. </exception>
      <exception cref="T:System.InvalidCastException">Occurs when you set a value and its <see cref="T:System.Type" /> does not match <see cref="P:System.Data.DataColumn.DataType" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>Gets the specified version of data stored in the named column.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the data.</returns>
      <param name="columnName">The name of the column. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version that you want. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.ArgumentException">The column specified by <paramref name="columnName" /> cannot be found. </exception>
      <exception cref="T:System.InvalidCastException">The data types of the value and the column do not match. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have this version of data. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">The row was deleted. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>Gets or sets all the values for this row through an array.</summary>
      <returns>An array of type <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException">The array is larger than the number of columns in the table. </exception>
      <exception cref="T:System.InvalidCastException">A value in the array does not match its <see cref="P:System.Data.DataColumn.DataType" /> in its respective <see cref="T:System.Data.DataColumn" />. </exception>
      <exception cref="T:System.Data.ConstraintException">An edit broke a constraint. </exception>
      <exception cref="T:System.Data.ReadOnlyException">An edit tried to change the value of a read-only column. </exception>
      <exception cref="T:System.Data.NoNullAllowedException">An edit tried to put a null value in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> of the <see cref="T:System.Data.DataColumn" /> object is false. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">The row has been deleted. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>Rejects all changes made to the row since <see cref="M:System.Data.DataRow.AcceptChanges" /> was last called.</summary>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>Gets or sets the custom error description for a row.</summary>
      <returns>The text describing an error.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>Gets the current state of the row with regard to its relationship to the <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataRowState" /> values.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary>Changes the <see cref="P:System.Data.DataRow.Rowstate" /> of a <see cref="T:System.Data.DataRow" /> to Added. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>Sets the error description for a column specified as a <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to set the error description for. </param>
      <param name="error">The error description. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>Sets the error description for a column specified by index.</summary>
      <param name="columnIndex">The zero-based index of the column. </param>
      <param name="error">The error description. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="columnIndex" /> argument is out of range </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>Sets the error description for a column specified by name.</summary>
      <param name="columnName">The name of the column. </param>
      <param name="error">The error description. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary>Changes the <see cref="P:System.Data.DataRow.Rowstate" /> of a <see cref="T:System.Data.DataRow" /> to Modified. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>Sets the value of the specified <see cref="T:System.Data.DataColumn" /> to a null value.</summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" />.</summary>
      <param name="parentRow">The new parent <see cref="T:System.Data.DataRow" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" /> and <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="parentRow">The new parent <see cref="T:System.Data.DataRow" />. </param>
      <param name="relation">The relation <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.Data.RowNotInTableException">One of the rows does not belong to a table </exception>
      <exception cref="T:System.ArgumentNullException">One of the rows is null. </exception>
      <exception cref="T:System.ArgumentException">The relation does not belong to the <see cref="T:System.Data.DataRelationCollection" /> of the <see cref="T:System.Data.DataSet" /> object. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation's child <see cref="T:System.Data.DataTable" /> is not the table this row belongs to. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> for which this row has a schema.</summary>
      <returns>The <see cref="T:System.Data.DataTable" /> to which this row belongs.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>Describes an action performed on a <see cref="T:System.Data.DataRow" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>The row has not changed.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>The row was deleted from the table.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>The row has changed.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>The most recent change to the row has been rolled back.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>The changes to the row have been committed.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>The row has been added to the table.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary>The original version of the row has been changed.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary>The original and the current versions of the row have been changed.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary>The DataRowBuilder type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />, and <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> events.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRowChangeEventArgs" /> class.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> upon which an action is occuring. </param>
      <param name="action">One of the <see cref="T:System.Data.DataRowAction" /> values. </param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>Gets the action that has occurred on a <see cref="T:System.Data.DataRow" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataRowAction" /> values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>Gets the row upon which an action has occurred.</summary>
      <returns>The <see cref="T:System.Data.DataRow" /> upon which an action has occurred.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" />, and <see cref="E:System.Data.DataTable.RowDeleted" /> events of a <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>Represents a collection of rows for a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>Adds the specified <see cref="T:System.Data.DataRow" /> to the <see cref="T:System.Data.DataRowCollection" /> object.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to add. </param>
      <exception cref="T:System.ArgumentNullException">The row is null. </exception>
      <exception cref="T:System.ArgumentException">The row either belongs to another table or already belongs to this table. </exception>
      <exception cref="T:System.Data.ConstraintException">The addition invalidates a constraint. </exception>
      <exception cref="T:System.Data.NoNullAllowedException">The addition tries to put a null in a <see cref="T:System.Data.DataColumn" /> where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>Creates a row using specified values and adds it to the <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns>None.</returns>
      <param name="values">The array of values that are used to create the new row. </param>
      <exception cref="T:System.ArgumentException">The array is larger than the number of columns in the table. </exception>
      <exception cref="T:System.InvalidCastException">A value does not match its respective column type. </exception>
      <exception cref="T:System.Data.ConstraintException">Adding the row invalidates a constraint. </exception>
      <exception cref="T:System.Data.NoNullAllowedException">Trying to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>Clears the collection of all rows.</summary>
      <exception cref="T:System.Data.InvalidConstraintException">A <see cref="T:System.Data.ForeignKeyConstraint" /> is enforced on the <see cref="T:System.Data.DataRowCollection" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>Gets a value that indicates whether the primary key of any row in the collection contains the specified value.</summary>
      <returns>true if the collection contains a <see cref="T:System.Data.DataRow" /> with the specified primary key value; otherwise, false.</returns>
      <param name="key">The value of the primary key to test for. </param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">The table does not have a primary key. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.</summary>
      <returns>true if the <see cref="T:System.Data.DataRowCollection" /> contains a <see cref="T:System.Data.DataRow" /> with the specified key values; otherwise, false.</returns>
      <param name="keys">An array of primary key values to test for. </param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">The table does not have a primary key. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the <see cref="T:System.Data.DataRow" /> objects from the collection into the given array, starting at the given destination array index.</summary>
      <param name="ar">The one-dimensional array that is the destination of the elements copied from the DataRowCollection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary>Copies all the <see cref="T:System.Data.DataRow" /> objects from the collection into the given array, starting at the given destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the DataRowCollection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary>Gets the total number of <see cref="T:System.Data.DataRow" /> objects in this collection.</summary>
      <returns>The total number of <see cref="T:System.Data.DataRow" /> objects in this collection.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>Gets the row specified by the primary key value.</summary>
      <returns>A <see cref="T:System.Data.DataRow" /> that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the <see cref="T:System.Data.DataRowCollection" />.</returns>
      <param name="key">The primary key value of the <see cref="T:System.Data.DataRow" /> to find. </param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">The table does not have a primary key. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>Gets the row that contains the specified primary key values.</summary>
      <returns>A <see cref="T:System.Data.DataRow" /> object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the <see cref="T:System.Data.DataRowCollection" />.</returns>
      <param name="keys">An array of primary key values to find. The type of the array is Object. </param>
      <exception cref="T:System.IndexOutOfRangeException">No row corresponds to that index value. </exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException">The table does not have a primary key. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> for this collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for this collection.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary>Gets the index of the specified <see cref="T:System.Data.DataRow" /> object.</summary>
      <returns>The zero-based index of the row, or -1 if the row is not found in the collection.</returns>
      <param name="row">The DataRow to search for.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>Inserts a new row into the collection at the specified location.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to add. </param>
      <param name="pos">The location in the collection where you want to add the DataRow. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>Gets the row at the specified index.</summary>
      <returns>The specified <see cref="T:System.Data.DataRow" />.</returns>
      <param name="index">The zero-based index of the row to return. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>Removes the specified <see cref="T:System.Data.DataRow" /> from the collection.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to remove. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>Removes the row at the specified index from the collection.</summary>
      <param name="index">The index of the row to remove. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>Gets the state of a <see cref="T:System.Data.DataRow" /> object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>The row has been created but is not part of any <see cref="T:System.Data.DataRowCollection" />. A <see cref="T:System.Data.DataRow" /> is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>The row has not changed since <see cref="M:System.Data.DataRow.AcceptChanges" /> was last called.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>The row has been added to a <see cref="T:System.Data.DataRowCollection" />, and <see cref="M:System.Data.DataRow.AcceptChanges" /> has not been called.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>The row was deleted using the <see cref="M:System.Data.DataRow.Delete" /> method of the <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>The row has been modified and <see cref="M:System.Data.DataRow.AcceptChanges" /> has not been called.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>Describes the version of a <see cref="T:System.Data.DataRow" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>The row contains its original values.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>The row contains current values.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>The row contains a proposed value.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>The default version of <see cref="T:System.Data.DataRowState" />. For a DataRowState value of Added, Modified or Deleted, the default version is Current. For a <see cref="T:System.Data.DataRowState" /> value of Detached, the version is Proposed.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>Represents a customized view of a <see cref="T:System.Data.DataRow" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>Begins an edit procedure.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>Cancels an edit procedure.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>Returns a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" /> with the specified <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" />.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> object. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>Returns a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" /> with the specified <see cref="T:System.Data.DataRelation" /> name.</summary>
      <returns>a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" />.</returns>
      <param name="relationName">A string containing the <see cref="T:System.Data.DataRelation" /> name. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>Gets the <see cref="T:System.Data.DataView" /> to which this row belongs.</summary>
      <returns>The DataView to which this row belongs.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>Deletes a row.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>Ends an edit procedure.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>Gets a value indicating whether the current <see cref="T:System.Data.DataRowView" /> is identical to the specified object.</summary>
      <returns>true if <paramref name="object" /> is a <see cref="T:System.Data.DataRowView" /> and it returns the same row as the current <see cref="T:System.Data.DataRowView" />; otherwise false.</returns>
      <param name="other">An <see cref="T:System.Object" /> to be compared. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>Returns the hash code of the <see cref="T:System.Data.DataRow" /> object.</summary>
      <returns>A 32-bit signed integer hash code 1, which represents Boolean true if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>Indicates whether the row is in edit mode.</summary>
      <returns>true if the row is in edit mode; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>Indicates whether a <see cref="T:System.Data.DataRowView" /> is new.</summary>
      <returns>true if the row is new; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>Gets or sets a value in a specified column.</summary>
      <returns>The value of the column.</returns>
      <param name="ndx">The specified column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>Gets or sets a value in a specified column.</summary>
      <returns>The value of the column.</returns>
      <param name="property">String that contains the specified column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary>Event that is raised when a <see cref="T:System.Data.DataRowView" /> property is changed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>Gets the <see cref="T:System.Data.DataRow" /> being viewed.</summary>
      <returns>The <see cref="T:System.Data.DataRow" /> being viewed by the <see cref="T:System.Data.DataRowView" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>Gets the current version description of the <see cref="T:System.Data.DataRow" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataRowVersion" /> values. Possible values for the <see cref="P:System.Data.DataRowView.RowVersion" /> property are Default, Original, Current, and Proposed.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Returns an editor of the specified type for this instance of a component.</summary>
      <returns>An <see cref="T:System.Object" /> of the specified type that is the editor for this object, or null if the editor cannot be found.</returns>
      <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the editor for this object. </param>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns an object that contains the property described by the specified property descriptor.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the owner of the specified property.</returns>
      <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property whose owner is to be found. </param>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IDataErrorInfo.Error" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IDataErrorInfo.Error" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary>Gets the error message for the property with the given name.</summary>
      <returns>The error message for the property. The default is an empty string ("").</returns>
      <param name="colName">The name of the property whose error message to get. </param>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>Represents an in-memory cache of data.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataSet" /> class.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of a <see cref="T:System.Data.DataSet" /> class that has the given serialization information and context.</summary>
      <param name="info">The data needed to serialize or deserialize an object. </param>
      <param name="context">The source and destination of a given serialized stream. </param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataSet" /> class.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
      <param name="ConstructSchema">The boolean value.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>Initializes a new instance of a <see cref="T:System.Data.DataSet" /> class with the given name.</summary>
      <param name="dataSetName">The name of the <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>Commits all the changes made to this <see cref="T:System.Data.DataSet" /> since it was loaded or since the last time <see cref="M:System.Data.DataSet.AcceptChanges" /> was called.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>Begins the initialization of a <see cref="T:System.Data.DataSet" /> that is used on a form or used by another component. The initialization occurs at run time.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>Gets or sets a value indicating whether string comparisons within <see cref="T:System.Data.DataTable" /> objects are case-sensitive.</summary>
      <returns>true if string comparisons are case-sensitive; otherwise false. The default is false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>Clears the <see cref="T:System.Data.DataSet" /> of any data by removing all rows in all tables.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>Copies the structure of the <see cref="T:System.Data.DataSet" />, including all <see cref="T:System.Data.DataTable" /> schemas, relations, and constraints. Does not copy any data.</summary>
      <returns>A new <see cref="T:System.Data.DataSet" /> with the same schema as the current <see cref="T:System.Data.DataSet" />, but none of the data.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>Copies both the structure and data for this <see cref="T:System.Data.DataSet" />.</summary>
      <returns>A new <see cref="T:System.Data.DataSet" /> with the same structure (table schemas, relations, and constraints) and data as this <see cref="T:System.Data.DataSet" />.NoteIf these classes have been subclassed, the copy will also be of the same subclasses.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary>Returns a <see cref="T:System.Data.DataTableReader" /> with one result set per <see cref="T:System.Data.DataTable" />, in the same sequence as the tables appear in the <see cref="P:System.Data.DataSet.Tables" /> collection.</summary>
      <returns>A <see cref="T:System.Data.DataTableReader" /> containing one or more result sets, corresponding to the <see cref="T:System.Data.DataTable" /> instances contained within the source <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary>Returns a <see cref="T:System.Data.DataTableReader" /> with one result set per <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.DataTableReader" /> containing one or more result sets, corresponding to the <see cref="T:System.Data.DataTable" /> instances contained within the source <see cref="T:System.Data.DataSet" />. The returned result sets are in the order specified by the <paramref name="dataTables" /> parameter.</returns>
      <param name="dataTables">An array of DataTables providing the order of the result sets to be returned in the <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>Gets or sets the name of the current <see cref="T:System.Data.DataSet" />.</summary>
      <returns>The name of the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>Gets a custom view of the data contained in the <see cref="T:System.Data.DataSet" /> to allow filtering, searching, and navigating using a custom <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>A <see cref="T:System.Data.DataViewManager" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Determines the <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> for a <see cref="T:System.Data.DataSet" />.</summary>
      <returns>An <see cref="T:System.Data.SchemaSerializationMode" /> enumeration indicating whether schema information has been omitted from the payload.</returns>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that a DataSet’s protected constructor <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> is invoked with during deserialization in remoting scenarios. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that a DataSet’s protected constructor <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> is invoked with during deserialization in remoting scenarios.</param>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary>Determines the <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> for a <see cref="T:System.Data.DataSet" />.</summary>
      <returns>An <see cref="T:System.Data.SchemaSerializationMode" /> enumeration indicating whether schema information has been omitted from the payload.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> instance that is passed during deserialization of the <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>Ends the initialization of a <see cref="T:System.Data.DataSet" /> that is used on a form or used by another component. The initialization occurs at run time.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.</summary>
      <returns>true if rules are enforced; otherwise false. The default is true.</returns>
      <exception cref="T:System.Data.ConstraintException">One or more constraints cannot be enforced. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>Gets the collection of customized user information associated with the DataSet.</summary>
      <returns>A <see cref="T:System.Data.PropertyCollection" /> with all custom user information.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>Gets a copy of the <see cref="T:System.Data.DataSet" /> that contains all changes made to it since it was loaded or since <see cref="M:System.Data.DataSet.AcceptChanges" /> was last called.</summary>
      <returns>A copy of the changes from this <see cref="T:System.Data.DataSet" /> that can have actions performed on it and later be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. If no changed rows are found, the method returns null.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>Gets a copy of the <see cref="T:System.Data.DataSet" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataSet.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</summary>
      <returns>A filtered copy of the <see cref="T:System.Data.DataSet" /> that can have actions performed on it, and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns null.</returns>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets a copy of <see cref="T:System.Xml.Schema.XmlSchemaSet" /> for the DataSet.</summary>
      <returns>A copy of <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
      <param name="schemaSet">The specified schema set. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.Data.DataSet" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>Returns a serializable <see cref="T:System.Xml.Schema.XMLSchema" /> instance.</summary>
      <returns>The <see cref="T:System.Xml.Schema.XMLSchema" /> instance.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Deserializes the table data from the binary or XML stream.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance. </param>
      <param name="context">The streaming context. </param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>Returns the XML representation of the data stored in the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>A string that is a representation of the data stored in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>Returns the XML Schema for the XML representation of the data stored in the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>String that is the XML Schema for the XML representation of the data stored in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.DataSet" /> has changes, including new, deleted, or modified rows.</summary>
      <returns>true if the <see cref="T:System.Data.DataSet" /> has changes; otherwise false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.DataSet" /> has changes, including new, deleted, or modified rows, filtered by <see cref="T:System.Data.DataRowState" />.</summary>
      <returns>true if the <see cref="T:System.Data.DataSet" /> has changes; otherwise false.</returns>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>Gets a value indicating whether there are errors in any of the <see cref="T:System.Data.DataTable" /> objects within this <see cref="T:System.Data.DataSet" />.</summary>
      <returns>true if any table contains an error;otherwise false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>Applies the XML schema from the specified <see cref="T:System.IO.Stream" /> to the <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">The Stream from which to read the schema. </param>
      <param name="nsArray">An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>Applies the XML schema from the specified <see cref="T:System.IO.TextReader" /> to the <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">The TextReader from which to read the schema. </param>
      <param name="nsArray">An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>Applies the XML schema from the specified file to the <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">The name of the file (including the path) from which to read the schema. </param>
      <param name="nsArray">An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference. </param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> is not set to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>Applies the XML schema from the specified <see cref="T:System.Xml.XmlReader" /> to the <see cref="T:System.Data.DataSet" />. </summary>
      <param name="reader">The XMLReader from which to read the schema. </param>
      <param name="nsArray">An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary>Occurs after the <see cref="T:System.Data.DataSet" /> is initialized.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary>Deserialize all of the tables data of the DataSet from the binary or XML stream.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inspects the format of the serialized representation of the DataSet.</summary>
      <returns>true if the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> represents a DataSet serialized in its binary format, false otherwise.</returns>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.DataSet" /> is initialized.</summary>
      <returns>true to indicate the component has completed initialization; otherwise false.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary>Fills a <see cref="T:System.Data.DataSet" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />, using an array of <see cref="T:System.Data.DataTable" /> instances to supply the schema and namespace information.</summary>
      <param name="reader">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets. </param>
      <param name="loadOption">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> instances within the <see cref="T:System.Data.DataSet" /> will be combined with incoming rows that share the same primary key. </param>
      <param name="tables">An array of <see cref="T:System.Data.DataTable" /> instances, from which the <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> method retrieves name and namespace information. Each of these tables must be a member of the <see cref="T:System.Data.DataTableCollection" /> contained by this <see cref="T:System.Data.DataSet" />.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary>Fills a <see cref="T:System.Data.DataSet" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />, using an array of <see cref="T:System.Data.DataTable" /> instances to supply the schema and namespace information.</summary>
      <param name="reader">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</param>
      <param name="loadOption">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> instances within the <see cref="T:System.Data.DataSet" /> will be combined with incoming rows that share the same primary key. </param>
      <param name="errorHandler">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</param>
      <param name="tables">An array of <see cref="T:System.Data.DataTable" /> instances, from which the <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> method retrieves name and namespace information.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary>Fills a <see cref="T:System.Data.DataSet" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />, using an array of strings to supply the names for the tables within the DataSet.</summary>
      <param name="reader">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</param>
      <param name="loadOption">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> instances within the DataSet will be combined with incoming rows that share the same primary key. </param>
      <param name="tables">An array of strings, from which the Load method retrieves table name information.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>Gets or sets the locale information used to compare strings within the table.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale. The default is null.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>Merges an array of <see cref="T:System.Data.DataRow" /> objects into the current <see cref="T:System.Data.DataSet" />.</summary>
      <param name="rows">The array of DataRow objects to be merged into the DataSet. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Merges an array of <see cref="T:System.Data.DataRow" /> objects into the current <see cref="T:System.Data.DataSet" />, preserving or discarding changes in the DataSet and handling an incompatible schema according to the given arguments.</summary>
      <param name="rows">The array of <see cref="T:System.Data.DataRow" /> objects to be merged into the DataSet. </param>
      <param name="preserveChanges">true to preserve changes in the DataSet; otherwise false. </param>
      <param name="missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>Merges a specified <see cref="T:System.Data.DataSet" /> and its schema into the current DataSet.</summary>
      <param name="dataSet">The DataSet whose data and schema will be merged. </param>
      <exception cref="T:System.Data.ConstraintException">One or more constraints cannot be enabled. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataSet" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>Merges a specified <see cref="T:System.Data.DataSet" /> and its schema into the current DataSet, preserving or discarding any changes in this DataSet according to the given argument.</summary>
      <param name="dataSet">The DataSet whose data and schema will be merged. </param>
      <param name="preserveChanges">true to preserve changes in the current DataSet; otherwise false. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Merges a specified <see cref="T:System.Data.DataSet" /> and its schema with the current DataSet, preserving or discarding changes in the current DataSet and handling an incompatible schema according to the given arguments.</summary>
      <param name="dataSet">The DataSet whose data and schema will be merged. </param>
      <param name="preserveChanges">true to preserve changes in the current DataSet; otherwise false. </param>
      <param name="missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataSet" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>Merges a specified <see cref="T:System.Data.DataTable" /> and its schema into the current <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> whose data and schema will be merged. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataSet" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Merges a specified <see cref="T:System.Data.DataTable" /> and its schema into the current DataSet, preserving or discarding changes in the DataSet and handling an incompatible schema according to the given arguments.</summary>
      <param name="table">The DataTable whose data and schema will be merged. </param>
      <param name="preserveChanges">One of the <see cref="T:System.Data.MissingSchemaAction" /> values. </param>
      <param name="missingSchemaAction">true to preserve changes in the DataSet; otherwise false. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataSet" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>Occurs when a target and source <see cref="T:System.Data.DataRow" /> have the same primary key value, and <see cref="P:System.Data.DataSet.EnforceConstraints" /> is set to true.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>Gets or sets the namespace of the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>The namespace of the <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException">The namespace already has data. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> event.</summary>
      <param name="pcevent">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>Occurs when a <see cref="T:System.Data.DataRelation" /> object is removed from a <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> being removed. </param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>Occurs when a <see cref="T:System.Data.DataTable" /> is removed from a <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> being removed. </param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>The XML prefix for the <see cref="T:System.Data.DataSet" /> namespace.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>Sends a notification that the specified <see cref="T:System.Data.DataSet" /> property is about to change.</summary>
      <param name="name">The name of the property that is about to change. </param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.Stream" />.</summary>
      <returns>The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</returns>
      <param name="stream">An object that derives from <see cref="T:System.IO.Stream" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.Stream" /> and <see cref="T:System.Data.XmlReadMode" />.</summary>
      <returns>The XmlReadMode used to read the data.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextReader" />.</summary>
      <returns>The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</returns>
      <param name="reader">The TextReader from which to read the schema and data. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Data.XmlReadMode" />.</summary>
      <returns>The XmlReadMode used to read the data.</returns>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified file.</summary>
      <returns>The XmlReadMode used to read the data.</returns>
      <param name="fileName">The filename (including the path) from which to read. </param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> is not set to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified file and <see cref="T:System.Data.XmlReadMode" />.</summary>
      <returns>The XmlReadMode used to read the data.</returns>
      <param name="fileName">The filename (including the path) from which to read. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values. </param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> is not set to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>The XmlReadMode used to read the data.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.Xml.XmlReader" /> and <see cref="T:System.Data.XmlReadMode" />.</summary>
      <returns>The XmlReadMode used to read the data.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>Reads the XML schema from the specified <see cref="T:System.IO.Stream" /> into the <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>Reads the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>Reads the XML schema from the specified file into the <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">The file name (including the path) from which to read. </param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> is not set to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Reads the XML schema from the specified <see cref="T:System.Xml.XmlReader" /> into the <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Ignores attributes and returns an empty DataSet.</summary>
      <param name="reader">The specified XML reader. </param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>Rolls back all the changes made to the <see cref="T:System.Data.DataSet" /> since it was created, or since the last time <see cref="M:System.Data.DataSet.AcceptChanges" /> was called.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>Get the collection of relations that link tables and allow navigation from parent tables to child tables.</summary>
      <returns>A <see cref="T:System.Data.DataRelationCollection" /> that contains a collection of <see cref="T:System.Data.DataRelation" /> objects. An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary>Gets or sets a <see cref="T:System.Data.SerializationFormat" /> for the <see cref="T:System.Data.DataSet" /> used during remoting.</summary>
      <returns>A <see cref="T:System.Data.SerializationFormat" /> object.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>Resets the <see cref="T:System.Data.DataSet" /> to its original state. Subclasses should override <see cref="M:System.Data.DataSet.Reset" /> to restore a <see cref="T:System.Data.DataSet" /> to its original state.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary>Gets or sets a <see cref="T:System.Data.SchemaSerializationMode" /> for a <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Gets or sets a <see cref="T:System.Data.SchemaSerializationMode" /> for a <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>Gets a value indicating whether <see cref="P:System.Data.DataSet.Relations" /> property should be persisted.</summary>
      <returns>true if the property value has been changed from its default; otherwise false.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>Gets a value indicating whether <see cref="P:System.Data.DataSet.Tables" /> property should be persisted.</summary>
      <returns>true if the property value has been changed from its default; otherwise false.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>Gets the collection of tables contained in the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>The <see cref="T:System.Data.DataTableCollection" /> contained by this <see cref="T:System.Data.DataSet" />. An empty collection is returned if no <see cref="T:System.Data.DataTable" /> objects exist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>Writes the current data for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.Stream" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>Writes the current data for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> object with which to write. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema.</summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> object used to write the document. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>Writes the current data for the <see cref="T:System.Data.DataSet" /> to the specified file.</summary>
      <param name="fileName">The file name (including the path) to which to write. </param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> is not set to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema.</summary>
      <param name="fileName">The file name (including the path) to which to write. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> is not set to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the current data for the <see cref="T:System.Data.DataSet" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to the specified <see cref="T:System.IO.Stream" /> object.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to the specified <see cref="T:System.IO.Stream" /> object.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object to write to. </param>
      <param name="multipleTargetConverter">A delegate used to convert <see cref="T:System.Type" /> to string.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to the specified <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> object with which to write. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to the specified <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> object to write to. </param>
      <param name="multipleTargetConverter">A delegate used to convert <see cref="T:System.Type" /> to string.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to a file.</summary>
      <param name="fileName">The file name (including the path) to which to write. </param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> is not set to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to a file.</summary>
      <param name="fileName">The name of the file to write to. </param>
      <param name="multipleTargetConverter">A delegate used to convert <see cref="T:System.Type" /> to string.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to an <see cref="T:System.Xml.XmlWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object to write to. </param>
      <param name="multipleTargetConverter">A delegate used to convert <see cref="T:System.Type" /> to string.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary>Describes the serialization format for <see cref="T:System.DateTime" /> columns in a <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary>DateTime is always stored in Local. If <see cref="F:System.Data.DataSetDateTime.Utc" /> or <see cref="F:System.Data.DataSetDateTime.Unspecified" /> is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary>DateTime is always stored in Unspecified. If <see cref="F:System.Data.DataSetDateTime.Local" /> or <see cref="F:System.Data.DataSetDateTime.Utc" /> is assigned to a column in this mode, it is first converted into <see cref="F:System.Data.DataSetDateTime.Unspecified" />. Serialization in this mode does not cause an offset.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary>DateTime is stored in Unspecified. If <see cref="F:System.Data.DataSetDateTime.Local" /> or <see cref="F:System.Data.DataSetDateTime.Utc" /> is assigned to a column in this mode, it is first converted into <see cref="F:System.Data.DataSetDateTime.Unspecified" />. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to <see cref="F:System.Data.DataSetDateTime.Local" /> during serialization.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary>DateTime is stored in Universal Coordinated Time (UTC). If <see cref="F:System.Data.DataSetDateTime.Local" /> or <see cref="F:System.Data.DataSetDateTime.Unspecified" /> is assigned to a column in this mode, it is first converted into Utc format. Serialization in this mode is always performed in Utc. There is no offset during serialization.</summary>
    </member>
    <member name="T:System.Data.DataSetSchemaImporterExtension">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataSetSchemaImporterExtension.#ctor">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</returns>
      <param name="name">
        <paramref name="name" />
      </param>
      <param name="schemaNamespace">
        <paramref name="schemaNamespace" />
      </param>
      <param name="context">
        <paramref name="context" />
      </param>
      <param name="schemas">
        <paramref name="schemas" />
      </param>
      <param name="importer">
        <paramref name="importer" />
      </param>
      <param name="compileUnit">
        <paramref name="compileUnit" />
      </param>
      <param name="mainNamespace">
        <paramref name="mainNamespace" />
      </param>
      <param name="options">
        <paramref name="options" />
      </param>
      <param name="codeProvider">
        <paramref name="codeProvider" />
      </param>
    </member>
    <member name="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</returns>
      <param name="type">
        <paramref name="type" />
      </param>
      <param name="context">
        <paramref name="context" />
      </param>
      <param name="schemas">
        <paramref name="schemas" />
      </param>
      <param name="importer">
        <paramref name="importer" />
      </param>
      <param name="compileUnit">
        <paramref name="compileUnit" />
      </param>
      <param name="mainNamespace">
        <paramref name="mainNamespace" />
      </param>
      <param name="options">
        <paramref name="options" />
      </param>
      <param name="codeProvider">
        <paramref name="codeProvider" />
      </param>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataSysDescriptionAttribute" /> class using the specified description string.</summary>
      <param name="description">The description string. </param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>Gets the text for the description. </summary>
      <returns>The description string.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>Represents one table of in-memory data.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">The data needed to serialize or deserialize an object. </param>
      <param name="context">The source and destination of a given serialized stream. </param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table name.</summary>
      <param name="tableName">The name to give the table. If <paramref name="tableName" /> is null or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />. </param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class using the specified table name and namespace.</summary>
      <param name="tableName">The name to give the table. If <paramref name="tableName" /> is null or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />. </param>
      <param name="tableNamespace">The namespace for the XML representation of the data stored in the DataTable. </param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component. The initialization occurs at run time. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>Turns off notifications, index maintenance, and constraints while loading data.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>Indicates whether string comparisons within the table are case-sensitive.</summary>
      <returns>true if the comparison is case-sensitive; otherwise false. The default is set to the parent <see cref="T:System.Data.DataSet" /> object's <see cref="P:System.Data.DataSet.CaseSensitive" /> property, or false if the <see cref="T:System.Data.DataTable" /> was created independently of a <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.DataRelationCollection" /> that contains the child relations for the table. An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>Clears the <see cref="T:System.Data.DataTable" /> of all data.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>Clones the structure of the <see cref="T:System.Data.DataTable" />, including all <see cref="T:System.Data.DataTable" /> schemas and constraints.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>Occurs after a value has been changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>Occurs when a value is being changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>Gets the collection of columns that belong to this table.</summary>
      <returns>A <see cref="T:System.Data.DataColumnCollection" /> that contains the collection of <see cref="T:System.Data.DataColumn" /> objects for the table. An empty collection is returned if no <see cref="T:System.Data.DataColumn" /> objects exist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>Computes the given expression on the current rows that pass the filter criteria.</summary>
      <returns>An <see cref="T:System.Object" />, set to the result of the computation.</returns>
      <param name="expression">The expression to compute. </param>
      <param name="filter">The filter to limit the rows that evaluate in the expression. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>Gets the collection of constraints maintained by this table.</summary>
      <returns>A <see cref="T:System.Data.ConstraintCollection" /> that contains the collection of <see cref="T:System.Data.Constraint" /> objects for the table. An empty collection is returned if no <see cref="T:System.Data.Constraint" /> objects exist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable" />.If these classes have been derived, the copy will also be of the same derived classes.Both the <see cref="M:System.Data.DataTable.Copy" /> and the <see cref="M:System.Data.DataTable.Clone" /> methods create a new DataTable with the same structure as the original DataTable. The new DataTable created by the <see cref="M:System.Data.DataTable.Copy" /> method has the same set of DataRows as the original table, but the new DataTable created by the <see cref="M:System.Data.DataTable.Clone" /> method does not contain any DataRows.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary>Returns a <see cref="T:System.Data.DataTableReader" /> corresponding to the data within this <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.DataTableReader" /> containing one result set, corresponding to the source <see cref="T:System.Data.DataTable" /> instance.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary>Creates a new instance of <see cref="T:System.Data.DataTable" />.</summary>
      <returns>The new expression.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> to which this table belongs.</summary>
      <returns>The <see cref="T:System.Data.DataSet" /> to which this table belongs.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>Gets a customized view of the table that may include a filtered view, or a cursor position.</summary>
      <returns>The <see cref="T:System.Data.DataView" /> associated with the <see cref="T:System.Data.DataTable" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>Gets or sets the expression that returns a value used to represent this table in the user interface. The DisplayExpression property lets you display the name of this table in a user interface.</summary>
      <returns>A display string.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component. The initialization occurs at run time.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>Turns on notifications, index maintenance, and constraints after loading data.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>Gets the collection of customized user information.</summary>
      <returns>A <see cref="T:System.Data.PropertyCollection" /> that contains custom user information.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>Checks whether initialization is in progress. The initialization occurs at run time.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" /> was last called.</summary>
      <returns>A copy of the changes from this <see cref="T:System.Data.DataTable" />, or null if no changes are found.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</summary>
      <returns>A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed on it, and later be merged back in the <see cref="T:System.Data.DataTable" /> using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns null.</returns>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>This method returns an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance containing the Web Services Description Language (WSDL) that describes the <see cref="T:System.Data.DataTable" /> for Web Services.</summary>
      <returns>The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</returns>
      <param name="schemaSet">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects that have errors.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data associated with the <see cref="T:System.Data.DataTable" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>Gets the row type.</summary>
      <returns>Returns the type of the <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary>For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns> An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>Gets a value indicating whether there are errors in any of the rows in any of the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</summary>
      <returns>true if errors exist; otherwise false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to be imported. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary>Occurs after the <see cref="T:System.Data.DataTable" /> is initialized.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.DataTable" /> is initialized.</summary>
      <returns>true to indicate the component has completed initialization; otherwise false. </returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary>Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />. If the <see cref="T:System.Data.DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</summary>
      <param name="reader">An <see cref="T:System.Data.IDataReader" /> that provides a result set.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary>Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />. If the DataTable already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <paramref name="loadOption" /> parameter.</summary>
      <param name="reader">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</param>
      <param name="loadOption">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" /> using an error-handling delegate.</summary>
      <param name="reader">A <see cref="T:System.Data.IDataReader" /> that provides a result set.</param>
      <param name="loadOption">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key. </param>
      <param name="errorHandler">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>Finds and updates a specific row. If no matching row is found, a new row is created using the given values.</summary>
      <returns>The new <see cref="T:System.Data.DataRow" />.</returns>
      <param name="values">An array of values used to create the new row. </param>
      <param name="fAcceptChanges">true to accept changes; otherwise false. </param>
      <exception cref="T:System.ArgumentException">The array is larger than the number of columns in the table. </exception>
      <exception cref="T:System.InvalidCastException">A value doesn't match its respective column type. </exception>
      <exception cref="T:System.Data.ConstraintException">Adding the row invalidates a constraint. </exception>
      <exception cref="T:System.Data.NoNullAllowedException">Attempting to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary>Finds and updates a specific row. If no matching row is found, a new row is created using the given values.</summary>
      <returns>The new <see cref="T:System.Data.DataRow" />.</returns>
      <param name="values">An array of values used to create the new row. </param>
      <param name="loadOption">Used to determine how the array values are applied to the corresponding values in an existing row. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>Gets or sets the locale information used to compare strings within the table.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale. The default is the <see cref="T:System.Data.DataSet" /> object's <see cref="T:System.Globalization.CultureInfo" /> (returned by the <see cref="P:System.Data.DataSet.Locale" /> property) to which the <see cref="T:System.Data.DataTable" /> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet" />, the default is the current system <see cref="T:System.Globalization.CultureInfo" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary>Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary>Merge the specified <see cref="T:System.Data.DataTable" /> with the current DataTable, indicating whether to preserve changes in the current DataTable.</summary>
      <param name="table">The DataTable to be merged with the current DataTable.</param>
      <param name="preserveChanges">true, to preserve changes in the current DataTable; otherwise false. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Merge the specified <see cref="T:System.Data.DataTable" /> with the current DataTable, indicating whether to preserve changes and how to handle missing schema in the current DataTable.</summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</param>
      <param name="preserveChanges">true, to preserve changes in the current <see cref="T:System.Data.DataTable" />; otherwise false.</param>
      <param name="missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>Gets or sets the initial starting size for this table.</summary>
      <returns>The initial starting size in rows of this table. The default is 50.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>The namespace of the <see cref="T:System.Data.DataTable" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>Creates a new <see cref="T:System.Data.DataRow" /> with the same schema as the table.</summary>
      <returns>A <see cref="T:System.Data.DataRow" /> with the same schema as the <see cref="T:System.Data.DataTable" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary>Returns an array of <see cref="T:System.Data.DataRow" />.</summary>
      <returns>The new array.</returns>
      <param name="size">A <see cref="T:System.Int32" /> value that describes the size of the array.</param>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>Creates a new row from an existing row.</summary>
      <returns>A <see cref="T:System.Data.DataRow" /> derived class.</returns>
      <param name="builder">A <see cref="T:System.Data.DataRowBuilder" /> object. </param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</summary>
      <param name="pcevent">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is being removed.</summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> being removed. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.TableCleared" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.TableClearing" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataTable.TableNewRow" /> event.</summary>
      <param name="e">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.DataRelationCollection" /> that contains the parent relations for the table. An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>The prefix of the <see cref="T:System.Data.DataTable" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>Gets or sets an array of columns that function as primary keys for the data table.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects.</returns>
      <exception cref="T:System.Data.DataException">The key is a foreign key. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.Stream" />.</summary>
      <returns>The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</returns>
      <param name="stream">An object that derives from <see cref="T:System.IO.Stream" /></param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</summary>
      <returns>The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</returns>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> that will be used to read the data.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary>Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> from the specified file.</summary>
      <returns>The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</returns>
      <param name="fileName">The name of the file from which to read the data. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary>Reads XML Schema and Data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> that will be used to read the data. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary>Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified stream.</summary>
      <param name="stream">The stream used to read the schema. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary>Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> used to read the schema information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary>Reads an XML schema into the <see cref="T:System.Data.DataTable" /> from the specified file.</summary>
      <param name="fileName">The name of the file from which to read the schema information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the schema information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Reads from an XML stream.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>Rolls back all changes that have been made to the table since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary>Gets or sets the serialization format.</summary>
      <returns>A <see cref="T:System.Data.SerializationFormat" /> enumeration specifying either Binary or Xml serialization.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>Resets the <see cref="T:System.Data.DataTable" /> to its original state.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>Occurs when a <see cref="T:System.Data.DataRow" /> is changing.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>Occurs after a row in the table has been deleted.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>Occurs before a row in the table is about to be deleted.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>Gets the collection of rows that belong to this table.</summary>
      <returns>A <see cref="T:System.Data.DataRowCollection" /> that contains <see cref="T:System.Data.DataRow" /> objects; otherwise a null value if no <see cref="T:System.Data.DataRow" /> objects exist.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria in order of primary key (or lacking one, order of addition.) </summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects.</returns>
      <param name="filterExpression">The criteria to use to filter the rows. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the specified sort order.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects matching the filter expression.</returns>
      <param name="filterExpression">The criteria to use to filter the rows. </param>
      <param name="sort">A string specifying the column and sort direction. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the sort that match the specified state.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects.</returns>
      <param name="filterExpression">The criteria to use to filter the rows. </param>
      <param name="sort">A string specifying the column and sort direction. </param>
      <param name="recordStates">One of the <see cref="T:System.Data.DataViewRowState" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>true if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, false.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns> An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">An XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">An XmlWriter.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary>Occurs after a <see cref="T:System.Data.DataTable" /> is cleared.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary>Occurs when a <see cref="T:System.Data.DataTable" /> is cleared.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>Gets or sets the name of the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>The name of the <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException">null or empty string ("") is passed in and this table belongs to a collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary>Occurs when a new <see cref="T:System.Data.DataRow" /> is inserted.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</summary>
      <returns>A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The stream to which the data will be written. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />. To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="stream">The stream to which the data will be written. </param>
      <param name="writeHierarchy">If true, write the contents of the current table and all its descendants. If false (the default value), write the data for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema.</summary>
      <param name="stream">The stream to which the data will be written. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema. To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="stream">The stream to which the data will be written. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <param name="writeHierarchy">If true, write the contents of the current table and all its descendants. If false (the default value), write the data for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> with which to write the content. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />. To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> with which to write the content. </param>
      <param name="writeHierarchy">If true, write the contents of the current table and all its descendants. If false (the default value), write the data for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> used to write the document. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema. To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> used to write the document. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <param name="writeHierarchy">If true, write the contents of the current table and all its descendants. If false (the default value), write the data for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</summary>
      <param name="fileName">The file to which to write the XML data.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file. To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="fileName">The file to which to write the XML data.</param>
      <param name="writeHierarchy">If true, write the contents of the current table and all its descendants. If false (the default value), write the data for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema.</summary>
      <param name="fileName">The name of the file to which the data will be written. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema. To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="fileName">The name of the file to which the data will be written. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <param name="writeHierarchy">If true, write the contents of the current table and all its descendants. If false (the default value), write the data for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents. </param>
      <param name="writeHierarchy">If true, write the contents of the current table and all its descendants. If false (the default value), write the data for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the document. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the <paramref name="mode" /> parameter to WriteSchema. To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the document. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values. </param>
      <param name="writeHierarchy">If true, write the contents of the current table and all its descendants. If false (the default value), write the data for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary>Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</summary>
      <param name="stream">The stream to which the XML schema will be written. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary>Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="stream">The stream to which the XML schema will be written. </param>
      <param name="writeHierarchy">If true, write the schema of the current table and all its descendants. If false (the default value), write the schema for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> with which to write. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary>Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />. To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> with which to write. </param>
      <param name="writeHierarchy">If true, write the schema of the current table and all its descendants. If false (the default value), write the schema for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary>Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</summary>
      <param name="fileName">The name of the file to use. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary>Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file. To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="fileName">The name of the file to use. </param>
      <param name="writeHierarchy">If true, write the schema of the current table and all its descendants. If false (the default value), write the schema for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to use. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary>Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />. To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to true.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the document. </param>
      <param name="writeHierarchy">If true, write the schema of the current table and all its descendants. If false (the default value), write the schema for the current table only.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary>Provides data for the <see cref="M:System.Data.DataTable.Clear" /> method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataTableClearEventArgs" /> class.</summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> whose rows are being cleared.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary>Gets the table whose rows are being cleared.</summary>
      <returns>The <see cref="T:System.Data.DataTable" /> whose rows are being cleared.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary>Gets the table name whose rows are being cleared.</summary>
      <returns>A <see cref="T:System.String" /> indicating the table name.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary>Gets the namespace of the table whose rows are being cleared.</summary>
      <returns>A <see cref="T:System.String" /> indicating the namespace name.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary>Represents the method that handles the <see cref="M:System.Data.DataTable.Clear" /> method.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>Represents the collection of tables for the <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>Creates a new <see cref="T:System.Data.DataTable" /> object by using a default name and adds it to the collection.</summary>
      <returns>The newly created <see cref="T:System.Data.DataTable" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>Adds the specified DataTable to the collection.</summary>
      <param name="table">The DataTable object to add. </param>
      <exception cref="T:System.ArgumentNullException">The value specified for the table is null. </exception>
      <exception cref="T:System.ArgumentException">The table already belongs to this collection, or belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">A table in the collection has the same name. The comparison is not case sensitive. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object by using the specified name and adds it to the collection.</summary>
      <returns>The newly created <see cref="T:System.Data.DataTable" />.</returns>
      <param name="name">The name to give the created <see cref="T:System.Data.DataTable" />. </param>
      <exception cref="T:System.Data.DuplicateNameException">A table in the collection has the same name. (The comparison is not case sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object by using the specified name and adds it to the collection.</summary>
      <returns>The newly created <see cref="T:System.Data.DataTable" />.</returns>
      <param name="name">The name to give the created <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace">The namespace to give the created <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.Data.DuplicateNameException">A table in the collection has the same name. (The comparison is not case sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.DataTable" /> array to the end of the collection.</summary>
      <param name="tables">The array of <see cref="T:System.Data.DataTable" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>Verifies whether the specified <see cref="T:System.Data.DataTable" /> object can be removed from the collection.</summary>
      <returns>true if the table can be removed; otherwise false.</returns>
      <param name="table">The DataTable in the collection to perform the check against. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>Clears the collection of all <see cref="T:System.Data.DataTable" /> objects.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>Occurs after the <see cref="T:System.Data.DataTableCollection" /> is changed because of <see cref="T:System.Data.DataTable" /> objects being added or removed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>Occurs while the <see cref="T:System.Data.DataTableCollection" /> is changing because of <see cref="T:System.Data.DataTable" /> objects being added or removed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>Gets a value that indicates whether a <see cref="T:System.Data.DataTable" /> object with the specified name exists in the collection.</summary>
      <returns>true if the specified table exists; otherwise false.</returns>
      <param name="name">The name of the <see cref="T:System.Data.DataTable" /> to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary>Gets a value that indicates whether a <see cref="T:System.Data.DataTable" /> object with the specified name and table namespace exists in the collection.</summary>
      <returns>true if the specified table exists; otherwise false.</returns>
      <param name="name">The name of the <see cref="T:System.Data.DataTable" /> to find.</param>
      <param name="tableNamespace">The name of the <see cref="T:System.Data.DataTable" /> namespace to look in.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.DataTableCollection" /> to a one-dimensional <see cref="T:System.Array" />, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to copy the current <see cref="T:System.Data.DataTableCollection" /> object's elements into.</param>
      <param name="index">The destination <see cref="T:System.Array" /> index to start copying into.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>Gets the index of the specified <see cref="T:System.Data.DataTable" /> object.</summary>
      <returns>The zero-based index of the table, or -1 if the table is not found in the collection.</returns>
      <param name="table">The DataTable to search for. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>Gets the index in the collection of the <see cref="T:System.Data.DataTable" /> object with the specified name.</summary>
      <returns>The zero-based index of the DataTable with the specified name, or -1 if the table does not exist in the collection.NoteReturns -1 when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.</returns>
      <param name="tableName">The name of the DataTable object to look for. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary>Gets the index in the collection of the specified <see cref="T:System.Data.DataTable" /> object.</summary>
      <returns>The zero-based index of the <see cref="T:System.Data.DataTable" /> with the specified name, or -1 if the table does not exist in the collection.</returns>
      <param name="tableName">The name of the <see cref="T:System.Data.DataTable" /> object to look for.</param>
      <param name="tableNamespace">The name of the <see cref="T:System.Data.DataTable" /> namespace to look in.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> object at the specified index.</summary>
      <returns>A <see cref="T:System.Data.DataTable" />.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Data.DataTable" /> to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> object with the specified name.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> with the specified name; otherwise null if the <see cref="T:System.Data.DataTable" /> does not exist.</returns>
      <param name="name">The name of the DataTable to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> object with the specified name in the specified namespace.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> with the specified name; otherwise null if the <see cref="T:System.Data.DataTable" /> does not exist.</returns>
      <param name="name">The name of the DataTable to find.</param>
      <param name="tableNamespace">The name of the <see cref="T:System.Data.DataTable" /> namespace to look in.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>Removes the specified <see cref="T:System.Data.DataTable" /> object from the collection.</summary>
      <param name="table">The DataTable to remove. </param>
      <exception cref="T:System.ArgumentNullException">The value specified for the table is null. </exception>
      <exception cref="T:System.ArgumentException">The table does not belong to this collection.-or- The table is part of a relationship. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Data.DataTable" /> object with the specified name from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Data.DataTable" /> object to remove. </param>
      <exception cref="T:System.ArgumentException">The collection does not have a table with the specified name. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary>Removes the <see cref="T:System.Data.DataTable" /> object with the specified name from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Data.DataTable" /> object to remove.</param>
      <param name="tableNamespace">The name of the <see cref="T:System.Data.DataTable" /> namespace to look in.</param>
      <exception cref="T:System.ArgumentException">The collection does not have a table with the specified name. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.DataTable" /> object at the specified index from the collection.</summary>
      <param name="index">The index of the DataTable to remove. </param>
      <exception cref="T:System.ArgumentException">The collection does not have a table at the specified index. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary>Provides data for the <see cref="M:System.Data.DataTable.NewRow" /> method.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary>Initializes a new instance of <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> being added.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary>Gets the row that is being added.</summary>
      <returns>The <see cref="T:System.Data.DataRow" /> that is being added. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary>Represents the method that handles the <see cref="M:System.Data.DataTable.NewRow" /> method.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary>The <see cref="T:System.Data.DataTableReader" /> obtains the contents of one or more <see cref="T:System.Data.DataTable" /> objects in the form of one or more read-only, forward-only result sets. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class by using data from the supplied <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> from which the new <see cref="T:System.Data.DataTableReader" /> obtains its result set. </param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class using the supplied array of <see cref="T:System.Data.DataTable" /> objects.</summary>
      <param name="dataTables">The array of <see cref="T:System.Data.DataTable" /> objects that supplies the results for the new <see cref="T:System.Data.DataTableReader" /> object. </param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary>Closes the current <see cref="T:System.Data.DataTableReader" />.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary>The depth of nesting for the current row of the <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>The depth of nesting for the current row; always zero.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary>Returns the number of columns in the current row.</summary>
      <returns>When not positioned in a valid result set, 0; otherwise the number of columns in the current row. </returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to retrieve the field count in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Boolean" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a Boolean. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed DataTableReader.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a byte. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.</summary>
      <returns>The actual number of bytes read.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="dataIndex">The index within the field from which to start the read operation. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferIndex">The index within the buffer at which to start placing the data. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed DataTableReader.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a byte array. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a character.</summary>
      <returns>The value of the column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed DataTableReader.</exception>
      <exception cref="T:System.InvalidCastException">The specified field does not contain a character. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Returns the value of the specified column as a character array.</summary>
      <returns>The actual number of characters read.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="dataIndex">The index within the field from which to start the read operation. </param>
      <param name="buffer">The buffer into which to read the stream of chars. </param>
      <param name="bufferIndex">The index within the buffer at which to start placing the data. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed DataTableReader.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a character array. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary>Gets a string representing the data type of the specified column.</summary>
      <returns>A string representing the column's data type.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed DataTableReader.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a DateTime value. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed DataTableReader.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a Decimal value. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary>Gets the value of the column as a double-precision floating point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based ordinal of the column. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed DataTableReader.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a double-precision floating point number. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the item collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that represents the item collection.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object.</summary>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating point number.</summary>
      <returns>The value of the column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a single-precision floating point number. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally-unique identifier (GUID).</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a GUID. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a 16-bit signed integer. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a 32-bit signed integer value. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a 64-bit signed integer value. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.String" />.</summary>
      <returns>The name of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column.</summary>
      <returns>The zero-based column ordinal.</returns>
      <param name="name">The name of the column. </param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.ArgumentException">The name specified is not a valid column name. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Gets the type of the specified column in provider-specific format.</summary>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary>Gets the value of the specified column in provider-specific format.</summary>
      <returns>The value of the specified column in provider-specific format.</returns>
      <param name="ordinal">The zero-based number of the column whose value is retrieved. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /></exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary>Fills the supplied array with provider-specific type information for all the columns in the <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>The number of column values copied into the array.</returns>
      <param name="values">An array of objects to be filled in with type information for the columns in the <see cref="T:System.Data.DataTableReader" />. </param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.DataTableReader" /> is closed. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as a string.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">The specified column does not contain a string. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary>Gets the value of the specified column in its native format.</summary>
      <returns>The value of the specified column. This method returns DBNull for null columns.</returns>
      <param name="ordinal">The zero-based column ordinal </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access columns in a closed <see cref="T:System.Data.DataTableReader" /> .</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary>Populates an array of objects with the column values of the current row.</summary>
      <returns>The number of column values copied into the array.</returns>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the column values from the <see cref="T:System.Data.DataTableReader" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> contains one or more rows.</summary>
      <returns>true if the <see cref="T:System.Data.DataTableReader" /> contains one or more rows; otherwise false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to retrieve information about a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> is closed.</summary>
      <returns>Returns true if the <see cref="T:System.Data.DataTableReader" /> is closed; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary>Gets a value that indicates whether the column contains non-existent or missing values.</summary>
      <returns>true if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, false.</returns>
      <param name="ordinal">The zero-based column ordinal </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary>Gets the value of the specified column in its native format given the column ordinal.</summary>
      <returns>The value of the specified column in its native format.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary>Gets the value of the specified column in its native format given the column name.</summary>
      <returns>The value of the specified column in its native format.</returns>
      <param name="name">The name of the column. </param>
      <exception cref="T:System.ArgumentException">The name specified is not a valid column name. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to retrieve data from a deleted row.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary>Advances the <see cref="T:System.Data.DataTableReader" /> to the next result set, if any.</summary>
      <returns>true if there was another result set; otherwise false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to navigate within a closed <see cref="T:System.Data.DataTableReader" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary>Advances the <see cref="T:System.Data.DataTableReader" /> to the next record.</summary>
      <returns>true if there was another row to read; otherwise false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary>Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.</summary>
      <returns>The <see cref="T:System.Data.DataTableReader" /> does not support this property and always returns 0.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataView">
      <summary>Represents a databindable, customized view of a <see cref="T:System.Data.DataTable" /> for sorting, filtering, searching, editing, and navigation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class with the specified <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">A <see cref="T:System.Data.DataTable" /> to add to the <see cref="T:System.Data.DataView" />. </param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class with the specified <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" />, and <see cref="T:System.Data.DataViewRowState" />.</summary>
      <param name="table">A <see cref="T:System.Data.DataTable" /> to add to the <see cref="T:System.Data.DataView" />. </param>
      <param name="RowFilter">A <see cref="P:System.Data.DataView.RowFilter" /> to apply to the <see cref="T:System.Data.DataView" />. </param>
      <param name="Sort">A <see cref="P:System.Data.DataView.Sort" /> to apply to the <see cref="T:System.Data.DataView" />. </param>
      <param name="RowState">A <see cref="T:System.Data.DataViewRowState" /> to apply to the <see cref="T:System.Data.DataView" />. </param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>Adds a new row to the <see cref="T:System.Data.DataView" />.</summary>
      <returns>A <see cref="T:System.Data.DataRowView" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>Sets or gets a value that indicates whether deletes are allowed.</summary>
      <returns>true, if deletes are allowed; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>Gets or sets a value that indicates whether edits are allowed.</summary>
      <returns>true, if edits are allowed; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>Gets or sets a value that indicates whether the new rows can be added by using the <see cref="M:System.Data.DataView.AddNew" /> method.</summary>
      <returns>true, if new rows can be added; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>Gets or sets a value that indicates whether to use the default sort.</summary>
      <returns>true, if the default sort is used; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>Starts the initialization of a <see cref="T:System.Data.DataView" /> that is used on a form or used by another component. The initialization occurs at runtime.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>Closes the <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Occurs after a <see cref="T:System.Data.DataColumnCollection" /> has been changed successfully.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>Copies items into an array. Only for Web Forms Interfaces.</summary>
      <param name="array">array to copy into. </param>
      <param name="index">index to start at. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>Gets the number of records in the <see cref="T:System.Data.DataView" /> after <see cref="P:System.Data.DataView.RowFilter" /> and <see cref="P:System.Data.DataView.RowStateFilter" /> have been applied.</summary>
      <returns>The number of records in the <see cref="T:System.Data.DataView" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>Gets the <see cref="T:System.Data.DataViewManager" /> associated with this view.</summary>
      <returns>The DataViewManager that created this view. If this is the default <see cref="T:System.Data.DataView" /> for a <see cref="T:System.Data.DataTable" />, the DataViewManager property returns the default DataViewManager for the DataSet. Otherwise, if the DataView was created without a DataViewManager, this property is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>Deletes a row at the specified index.</summary>
      <param name="index">The index of the row to delete. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.Data.DataView" /> object.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>Ends the initialization of a <see cref="T:System.Data.DataView" /> that is used on a form or used by another component. The initialization occurs at runtime.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary>Determines whether the specified <see cref="T:System.Data.DataView" /> instances are considered equal. </summary>
      <returns>true if the two <see cref="T:System.Data.DataView" /> instances are equal; otherwise, false. </returns>
      <param name="view">The <see cref="T:System.Data.DataView" /> to be compared.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>Finds a row in the <see cref="T:System.Data.DataView" /> by the specified sort key value.</summary>
      <returns>The index of the row in the <see cref="T:System.Data.DataView" /> that contains the sort key value specified; otherwise -1 if the sort key value does not exist.</returns>
      <param name="key">The object to search for. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>Finds a row in the <see cref="T:System.Data.DataView" /> by the specified sort key values.</summary>
      <returns>The index of the position of the first row in the <see cref="T:System.Data.DataView" /> that matches the sort key values specified; otherwise -1 if there are no matching sort key values. </returns>
      <param name="key">An array of values, typed as <see cref="T:System.Object" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>Returns an array of <see cref="T:System.Data.DataRowView" /> objects whose columns match the specified sort key value.</summary>
      <returns>An array of DataRowView objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty DataRowView array.</returns>
      <param name="key">The column value, typed as <see cref="T:System.Object" />, to search for. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>Returns an array of <see cref="T:System.Data.DataRowView" /> objects whose columns match the specified sort key value.</summary>
      <returns>An array of DataRowView objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty DataRowView array.</returns>
      <param name="key">An array of column values, typed as <see cref="T:System.Object" />, to search for. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>Gets an enumerator for this <see cref="T:System.Data.DataView" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for navigating through the list.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>Occurs after a <see cref="T:System.Data.DataView" /> has been changed successfully.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary>Occurs when initialization of the <see cref="T:System.Data.DataView" /> is completed.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary>Gets a value that indicates whether the component is initialized.</summary>
      <returns>true to indicate the component has completed initialization; otherwise, false. </returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>Gets a value that indicates whether the data source is currently open and projecting views of data on the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>true, if the source is open; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>Gets a row of data from a specified table.</summary>
      <returns>A <see cref="T:System.Data.DataRowView" /> of the row that you want.</returns>
      <param name="recordIndex">The index of a record in the <see cref="T:System.Data.DataTable" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>Occurs when the list managed by the <see cref="T:System.Data.DataView" /> changes.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataView.ListChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>Opens a <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>Reserved for internal use only.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>Gets or sets the expression used to filter which rows are viewed in the <see cref="T:System.Data.DataView" />.</summary>
      <returns>A string that specifies how rows are to be filtered. For more information, see the Remarks section.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>Gets or sets the row state filter used in the <see cref="T:System.Data.DataView" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataViewRowState" /> values.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>Gets or sets the sort column or columns, and sort order for the <see cref="T:System.Data.DataView" />.</summary>
      <returns>A string that contains the column name followed by "ASC" (ascending) or "DESC" (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
      <param name="value">A <see cref="System.Object" /> value.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
      <param name="value">A <see cref="System.Object" /> value.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
      <param name="value">A <see cref="System.Object" /> value.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">A <see cref="System.Int32" /> value.</param>
      <param name="value">A <see cref="System.Object" /> value to be inserted.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
      <param name="recordIndex">A <see cref="System.Int32" /> value.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">A <see cref="System.Object" /> value.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">A <see cref="System.Int32" /> value.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">A <see cref="System.ComponentModel.PropertyDescriptor" /> object.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>The item added to the list.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property">A <see cref="System.ComponentModel.PropertyDescriptor" /> object.</param>
      <param name="direction">A <see cref="System.ComponentModel.ListSortDirection" /> object.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
      <param name="property">A <see cref="System.ComponentModel.PropertyDescriptor" /> object.</param>
      <param name="key">A <see cref="System.Object" /> value.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">A <see cref="System.ComponentModel.PropertyDescriptor" /> object.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts">A <see cref="System.ComponentModel.ListSortDescriptionCollection" /> object.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
      <param name="listAccessors">An array of <see cref="System.ComponentModel.PropertyDescriptor" /> objects.</param>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>Gets or sets the source <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that provides the data for this view.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary>Creates and returns a new <see cref="T:System.Data.DataTable" /> based on rows in an existing <see cref="T:System.Data.DataView" />.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> instance that contains the requested rows and columns.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary>Creates and returns a new <see cref="T:System.Data.DataTable" /> based on rows in an existing <see cref="T:System.Data.DataView" />.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> instance that contains the requested rows and columns.</returns>
      <param name="distinct">If true, the returned <see cref="T:System.Data.DataTable" /> contains rows that have distinct values for all its columns. The default value is false.</param>
      <param name="columnNames">A string array that contains a list of the column names to be included in the returned <see cref="T:System.Data.DataTable" />. The <see cref="T:System.Data.DataTable" /> contains the specified columns in the order they appear within this array.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary>Creates and returns a new <see cref="T:System.Data.DataTable" /> based on rows in an existing <see cref="T:System.Data.DataView" />.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> instance that contains the requested rows and columns.</returns>
      <param name="tableName">The name of the returned <see cref="T:System.Data.DataTable" />.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary>Creates and returns a new <see cref="T:System.Data.DataTable" /> based on rows in an existing <see cref="T:System.Data.DataView" />.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> instance that contains the requested rows and columns.</returns>
      <param name="tableName">The name of the returned <see cref="T:System.Data.DataTable" />.</param>
      <param name="distinct">If true, the returned <see cref="T:System.Data.DataTable" /> contains rows that have distinct values for all its columns. The default value is false.</param>
      <param name="columnNames">A string array that contains a list of the column names to be included in the returned <see cref="T:System.Data.DataTable" />. The DataTable contains the specified columns in the order they appear within this array.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>Reserved for internal use only.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>Reserved for internal use only.</summary>
      <param name="force">Reserved for internal use only. </param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>Contains a default <see cref="T:System.Data.DataViewSettingCollection" /> for each <see cref="T:System.Data.DataTable" /> in a <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataViewManager" /> class.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataViewManager" /> class for the specified <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">The name of the <see cref="T:System.Data.DataSet" /> to use. </param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>Creates a <see cref="T:System.Data.DataView" /> for the specified <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.DataView" /> object.</returns>
      <param name="table">The name of the <see cref="T:System.Data.DataTable" /> to use in the <see cref="T:System.Data.DataView" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>Gets or sets the <see cref="T:System.Data.DataSet" /> to use with the <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>The <see cref="T:System.Data.DataSet" /> to use.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>Gets or sets a value that is used for code persistence.</summary>
      <returns>A value that is used for code persistence.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>Gets the <see cref="T:System.Data.DataViewSettingCollection" /> for each <see cref="T:System.Data.DataTable" /> in the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>A <see cref="T:System.Data.DataViewSettingCollection" /> for each DataTable.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>Occurs after a row is added to or deleted from a <see cref="T:System.Data.DataView" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataViewManager.ListChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises a <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event when a <see cref="T:System.Data.DataRelation" /> is added to or removed from the <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Collections.IList" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />. </param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</summary>
      <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>For a description of this member, see <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Sorts the list based on a <see cref="T:System.ComponentModel.PropertyDescriptor" /> and a <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to sort by. </param>
      <param name="direction">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Returns the index of the row that has the given <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <returns>The index of the row that has the given <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
      <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search on.</param>
      <param name="key">The value of the property parameter to search for.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</summary>
      <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching. </param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Removes any sort applied using <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>For a description of this member, see <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Returns the name of the list.</summary>
      <returns>The name of the list.</returns>
      <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects, for which the list name is returned. This can be null. </param>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises a <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> event when a <see cref="T:System.Data.DataTable" /> is added to or removed from the <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>Describes the version of data in a <see cref="T:System.Data.DataRow" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>None.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>An unchanged row.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>A new row.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>A deleted row.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>A current version of original data that has been modified (see ModifiedOriginal).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>The original version of the data that was modified. (Although the data has since been modified, it is available as ModifiedCurrent).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>Original rows including unchanged and deleted rows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>Current rows including unchanged, new, and modified rows.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>Represents the default settings for <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" />, and <see cref="P:System.Data.DataView.Table" /> for DataViews created from the <see cref="T:System.Data.DataViewManager" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>Gets or sets a value indicating whether to use the default sort.</summary>
      <returns>true if the default sort is used; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>Gets the <see cref="T:System.Data.DataViewManager" /> that contains this <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>A <see cref="T:System.Data.DataViewManager" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>Gets or sets the filter to apply in the <see cref="T:System.Data.DataView" />.</summary>
      <returns>A string that contains the filter to apply.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the <see cref="T:System.Data.DataView" />.</summary>
      <returns>A value that indicates which rows to display.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>Gets or sets a value indicating the sort to apply in the <see cref="T:System.Data.DataView" />. </summary>
      <returns>The sort to apply in the <see cref="T:System.Data.DataView" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> to which the <see cref="T:System.Data.DataViewSetting" /> properties apply.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>Contains a read-only collection of <see cref="T:System.Data.DataViewSetting" /> objects for each <see cref="T:System.Data.DataTable" /> in a <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance starting at the specified index.</summary>
      <param name="ar">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to start inserting. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance starting at the specified index.</summary>
      <param name="ar">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to start inserting. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>Gets the number of <see cref="T:System.Data.DataViewSetting" /> objects in the <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>The number of <see cref="T:System.Data.DataViewSetting" /> objects in the collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> for the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.DataViewSettingCollection" /> is read-only.</summary>
      <returns>Returns true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Data.DataViewSettingCollection" /> is synchronized (thread-safe).</summary>
      <returns>This property is always false, unless overridden by a derived class.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>Gets the <see cref="T:System.Data.DataViewSetting" /> objects of the specified <see cref="T:System.Data.DataTable" /> from the collection. </summary>
      <returns>A <see cref="T:System.Data.DataViewSetting" />.</returns>
      <param name="table">The <see cref="T:System.Data.DataTable" /> to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.DataViewSetting" /> objects of the <see cref="T:System.Data.DataTable" /> specified by its index.</summary>
      <returns>A <see cref="T:System.Data.DataViewSetting" />.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Data.DataTable" /> to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.DataViewSetting" /> of the <see cref="T:System.Data.DataTable" /> specified by its name.</summary>
      <returns>A <see cref="T:System.Data.DataViewSetting" />.</returns>
      <param name="tableName">The name of the <see cref="T:System.Data.DataTable" /> to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>The exception that is thrown by the <see cref="T:System.Data.Common.DataAdapter" /> during an insert, update, or delete operation if the number of rows affected equals zero.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DBConcurrencyException" /> class.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DBConcurrencyException" /> class.</summary>
      <param name="message">The text string describing the details of the exception. </param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DBConcurrencyException" /> class.</summary>
      <param name="message">The text string describing the details of the exception. </param>
      <param name="inner">A reference to an inner exception. </param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DBConcurrencyException" /> class.</summary>
      <param name="message">The error message that explains the reason for this exception.</param>
      <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
      <param name="dataRows">An array containing the <see cref="T:System.Data.DataRow" /> objects whose update failure generated this exception.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary>Copies the <see cref="T:System.Data.DataRow" /> objects whose update failure generated this exception, to the specified array of <see cref="T:System.Data.DataRow" /> objects.</summary>
      <param name="array">The one-dimensional array of <see cref="T:System.Data.DataRow" /> objects to copy the <see cref="T:System.Data.DataRow" /> objects into.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Copies the <see cref="T:System.Data.DataRow" /> objects whose update failure generated this exception, to the specified array of <see cref="T:System.Data.DataRow" /> objects, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array of <see cref="T:System.Data.DataRow" /> objects to copy the <see cref="T:System.Data.DataRow" /> objects into.</param>
      <param name="arrayIndex">The destination array index to start copying into.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the aprcified serialization information object with the data needed to serialize the <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="si">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic).</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>Gets or sets the value of the <see cref="T:System.Data.DataRow" /> that generated the <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns>The value of the <see cref="T:System.Data.DataRow" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary>Gets the number of rows whose update failed, generating this exception.</summary>
      <returns>An integer containing a count of the number of rows whose update failed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DbType">
      <summary>Specifies the data type of a field, a property, or a Parameter object of a .NET Framework data provider.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>A variable-length stream of binary data ranging between 1 and 8,000 bytes.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>An 8-bit unsigned integer ranging in value from 0 to 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>A simple type representing Boolean values of true or false.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>A type representing a date value.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>A type representing a date and time value.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>A globally unique identifier (or GUID).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>An integral type representing signed 16-bit integers with values between -32768 and 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>A general type representing any reference or value type not explicitly represented by another DbType value.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>An integral type representing signed 8-bit integers with values between -128 and 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>A type representing Unicode character strings.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>A type representing a SQL Server DateTime value. If you want to use a SQL Server time value, use <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>An integral type representing unsigned 16-bit integers with values between 0 and 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>A variable-length numeric value.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>A fixed-length stream of non-Unicode characters.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>A fixed-length string of Unicode characters.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary>A parsed representation of an XML document or fragment.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary>Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary>Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00. </summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>Represents the exception that is thrown when an action is tried on a <see cref="T:System.Data.DataRow" /> that has been deleted.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a <see cref="T:System.Data.DataSet" /> -related object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class with the specified string and exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>Represents the exception that is thrown when the <see cref="P:System.Data.DataColumn.Expression" /> property of a <see cref="T:System.Data.DataColumn" /> cannot be evaluated.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">The data needed to serialize or deserialize an object. </param>
      <param name="context">The source and destination of a particular serialized stream. </param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.Common.DataAdapter.FillError" /> event of a <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.FillErrorEventArgs" /> class.</summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> being updated. </param>
      <param name="values">The values for the row being updated. </param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>Gets or sets a value indicating whether to continue the fill operation despite the error.</summary>
      <returns>true if the fill operation should continue; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> being updated when the error occurred.</summary>
      <returns>The <see cref="T:System.Data.DataTable" /> being updated.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>Gets the errors being handled.</summary>
      <returns>The errors being handled.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>Gets the values for the row being updated when the error occurred.</summary>
      <returns>The values for the row being updated.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.Common.DataAdapter.FillError" /> event.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.FillErrorEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified parent and child <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the constraint. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the constraint. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the columns is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types.-Or - The tables don't belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> in the constraint. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> in the constraint. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the columns is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types.-Or - The tables don't belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified name, parent and child <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="constraintName">The name of the constraint. </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the constraint. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the constraint. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the columns is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types.-Or - The tables don't belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified name, and arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="constraintName">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />. If null or empty string, a default name will be given when added to the constraints collection. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> in the constraint. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> in the constraint. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the columns is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types.-Or - The tables don't belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>This constructor is provided for design time support in the Visual Studio  environment. <see cref="T:System.Data.ForeignKeyConstraint" /> objects created by using this constructor must then be added to the collection via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Tables and columns with the specified names must exist at the time the method is called, or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</summary>
      <param name="constraintName">The name of the constraint. </param>
      <param name="parentTableName">The name of the parent <see cref="T:System.Data.DataTable" /> that contains parent <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="parentTableNamespace">The name of the <see cref="P:System.Data.DataTable.Namespace" />. </param>
      <param name="parentColumnNames">An array of the names of parent <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="childColumnNames">An array of the names of child <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="acceptRejectRule">One of the <see cref="T:System.Data.AcceptRejectRule" /> values. Possible values include None, Cascade, and Default. </param>
      <param name="deleteRule">One of the <see cref="T:System.Data.Rule" /> values to use when a row is deleted. The default is Cascade. Possible values include: None, Cascade, SetNull, SetDefault, and Default. </param>
      <param name="updateRule">One of the <see cref="T:System.Data.Rule" /> values to use when a row is updated. The default is Cascade. Possible values include: None, Cascade, SetNull, SetDefault, and Default. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the columns is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types.-Or - The tables don't belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>This constructor is provided for design time support in the Visual Studio  environment. <see cref="T:System.Data.ForeignKeyConstraint" /> objects created by using this constructor must then be added to the collection via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Tables and columns with the specified names must exist at the time the method is called, or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</summary>
      <param name="constraintName">The name of the constraint. </param>
      <param name="parentTableName">The name of the parent <see cref="T:System.Data.DataTable" /> that contains parent <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="parentColumnNames">An array of the names of parent <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="childColumnNames">An array of the names of child <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="acceptRejectRule">One of the <see cref="T:System.Data.AcceptRejectRule" /> values. Possible values include None, Cascade, and Default. </param>
      <param name="deleteRule">One of the <see cref="T:System.Data.Rule" /> values to use when a row is deleted. The default is Cascade. Possible values include: None, Cascade, SetNull, SetDefault, and Default. </param>
      <param name="updateRule">One of the <see cref="T:System.Data.Rule" /> values to use when a row is updated. The default is Cascade. Possible values include: None, Cascade, SetNull, SetDefault, and Default. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the columns is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types.-Or - The tables don't belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>Indicates the action that should take place across this constraint when <see cref="M:System.Data.DataTable.AcceptChanges" /> is invoked.</summary>
      <returns>One of the <see cref="T:System.Data.AcceptRejectRule" /> values. Possible values include None, and Cascade. The default is None.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>Gets the child columns of this constraint.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects that are the child columns of the constraint.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>Gets or sets the action that occurs across this constraint when a row is deleted.</summary>
      <returns>One of the <see cref="T:System.Data.Rule" /> values. The default is Cascade.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>Gets a value indicating whether the current <see cref="T:System.Data.ForeignKeyConstraint" /> is identical to the specified object.</summary>
      <returns>true, if the objects are identical; otherwise, false.</returns>
      <param name="key">The object to which this <see cref="T:System.Data.ForeignKeyConstraint" /> is compared. Two <see cref="T:System.Data.ForeignKeyConstraint" /> are equal if they constrain the same columns. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>Gets the hash code of this instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> object.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>The parent columns of this constraint.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects that are the parent columns of the constraint.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>Gets the parent table of this constraint.</summary>
      <returns>The parent <see cref="T:System.Data.DataTable" /> of this constraint.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>Gets the child table of this constraint.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that is the child table in the constraint.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>Gets or sets the action that occurs across this constraint on when a row is updated.</summary>
      <returns>One of the <see cref="T:System.Data.Rule" /> values. The default is Cascade.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>Associates a data source column with a <see cref="T:System.Data.DataSet" /> column, and is implemented by the <see cref="T:System.Data.Common.DataColumnMapping" /> class, which is used in common by .NET Framework data providers.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>Gets or sets the name of the column within the <see cref="T:System.Data.DataSet" /> to map to.</summary>
      <returns>The name of the column within the <see cref="T:System.Data.DataSet" /> to map to. The name is not case sensitive.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>Gets or sets the name of the column within the data source to map from. The name is case-sensitive.</summary>
      <returns>The case-sensitive name of the column in the data source.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>Contains a collection of DataColumnMapping objects, and is implemented by the <see cref="T:System.Data.Common.DataColumnMappingCollection" />, which is used in common by .NET Framework data providers.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>Adds a ColumnMapping object to the ColumnMapping collection using the source column and <see cref="T:System.Data.DataSet" /> column names.</summary>
      <returns>The ColumnMapping object that was added to the collection.</returns>
      <param name="sourceColumnName">The case-sensitive name of the source column. </param>
      <param name="dataSetColumnName">The name of the <see cref="T:System.Data.DataSet" /> column. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contains a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name.</summary>
      <returns>true if a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name exists, otherwise false.</returns>
      <param name="sourceColumnName">The case-sensitive name of the source column. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Gets the ColumnMapping object with the specified <see cref="T:System.Data.DataSet" /> column name.</summary>
      <returns>The ColumnMapping object with the specified DataSet column name.</returns>
      <param name="dataSetColumnName">The name of the <see cref="T:System.Data.DataSet" /> column within the collection. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>Gets the location of the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name. The name is case-sensitive.</summary>
      <returns>The zero-based location of the DataColumnMapping object with the specified source column name.</returns>
      <param name="sourceColumnName">The case-sensitive name of the source column. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Data.IColumnMapping" /> object with the specified SourceColumn name.</summary>
      <returns>The IColumnMapping object with the specified SourceColumn name.</returns>
      <param name="index">The SourceColumn name of the IColumnMapping object to find. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.IColumnMapping" /> object with the specified <see cref="P:System.Data.IColumnMapping.SourceColumn" /> name from the collection.</summary>
      <param name="sourceColumnName">The case-sensitive SourceColumn name. </param>
      <exception cref="T:System.IndexOutOfRangeException">A <see cref="T:System.Data.Common.DataColumnMapping" /> object does not exist with the specified SourceColumn name. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <see cref="T:System.Data.DataSet" /> and update a data source.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>Adds or updates rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates a <see cref="T:System.Data.DataTable" /> named "Table".</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source. </param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>Gets the parameters set by the user when executing an SQL SELECT statement.</summary>
      <returns>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</summary>
      <returns>One of the <see cref="T:System.Data.MissingMappingAction" /> values. The default is Passthrough.</returns>
      <exception cref="T:System.ArgumentException">The value set is not one of the <see cref="T:System.Data.MissingMappingAction" /> values. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</summary>
      <returns>One of the <see cref="T:System.Data.MissingSchemaAction" /> values. The default is Add.</returns>
      <exception cref="T:System.ArgumentException">The value set is not one of the <see cref="T:System.Data.MissingSchemaAction" /> values. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>Indicates how a source table is mapped to a dataset table.</summary>
      <returns>A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />. The default value is an empty collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</summary>
      <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source. </param>
      <exception cref="T:System.Data.DBConcurrencyException">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>Represents a parameter to a Command object, and optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns; and is implemented by .NET Framework data providers that access data sources.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values. The default is <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="T:System.Data.DbType" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</summary>
      <returns>One of the <see cref="T:System.Data.ParameterDirection" /> values. The default is Input.</returns>
      <exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>Gets a value indicating whether the parameter accepts null values.</summary>
      <returns>true if null values are accepted; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns>The name of the <see cref="T:System.Data.IDataParameter" />. The default is an empty string.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>Gets or sets the name of the source column that is mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>The name of the source column that is mapped to the <see cref="T:System.Data.DataSet" />. The default is an empty string.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default is Current.</returns>
      <exception cref="T:System.ArgumentException">The property was not set one of the <see cref="T:System.Data.DataRowVersion" /> values. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>Gets or sets the value of the parameter.</summary>
      <returns>An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>Collects all parameters relevant to a Command object and their mappings to <see cref="T:System.Data.DataSet" /> columns, and is implemented by .NET Framework data providers that access data sources.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>Gets a value indicating whether a parameter in the collection has the specified name.</summary>
      <returns>true if the collection contains the parameter; otherwise, false.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>Gets the location of the <see cref="T:System.Data.IDataParameter" /> within the collection.</summary>
      <returns>The zero-based location of the <see cref="T:System.Data.IDataParameter" /> within the collection.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>Gets or sets the parameter at the specified index.</summary>
      <returns>An <see cref="T:System.Object" /> at the specified index.</returns>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.IDataParameter" /> from the collection.</summary>
      <param name="parameterName">The name of the parameter. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>Closes the <see cref="T:System.Data.IDataReader" /> Object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>Gets a value indicating the depth of nesting for the current row.</summary>
      <returns>The level of nesting.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.IDataReader" /> is closed. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>Gets a value indicating whether the data reader is closed.</summary>
      <returns>true if the data reader is closed; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>Advances the data reader to the next result, when reading the results of batch SQL statements.</summary>
      <returns>true if there are more rows; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</summary>
      <returns>true if there are more rows; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</summary>
      <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>Provides access to the column values within each row for a DataReader, and is implemented by .NET Framework data providers that access relational databases.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>Gets the number of columns in the current row.</summary>
      <returns>When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean.</summary>
      <returns>The value of the column.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>Gets the 8-bit unsigned integer value of the specified column.</summary>
      <returns>The 8-bit unsigned integer value of the specified column.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</summary>
      <returns>The actual number of bytes read.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <param name="fieldOffset">The index within the field from which to start the read operation. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferoffset">The index for <paramref name="buffer" /> to start the read operation. </param>
      <param name="length">The number of bytes to read. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>Gets the character value of the specified column.</summary>
      <returns>The character value of the specified column.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.</summary>
      <returns>The actual number of characters read.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <param name="fieldoffset">The index within the row from which to start the read operation. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferoffset">The index for <paramref name="buffer" /> to start the read operation. </param>
      <param name="length">The number of bytes to read. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</summary>
      <returns>An <see cref="T:System.Data.IDataReader" />.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>Gets the data type information for the specified field.</summary>
      <returns>The data type information for the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>Gets the date and time data value of the specified field.</summary>
      <returns>The date and time data value of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>Gets the fixed-position numeric value of the specified field.</summary>
      <returns>The fixed-position numeric value of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>Gets the double-precision floating point number of the specified field.</summary>
      <returns>The double-precision floating point number of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <returns>The <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>Gets the single-precision floating point number of the specified field.</summary>
      <returns>The single-precision floating point number of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>Returns the GUID value of the specified field.</summary>
      <returns>The GUID value of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>Gets the 16-bit signed integer value of the specified field.</summary>
      <returns>The 16-bit signed integer value of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>Gets the 32-bit signed integer value of the specified field.</summary>
      <returns>The 32-bit signed integer value of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>Gets the 64-bit signed integer value of the specified field.</summary>
      <returns>The 64-bit signed integer value of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>Gets the name for the field to find.</summary>
      <returns>The name of the field or the empty string (""), if there is no value to return.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>Return the index of the named field.</summary>
      <returns>The index of the named field.</returns>
      <param name="name">The name of the field to find. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>Gets the string value of the specified field.</summary>
      <returns>The string value of the specified field.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>Return the value of the specified field.</summary>
      <returns>The <see cref="T:System.Object" /> which will contain the field value upon return.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>Populates an array of objects with the column values of the current record.</summary>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
      <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute fields into. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>Return whether the specified field is set to null.</summary>
      <returns>true if the specified field is set to null; otherwise, false.</returns>
      <param name="i">The index of the field to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>Gets the column located at the specified index.</summary>
      <returns>The column located at the specified index as an <see cref="T:System.Object" />.</returns>
      <param name="i">The zero-based index of the column to get. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>Gets the column with the specified name.</summary>
      <returns>The column with the specified name as an <see cref="T:System.Object" />.</returns>
      <param name="name">The name of the column to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary>Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary>Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary>Gets or sets the text command to run against the data source.</summary>
      <returns>The text command to execute. The default value is an empty string ("").</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</summary>
      <returns>The time (in seconds) to wait for the command to execute. The default value is 30 seconds.</returns>
      <exception cref="T:System.ArgumentException">The property value assigned is less than 0. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary>Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</summary>
      <returns>One of the <see cref="T:System.Data.CommandType" /> values. The default is Text.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary>Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>The connection to the data source.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary>Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</summary>
      <returns>An IDbDataParameter object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary>Executes an SQL statement against the Connection object of a .NET Framework data provider, and returns the number of rows affected.</summary>
      <returns>The number of rows affected.</returns>
      <exception cref="T:System.InvalidOperationException">The connection does not exist.-or- The connection is not open. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>An <see cref="T:System.Data.IDataReader" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</summary>
      <returns>An <see cref="T:System.Data.IDataReader" /> object.</returns>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary>Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.</summary>
      <returns>The first column of the first row in the resultset.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary>Gets the <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>The parameters of the SQL statement or stored procedure.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary>Creates a prepared (or compiled) version of the command on the data source.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.-or- The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary>Gets or sets the transaction within which the Command object of a .NET Framework data provider executes.</summary>
      <returns>the Command object of a .NET Framework data provider executes. The default value is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary>Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>One of the <see cref="T:System.Data.UpdateRowSource" /> values. The default is Both unless the command is automatically generated. Then the default is None.</returns>
      <exception cref="T:System.ArgumentException">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>Begins a database transaction.</summary>
      <returns>An object representing the new transaction.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Begins a database transaction with the specified <see cref="T:System.Data.IsolationLevel" /> value.</summary>
      <returns>An object representing the new transaction.</returns>
      <param name="il">One of the <see cref="T:System.Data.IsolationLevel" /> values. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>Changes the current database for an open Connection object.</summary>
      <param name="databaseName">The name of the database to use in place of the current database. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>Closes the connection to the database.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>Gets or sets the string used to open a database.</summary>
      <returns>A string containing connection settings.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</summary>
      <returns>The time (in seconds) to wait for a connection to open. The default value is 15 seconds.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary>Creates and returns a Command object associated with the connection.</summary>
      <returns>A Command object associated with the connection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>Gets the name of the current database or the database to be used after a connection is opened.</summary>
      <returns>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>Opens a database connection with the settings specified by the ConnectionString property of the provider-specific Connection object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>Gets the current state of the connection.</summary>
      <returns>One of the <see cref="T:System.Data.ConnectionState" /> values.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary>Gets or sets an SQL statement for deleting records from the data set.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary>Gets or sets an SQL statement used to insert new records into the data source.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary>Gets or sets an SQL statement used to select records in the data source.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary>Gets or sets an SQL statement used to update records in the data source.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>Indicates the precision of numeric parameters.</summary>
      <returns>The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>Indicates the scale of numeric parameters.</summary>
      <returns>The number of decimal places to which <see cref="T:System.Data.OleDb.OleDbParameter.Value" /> is resolved. The default is 0.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>The size of the parameter.</summary>
      <returns>The maximum size, in bytes, of the data within the column. The default value is inferred from the the parameter value.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>Commits the database transaction.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>Specifies the Connection object to associate with the transaction.</summary>
      <returns>The Connection object to associate with the transaction.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</summary>
      <returns>The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The default is ReadCommitted.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>Rolls back a transaction from a pending state.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>Represents the exception that is thrown when you call the <see cref="M:System.Data.DataRow.EndEdit" /> method within the <see cref="E:System.Data.DataTable.RowChanging" /> event.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>Provides the base functionality for creating collections.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InternalDataCollectionBase" /> class.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.InternalDataCollectionBase" /> to a one-dimensional <see cref="T:System.Array" />, starting at the specified <see cref="T:System.Data.InternalDataCollectionBase" /> index.</summary>
      <param name="ar">The one-dimensional <see cref="T:System.Array" /> to copy the current <see cref="T:System.Data.InternalDataCollectionBase" /> object's elements into. </param>
      <param name="index">The destination <see cref="T:System.Array" /> index to start copying into. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>Gets the total number of elements in a collection.</summary>
      <returns>The total number of elements in a collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> for the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.InternalDataCollectionBase" /> is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.InternalDataCollectionBase" /> is synchonized.</summary>
      <returns>true if the collection is synchronized; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>Gets the items of the collection as a list.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> that contains the collection.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>Gets an object that can be used to synchronize the collection.</summary>
      <returns>The <see cref="T:System.object" /> used to synchronize the collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>Represents the exception that is thrown when incorrectly trying to create or access a relation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>Represents the exception that is thrown when you try to add a <see cref="T:System.Data.DataColumn" /> that contains an invalid <see cref="P:System.Data.DataColumn.Expression" /> to a <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">The data needed to serialize or deserialize an object. </param>
      <param name="context">The source and destination of a given serialized stream. </param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>Specifies the transaction locking behavior for the connection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>A different isolation level than the one specified is being used, but the level cannot be determined.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>The pending changes from more highly isolated transactions cannot be overwritten.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>A range lock is placed on the <see cref="T:System.Data.DataSet" />, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary>Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>Associates a source table with a table in a <see cref="T:System.Data.DataSet" />, and is implemented by the <see cref="T:System.Data.Common.DataTableMapping" /> class, which is used in common by .NET Framework data providers.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>Gets the derived <see cref="T:System.Data.Common.DataColumnMappingCollection" /> for the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>Gets or sets the case-insensitive name of the table within the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>The case-insensitive name of the table within the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>Gets or sets the case-sensitive name of the source table.</summary>
      <returns>The case-sensitive name of the source table.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>Contains a collection of TableMapping objects, and is implemented by the <see cref="T:System.Data.Common.DataTableMappingCollection" />, which is used in common by .NET Framework data providers.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>Adds a table mapping to the collection.</summary>
      <returns>A reference to the newly-mapped <see cref="T:System.Data.ITableMapping" /> object.</returns>
      <param name="sourceTableName">The case-sensitive name of the source table. </param>
      <param name="dataSetTableName">The name of the <see cref="T:System.Data.DataSet" /> table. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>Gets a value indicating whether the collection contains a table mapping with the specified source table name.</summary>
      <returns>true if a table mapping with the specified source table name exists, otherwise false.</returns>
      <param name="sourceTableName">The case-sensitive name of the source table. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Gets the TableMapping object with the specified <see cref="T:System.Data.DataSet" /> table name.</summary>
      <returns>The TableMapping object with the specified DataSet table name.</returns>
      <param name="dataSetTableName">The name of the DataSet table within the collection. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>Gets the location of the <see cref="T:System.Data.ITableMapping" /> object within the collection.</summary>
      <returns>The zero-based location of the <see cref="T:System.Data.ITableMapping" /> object within the collection.</returns>
      <param name="sourceTableName">The case-sensitive name of the source table. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>Gets or sets the instance of <see cref="T:System.Data.ITableMapping" /> with the specified <see cref="P:System.Data.ITableMapping.SourceTable" /> name.</summary>
      <returns>The instance of <see cref="T:System.Data.ITableMapping" /> with the specified SourceTable name.</returns>
      <param name="index">The SourceTable name of the <see cref="T:System.Data.ITableMapping" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.ITableMapping" /> object with the specified <see cref="P:System.Data.ITableMapping.SourceTable" /> name from the collection.</summary>
      <param name="sourceTableName">The case-sensitive name of the SourceTable. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary>Identifies a list of connection string parameters identified by the KeyRestrictions property that are either allowed or not allowed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary>Default. Identifies the only additional connection string parameters that are allowed.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary>Identifies additional connection string parameters that are not allowed.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary>Controls how the values from the data source will be applied to existing rows when using the <see cref="Overload:System.Data.DataTable.Load" /> or <see cref="Overload:System.Data.DataSet.Load" /> method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary>The incoming values for this row will be written to both the current value and the original value versions of the data for each column.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary>The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed. <see cref="This" /> is the default.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary>The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>Specifies how a <see cref="T:System.Data.DataColumn" /> is mapped.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>The column is mapped to an XML element.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>The column is mapped to an XML attribute.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>The column is mapped to an <see cref="T:System.Xml.XmlText" /> node.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>The column is mapped to an internal structure.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>Occurs when a target and source DataRow have the same primary key value, and the <see cref="P:System.Data.DataSet.EnforceConstraints" /> property is set to true.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>Initializes a new instance of a <see cref="T:System.Data.MergeFailedEventArgs" /> class with the <see cref="T:System.Data.DataTable" /> and a description of the merge conflict.</summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> object. </param>
      <param name="conflict">A description of the merge conflict. </param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>Returns a description of the merge conflict.</summary>
      <returns>A description of the merge conflict.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>Returns the <see cref="T:System.Data.DataTable" /> object.</summary>
      <returns>The <see cref="T:System.Data.DataTable" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.DataSet.MergeFailed" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>Determines the action that occurs when a mapping is missing from a source table or a source column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>The source column or source table is created and added to the <see cref="T:System.Data.DataSet" /> using its original name.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>The column or table not having a mapping is ignored. Returns null.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>An <see cref="T:System.InvalidOperationException" /> is generated if the specified column mapping is missing.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>Represents the exception that is thrown when you try to access a row in a table that has no primary key.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">A description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>Specifies the action to take when adding data to the <see cref="T:System.Data.DataSet" /> and the required <see cref="T:System.Data.DataTable" /> or <see cref="T:System.Data.DataColumn" /> is missing.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>Adds the necessary columns to complete the schema.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>Ignores the extra columns.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>An <see cref="T:System.InvalidOperationException" /> is generated if the specified column mapping is missing.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a <see cref="T:System.Data.DataTable" />, see <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.To function properly with the .NET Framework Data Provider for OLE DB, AddWithKey requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each <see cref="T:System.Data.DataTable" />. This ensures that incoming records that match existing records are updated instead of appended. When using AddWithKey, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>Represents the exception that is thrown when you try to insert a null value into a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is set to false.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.OperationAbortedException">
      <summary>This exception is thrown when an ongoing operation is aborted by the user. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>Specifies the type of a parameter within a query relative to the <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>The parameter is an input parameter.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>The parameter is an output parameter.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>The parameter is capable of both input and output.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.</summary>
    </member>
    <member name="T:System.Data.PropertyAttributes">
      <summary>Specifies the attributes of a property.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.PropertyAttributes.NotSupported">
      <summary>The property is not supported by the provider.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Required">
      <summary>The user must specify a value for this property before the data source is initialized.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Optional">
      <summary>The user does not need to specify a value for this property before the data source is initialized.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Read">
      <summary>The user can read the property.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Write">
      <summary>The user can write to the property.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>Represents a collection of properties that can be added to <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" />, or <see cref="T:System.Data.DataTable" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.PropertyCollection" /> class.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.PropertyCollection" /> class.</summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>Represents the exception that is thrown when you try to change the value of a read-only column.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>Represents the exception that is thrown when you try to perform an operation on a <see cref="T:System.Data.DataRow" /> that is not in a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.Rule">
      <summary>Indicates the action that occurs when a <see cref="T:System.Data.ForeignKeyConstraint" /> is enforced.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>No action taken on related rows.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>Delete or update related rows. This is the default.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>Set values in related rows to DBNull.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>Set values in related rows to the value contained in the <see cref="P:System.Data.DataColumn.DefaultValue" /> property.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary>Indicates the schema serialization mode for a typed <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary>Includes schema serialization for a typed <see cref="T:System.Data.DataSet" />. The default.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary>Skips schema serialization for a typed <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>Specifies how to handle existing schema mappings when performing a <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> operation.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>Ignore any table mappings on the DataAdapter. Configure the <see cref="T:System.Data.DataSet" /> using the incoming schema without applying any transformations.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>Apply any existing table mappings to the incoming schema. Configure the <see cref="T:System.Data.DataSet" /> with the transformed schema.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary>Determines the serialization format for a <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary>Serialize as XML content. The default.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary>Serialize as binary content. Available in ADO.NET 2.0 only.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>Specifies SQL Server-specific data type of a field, property, for use in a <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />. A 64-bit signed integer.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />. An unsigned numeric value that can be 0, 1, or null. </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />. A floating point number within the range of -1.79E +308 through 1.79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />. A 32-bit signed integer.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />. A floating point number within the range of -3.40E +38 through 3.40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />. A globally unique identifier (or GUID).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />. A 16-bit signed integer.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />. Automatically generated binary numbers, which are guaranteed to be unique within a database. timestamp is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />. An 8-bit unsigned integer.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>An XML value. Obtain the XML as a string using the <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> method or <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> property, or as an <see cref="T:System.Xml.XmlReader" /> by calling the <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" /> method.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>A SQL Server 2005 user-defined type (UDT).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>A special data type for specifying structured data contained in table-valued parameters.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>Date data ranging in value from January 1,1 AD through December 31, 9999 AD.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server time value.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00. </summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>Provides data for the state change event of a .NET Framework data provider.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.StateChangeEventArgs" /> class, when given the original state and the current state of the object.</summary>
      <param name="originalState">One of the <see cref="T:System.Data.ConnectionState" /> values. </param>
      <param name="currentState">One of the <see cref="T:System.Data.ConnectionState" /> values. </param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>Gets the new state of the connection. The connection object will be in the new state already when the event is fired.</summary>
      <returns>One of the <see cref="T:System.Data.ConnectionState" /> values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>Gets the original state of the connection.</summary>
      <returns>One of the <see cref="T:System.Data.ConnectionState" /> values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.Common.DbConnection.StateChange" /> event.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.StateChangeEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>Provides additional information for the <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Data.StatementCompletedEventArgs" /> class.</summary>
      <param name="recordCount">Indicates the number of rows affected by the statement that caused the <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />  event to occur.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>Indicates the number of rows affected by the statement that caused the <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> event to occur.</summary>
      <returns>The number of rows affected.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>The delegate type for the event handlers of the <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>Specifies the type of SQL query to be used by the <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" />, or <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>An SQL query that is a SELECT statement.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>An SQL query that is an INSERT statement.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>An SQL query that is an UPDATE statement.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>An SQL query that is a DELETE statement.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary>A SQL query that is a batch statement.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>The exception that is thrown by a strongly typed <see cref="T:System.Data.DataSet" /> when the user accesses a DBNull value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class using the specified serialization information and streaming context.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure. </param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class with the specified string.</summary>
      <param name="message">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class with the specified string and inner exception.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
      <param name="innerException">A reference to an inner exception. </param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>Represents the exception that is thrown when the <see cref="P:System.Data.DataColumn.Expression" /> property of a <see cref="T:System.Data.DataColumn" /> contains a syntax error.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">The data needed to serialize or deserialize an object. </param>
      <param name="context">The source and destination of a specific serialized stream. </param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.TypedDataSetGenerator">
      <summary>Used to create a strongly typed <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGenerator" /> class.</summary>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">The source <see cref="T:System.Data.DataSet" /> that specifies the metadata for the typed <see cref="T:System.Data.DataSet" />. </param>
      <param name="codeNamespace">The namespace that provides the target namespace for the typed <see cref="T:System.Data.DataSet" />. </param>
      <param name="codeGen">The generator used to create the typed <see cref="T:System.Data.DataSet" />. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)">
      <summary>Transforms a string in a valid, typed <see cref="T:System.Data.DataSet" /> name.</summary>
      <returns>A string that is the converted name.</returns>
      <param name="name">The source name to transform into a valid, typed <see cref="T:System.Data.DataSet" /> name. </param>
      <param name="codeGen">The generator used to perform the conversion. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.TypedDataSetGeneratorException">
      <summary>The exception that is thrown when a name conflict occurs while generating a strongly typed <see cref="T:System.Data.DataSet" />. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class.</summary>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class.</summary>
      <param name="list">
        <see cref="T:System.Collections.ArrayList" /> object containing a dynamic list of exceptions. </param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class using the specified serialization information and streaming context.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure. </param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class with the specified string. </summary>
      <param name="message">The string to display when the exception is thrown.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class with the specified string and inner exception. </summary>
      <param name="message">The string to display when the exception is thrown.</param>
      <param name="innerException">A reference to an inner exception.</param>
    </member>
    <member name="P:System.Data.TypedDataSetGeneratorException.ErrorList">
      <summary>Gets a dynamic list of generated errors.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:System.Data.TypedDataSetGeneratorException" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>Represents a restriction on a set of columns in which all values must be unique.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the <see cref="T:System.Data.DataColumn" /> to constrain, and a value specifying whether the constraint is a primary key.</summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain. </param>
      <param name="isPrimaryKey">true to indicate that the constraint is a primary key; otherwise, false. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the given array of <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with an array of <see cref="T:System.Data.DataColumn" /> objects to constrain, and a value specifying whether the constraint is a primary key.</summary>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
      <param name="isPrimaryKey">true to indicate that the constraint is a primary key; otherwise, false. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name and <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name">The name of the constraint. </param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name, the <see cref="T:System.Data.DataColumn" /> to constrain, and a value specifying whether the constraint is a primary key.</summary>
      <param name="name">The name of the constraint. </param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain. </param>
      <param name="isPrimaryKey">true to indicate that the constraint is a primary key; otherwise, false. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name and array of <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="name">The name of the constraint. </param>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name, an array of <see cref="T:System.Data.DataColumn" /> objects to constrain, and a value specifying whether the constraint is a primary key.</summary>
      <param name="name">The name of the constraint. </param>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
      <param name="isPrimaryKey">true to indicate that the constraint is a primary key; otherwise, false. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name, an array of <see cref="T:System.Data.DataColumn" /> objects to constrain, and a value specifying whether the constraint is a primary key.</summary>
      <param name="name">The name of the constraint. </param>
      <param name="columnNames">An array of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
      <param name="isPrimaryKey">true to indicate that the constraint is a primary key; otherwise, false. </param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>Gets the array of columns that this constraint affects.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>Compares this constraint to a second to determine if both are identical.</summary>
      <returns>true, if the contraints are equal; otherwise, false.</returns>
      <param name="key2">The object to which this <see cref="T:System.Data.UniqueConstraint" /> is compared. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>Gets the hash code of this instance of the <see cref="T:System.Data.UniqueConstraint" /> object.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>Gets a value indicating whether or not the constraint is on a primary key.</summary>
      <returns>true, if the constraint is on a primary key; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>Gets the table to which this constraint belongs.</summary>
      <returns>The <see cref="T:System.Data.DataTable" /> to which the constraint belongs.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>Specifies how query command results are applied to the row being updated.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>Any returned parameters or rows are ignored.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>Output parameters are mapped to the changed row in the <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>The data in the first returned row is mapped to the changed row in the <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>Both the output parameters and the first returned row are mapped to the changed row in the <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>Specifies the action to take with regard to the current and remaining rows during an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>The <see cref="T:System.Data.Common.DataAdapter" /> is to continue proccessing rows.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>The event handler reports that the update should be treated as an error.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>The current row is not to be updated.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>The current row and all remaining rows are not to be updated.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>Represents the exception that is thrown when you try to return a version of a <see cref="T:System.Data.DataRow" /> that has been deleted.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>Specifies how to read XML data and a relational schema into a <see cref="T:System.Data.DataSet" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>Default.  </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>Reads any inline schema and loads the data. If the <see cref="T:System.Data.DataSet" /> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>Ignores any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" /> schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <see cref="T:System.Data.DataSet" />). If the data is a DiffGram, IgnoreSchema has the same functionality as DiffGram.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>Ignores any inline schema, infers schema from the data and loads the data. If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />. The semantics are identical to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation. As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved. Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When <see cref="T:System.Data.XmlReadMode" /> is set to Fragment, the default namespace is read as the inline schema.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary>Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>Specifies how to write XML data and a relational schema from a <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataSet" /> as XML data with the relational structure as inline XSD schema. If the <see cref="T:System.Data.DataSet" /> has only a schema with no data, only the inline schema is written. If the <see cref="T:System.Data.DataSet" /> does not have a current schema, nothing is written.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>Writes the current contents of the <see cref="T:System.Data.DataSet" /> as XML data, without an XSD schema. If no data is loaded into the <see cref="T:System.Data.DataSet" />, nothing is written.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>Writes the entire <see cref="T:System.Data.DataSet" /> as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call <see cref="M:System.Data.DataSet.GetChanges" />, and then call <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram on the returned <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary>Indicates the position of the catalog name in a qualified table name in a text command. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary>Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary>Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>Represents a set of SQL commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Data.Common.DataAdapter" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary>Initializes a new instance of a <see cref="T:System.Data.Common.DataAdapter" /> class from an existing object of the same type.</summary>
      <param name="from">A <see cref="T:System.Data.Common.DataAdapter" /> object used to create the new <see cref="T:System.Data.Common.DataAdapter" />. </param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>Gets or sets a value indicating whether <see cref="M:System.Data.DataRow.AcceptChanges" /> is called on a <see cref="T:System.Data.DataRow" /> after it is added to the <see cref="T:System.Data.DataTable" /> during any of the Fill operations.</summary>
      <returns>true if <see cref="M:System.Data.DataRow.AcceptChanges" /> is called on the <see cref="T:System.Data.DataRow" />; otherwise false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary>Gets or sets whether <see cref="M:System.Data.DataRow.AcceptChanges" /> is called during a <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>true if <see cref="M:System.Data.DataRow.AcceptChanges" /> is called during an <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; otherwise false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>Creates a copy of this instance of <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns>The cloned instance of <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.</summary>
      <returns>true to continue the update without generating an exception; otherwise false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>Creates a new <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>A new <see cref="T:System.Data.Common.DataTableMappingCollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DataAdapter" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records.</param>
      <param name="srcTable">A string indicating the name of the source table.</param>
      <param name="dataReader">An instance of <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">An integer indicating the location of the starting record.</param>
      <param name="maxRecords">An integer indicating the maximum number of records.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>Adds or refreshes rows in the <see cref="T:System.Data.DataTable" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name and the specified <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records.</param>
      <param name="dataReader">An instance of <see cref="T:System.Data.IDataReader" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Adds or refreshes rows in a specified range in the collection of <see cref="T:System.Data.DataTable" /> objects to match those in the data source.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataTables">A collection of <see cref="T:System.Data.DataTable" /> objects to fill with records.</param>
      <param name="dataReader">An instance of <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">An integer indicating the location of the starting record.</param>
      <param name="maxRecords">An integer indicating the maximum number of records.</param>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary>Returned when an error occurs during a fill operation.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary>Gets or sets the <see cref="T:System.Data.LoadOption" /> that determines how the adapter fills the <see cref="T:System.Data.DataTable" /> from the <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.LoadOption" /> value.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source. </param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" />.</summary>
      <returns>A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataTable" /> to be filled from the <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values.</param>
      <param name="srcTable">The name of the source table to use for table mapping.</param>
      <param name="dataReader">The <see cref="T:System.Data.IDataReader" /> to be used as the data source when filling the <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</returns>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to be filled from the <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values.</param>
      <param name="dataReader">The <see cref="T:System.Data.IDataReader" /> to be used as the data source when filling the <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>Gets the parameters set by the user when executing an SQL SELECT statement.</summary>
      <returns>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary>Indicates whether a <see cref="T:System.Data.Common.DataTableMappingCollection" /> has been created.</summary>
      <returns>true if a <see cref="T:System.Data.Common.DataTableMappingCollection" /> has been created; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>Determines the action to take when incoming data does not have a matching table or column.</summary>
      <returns>One of the <see cref="T:System.Data.MissingMappingAction" /> values. The default is Passthrough.</returns>
      <exception cref="T:System.ArgumentException">The value set is not one of the <see cref="T:System.Data.MissingMappingAction" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>Determines the action to take when existing <see cref="T:System.Data.DataSet" /> schema does not match incoming data.</summary>
      <returns>One of the <see cref="T:System.Data.MissingSchemaAction" /> values. The default is Add.</returns>
      <exception cref="T:System.ArgumentException">The value set is not one of the <see cref="T:System.Data.MissingSchemaAction" /> values. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>Invoked when an error occurs during a Fill.</summary>
      <param name="value">A <see cref="T:System.Data.FillErrorEventArgs" /> object.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary>Resets <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> to its default state and causes <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> to honor <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary>Gets or sets whether the Fill method should return provider-specific values or common CLS-compliant values.</summary>
      <returns>true if the Fill method should return provider-specific values; otherwise false to return common CLS-compliant values.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary>Determines whether the <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> property should be persisted.</summary>
      <returns>true if the <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> property is persisted; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary>Determines whether the <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> property should be persisted.</summary>
      <returns>true if the <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> property is persisted; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>Determines whether one or more <see cref="T:System.Data.Common.DataTableMapping" /> objects exist and they should be persisted.</summary>
      <returns>true if one or more <see cref="T:System.Data.Common.DataTableMapping" /> objects exist; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary>Indicates how a source table is mapped to a dataset table.</summary>
      <returns>A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />. The default value is an empty collection.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>Gets a collection that provides the master mapping between a source table and a <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />. The default value is an empty collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table."</summary>
      <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source. </param>
      <exception cref="T:System.InvalidOperationException">The source table is invalid. </exception>
      <exception cref="T:System.Data.DBConcurrencyException">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>Contains a generic column mapping for an object that inherits from <see cref="T:System.Data.Common.DataAdapter" />. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DataColumnMapping" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DataColumnMapping" /> class with the specified source column name and <see cref="T:System.Data.DataSet" /> column name to map to.</summary>
      <param name="sourceColumn">The case-sensitive column name from a data source. </param>
      <param name="dataSetColumn">The column name, which is not case sensitive, from a <see cref="T:System.Data.DataSet" /> to map to. </param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>Gets or sets the name of the column within the <see cref="T:System.Data.DataSet" /> to map to.</summary>
      <returns>The name of the column within the <see cref="T:System.Data.DataSet" /> to map to. The name is not case sensitive.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Gets a <see cref="T:System.Data.DataColumn" /> from the given <see cref="T:System.Data.DataTable" /> using the <see cref="T:System.Data.MissingSchemaAction" /> and the <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" /> property.</summary>
      <returns>A <see cref="T:System.Data.DataColumn" />.</returns>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to get the column from.</param>
      <param name="dataType">The <see cref="T:System.Type" /> of the data column.</param>
      <param name="schemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>A static version of <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> that can be called without instantiating a <see cref="T:System.Data.Common.DataColumnMapping" /> object.</summary>
      <returns>A <see cref="T:System.Data.DataColumn" /> object.</returns>
      <param name="sourceColumn">The case-sensitive column name from a data source. </param>
      <param name="dataSetColumn">The column name, which is not case sensitive, from a <see cref="T:System.Data.DataSet" /> to map to. </param>
      <param name="dataTable">An instance of <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType">The data type for the column being mapped.</param>
      <param name="schemaAction">Determines the action to take when existing <see cref="T:System.Data.DataSet" /> schema does not match incoming data.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>Gets or sets the name of the column within the data source to map from. The name is case-sensitive.</summary>
      <returns>The case-sensitive name of the column in the data source.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A copy of the current object.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>Converts the current <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> name to a string.</summary>
      <returns>The current <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> name as a string.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>Contains a collection of <see cref="T:System.Data.Common.DataColumnMapping" /> objects.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>Creates an empty <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>Adds a <see cref="T:System.Data.Common.DataColumnMapping" /> object to the collection.</summary>
      <returns>The index of the DataColumnMapping object that was added to the collection.</returns>
      <param name="value">A DataColumnMapping object to add to the collection. </param>
      <exception cref="T:System.InvalidCastException">The object passed in was not a <see cref="T:System.Data.Common.DataColumnMapping" /> object. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:System.Data.Common.DataColumnMapping" /> object to the collection when given a source column name and a <see cref="T:System.Data.DataSet" /> column name.</summary>
      <returns>The DataColumnMapping object that was added to the collection.</returns>
      <param name="sourceColumn">The case-sensitive name of the source column to map to. </param>
      <param name="dataSetColumn">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> column to map to. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary>Copies the elements of the specified <see cref="T:System.Array" /> to the end of the collection.</summary>
      <param name="values">The <see cref="T:System.Array" /> to add to the collection.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> array to the end of the collection.</summary>
      <param name="values">The array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>Removes all <see cref="T:System.Data.Common.DataColumnMapping" /> objects from the collection.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>Gets a value indicating whether a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the given <see cref="T:System.Object" /> exists in the collection.</summary>
      <returns>true if the collection contains the specified <see cref="T:System.Data.Common.DataColumnMapping" /> object; otherwise, false.</returns>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" />. </param>
      <exception cref="T:System.InvalidCastException">The object passed in was not a <see cref="T:System.Data.Common.DataColumnMapping" /> object. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>Gets a value indicating whether a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the given source column name exists in the collection.</summary>
      <returns>true if collection contains a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name; otherwise, false.</returns>
      <param name="value">The case-sensitive source column name of the <see cref="T:System.Data.Common.DataColumnMapping" /> object. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> to the specified array.</summary>
      <param name="array">An <see cref="T:System.Array" /> to which to copy <see cref="T:System.Data.Common.DataColumnMappingCollection" /> elements. </param>
      <param name="index">The starting index of the array. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> to the specified <see cref="T:System.Data.Common.DataColumnMapping" /> array.</summary>
      <param name="array">A <see cref="T:System.Data.Common.DataColumnMapping" /> array to which to copy the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> elements.</param>
      <param name="index">The zero-based index in the <paramref name="array" /> at which copying begins.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>Gets the number of <see cref="T:System.Data.Common.DataColumnMapping" /> objects in the collection.</summary>
      <returns>The number of items in the collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Gets the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified <see cref="T:System.Data.DataSet" /> column name.</summary>
      <returns>The <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified <see cref="T:System.Data.DataSet" /> column name.</returns>
      <param name="value">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> column to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>Gets a <see cref="T:System.Data.Common.DataColumnMapping" /> for the specified <see cref="T:System.Data.Common.DataColumnMappingCollection" />, source column name, and <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DataColumnMapping" /> object.</returns>
      <param name="columnMappings">The <see cref="T:System.Data.Common.DataColumnMappingCollection" />. </param>
      <param name="sourceColumn">The case-sensitive source column name to find. </param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="mappingAction" /> parameter was set to Error, and no mapping was specified. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>A static method that returns a <see cref="T:System.Data.DataColumn" /> object without instantiating a <see cref="T:System.Data.Common.DataColumnMappingCollection" /> object.</summary>
      <returns>A <see cref="T:System.Data.DataColumn" /> object.</returns>
      <param name="columnMappings">The <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">The case-sensitive column name from a data source.</param>
      <param name="dataType">The data type for the column being mapped.</param>
      <param name="dataTable">An instance of <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</param>
      <param name="schemaAction">Determines the action to take when the existing <see cref="T:System.Data.DataSet" /> schema does not match incoming data.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary>Gets an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>Gets the location of the specified <see cref="T:System.Object" /> that is a <see cref="T:System.Data.Common.DataColumnMapping" /> within the collection.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Object" /> that is a <see cref="T:System.Data.Common.DataColumnMapping" /> within the collection.</returns>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" /> to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>Gets the location of the <see cref="T:System.Data.Common.DataColumnMapping" /> with the specified source column name.</summary>
      <returns>The zero-based location of the <see cref="T:System.Data.Common.DataColumnMapping" /> with the specified case-sensitive source column name.</returns>
      <param name="sourceColumn">The case-sensitive name of the source column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>Gets the location of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> with the given <see cref="T:System.Data.DataSet" /> column name.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> with the given DataSet column name, or -1 if the DataColumnMapping object does not exist in the collection.</returns>
      <param name="dataSetColumn">The name, which is not case-sensitive, of the data set column to find. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary>Inserts a <see cref="T:System.Data.Common.DataColumnMapping" /> object into the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" /> object to insert.</param>
      <param name="value">The <see cref="T:System.Data.Common.DataColumnMapping" /> object.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:System.Data.Common.DataColumnMapping" /> object into the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" /> object to insert. </param>
      <param name="value">The <see cref="T:System.Data.Common.DataColumnMapping" /> object. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Data.Common.DataColumnMapping" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Data.Common.DataColumnMapping" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" /> object to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name.</summary>
      <returns>The <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name.</returns>
      <param name="sourceColumn">The case-sensitive name of the source column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary>Removes the specified <see cref="T:System.Data.Common.DataColumnMapping" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.Data.Common.DataColumnMapping" /> to remove.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>Removes the <see cref="T:System.Object" /> that is a <see cref="T:System.Data.Common.DataColumnMapping" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" /> to remove. </param>
      <exception cref="T:System.InvalidCastException">The object specified was not a <see cref="T:System.Data.Common.DataColumnMapping" /> object. </exception>
      <exception cref="T:System.ArgumentException">The object specified is not in the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified index from the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" /> object to remove. </param>
      <exception cref="T:System.IndexOutOfRangeException">There is no <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified index. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name from the collection.</summary>
      <param name="sourceColumn">The case-sensitive source column name. </param>
      <exception cref="T:System.IndexOutOfRangeException">There is no <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary>Adds a <see cref="T:System.Data.Common.DataColumnMapping" /> object to the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> by using the source column and <see cref="T:System.Data.DataSet" /> column names.</summary>
      <returns>The ColumnMapping object that was added to the collection.</returns>
      <param name="sourceColumnName">The case-sensitive name of the source column.</param>
      <param name="dataSetColumnName">The name of the <see cref="T:System.Data.DataSet" /> column.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary>Gets the <see cref="T:System.Data.Common.DataColumnMapping" /> object that has the specified <see cref="T:System.Data.DataSet" /> column name.</summary>
      <returns>The <see cref="T:System.Data.Common.DataColumnMapping" /> object that  has the specified <see cref="T:System.Data.DataSet" /> column name.</returns>
      <param name="dataSetColumnName">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> column to find.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Data.IColumnMapping" /> object with the specified SourceColumn name.</summary>
      <returns>The IColumnMapping object with the specified SourceColumn name.</returns>
      <param name="index">Index of the element.</param>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>Contains a description of a mapped relationship between a source table and a <see cref="T:System.Data.DataTable" />. This class is used by a <see cref="T:System.Data.Common.DataAdapter" /> when populating a <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" /> class with a source when given a source table name and a <see cref="T:System.Data.DataTable" /> name.</summary>
      <param name="sourceTable">The case-sensitive source table name from a data source. </param>
      <param name="dataSetTable">The table name from a <see cref="T:System.Data.DataSet" /> to map to. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" /> class when given a source table name, a <see cref="T:System.Data.DataTable" /> name, and an array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects.</summary>
      <param name="sourceTable">The case-sensitive source table name from a data source. </param>
      <param name="dataSetTable">The table name from a <see cref="T:System.Data.DataSet" /> to map to. </param>
      <param name="columnMappings">An array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects. </param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>Gets the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> for the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>Gets or sets the table name from a <see cref="T:System.Data.DataSet" />.</summary>
      <returns>The table name from a <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>Gets a <see cref="T:System.Data.DataColumn" /> from the specified <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Data.MissingMappingAction" /> value and the name of the <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>A <see cref="T:System.Data.DataColumn" />.</returns>
      <param name="sourceColumn">The name of the <see cref="T:System.Data.DataColumn" />. </param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="mappingAction" /> parameter was set to Error, and no mapping was specified. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Returns a <see cref="T:System.Data.DataColumn" /> object for a given column name.</summary>
      <returns>A <see cref="T:System.Data.DataColumn" /> object.</returns>
      <param name="sourceColumn">The name of the <see cref="T:System.Data.DataColumn" />. </param>
      <param name="dataType">The data type for <paramref name="sourceColumn" />.</param>
      <param name="dataTable">The table name from a <see cref="T:System.Data.DataSet" /> to map to. </param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values. </param>
      <param name="schemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>Gets the current <see cref="T:System.Data.DataTable" /> for the specified <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.Data.MissingSchemaAction" /> value.</summary>
      <returns>A <see cref="T:System.Data.DataTable" />.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> from which to get the <see cref="T:System.Data.DataTable" />. </param>
      <param name="schemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>Gets or sets the case-sensitive source table name from a data source.</summary>
      <returns>The case-sensitive source table name from a data source.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary>Gets the derived <see cref="T:System.Data.Common.DataColumnMappingCollection" /> for the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>Converts the current <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> name to a string.</summary>
      <returns>The current <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> name, as a string.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>A collection of <see cref="T:System.Data.Common.DataTableMapping" /> objects. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMappingCollection" /> class. This new instance is empty, that is, it does not yet contain any <see cref="T:System.Data.Common.DataTableMapping" /> objects.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>Adds an <see cref="T:System.Object" /> that is a table mapping to the collection.</summary>
      <returns>The index of the DataTableMapping object added to the collection.</returns>
      <param name="value">A DataTableMapping object to add to the collection. </param>
      <exception cref="T:System.InvalidCastException">The object passed in was not a <see cref="T:System.Data.Common.DataTableMapping" /> object. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:System.Data.Common.DataTableMapping" /> object to the collection when given a source table name and a <see cref="T:System.Data.DataSet" /> table name.</summary>
      <returns>The <see cref="T:System.Data.Common.DataTableMapping" /> object that was added to the collection.</returns>
      <param name="sourceTable">The case-sensitive name of the source table to map from. </param>
      <param name="dataSetTable">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> table to map to. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary>Copies the elements of the specified <see cref="T:System.Array" /> to the end of the collection.</summary>
      <param name="values">An <see cref="T:System.Array" /> of values to add to the collection.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.Common.DataTableMapping" /> array to the end of the collection.</summary>
      <param name="values">The array of <see cref="T:System.Data.Common.DataTableMapping" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>Removes all <see cref="T:System.Data.Common.DataTableMapping" /> objects from the collection.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>Gets a value indicating whether the given <see cref="T:System.Data.Common.DataTableMapping" /> object exists in the collection.</summary>
      <returns>true if this collection contains the specified <see cref="T:System.Data.Common.DataTableMapping" />; otherwise false.</returns>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataTableMapping" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>Gets a value indicating whether a <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table name exists in the collection.</summary>
      <returns>true if the collection contains a <see cref="T:System.Data.Common.DataTableMapping" /> object with this source table name; otherwise false.</returns>
      <param name="value">The case-sensitive source table name containing the <see cref="T:System.Data.Common.DataTableMapping" /> object. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Data.Common.DataTableMappingCollection" /> to the specified array.</summary>
      <param name="array">An <see cref="T:System.Array" /> to which to copy the <see cref="T:System.Data.Common.DataTableMappingCollection" /> elements. </param>
      <param name="index">The starting index of the array. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Data.Common.DataTableMapping" /> to the specified array.</summary>
      <param name="array">A <see cref="T:System.Data.Common.DataTableMapping" /> to which to copy the <see cref="T:System.Data.Common.DataTableMappingCollection" /> elements.</param>
      <param name="index">The starting index of the array.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>Gets the number of <see cref="T:System.Data.Common.DataTableMapping" /> objects in the collection.</summary>
      <returns>The number of DataTableMapping objects in the collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified <see cref="T:System.Data.DataSet" /> table name.</summary>
      <returns>The <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified <see cref="T:System.Data.DataSet" /> table name.</returns>
      <param name="dataSetTable">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> table to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary>Gets an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>Gets a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source table name and <see cref="T:System.Data.DataSet" /> table name, using the given <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DataTableMapping" /> object.</returns>
      <param name="tableMappings">The <see cref="T:System.Data.Common.DataTableMappingCollection" /> collection to search. </param>
      <param name="sourceTable">The case-sensitive name of the mapped source table. </param>
      <param name="dataSetTable">The name, which is not case-sensitive, of the mapped <see cref="T:System.Data.DataSet" /> table. </param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="mappingAction" /> parameter was set to Error, and no mapping was specified. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>Gets the location of the specified <see cref="T:System.Data.Common.DataTableMapping" /> object within the collection.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Data.Common.DataTableMapping" /> object within the collection.</returns>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataTableMapping" /> object to find. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>Gets the location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table name.</summary>
      <returns>The zero-based location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table name.</returns>
      <param name="sourceTable">The case-sensitive name of the source table. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>Gets the location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified <see cref="T:System.Data.DataSet" /> table name.</summary>
      <returns>The zero-based location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the given <see cref="T:System.Data.DataSet" /> table name, or -1 if the <see cref="T:System.Data.Common.DataTableMapping" /> object does not exist in the collection.</returns>
      <param name="dataSetTable">The name, which is not case-sensitive, of the DataSet table to find. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary>Inserts a <see cref="T:System.Data.Common.DataTableMapping" /> object into the <see cref="T:System.Data.Common.DataTableMappingCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to insert.</param>
      <param name="value">The <see cref="T:System.Data.Common.DataTableMapping" /> object to insert.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:System.Data.Common.DataTableMapping" /> object into the <see cref="T:System.Data.Common.DataTableMappingCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to insert. </param>
      <param name="value">The <see cref="T:System.Data.Common.DataTableMapping" /> object to insert. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Data.Common.DataTableMapping" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Data.Common.DataTableMapping" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to return. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table name.</summary>
      <returns>The <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table name.</returns>
      <param name="sourceTable">The case-sensitive name of the source table. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary>Removes the specified <see cref="T:System.Data.Common.DataTableMapping" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.Data.Common.DataTableMapping" /> object to remove.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:System.Data.Common.DataTableMapping" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.Data.Common.DataTableMapping" /> object to remove. </param>
      <exception cref="T:System.InvalidCastException">The object specified was not a <see cref="T:System.Data.Common.DataTableMapping" /> object. </exception>
      <exception cref="T:System.ArgumentException">The object specified is not in the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.Common.DataTableMapping" /> object located at the specified index from the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to remove. </param>
      <exception cref="T:System.IndexOutOfRangeException">A <see cref="T:System.Data.Common.DataTableMapping" /> object does not exist with the specified index. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table name from the collection.</summary>
      <param name="sourceTable">The case-sensitive source table name to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">A <see cref="T:System.Data.Common.DataTableMapping" /> object does not exist with the specified source table name. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets an item from the collection at a specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the item to get or set.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary>Adds a table mapping to the collection.</summary>
      <returns>A reference to the newly-mapped <see cref="T:System.Data.ITableMapping" /> object.</returns>
      <param name="sourceTableName">The case-sensitive name of the source table.</param>
      <param name="dataSetTableName">The name of the <see cref="T:System.Data.DataSet" /> table.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary>Gets the TableMapping object with the specified <see cref="T:System.Data.DataSet" /> table name.</summary>
      <returns>The TableMapping object with the specified DataSet table name.</returns>
      <param name="dataSetTableName">The name of the DataSet table within the collection.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary>Gets or sets the instance of <see cref="T:System.Data.ITableMapping" /> with the specified <see cref="P:System.Data.ITableMapping.SourceTable" /> name.</summary>
      <returns>The instance of <see cref="T:System.Data.ITableMapping" /> with the specified SourceTable name.</returns>
      <param name="index">The SourceTable name of the <see cref="T:System.Data.ITableMapping" />.</param>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary>Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary>Constructs an instance of the <see cref="T:System.Data.Common.DbCommand" /> object.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary>Attempts to cancels the execution of a <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary>Gets or sets the text command to run against the data source.</summary>
      <returns>The text command to execute. The default value is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</summary>
      <returns>The time in seconds to wait for the command to execute.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary>Indicates or specifies how the <see cref="P:System.Data.Common.DbCommand.CommandText" /> property is interpreted.</summary>
      <returns>One of the <see cref="T:System.Data.CommandType" /> values. The default is Text.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary>Gets or sets the <see cref="T:System.Data.Common.DbConnection" /> used by this <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>The connection to the data source.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary>Creates a new instance of a <see cref="T:System.Data.Common.DbParameter" /> object.</summary>
      <returns>A <see cref="T:System.Data.Common.DbParameter" /> object.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary>Creates a new instance of a <see cref="T:System.Data.Common.DbParameter" /> object.</summary>
      <returns>A <see cref="T:System.Data.Common.DbParameter" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary>Gets or sets the <see cref="T:System.Data.Common.DbConnection" /> used by this <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>The connection to the data source.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary>Gets the collection of <see cref="T:System.Data.Common.DbParameter" /> objects.</summary>
      <returns>The parameters of the SQL statement or stored procedure.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary>Gets or sets the <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> within which this <see cref="T:System.Data.Common.DbCommand" /> object executes.</summary>
      <returns>The transaction within which a Command object of a .NET Framework data provider executes. The default value is a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary>Gets or sets a value indicating whether the command object should be visible in a customized interface control.</summary>
      <returns>true, if the command object should be visible in a control; otherwise false. The default is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary>Executes the command text against the connection.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataReader" />.</returns>
      <param name="behavior">An instance of <see cref="T:System.Data.CommandBehavior" />.</param>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary>Executes a SQL statement against a connection object.</summary>
      <returns>The number of rows affected.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary>Executes the <see cref="P:System.Data.Common.DbCommand.CommandText" /> against the <see cref="P:System.Data.Common.DbCommand.Connection" />, and returns an <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataReader" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Executes the <see cref="P:System.Data.Common.DbCommand.CommandText" /> against the <see cref="P:System.Data.Common.DbCommand.Connection" />, and returns an <see cref="T:System.Data.Common.DbDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values. </summary>
      <returns>An <see cref="T:System.Data.Common.DbDataReader" /> object.</returns>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary>Executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.</summary>
      <returns>The first column of the first row in the result set.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary>Gets the collection of <see cref="T:System.Data.Common.DbParameter" /> objects.</summary>
      <returns>The parameters of the SQL statement or stored procedure.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary>Creates a prepared (or compiled) version of the command on the data source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary>Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>The connection to the data source.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary>Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</summary>
      <returns>An IDbDataParameter object.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>An <see cref="T:System.Data.IDataReader" /> object.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</summary>
      <returns>An <see cref="T:System.Data.IDataReader" /> object.</returns>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values.</param>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary>Gets the <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>The parameters of the SQL statement or stored procedure.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary>Gets or sets the <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> within which this <see cref="T:System.Data.Common.DbCommand" /> object executes.</summary>
      <returns>The transaction within which a Command object of a .NET Framework data provider executes. The default value is a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary>Gets or sets the <see cref="T:System.Data.Common.DbTransaction" /> within which this <see cref="T:System.Data.Common.DbCommand" /> object executes.</summary>
      <returns>The transaction within which a Command object of a .NET Framework data provider executes. The default value is a null reference (Nothing in Visual Basic).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary>Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the Update method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>One of the <see cref="T:System.Data.UpdateRowSource" /> values. The default is Both unless the command is automatically generated. Then the default is None.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary>Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database. This is an abstract class that can only be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary>Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class. </summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary>Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</summary>
      <param name="parameter">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied. </param>
      <param name="row">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />. </param>
      <param name="statementType">The type of command being generated; INSERT, UPDATE or DELETE. </param>
      <param name="whereClause">true if the parameter is part of the update or delete WHERE clause, false if it is part of the insert or update values. </param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary>Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
      <returns>A <see cref="T:System.Data.Common.CatalogLocation" /> object.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary>Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
      <returns>A string indicating the catalog separator for use with an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary>Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Returns one of the <see cref="T:System.Data.ConflictOption" /> values describing the behavior of this <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary>Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataAdapter" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary>Returns the name of the specified parameter in the format of @p#. Use when building a custom command builder.</summary>
      <returns>The name of the parameter with the specified number appended as part of the parameter name.</returns>
      <param name="parameterOrdinal">The number to be included as part of the parameter's name..</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary>Returns the full parameter name, given the partial parameter name.</summary>
      <returns>The full parameter name corresponding to the partial parameter name requested.</returns>
      <param name="parameterName">The partial name of the parameter.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary>Returns the placeholder for the parameter in the associated SQL statement.</summary>
      <returns>The name of the parameter with the specified number appended.</returns>
      <param name="parameterOrdinal">The number to be included as part of the parameter's name.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary>Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</returns>
      <param name="sourceCommand">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary>Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation. Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
      <param name="command">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</summary>
      <returns>The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.</returns>
      <param name="unquotedIdentifier">The original unquoted identifier.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary>Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</summary>
      <returns>The beginning character or characters to use. The default is an empty string.</returns>
      <exception cref="T:System.InvalidOperationException">This property cannot be changed after an insert, update, or delete command has been generated. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary>Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</summary>
      <returns>The ending character or characters to use. The default is an empty string.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary>Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</summary>
      <param name="rowUpdatingEvent">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</summary>
      <returns>The character to be used as the schema separator.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary>Specifies whether all column values in an update statement are included or only changed ones.</summary>
      <returns>true if the UPDATE statement generated by the <see cref="T:System.Data.Common.DbCommandBuilder" /> includes all columns; false if it includes only changed columns.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary>Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />. </summary>
      <param name="adapter">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</summary>
      <returns>The unquoted identifier, with embedded quotes properly un-escaped.</returns>
      <param name="quotedIdentifier">The identifier that will have its embedded quotes removed.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary>Represents a connection to a database. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbConnection" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>Starts a database transaction.</summary>
      <returns>An object representing the new transaction.</returns>
      <param name="isolationLevel">Specifies the isolation level for the transaction.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary>Starts a database transaction.</summary>
      <returns>An object representing the new transaction.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Starts a database transaction with the specified isolation level.</summary>
      <returns>An object representing the new transaction.</returns>
      <param name="isolationLevel">Specifies the isolation level for the transaction.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary>Changes the current database for an open connection.</summary>
      <param name="databaseName">Specifies the name of the database for the connection to use.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary>Closes the connection to the database. This is the preferred method of closing any open connection.</summary>
      <exception cref="T:System.Data.Common.DbException">The connection-level error that occurred while opening the connection. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary>Gets or sets the string used to open the connection.</summary>
      <returns>The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary>Gets the time to wait while establishing a connection before terminating the attempt and generating an error.</summary>
      <returns>The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary>Creates and returns a <see cref="T:System.Data.Common.DbCommand" /> object associated with the current connection.</summary>
      <returns>A <see cref="T:System.Data.Common.DbCommand" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary>Creates and returns a <see cref="T:System.Data.Common.DbCommand" /> object associated with the current connection.</summary>
      <returns>A <see cref="T:System.Data.Common.DbCommand" /> object.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary>Gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.</summary>
      <returns>The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary>Gets the name of the database server to which to connect.</summary>
      <returns>The name of the database server to which to connect. The default value is an empty string.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary>Gets the <see cref="T:System.Data.Common.DbProviderFactory" /> for this <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>A <see cref="T:System.Data.Common.DbProviderFactory" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified transaction.</summary>
      <param name="transaction">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.Common.DbConnection" /> using the specified string for the schema name.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
      <param name="collectionName">Specifies the name of the schema to return. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> is specified as null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.Common.DbConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
      <param name="collectionName">Specifies the name of the schema to return.</param>
      <param name="restrictionValues">Specifies a set of restriction values for the requested schema.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> is specified as null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.Common.DbConnection.StateChange" /> event.</summary>
      <param name="stateChange">A <see cref="T:System.Data.StateChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary>Opens a database connection with the settings specified by the <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary>Gets a string that represents the version of the server to which the object is connected.</summary>
      <returns>The version of the database. The format of the string returned depends on the specific type of connection you are using.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary>Gets a string that describes the state of the connection.</summary>
      <returns>The state of the connection. The format of the string returned depends on the specific type of connection you are using.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary>Occurs when the state of the event changes.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary>Begins a database transaction.</summary>
      <returns>An object that represents the new transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary>Begins a database transaction with the specified <see cref="T:System.Data.IsolationLevel" /> value.</summary>
      <returns>An object that represents the new transaction.</returns>
      <param name="isolationLevel">One of the <see cref="T:System.Data.IsolationLevel" /> values.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary>Creates and returns a <see cref="T:System.Data.Common.DbCommand" /> object that is associated with the current connection.</summary>
      <returns>A <see cref="T:System.Data.Common.DbCommand" /> object that is associated with the connection.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary>Provides a base class for strongly typed connection string builders.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> class, optionally using ODBC rules for quoting values.</summary>
      <param name="useOdbcRules">true to use {} to delimit fields; false to use quotation marks.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary>Adds an entry with the specified key and value into the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">The key to add to the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value">The value for the specified key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> is read-only. -or-The <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> has a fixed size.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary>Provides an efficient and safe way to append a key and value to an existing <see cref="T:System.Text.StringBuilder" /> object.</summary>
      <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to which to add the key/value pair.</param>
      <param name="keyword">The key to be added.</param>
      <param name="value">The value for the supplied key.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary>Provides an efficient and safe way to append a key and value to an existing <see cref="T:System.Text.StringBuilder" /> object.</summary>
      <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to which to add the key/value pair.</param>
      <param name="keyword">The key to be added.</param>
      <param name="value">The value for the supplied key.</param>
      <param name="useOdbcRules">true to use {} to delimit fields, false to use quotation marks.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> property is visible in Visual Studio designers.</summary>
      <returns>true if the connection string is visible within designers; false otherwise. The default is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary>Clears the contents of the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instance.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> is read-only.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary>Clears the collection of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects on the associated <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary>Gets or sets the connection string associated with the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>The current connection string, created from the key/value pairs that are contained within the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. The default value is an empty string.</returns>
      <exception cref="T:System.ArgumentException">An invalid connection string argument has been supplied.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contains a specific key.</summary>
      <returns>true if the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contains an entry with the specified key; otherwise false.</returns>
      <param name="keyword">The key to locate in the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is a null reference (Nothing in Visual Basic).</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary>Gets the current number of keys that are contained within the <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> property.</summary>
      <returns>The number of keys that are contained within the connection string maintained by the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instance.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary>Compares the connection information in this <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> object with the connection information in the supplied object.</summary>
      <returns>true if the connection information in both of the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> objects causes an equivalent connection string; otherwise false.</returns>
      <param name="connectionStringBuilder">The <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> to be compared with this <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> object.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary>Fills a supplied <see cref="T:System.Collections.Hashtable" /> with information about all the properties of this <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors">The <see cref="T:System.Collections.Hashtable" /> to be filled with information about this <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> has a fixed size; otherwise false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> is read-only; otherwise false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key.</summary>
      <returns>The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (Nothing in Visual Basic), and trying to set it creates a new element using the specified key.Passing a null (Nothing in Visual Basic) key throws an <see cref="T:System.ArgumentNullException" />. Assigning a null value removes the key/value pair.</returns>
      <param name="keyword">The key of the item to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">The property is set, and the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> is read-only. -or-The property is set, <paramref name="keyword" /> does not exist in the collection, and the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> has a fixed size.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary>Removes the entry with the specified key from the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instance.</summary>
      <returns>true if the key existed within the connection string and was removed; false if the key did not exist.</returns>
      <param name="keyword">The key of the key/value pair to be removed from the connection string in this <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is null (Nothing in Visual Basic)</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> is read-only, or the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> has a fixed size.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Indicates whether the specified key exists in this <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instance.</summary>
      <returns>true if the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contains an entry with the specified key; otherwise false.</returns>
      <param name="keyword">The key to locate in the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.</summary>
      <param name="keyword">The <see cref="T:System.Object" /> to use as the key of the element to add.</param>
      <param name="value">The <see cref="T:System.Object" /> to use as the value of the element to add.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, false.</returns>
      <param name="keyword">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary>Gets or sets the element with the specified key.</summary>
      <returns>The element with the specified key.</returns>
      <param name="keyword">The key of the element to get or set.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" /> object.</summary>
      <param name="keyword">The key of the element to remove.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Returns a collection of custom attributes for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for this object.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Returns the class name of this instance of a component.</summary>
      <returns>The class name of the object, or null if the class does not have a name.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Returns the name of this instance of a component.</summary>
      <returns>The name of the object, or null if the object does not have a name.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Returns a type converter for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter" /> for this object.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Returns the default event for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> that represents the default event for this object, or null if this object does not have events.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Returns the default property for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property for this object, or null if this object does not have properties.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Returns an editor of the specified type for this instance of a component.</summary>
      <returns>An <see cref="T:System.Object" /> of the specified type that is the editor for this object, or null if the editor cannot be found.</returns>
      <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the editor for this object.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Returns the events for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the events for this component instance.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Returns the events for this instance of a component using the specified attribute array as a filter.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the filtered events for this component instance.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Returns the properties for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties for this component instance.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Returns the properties for this instance of a component using the attribute array as a filter.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the filtered properties for this component instance.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns an object that contains the property described by the specified property descriptor.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the owner of the specified property.</returns>
      <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property whose owner is to be found.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary>Returns the connection string associated with this <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>The current <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Retrieves a value corresponding to the supplied key from this <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>true if <paramref name="keyword" /> was found within the connection string, false otherwise.</returns>
      <param name="keyword">The key of the item to retrieve.</param>
      <param name="value">The value corresponding to the <paramref name="key" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> contains a null value (Nothing in Visual Basic).</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface. Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>Initializes a new instance of a DataAdapter class.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary>Initializes a new instance of a DataAdapter class from an existing object of the same type.</summary>
      <param name="adapter">A DataAdapter object used to create the new DataAdapter. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary>Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</summary>
      <returns>The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</returns>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</param>
      <exception cref="T:System.NotSupportedException">The adapter does not support batches. </exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary>Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</summary>
      <exception cref="T:System.NotSupportedException">The adapter does not support batches. </exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</returns>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> used to update the data source. </param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />. </param>
      <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement. </param>
      <param name="tableMapping">A <see cref="T:System.Data.Common.DataTableMapping" /> object. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</returns>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> that updates the data source. </param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />. </param>
      <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement. </param>
      <param name="tableMapping">A <see cref="T:System.Data.Common.DataTableMapping" /> object. </param>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary>Gets or sets a command for deleting records from the data set.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary>Executes the current batch.</summary>
      <returns>The return value from the last command in the batch.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema. </param>
      <param name="startRecord">The zero-based record number to start with. </param>
      <param name="maxRecords">The maximum number of records to retrieve. </param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <exception cref="T:System.SystemException">The <see cref="T:System.Data.DataSet" /> is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The source table is invalid.-or- The connection is invalid. </exception>
      <exception cref="T:System.InvalidCastException">The connection could not be found. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="startRecord" /> parameter is less than 0.-or- The <paramref name="maxRecords" /> parameter is less than 0. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema. </param>
      <param name="startRecord">The zero-based record number to start with. </param>
      <param name="maxRecords">The maximum number of records to retrieve. </param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source. </param>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <exception cref="T:System.InvalidOperationException">The source table is invalid. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="startRecord" /> parameter is less than 0.-or- The <paramref name="maxRecords" /> parameter is less than 0. </exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema. </param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <exception cref="T:System.SystemException">The source table is invalid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataTable">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping. </param>
      <exception cref="T:System.InvalidOperationException">The source table is invalid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema. </param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source. </param>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</summary>
      <returns>The number of rows added to or refreshed in the data tables.</returns>
      <param name="dataTables">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</param>
      <param name="startRecord">The zero-based record number to start with.</param>
      <param name="maxRecords">The maximum number of records to retrieve.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</param>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <exception cref="T:System.SystemException">The <see cref="T:System.Data.DataSet" /> is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The source table is invalid.-or- The connection is invalid. </exception>
      <exception cref="T:System.InvalidCastException">The connection could not be found. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="startRecord" /> parameter is less than 0.-or- The <paramref name="maxRecords" /> parameter is less than 0. </exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This value does not include rows affected by statements that do not return rows.</returns>
      <param name="startRecord">The zero-based record number to start with. </param>
      <param name="maxRecords">The maximum number of records to retrieve. </param>
      <param name="dataTables">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary>Gets or sets the behavior of the command used to fill the data adapter.</summary>
      <returns>The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</summary>
      <returns>A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to insert the schema in. </param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source. </param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values. </param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source. </param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</summary>
      <returns>A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to insert the schema in. </param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema. </param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <exception cref="T:System.ArgumentException">A source table from which to get the schema could not be found. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</returns>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source. </param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</summary>
      <returns>A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</returns>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source. </param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values. </param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source. </param>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary>Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</summary>
      <returns>The <see cref="T:System.Data.IDataParameter" /> specified.</returns>
      <param name="commandIdentifier">The index of the command to retrieve the parameter from.</param>
      <param name="parameterIndex">The index of the parameter within the command.</param>
      <exception cref="T:System.NotSupportedException">The adapter does not support batches. </exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary>Returns information about an individual update attempt within a larger batched update.</summary>
      <returns>Information about an individual update attempt within a larger batched update.</returns>
      <param name="commandIdentifier">The zero-based column ordinal of the individual command within the batch.</param>
      <param name="recordsAffected">The number of rows affected in the data store by the specified command within the batch.</param>
      <param name="error">An <see cref="T:System.Exception" /> thrown during execution of the specified command. Returns null (Nothing in Visual Basic) if no exception is thrown.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>Gets the parameters set by the user when executing an SQL SELECT statement.</summary>
      <returns>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary>Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">The adapter does not support batches. </exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary>Gets or sets a command used to insert new records into the data source.</summary>
      <returns>A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>Raises the RowUpdated event of a .NET Framework data provider.</summary>
      <param name="value">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Raises the RowUpdating event of a .NET Framework data provider.</summary>
      <param name="value">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" />  that contains the event data. </param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary>Gets or sets a command used to select records in the data source.</summary>
      <returns>A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>Gets or sets an SQL statement for deleting records from the data set.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>Gets or sets an SQL statement used to insert new records into the data source.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>Gets or sets an SQL statement used to select records in the data source.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>Gets or sets an SQL statement used to update records in the data source.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary>Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">The adapter does not support batches. </exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataRow" /> objects.</summary>
      <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataRows">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Data.DataSet" /> is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The source table is invalid. </exception>
      <exception cref="T:System.SystemException">No <see cref="T:System.Data.DataRow" /> exists to update.-or- No <see cref="T:System.Data.DataTable" /> exists to update.-or- No <see cref="T:System.Data.DataSet" /> exists to use as a source. </exception>
      <exception cref="T:System.Data.DBConcurrencyException">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataRow" /> objects.</summary>
      <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataRows">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source. </param>
      <param name="tableMapping">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Data.DataSet" /> is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The source table is invalid. </exception>
      <exception cref="T:System.SystemException">No <see cref="T:System.Data.DataRow" /> exists to update.-or- No <see cref="T:System.Data.DataTable" /> exists to update.-or- No <see cref="T:System.Data.DataSet" /> exists to use as a source. </exception>
      <exception cref="T:System.Data.DBConcurrencyException">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected. </exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</summary>
      <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source. </param>
      <exception cref="T:System.InvalidOperationException">The source table is invalid. </exception>
      <exception cref="T:System.Data.DBConcurrencyException">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</summary>
      <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to use to update the data source. </param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Data.DataSet" /> is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The source table is invalid. </exception>
      <exception cref="T:System.Data.DBConcurrencyException">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</summary>
      <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</returns>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> used to update the data source. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Data.DataSet" /> is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The source table is invalid. </exception>
      <exception cref="T:System.SystemException">No <see cref="T:System.Data.DataRow" /> exists to update.-or- No <see cref="T:System.Data.DataTable" /> exists to update.-or- No <see cref="T:System.Data.DataSet" /> exists to use as a source. </exception>
      <exception cref="T:System.Data.DBConcurrencyException">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch. </summary>
      <returns>The number of rows to process per batch. Value isEffect0There is no limit on the batch size.1Disables batch updating.&gt; 1Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.When setting this to a value other than 1 ,all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to None or OutputParameters. An exception will be thrown otherwise. </returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary>Gets or sets a command used to update records in the data source.</summary>
      <returns>A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>Initializes a new instance of a DBDataPermission class.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary>Initializes a new instance of a DBDataPermission class using an existing DBDataPermission.</summary>
      <param name="permission">An existing DBDataPermission used to create a new DBDataPermission. </param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary>Initializes a new instance of a DBDataPermission class with the specified DBDataPermissionAttribute.</summary>
      <param name="permissionAttribute">A security action associated with a custom security attribute. </param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of a DBDataPermission class with the specified <see cref="T:System.Security.Permissions.PermissionState" /> value.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Initializes a new instance of a DBDataPermission class with the specified <see cref="T:System.Security.Permissions.PermissionState" /> value, and a value indicating whether a blank password is allowed.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
      <param name="allowBlankPassword">Indicates whether a blank password is allowed. </param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Adds access for the specified connection string to the existing state of the DBDataPermission. </summary>
      <param name="connectionString">A permitted connection string.</param>
      <param name="restrictions">String that identifies connection string parameters that are allowed or disallowed.</param>
      <param name="behavior">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> properties.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>Gets a value indicating whether a blank password is allowed.</summary>
      <returns>true if a blank password is allowed, otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary>Removes all permissions that were previous added using the <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" /> method.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>Creates and returns an identical copy of the current permission object.</summary>
      <returns>A copy of the current permission object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary>Creates a new instance of the DBDataPermission class.</summary>
      <returns>A new DBDataPermission object.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
      <param name="securityElement">The XML encoding to use to reconstruct the security object. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>Returns a new permission object representing the intersection of the current permission object and the specified permission object.</summary>
      <returns>A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (Nothing in Visual Basic) if the intersection is empty.</returns>
      <param name="target">A permission object to intersect with the current permission object. It must be of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not a null reference (Nothing in Visual Basic) and is not an instance of the same class as the current permission object. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Returns a value indicating whether the current permission object is a subset of the specified permission object.</summary>
      <returns>true if the current permission object is a subset of the specified permission object, otherwise false.</returns>
      <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission object. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.</summary>
      <returns>true if the permission can be represented as unrestricted.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>Creates an XML encoding of the security object and its current state.</summary>
      <returns>An XML encoding of the security object, including any state information.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>Returns a new permission object that is the union of the current and specified permission objects.</summary>
      <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
      <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="target" /> object is not the same type as the current permission object.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>Associates a security action with a custom security attribute. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermissionAttribute" />.</summary>
      <param name="action">One of the security action values representing an action that can be performed by declarative security.</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>Gets or sets a value indicating whether a blank password is allowed.</summary>
      <returns>true if a blank password is allowed; otherwise false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary>Gets or sets a permitted connection string.</summary>
      <returns>A permitted connection string.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary>Identifies whether the list of connection string parameters identified by the <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> property are the only connection string parameters allowed.</summary>
      <returns>One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> values.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary>Gets or sets connection string parameters that are allowed or disallowed.</summary>
      <returns>One or more connection string parameters that are allowed or disallowed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary>Identifies whether the attribute should serialize the connection string.</summary>
      <returns>true if the attribute should serialize the connection string; otherwise false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Identifies whether the attribute should serialize the set of key restrictions.</summary>
      <returns>true if the attribute should serialize the set of key restrictions; otherwise false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary>Reads a forward-only stream of rows from a data source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary>Closes the <see cref="T:System.Data.Common.DbDataReader" /> object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary>Gets a value indicating the depth of nesting for the current row.</summary>
      <returns>The depth of nesting for the current row.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary>Releases the managed resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and optionally releases the unmanaged resources.</summary>
      <param name="disposing">true to release managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary>Gets the number of columns in the current row.</summary>
      <returns>The number of columns in the current row.</returns>
      <exception cref="T:System.NotSupportedException">There is no current connection to an instance of SQL Server. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.</summary>
      <returns>The actual number of bytes read.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <param name="dataOffset">The index within the row from which to begin the read operation.</param>
      <param name="buffer">The buffer into which to copy the data.</param>
      <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
      <param name="length">The maximum number of characters to read.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a single character.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column, starting at location indicated by <paramref name="dataIndex" />, into the buffer, starting at the location indicated by <paramref name="bufferIndex" />.</summary>
      <returns>The actual number of characters read.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <param name="dataOffset">The index within the row from which to begin the read operation.</param>
      <param name="buffer">The buffer into which to copy the data.</param>
      <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
      <param name="length">The maximum number of characters to read.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary>Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataReader" /> object.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets name of the data type of the specified column.</summary>
      <returns>A string representing the name of the data type.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary>Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal that can be overridden with a provider-specific implementation.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataReader" /> object.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary>Gets the data type of the specified column.</summary>
      <returns>The data type of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally-unique identifier (GUID).</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary>Gets the name of the column, given the zero-based column ordinal.</summary>
      <returns>The name of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal given the name of the column.</summary>
      <returns>The zero-based column ordinal.</returns>
      <param name="name">The name of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The name specified is not a valid column name.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Returns the provider-specific field type of the specified column.</summary>
      <returns>The <see cref="T:System.Type" /> object that describes the data type of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Gets all provider-specific attribute columns in the collection for the current row.</summary>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.String" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary>Populates an array of objects with the column values of the current row.</summary>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary>Gets a value that indicates whether this <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows.</summary>
      <returns>true if the <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.Common.DbDataReader" /> is closed.</summary>
      <returns>true if the <see cref="T:System.Data.Common.DbDataReader" /> is closed; otherwise false.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary>Gets a value that indicates whether the column contains nonexistent or missing values.</summary>
      <returns>true if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise false.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary>Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</summary>
      <returns>The value of the specified column.</returns>
      <param name="name">The name of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary>Advances the reader to the next result when reading the results of a batch of statements.</summary>
      <returns>true if there are more result sets; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary>Advances the reader to the next record in a result set.</summary>
      <returns>true if there are more rows; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement. </summary>
      <returns>The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <returns>An instance of <see cref="T:System.Data.IDataReader" /> to be used when the field points to more remote structured data.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary>Gets the number of fields in the <see cref="T:System.Data.Common.DbDataReader" /> that are not hidden.</summary>
      <returns>The number of fields that are not hidden.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary>Implements <see cref="T:System.Data.IDataRecord" /> and <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, and provides data binding support for <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbDataRecord" /> class.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>Indicates the number of fields within the current record. This property is read-only.</summary>
      <returns>The number of fields within the current record.</returns>
      <exception cref="T:System.NotSupportedException">Not connected to a data source to read from. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>Returns the value of the specified column as a Boolean.</summary>
      <returns>true if the Boolean is true; otherwise false.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>Returns the value of the specified column as a byte.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Returns the value of the specified column as a byte array.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The zero-based column ordinal.</param>
      <param name="dataIndex">The index within the field from which to start the read operation.</param>
      <param name="buffer">The buffer into which to read the stream of bytes.</param>
      <param name="bufferIndex">The index for <paramref name="buffer" /> to start the read operation.</param>
      <param name="length">The number of bytes to read.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>Returns the value of the specified column as a character.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Returns the value of the specified column as a character array.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">Column ordinal. </param>
      <param name="dataIndex">Buffer to copy data into. </param>
      <param name="buffer">Maximum length to copy into the buffer. </param>
      <param name="bufferIndex">Point to start from within the buffer. </param>
      <param name="length">Point to start from within the source data. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>Not currently supported.</summary>
      <returns>Not currently supported.</returns>
      <param name="i">Not currently supported.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>Returns the name of the back-end data type.</summary>
      <returns>The name of the back-end data type.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>Returns the value of the specified column as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary>Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal that can be overridden with a provider-specific implementation.</summary>
      <returns>A <see cref="T:System.Data.Common.DbDataReader" /> object.</returns>
      <param name="i">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>Returns the value of the specified column as a <see cref="T:System.Decimal" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>Returns the value of the specified column as a double-precision floating-point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>Returns the <see cref="T:System.Type" /> that is the data type of the object.</summary>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>Returns the value of the specified column as a single-precision floating-point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>Returns the GUID value of the specified field.</summary>
      <returns>The GUID value of the specified field.</returns>
      <param name="i">The index of the field to return. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>Returns the value of the specified column as a 16-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>Returns the value of the specified column as a 32-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>Returns the value of the specified column as a 64-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>Returns the name of the specified column.</summary>
      <returns>The name of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>Returns the column ordinal, given the name of the column.</summary>
      <returns>The column ordinal.</returns>
      <param name="name">The name of the column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>Returns the value of the specified column as a string.</summary>
      <returns>The value of the specified column.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>Returns the value at the specified column in its native format.</summary>
      <returns>The value to return.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>Populates an array of objects with the column values of the current record.</summary>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
      <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute fields into. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>Used to indicate nonexistent values.</summary>
      <returns>true if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise false.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.</summary>
      <returns>The value at the specified column in its native format.</returns>
      <param name="i">The column ordinal. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>Indicates the value at the specified column in its native format given the column name. This property is read-only.</summary>
      <returns>The value at the specified column in its native format.</returns>
      <param name="name">The column name. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Returns a collection of custom attributes for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.AttributeCollection" /> that contains the attributes for this object. </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Returns the class name of this instance of a component.</summary>
      <returns>The class name of the object, or null if the class does not have a name.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Returns the name of this instance of a component.</summary>
      <returns>The name of the object, or null if the object does not have a name.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Returns a type converter for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter" /> for this object.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Returns the default event for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> that represents the default event for this object, or null if this object does not have events.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Returns the default property for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property for this object, or null if this object does not have properties.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Returns an editor of the specified type for this instance of a component.</summary>
      <returns>An <see cref="T:System.Object" /> of the specified type that is the editor for this object, or null if the editor cannot be found.</returns>
      <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the editor for this object.</param>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Returns the events for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the events for this component instance.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Returns the events for this instance of a component using the specified attribute array as a filter.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the filtered events for this component instance.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Returns the properties for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties for this component instance.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Returns the properties for this instance of a component using the attribute array as a filter.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the filtered properties for this component instance.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns an object that contains the property described by the specified property descriptor.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the owner of the specified property.</returns>
      <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property whose owner is to be found.</param>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary>Provides a mechanism for enumerating all available instances of database servers within the local network. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> class. </summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary>Retrieves a <see cref="T:System.Data.DataTable" /> containing information about all visible instances of the server represented by the strongly typed instance of this class.</summary>
      <returns>Returns a <see cref="T:System.Data.DataTable" /> containing information about the visible instances of the associated data source.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary>Exposes the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method, which supports a simple iteration over a collection by a .NET Framework data provider.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified DataReader.</summary>
      <param name="reader">The DataReader through which to iterate. </param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified DataReader, and indicates whether to automatically close the DataReader after iterating through its data.</summary>
      <param name="reader">The DataReader through which to iterate. </param>
      <param name="closeReader">true to automatically close the DataReader after iterating through its data; otherwise, false. </param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary>The base class for all exceptions thrown on behalf of the data source.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbException" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbException" /> class with the specified serialization information and context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbException" /> class with the specified error message.</summary>
      <param name="message">The message to display for this exception.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message string.</param>
      <param name="innerException">The inner exception reference.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbException" /> class with the specified error message and error code.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="errorCode">The error code for the exception.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary>Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary>A constant for use with the <see cref="M:System.Data.Common.DbConnection.GetSchema" /> method that represents the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary>A constant for use with the <see cref="M:System.Data.Common.DbConnection.GetSchema" /> method that represents the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary>A constant for use with the <see cref="M:System.Data.Common.DbConnection.GetSchema" /> method that represents the MetaDataCollections collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary>A constant for use with the <see cref="M:System.Data.Common.DbConnection.GetSchema" /> method that represents the ReservedWords collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary>A constant for use with the <see cref="M:System.Data.Common.DbConnection.GetSchema" /> method that represents the Restrictions collection.  </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary>Provides static values that are used for the column names in the MetaDataCollection objects contained in the <see cref="T:System.Data.DataTable" />. The <see cref="T:System.Data.DataTable" /> is created by the GetSchema method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary>Used by the GetSchema method to create the CollectionName column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary>Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary>Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary>Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary>Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary>Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary>Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary>Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary>Used by the GetSchema method to create the DataType column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary>Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary>Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary>Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary>Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary>Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary>Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary>Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary>Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary>Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary>Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary>Used by the GetSchema method to create the IsLong column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary>Used by the GetSchema method to create the IsNullable column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary>Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary>Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary>Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary>Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary>Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary>Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary>Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary>Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary>Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary>Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary>Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary>Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary>Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary>Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary>Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary>Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary>Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary>Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary>Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary>Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary>Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary>Used by the GetSchema method to create the TypeName column in the DataTypes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary>Represents a parameter to a <see cref="T:System.Data.Common.DbCommand" /> and optionally, its mapping to a <see cref="T:System.Data.DataSet" /> column.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbParameter" /> class.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values. The default is <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentException">The property is not set to a valid <see cref="T:System.Data.DbType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</summary>
      <returns>One of the <see cref="T:System.Data.ParameterDirection" /> values. The default is Input.</returns>
      <exception cref="T:System.ArgumentException">The property is not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary>Gets or sets a value that indicates whether the parameter accepts null values.</summary>
      <returns>true if null values are accepted; otherwise false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>The name of the <see cref="T:System.Data.Common.DbParameter" />. The default is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary>Resets the DbType property to its original settings.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data within the column.</summary>
      <returns>The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>The name of the source column mapped to the <see cref="T:System.Data.DataSet" />. The default is an empty string.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary>Sets or gets a value which indicates whether the source column is nullable. This allows <see cref="T:System.Data.Common.DbCommandBuilder" /> to correctly generate Update statements for nullable columns.</summary>
      <returns>true if the source column is nullable; false if it is not.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default is Current.</returns>
      <exception cref="T:System.ArgumentException">The property is not set to one of the <see cref="T:System.Data.DataRowVersion" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary>Indicates the precision of numeric parameters.</summary>
      <returns>The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary>For a description of this member, see <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns>The number of decimal places to which <see cref="T:System.Data.OleDb.OleDbParameter.Value" /> is resolved. The default is 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary>Gets or sets the value of the parameter.</summary>
      <returns>An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary>The base class for a collection of parameters relevant to a <see cref="T:System.Data.Common.DbCommand" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DbParameterCollection" /> class.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary>Adds a <see cref="T:System.Data.Common.DbParameter" /> item with the specified value to the <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <returns>The index of the <see cref="T:System.Data.Common.DbParameter" /> object in the collection.</returns>
      <param name="value">The <see cref="P:System.Data.Common.DbParameter.Value" /> of the <see cref="T:System.Data.Common.DbParameter" /> to add to the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary>Adds an array of items with the specified values to the <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values">An array of values of type <see cref="T:System.Data.Common.DbParameter" /> to add to the collection.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary>Removes all <see cref="T:System.Data.Common.DbParameter" /> values from the <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary>Indicates whether a <see cref="T:System.Data.Common.DbParameter" /> with the specified <see cref="P:System.Data.Common.DbParameter.Value" /> is contained in the collection.</summary>
      <returns>true if the <see cref="T:System.Data.Common.DbParameter" /> is in the collection; otherwise false.</returns>
      <param name="value">The <see cref="P:System.Data.Common.DbParameter.Value" /> of the <see cref="T:System.Data.Common.DbParameter" /> to look for in the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary>Indicates whether a <see cref="T:System.Data.Common.DbParameter" /> with the specified name exists in the collection.</summary>
      <returns>true if the <see cref="T:System.Data.Common.DbParameter" /> is in the collection; otherwise false.</returns>
      <param name="value">The name of the <see cref="T:System.Data.Common.DbParameter" /> to look for in the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies an array of items to the collection starting at the specified index.</summary>
      <param name="array">The array of items to copy to the collection.</param>
      <param name="index">The index in the collection to copy the items.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary>Specifies the number of items in the collection.</summary>
      <returns>The number of items in the collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary>Exposes the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method, which supports a simple iteration over a collection by a .NET Framework data provider.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary>Returns the <see cref="T:System.Data.Common.DbParameter" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Data.Common.DbParameter" /> object at the specified index in the collection.</returns>
      <param name="index">The index of the <see cref="T:System.Data.Common.DbParameter" /> in the collection.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary>Returns <see cref="T:System.Data.Common.DbParameter" /> the object with the specified name.</summary>
      <returns>The <see cref="T:System.Data.Common.DbParameter" /> the object with the specified name.</returns>
      <param name="parameterName">The name of the <see cref="T:System.Data.Common.DbParameter" /> in the collection.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary>Returns the index of the specified <see cref="T:System.Data.Common.DbParameter" /> object.</summary>
      <returns>The index of the specified <see cref="T:System.Data.Common.DbParameter" /> object.</returns>
      <param name="value">The <see cref="T:System.Data.Common.DbParameter" /> object in the collection.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary>Returns the index of the <see cref="T:System.Data.Common.DbParameter" /> object with the specified name.</summary>
      <returns>The index of the <see cref="T:System.Data.Common.DbParameter" /> object with the specified name.</returns>
      <param name="parameterName">The name of the <see cref="T:System.Data.Common.DbParameter" /> object in the collection.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts the specified index of the <see cref="T:System.Data.Common.DbParameter" /> object with the specified name into the collection at the specified index.</summary>
      <param name="index">The index at which to insert the <see cref="T:System.Data.Common.DbParameter" /> object.</param>
      <param name="value">The <see cref="T:System.Data.Common.DbParameter" /> object to insert into the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary>Specifies whether the collection is a fixed size.</summary>
      <returns>true if the collection is a fixed size; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary>Specifies whether the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary>Specifies whether the collection is synchronized.</summary>
      <returns>true if the collection is synchronized; otherwise false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary>Gets and sets the <see cref="T:System.Data.Common.DbParameter" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Data.Common.DbParameter" /> at the specified index.</returns>
      <param name="index">The zero-based index of the parameter.</param>
      <exception cref="T:System.IndexOutOfRangeException">The specified index does not exist. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary>Gets and sets the <see cref="T:System.Data.Common.DbParameter" /> with the specified name.</summary>
      <returns>The <see cref="T:System.Data.Common.DbParameter" /> with the specified name.</returns>
      <param name="parameterName">The name of the parameter.</param>
      <exception cref="T:System.IndexOutOfRangeException">The specified index does not exist. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:System.Data.Common.DbParameter" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.Data.Common.DbParameter" /> object to remove.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.Common.DbParameter" /> object at the specified from the collection.</summary>
      <param name="index">The index where the <see cref="T:System.Data.Common.DbParameter" /> object is located.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.Common.DbParameter" /> object with the specified name from the collection.</summary>
      <param name="parameterName">The name of the <see cref="T:System.Data.Common.DbParameter" /> object to remove.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary>Sets the <see cref="T:System.Data.Common.DbParameter" /> object at the specified index to a new value. </summary>
      <param name="index">The index where the <see cref="T:System.Data.Common.DbParameter" /> object is located.</param>
      <param name="value">The new <see cref="T:System.Data.Common.DbParameter" /> value.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary>Sets the <see cref="T:System.Data.Common.DbParameter" /> object with the specified name to a new value.</summary>
      <param name="parameterName">The name of the <see cref="T:System.Data.Common.DbParameter" /> object in the collection.</param>
      <param name="value">The new <see cref="T:System.Data.Common.DbParameter" /> value.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary>Specifies the <see cref="T:System.Object" /> to be used to synchronize access to the collection.</summary>
      <returns>A <see cref="T:System.Object" /> to be used to synchronize access to the <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary>Gets or sets the parameter at the specified index.</summary>
      <returns>An <see cref="T:System.Object" /> at the specified index.</returns>
      <param name="parameterName">The name of the parameter to retrieve.</param>
    </member>
    <member name="T:System.Data.Common.DbProviderConfigurationHandler">
      <summary>This class can be used by any provider to support a provider-specific configuration section.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderConfigurationHandler.#ctor">
      <summary>This class can be used by any provider to support a provider-specific configuration section.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Creates a new <see cref="System.Collections.Specialized.NameValueCollection" /> expression.</summary>
      <returns>The new expression.</returns>
      <param name="parent">This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</param>
      <param name="configContext">This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</param>
      <param name="section">This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary>Represents a set of static methods for creating one or more instances of <see cref="T:System.Data.Common.DbProviderFactory" /> classes.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary>Returns an instance of a <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>An instance of a <see cref="T:System.Data.Common.DbProviderFactory" /> for a specified <see cref="T:System.Data.DataRow" />.</returns>
      <param name="providerRow">
        <see cref="T:System.Data.DataRow" /> containing the provider's configuration information.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary>Returns an instance of a <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>An instance of a <see cref="T:System.Data.Common.DbProviderFactory" /> for a specified provider name.</returns>
      <param name="providerInvariantName">Invariant name of a provider.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that contains information about all installed providers that implement <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>Returns a <see cref="T:System.Data.DataTable" /> containing <see cref="T:System.Data.DataRow" /> objects that contain the following data. Column ordinalColumn nameDescription0NameHuman-readable name for the data provider.1DescriptionHuman-readable description of the data provider.2InvariantNameName that can be used programmatically to refer to the data provider.3AssemblyQualifiedNameFully qualified name of the factory class, which contains enough information to instantiate the object.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Common.DbProviderFactoriesConfigurationHandler">
      <summary>This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactoriesConfigurationHandler.#ctor">
      <summary>This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactoriesConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</returns>
      <param name="parent">This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</param>
      <param name="configContext">This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</param>
      <param name="section">This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary>Represents a set of methods for creating instances of a provider's implementation of the data source classes.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Data.Common.DbProviderFactory" /> class.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Specifies whether the specific <see cref="T:System.Data.Common.DbProviderFactory" /> supports the <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> class.</summary>
      <returns>true if the instance of the <see cref="T:System.Data.Common.DbProviderFactory" /> supports the <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> class; otherwise false.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.Common.DbCommand" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.Common.DbCommand" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.Common.DbConnection" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.Common.DbConnection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.Common.DbDataAdapter" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.Common.DbParameter" /> class.</summary>
      <returns>A new instance of <see cref="T:System.Data.Common.DbParameter" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Returns a new instance of the provider's class that implements the provider's version of the <see cref="T:System.Security.CodeAccessPermission" /> class.</summary>
      <returns>A <see cref="T:System.Security.CodeAccessPermission" /> object for the specified <see cref="T:System.Security.Permissions.PermissionState" />.</returns>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary>Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of a <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" /> class.</summary>
      <param name="isProviderSpecificTypeProperty">Specifies whether this property is a provider-specific property.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary>Indicates whether the attributed property is a provider-specific type.</summary>
      <returns>true if the property that this attribute is applied to is a provider-specific type property; otherwise false.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary>The base class for a transaction. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary>Initializes a new <see cref="T:System.Data.Common.DbTransaction" /> object.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary>Commits the database transaction.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary>Specifies the <see cref="T:System.Data.Common.DbConnection" /> object associated with the transaction.</summary>
      <returns>The <see cref="T:System.Data.Common.DbConnection" /> object associated with the transaction.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary>Specifies the <see cref="T:System.Data.Common.DbConnection" /> object associated with the transaction.</summary>
      <returns>The <see cref="T:System.Data.Common.DbConnection" /> object associated with the transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbTransaction" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbTransaction" /> and optionally releases the managed resources.</summary>
      <param name="disposing">If true, this method releases all resources held by any managed objects that this <see cref="T:System.Data.Common.DbTransaction" /> references.</param>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</summary>
      <returns>The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary>Rolls back a transaction from a pending state.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary>Gets the <see cref="T:System.Data.Common.DbConnection" /> object associated with the transaction, or a null reference if the transaction is no longer valid.</summary>
      <returns>The <see cref="T:System.Data.Common.DbConnection" /> object associated with the transaction.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary>Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary>The support for the GROUP BY clause is unknown.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary>The GROUP BY clause is not supported.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary>There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary>The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary>The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.</summary>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary>Specifies how identifiers are treated by the data source when searching the system catalog.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary>The data source has ambiguous rules regarding identifier case and cannot discern this information.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary>The data source ignores identifier case when searching the system catalog. The identifiers "ab" and "AB" will match.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary>The data source distinguishes identifier case when searching the system catalog. The identifiers "ab" and "AB" will not match.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>Provides data for the RowUpdated event of a .NET Framework data provider.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called. </param>
      <param name="statementType">The type of SQL statement executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary>Gets the <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</summary>
      <returns>The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary>Copies references to the modified rows into the provided array.</summary>
      <param name="array">The array of <see cref="T:System.Data.DataRow" /> to copy into.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Copies references to the modified rows into the provided array. </summary>
      <param name="array">The array of <see cref="T:System.Data.DataRow" /> to copy into.</param>
      <param name="arrayIndex">The index in the array to start copying into.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>Gets any errors generated by the .NET Framework data provider when the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> was executed.</summary>
      <returns>The errors generated by the .NET Framework data provider when the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> was executed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</summary>
      <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>Gets the <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary>Gets the number of rows processed in a batch of updated records.</summary>
      <returns>int that specifies the number of row processed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>Gets the type of SQL statement executed.</summary>
      <returns>The type of SQL statement executed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>Gets the <see cref="T:System.Data.UpdateStatus" /> of the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> property.</summary>
      <returns>One of the <see cref="T:System.Data.UpdateStatus" /> values. The default is Continue.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>Provides the data for the RowUpdating event of a .NET Framework data provider.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called. </param>
      <param name="statementType">The type of SQL statement to execute. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> to send through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary>Gets or sets the <see cref="T:System.Data.IDbCommand" /> object for an instance of this class.</summary>
      <returns>The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary>Gets the <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> operation.</summary>
      <returns>The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>Gets any errors generated by the .NET Framework data provider when the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> executes.</summary>
      <returns>The errors generated by the .NET Framework data provider when the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> executes.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>Gets the <see cref="T:System.Data.DataRow" /> that will be sent to the server as part of an insert, update, or delete operation.</summary>
      <returns>The <see cref="T:System.Data.DataRow" /> to send through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>Gets the type of SQL statement to execute.</summary>
      <returns>The type of SQL statement to execute.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>Gets or sets the <see cref="T:System.Data.UpdateStatus" /> of the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> property.</summary>
      <returns>One of the <see cref="T:System.Data.UpdateStatus" /> values. The default is Continue.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> to send through the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>The <see cref="T:System.Data.Common.DataTableMapping" /> to send through the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary>Describes the column metadata of the schema for a database table.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary>Specifies whether value DBNull is allowed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary>Specifies the name of the column in the schema table.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary>Specifies the name of the schema in the schema table.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary>Specifies the name of the table in the schema table.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary>Specifies the name of the column in the schema table.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary>Specifies the ordinal of the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary>Specifies the size of the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary>Specifies the type of data in the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary>Specifies whether this column is aliased.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary>Specifies whether this column is an expression.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary>Specifies whether this column is a key for the table. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary>Specifies whether this column contains long data.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary>Specifies whether a unique constraint applies to this column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary>Specifies the non-versioned provider-specific data type of the column.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary>Specifies the precision of the column data, if the data is numeric.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary>Specifies the scale of the column data, if the data is numeric.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary>Specifies the provider-specific data type of the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary>Describes optional column metadata of the schema for a database table.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary>Specifies the value at which the series for new identity columns is assigned.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary>Specifies the increment between values in the identity column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary>The name of the catalog associated with the results of the latest query.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary>The namespace of the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary>The server name of the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary>The namespace for the table that contains the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary>Specifies the mapping for the column.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary>The default value for the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary>The expression used to compute the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary>Specifies whether the column values in the column are automatically incremented.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary>Specifies whether this column is hidden.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary>Specifies whether this column is read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary>Specifies whether this column contains row version information.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary>Specifies the provider-specific data type of the column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary>Specifies what types of Transact-SQL join statements are supported by the data source.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary>The data source does not support join queries.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary>The data source supports inner joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary>The data source supports left outer joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary>The data source supports right outer joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary>The data source supports full outer joins.</summary>
    </member>
    <member name="T:System.Data.Odbc.OdbcCommand">
      <summary>Represents an SQL statement or stored procedure to execute against a data source. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query.</summary>
      <param name="cmdText">The text of the query. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query and an <see cref="T:System.Data.Odbc.OdbcConnection" /> object.</summary>
      <param name="cmdText">The text of the query. </param>
      <param name="connection">An <see cref="T:System.Data.Odbc.OdbcConnection" /> object that represents the connection to a data source. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query, an <see cref="T:System.Data.Odbc.OdbcConnection" /> object, and the <see cref="P:System.Data.Odbc.OdbcCommand.Transaction" />.</summary>
      <param name="cmdText">The text of the query. </param>
      <param name="connection">An <see cref="T:System.Data.Odbc.OdbcConnection" /> object that represents the connection to a data source. </param>
      <param name="transaction">The transaction in which the <see cref="T:System.Data.Odbc.OdbcCommand" /> executes. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.Cancel">
      <summary>Tries to cancel the execution of an <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommand.CommandText">
      <summary>Gets or sets the SQL statement or stored procedure to execute against the data source.</summary>
      <returns>The SQL statement or stored procedure to execute. The default value is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommand.CommandTimeout">
      <summary>Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</summary>
      <returns>The time in seconds to wait for the command to execute. The default is 30 seconds.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommand.CommandType">
      <summary>Gets or sets a value that indicates how the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> property is interpreted.</summary>
      <returns>One of the <see cref="T:System.Data.CommandType" /> values. The default is Text.</returns>
      <exception cref="T:System.ArgumentException">The value was not a valid <see cref="T:System.Data.CommandType" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommand.Connection">
      <summary>Gets or sets the <see cref="T:System.Data.Odbc.OdbcConnection" /> used by this instance of the <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
      <returns>The connection to a data source. The default is a null value.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> property was changed while a transaction was in progress. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.CreateParameter">
      <summary>Creates a new instance of an <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible">
      <summary>Gets or sets a value that indicates whether the command object should be visible in a customized interface control.</summary>
      <returns>true, if the command object should be visible in a control; otherwise false. The default is true.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
      <summary>Executes an SQL statement against the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> and returns the number of rows affected.</summary>
      <returns>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1.</returns>
      <exception cref="T:System.InvalidOperationException">The connection does not exist.-or- The connection is not open. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.ExecuteReader">
      <summary>Sends the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> to the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> and builds an <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Sends the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> to the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />, and builds an <see cref="T:System.Data.Odbc.OdbcDataReader" /> using one of the CommandBehavior values.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</returns>
      <param name="behavior">One of the System.Data.CommandBehavior values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.ExecuteScalar">
      <summary>Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.</summary>
      <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommand.Parameters">
      <summary>Gets the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <returns>The parameters of the SQL statement or stored procedure. The default is an empty collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.Prepare">
      <summary>Creates a prepared or compiled version of the command at the data source.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> is not set.-or- The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> is not <see cref="!:System.Data.Odbc.OdbcConnection.Open" />. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.ResetCommandTimeout">
      <summary>Resets the <see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /> property to the default value.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>A new <see cref="T;System.Object" /> that is a copy of this instance.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommand.Transaction">
      <summary>Gets or sets the <see cref="T:System.Data.Odbc.OdbcTransaction" /> within which the <see cref="T:System.Data.Odbc.OdbcCommand" /> executes.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcTransaction" />. The default is a null value.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource">
      <summary>Gets or sets a value that specifies how the Update method should apply command results to the DataRow.</summary>
      <returns>One of the <see cref="T:System.Data.UpdateRowSource" /> values.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcCommandBuilder">
      <summary>Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated data source. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class with the associated <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object.</summary>
      <param name="adapter">An <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object to associate with this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter">
      <summary>Gets or sets an <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object for which this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> object will generate SQL statements.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object that is associated with this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
      <summary>Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.Odbc.OdbcCommand" /> and populates the <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> collection of the specified <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</summary>
      <param name="command">The <see cref="T:System.Data.Odbc.OdbcCommand" /> referencing the stored procedure from which the parameter information is to be derived. The derived parameters are added to the <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> collection of the <see cref="T:System.Data.Odbc.OdbcCommand" />. </param>
      <exception cref="T:System.InvalidOperationException">The underlying ODBC driver does not support returning stored procedure parameter information, or the command text is not a valid stored procedure name, or the <see cref="T:System.Data.CommandType" /> specified was not CommandType.StoredProcedure. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if it is possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if it is possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if it is possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier.</summary>
      <returns>The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.</returns>
      <param name="unquotedIdentifier">The original unquoted identifier.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
      <summary>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier.</summary>
      <returns>The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.</returns>
      <param name="unquotedIdentifier">The original unquoted identifier.</param>
      <param name="connection">The <see cref="T:System.Data.Odbc.OdbcConnection" />.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</summary>
      <returns>The unquoted identifier, with embedded quotes correctly unescaped.</returns>
      <param name="quotedIdentifier">The identifier that will have its embedded quotes removed.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
      <summary>Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</summary>
      <returns>The unquoted identifier, with embedded quotes correctly unescaped.</returns>
      <param name="quotedIdentifier">The identifier that will have its embedded quotes removed.</param>
      <param name="connection">The <see cref="T:System.Data.Odbc.OdbcConnection" />.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Odbc.OdbcConnection">
      <summary>Represents an open connection to a data source. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcConnection" /> class.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcConnection" /> class with the specified connection string.</summary>
      <param name="connectionString">The connection used to open the data source. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.BeginTransaction">
      <summary>Starts a transaction at the data source.</summary>
      <returns>An object representing the new transaction.</returns>
      <exception cref="T:System.InvalidOperationException">A transaction is currently active. Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Starts a transaction at the data source with the specified <see cref="T:System.Data.IsolationLevel" /> value.</summary>
      <returns>An object representing the new transaction.</returns>
      <param name="isolevel">The transaction isolation level for this connection. If you do not specify an isolation level, the default isolation level for the driver is used. </param>
      <exception cref="T:System.InvalidOperationException">A transaction is currently active. Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)">
      <summary>Changes the current database associated with an open <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <param name="value">The database name. </param>
      <exception cref="T:System.ArgumentException">The database name is not valid. </exception>
      <exception cref="T:System.InvalidOperationException">The connection is not open. </exception>
      <exception cref="T:System.Data.Odbc.OdbcException">Cannot change the database. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.Close">
      <summary>Closes the connection to the data source. </summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.ConnectionString">
      <summary>Gets or sets the string used to open a data source.</summary>
      <returns>The ODBC driver connection string that includes settings, such as the data source name, needed to establish the initial connection. The default value is an empty string (""). The maximum length is 1024 characters.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.ConnectionTimeout">
      <summary>Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</summary>
      <returns>The time in seconds to wait for a connection to open. The default value is 15 seconds.</returns>
      <exception cref="T:System.ArgumentException">The value set is less than 0. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.CreateCommand">
      <summary>Creates and returns an <see cref="T:System.Data.Odbc.OdbcCommand" /> object associated with the <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.Database">
      <summary>Gets the name of the current database or the database to be used after a connection is opened.</summary>
      <returns>The name of the current database. The default value is an empty string ("") until the connection is opened.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.DataSource">
      <summary>Gets the server name or file name of the data source.</summary>
      <returns>The server name or file name of the data source. The default value is an empty string ("") until the connection is opened.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.Driver">
      <summary>Gets the name of the ODBC driver specified for the current connection.</summary>
      <returns>The name of the ODBC driver. This typically is the DLL name (for example, Sqlsrv32.dll). The default value is an empty string ("") until the connection is opened.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>Enlists in the specified transaction as a distributed transaction.</summary>
      <param name="transaction">A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified transaction as a distributed transaction.</summary>
      <param name="transaction">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.GetSchema">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String)">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.Odbc.OdbcConnection" /> using the specified name for the schema name.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
      <param name="collectionName">Specifies the name of the schema to return.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.Odbc.OdbcConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
      <param name="collectionName">Specifies the name of the schema to return.</param>
      <param name="restrictionValues">Specifies a set of restriction values for the requested schema.</param>
    </member>
    <member name="E:System.Data.Odbc.OdbcConnection.InfoMessage">
      <summary>Occurs when the ODBC driver sends a warning or an informational message.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.Open">
      <summary>Opens a connection to a data source with the property settings specified by the <see cref="P:System.Data.Odbc.OdbcConnection.ConnectionString" />.</summary>
      <exception cref="T:System.NotSupportedException">The functionality of this method is unsupported in the base class and must be implemented in a derived class instead. </exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.ReleaseObjectPool">
      <summary>Indicates that the ODBC Driver Manager environment handle can be released when the last underlying connection is released.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.ServerVersion">
      <summary>Gets a string that contains the version of the server to which the client is connected.</summary>
      <returns>The version of the connected server.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.State">
      <summary>Gets the current state of the connection.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default is Closed.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>A new <see cref="T:System.Object" /> that is a copy of this instance.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcConnectionStringBuilder">
      <summary>Provides a simple way to create and manage the contents of connection strings used by the <see cref="T:System.Data.Odbc.OdbcConnection" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> class.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> class. The provided connection string provides the data for the instance's internal connection information.</summary>
      <param name="connectionString">The basis for the object's internal connection information. Parsed into key/value pairs.</param>
      <exception cref="T:System.ArgumentException">The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.Clear">
      <summary>Clears the contents of the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> instance.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> contains a specific key.</summary>
      <returns>true if the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> contains an element that has the specified key; otherwise false.</returns>
      <param name="keyword">The key to locate in the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is null (Nothing in Visual Basic).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver">
      <summary>Gets or sets the name of the ODBC driver associated with the connection.</summary>
      <returns>The value of the <see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver" /> property, or String.Empty if none has been supplied.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn">
      <summary>Gets or sets the name of the data source name (DSN) associated with the connection.</summary>
      <returns>The value of the <see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn" /> property, or String.Empty if none has been supplied.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key. In C#, this property is the indexer.</summary>
      <returns>The value associated with the specified key.</returns>
      <param name="keyword">The key of the item to get or set.</param>
      <exception cref="T:System.ArgumentException">The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is a null reference (Nothing in Visual Basic).</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)">
      <summary>Removes the entry with the specified key from the <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> instance.</summary>
      <returns>true if the key existed within the connection string and was removed; false if the key did not exist.</returns>
      <param name="keyword">The key of the key/value pair to be removed from the connection string in this <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is null (Nothing in Visual Basic).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Retrieves a value corresponding to the supplied key from this <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</summary>
      <returns>true if <paramref name="keyword" /> was found within the connection string; otherwise false.</returns>
      <param name="keyword">The key of the item to retrieve.</param>
      <param name="value">The value corresponding to <paramref name="keyword." /></param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Odbc.OdbcDataAdapter">
      <summary>Represents a set of data commands and a connection to a data source that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with the specified SQL SELECT statement.</summary>
      <param name="selectCommand">An <see cref="T:System.Data.Odbc.OdbcCommand" /> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with an SQL SELECT statement and an <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <param name="selectCommandText">A string that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. </param>
      <param name="selectConnection">An <see cref="T:System.Data.Odbc.OdbcConnection" /> that represents the connection. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with an SQL SELECT statement and a connection string.</summary>
      <param name="selectCommandText">A string that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. </param>
      <param name="selectConnectionString">The connection string. </param>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.DeleteCommand">
      <summary>Gets or sets an SQL statement or stored procedure used to delete records in the data source.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcCommand" /> used during an update operation to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.InsertCommand">
      <summary>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcCommand" /> used during an update operation to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Data.Odbc.OdbcDataAdapter.RowUpdated">
      <summary>Occurs during an update operation after a command is executed against the data source.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.Odbc.OdbcDataAdapter.RowUpdating">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand">
      <summary>Gets or sets an SQL statement or stored procedure used to select records in the data source.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcCommand" /> that is used during a fill operation to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during an update to delete records in the data source for deleted rows in the data set.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> that is used during an update to insert records from a data source for placement in the data set.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> that is used during an update to select records from a data source for placement in the data set.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during an update to update records in the data source for modified rows in the data set.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>A new <see cref="T:System.Object" /> that is a copy of this instance.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.UpdateCommand">
      <summary>Gets or sets an SQL statement or stored procedure used to update records in the data source.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcCommand" /> used during an update operation to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcDataReader">
      <summary>Provides a way of reading a forward-only stream of data rows from a data source. This class cannot be inherited. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.Close">
      <summary>Closes the <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.Depth">
      <summary>Gets a value that indicates the depth of nesting for the current row.</summary>
      <returns>The depth of nesting for the current row.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.FieldCount">
      <summary>Gets the number of columns in the current row.</summary>
      <returns>When not positioned in a valid record set, 0; otherwise the number of columns in the current record. The default is -1.</returns>
      <exception cref="T:System.NotSupportedException">There is no current connection to a data source. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean.</summary>
      <returns>A Boolean that is the value of the column.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte.</summary>
      <returns>The value of the specified column as a byte.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the particular buffer offset.</summary>
      <returns>The actual number of bytes read.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <param name="dataIndex">The index within the field where the read operation is to start. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferIndex">The index within the <paramref name="buffer" /> where the write operation is to start. </param>
      <param name="length">The number of bytes to read. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a character.</summary>
      <returns>The value of the specified column as a character.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array, starting at the particular buffer offset.</summary>
      <returns>The actual number of characters read.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <param name="dataIndex">The index within the row where the read operation is to start. </param>
      <param name="buffer">The buffer into which to copy data. </param>
      <param name="bufferIndex">The index within the <paramref name="buffer" /> where the write operation is to start. </param>
      <param name="length">The number of characters to read. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets the name of the source data type.</summary>
      <returns>The name of the source data type.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The value of the specified column as a <see cref="T:System.DateTime" /> object.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The value of the specified column as a <see cref="T:System.DateTime" /> object.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</summary>
      <returns>The value of the specified column as a <see cref="T:System.Decimal" /> object.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating-point number.</summary>
      <returns>The value of the specified column as a double-precision floating-point number.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object.</summary>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating-point number.</summary>
      <returns>The value of the specified column as a single-precision floating-point number.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally unique identifier (GUID).</summary>
      <returns>The value of the specified column as a GUID.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
      <returns>The value of the specified column as a 16-bit signed integer.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer.</summary>
      <returns>The value of the specified column as a 32-bit signed integer.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer.</summary>
      <returns>The value of the specified column as a 64-bit signed integer.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)">
      <summary>Gets the name of the specified column.</summary>
      <returns>A string that is the name of the specified column.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column.</summary>
      <returns>The zero-based column ordinal.</returns>
      <param name="value">The name of the column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetSchemaTable">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.String" />.</summary>
      <returns>The value of the specified column as a <see cref="T:System.String" />.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</summary>
      <returns>The value of the specified column as a <see cref="T:System.TimeSpan" /> object.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)">
      <summary>Gets the value of the column at the specified ordinal in its native format.</summary>
      <returns>The value to return.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])">
      <summary>Populates an array of objects with the column values of the current row.</summary>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
      <param name="values">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.HasRows">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows.</summary>
      <returns>true if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows; otherwise false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.IsClosed">
      <summary>Indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</summary>
      <returns>true if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed; otherwise false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)">
      <summary>Gets a value that indicates whether the column contains nonexistent or missing values.</summary>
      <returns>true if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise false.</returns>
      <param name="i">The zero-based column ordinal. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.Item(System.Int32)">
      <summary>Gets the value of the specified column in its native format given the column ordinal.</summary>
      <returns>The value of the specified column in its native format.</returns>
      <param name="i">The column ordinal. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.Item(System.String)">
      <summary>Gets the value of the specified column in its native format given the column name.</summary>
      <returns>The value of the specified column in its native format.</returns>
      <param name="value">The column name. </param>
      <exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.NextResult">
      <summary>Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next result when reading the results of batch SQL statements.</summary>
      <returns>true if there are more result sets; otherwise false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.Read">
      <summary>Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next record.</summary>
      <returns>true if there are more rows; otherwise false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</summary>
      <returns>The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected, or the statement failed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcError">
      <summary>Collects information relevant to a warning or error returned by the data source.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcError.Message">
      <summary>Gets a short description of the error.</summary>
      <returns>A description of the error.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcError.NativeError">
      <summary>Gets the data source-specific error information.</summary>
      <returns>The data source-specific error information.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcError.Source">
      <summary>Gets the name of the driver that generated the error.</summary>
      <returns>The name of the driver that generated the error.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcError.SQLState">
      <summary>Gets the five-character error code that follows the ANSI SQL standard for the database.</summary>
      <returns>The five-character error code, which identifies the source of the error if the error can be issued from more than one place.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcError.ToString">
      <summary>Gets the complete text of the error message.</summary>
      <returns>The complete text of the error.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcErrorCollection">
      <summary>Collects all errors generated by the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> into an array, starting at the specified index within the array.</summary>
      <param name="array">The array into which to copy the elements. </param>
      <param name="i">The starting index of <paramref name="array" />. </param>
      <exception cref="T:System.ArgumentException">The sum of <paramref name="index" /> and the number of elements in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> is greater than the length of the array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for <paramref name="array" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcErrorCollection.CopyTo(System.Data.Odbc.OdbcError[],System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> to the specified <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> starting at the specified destination index.</summary>
      <param name="array">The <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> that is the destination of the elements copied from the current <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</param>
      <param name="i">A 32-bit integer that represents the index in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> at which copying starts.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcErrorCollection.Count">
      <summary>Gets the number of errors in the collection.</summary>
      <returns>The total number of errors in the collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcErrorCollection.GetEnumerator">
      <summary>Returns an object that implements the <see cref="T:" /><see cref="System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> objects in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</summary>
      <returns>An object that implements the <see cref="T:" /><see cref="System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> objects in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcErrorCollection.Item(System.Int32)">
      <summary>Gets the error at the specified index.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcError" /> that contains the error at the specified index. </returns>
      <param name="i">The zero-based index of the error to retrieve. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcException">
      <summary>The exception that is generated when a warning or error is returned by an ODBC data source. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcException.Errors">
      <summary>Gets a collection of one or more <see cref="T:System.Data.Odbc.OdbcError" /> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for ODBC.</summary>
      <returns>The collected instances of the <see cref="T:System.Data.Odbc.OdbcError" /> class.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>This member overrides <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="si" /> parameter is a null reference (Nothing in Visual Basic).</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcException.Source">
      <summary>Gets the name of the ODBC driver that generated the error.</summary>
      <returns>The name of the ODBC driver that generated the error.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcFactory">
      <summary>Represents a set of methods for creating instances of the ODBC provider's implementation of the data source classes.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateCommand">
      <summary>Returns a strongly-typed <see cref="T:System.Data.Common.DbCommand" /> instance.</summary>
      <returns>A new strongly-typed instance of <see cref="T:System.Data.Common.DbCommand" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateCommandBuilder">
      <summary>Returns a strongly-typed <see cref="T:System.Data.Common.DbCommandBuilder" /> instance.</summary>
      <returns>A new strongly-typed instance of <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateConnection">
      <summary>Returns a strongly-typed <see cref="T:System.Data.Common.DbConnection" /> instance.</summary>
      <returns>A new strongly-typed instance of <see cref="T:System.Data.Common.DbConnection" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateConnectionStringBuilder">
      <summary>Returns a strongly-typed <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instance.</summary>
      <returns>A new strongly-typed instance of <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateDataAdapter">
      <summary>Returns a strongly-typed <see cref="T:System.Data.Common.DbDataAdapter" /> instance.</summary>
      <returns>A new strongly-typed instance of <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateParameter">
      <summary>Returns a strongly-typed <see cref="T:System.Data.Common.DbParameter" /> instance.</summary>
      <returns>A new strongly-typed instance of <see cref="T:System.Data.Common.DbParameter" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Returns a strongly-typed <see cref="T:System.Security.CodeAccessPermission" /> instance.</summary>
      <returns>A new strongly-typed instance of <see cref="T:System.Security.CodeAccessPermission" />. </returns>
      <param name="state">A member of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcFactory.Instance">
      <summary>Gets an instance of the <see cref="T:System.Data.Odbc.OdbcFactory" />, which can be used to retrieve strongly-typed data objects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcInfoMessageEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcInfoMessageEventArgs.Errors">
      <summary>Gets the collection of warnings sent from the data source.</summary>
      <returns>The collection of warnings sent from the data source.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcInfoMessageEventArgs.Message">
      <summary>Gets the full text of the error sent from the database.</summary>
      <returns>The full text of the error.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcInfoMessageEventArgs.ToString">
      <summary>Retrieves a string representation of the <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" /> event.</summary>
      <returns>A string representing the <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" /> event.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcInfoMessageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" /> event of an <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.Data.Odbc.OdbcInfoMessageEventArgs" /> object that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcMetaDataCollectionNames">
      <summary>Provides a list of constants for use with the GetSchema method to retrieve metadata collections.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Columns">
      <summary>A constant for use with the GetSchema method that represents the Columns collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Indexes">
      <summary>A constant for use with the GetSchema method that represents the Indexes collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.ProcedureColumns">
      <summary>A constant for use with the GetSchema method that represents the ProcedureColumns collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.ProcedureParameters">
      <summary>A constant for use with the GetSchema method that represents the ProcedureParameters collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Procedures">
      <summary>A constant for use with the GetSchema method that represents the Procedures collection. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Tables">
      <summary>A constant for use with the GetSchema method that represents the Tables collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Views">
      <summary>A constant for use with the GetSchema method that represents the Views collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcMetaDataColumnNames">
      <summary>Provides static values that are used for the column names in the <see cref="T:System.Data.Odbc.OdbcMetaDataCollectionNames" /> objects contained in the <see cref="T:System.Data.DataTable" />. The <see cref="T:System.Data.DataTable" /> is created by the GetSchema method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataColumnNames.BooleanFalseLiteral">
      <summary>Used by the GetSchema method to create the BooleanFalseLiteral column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataColumnNames.BooleanTrueLiteral">
      <summary>Used by the GetSchema method to create the BooleanTrueLiteral column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataColumnNames.SQLType">
      <summary>Used by the GetSchema method to create the SQLType column. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcParameter">
      <summary>Represents a parameter to an <see cref="T:System.Data.Odbc.OdbcCommand" /> and optionally, its mapping to a <see cref="T:System.Data.DataColumn" />. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name and data type.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="type">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name, data type, and length.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="type">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.</summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="odbcType">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="parameterDirection">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable">true if the value of the field can be null; otherwise false. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved. </param>
      <param name="srcColumn">The name of the source column. </param>
      <param name="srcVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.Odbc.OdbcParameter" />. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.</summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="odbcType">One of the <see cref="P:System.Data.Odbc.OdbcParameter.OdbcType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="parameterDirection">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="sourceColumnNullMapping">true if the corresponding source column is nullable; false if it is not.</param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.Odbc.OdbcParameter" />. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name, data type, length, and source column name.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="type">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="sourcecolumn">The name of the source column. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name and an <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="value">An <see cref="T:System.Data.Odbc.OdbcParameter" /> object. </param>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values. The default is <see cref="T:System.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="T:System.Data.DbType" />. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Direction">
      <summary>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</summary>
      <returns>One of the <see cref="T:System.Data.ParameterDirection" /> values. The default is Input.</returns>
      <exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.IsNullable">
      <summary>Gets or sets a value that indicates whether the parameter accepts null values.</summary>
      <returns>true if null values are accepted; otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.OdbcType">
      <summary>Gets or sets the <see cref="T:System.Data.Odbc.OdbcType" /> of the parameter.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcType" /> value that is the <see cref="T:System.Data.Odbc.OdbcType" /> of the parameter. The default is Nchar.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
      <returns>The name of the <see cref="T:System.Data.Odbc.OdbcParameter" />. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Precision">
      <summary>Gets or sets the number of digits used to represent the <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> property.</summary>
      <returns>The maximum number of digits used to represent the <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> property. The default value is 0, which indicates that the data provider sets the precision for <see cref="P:System.Data.Odbc.OdbcParameter.Value" />. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.ResetDbType">
      <summary>Resets the type associated with this <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.ResetOdbcType">
      <summary>Resets the type associated with this <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Scale">
      <summary>Gets or sets the number of decimal places to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved.</summary>
      <returns>The number of decimal places to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved. The default is 0.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Size">
      <summary>Gets or sets the maximum size of the data within the column.</summary>
      <returns>The maximum size of the data within the column. The default value is inferred from the parameter value.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.SourceColumn">
      <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
      <returns>The name of the source column that will be used to set the value of this parameter. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping">
      <summary>Sets or gets a value which indicates whether the source column is nullable. This lets <see cref="T:System.Data.Common.DbCommandBuilder" /> correctly generate Update statements for nullable columns.</summary>
      <returns>true if the source column is nullable; false if it is not.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default is Current.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>A new <see cref="T:System.Object" /> that is a copy of this instance.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.ToString">
      <summary>Gets a string that contains the <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</summary>
      <returns>A string that contains the <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Value">
      <summary>Gets or sets the value of the parameter.</summary>
      <returns>An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcParameterCollection">
      <summary>Represents a collection of parameters relevant to an <see cref="T:System.Data.Odbc.OdbcCommand" /> and their respective mappings to columns in a <see cref="T:System.Data.DataSet" />. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.Data.Odbc.OdbcParameter)">
      <summary>Adds the specified <see cref="T:System.Data.Odbc.OdbcParameter" /> to the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <returns>The index of the new <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</returns>
      <param name="value">The <see cref="T:System.Data.Odbc.OdbcParameter" /> to add to the collection. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.Odbc.OdbcParameter" /> specified in the <paramref name="value" /> parameter is already added to this or another <see cref="T:System.Data.Odbc.OdbcParameterCollection" />. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:System.Data.Odbc.OdbcParameter" /> object to the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <returns>The index of the new <see cref="T:System.Data.Odbc.OdbcParameter" /> object in the collection.</returns>
      <param name="value">A <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.String,System.Data.Odbc.OdbcType)">
      <summary>Adds an <see cref="T:System.Data.Odbc.OdbcParameter" /> to the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />, given the parameter name and data type.</summary>
      <returns>The index of the new <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="odbcType">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.String,System.Data.Odbc.OdbcType,System.Int32)">
      <summary>Adds an <see cref="T:System.Data.Odbc.OdbcParameter" /> to the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />, given the parameter name, data type, and column length.</summary>
      <returns>The index of the new <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="odbcType">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values. </param>
      <param name="size">The length of the column. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)">
      <summary>Adds an <see cref="T:System.Data.Odbc.OdbcParameter" /> to the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> given the parameter name, data type, column length, and source column name.</summary>
      <returns>The index of the new <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="odbcType">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values. </param>
      <param name="size">The length of the column. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.String,System.Object)">
      <summary>Adds an <see cref="T:System.Data.Odbc.OdbcParameter" /> to the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> given the parameter name and value.</summary>
      <returns>The index of the new <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">The <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> of the <see cref="T:System.Data.Odbc.OdbcParameter" /> to add to the collection. </param>
      <exception cref="T:System.InvalidCastException">The <paramref name="value" /> parameter is not an <see cref="T:System.Data.Odbc.OdbcParameter" />. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.AddRange(System.Array)">
      <summary>Adds an array of values to the end of the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="values">The <see cref="T:System.Array" /> values to add.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.AddRange(System.Data.Odbc.OdbcParameter[])">
      <summary>Adds an array of <see cref="T:System.Data.Odbc.OdbcParameter" /> values to the end of the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="values">An array of <see cref="T:System.Data.Odbc.OdbcParameter" /> objects to add to the collection.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Adds a value to the end of the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />. </summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter.</param>
      <param name="value">The value to be added.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Clear">
      <summary>Removes all <see cref="T:System.Data.Odbc.OdbcParameter" /> objects from the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Contains(System.Data.Odbc.OdbcParameter)">
      <summary>Determines whether the specified <see cref="T:System.Data.Odbc.OdbcParameter" /> is in this <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <returns>true if the <see cref="T:System.Data.Odbc.OdbcParameter" /> is in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Data.Odbc.OdbcParameter" /> value.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Contains(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is in this <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <returns>true if the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> contains the value otherwise false.</returns>
      <param name="value">The <see cref="T:System.Object" /> value.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Contains(System.String)">
      <summary>Gets a value indicating whether an <see cref="T:System.Data.Odbc.OdbcParameter" /> object with the specified parameter name exists in the collection.</summary>
      <returns>true if the collection contains the parameter; otherwise, false.</returns>
      <param name="value">The name of the <see cref="T:System.Data.Odbc.OdbcParameter" /> object to find. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
      <param name="index">A 32-bit integer that represents the index in the <see cref="T:System.Array" /> at which copying starts.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.CopyTo(System.Data.Odbc.OdbcParameter[],System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> to the specified <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> starting at the specified destination index.</summary>
      <param name="array">The <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> that is the destination of the elements copied from the current <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
      <param name="index">A 32-bit integer that represents the index in the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> at which copying starts.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.Count">
      <summary>Returns an Integer that contains the number of elements in the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />. Read-only.</summary>
      <returns>The number of elements in the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> as an Integer.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator" /> for the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.IndexOf(System.Data.Odbc.OdbcParameter)">
      <summary>Gets the location of the specified <see cref="T:System.Data.Odbc.OdbcParameter" /> within the collection.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Data.Odbc.OdbcParameter" /> within the collection.</returns>
      <param name="value">The <see cref="T:System.Data.Odbc.OdbcParameter" /> object in the collection to find.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.IndexOf(System.Object)">
      <summary>Gets the location of the specified <see cref="T:System.Object" /> within the collection.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Object" /> that is a <see cref="T:System.Data.Odbc.OdbcParameter" /> within the collection.</returns>
      <param name="value">The <see cref="T:System.Object" /> to find.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.IndexOf(System.String)">
      <summary>Gets the location of the specified <see cref="T:System.Data.Odbc.OdbcParameter" /> with the specified name.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Data.Odbc.OdbcParameter" /> with the specified case-sensitive name.</returns>
      <param name="parameterName">The case-sensitive name of the <see cref="T:System.Data.Odbc.OdbcParameter" /> to find.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Insert(System.Int32,System.Data.Odbc.OdbcParameter)">
      <summary>Inserts a <see cref="T:System.Data.Odbc.OdbcParameter" /> object into the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which the object should be inserted.</param>
      <param name="value">A <see cref="T:System.Data.Odbc.OdbcParameter" /> object to be inserted in the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:System.Object" /> into the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which the object should be inserted.</param>
      <param name="value">A <see cref="T:System.Object" /> to be inserted in the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> has a fixed size. Read-only.</summary>
      <returns>true if the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> has a fixed size, otherwise false.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> is read only, otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.IsSynchronized">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> is synchronized. Read-only.</summary>
      <returns>true if the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Data.Odbc.OdbcParameter" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Data.Odbc.OdbcParameter" /> at the specified index.</returns>
      <param name="index">The zero-based index of the parameter to retrieve. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index specified does not exist. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Data.Odbc.OdbcParameter" /> with the specified name.</summary>
      <returns>The <see cref="T:System.Data.Odbc.OdbcParameter" /> with the specified name.</returns>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <exception cref="T:System.IndexOutOfRangeException">The name specified does not exist. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Remove(System.Data.Odbc.OdbcParameter)">
      <summary>Removes the <see cref="T:System.Data.Odbc.OdbcParameter" /> from the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="value">A <see cref="T:System.Data.Odbc.OdbcParameter" /> object to remove from the collection.</param>
      <exception cref="T:System.InvalidCastException">The parameter is not a <see cref="T:System.Data.Odbc.OdbcParameter" />.</exception>
      <exception cref="T:System.SystemException">The parameter does not exist in the collection.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Remove(System.Object)">
      <summary>Removes the <see cref="T:System.Object" /> object from the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="value">A <see cref="T:System.Object" /> to be removed from the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.Odbc.OdbcParameter" /> from the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Odbc.OdbcParameter" /> object to remove.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.Odbc.OdbcParameter" /> from the <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> with the specified parameter name.</summary>
      <param name="parameterName">The name of the <see cref="T:System.Data.Odbc.OdbcParameter" /> object to remove.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />. Read-only.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary>Enables the .NET Framework Data Provider for ODBC to help make sure that a user has a security level sufficient to access an ODBC data source. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcPermission" /> class.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcPermission" /> class with one of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcPermission" /> class.</summary>
      <param name="state">One of the System.Security.Permissions.PermissionState values. </param>
      <param name="allowBlankPassword">Indicates whether a blank password is allowed. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Adds access for the specified connection string to the existing state of the permission.</summary>
      <param name="connectionString">A permitted connection string. </param>
      <param name="restrictions">String that identifies connection string parameters that are allowed or disallowed. </param>
      <param name="behavior">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> values. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary>Returns the <see cref="T:System.Data.Odbc.OdbcPermission" /> as an <see cref="T:System.Security.IPermission" />.</summary>
      <returns>A copy of the current permission object.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary>Associates a security action with a custom security attribute.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> class with one of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed by using declarative security. </param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary>Returns an <see cref="T:System.Data.Odbc.OdbcPermission" /> object that is configured according to the attribute properties.</summary>
      <returns>An <see cref="T:System.Data.Odbc.OdbcPermission" /> object.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Odbc.OdbcRowUpdatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.Odbc.OdbcDataAdapter.RowUpdated" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcRowUpdatedEventArgs" /> class.</summary>
      <param name="row">The DataRow sent through an update operation. </param>
      <param name="command">The <see cref="T:System.Data.Odbc.OdbcCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.Odbc.OdbcRowUpdatedEventArgs.Command">
      <summary>Gets the <see cref="T:System.Data.Odbc.OdbcCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</summary>
      <returns>The <see cref="T:System.Data.Odbc.OdbcCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcRowUpdatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.Odbc.OdbcDataAdapter.RowUpdated" /> event of an <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.Odbc.OdbcRowUpdatedEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcRowUpdatingEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.Odbc.OdbcDataAdapter.RowUpdating" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcRowUpdatingEventArgs" /> class.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to update. </param>
      <param name="command">The <see cref="T:System.Data.Odbc.OdbcCommand" /> to execute during the update operation. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.Odbc.OdbcRowUpdatingEventArgs.Command">
      <summary>Gets or sets the <see cref="T:System.Data.Odbc.OdbcCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</summary>
      <returns>The <see cref="T:System.Data.Odbc.OdbcCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcRowUpdatingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.Odbc.OdbcDataAdapter.RowUpdating" /> event of an <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.Odbc.OdbcRowUpdatingEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.Odbc.OdbcTransaction">
      <summary>Represents an SQL transaction to be made at a data source. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Odbc.OdbcTransaction.Commit">
      <summary>Commits the database transaction.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Odbc.OdbcTransaction.Connection">
      <summary>Gets the <see cref="T:System.Data.Odbc.OdbcConnection" /> object associated with the transaction, or null if the transaction is no longer valid.</summary>
      <returns>The <see cref="T:System.Data.Odbc.OdbcConnection" /> object associated with the transaction.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.Odbc.OdbcTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</summary>
      <returns>The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The default depends on the underlying ODBC driver.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.Odbc.OdbcTransaction.Rollback">
      <summary>Rolls back a transaction from a pending state.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.Odbc.OdbcType">
      <summary>Specifies the data type of a field, property, for use in an <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.BigInt">
      <summary>Exact numeric value with precision 19 (if signed) or 20 (if unsigned) and scale 0 (signed: –2[63] &lt;= n &lt;= 2[63] – 1, unsigned:0 &lt;= n &lt;= 2[64] – 1) (SQL_BIGINT). This maps to <see cref="T:System.Int64" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Binary">
      <summary>A stream of binary data (SQL_BINARY). This maps to an <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Bit">
      <summary>Single bit binary data (SQL_BIT). This maps to <see cref="T:System.Boolean" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Char">
      <summary>A fixed-length character string (SQL_CHAR). This maps to <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.DateTime">
      <summary>Date data in the format yyyymmddhhmmss (SQL_TYPE_TIMESTAMP). This maps to <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Decimal">
      <summary>Signed, exact, numeric value with a precision of at least p and scale s, where 1 &lt;= p &lt;= 15 and s &lt;= p. The maximum precision is driver-specific (SQL_DECIMAL). This maps to <see cref="T:System.Decimal" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Numeric">
      <summary>Signed, exact, numeric value with a precision p and scale s, where 1 &lt;= p &lt;= 15, and s &lt;= p (SQL_NUMERIC). This maps to <see cref="T:System.Decimal" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Double">
      <summary>Signed, approximate, numeric value with a binary precision 53 (zero or absolute value 10[–308] to 10[308]) (SQL_DOUBLE). This maps to <see cref="T:System.Double" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Image">
      <summary>Variable length binary data. Maximum length is data source–dependent (SQL_LONGVARBINARY). This maps to an <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Int">
      <summary>Exact numeric value with precision 10 and scale 0 (signed: –2[31] &lt;= n &lt;= 2[31] – 1, unsigned:0 &lt;= n &lt;= 2[32] – 1) (SQL_INTEGER). This maps to <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.NChar">
      <summary>Unicode character string of fixed string length (SQL_WCHAR). This maps to <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.NText">
      <summary>Unicode variable-length character data. Maximum length is data source–dependent. (SQL_WLONGVARCHAR). This maps to <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.NVarChar">
      <summary>A variable-length stream of Unicode characters (SQL_WVARCHAR). This maps to <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Real">
      <summary>Signed, approximate, numeric value with a binary precision 24 (zero or absolute value 10[–38] to 10[38]).(SQL_REAL). This maps to <see cref="T:System.Single" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.UniqueIdentifier">
      <summary>A fixed-length GUID (SQL_GUID). This maps to <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.SmallDateTime">
      <summary>Data and time data in the format yyyymmddhhmmss (SQL_TYPE_TIMESTAMP). This maps to <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.SmallInt">
      <summary>Exact numeric value with precision 5 and scale 0 (signed: –32,768 &lt;= n &lt;= 32,767, unsigned: 0 &lt;= n &lt;= 65,535) (SQL_SMALLINT). This maps to <see cref="T:System.Int16" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Text">
      <summary>Variable length character data. Maximum length is data source–dependent (SQL_LONGVARCHAR). This maps to <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Timestamp">
      <summary>A stream of binary data (SQL_BINARY). This maps to an <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.TinyInt">
      <summary>Exact numeric value with precision 3 and scale 0 (signed: –128 &lt;= n &lt;= 127, unsigned:0 &lt;= n &lt;= 255)(SQL_TINYINT). This maps to <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.VarBinary">
      <summary>Variable length binary. The maximum is set by the user (SQL_VARBINARY). This maps to an <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.VarChar">
      <summary>A variable-length stream character string (SQL_CHAR). This maps to <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Date">
      <summary>Date data in the format yyyymmdd (SQL_TYPE_DATE). This maps to <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Time">
      <summary>Date data in the format hhmmss (SQL_TYPE_TIMES). This maps to <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbCommand">
      <summary>Represents an SQL statement or stored procedure to execute against a data source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query.</summary>
      <param name="cmdText">The text of the query. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query and an <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <param name="cmdText">The text of the query. </param>
      <param name="connection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query, an <see cref="T:System.Data.OleDb.OleDbConnection" />, and the <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" />.</summary>
      <param name="cmdText">The text of the query. </param>
      <param name="connection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source. </param>
      <param name="transaction">The transaction in which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Cancel">
      <summary>Tries to cancel the execution of an <see cref="T:System.Data.OleDb.OleDbCommand" />.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Clone">
      <summary>Creates a new <see cref="T:System.Data.OleDb.OleDbCommand" /> object that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:System.Data.OleDb.OleDbCommand" /> object that is a copy of this instance.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandText">
      <summary>Gets or sets the SQL statement or stored procedure to execute at the data source.</summary>
      <returns>The SQL statement or stored procedure to execute. The default value is an empty string.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandTimeout">
      <summary>Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</summary>
      <returns>The time (in seconds) to wait for the command to execute. The default is 30 seconds.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandType">
      <summary>Gets or sets a value that indicates how the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> property is interpreted.</summary>
      <returns>One of the <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> values. The default is Text.</returns>
      <exception cref="T:System.ArgumentException">The value was not a valid <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" />.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Connection">
      <summary>Gets or sets the <see cref="T:System.Data.OleDb.OleDbConnection" /> used by this instance of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</summary>
      <returns>The connection to a data source. The default value is null.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> property was changed while a transaction was in progress. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.CreateParameter">
      <summary>Creates a new instance of an <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.DesignTimeVisible">
      <summary>Gets or sets a value that indicates whether the command object should be visible in a customized Windows Forms Designer control.</summary>
      <returns>A value that indicates whether the command object should be visible in a control. The default is true.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteNonQuery">
      <summary>Executes an SQL statement against the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and returns the number of rows affected.</summary>
      <returns>The number of rows affected.</returns>
      <exception cref="T:System.InvalidOperationException">The connection does not exist.-or- The connection is not open.-or- Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
        <IPermission class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteReader">
      <summary>Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
        <IPermission class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />, and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</returns>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <exception cref="T:System.InvalidOperationException">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
        <IPermission class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteScalar">
      <summary>Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.</summary>
      <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
      <exception cref="T:System.InvalidOperationException">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
        <IPermission class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Parameters">
      <summary>Gets the <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <returns>The parameters of the SQL statement or stored procedure. The default is an empty collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Prepare">
      <summary>Creates a prepared (or compiled) version of the command on the data source.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.-or- The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not open. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ResetCommandTimeout">
      <summary>Resets the <see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> property to the default value.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbCommand.ExecuteReader" />.</summary>
      <returns>An <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</summary>
      <returns>An <see cref="T:System.Data.IDataReaderbuiltusingoneoftheT:System.Data.CommandBehavior" /> values.</returns>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>A new <see cref="T:System.Object" /> that is a copy of this instance.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Transaction">
      <summary>Gets or sets the <see cref="T:System.Data.OleDb.OleDbTransaction" /> within which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</summary>
      <returns>The <see cref="T:System.Data.OleDb.OleDbTransaction" />. The default value is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.UpdatedRowSource">
      <summary>Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the Update method of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
      <returns>One of the <see cref="T:System.Data.UpdateRowSource" /> values.</returns>
      <exception cref="T:System.ArgumentException">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</exception>
    </member>
    <member name="T:System.Data.OleDb.OleDbCommandBuilder">
      <summary>Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class with the associated <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object.</summary>
      <param name="adapter">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" />. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter">
      <summary>Gets or sets an <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object for which SQL statements are automatically generated.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
      <summary>Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.OleDb.OleDbCommand" /> and populates the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection of the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> object.</summary>
      <param name="command">The <see cref="T:System.Data.OleDb.OleDbCommand" /> referencing the stored procedure from which the parameter information is to be derived. The derived parameters are added to the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection of the <see cref="T:System.Data.OleDb.OleDbCommand" />. </param>
      <exception cref="T:System.InvalidOperationException">The underlying OLE DB provider does not support returning stored procedure parameter information, the command text is not a valid stored procedure name, or the <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> specified was not StoredProcedure.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if it is possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if it is possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source.</summary>
      <returns>The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</summary>
      <returns>The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates.</returns>
      <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if it is possible. If false, generate @p1, @p2, and so on.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier.</summary>
      <returns>The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.</returns>
      <param name="unquotedIdentifier">The original unquoted identifier.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier.</summary>
      <returns>The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.</returns>
      <param name="unquotedIdentifier">The unquoted identifier to be returned in quoted format.</param>
      <param name="connection">The <see cref="T:System.Data.OleDb.OleDbConnection" />.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly un-escaping any embedded quotes in the identifier.</summary>
      <returns>The unquoted identifier, with embedded quotes correctly un-escaped.</returns>
      <param name="quotedIdentifier">The identifier that will have its embedded quotes removed.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly un-escaping any embedded quotes in the identifier.</summary>
      <returns>The unquoted identifier, with embedded quotes correctly un-escaped.</returns>
      <param name="quotedIdentifier">The identifier that will have its embedded quotes removed.</param>
      <param name="connection">The <see cref="T:System.Data.OleDb.OleDbConnection" />.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.OleDb.OleDbConnection">
      <summary>Represents an open connection to a data source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" /> class.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" /> class with the specified connection string.</summary>
      <param name="connectionString">The connection used to open the database. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.BeginTransaction">
      <summary>Starts a database transaction with the current <see cref="T:System.Data.IsolationLevel" /> value.</summary>
      <returns>An object representing the new transaction.</returns>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Starts a database transaction with the specified isolation level.</summary>
      <returns>An object representing the new transaction.</returns>
      <param name="isolationLevel">The isolation level under which the transaction should run.</param>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)">
      <summary>Changes the current database for an open <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <param name="value">The database name. </param>
      <exception cref="T:System.ArgumentException">The database name is not valid. </exception>
      <exception cref="T:System.InvalidOperationException">The connection is not open. </exception>
      <exception cref="T:System.Data.OleDb.OleDbException">Cannot change the database. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Close">
      <summary>Closes the connection to the data source.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ConnectionString">
      <summary>Gets or sets the string used to open a database.</summary>
      <returns>The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection. The default value is an empty string.</returns>
      <exception cref="T:System.ArgumentException">An invalid connection string argument has been supplied or a required connection string argument has not been supplied. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout">
      <summary>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</summary>
      <returns>The time in seconds to wait for a connection to open. The default value is 15 seconds.</returns>
      <exception cref="T:System.ArgumentException">The value set is less than 0. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.CreateCommand">
      <summary>Creates and returns an <see cref="T:System.Data.OleDb.OleDbCommand" /> object associated with the <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbCommand" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.Database">
      <summary>Gets the name of the current database or the database to be used after a connection is opened.</summary>
      <returns>The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.DataSource">
      <summary>Gets the server name or file name of the data source.</summary>
      <returns>The server name or file name of the data source. The default value is an empty string.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>Enlists in the specified transaction as a distributed transaction.</summary>
      <param name="transaction">A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified transaction as a distributed transaction.</summary>
      <param name="transaction">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])">
      <summary>Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains the requested schema information.</returns>
      <param name="schema">One of the <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> values that specifies the schema table to return. </param>
      <param name="restrictions">An <see cref="T:System.Object" /> array of restriction values. These are applied in the order of the restriction columns. That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on. </param>
      <exception cref="T:System.Data.OleDb.OleDbException">The specified set of restrictions is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.OleDb.OleDbConnection" /> is closed. </exception>
      <exception cref="T:System.ArgumentException">The specified schema rowset is not supported by the OLE DB provider.-or- The <paramref name="schema" /> parameter contains a value of <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> and the <paramref name="restrictions" /> parameter contains one or more restrictions. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetSchema">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" /> using the specified string for the schema name.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
      <param name="collectionName">Specifies the name of the schema to return. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
      <param name="collectionName">Specifies the name of the schema to return.</param>
      <param name="restrictionValues">Specifies a set of restriction values for the requested schema.</param>
    </member>
    <member name="E:System.Data.OleDb.OleDbConnection.InfoMessage">
      <summary>Occurs when the provider sends a warning or an informational message.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Open">
      <summary>Opens a database connection with the property settings specified by the <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</summary>
      <exception cref="T:System.InvalidOperationException">The connection is already open.</exception>
      <exception cref="T:System.Data.OleDb.OleDbException">A connection-level error occurred while opening the connection.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.Provider">
      <summary>Gets the name of the OLE DB provider specified in the "Provider= " clause of the connection string.</summary>
      <returns>The name of the provider as specified in the "Provider= " clause of the connection string. The default value is an empty string.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool">
      <summary>Indicates that the <see cref="T:System.Data.OleDb.OleDbConnection" /> object pool can be released when the last underlying connection is released.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ResetState">
      <summary>Updates the <see cref="P:System.Data.OleDb.OleDbConnection.State" /> property of the <see cref="T:System.Data.OleDb.OleDbConnection" /> object.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ServerVersion">
      <summary>Gets a string that contains the version of the server to which the client is connected.</summary>
      <returns>The version of the connected server.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.State">
      <summary>Gets the current state of the connection.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default is Closed.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>A new <see cref="T:System.Object" /> that is a copy of this instance.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbConnectionStringBuilder">
      <summary>Provides a simple way to create and manage the contents of connection strings used by the <see cref="T:System.Data.OleDb.OleDbConnection" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> class.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> class. The provided connection string provides the data for the instance's internal connection information.</summary>
      <param name="connectionString">The basis for the object's internal connection information. Parsed into key/value pairs.</param>
      <exception cref="T:System.ArgumentException">The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
      <summary>Clears the contents of the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> instance.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> contains a specific key.</summary>
      <returns>true if the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> contains an element that has the specified key; otherwise false.</returns>
      <param name="keyword">The key to locate in the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is null (Nothing in Visual Basic).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
      <summary>Gets or sets the name of the data source to connect to.</summary>
      <returns>The value of the <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" /> property, or String.Empty if none has been supplied.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
      <summary>Gets or sets the name of the Universal Data Link (UDL) file for connecting to the data source.</summary>
      <returns>The value of the <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" /> property, or String.Empty if none has been supplied.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key. In C#, this property is the indexer.</summary>
      <returns>The value associated with the specified key.</returns>
      <param name="keyword">The key of the item to get or set.</param>
      <exception cref="T:System.ArgumentException">The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is a null reference (Nothing in Visual Basic).</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
      <summary>Gets or sets the value to be passed for the OLE DB Services key within the connection string.</summary>
      <returns>Returns the value corresponding to the OLE DB Services key within the connection string. By default, the value is -13.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
      <summary>Gets or sets a Boolean value that indicates whether security-sensitive information, such as the password, is returned as part of the connection if the connection is open or has ever been in an open state.</summary>
      <returns>The value of the <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" /> property, or false if none has been supplied.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
      <summary>Gets or sets a string that contains the name of the data provider associated with the internal connection string.</summary>
      <returns>The value of the <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" /> property, or String.Empty if none has been supplied.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)">
      <summary>Removes the entry with the specified key from the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> instance.</summary>
      <returns>true if the key existed within the connection string and was removed, false if the key did not exist.</returns>
      <param name="keyword">The key of the key/value pair to be removed from the connection string in this <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> is null (Nothing in Visual Basic).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Retrieves a value corresponding to the supplied key from the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> instance.</summary>
      <returns>true if <paramref name="keyword" /> was found within the connection string; otherwise false.</returns>
      <param name="keyword">The key of the item to retrieve.</param>
      <param name="value">The value corresponding to <paramref name="keyword." /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> contains a null value (Nothing in Visual Basic).</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.OleDb.OleDbDataAdapter">
      <summary>Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property.</summary>
      <param name="selectCommand">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is a SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
      <param name="selectCommandText">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />. </param>
      <param name="selectConnection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
      <param name="selectCommandText">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />. </param>
      <param name="selectConnectionString">The connection string. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
      <summary>Gets or sets an SQL statement or stored procedure for deleting records from the data set.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
      <summary>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO Recordset or Record object using the specified <see cref="T:System.Data.DataSet" />, ADO object, and source table name.</summary>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if it is required, schema. </param>
      <param name="ADODBRecordSet">An ADO Recordset or Record object. </param>
      <param name="srcTable">The source table used for the table mappings. </param>
      <exception cref="T:System.SystemException">The source table is invalid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
      <summary>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in an ADO Recordset or Record object using the specified <see cref="T:System.Data.DataTable" /> and ADO objects.</summary>
      <returns>The number of rows successfully refreshed to the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements that do not return rows.</returns>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if it is required, schema. </param>
      <param name="ADODBRecordSet">An ADO Recordset or Record object. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
      <summary>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source. The attempt to update is made. Therefore, the event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source. The attempt to update is made. Therefore, the event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
      <summary>Gets or sets an SQL statement or stored procedure used to select records in the data source.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during an update to delete records in the data source for deleted rows in the data set.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> that is used during an update to insert records from a data source for placement in the data set.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> that is used during an update to select records from a data source for placement in the data set.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> used during an update to update records in the data source for modified rows in the data set.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>A new <see cref="T:System.Object" /> that is a copy of this instance.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
      <summary>Gets or sets an SQL statement or stored procedure used to update records in the data source.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.OleDb.OleDbDataReader">
      <summary>Provides a way of reading a forward-only stream of data rows from a data source. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Close">
      <summary>Closes the <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Depth">
      <summary>Gets a value that indicates the depth of nesting for the current row.</summary>
      <returns>The depth of nesting for the current row.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.FieldCount">
      <summary>Gets the number of columns in the current row.</summary>
      <returns>When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.</returns>
      <exception cref="T:System.NotSupportedException">There is no current connection to a data source. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean.</summary>
      <returns>The value of the column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte.</summary>
      <returns>The value of the specified column as a byte.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset.</summary>
      <returns>The actual number of bytes read.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="dataIndex">The index within the field from which to start the read operation. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferIndex">The index within the <paramref name="buffer" /> where the write operation is to start. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a character.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</summary>
      <returns>The actual number of characters read.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="dataIndex">The index within the row from which to start the read operation. </param>
      <param name="buffer">The buffer into which to copy data. </param>
      <param name="bufferIndex">The index within the <paramref name="buffer" /> where the write operation is to start. </param>
      <param name="length">The number of characters to read. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)">
      <summary>Returns an <see cref="T:System.Data.OleDb.OleDbDataReader" /> object for the requested column ordinal.</summary>
      <returns>An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets the name of the source data type.</summary>
      <returns>The name of the back-end data type.</returns>
      <param name="index">The zero-based column ordinal. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating-point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object.</summary>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object.</returns>
      <param name="index">The zero-based column ordinal. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating-point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally unique identifier (GUID).</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)">
      <summary>Gets the name of the specified column.</summary>
      <returns>The name of the specified column.</returns>
      <param name="index">The zero-based column ordinal. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column.</summary>
      <returns>The zero-based column ordinal.</returns>
      <param name="name">The name of the column. </param>
      <exception cref="T:System.IndexOutOfRangeException">The name specified is not a valid column name. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> is closed. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as a string.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorli