 6F 6C  ........XGSetVol
  00000030: 75 6D 65 54 65 78 74 75 72 65 48 65 61 64 65 72  umeTextureHeader
  00000040: 10 00 06 10 08 00 00 00 75 00 00 00 05 57 69 64  ........u....Wid
  00000050: 74 68 11 00 06 10 0C 00 00 00 75 00 00 00 06 48  th........u....H
  00000060: 65 69 67 68 74 10 00 06 10 10 00 00 00 75 00 00  eight........u..
  00000070: 00 05 44 65 70 74 68 11 00 06 10 14 00 00 00 75  ..Depth........u
  00000080: 00 00 00 06 4C 65 76 65 6C 73 10 00 06 10 18 00  ....Levels......
  00000090: 00 00 22 00 00 00 05 55 73 61 67 65 11 00 06 10  .."....Usage....
  000000A0: 1C 00 00 00 1B 10 00 00 06 46 6F 72 6D 61 74 0F  .........Format.
  000000B0: 00 06 10 20 00 00 00 22 00 00 00 04 50 6F 6F 6C  ... ..."....Pool
  000000C0: 19 00 06 10 24 00 00 00 67 10 00 00 0E 70 56 6F  ....$...g....pVo
  000000D0: 6C 75 6D 65 54 65 78 74 75 72 65 0F 00 06 10 28  lumeTexture....(
  000000E0: 00 00 00 75 00 00 00 04 44 61 74 61 10 00 06 10  ...u....Data....
  000000F0: 2C 00 00 00 75 00 00 00 05 50 69 74 63 68 02 00  ,...u....Pitch..
  00000100: 06 00                                            ..

RELOCATIONS #2F
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        C4  _XGSetVolumeTextureHeader@40
 00000024  SECTION                        0000        C4  _XGSetVolumeTextureHeader@40

SECTION HEADER #30
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    397F file pointer to raw data (0000397F to 0000398E)
    398F file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #30
  00000000: 00 00 00 00 2B 00 00 00 01 00 00 00 0A 00 03 D0  ....+...........

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        43        4     0        3   Y   N    std       40

RELOCATIONS #30
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        C4  _XGSetVolumeTextureHeader@40

SECTION HEADER #31
   XGRPH name
       0 physical address
       0 virtual address
      18 size of raw data
    3999 file pointer to raw data (00003999 to 000039B0)
       0 file pointer to relocation table
    39B1 file pointer to line numbers
       0 number of relocations
       5 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetVertexBufferHeader@24
         1 byte align
         Execute Read

RAW DATA #31
  00000000: 8B 44 24 14 8B 4C 24 18 83 60 08 00 C7 00 01 00  .D$..L$..`......
  00000010: 00 00 89 48 04 C2 18 00                          ...H....

LINENUMBERS #31

 Symbol index:       D1 Base line number:   399
 Symbol name = _XGSetVertexBufferHeader@24
 00000000(  400)  00000004(  401)  00000008(  402)  00000015(  403)

SECTION HEADER #32
.debug$S name
       0 physical address
       0 virtual address
      AE size of raw data
    39CF file pointer to raw data (000039CF to 00003A7C)
    3A7D file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #32
  00000000: 3D 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  =...............
  00000010: 18 00 00 00 00 00 00 00 15 00 00 00 A7 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 17 58 47 53 65 74 56 65 72  ........XGSetVer
  00000030: 74 65 78 42 75 66 66 65 72 48 65 61 64 65 72 11  texBufferHeader.
  00000040: 00 06 10 04 00 00 00 75 00 00 00 06 4C 65 6E 67  .......u....Leng
  00000050: 74 68 10 00 06 10 08 00 00 00 22 00 00 00 05 55  th........"....U
  00000060: 73 61 67 65 0E 00 06 10 0C 00 00 00 22 00 00 00  sage........"...
  00000070: 03 46 56 46 0F 00 06 10 10 00 00 00 22 00 00 00  .FVF........"...
  00000080: 04 50 6F 6F 6C 12 00 06 10 14 00 00 00 71 10 00  .Pool........q..
  00000090: 00 07 70 42 75 66 66 65 72 0F 00 06 10 18 00 00  ..pBuffer.......
  000000A0: 00 75 00 00 00 04 44 61 74 61 02 00 06 00        .u....Data....

RELOCATIONS #32
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        D1  _XGSetVertexBufferHeader@24
 00000024  SECTION                        0000        D1  _XGSetVertexBufferHeader@24

SECTION HEADER #33
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    3A91 file pointer to raw data (00003A91 to 00003AA0)
    3AA1 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #33
  00000000: 00 00 00 00 18 00 00 00 00 00 00 00 06 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        24        0     0        0   N   N    fpo       24

RELOCATIONS #33
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        D1  _XGSetVertexBufferHeader@24

SECTION HEADER #34
   XGRPH name
       0 physical address
       0 virtual address
      18 size of raw data
    3AAB file pointer to raw data (00003AAB to 00003AC2)
       0 file pointer to relocation table
    3AC3 file pointer to line numbers
       0 number of relocations
       5 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetIndexBufferHeader@24
         1 byte align
         Execute Read

RAW DATA #34
  00000000: 8B 44 24 14 8B 4C 24 18 83 60 08 00 C7 00 01 00  .D$..L$..`......
  00000010: 01 00 89 48 04 C2 18 00                          ...H....

LINENUMBERS #34

 Symbol index:       DE Base line number:   414
 Symbol name = _XGSetIndexBufferHeader@24
 00000000(  415)  00000004(  416)  00000008(  417)  00000015(  418)

SECTION HEADER #35
.debug$S name
       0 physical address
       0 virtual address
      B0 size of raw data
    3AE1 file pointer to raw data (00003AE1 to 00003B90)
    3B91 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #35
  00000000: 3C 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  <...............
  00000010: 18 00 00 00 00 00 00 00 15 00 00 00 A9 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 16 58 47 53 65 74 49 6E 64  ........XGSetInd
  00000030: 65 78 42 75 66 66 65 72 48 65 61 64 65 72 11 00  exBufferHeader..
  00000040: 06 10 04 00 00 00 75 00 00 00 06 4C 65 6E 67 74  ......u....Lengt
  00000050: 68 10 00 06 10 08 00 00 00 22 00 00 00 05 55 73  h........"....Us
  00000060: 61 67 65 11 00 06 10 0C 00 00 00 1B 10 00 00 06  age.............
  00000070: 46 6F 72 6D 61 74 0F 00 06 10 10 00 00 00 22 00  Format........".
  00000080: 00 00 04 50 6F 6F 6C 12 00 06 10 14 00 00 00 76  ...Pool........v
  00000090: 10 00 00 07 70 42 75 66 66 65 72 0F 00 06 10 18  ....pBuffer.....
  000000A0: 00 00 00 75 00 00 00 04 44 61 74 61 02 00 06 00  ...u....Data....

RELOCATIONS #35
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        DE  _XGSetIndexBufferHeader@24
 00000024  SECTION                        0000        DE  _XGSetIndexBufferHeader@24

SECTION HEADER #36
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    3BA5 file pointer to raw data (00003BA5 to 00003BB4)
    3BB5 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #36
  00000000: 00 00 00 00 18 00 00 00 00 00 00 00 06 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        24        0     0        0   N   N    fpo       24

RELOCATIONS #36
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        DE  _XGSetIndexBufferHeader@24

SECTION HEADER #37
   XGRPH name
       0 physical address
       0 virtual address
      21 size of raw data
    3BBF file pointer to raw data (00003BBF to 00003BDF)
       0 file pointer to relocation table
    3BE0 file pointer to line numbers
       0 number of relocations
       4 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetPaletteHeader@12
         1 byte align
         Execute Read

RAW DATA #37
  00000000: 8B 4C 24 04 8B 44 24 08 83 60 08 00 C1 E1 1E 81  .L$..D$..`......
  00000010: C9 01 00 03 00 89 08 8B 4C 24 0C 89 48 04 C2 0C  ........L$..H...
  00000020: 00                                               .

LINENUMBERS #37

 Symbol index:       EB Base line number:   426
 Symbol name = _XGSetPaletteHeader@12
 00000000(  430)  00000008(  432)  0000001E(  433)

SECTION HEADER #38
.debug$S name
       0 physical address
       0 virtual address
      75 size of raw data
    3BF8 file pointer to raw data (00003BF8 to 00003C6C)
    3C6D file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #38
  00000000: 38 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  8...............
  00000010: 21 00 00 00 00 00 00 00 1E 00 00 00 AB 14 00 00  !...............
  00000020: 00 00 00 00 00 00 00 12 58 47 53 65 74 50 61 6C  ........XGSetPal
  00000030: 65 74 74 65 48 65 61 64 65 72 0F 00 06 10 04 00  etteHeader......
  00000040: 00 00 23 11 00 00 04 53 69 7A 65 13 00 06 10 08  ..#....Size.....
  00000050: 00 00 00 25 11 00 00 08 70 50 61 6C 65 74 74 65  ...%....pPalette
  00000060: 0F 00 06 10 0C 00 00 00 75 00 00 00 04 44 61 74  ........u....Dat
  00000070: 61 02 00 06 00                                   a....

RELOCATIONS #38
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        EB  _XGSetPaletteHeader@12
 00000024  SECTION                        0000        EB  _XGSetPaletteHeader@12

SECTION HEADER #39
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    3C81 file pointer to raw data (00003C81 to 00003C90)
    3C91 file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #39
  00000000: 00 00 00 00 21 00 00 00 00 00 00 00 03 00 00 00  ....!...........

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        33        0     0        0   N   N    fpo       12

RELOCATIONS #39
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        EB  _XGSetPaletteHeader@12

SECTION HEADER #3A
   XGRPH name
       0 physical address
       0 virtual address
      2F size of raw data
    3C9B file pointer to raw data (00003C9B to 00003CC9)
       0 file pointer to relocation table
    3CCA file pointer to line numbers
       0 number of relocations
       7 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetPushBufferHeader@16
         1 byte align
         Execute Read

RAW DATA #3A
  00000000: 83 7C 24 08 00 8B 44 24 0C C7 00 01 00 02 00 74  .|$...D$.......t
  00000010: 06 C7 00 01 00 02 80 8B 4C 24 04 8B 54 24 10 83  ........L$..T$..
  00000020: 60 08 00 89 48 10 89 50 04 89 48 0C C2 10 00     `...H..P..H....

LINENUMBERS #3A

 Symbol index:       F8 Base line number:   442
 Symbol name = _XGSetPushBufferHeader@16
 00000000(  445)  00000011(  447)  00000017(  450)  0000001B(  451)
 0000001F(  453)  0000002C(  454)

SECTION HEADER #3B
.debug$S name
       0 physical address
       0 virtual address
      97 size of raw data
    3CF4 file pointer to raw data (00003CF4 to 00003D8A)
    3D8B file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #3B
  00000000: 3B 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  ;...............
  00000010: 2F 00 00 00 00 00 00 00 2C 00 00 00 AD 14 00 00  /.......,.......
  00000020: 00 00 00 00 00 00 00 15 58 47 53 65 74 50 75 73  ........XGSetPus
  00000030: 68 42 75 66 66 65 72 48 65 61 64 65 72 0F 00 06  hBufferHeader...
  00000040: 10 04 00 00 00 75 00 00 00 04 53 69 7A 65 1A 00  .....u....Size..
  00000050: 06 10 08 00 00 00 74 00 00 00 0F 52 75 6E 55 73  ......t....RunUs
  00000060: 69 6E 67 43 70 75 43 6F 70 79 16 00 06 10 0C 00  ingCpuCopy......
  00000070: 00 00 4C 11 00 00 0B 70 50 75 73 68 42 75 66 66  ..L....pPushBuff
  00000080: 65 72 0F 00 06 10 10 00 00 00 75 00 00 00 04 44  er........u....D
  00000090: 61 74 61 02 00 06 00                             ata....

RELOCATIONS #3B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000        F8  _XGSetPushBufferHeader@16
 00000024  SECTION                        0000        F8  _XGSetPushBufferHeader@16

SECTION HEADER #3C
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    3D9F file pointer to raw data (00003D9F to 00003DAE)
    3DAF file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #3C
  00000000: 00 00 00 00 2F 00 00 00 00 00 00 00 04 00 00 00  ..../...........

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        47        0     0        0   N   N    fpo       16

RELOCATIONS #3C
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000        F8  _XGSetPushBufferHeader@16

SECTION HEADER #3D
   XGRPH name
       0 physical address
       0 virtual address
      1F size of raw data
    3DB9 file pointer to raw data (00003DB9 to 00003DD7)
       0 file pointer to relocation table
    3DD8 file pointer to line numbers
       0 number of relocations
       5 number of line numbers
60101020 flags
         Code
         COMDAT; sym= _XGSetFixupHeader@12
         1 byte align
         Execute Read

RAW DATA #3D
  00000000: 8B 44 24 08 8B 4C 24 0C 83 60 08 00 89 48 04 8B  .D$..L$..`...H..
  00000010: 4C 24 04 C7 00 01 00 06 00 89 48 14 C2 0C 00     L$........H....

LINENUMBERS #3D

 Symbol index:      105 Base line number:   462
 Symbol name = _XGSetFixupHeader@12
 00000000(  463)  00000004(  464)  00000008(  466)  0000001C(  467)

SECTION HEADER #3E
.debug$S name
       0 physical address
       0 virtual address
      71 size of raw data
    3DF6 file pointer to raw data (00003DF6 to 00003E66)
    3E67 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #3E
  00000000: 36 00 0B 10 00 00 00 00 00 00 00 00 00 00 00 00  6...............
  00000010: 1F 00 00 00 00 00 00 00 1C 00 00 00 AF 14 00 00  ................
  00000020: 00 00 00 00 00 00 00 10 58 47 53 65 74 46 69 78  ........XGSetFix
  00000030: 75 70 48 65 61 64 65 72 0F 00 06 10 04 00 00 00  upHeader........
  00000040: 75 00 00 00 04 53 69 7A 65 11 00 06 10 08 00 00  u....Size.......
  00000050: 00 47 11 00 00 06 70 46 69 78 75 70 0F 00 06 10  .G....pFixup....
  00000060: 0C 00 00 00 75 00 00 00 04 44 61 74 61 02 00 06  ....u....Data...
  00000070: 00                                               .

RELOCATIONS #3E
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000020  SECREL                     00000000       105  _XGSetFixupHeader@12
 00000024  SECTION                        0000       105  _XGSetFixupHeader@12

SECTION HEADER #3F
.debug$F name
       0 physical address
       0 virtual address
      10 size of raw data
    3E7B file pointer to raw data (00003E7B to 00003E8A)
    3E8B file pointer to relocation table
       0 file pointer to line numbers
       1 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #3F
  00000000: 00 00 00 00 1F 00 00 00 00 00 00 00 03 00 00 00  ................

FPO Data (1)
                                             Use Has  Frame
 RVA      Proc Size   Locals  Regs   Prolog  BP  SEH  Type   Params
 00000000        31        0     0        0   N   N    fpo       12

RELOCATIONS #3F
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000000  DIR32NB                    00000000       105  _XGSetFixupHeader@12

SECTION HEADER #40
.debug$T name
       0 physical address
       0 virtual address
    EFFC size of raw data
    3E95 file pointer to raw data (00003E95 to 00012E90)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42100040 flags
         Initialized Data
         Discardable
         1 byte align
         Read Only

RAW DATA #40
  00000000: 02 00 00 00 1A 00 05 10 00 00 80 00 00 00 00 00  ................
  00000010: 00 00 00 00 00 00 00 00 00 00 05 5F 47 55 49 44  ..........._GUID
  00000020: 0A 00 01 10 00 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00000030: 01 10 00 00 2A 00 00 00 0E 00 03 10 20 00 00 00  ....*....... ...
  00000040: 11 00 00 00 08 00 00 F1 42 00 03 12 05 14 03 00  ........B.......
  00000050: 22 00 00 00 00 00 05 44 61 74 61 31 05 14 03 00  "......Data1....
  00000060: 21 00 00 00 04 00 05 44 61 74 61 32 05 14 03 00  !......Data2....
  00000070: 21 00 00 00 06 00 05 44 61 74 61 33 05 14 03 00  !......Data3....
  00000080: 03 10 00 00 08 00 05 44 61 74 61 34 1A 00 05 10  .......Data4....
  00000090: 04 00 00 00 04 10 00 00 00 00 00 00 00 00 00 00  ................
  000000A0: 10 00 05 5F 47 55 49 44 0A 00 02 10 03 04 00 00  ..._GUID........
  000000B0: 0A 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  000000C0: 00 00 00 00 00 00 00 00 00 00 08 44 69 72 65 63  ...........Direc
  000000D0: 74 33 44 F1 0A 00 02 10 07 10 00 00 0A 00 00 00  t3D.............
  000000E0: 06 00 01 12 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  000000F0: 07 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ................
  00000100: 00 00 00 00 1A 00 09 10 75 00 00 00 07 10 00 00  ........u.......
  00000110: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00000120: 2E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00000130: 00 00 00 00 00 00 17 5F 44 33 44 41 44 41 50 54  ......._D3DADAPT
  00000140: 45 52 5F 49 44 45 4E 54 49 46 49 45 52 38 F2 F1  ER_IDENTIFIER8..
  00000150: 0A 00 02 10 0C 10 00 00 0A 00 00 00 12 00 01 12  ................
  00000160: 03 00 00 00 75 00 00 00 22 00 00 00 0D 10 00 00  ....u...".......
  00000170: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000180: 07 00 03 00 0E 10 00 00 00 00 00 00 0A 00 01 12  ................
  00000190: 01 00 00 00 75 00 00 00 1A 00 09 10 75 00 00 00  ....u.......u...
  000001A0: 07 10 00 00 00 00 00 00 07 00 01 00 10 10 00 00  ................
  000001B0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000001C0: 00 00 00 00 00 00 00 00 00 00 0F 5F 44 33 44 44  ..........._D3DD
  000001D0: 49 53 50 4C 41 59 4D 4F 44 45 F2 F1 0A 00 02 10  ISPLAYMODE......
  000001E0: 12 10 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  000001F0: 75 00 00 00 75 00 00 00 13 10 00 00 1A 00 09 10  u...u...........
  00000200: 12 00 00 00 07 10 00 00 00 00 00 00 07 00 03 00  ................
  00000210: 14 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00000220: 75 00 00 00 13 10 00 00 1A 00 09 10 12 00 00 00  u...............
  00000230: 07 10 00 00 00 00 00 00 07 00 02 00 16 10 00 00  ................
  00000240: 00 00 00 00 6A 00 03 12 03 04 03 00 01 00 0E 44  ....j..........D
  00000250: 33 44 44 45 56 54 59 50 45 5F 48 41 4C F3 F2 F1  3DDEVTYPE_HAL...
  00000260: 03 04 03 00 02 00 0E 44 33 44 44 45 56 54 59 50  .......D3DDEVTYP
  00000270: 45 5F 52 45 46 F3 F2 F1 03 04 03 00 03 00 0D 44  E_REF..........D
  00000280: 33 44 44 45 56 54 59 50 45 5F 53 57 03 04 03 00  3DDEVTYPE_SW....
  00000290: 04 80 FF FF FF 7F 16 44 33 44 44 45 56 54 59 50  .......D3DDEVTYP
  000002A0: 45 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  E_FORCE_DWORD...
  000002B0: 1A 00 07 10 04 00 00 00 74 00 00 00 18 10 00 00  ........t.......
  000002C0: 0B 5F 44 33 44 44 45 56 54 59 50 45 42 06 03 12  ._D3DDEVTYPEB...
  000002D0: 03 04 03 00 00 80 FF 0E 44 33 44 46 4D 54 5F 55  ........D3DFMT_U
  000002E0: 4E 4B 4E 4F 57 4E F2 F1 03 04 03 00 06 00 0F 44  NKNOWN.........D
  000002F0: 33 44 46 4D 54 5F 41 38 52 38 47 38 42 38 F2 F1  3DFMT_A8R8G8B8..
  00000300: 03 04 03 00 07 00 0F 44 33 44 46 4D 54 5F 58 38  .......D3DFMT_X8
  00000310: 52 38 47 38 42 38 F2 F1 03 04 03 00 05 00 0D 44  R8G8B8.........D
  00000320: 33 44 46 4D 54 5F 52 35 47 36 42 35 03 04 03 00  3DFMT_R5G6B5....
  00000330: 27 00 0D 44 33 44 46 4D 54 5F 52 36 47 35 42 35  '..D3DFMT_R6G5B5
  00000340: 03 04 03 00 03 00 0F 44 33 44 46 4D 54 5F 58 31  .......D3DFMT_X1
  00000350: 52 35 47 35 42 35 F2 F1 03 04 03 00 02 00 0F 44  R5G5B5.........D
  00000360: 33 44 46 4D 54 5F 41 31 52 35 47 35 42 35 F2 F1  3DFMT_A1R5G5B5..
  00000370: 03 04 03 00 04 00 0F 44 33 44 46 4D 54 5F 41 34  .......D3DFMT_A4
  00000380: 52 34 47 34 42 34 F2 F1 03 04 03 00 19 00 09 44  R4G4B4.........D
  00000390: 33 44 46 4D 54 5F 41 38 03 04 03 00 3A 00 0F 44  3DFMT_A8....:..D
  000003A0: 33 44 46 4D 54 5F 41 38 42 38 47 38 52 38 F2 F1  3DFMT_A8B8G8R8..
  000003B0: 03 04 03 00 3B 00 0F 44 33 44 46 4D 54 5F 42 38  ....;..D3DFMT_B8
  000003C0: 47 38 52 38 41 38 F2 F1 03 04 03 00 39 00 0F 44  G8R8A8......9..D
  000003D0: 33 44 46 4D 54 5F 52 34 47 34 42 34 41 34 F2 F1  3DFMT_R4G4B4A4..
  000003E0: 03 04 03 00 38 00 0F 44 33 44 46 4D 54 5F 52 35  ....8..D3DFMT_R5
  000003F0: 47 35 42 35 41 31 F2 F1 03 04 03 00 3C 00 0F 44  G5B5A1......<..D
  00000400: 33 44 46 4D 54 5F 52 38 47 38 42 38 41 38 F2 F1  3DFMT_R8G8B8A8..
  00000410: 03 04 03 00 29 00 0B 44 33 44 46 4D 54 5F 52 38  ....)..D3DFMT_R8
  00000420: 42 38 F2 F1 03 04 03 00 28 00 0B 44 33 44 46 4D  B8......(..D3DFM
  00000430: 54 5F 47 38 42 38 F2 F1 03 04 03 00 0B 00 09 44  T_G8B8.........D
  00000440: 33 44 46 4D 54 5F 50 38 03 04 03 00 00 00 09 44  3DFMT_P8.......D
  00000450: 33 44 46 4D 54 5F 4C 38 03 04 03 00 1A 00 0B 44  3DFMT_L8.......D
  00000460: 33 44 46 4D 54 5F 41 38 4C 38 F2 F1 03 04 03 00  3DFMT_A8L8......
  00000470: 01 00 0A 44 33 44 46 4D 54 5F 41 4C 38 F3 F2 F1  ...D3DFMT_AL8...
  00000480: 03 04 03 00 32 00 0A 44 33 44 46 4D 54 5F 4C 31  ....2..D3DFMT_L1
  00000490: 36 F3 F2 F1 03 04 03 00 28 00 0B 44 33 44 46 4D  6.......(..D3DFM
  000004A0: 54 5F 56 38 55 38 F2 F1 03 04 03 00 27 00 0D 44  T_V8U8......'..D
  000004B0: 33 44 46 4D 54 5F 4C 36 56 35 55 35 03 04 03 00  3DFMT_L6V5U5....
  000004C0: 07 00 0F 44 33 44 46 4D 54 5F 58 38 4C 38 56 38  ...D3DFMT_X8L8V8
  000004D0: 55 38 F2 F1 03 04 03 00 3A 00 0F 44 33 44 46 4D  U8......:..D3DFM
  000004E0: 54 5F 51 38 57 38 56 38 55 38 F2 F1 03 04 03 00  T_Q8W8V8U8......
  000004F0: 33 00 0D 44 33 44 46 4D 54 5F 56 31 36 55 31 36  3..D3DFMT_V16U16
  00000500: 03 04 03 00 2C 00 13 44 33 44 46 4D 54 5F 44 31  ....,..D3DFMT_D1
  00000510: 36 5F 4C 4F 43 4B 41 42 4C 45 F2 F1 03 04 03 00  6_LOCKABLE......
  00000520: 2C 00 0A 44 33 44 46 4D 54 5F 44 31 36 F3 F2 F1  ,..D3DFMT_D16...
  00000530: 03 04 03 00 2A 00 0C 44 33 44 46 4D 54 5F 44 32  ....*..D3DFMT_D2
  00000540: 34 53 38 F1 03 04 03 00 2D 00 0A 44 33 44 46 4D  4S8.....-..D3DFM
  00000550: 54 5F 46 31 36 F3 F2 F1 03 04 03 00 2B 00 0C 44  T_F16.......+..D
  00000560: 33 44 46 4D 54 5F 46 32 34 53 38 F1 03 04 03 00  3DFMT_F24S8.....
  00000570: 24 00 0B 44 33 44 46 4D 54 5F 59 55 59 32 F2 F1  $..D3DFMT_YUY2..
  00000580: 03 04 03 00 25 00 0B 44 33 44 46 4D 54 5F 55 59  ....%..D3DFMT_UY
  00000590: 56 59 F2 F1 03 04 03 00 0C 00 0B 44 33 44 46 4D  VY.........D3DFM
  000005A0: 54 5F 44 58 54 31 F2 F1 03 04 03 00 0E 00 0B 44  T_DXT1.........D
  000005B0: 33 44 46 4D 54 5F 44 58 54 32 F2 F1 03 04 03 00  3DFMT_DXT2......
  000005C0: 0E 00 0B 44 33 44 46 4D 54 5F 44 58 54 33 F2 F1  ...D3DFMT_DXT3..
  000005D0: 03 04 03 00 0F 00 0B 44 33 44 46 4D 54 5F 44 58  .......D3DFMT_DX
  000005E0: 54 34 F2 F1 03 04 03 00 0F 00 0B 44 33 44 46 4D  T4.........D3DFM
  000005F0: 54 5F 44 58 54 35 F2 F1 03 04 03 00 10 00 13 44  T_DXT5.........D
  00000600: 33 44 46 4D 54 5F 4C 49 4E 5F 41 31 52 35 47 35  3DFMT_LIN_A1R5G5
  00000610: 42 35 F2 F1 03 04 03 00 1D 00 13 44 33 44 46 4D  B5.........D3DFM
  00000620: 54 5F 4C 49 4E 5F 41 34 52 34 47 34 42 34 F2 F1  T_LIN_A4R4G4B4..
  00000630: 03 04 03 00 1F 00 0D 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000640: 4E 5F 41 38 03 04 03 00 3F 00 13 44 33 44 46 4D  N_A8....?..D3DFM
  00000650: 54 5F 4C 49 4E 5F 41 38 42 38 47 38 52 38 F2 F1  T_LIN_A8B8G8R8..
  00000660: 03 04 03 00 12 00 13 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000670: 4E 5F 41 38 52 38 47 38 42 38 F2 F1 03 04 03 00  N_A8R8G8B8......
  00000680: 40 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 42 38  @..D3DFMT_LIN_B8
  00000690: 47 38 52 38 41 38 F2 F1 03 04 03 00 17 00 0F 44  G8R8A8.........D
  000006A0: 33 44 46 4D 54 5F 4C 49 4E 5F 47 38 42 38 F2 F1  3DFMT_LIN_G8B8..
  000006B0: 03 04 03 00 3E 00 13 44 33 44 46 4D 54 5F 4C 49  ....>..D3DFMT_LI
  000006C0: 4E 5F 52 34 47 34 42 34 41 34 F2 F1 03 04 03 00  N_R4G4B4A4......
  000006D0: 3D 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 52 35  =..D3DFMT_LIN_R5
  000006E0: 47 35 42 35 41 31 F2 F1 03 04 03 00 11 00 11 44  G5B5A1.........D
  000006F0: 33 44 46 4D 54 5F 4C 49 4E 5F 52 35 47 36 42 35  3DFMT_LIN_R5G6B5
  00000700: 03 04 03 00 37 00 11 44 33 44 46 4D 54 5F 4C 49  ....7..D3DFMT_LI
  00000710: 4E 5F 52 36 47 35 42 35 03 04 03 00 16 00 0F 44  N_R6G5B5.......D
  00000720: 33 44 46 4D 54 5F 4C 49 4E 5F 52 38 42 38 F2 F1  3DFMT_LIN_R8B8..
  00000730: 03 04 03 00 41 00 13 44 33 44 46 4D 54 5F 4C 49  ....A..D3DFMT_LI
  00000740: 4E 5F 52 38 47 38 42 38 41 38 F2 F1 03 04 03 00  N_R8G8B8A8......
  00000750: 1C 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 58 31  ...D3DFMT_LIN_X1
  00000760: 52 35 47 35 42 35 F2 F1 03 04 03 00 1E 00 13 44  R5G5B5.........D
  00000770: 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 52 38 47 38  3DFMT_LIN_X8R8G8
  00000780: 42 38 F2 F1 03 04 03 00 20 00 0F 44 33 44 46 4D  B8...... ..D3DFM
  00000790: 54 5F 4C 49 4E 5F 41 38 4C 38 F2 F1 03 04 03 00  T_LIN_A8L8......
  000007A0: 1B 00 0E 44 33 44 46 4D 54 5F 4C 49 4E 5F 41 4C  ...D3DFMT_LIN_AL
  000007B0: 38 F3 F2 F1 03 04 03 00 35 00 0E 44 33 44 46 4D  8.......5..D3DFM
  000007C0: 54 5F 4C 49 4E 5F 4C 31 36 F3 F2 F1 03 04 03 00  T_LIN_L16.......
  000007D0: 13 00 0D 44 33 44 46 4D 54 5F 4C 49 4E 5F 4C 38  ...D3DFMT_LIN_L8
  000007E0: 03 04 03 00 36 00 11 44 33 44 46 4D 54 5F 4C 49  ....6..D3DFMT_LI
  000007F0: 4E 5F 56 31 36 55 31 36 03 04 03 00 17 00 0F 44  N_V16U16.......D
  00000800: 33 44 46 4D 54 5F 4C 49 4E 5F 56 38 55 38 F2 F1  3DFMT_LIN_V8U8..
  00000810: 03 04 03 00 37 00 11 44 33 44 46 4D 54 5F 4C 49  ....7..D3DFMT_LI
  00000820: 4E 5F 4C 36 56 35 55 35 03 04 03 00 1E 00 13 44  N_L6V5U5.......D
  00000830: 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 4C 38 56 38  3DFMT_LIN_X8L8V8
  00000840: 55 38 F2 F1 03 04 03 00 12 00 13 44 33 44 46 4D  U8.........D3DFM
  00000850: 54 5F 4C 49 4E 5F 51 38 57 38 56 38 55 38 F2 F1  T_LIN_Q8W8V8U8..
  00000860: 03 04 03 00 2E 00 10 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000870: 4E 5F 44 32 34 53 38 F1 03 04 03 00 2F 00 10 44  N_D24S8...../..D
  00000880: 33 44 46 4D 54 5F 4C 49 4E 5F 46 32 34 53 38 F1  3DFMT_LIN_F24S8.
  00000890: 03 04 03 00 30 00 0E 44 33 44 46 4D 54 5F 4C 49  ....0..D3DFMT_LI
  000008A0: 4E 5F 44 31 36 F3 F2 F1 03 04 03 00 31 00 0E 44  N_D16.......1..D
  000008B0: 33 44 46 4D 54 5F 4C 49 4E 5F 46 31 36 F3 F2 F1  3DFMT_LIN_F16...
  000008C0: 03 04 03 00 64 00 11 44 33 44 46 4D 54 5F 56 45  ....d..D3DFMT_VE
  000008D0: 52 54 45 58 44 41 54 41 03 04 03 00 65 00 0E 44  RTEXDATA....e..D
  000008E0: 33 44 46 4D 54 5F 49 4E 44 45 58 31 36 F3 F2 F1  3DFMT_INDEX16...
  000008F0: 03 04 03 00 04 80 FF FF FF 7F 12 44 33 44 46 4D  ...........D3DFM
  00000900: 54 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  T_FORCE_DWORD...
  00000910: 1A 00 07 10 45 00 00 00 74 00 00 00 1A 10 00 00  ....E...t.......
  00000920: 0A 5F 44 33 44 46 4F 52 4D 41 54 F1 1A 00 01 12  ._D3DFORMAT.....
  00000930: 05 00 00 00 75 00 00 00 19 10 00 00 1B 10 00 00  ....u...........
  00000940: 1B 10 00 00 74 00 00 00 1A 00 09 10 12 00 00 00  ....t...........
  00000950: 07 10 00 00 00 00 00 00 07 00 05 00 1C 10 00 00  ................
  00000960: 00 00 00 00 3E 01 03 12 03 04 03 00 00 00 0D 44  ....>..........D
  00000970: 33 44 52 54 59 50 45 5F 4E 4F 4E 45 03 04 03 00  3DRTYPE_NONE....
  00000980: 01 00 10 44 33 44 52 54 59 50 45 5F 53 55 52 46  ...D3DRTYPE_SURF
  00000990: 41 43 45 F1 03 04 03 00 02 00 0F 44 33 44 52 54  ACE........D3DRT
  000009A0: 59 50 45 5F 56 4F 4C 55 4D 45 F2 F1 03 04 03 00  YPE_VOLUME......
  000009B0: 03 00 10 44 33 44 52 54 59 50 45 5F 54 45 58 54  ...D3DRTYPE_TEXT
  000009C0: 55 52 45 F1 03 04 03 00 04 00 16 44 33 44 52 54  URE........D3DRT
  000009D0: 59 50 45 5F 56 4F 4C 55 4D 45 54 45 58 54 55 52  YPE_VOLUMETEXTUR
  000009E0: 45 F3 F2 F1 03 04 03 00 05 00 14 44 33 44 52 54  E..........D3DRT
  000009F0: 59 50 45 5F 43 55 42 45 54 45 58 54 55 52 45 F1  YPE_CUBETEXTURE.
  00000A00: 03 04 03 00 06 00 15 44 33 44 52 54 59 50 45 5F  .......D3DRTYPE_
  00000A10: 56 45 52 54 45 58 42 55 46 46 45 52 03 04 03 00  VERTEXBUFFER....
  00000A20: 07 00 14 44 33 44 52 54 59 50 45 5F 49 4E 44 45  ...D3DRTYPE_INDE
  00000A30: 58 42 55 46 46 45 52 F1 03 04 03 00 08 00 13 44  XBUFFER........D
  00000A40: 33 44 52 54 59 50 45 5F 50 55 53 48 42 55 46 46  3DRTYPE_PUSHBUFF
  00000A50: 45 52 F2 F1 03 04 03 00 09 00 10 44 33 44 52 54  ER.........D3DRT
  00000A60: 59 50 45 5F 50 41 4C 45 54 54 45 F1 03 04 03 00  YPE_PALETTE.....
  00000A70: 0A 00 0E 44 33 44 52 54 59 50 45 5F 46 49 58 55  ...D3DRTYPE_FIXU
  00000A80: 50 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 14 44  P..............D
  00000A90: 33 44 52 54 59 50 45 5F 46 4F 52 43 45 5F 44 57  3DRTYPE_FORCE_DW
  00000AA0: 4F 52 44 F1 22 00 07 10 0C 00 00 00 74 00 00 00  ORD.".......t...
  00000AB0: 1E 10 00 00 10 5F 44 33 44 52 45 53 4F 55 52 43  ....._D3DRESOURC
  00000AC0: 45 54 59 50 45 F3 F2 F1 1E 00 01 12 06 00 00 00  ETYPE...........
  00000AD0: 75 00 00 00 19 10 00 00 1B 10 00 00 22 00 00 00  u..........."...
  00000AE0: 1F 10 00 00 1B 10 00 00 1A 00 09 10 12 00 00 00  ................
  00000AF0: 07 10 00 00 00 00 00 00 07 00 06 00 20 10 00 00  ............ ...
  00000B00: 00 00 00 00 1A 00 01 12 05 00 00 00 75 00 00 00  ............u...
  00000B10: 19 10 00 00 1B 10 00 00 74 00 00 00 22 00 00 00  ........t..."...
  00000B20: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000B30: 07 00 05 00 22 10 00 00 00 00 00 00 1A 00 01 12  ...."...........
  00000B40: 05 00 00 00 75 00 00 00 19 10 00 00 1B 10 00 00  ....u...........
  00000B50: 1B 10 00 00 1B 10 00 00 1A 00 09 10 12 00 00 00  ................
  00000B60: 07 10 00 00 00 00 00 00 07 00 05 00 24 10 00 00  ............$...
  00000B70: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00000B80: 00 00 00 00 00 00 00 00 00 00 09 5F 44 33 44 43  ..........._D3DC
  00000B90: 41 50 53 38 0A 00 02 10 26 10 00 00 0A 00 00 00  APS8....&.......
  00000BA0: 12 00 01 12 03 00 00 00 75 00 00 00 19 10 00 00  ........u.......
  00000BB0: 27 10 00 00 1A 00 09 10 12 00 00 00 07 10 00 00  '...............
  00000BC0: 00 00 00 00 07 00 03 00 28 10 00 00 00 00 00 00  ........(.......
  00000BD0: 2E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00000BE0: 00 00 00 00 00 00 17 5F 44 33 44 50 52 45 53 45  ......._D3DPRESE
  00000BF0: 4E 54 5F 50 41 52 41 4D 45 54 45 52 53 5F F2 F1  NT_PARAMETERS_..
  00000C00: 0A 00 02 10 2A 10 00 00 0A 00 00 00 1E 00 05 10  ....*...........
  00000C10: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00000C20: 00 00 09 44 33 44 44 65 76 69 63 65 0A 00 02 10  ...D3DDevice....
  00000C30: 2C 10 00 00 0A 00 00 00 0A 00 02 10 2D 10 00 00  ,...........-...
  00000C40: 0A 00 00 00 1E 00 01 12 06 00 00 00 75 00 00 00  ............u...
  00000C50: 19 10 00 00 03 04 00 00 22 00 00 00 2B 10 00 00  ........"...+...
  00000C60: 2E 10 00 00 1A 00 09 10 12 00 00 00 07 10 00 00  ................
  00000C70: 00 00 00 00 07 00 06 00 2F 10 00 00 00 00 00 00  ......../.......
  00000C80: 0E 00 01 12 02 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00000C90: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000CA0: 07 00 02 00 31 10 00 00 00 00 00 00 76 01 03 12  ....1.......v...
  00000CB0: 0B 14 0B 00 0A 10 00 00 06 41 64 64 52 65 66 F1  .........AddRef.
  00000CC0: 0B 14 0B 00 0A 10 00 00 07 52 65 6C 65 61 73 65  .........Release
  00000CD0: 0B 14 0B 00 0B 10 00 00 0F 47 65 74 41 64 61 70  .........GetAdap
  00000CE0: 74 65 72 43 6F 75 6E 74 0B 14 0B 00 0F 10 00 00  terCount........
  00000CF0: 14 47 65 74 41 64 61 70 74 65 72 49 64 65 6E 74  .GetAdapterIdent
  00000D00: 69 66 69 65 72 F3 F2 F1 0B 14 0B 00 11 10 00 00  ifier...........
  00000D10: 13 47 65 74 41 64 61 70 74 65 72 4D 6F 64 65 43  .GetAdapterModeC
  00000D20: 6F 75 6E 74 0B 14 0B 00 15 10 00 00 10 45 6E 75  ount.........Enu
  00000D30: 6D 41 64 61 70 74 65 72 4D 6F 64 65 73 F3 F2 F1  mAdapterModes...
  00000D40: 0B 14 0B 00 17 10 00 00 15 47 65 74 41 64 61 70  .........GetAdap
  00000D50: 74 65 72 44 69 73 70 6C 61 79 4D 6F 64 65 F2 F1  terDisplayMode..
  00000D60: 0B 14 0B 00 1D 10 00 00 0F 43 68 65 63 6B 44 65  .........CheckDe
  00000D70: 76 69 63 65 54 79 70 65 0B 14 0B 00 21 10 00 00  viceType....!...
  00000D80: 11 43 68 65 63 6B 44 65 76 69 63 65 46 6F 72 6D  .CheckDeviceForm
  00000D90: 61 74 F2 F1 0B 14 0B 00 23 10 00 00 1A 43 68 65  at......#....Che
  00000DA0: 63 6B 44 65 76 69 63 65 4D 75 6C 74 69 53 61 6D  ckDeviceMultiSam
  00000DB0: 70 6C 65 54 79 70 65 F1 0B 14 0B 00 25 10 00 00  pleType.....%...
  00000DC0: 16 43 68 65 63 6B 44 65 70 74 68 53 74 65 6E 63  .CheckDepthStenc
  00000DD0: 69 6C 4D 61 74 63 68 F1 0B 14 0B 00 29 10 00 00  ilMatch.....)...
  00000DE0: 0D 47 65 74 44 65 76 69 63 65 43 61 70 73 F2 F1  .GetDeviceCaps..
  00000DF0: 0B 14 0B 00 30 10 00 00 0C 43 72 65 61 74 65 44  ....0....CreateD
  00000E00: 65 76 69 63 65 F3 F2 F1 0B 14 0B 00 32 10 00 00  evice.......2...
  00000E10: 11 53 65 74 50 75 73 68 42 75 66 66 65 72 53 69  .SetPushBufferSi
  00000E20: 7A 65 F2 F1 1E 00 05 10 0E 00 00 00 33 10 00 00  ze..........3...
  00000E30: 00 00 00 00 00 00 00 00 01 00 08 44 69 72 65 63  ...........Direc
  00000E40: 74 33 44 F1 0E 00 03 10 70 00 00 00 11 00 00 00  t3D.....p.......
  00000E50: 00 02 00 F1 1E 00 06 10 00 00 80 00 00 00 00 00  ................
  00000E60: 00 00 0E 5F 4C 41 52 47 45 5F 49 4E 54 45 47 45  ..._LARGE_INTEGE
  00000E70: 52 F3 F2 F1 C6 00 03 12 05 14 03 00 35 10 00 00  R...........5...
  00000E80: 00 00 06 44 72 69 76 65 72 F3 F2 F1 05 14 03 00  ...Driver.......
  00000E90: 35 10 00 00 00 02 0B 44 65 73 63 72 69 70 74 69  5......Descripti
  00000EA0: 6F 6E F2 F1 05 14 03 00 36 10 00 00 00 04 0D 44  on......6......D
  00000EB0: 72 69 76 65 72 56 65 72 73 69 6F 6E 05 14 03 00  riverVersion....
  00000EC0: 22 00 00 00 08 04 08 56 65 6E 64 6F 72 49 64 F1  "......VendorId.
  00000ED0: 05 14 03 00 22 00 00 00 0C 04 08 44 65 76 69 63  ...."......Devic
  00000EE0: 65 49 64 F1 05 14 03 00 22 00 00 00 10 04 08 53  eId....."......S
  00000EF0: 75 62 53 79 73 49 64 F1 05 14 03 00 22 00 00 00  ubSysId....."...
  00000F00: 14 04 08 52 65 76 69 73 69 6F 6E F1 05 14 03 00  ...Revision.....
  00000F10: 00 10 00 00 18 04 10 44 65 76 69 63 65 49 64 65  .......DeviceIde
  00000F20: 6E 74 69 66 69 65 72 F1 05 14 03 00 22 00 00 00  ntifier....."...
  00000F30: 28 04 09 57 48 51 4C 4C 65 76 65 6C 2E 00 05 10  (..WHQLLevel....
  00000F40: 09 00 00 00 37 10 00 00 00 00 00 00 00 00 00 00  ....7...........
  00000F50: 2C 04 17 5F 44 33 44 41 44 41 50 54 45 52 5F 49  ,.._D3DADAPTER_I
  00000F60: 44 45 4E 54 49 46 49 45 52 38 F2 F1 62 00 03 12  DENTIFIER8..b...
  00000F70: 05 14 03 00 75 00 00 00 00 00 05 57 69 64 74 68  ....u......Width
  00000F80: 05 14 03 00 75 00 00 00 04 00 06 48 65 69 67 68  ....u......Heigh
  00000F90: 74 F3 F2 F1 05 14 03 00 75 00 00 00 08 00 0B 52  t.......u......R
  00000FA0: 65 66 72 65 73 68 52 61 74 65 F2 F1 05 14 03 00  efreshRate......
  00000FB0: 22 00 00 00 0C 00 05 46 6C 61 67 73 05 14 03 00  "......Flags....
  00000FC0: 1B 10 00 00 10 00 06 46 6F 72 6D 61 74 F3 F2 F1  .......Format...
  00000FD0: 26 00 05 10 05 00 00 00 39 10 00 00 00 00 00 00  &.......9.......
  00000FE0: 00 00 00 00 14 00 0F 5F 44 33 44 44 49 53 50 4C  ......._D3DDISPL
  00000FF0: 41 59 4D 4F 44 45 F2 F1 92 05 03 12 05 14 03 00  AYMODE..........
  00001000: 19 10 00 00 00 00 0A 44 65 76 69 63 65 54 79 70  .......DeviceTyp
  00001010: 65 F3 F2 F1 05 14 03 00 75 00 00 00 04 00 0E 41  e.......u......A
  00001020: 64 61 70 74 65 72 4F 72 64 69 6E 61 6C F3 F2 F1  dapterOrdinal...
  00001030: 05 14 03 00 22 00 00 00 08 00 04 43 61 70 73 F1  ...."......Caps.
  00001040: 05 14 03 00 22 00 00 00 0C 00 05 43 61 70 73 32  ...."......Caps2
  00001050: 05 14 03 00 22 00 00 00 10 00 05 43 61 70 73 33  ...."......Caps3
  00001060: 05 14 03 00 22 00 00 00 14 00 15 50 72 65 73 65  ...."......Prese
  00001070: 6E 74 61 74 69 6F 6E 49 6E 74 65 72 76 61 6C 73  ntationIntervals
  00001080: 05 14 03 00 22 00 00 00 18 00 0A 43 75 72 73 6F  ...."......Curso
  00001090: 72 43 61 70 73 F3 F2 F1 05 14 03 00 22 00 00 00  rCaps......."...
  000010A0: 1C 00 07 44 65 76 43 61 70 73 F2 F1 05 14 03 00  ...DevCaps......
  000010B0: 22 00 00 00 20 00 11 50 72 69 6D 69 74 69 76 65  "... ..Primitive
  000010C0: 4D 69 73 63 43 61 70 73 05 14 03 00 22 00 00 00  MiscCaps...."...
  000010D0: 24 00 0A 52 61 73 74 65 72 43 61 70 73 F3 F2 F1  $..RasterCaps...
  000010E0: 05 14 03 00 22 00 00 00 28 00 08 5A 43 6D 70 43  ...."...(..ZCmpC
  000010F0: 61 70 73 F1 05 14 03 00 22 00 00 00 2C 00 0C 53  aps....."...,..S
  00001100: 72 63 42 6C 65 6E 64 43 61 70 73 F1 05 14 03 00  rcBlendCaps.....
  00001110: 22 00 00 00 30 00 0D 44 65 73 74 42 6C 65 6E 64  "...0..DestBlend
  00001120: 43 61 70 73 05 14 03 00 22 00 00 00 34 00 0C 41  Caps...."...4..A
  00001130: 6C 70 68 61 43 6D 70 43 61 70 73 F1 05 14 03 00  lphaCmpCaps.....
  00001140: 22 00 00 00 38 00 09 53 68 61 64 65 43 61 70 73  "...8..ShadeCaps
  00001150: 05 14 03 00 22 00 00 00 3C 00 0B 54 65 78 74 75  ...."...<..Textu
  00001160: 72 65 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  reCaps......"...
  00001170: 40 00 11 54 65 78 74 75 72 65 46 69 6C 74 65 72  @..TextureFilter
  00001180: 43 61 70 73 05 14 03 00 22 00 00 00 44 00 15 43  Caps...."...D..C
  00001190: 75 62 65 54 65 78 74 75 72 65 46 69 6C 74 65 72  ubeTextureFilter
  000011A0: 43 61 70 73 05 14 03 00 22 00 00 00 48 00 17 56  Caps...."...H..V
  000011B0: 6F 6C 75 6D 65 54 65 78 74 75 72 65 46 69 6C 74  olumeTextureFilt
  000011C0: 65 72 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  erCaps......"...
  000011D0: 4C 00 12 54 65 78 74 75 72 65 41 64 64 72 65 73  L..TextureAddres
  000011E0: 73 43 61 70 73 F3 F2 F1 05 14 03 00 22 00 00 00  sCaps......."...
  000011F0: 50 00 18 56 6F 6C 75 6D 65 54 65 78 74 75 72 65  P..VolumeTexture
  00001200: 41 64 64 72 65 73 73 43 61 70 73 F1 05 14 03 00  AddressCaps.....
  00001210: 22 00 00 00 54 00 08 4C 69 6E 65 43 61 70 73 F1  "...T..LineCaps.
  00001220: 05 14 03 00 22 00 00 00 58 00 0F 4D 61 78 54 65  ...."...X..MaxTe
  00001230: 78 74 75 72 65 57 69 64 74 68 F2 F1 05 14 03 00  xtureWidth......
  00001240: 22 00 00 00 5C 00 10 4D 61 78 54 65 78 74 75 72  "...\..MaxTextur
  00001250: 65 48 65 69 67 68 74 F1 05 14 03 00 22 00 00 00  eHeight....."...
  00001260: 60 00 0F 4D 61 78 56 6F 6C 75 6D 65 45 78 74 65  `..MaxVolumeExte
  00001270: 6E 74 F2 F1 05 14 03 00 22 00 00 00 64 00 10 4D  nt......"...d..M
  00001280: 61 78 54 65 78 74 75 72 65 52 65 70 65 61 74 F1  axTextureRepeat.
  00001290: 05 14 03 00 22 00 00 00 68 00 15 4D 61 78 54 65  ...."...h..MaxTe
  000012A0: 78 74 75 72 65 41 73 70 65 63 74 52 61 74 69 6F  xtureAspectRatio
  000012B0: 05 14 03 00 22 00 00 00 6C 00 0D 4D 61 78 41 6E  ...."...l..MaxAn
  000012C0: 69 73 6F 74 72 6F 70 79 05 14 03 00 40 00 00 00  isotropy....@...
  000012D0: 70 00 0A 4D 61 78 56 65 72 74 65 78 57 F3 F2 F1  p..MaxVertexW...
  000012E0: 05 14 03 00 40 00 00 00 74 00 0D 47 75 61 72 64  ....@...t..Guard
  000012F0: 42 61 6E 64 4C 65 66 74 05 14 03 00 40 00 00 00  BandLeft....@...
  00001300: 78 00 0C 47 75 61 72 64 42 61 6E 64 54 6F 70 F1  x..GuardBandTop.
  00001310: 05 14 03 00 40 00 00 00 7C 00 0E 47 75 61 72 64  ....@...|..Guard
  00001320: 42 61 6E 64 52 69 67 68 74 F3 F2 F1 05 14 03 00  BandRight.......
  00001330: 40 00 00 00 80 00 0F 47 75 61 72 64 42 61 6E 64  @......GuardBand
  00001340: 42 6F 74 74 6F 6D F2 F1 05 14 03 00 40 00 00 00  Bottom......@...
  00001350: 84 00 0D 45 78 74 65 6E 74 73 41 64 6A 75 73 74  ...ExtentsAdjust
  00001360: 05 14 03 00 22 00 00 00 88 00 0B 53 74 65 6E 63  ...."......Stenc
  00001370: 69 6C 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  ilCaps......"...
  00001380: 8C 00 07 46 56 46 43 61 70 73 F2 F1 05 14 03 00  ...FVFCaps......
  00001390: 22 00 00 00 90 00 0D 54 65 78 74 75 72 65 4F 70  "......TextureOp
  000013A0: 43 61 70 73 05 14 03 00 22 00 00 00 94 00 15 4D  Caps...."......M
  000013B0: 61 78 54 65 78 74 75 72 65 42 6C 65 6E 64 53 74  axTextureBlendSt
  000013C0: 61 67 65 73 05 14 03 00 22 00 00 00 98 00 17 4D  ages...."......M
  000013D0: 61 78 53 69 6D 75 6C 74 61 6E 65 6F 75 73 54 65  axSimultaneousTe
  000013E0: 78 74 75 72 65 73 F2 F1 05 14 03 00 22 00 00 00  xtures......"...
  000013F0: 9C 00 14 56 65 72 74 65 78 50 72 6F 63 65 73 73  ...VertexProcess
  00001400: 69 6E 67 43 61 70 73 F1 05 14 03 00 22 00 00 00  ingCaps....."...
  00001410: A0 00 0F 4D 61 78 41 63 74 69 76 65 4C 69 67 68  ...MaxActiveLigh
  00001420: 74 73 F2 F1 05 14 03 00 22 00 00 00 A4 00 11 4D  ts......"......M
  00001430: 61 78 55 73 65 72 43 6C 69 70 50 6C 61 6E 65 73  axUserClipPlanes
  00001440: 05 14 03 00 22 00 00 00 A8 00 16 4D 61 78 56 65  ...."......MaxVe
  00001450: 72 74 65 78 42 6C 65 6E 64 4D 61 74 72 69 63 65  rtexBlendMatrice
  00001460: 73 F3 F2 F1 05 14 03 00 22 00 00 00 AC 00 19 4D  s......."......M
  00001470: 61 78 56 65 72 74 65 78 42 6C 65 6E 64 4D 61 74  axVertexBlendMat
  00001480: 72 69 78 49 6E 64 65 78 05 14 03 00 40 00 00 00  rixIndex....@...
  00001490: B0 00 0C 4D 61 78 50 6F 69 6E 74 53 69 7A 65 F1  ...MaxPointSize.
  000014A0: 05 14 03 00 22 00 00 00 B4 00 11 4D 61 78 50 72  ...."......MaxPr
  000014B0: 69 6D 69 74 69 76 65 43 6F 75 6E 74 05 14 03 00  imitiveCount....
  000014C0: 22 00 00 00 B8 00 0E 4D 61 78 56 65 72 74 65 78  "......MaxVertex
  000014D0: 49 6E 64 65 78 F3 F2 F1 05 14 03 00 22 00 00 00  Index......."...
  000014E0: BC 00 0A 4D 61 78 53 74 72 65 61 6D 73 F3 F2 F1  ...MaxStreams...
  000014F0: 05 14 03 00 22 00 00 00 C0 00 0F 4D 61 78 53 74  ...."......MaxSt
  00001500: 72 65 61 6D 53 74 72 69 64 65 F2 F1 05 14 03 00  reamStride......
  00001510: 22 00 00 00 C4 00 13 56 65 72 74 65 78 53 68 61  "......VertexSha
  00001520: 64 65 72 56 65 72 73 69 6F 6E F2 F1 05 14 03 00  derVersion......
  00001530: 22 00 00 00 C8 00 14 4D 61 78 56 65 72 74 65 78  "......MaxVertex
  00001540: 53 68 61 64 65 72 43 6F 6E 73 74 F1 05 14 03 00  ShaderConst.....
  00001550: 22 00 00 00 CC 00 12 50 69 78 65 6C 53 68 61 64  "......PixelShad
  00001560: 65 72 56 65 72 73 69 6F 6E F3 F2 F1 05 14 03 00  erVersion.......
  00001570: 40 00 00 00 D0 00 13 4D 61 78 50 69 78 65 6C 53  @......MaxPixelS
  00001580: 68 61 64 65 72 56 61 6C 75 65 F2 F1 1E 00 05 10  haderValue......
  00001590: 35 00 00 00 3B 10 00 00 00 00 00 00 00 00 00 00  5...;...........
  000015A0: D4 00 09 5F 44 33 44 43 41 50 53 38 1A 00 09 10  ..._D3DCAPS8....
  000015B0: 22 00 00 00 2C 10 00 00 00 00 00 00 07 00 00 00  "...,...........
  000015C0: 09 10 00 00 00 00 00 00 0A 00 02 10 08 10 00 00  ................
  000015D0: 0A 00 00 00 0A 00 01 12 01 00 00 00 3E 10 00 00  ............>...
  000015E0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000015F0: 07 00 01 00 3F 10 00 00 00 00 00 00 0A 00 01 12  ....?...........
  00001600: 01 00 00 00 27 10 00 00 1A 00 09 10 12 00 00 00  ....'...........
  00001610: 2C 10 00 00 00 00 00 00 07 00 01 00 41 10 00 00  ,...........A...
  00001620: 00 00 00 00 0A 00 01 12 01 00 00 00 13 10 00 00  ................
  00001630: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001640: 07 00 01 00 43 10 00 00 00 00 00 00 36 00 05 10  ....C.......6...
  00001650: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001660: 00 00 1E 5F 44 33 44 44 45 56 49 43 45 5F 43 52  ..._D3DDEVICE_CR
  00001670: 45 41 54 49 4F 4E 5F 50 41 52 41 4D 45 54 45 52  EATION_PARAMETER
  00001680: 53 F3 F2 F1 0A 00 02 10 45 10 00 00 0A 00 00 00  S.......E.......
  00001690: 0A 00 01 12 01 00 00 00 46 10 00 00 1A 00 09 10  ........F.......
  000016A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  000016B0: 47 10 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  G...............
  000016C0: 2B 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  +...........,...
  000016D0: 00 00 00 00 07 00 01 00 49 10 00 00 00 00 00 00  ........I.......
  000016E0: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  000016F0: 00 00 00 00 00 00 07 74 61 67 52 45 43 54 F2 F1  .......tagRECT..
  00001700: 0A 00 01 10 4B 10 00 00 01 00 F2 F1 0A 00 02 10  ....K...........
  00001710: 4C 10 00 00 0A 00 00 00 16 00 01 12 04 00 00 00  L...............
  00001720: 4D 10 00 00 4D 10 00 00 03 04 00 00 03 04 00 00  M...M...........
  00001730: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001740: 07 00 04 00 4E 10 00 00 00 00 00 00 22 00 05 10  ....N......."...
  00001750: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001760: 00 00 0A 44 33 44 53 75 72 66 61 63 65 F3 F2 F1  ...D3DSurface...
  00001770: 0A 00 02 10 50 10 00 00 0A 00 00 00 0A 00 02 10  ....P...........
  00001780: 51 10 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  Q...............
  00001790: 74 00 00 00 22 00 00 00 52 10 00 00 1A 00 09 10  t..."...R.......
  000017A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000017B0: 53 10 00 00 00 00 00 00 26 00 05 10 00 00 80 00  S.......&.......
  000017C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5F  ..............._
  000017D0: 44 33 44 52 41 53 54 45 52 5F 53 54 41 54 55 53  D3DRASTER_STATUS
  000017E0: 0A 00 02 10 55 10 00 00 0A 00 00 00 0A 00 01 12  ....U...........
  000017F0: 01 00 00 00 56 10 00 00 1A 00 09 10 12 00 00 00  ....V...........
  00001800: 2C 10 00 00 00 00 00 00 07 00 01 00 57 10 00 00  ,...........W...
  00001810: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  00001820: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 33 44 47  ..........._D3DG
  00001830: 41 4D 4D 41 52 41 4D 50 0A 00 01 10 59 10 00 00  AMMARAMP....Y...
  00001840: 01 00 F2 F1 0A 00 02 10 5A 10 00 00 0A 00 00 00  ........Z.......
  00001850: 0E 00 01 12 02 00 00 00 22 00 00 00 5B 10 00 00  ........"...[...
  00001860: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001870: 07 00 02 00 5C 10 00 00 00 00 00 00 0A 00 02 10  ....\...........
  00001880: 59 10 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  Y...............
  00001890: 5E 10 00 00 1A 00 09 10 03 00 00 00 2C 10 00 00  ^...........,...
  000018A0: 00 00 00 00 07 00 01 00 5F 10 00 00 00 00 00 00  ........_.......
  000018B0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  000018C0: 00 00 00 00 00 00 0A 44 33 44 54 65 78 74 75 72  .......D3DTextur
  000018D0: 65 F3 F2 F1 0A 00 02 10 61 10 00 00 0A 00 00 00  e.......a.......
  000018E0: 0A 00 02 10 62 10 00 00 0A 00 00 00 22 00 01 12  ....b......."...
  000018F0: 07 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  ....u...u...u...
  00001900: 22 00 00 00 1B 10 00 00 22 00 00 00 63 10 00 00  "......."...c...
  00001910: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001920: 07 00 07 00 64 10 00 00 00 00 00 00 26 00 05 10  ....d.......&...
  00001930: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001940: 00 00 10 44 33 44 56 6F 6C 75 6D 65 54 65 78 74  ...D3DVolumeText
  00001950: 75 72 65 F1 0A 00 02 10 66 10 00 00 0A 00 00 00  ure.....f.......
  00001960: 0A 00 02 10 67 10 00 00 0A 00 00 00 26 00 01 12  ....g.......&...
  00001970: 08 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  ....u...u...u...
  00001980: 75 00 00 00 22 00 00 00 1B 10 00 00 22 00 00 00  u..."......."...
  00001990: 68 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  h...........,...
  000019A0: 00 00 00 00 07 00 08 00 69 10 00 00 00 00 00 00  ........i.......
  000019B0: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  000019C0: 00 00 00 00 00 00 0E 44 33 44 43 75 62 65 54 65  .......D3DCubeTe
  000019D0: 78 74 75 72 65 F3 F2 F1 0A 00 02 10 6B 10 00 00  xture.......k...
  000019E0: 0A 00 00 00 0A 00 02 10 6C 10 00 00 0A 00 00 00  ........l.......
  000019F0: 1E 00 01 12 06 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  00001A00: 22 00 00 00 1B 10 00 00 22 00 00 00 6D 10 00 00  "......."...m...
  00001A10: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001A20: 07 00 06 00 6E 10 00 00 00 00 00 00 26 00 05 10  ....n.......&...
  00001A30: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001A40: 00 00 0F 44 33 44 56 65 72 74 65 78 42 75 66 66  ...D3DVertexBuff
  00001A50: 65 72 F2 F1 0A 00 02 10 70 10 00 00 0A 00 00 00  er......p.......
  00001A60: 0A 00 02 10 71 10 00 00 0A 00 00 00 1A 00 01 12  ....q...........
  00001A70: 05 00 00 00 75 00 00 00 22 00 00 00 22 00 00 00  ....u..."..."...
  00001A80: 22 00 00 00 72 10 00 00 1A 00 09 10 12 00 00 00  "...r...........
  00001A90: 2C 10 00 00 00 00 00 00 07 00 05 00 73 10 00 00  ,...........s...
  00001AA0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00001AB0: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 49 6E  ...........D3DIn
  00001AC0: 64 65 78 42 75 66 66 65 72 F3 F2 F1 0A 00 02 10  dexBuffer.......
  00001AD0: 75 10 00 00 0A 00 00 00 0A 00 02 10 76 10 00 00  u...........v...
  00001AE0: 0A 00 00 00 1A 00 01 12 05 00 00 00 75 00 00 00  ............u...
  00001AF0: 22 00 00 00 1B 10 00 00 22 00 00 00 77 10 00 00  "......."...w...
  00001B00: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001B10: 07 00 05 00 78 10 00 00 00 00 00 00 1E 00 01 12  ....x...........
  00001B20: 06 00 00 00 75 00 00 00 75 00 00 00 1B 10 00 00  ....u...u.......
  00001B30: 22 00 00 00 74 00 00 00 52 10 00 00 1A 00 09 10  "...t...R.......
  00001B40: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 06 00  ....,...........
  00001B50: 7A 10 00 00 00 00 00 00 1A 00 01 12 05 00 00 00  z...............
  00001B60: 75 00 00 00 75 00 00 00 1B 10 00 00 22 00 00 00  u...u......."...
  00001B70: 52 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  R...........,...
  00001B80: 00 00 00 00 07 00 05 00 7C 10 00 00 00 00 00 00  ........|.......
  00001B90: 16 00 01 12 04 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  00001BA0: 1B 10 00 00 52 10 00 00 1A 00 09 10 12 00 00 00  ....R...........
  00001BB0: 2C 10 00 00 00 00 00 00 07 00 04 00 7E 10 00 00  ,...........~...
  00001BC0: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00001BD0: 00 00 00 00 00 00 00 00 00 00 08 74 61 67 50 4F  ...........tagPO
  00001BE0: 49 4E 54 F1 0A 00 01 10 80 10 00 00 01 00 F2 F1  INT.............
  00001BF0: 0A 00 02 10 81 10 00 00 0A 00 00 00 1A 00 01 12  ................
  00001C00: 05 00 00 00 51 10 00 00 4D 10 00 00 75 00 00 00  ....Q...M...u...
  00001C10: 51 10 00 00 82 10 00 00 1A 00 09 10 12 00 00 00  Q...............
  00001C20: 2C 10 00 00 00 00 00 00 07 00 05 00 83 10 00 00  ,...............
  00001C30: 00 00 00 00 0E 00 01 12 02 00 00 00 51 10 00 00  ............Q...
  00001C40: 51 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  Q...........,...
  00001C50: 00 00 00 00 07 00 02 00 85 10 00 00 00 00 00 00  ................
  00001C60: 0A 00 01 12 01 00 00 00 52 10 00 00 1A 00 09 10  ........R.......
  00001C70: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00001C80: 87 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  00001C90: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  00001CA0: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00001CB0: 00 00 00 00 00 00 00 00 00 00 08 5F 44 33 44 52  ..........._D3DR
  00001CC0: 45 43 54 F1 0A 00 01 10 8A 10 00 00 01 00 F2 F1  ECT.............
  00001CD0: 0A 00 02 10 8B 10 00 00 0A 00 00 00 1E 00 01 12  ................
  00001CE0: 06 00 00 00 22 00 00 00 8C 10 00 00 22 00 00 00  ...."......."...
  00001CF0: 22 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  "...@...".......
  00001D00: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 06 00  ....,...........
  00001D10: 8D 10 00 00 00 00 00 00 0A 01 03 12 03 04 03 00  ................
  00001D20: 00 00 0A 44 33 44 54 53 5F 56 49 45 57 F3 F2 F1  ...D3DTS_VIEW...
  00001D30: 03 04 03 00 01 00 10 44 33 44 54 53 5F 50 52 4F  .......D3DTS_PRO
  00001D40: 4A 45 43 54 49 4F 4E F1 03 04 03 00 02 00 0E 44  JECTION........D
  00001D50: 33 44 54 53 5F 54 45 58 54 55 52 45 30 F3 F2 F1  3DTS_TEXTURE0...
  00001D60: 03 04 03 00 03 00 0E 44 33 44 54 53 5F 54 45 58  .......D3DTS_TEX
  00001D70: 54 55 52 45 31 F3 F2 F1 03 04 03 00 04 00 0E 44  TURE1..........D
  00001D80: 33 44 54 53 5F 54 45 58 54 55 52 45 32 F3 F2 F1  3DTS_TEXTURE2...
  00001D90: 03 04 03 00 05 00 0E 44 33 44 54 53 5F 54 45 58  .......D3DTS_TEX
  00001DA0: 54 55 52 45 33 F3 F2 F1 03 04 03 00 06 00 0B 44  TURE3..........D
  00001DB0: 33 44 54 53 5F 57 4F 52 4C 44 F2 F1 03 04 03 00  3DTS_WORLD......
  00001DC0: 07 00 0C 44 33 44 54 53 5F 57 4F 52 4C 44 31 F1  ...D3DTS_WORLD1.
  00001DD0: 03 04 03 00 08 00 0C 44 33 44 54 53 5F 57 4F 52  .......D3DTS_WOR
  00001DE0: 4C 44 32 F1 03 04 03 00 09 00 0C 44 33 44 54 53  LD2........D3DTS
  00001DF0: 5F 57 4F 52 4C 44 33 F1 03 04 03 00 0A 00 09 44  _WORLD3........D
  00001E00: 33 44 54 53 5F 4D 41 58 03 04 03 00 04 80 FF FF  3DTS_MAX........
  00001E10: FF 7F 11 44 33 44 54 53 5F 46 4F 52 43 45 5F 44  ...D3DTS_FORCE_D
  00001E20: 57 4F 52 44 26 00 07 10 0C 00 00 00 74 00 00 00  WORD&.......t...
  00001E30: 8F 10 00 00 16 5F 44 33 44 54 52 41 4E 53 46 4F  ....._D3DTRANSFO
  00001E40: 52 4D 53 54 41 54 45 54 59 50 45 F1 22 00 05 10  RMSTATETYPE."...
  00001E50: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001E60: 00 00 0A 5F 44 33 44 4D 41 54 52 49 58 F3 F2 F1  ..._D3DMATRIX...
  00001E70: 0A 00 01 10 91 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00001E80: 92 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00001E90: 90 10 00 00 93 10 00 00 1A 00 09 10 12 00 00 00  ................
  00001EA0: 2C 10 00 00 00 00 00 00 07 00 02 00 94 10 00 00  ,...............
  00001EB0: 00 00 00 00 0A 00 02 10 91 10 00 00 0A 00 00 00  ................
  00001EC0: 0E 00 01 12 02 00 00 00 90 10 00 00 96 10 00 00  ................
  00001ED0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001EE0: 07 00 02 00 97 10 00 00 00 00 00 00 22 00 05 10  ............"...
  00001EF0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001F00: 00 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38  ..._D3DVIEWPORT8
  00001F10: 0A 00 01 10 99 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00001F20: 9A 10 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00001F30: 9B 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00001F40: 00 00 00 00 07 00 01 00 9C 10 00 00 00 00 00 00  ................
  00001F50: 0A 00 02 10 99 10 00 00 0A 00 00 00 0A 00 01 12  ................
  00001F60: 01 00 00 00 9E 10 00 00 1A 00 09 10 12 00 00 00  ................
  00001F70: 2C 10 00 00 00 00 00 00 07 00 01 00 9F 10 00 00  ,...............
  00001F80: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  00001F90: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 33 44 4D  ..........._D3DM
  00001FA0: 41 54 45 52 49 41 4C 38 0A 00 01 10 A1 10 00 00  ATERIAL8........
  00001FB0: 01 00 F2 F1 0A 00 02 10 A2 10 00 00 0A 00 00 00  ................
  00001FC0: 0A 00 01 12 01 00 00 00 A3 10 00 00 1A 00 09 10  ................
  00001FD0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00001FE0: A4 10 00 00 00 00 00 00 0A 00 02 10 A1 10 00 00  ................
  00001FF0: 0A 00 00 00 0A 00 01 12 01 00 00 00 A6 10 00 00  ................
  00002000: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00002010: 07 00 01 00 A7 10 00 00 00 00 00 00 22 00 05 10  ............"...
  00002020: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00002030: 00 00 0A 5F 44 33 44 4C 49 47 48 54 38 F3 F2 F1  ..._D3DLIGHT8...
  00002040: 0A 00 01 10 A9 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00002050: AA 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00002060: 22 00 00 00 AB 10 00 00 1A 00 09 10 12 00 00 00  "...............
  00002070: 2C 10 00 00 00 00 00 00 07 00 02 00 AC 10 00 00  ,...............
  00002080: 00 00 00 00 0A 00 02 10 A9 10 00 00 0A 00 00 00  ................
  00002090: 0E 00 01 12 02 00 00 00 22 00 00 00 AE 10 00 00  ........".......
  000020A0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000020B0: 07 00 02 00 AF 10 00 00 00 00 00 00 0E 00 01 12  ................
  000020C0: 02 00 00 00 22 00 00 00 74 00 00 00 1A 00 09 10  ...."...t.......
  000020D0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  000020E0: B1 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  000020F0: 22 00 00 00 74 04 00 00 1A 00 09 10 12 00 00 00  "...t...........
  00002100: 2C 10 00 00 00 00 00 00 07 00 02 00 B3 10 00 00  ,...............
  00002110: 00 00 00 00 7E 10 03 12 03 04 03 00 00 00 0C 44  ....~..........D
  00002120: 33 44 52 53 5F 50 53 5F 4D 49 4E F1 03 04 03 00  3DRS_PS_MIN.....
  00002130: 00 00 14 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  00002140: 49 4E 50 55 54 53 30 F1 03 04 03 00 01 00 14 44  INPUTS0........D
  00002150: 33 44 52 53 5F 50 53 41 4C 50 48 41 49 4E 50 55  3DRS_PSALPHAINPU
  00002160: 54 53 31 F1 03 04 03 00 02 00 14 44 33 44 52 53  TS1........D3DRS
  00002170: 5F 50 53 41 4C 50 48 41 49 4E 50 55 54 53 32 F1  _PSALPHAINPUTS2.
  00002180: 03 04 03 00 03 00 14 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002190: 4C 50 48 41 49 4E 50 55 54 53 33 F1 03 04 03 00  LPHAINPUTS3.....
  000021A0: 04 00 14 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  000021B0: 49 4E 50 55 54 53 34 F1 03 04 03 00 05 00 14 44  INPUTS4........D
  000021C0: 33 44 52 53 5F 50 53 41 4C 50 48 41 49 4E 50 55  3DRS_PSALPHAINPU
  000021D0: 54 53 35 F1 03 04 03 00 06 00 14 44 33 44 52 53  TS5........D3DRS
  000021E0: 5F 50 53 41 4C 50 48 41 49 4E 50 55 54 53 36 F1  _PSALPHAINPUTS6.
  000021F0: 03 04 03 00 07 00 14 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002200: 4C 50 48 41 49 4E 50 55 54 53 37 F1 03 04 03 00  LPHAINPUTS7.....
  00002210: 08 00 1F 44 33 44 52 53 5F 50 53 46 49 4E 41 4C  ...D3DRS_PSFINAL
  00002220: 43 4F 4D 42 49 4E 45 52 49 4E 50 55 54 53 41 42  COMBINERINPUTSAB
  00002230: 43 44 F2 F1 03 04 03 00 09 00 1E 44 33 44 52 53  CD.........D3DRS
  00002240: 5F 50 53 46 49 4E 41 4C 43 4F 4D 42 49 4E 45 52  _PSFINALCOMBINER
  00002250: 49 4E 50 55 54 53 45 46 47 F3 F2 F1 03 04 03 00  INPUTSEFG.......
  00002260: 0A 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  00002270: 41 4E 54 30 5F 30 F2 F1 03 04 03 00 0B 00 13 44  ANT0_0.........D
  00002280: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 30  3DRS_PSCONSTANT0
  00002290: 5F 31 F2 F1 03 04 03 00 0C 00 13 44 33 44 52 53  _1.........D3DRS
  000022A0: 5F 50 53 43 4F 4E 53 54 41 4E 54 30 5F 32 F2 F1  _PSCONSTANT0_2..
  000022B0: 03 04 03 00 0D 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  000022C0: 4F 4E 53 54 41 4E 54 30 5F 33 F2 F1 03 04 03 00  ONSTANT0_3......
  000022D0: 0E 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  000022E0: 41 4E 54 30 5F 34 F2 F1 03 04 03 00 0F 00 13 44  ANT0_4.........D
  000022F0: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 30  3DRS_PSCONSTANT0
  00002300: 5F 35 F2 F1 03 04 03 00 10 00 13 44 33 44 52 53  _5.........D3DRS
  00002310: 5F 50 53 43 4F 4E 53 54 41 4E 54 30 5F 36 F2 F1  _PSCONSTANT0_6..
  00002320: 03 04 03 00 11 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  00002330: 4F 4E 53 54 41 4E 54 30 5F 37 F2 F1 03 04 03 00  ONSTANT0_7......
  00002340: 12 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  00002350: 41 4E 54 31 5F 30 F2 F1 03 04 03 00 13 00 13 44  ANT1_0.........D
  00002360: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 31  3DRS_PSCONSTANT1
  00002370: 5F 31 F2 F1 03 04 03 00 14 00 13 44 33 44 52 53  _1.........D3DRS
  00002380: 5F 50 53 43 4F 4E 53 54 41 4E 54 31 5F 32 F2 F1  _PSCONSTANT1_2..
  00002390: 03 04 03 00 15 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  000023A0: 4F 4E 53 54 41 4E 54 31 5F 33 F2 F1 03 04 03 00  ONSTANT1_3......
  000023B0: 16 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  000023C0: 41 4E 54 31 5F 34 F2 F1 03 04 03 00 17 00 13 44  ANT1_4.........D
  000023D0: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 31  3DRS_PSCONSTANT1
  000023E0: 5F 35 F2 F1 03 04 03 00 18 00 13 44 33 44 52 53  _5.........D3DRS
  000023F0: 5F 50 53 43 4F 4E 53 54 41 4E 54 31 5F 36 F2 F1  _PSCONSTANT1_6..
  00002400: 03 04 03 00 19 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  00002410: 4F 4E 53 54 41 4E 54 31 5F 37 F2 F1 03 04 03 00  ONSTANT1_7......
  00002420: 1A 00 15 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  00002430: 4F 55 54 50 55 54 53 30 03 04 03 00 1B 00 15 44  OUTPUTS0.......D
  00002440: 33 44 52 53 5F 50 53 41 4C 50 48 41 4F 55 54 50  3DRS_PSALPHAOUTP
  00002450: 55 54 53 31 03 04 03 00 1C 00 15 44 33 44 52 53  UTS1.......D3DRS
  00002460: 5F 50 53 41 4C 50 48 41 4F 55 54 50 55 54 53 32  _PSALPHAOUTPUTS2
  00002470: 03 04 03 00 1D 00 15 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002480: 4C 50 48 41 4F 55 54 50 55 54 53 33 03 04 03 00  LPHAOUTPUTS3....
  00002490: 1E 00 15 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  000024A0: 4F 55 54 50 55 54 53 34 03 04 03 00 1F 00 15 44  OUTPUTS4.......D
  000024B0: 33 44 52 53 5F 50 53 41 4C 50 48 41 4F 55 54 50  3DRS_PSALPHAOUTP
  000024C0: 55 54 53 35 03 04 03 00 20 00 15 44 33 44 52 53  UTS5.... ..D3DRS
  000024D0: 5F 50 53 41 4C 50 48 41 4F 55 54 50 55 54 53 36  _PSALPHAOUTPUTS6
  000024E0: 03 04 03 00 21 00 15 44 33 44 52 53 5F 50 53 41  ....!..D3DRS_PSA
  000024F0: 4C 50 48 41 4F 55 54 50 55 54 53 37 03 04 03 00  LPHAOUTPUTS7....
  00002500: 22 00 12 44 33 44 52 53 5F 50 53 52 47 42 49 4E  "..D3DRS_PSRGBIN
  00002510: 50 55 54 53 30 F3 F2 F1 03 04 03 00 23 00 12 44  PUTS0.......#..D
  00002520: 33 44 52 53 5F 50 53 52 47 42 49 4E 50 55 54 53  3DRS_PSRGBINPUTS
  00002530: 31 F3 F2 F1 03 04 03 00 24 00 12 44 33 44 52 53  1.......$..D3DRS
  00002540: 5F 50 53 52 47 42 49 4E 50 55 54 53 32 F3 F2 F1  _PSRGBINPUTS2...
  00002550: 03 04 03 00 25 00 12 44 33 44 52 53 5F 50 53 52  ....%..D3DRS_PSR
  00002560: 47 42 49 4E 50 55 54 53 33 F3 F2 F1 03 04 03 00  GBINPUTS3.......
  00002570: 26 00 12 44 33 44 52 53 5F 50 53 52 47 42 49 4E  &..D3DRS_PSRGBIN
  00002580: 50 55 54 53 34 F3 F2 F1 03 04 03 00 27 00 12 44  PUTS4.......'..D
  00002590: 33 44 52 53 5F 50 53 52 47 42 49 4E 50 55 54 53  3DRS_PSRGBINPUTS
  000025A0: 35 F3 F2 F1 03 04 03 00 28 00 12 44 33 44 52 53  5.......(..D3DRS
  000025B0: 5F 50 53 52 47 42 49 4E 50 55 54 53 36 F3 F2 F1  _PSRGBINPUTS6...
  000025C0: 03 04 03 00 29 00 12 44 33 44 52 53 5F 50 53 52  ....)..D3DRS_PSR
  000025D0: 47 42 49 4E 50 55 54 53 37 F3 F2 F1 03 04 03 00  GBINPUTS7.......
  000025E0: 2A 00 13 44 33 44 52 53 5F 50 53 43 4F 4D 50 41  *..D3DRS_PSCOMPA
  000025F0: 52 45 4D 4F 44 45 F2 F1 03 04 03 00 2B 00 1E 44  REMODE......+..D
  00002600: 33 44 52 53 5F 50 53 46 49 4E 41 4C 43 4F 4D 42  3DRS_PSFINALCOMB
  00002610: 49 4E 45 52 43 4F 4E 53 54 41 4E 54 30 F3 F2 F1  INERCONSTANT0...
  00002620: 03 04 03 00 2C 00 1E 44 33 44 52 53 5F 50 53 46  ....,..D3DRS_PSF
  00002630: 49 4E 41 4C 43 4F 4D 42 49 4E 45 52 43 4F 4E 53  INALCOMBINERCONS
  00002640: 54 41 4E 54 31 F3 F2 F1 03 04 03 00 2D 00 13 44  TANT1.......-..D
  00002650: 33 44 52 53 5F 50 53 52 47 42 4F 55 54 50 55 54  3DRS_PSRGBOUTPUT
  00002660: 53 30 F2 F1 03 04 03 00 2E 00 13 44 33 44 52 53  S0.........D3DRS
  00002670: 5F 50 53 52 47 42 4F 55 54 50 55 54 53 31 F2 F1  _PSRGBOUTPUTS1..
  00002680: 03 04 03 00 2F 00 13 44 33 44 52 53 5F 50 53 52  ..../..D3DRS_PSR
  00002690: 47 42 4F 55 54 50 55 54 53 32 F2 F1 03 04 03 00  GBOUTPUTS2......
  000026A0: 30 00 13 44 33 44 52 53 5F 50 53 52 47 42 4F 55  0..D3DRS_PSRGBOU
  000026B0: 54 50 55 54 53 33 F2 F1 03 04 03 00 31 00 13 44  TPUTS3......1..D
  000026C0: 33 44 52 53 5F 50 53 52 47 42 4F 55 54 50 55 54  3DRS_PSRGBOUTPUT
  000026D0: 53 34 F2 F1 03 04 03 00 32 00 13 44 33 44 52 53  S4......2..D3DRS
  000026E0: 5F 50 53 52 47 42 4F 55 54 50 55 54 53 35 F2 F1  _PSRGBOUTPUTS5..
  000026F0: 03 04 03 00 33 00 13 44 33 44 52 53 5F 50 53 52  ....3..D3DRS_PSR
  00002700: 47 42 4F 55 54 50 55 54 53 36 F2 F1 03 04 03 00  GBOUTPUTS6......
  00002710: 34 00 13 44 33 44 52 53 5F 50 53 52 47 42 4F 55  4..D3DRS_PSRGBOU
  00002720: 54 50 55 54 53 37 F2 F1 03 04 03 00 35 00 15 44  TPUTS7......5..D
  00002730: 33 44 52 53 5F 50 53 43 4F 4D 42 49 4E 45 52 43  3DRS_PSCOMBINERC
  00002740: 4F 55 4E 54 03 04 03 00 37 00 12 44 33 44 52 53  OUNT....7..D3DRS
  00002750: 5F 50 53 44 4F 54 4D 41 50 50 49 4E 47 F3 F2 F1  _PSDOTMAPPING...
  00002760: 03 04 03 00 38 00 14 44 33 44 52 53 5F 50 53 49  ....8..D3DRS_PSI
  00002770: 4E 50 55 54 54 45 58 54 55 52 45 F1 03 04 03 00  NPUTTEXTURE.....
  00002780: 39 00 0C 44 33 44 52 53 5F 50 53 5F 4D 41 58 F1  9..D3DRS_PS_MAX.
  00002790: 03 04 03 00 39 00 0B 44 33 44 52 53 5F 5A 46 55  ....9..D3DRS_ZFU
  000027A0: 4E 43 F2 F1 03 04 03 00 3A 00 0F 44 33 44 52 53  NC......:..D3DRS
  000027B0: 5F 41 4C 50 48 41 46 55 4E 43 F2 F1 03 04 03 00  _ALPHAFUNC......
  000027C0: 3B 00 16 44 33 44 52 53 5F 41 4C 50 48 41 42 4C  ;..D3DRS_ALPHABL
  000027D0: 45 4E 44 45 4E 41 42 4C 45 F3 F2 F1 03 04 03 00  ENDENABLE.......
  000027E0: 3C 00 15 44 33 44 52 53 5F 41 4C 50 48 41 54 45  <..D3DRS_ALPHATE
  000027F0: 53 54 45 4E 41 42 4C 45 03 04 03 00 3D 00 0E 44  STENABLE....=..D
  00002800: 33 44 52 53 5F 41 4C 50 48 41 52 45 46 F3 F2 F1  3DRS_ALPHAREF...
  00002810: 03 04 03 00 3E 00 0E 44 33 44 52 53 5F 53 52 43  ....>..D3DRS_SRC
  00002820: 42 4C 45 4E 44 F3 F2 F1 03 04 03 00 3F 00 0F 44  BLEND.......?..D
  00002830: 33 44 52 53 5F 44 45 53 54 42 4C 45 4E 44 F2 F1  3DRS_DESTBLEND..
  00002840: 03 04 03 00 40 00 12 44 33 44 52 53 5F 5A 57 52  ....@..D3DRS_ZWR
  00002850: 49 54 45 45 4E 41 42 4C 45 F3 F2 F1 03 04 03 00  ITEENABLE.......
  00002860: 41 00 12 44 33 44 52 53 5F 44 49 54 48 45 52 45  A..D3DRS_DITHERE
  00002870: 4E 41 42 4C 45 F3 F2 F1 03 04 03 00 42 00 0F 44  NABLE.......B..D
  00002880: 33 44 52 53 5F 53 48 41 44 45 4D 4F 44 45 F2 F1  3DRS_SHADEMODE..
  00002890: 03 04 03 00 43 00 16 44 33 44 52 53 5F 43 4F 4C  ....C..D3DRS_COL
  000028A0: 4F 52 57 52 49 54 45 45 4E 41 42 4C 45 F3 F2 F1  ORWRITEENABLE...
  000028B0: 03 04 03 00 44 00 12 44 33 44 52 53 5F 53 54 45  ....D..D3DRS_STE
  000028C0: 4E 43 49 4C 5A 46 41 49 4C F3 F2 F1 03 04 03 00  NCILZFAIL.......
  000028D0: 45 00 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  E..D3DRS_STENCIL
  000028E0: 50 41 53 53 03 04 03 00 46 00 11 44 33 44 52 53  PASS....F..D3DRS
  000028F0: 5F 53 54 45 4E 43 49 4C 46 55 4E 43 03 04 03 00  _STENCILFUNC....
  00002900: 47 00 10 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  G..D3DRS_STENCIL
  00002910: 52 45 46 F1 03 04 03 00 48 00 11 44 33 44 52 53  REF.....H..D3DRS
  00002920: 5F 53 54 45 4E 43 49 4C 4D 41 53 4B 03 04 03 00  _STENCILMASK....
  00002930: 49 00 16 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  I..D3DRS_STENCIL
  00002940: 57 52 49 54 45 4D 41 53 4B F3 F2 F1 03 04 03 00  WRITEMASK.......
  00002950: 4A 00 0D 44 33 44 52 53 5F 42 4C 45 4E 44 4F 50  J..D3DRS_BLENDOP
  00002960: 03 04 03 00 4B 00 10 44 33 44 52 53 5F 42 4C 45  ....K..D3DRS_BLE
  00002970: 4E 44 43 4F 4C 4F 52 F1 03 04 03 00 4C 00 10 44  NDCOLOR.....L..D
  00002980: 33 44 52 53 5F 53 57 41 54 48 57 49 44 54 48 F1  3DRS_SWATHWIDTH.
  00002990: 03 04 03 00 4D 00 1E 44 33 44 52 53 5F 50 4F 4C  ....M..D3DRS_POL
  000029A0: 59 47 4F 4E 4F 46 46 53 45 54 5A 53 4C 4F 50 45  YGONOFFSETZSLOPE
  000029B0: 53 43 41 4C 45 F3 F2 F1 03 04 03 00 4E 00 1A 44  SCALE.......N..D
  000029C0: 33 44 52 53 5F 50 4F 4C 59 47 4F 4E 4F 46 46 53  3DRS_POLYGONOFFS
  000029D0: 45 54 5A 4F 46 46 53 45 54 F3 F2 F1 03 04 03 00  ETZOFFSET.......
  000029E0: 4F 00 17 44 33 44 52 53 5F 50 4F 49 4E 54 4F 46  O..D3DRS_POINTOF
  000029F0: 46 53 45 54 45 4E 41 42 4C 45 F2 F1 03 04 03 00  FSETENABLE......
  00002A00: 50 00 1B 44 33 44 52 53 5F 57 49 52 45 46 52 41  P..D3DRS_WIREFRA
  00002A10: 4D 45 4F 46 46 53 45 54 45 4E 41 42 4C 45 F2 F1  MEOFFSETENABLE..
  00002A20: 03 04 03 00 51 00 17 44 33 44 52 53 5F 53 4F 4C  ....Q..D3DRS_SOL
  00002A30: 49 44 4F 46 46 53 45 54 45 4E 41 42 4C 45 F2 F1  IDOFFSETENABLE..
  00002A40: 03 04 03 00 52 00 10 44 33 44 52 53 5F 53 49 4D  ....R..D3DRS_SIM
  00002A50: 50 4C 45 5F 4D 41 58 F1 03 04 03 00 52 00 0F 44  PLE_MAX.....R..D
  00002A60: 33 44 52 53 5F 46 4F 47 45 4E 41 42 4C 45 F2 F1  3DRS_FOGENABLE..
  00002A70: 03 04 03 00 53 00 12 44 33 44 52 53 5F 46 4F 47  ....S..D3DRS_FOG
  00002A80: 54 41 42 4C 45 4D 4F 44 45 F3 F2 F1 03 04 03 00  TABLEMODE.......
  00002A90: 54 00 0E 44 33 44 52 53 5F 46 4F 47 53 54 41 52  T..D3DRS_FOGSTAR
  00002AA0: 54 F3 F2 F1 03 04 03 00 55 00 0C 44 33 44 52 53  T.......U..D3DRS
  00002AB0: 5F 46 4F 47 45 4E 44 F1 03 04 03 00 56 00 10 44  _FOGEND.....V..D
  00002AC0: 33 44 52 53 5F 46 4F 47 44 45 4E 53 49 54 59 F1  3DRS_FOGDENSITY.
  00002AD0: 03 04 03 00 57 00 14 44 33 44 52 53 5F 52 41 4E  ....W..D3DRS_RAN
  00002AE0: 47 45 46 4F 47 45 4E 41 42 4C 45 F1 03 04 03 00  GEFOGENABLE.....
  00002AF0: 58 00 0B 44 33 44 52 53 5F 57 52 41 50 30 F2 F1  X..D3DRS_WRAP0..
  00002B00: 03 04 03 00 59 00 0B 44 33 44 52 53 5F 57 52 41  ....Y..D3DRS_WRA
  00002B10: 50 31 F2 F1 03 04 03 00 5A 00 0B 44 33 44 52 53  P1......Z..D3DRS
  00002B20: 5F 57 52 41 50 32 F2 F1 03 04 03 00 5B 00 0B 44  _WRAP2......[..D
  00002B30: 33 44 52 53 5F 57 52 41 50 33 F2 F1 03 04 03 00  3DRS_WRAP3......
  00002B40: 5C 00 0E 44 33 44 52 53 5F 4C 49 47 48 54 49 4E  \..D3DRS_LIGHTIN
  00002B50: 47 F3 F2 F1 03 04 03 00 5D 00 14 44 33 44 52 53  G.......]..D3DRS
  00002B60: 5F 53 50 45 43 55 4C 41 52 45 4E 41 42 4C 45 F1  _SPECULARENABLE.
  00002B70: 03 04 03 00 5E 00 11 44 33 44 52 53 5F 4C 4F 43  ....^..D3DRS_LOC
  00002B80: 41 4C 56 49 45 57 45 52 03 04 03 00 5F 00 11 44  ALVIEWER...._..D
  00002B90: 33 44 52 53 5F 43 4F 4C 4F 52 56 45 52 54 45 58  3DRS_COLORVERTEX
  00002BA0: 03 04 03 00 60 00 20 44 33 44 52 53 5F 42 41 43  ....`. D3DRS_BAC
  00002BB0: 4B 53 50 45 43 55 4C 41 52 4D 41 54 45 52 49 41  KSPECULARMATERIA
  00002BC0: 4C 53 4F 55 52 43 45 F1 03 04 03 00 61 00 1F 44  LSOURCE.....a..D
  00002BD0: 33 44 52 53 5F 42 41 43 4B 44 49 46 46 55 53 45  3DRS_BACKDIFFUSE
  00002BE0: 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F2 F1  MATERIALSOURCE..
  00002BF0: 03 04 03 00 62 00 1F 44 33 44 52 53 5F 42 41 43  ....b..D3DRS_BAC
  00002C00: 4B 41 4D 42 49 45 4E 54 4D 41 54 45 52 49 41 4C  KAMBIENTMATERIAL
  00002C10: 53 4F 55 52 43 45 F2 F1 03 04 03 00 63 00 20 44  SOURCE......c. D
  00002C20: 33 44 52 53 5F 42 41 43 4B 45 4D 49 53 53 49 56  3DRS_BACKEMISSIV
  00002C30: 45 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F1  EMATERIALSOURCE.
  00002C40: 03 04 03 00 64 00 1C 44 33 44 52 53 5F 53 50 45  ....d..D3DRS_SPE
  00002C50: 43 55 4C 41 52 4D 41 54 45 52 49 41 4C 53 4F 55  CULARMATERIALSOU
  00002C60: 52 43 45 F1 03 04 03 00 65 00 1B 44 33 44 52 53  RCE.....e..D3DRS
  00002C70: 5F 44 49 46 46 55 53 45 4D 41 54 45 52 49 41 4C  _DIFFUSEMATERIAL
  00002C80: 53 4F 55 52 43 45 F2 F1 03 04 03 00 66 00 1B 44  SOURCE......f..D
  00002C90: 33 44 52 53 5F 41 4D 42 49 45 4E 54 4D 41 54 45  3DRS_AMBIENTMATE
  00002CA0: 52 49 41 4C 53 4F 55 52 43 45 F2 F1 03 04 03 00  RIALSOURCE......
  00002CB0: 67 00 1C 44 33 44 52 53 5F 45 4D 49 53 53 49 56  g..D3DRS_EMISSIV
  00002CC0: 45 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F1  EMATERIALSOURCE.
  00002CD0: 03 04 03 00 68 00 11 44 33 44 52 53 5F 42 41 43  ....h..D3DRS_BAC
  00002CE0: 4B 41 4D 42 49 45 4E 54 03 04 03 00 69 00 0D 44  KAMBIENT....i..D
  00002CF0: 33 44 52 53 5F 41 4D 42 49 45 4E 54 03 04 03 00  3DRS_AMBIENT....
  00002D00: 6A 00 0F 44 33 44 52 53 5F 50 4F 49 4E 54 53 49  j..D3DRS_POINTSI
  00002D10: 5A 45 F2 F1 03 04 03 00 6B 00 13 44 33 44 52 53  ZE......k..D3DRS
  00002D20: 5F 50 4F 49 4E 54 53 49 5A 45 5F 4D 49 4E F2 F1  _POINTSIZE_MIN..
  00002D30: 03 04 03 00 6C 00 17 44 33 44 52 53 5F 50 4F 49  ....l..D3DRS_POI
  00002D40: 4E 54 53 50 52 49 54 45 45 4E 41 42 4C 45 F2 F1  NTSPRITEENABLE..
  00002D50: 03 04 03 00 6D 00 16 44 33 44 52 53 5F 50 4F 49  ....m..D3DRS_POI
  00002D60: 4E 54 53 43 41 4C 45 45 4E 41 42 4C 45 F3 F2 F1  NTSCALEENABLE...
  00002D70: 03 04 03 00 6E 00 12 44 33 44 52 53 5F 50 4F 49  ....n..D3DRS_POI
  00002D80: 4E 54 53 43 41 4C 45 5F 41 F3 F2 F1 03 04 03 00  NTSCALE_A.......
  00002D90: 6F 00 12 44 33 44 52 53 5F 50 4F 49 4E 54 53 43  o..D3DRS_POINTSC
  00002DA0: 41 4C 45 5F 42 F3 F2 F1 03 04 03 00 70 00 12 44  ALE_B.......p..D
  00002DB0: 33 44 52 53 5F 50 4F 49 4E 54 53 43 41 4C 45 5F  3DRS_POINTSCALE_
  00002DC0: 43 F3 F2 F1 03 04 03 00 71 00 13 44 33 44 52 53  C.......q..D3DRS
  00002DD0: 5F 50 4F 49 4E 54 53 49 5A 45 5F 4D 41 58 F2 F1  _POINTSIZE_MAX..
  00002DE0: 03 04 03 00 72 00 14 44 33 44 52 53 5F 50 41 54  ....r..D3DRS_PAT
  00002DF0: 43 48 45 44 47 45 53 54 59 4C 45 F1 03 04 03 00  CHEDGESTYLE.....
  00002E00: 73 00 13 44 33 44 52 53 5F 50 41 54 43 48 53 45  s..D3DRS_PATCHSE
  00002E10: 47 4D 45 4E 54 53 F2 F1 03 04 03 00 74 00 10 44  GMENTS......t..D
  00002E20: 33 44 52 53 5F 53 57 41 50 46 49 4C 54 45 52 F1  3DRS_SWAPFILTER.
  00002E30: 03 04 03 00 75 00 12 44 33 44 52 53 5F 44 45 46  ....u..D3DRS_DEF
  00002E40: 45 52 52 45 44 5F 4D 41 58 F3 F2 F1 03 04 03 00  ERRED_MAX.......
  00002E50: 75 00 14 44 33 44 52 53 5F 50 53 54 45 58 54 55  u..D3DRS_PSTEXTU
  00002E60: 52 45 4D 4F 44 45 53 F1 03 04 03 00 76 00 11 44  REMODES.....v..D
  00002E70: 33 44 52 53 5F 56 45 52 54 45 58 42 4C 45 4E 44  3DRS_VERTEXBLEND
  00002E80: 03 04 03 00 77 00 0E 44 33 44 52 53 5F 46 4F 47  ....w..D3DRS_FOG
  00002E90: 43 4F 4C 4F 52 F3 F2 F1 03 04 03 00 78 00 0E 44  COLOR.......x..D
  00002EA0: 33 44 52 53 5F 46 49 4C 4C 4D 4F 44 45 F3 F2 F1  3DRS_FILLMODE...
  00002EB0: 03 04 03 00 79 00 12 44 33 44 52 53 5F 42 41 43  ....y..D3DRS_BAC
  00002EC0: 4B 46 49 4C 4C 4D 4F 44 45 F3 F2 F1 03 04 03 00  KFILLMODE.......
  00002ED0: 7A 00 16 44 33 44 52 53 5F 54 57 4F 53 49 44 45  z..D3DRS_TWOSIDE
  00002EE0: 44 4C 49 47 48 54 49 4E 47 F3 F2 F1 03 04 03 00  DLIGHTING.......
  00002EF0: 7B 00 16 44 33 44 52 53 5F 4E 4F 52 4D 41 4C 49  {..D3DRS_NORMALI
  00002F00: 5A 45 4E 4F 52 4D 41 4C 53 F3 F2 F1 03 04 03 00  ZENORMALS.......
  00002F10: 7C 00 0D 44 33 44 52 53 5F 5A 45 4E 41 42 4C 45  |..D3DRS_ZENABLE
  00002F20: 03 04 03 00 7D 00 13 44 33 44 52 53 5F 53 54 45  ....}..D3DRS_STE
  00002F30: 4E 43 49 4C 45 4E 41 42 4C 45 F2 F1 03 04 03 00  NCILENABLE......
  00002F40: 7E 00 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  ~..D3DRS_STENCIL
  00002F50: 46 41 49 4C 03 04 03 00 7F 00 0F 44 33 44 52 53  FAIL.......D3DRS
  00002F60: 5F 46 52 4F 4E 54 46 41 43 45 F2 F1 03 04 03 00  _FRONTFACE......
  00002F70: 80 00 0E 44 33 44 52 53 5F 43 55 4C 4C 4D 4F 44  ...D3DRS_CULLMOD
  00002F80: 45 F3 F2 F1 03 04 03 00 81 00 13 44 33 44 52 53  E..........D3DRS
  00002F90: 5F 54 45 58 54 55 52 45 46 41 43 54 4F 52 F2 F1  _TEXTUREFACTOR..
  00002FA0: 03 04 03 00 82 00 0B 44 33 44 52 53 5F 5A 42 49  .......D3DRS_ZBI
  00002FB0: 41 53 F2 F1 03 04 03 00 83 00 0D 44 33 44 52 53  AS.........D3DRS
  00002FC0: 5F 4C 4F 47 49 43 4F 50 03 04 03 00 84 00 13 44  _LOGICOP.......D
  00002FD0: 33 44 52 53 5F 45 44 47 45 41 4E 54 49 41 4C 49  3DRS_EDGEANTIALI
  00002FE0: 41 53 F2 F1 03 04 03 00 85 00 1A 44 33 44 52 53  AS.........D3DRS
  00002FF0: 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 41 4E 54 49  _MULTISAMPLEANTI
  00003000: 41 4C 49 41 53 F3 F2 F1 03 04 03 00 86 00 15 44  ALIAS..........D
  00003010: 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45  3DRS_MULTISAMPLE
  00003020: 4D 41 53 4B 03 04 03 00 87 00 15 44 33 44 52 53  MASK.......D3DRS
  00003030: 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 4D 4F 44 45  _MULTISAMPLEMODE
  00003040: 03 04 03 00 88 00 21 44 33 44 52 53 5F 4D 55 4C  ......!D3DRS_MUL
  00003050: 54 49 53 41 4D 50 4C 45 52 45 4E 44 45 52 54 41  TISAMPLERENDERTA
  00003060: 52 47 45 54 4D 4F 44 45 03 04 03 00 89 00 10 44  RGETMODE.......D
  00003070: 33 44 52 53 5F 53 48 41 44 4F 57 46 55 4E 43 F1  3DRS_SHADOWFUNC.
  00003080: 03 04 03 00 8A 00 0F 44 33 44 52 53 5F 4C 49 4E  .......D3DRS_LIN
  00003090: 45 57 49 44 54 48 F2 F1 03 04 03 00 8B 00 15 44  EWIDTH.........D
  000030A0: 33 44 52 53 5F 44 58 54 31 4E 4F 49 53 45 45 4E  3DRS_DXT1NOISEEN
  000030B0: 41 42 4C 45 03 04 03 00 8C 00 0F 44 33 44 52 53  ABLE.......D3DRS
  000030C0: 5F 59 55 56 45 4E 41 42 4C 45 F2 F1 03 04 03 00  _YUVENABLE......
  000030D0: 8D 00 19 44 33 44 52 53 5F 4F 43 43 4C 55 53 49  ...D3DRS_OCCLUSI
  000030E0: 4F 4E 43 55 4C 4C 45 4E 41 42 4C 45 03 04 03 00  ONCULLENABLE....
  000030F0: 8E 00 17 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  ...D3DRS_STENCIL
  00003100: 43 55 4C 4C 45 4E 41 42 4C 45 F2 F1 03 04 03 00  CULLENABLE......
  00003110: 8F 00 17 44 33 44 52 53 5F 52 4F 50 5A 43 4D 50  ...D3DRS_ROPZCMP
  00003120: 41 4C 57 41 59 53 52 45 41 44 F2 F1 03 04 03 00  ALWAYSREAD......
  00003130: 90 00 0E 44 33 44 52 53 5F 52 4F 50 5A 52 45 41  ...D3DRS_ROPZREA
  00003140: 44 F3 F2 F1 03 04 03 00 91 00 1B 44 33 44 52 53  D..........D3DRS
  00003150: 5F 44 4F 4E 4F 54 43 55 4C 4C 55 4E 43 4F 4D 50  _DONOTCULLUNCOMP
  00003160: 52 45 53 53 45 44 F2 F1 03 04 03 00 92 00 09 44  RESSED.........D
  00003170: 33 44 52 53 5F 4D 41 58 03 04 03 00 04 80 FF FF  3DRS_MAX........
  00003180: FF 7F 11 44 33 44 52 53 5F 46 4F 52 43 45 5F 44  ...D3DRS_FORCE_D
  00003190: 57 4F 52 44 22 00 07 10 97 00 00 00 74 00 00 00  WORD".......t...
  000031A0: B5 10 00 00 13 5F 44 33 44 52 45 4E 44 45 52 53  ....._D3DRENDERS
  000031B0: 54 41 54 45 54 59 50 45 0E 00 01 12 02 00 00 00  TATETYPE........
  000031C0: B6 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000031D0: 2C 10 00 00 00 00 00 00 07 00 02 00 B7 10 00 00  ,...............
  000031E0: 00 00 00 00 0E 00 01 12 02 00 00 00 B6 10 00 00  ................
  000031F0: 22 04 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  00003200: 00 00 00 00 07 00 02 00 B9 10 00 00 00 00 00 00  ................
  00003210: 0A 00 01 12 01 00 00 00 22 00 00 00 1A 00 09 10  ........".......
  00003220: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00003230: BB 10 00 00 00 00 00 00 6A 00 03 12 03 04 03 00  ........j.......
  00003240: 01 00 0A 44 33 44 53 42 54 5F 41 4C 4C F3 F2 F1  ...D3DSBT_ALL...
  00003250: 03 04 03 00 02 00 11 44 33 44 53 42 54 5F 50 49  .......D3DSBT_PI
  00003260: 58 45 4C 53 54 41 54 45 03 04 03 00 03 00 12 44  XELSTATE.......D
  00003270: 33 44 53 42 54 5F 56 45 52 54 45 58 53 54 41 54  3DSBT_VERTEXSTAT
  00003280: 45 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 12 44  E..............D
  00003290: 33 44 53 42 54 5F 46 4F 52 43 45 5F 44 57 4F 52  3DSBT_FORCE_DWOR
  000032A0: 44 F3 F2 F1 22 00 07 10 04 00 00 00 74 00 00 00  D...".......t...
  000032B0: BD 10 00 00 12 5F 44 33 44 53 54 41 54 45 42 4C  ....._D3DSTATEBL
  000032C0: 4F 43 4B 54 59 50 45 F1 0E 00 01 12 02 00 00 00  OCKTYPE.........
  000032D0: BE 10 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000032E0: 2C 10 00 00 00 00 00 00 07 00 02 00 BF 10 00 00  ,...............
  000032F0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00003300: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 42 61  ...........D3DBa
  00003310: 73 65 54 65 78 74 75 72 65 F3 F2 F1 0A 00 02 10  seTexture.......
  00003320: C1 10 00 00 0A 00 00 00 0A 00 02 10 C2 10 00 00  ................
  00003330: 0A 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  00003340: C3 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003350: 00 00 00 00 07 00 02 00 C4 10 00 00 00 00 00 00  ................
  00003360: 0E 00 01 12 02 00 00 00 22 00 00 00 C2 10 00 00  ........".......
  00003370: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003380: 07 00 02 00 C6 10 00 00 00 00 00 00 9E 03 03 12  ................
  00003390: 03 04 03 00 00 00 0F 44 33 44 54 53 53 5F 41 44  .......D3DTSS_AD
  000033A0: 44 52 45 53 53 55 F2 F1 03 04 03 00 01 00 0F 44  DRESSU.........D
  000033B0: 33 44 54 53 53 5F 41 44 44 52 45 53 53 56 F2 F1  3DTSS_ADDRESSV..
  000033C0: 03 04 03 00 02 00 0F 44 33 44 54 53 53 5F 41 44  .......D3DTSS_AD
  000033D0: 44 52 45 53 53 57 F2 F1 03 04 03 00 03 00 10 44  DRESSW.........D
  000033E0: 33 44 54 53 53 5F 4D 41 47 46 49 4C 54 45 52 F1  3DTSS_MAGFILTER.
  000033F0: 03 04 03 00 04 00 10 44 33 44 54 53 53 5F 4D 49  .......D3DTSS_MI
  00003400: 4E 46 49 4C 54 45 52 F1 03 04 03 00 05 00 10 44  NFILTER........D
  00003410: 33 44 54 53 53 5F 4D 49 50 46 49 4C 54 45 52 F1  3DTSS_MIPFILTER.
  00003420: 03 04 03 00 06 00 14 44 33 44 54 53 53 5F 4D 49  .......D3DTSS_MI
  00003430: 50 4D 41 50 4C 4F 44 42 49 41 53 F1 03 04 03 00  PMAPLODBIAS.....
  00003440: 07 00 12 44 33 44 54 53 53 5F 4D 41 58 4D 49 50  ...D3DTSS_MAXMIP
  00003450: 4C 45 56 45 4C F3 F2 F1 03 04 03 00 08 00 14 44  LEVEL..........D
  00003460: 33 44 54 53 53 5F 4D 41 58 41 4E 49 53 4F 54 52  3DTSS_MAXANISOTR
  00003470: 4F 50 59 F1 03 04 03 00 09 00 11 44 33 44 54 53  OPY........D3DTS
  00003480: 53 5F 43 4F 4C 4F 52 4B 45 59 4F 50 03 04 03 00  S_COLORKEYOP....
  00003490: 0A 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 53  ...D3DTSS_COLORS
  000034A0: 49 47 4E F1 03 04 03 00 0B 00 10 44 33 44 54 53  IGN........D3DTS
  000034B0: 53 5F 41 4C 50 48 41 4B 49 4C 4C F1 03 04 03 00  S_ALPHAKILL.....
  000034C0: 0C 00 21 44 33 44 54 53 53 5F 44 45 46 45 52 52  ..!D3DTSS_DEFERR
  000034D0: 45 44 5F 54 45 58 54 55 52 45 5F 53 54 41 54 45  ED_TEXTURE_STATE
  000034E0: 5F 4D 41 58 03 04 03 00 0C 00 0E 44 33 44 54 53  _MAX.......D3DTS
  000034F0: 53 5F 43 4F 4C 4F 52 4F 50 F3 F2 F1 03 04 03 00  S_COLOROP.......
  00003500: 0D 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 41  ...D3DTSS_COLORA
  00003510: 52 47 30 F1 03 04 03 00 0E 00 10 44 33 44 54 53  RG0........D3DTS
  00003520: 53 5F 43 4F 4C 4F 52 41 52 47 31 F1 03 04 03 00  S_COLORARG1.....
  00003530: 0F 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 41  ...D3DTSS_COLORA
  00003540: 52 47 32 F1 03 04 03 00 10 00 0E 44 33 44 54 53  RG2........D3DTS
  00003550: 53 5F 41 4C 50 48 41 4F 50 F3 F2 F1 03 04 03 00  S_ALPHAOP.......
  00003560: 11 00 10 44 33 44 54 53 53 5F 41 4C 50 48 41 41  ...D3DTSS_ALPHAA
  00003570: 52 47 30 F1 03 04 03 00 12 00 10 44 33 44 54 53  RG0........D3DTS
  00003580: 53 5F 41 4C 50 48 41 41 52 47 31 F1 03 04 03 00  S_ALPHAARG1.....
  00003590: 13 00 10 44 33 44 54 53 53 5F 41 4C 50 48 41 41  ...D3DTSS_ALPHAA
  000035A0: 52 47 32 F1 03 04 03 00 14 00 10 44 33 44 54 53  RG2........D3DTS
  000035B0: 53 5F 52 45 53 55 4C 54 41 52 47 F1 03 04 03 00  S_RESULTARG.....
  000035C0: 15 00 1C 44 33 44 54 53 53 5F 54 45 58 54 55 52  ...D3DTSS_TEXTUR
  000035D0: 45 54 52 41 4E 53 46 4F 52 4D 46 4C 41 47 53 F1  ETRANSFORMFLAGS.
  000035E0: 03 04 03 00 16 00 13 44 33 44 54 53 53 5F 44 45  .......D3DTSS_DE
  000035F0: 46 45 52 52 45 44 5F 4D 41 58 F2 F1 03 04 03 00  FERRED_MAX......
  00003600: 16 00 13 44 33 44 54 53 53 5F 42 55 4D 50 45 4E  ...D3DTSS_BUMPEN
  00003610: 56 4D 41 54 30 30 F2 F1 03 04 03 00 17 00 13 44  VMAT00.........D
  00003620: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4D 41 54  3DTSS_BUMPENVMAT
  00003630: 30 31 F2 F1 03 04 03 00 18 00 13 44 33 44 54 53  01.........D3DTS
  00003640: 53 5F 42 55 4D 50 45 4E 56 4D 41 54 31 31 F2 F1  S_BUMPENVMAT11..
  00003650: 03 04 03 00 19 00 13 44 33 44 54 53 53 5F 42 55  .......D3DTSS_BU
  00003660: 4D 50 45 4E 56 4D 41 54 31 30 F2 F1 03 04 03 00  MPENVMAT10......
  00003670: 1A 00 14 44 33 44 54 53 53 5F 42 55 4D 50 45 4E  ...D3DTSS_BUMPEN
  00003680: 56 4C 53 43 41 4C 45 F1 03 04 03 00 1B 00 15 44  VLSCALE........D
  00003690: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4C 4F 46  3DTSS_BUMPENVLOF
  000036A0: 46 53 45 54 03 04 03 00 1C 00 14 44 33 44 54 53  FSET.......D3DTS
  000036B0: 53 5F 54 45 58 43 4F 4F 52 44 49 4E 44 45 58 F1  S_TEXCOORDINDEX.
  000036C0: 03 04 03 00 1D 00 12 44 33 44 54 53 53 5F 42 4F  .......D3DTSS_BO
  000036D0: 52 44 45 52 43 4F 4C 4F 52 F3 F2 F1 03 04 03 00  RDERCOLOR.......
  000036E0: 1E 00 14 44 33 44 54 53 53 5F 43 4F 4C 4F 52 4B  ...D3DTSS_COLORK
  000036F0: 45 59 43 4F 4C 4F 52 F1 03 04 03 00 20 00 0A 44  EYCOLOR..... ..D
  00003700: 33 44 54 53 53 5F 4D 41 58 F3 F2 F1 03 04 03 00  3DTSS_MAX.......
  00003710: 04 80 FF FF FF 7F 12 44 33 44 54 53 53 5F 46 4F  .......D3DTSS_FO
  00003720: 52 43 45 5F 44 57 4F 52 44 F3 F2 F1 2A 00 07 10  RCE_DWORD...*...
  00003730: 23 00 00 00 74 00 00 00 C8 10 00 00 19 5F 44 33  #...t........_D3
  00003740: 44 54 45 58 54 55 52 45 53 54 41 47 45 53 54 41  DTEXTURESTAGESTA
  00003750: 54 45 54 59 50 45 F2 F1 12 00 01 12 03 00 00 00  TETYPE..........
  00003760: 22 00 00 00 C9 10 00 00 22 04 00 00 1A 00 09 10  ".......".......
  00003770: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00003780: CA 10 00 00 00 00 00 00 12 00 01 12 03 00 00 00  ................
  00003790: 22 00 00 00 C9 10 00 00 22 00 00 00 1A 00 09 10  ".......".......
  000037A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000037B0: CC 10 00 00 00 00 00 00 22 01 03 12 03 04 03 00  ........".......
  000037C0: 01 00 0F 44 33 44 50 54 5F 50 4F 49 4E 54 4C 49  ...D3DPT_POINTLI
  000037D0: 53 54 F2 F1 03 04 03 00 02 00 0E 44 33 44 50 54  ST.........D3DPT
  000037E0: 5F 4C 49 4E 45 4C 49 53 54 F3 F2 F1 03 04 03 00  _LINELIST.......
  000037F0: 03 00 0E 44 33 44 50 54 5F 4C 49 4E 45 4C 4F 4F  ...D3DPT_LINELOO
  00003800: 50 F3 F2 F1 03 04 03 00 04 00 0F 44 33 44 50 54  P..........D3DPT
  00003810: 5F 4C 49 4E 45 53 54 52 49 50 F2 F1 03 04 03 00  _LINESTRIP......
  00003820: 05 00 12 44 33 44 50 54 5F 54 52 49 41 4E 47 4C  ...D3DPT_TRIANGL
  00003830: 45 4C 49 53 54 F3 F2 F1 03 04 03 00 06 00 13 44  ELIST..........D
  00003840: 33 44 50 54 5F 54 52 49 41 4E 47 4C 45 53 54 52  3DPT_TRIANGLESTR
  00003850: 49 50 F2 F1 03 04 03 00 07 00 11 44 33 44 50 54  IP.........D3DPT
  00003860: 5F 54 52 49 41 4E 47 4C 45 46 41 4E 03 04 03 00  _TRIANGLEFAN....
  00003870: 08 00 0E 44 33 44 50 54 5F 51 55 41 44 4C 49 53  ...D3DPT_QUADLIS
  00003880: 54 F3 F2 F1 03 04 03 00 09 00 0F 44 33 44 50 54  T..........D3DPT
  00003890: 5F 51 55 41 44 53 54 52 49 50 F2 F1 03 04 03 00  _QUADSTRIP......
  000038A0: 0A 00 0D 44 33 44 50 54 5F 50 4F 4C 59 47 4F 4E  ...D3DPT_POLYGON
  000038B0: 03 04 03 00 0B 00 09 44 33 44 50 54 5F 4D 41 58  .......D3DPT_MAX
  000038C0: 03 04 03 00 04 80 FF FF FF 7F 11 44 33 44 50 54  ...........D3DPT
  000038D0: 5F 46 4F 52 43 45 5F 44 57 4F 52 44 22 00 07 10  _FORCE_DWORD"...
  000038E0: 0C 00 00 00 74 00 00 00 CE 10 00 00 11 5F 44 33  ....t........_D3
  000038F0: 44 50 52 49 4D 49 54 49 56 45 54 59 50 45 F2 F1  DPRIMITIVETYPE..
  00003900: 12 00 01 12 03 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003910: 75 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  u...........,...
  00003920: 00 00 00 00 07 00 03 00 D0 10 00 00 00 00 00 00  ................
  00003930: 1A 00 01 12 05 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003940: 75 00 00 00 75 00 00 00 75 00 00 00 1A 00 09 10  u...u...u.......
  00003950: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 05 00  ....,...........
  00003960: D2 10 00 00 00 00 00 00 0A 00 01 10 03 00 00 00  ................
  00003970: 01 00 F2 F1 0A 00 02 10 D4 10 00 00 0A 00 00 00  ................
  00003980: 16 00 01 12 04 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003990: D5 10 00 00 75 00 00 00 1A 00 09 10 12 00 00 00  ....u...........
  000039A0: 2C 10 00 00 00 00 00 00 07 00 04 00 D6 10 00 00  ,...............
  000039B0: 00 00 00 00 26 00 01 12 08 00 00 00 CF 10 00 00  ....&...........
  000039C0: 75 00 00 00 75 00 00 00 75 00 00 00 D5 10 00 00  u...u...u.......
  000039D0: 1B 10 00 00 D5 10 00 00 75 00 00 00 1A 00 09 10  ........u.......
  000039E0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 08 00  ....,...........
  000039F0: D8 10 00 00 00 00 00 00 0A 00 01 10 22 00 00 00  ............"...
  00003A00: 01 00 F2 F1 0A 00 02 10 DA 10 00 00 0A 00 00 00  ................
  00003A10: 16 00 01 12 04 00 00 00 DB 10 00 00 DB 10 00 00  ................
  00003A20: 22 04 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  00003A30: 2C 10 00 00 00 00 00 00 07 00 04 00 DC 10 00 00  ,...............
  00003A40: 00 00 00 00 0A 00 01 12 01 00 00 00 22 04 00 00  ............"...
  00003A50: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003A60: 07 00 01 00 DE 10 00 00 00 00 00 00 12 00 01 12  ................
  00003A70: 03 00 00 00 74 00 00 00 D5 10 00 00 22 00 00 00  ....t......."...
  00003A80: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003A90: 07 00 03 00 E0 10 00 00 00 00 00 00 12 00 01 12  ................
  00003AA0: 03 00 00 00 74 00 00 00 03 04 00 00 22 00 00 00  ....t......."...
  00003AB0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003AC0: 07 00 03 00 E2 10 00 00 00 00 00 00 12 00 01 12  ................
  00003AD0: 03 00 00 00 22 00 00 00 03 04 00 00 22 04 00 00  ...."......."...
  00003AE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003AF0: 07 00 03 00 E4 10 00 00 00 00 00 00 12 00 01 12  ................
  00003B00: 03 00 00 00 75 00 00 00 71 10 00 00 75 00 00 00  ....u...q...u...
  00003B10: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003B20: 07 00 03 00 E6 10 00 00 00 00 00 00 12 00 01 12  ................
  00003B30: 03 00 00 00 75 00 00 00 72 10 00 00 75 04 00 00  ....u...r...u...
  00003B40: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003B50: 07 00 03 00 E8 10 00 00 00 00 00 00 0E 00 01 12  ................
  00003B60: 02 00 00 00 76 10 00 00 75 00 00 00 1A 00 09 10  ....v...u.......
  00003B70: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003B80: EA 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003B90: 77 10 00 00 75 04 00 00 1A 00 09 10 12 00 00 00  w...u...........
  00003BA0: 2C 10 00 00 00 00 00 00 07 00 02 00 EC 10 00 00  ,...............
  00003BB0: 00 00 00 00 2A 00 05 10 00 00 80 00 00 00 00 00  ....*...........
  00003BC0: 00 00 00 00 00 00 00 00 00 00 12 5F 44 33 44 50  ..........._D3DP
  00003BD0: 69 78 65 6C 53 68 61 64 65 72 44 65 66 F3 F2 F1  ixelShaderDef...
  00003BE0: 0A 00 01 10 EE 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00003BF0: EF 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003C00: F0 10 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003C10: 2C 10 00 00 00 00 00 00 07 00 02 00 F1 10 00 00  ,...............
  00003C20: 00 00 00 00 0A 00 01 12 01 00 00 00 F0 10 00 00  ................
  00003C30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003C40: 07 00 01 00 F3 10 00 00 00 00 00 00 12 00 01 12  ................
  00003C50: 03 00 00 00 22 00 00 00 D5 10 00 00 22 00 00 00  ...."......."...
  00003C60: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003C70: 07 00 03 00 F5 10 00 00 00 00 00 00 12 00 01 12  ................
  00003C80: 03 00 00 00 22 00 00 00 03 04 00 00 22 00 00 00  ...."......."...
  00003C90: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003CA0: 07 00 03 00 F7 10 00 00 00 00 00 00 0A 00 02 10  ................
  00003CB0: EE 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003CC0: 22 00 00 00 F9 10 00 00 1A 00 09 10 12 00 00 00  "...............
  00003CD0: 2C 10 00 00 00 00 00 00 07 00 02 00 FA 10 00 00  ,...............
  00003CE0: 00 00 00 00 0A 00 01 10 40 00 00 00 01 00 F2 F1  ........@.......
  00003CF0: 0A 00 02 10 FC 10 00 00 0A 00 00 00 2A 00 05 10  ............*...
  00003D00: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00003D10: 00 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00003D20: 5F 49 4E 46 4F F3 F2 F1 0A 00 01 10 FE 10 00 00  _INFO...........
  00003D30: 01 00 F2 F1 0A 00 02 10 FF 10 00 00 0A 00 00 00  ................
  00003D40: 12 00 01 12 03 00 00 00 75 00 00 00 FD 10 00 00  ........u.......
  00003D50: 00 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003D60: 00 00 00 00 07 00 03 00 01 11 00 00 00 00 00 00  ................
  00003D70: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00003D80: 00 00 00 00 00 00 11 5F 44 33 44 54 52 49 50 41  ......._D3DTRIPA
  00003D90: 54 43 48 5F 49 4E 46 4F 0A 00 01 10 03 11 00 00  TCH_INFO........
  00003DA0: 01 00 F2 F1 0A 00 02 10 04 11 00 00 0A 00 00 00  ................
  00003DB0: 12 00 01 12 03 00 00 00 75 00 00 00 FD 10 00 00  ........u.......
  00003DC0: 05 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003DD0: 00 00 00 00 07 00 03 00 06 11 00 00 00 00 00 00  ................
  00003DE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003DF0: 07 00 01 00 10 10 00 00 00 00 00 00 0A 00 01 12  ................
  00003E00: 01 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003E10: 2C 10 00 00 00 00 00 00 07 00 01 00 09 11 00 00  ,...............
  00003E20: 00 00 00 00 0A 00 01 12 01 00 00 00 22 04 00 00  ............"...
  00003E30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003E40: 07 00 01 00 0B 11 00 00 00 00 00 00 1A 00 09 10  ................
  00003E50: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003E60: 31 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  1...............
  00003E70: DB 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003E80: 2C 10 00 00 00 00 00 00 07 00 02 00 0E 11 00 00  ,...............
  00003E90: 00 00 00 00 2E 00 05 10 00 00 80 00 00 00 00 00  ................
  00003EA0: 00 00 00 00 00 00 00 00 00 00 19 5F 44 33 44 56  ..........._D3DV
  00003EB0: 45 52 54 45 58 41 54 54 52 49 42 55 54 45 46 4F  ERTEXATTRIBUTEFO
  00003EC0: 52 4D 41 54 0A 00 02 10 10 11 00 00 0A 00 00 00  RMAT............
  00003ED0: 0E 00 01 12 02 00 00 00 11 11 00 00 22 00 00 00  ............"...
  00003EE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003EF0: 07 00 02 00 12 11 00 00 00 00 00 00 0E 00 01 12  ................
  00003F00: 02 00 00 00 22 00 00 00 FD 10 00 00 1A 00 09 10  ...."...........
  00003F10: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003F20: 14 11 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003F30: 22 00 00 00 75 04 00 00 1A 00 09 10 12 00 00 00  "...u...........
  00003F40: 2C 10 00 00 00 00 00 00 07 00 02 00 16 11 00 00  ,...............
  00003F50: 00 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  00003F60: 22 04 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  00003F70: 00 00 00 00 07 00 02 00 18 11 00 00 00 00 00 00  ................
  00003F80: 0A 00 01 10 21 00 00 00 01 00 F2 F1 0A 00 02 10  ....!...........
  00003F90: 1A 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  00003FA0: CF 10 00 00 75 00 00 00 1B 11 00 00 1A 00 09 10  ....u...........
  00003FB0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00003FC0: 1C 11 00 00 00 00 00 00 1A 00 01 12 05 00 00 00  ................
  00003FD0: CF 10 00 00 75 00 00 00 D5 10 00 00 D5 10 00 00  ....u...........
  00003FE0: 75 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  u...........,...
  00003FF0: 00 00 00 00 07 00 05 00 1E 11 00 00 00 00 00 00  ................
  00004000: 0E 00 01 12 02 00 00 00 75 00 00 00 1B 11 00 00  ........u.......
  00004010: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004020: 07 00 02 00 20 11 00 00 00 00 00 00 96 00 03 12  .... ...........
  00004030: 03 04 03 00 00 00 0E 44 33 44 50 41 4C 45 54 54  .......D3DPALETT
  00004040: 45 5F 32 35 36 F3 F2 F1 03 04 03 00 01 00 0E 44  E_256..........D
  00004050: 33 44 50 41 4C 45 54 54 45 5F 31 32 38 F3 F2 F1  3DPALETTE_128...
  00004060: 03 04 03 00 02 00 0D 44 33 44 50 41 4C 45 54 54  .......D3DPALETT
  00004070: 45 5F 36 34 03 04 03 00 03 00 0D 44 33 44 50 41  E_64.......D3DPA
  00004080: 4C 45 54 54 45 5F 33 32 03 04 03 00 04 00 0E 44  LETTE_32.......D
  00004090: 33 44 50 41 4C 45 54 54 45 5F 4D 41 58 F3 F2 F1  3DPALETTE_MAX...
  000040A0: 03 04 03 00 04 80 FF FF FF 7F 16 44 33 44 50 41  ...........D3DPA
  000040B0: 4C 45 54 54 45 5F 46 4F 52 43 45 5F 44 57 4F 52  LETTE_FORCE_DWOR
  000040C0: 44 F3 F2 F1 1E 00 07 10 06 00 00 00 74 00 00 00  D...........t...
  000040D0: 22 11 00 00 0F 5F 44 33 44 50 41 4C 45 54 54 45  "...._D3DPALETTE
  000040E0: 53 49 5A 45 22 00 05 10 00 00 80 00 00 00 00 00  SIZE"...........
  000040F0: 00 00 00 00 00 00 00 00 00 00 0A 44 33 44 50 61  ...........D3DPa
  00004100: 6C 65 74 74 65 F3 F2 F1 0A 00 02 10 24 11 00 00  lette.......$...
  00004110: 0A 00 00 00 0A 00 02 10 25 11 00 00 0A 00 00 00  ........%.......
  00004120: 0E 00 01 12 02 00 00 00 23 11 00 00 26 11 00 00  ........#...&...
  00004130: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004140: 07 00 02 00 27 11 00 00 00 00 00 00 0E 00 01 12  ....'...........
  00004150: 02 00 00 00 22 00 00 00 26 11 00 00 1A 00 09 10  ...."...&.......
  00004160: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004170: 29 11 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  )...............
  00004180: 22 00 00 00 25 11 00 00 1A 00 09 10 12 00 00 00  "...%...........
  00004190: 2C 10 00 00 00 00 00 00 07 00 02 00 2B 11 00 00  ,...........+...
  000041A0: 00 00 00 00 1A 00 01 12 05 00 00 00 51 10 00 00  ............Q...
  000041B0: 4D 10 00 00 4D 10 00 00 74 00 00 00 22 00 00 00  M...M...t..."...
  000041C0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000041D0: 07 00 05 00 2D 11 00 00 00 00 00 00 0A 00 01 12  ....-...........
  000041E0: 01 00 00 00 74 00 00 00 1A 00 09 10 12 00 00 00  ....t...........
  000041F0: 2C 10 00 00 00 00 00 00 07 00 01 00 2F 11 00 00  ,.........../...
  00004200: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  00004210: 75 04 00 00 23 04 00 00 1A 00 09 10 12 00 00 00  u...#...........
  00004220: 2C 10 00 00 00 00 00 00 07 00 03 00 31 11 00 00  ,...........1...
  00004230: 00 00 00 00 1A 00 09 10 74 00 00 00 2C 10 00 00  ........t...,...
  00004240: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00004250: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00004260: 00 00 00 00 00 00 10 5F 44 33 44 46 49 45 4C 44  ......._D3DFIELD
  00004270: 5F 53 54 41 54 55 53 F1 0A 00 02 10 34 11 00 00  _STATUS.....4...
  00004280: 0A 00 00 00 0A 00 01 12 01 00 00 00 35 11 00 00  ............5...
  00004290: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000042A0: 07 00 01 00 36 11 00 00 00 00 00 00 12 00 01 12  ....6...........
  000042B0: 03 00 00 00 74 00 00 00 40 00 00 00 40 00 00 00  ....t...@...@...
  000042C0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000042D0: 07 00 03 00 38 11 00 00 00 00 00 00 1A 00 01 12  ....8...........
  000042E0: 05 00 00 00 74 00 00 00 40 00 00 00 40 00 00 00  ....t...@...@...
  000042F0: 40 00 00 00 40 00 00 00 1A 00 09 10 12 00 00 00  @...@...........
  00004300: 2C 10 00 00 00 00 00 00 07 00 05 00 3A 11 00 00  ,...........:...
  00004310: 00 00 00 00 12 00 01 12 03 00 00 00 74 00 00 00  ............t...
  00004320: 11 00 00 00 11 00 00 00 1A 00 09 10 12 00 00 00  ................
  00004330: 2C 10 00 00 00 00 00 00 07 00 03 00 3C 11 00 00  ,...........<...
  00004340: 00 00 00 00 1A 00 01 12 05 00 00 00 74 00 00 00  ............t...
  00004350: 11 00 00 00 11 00 00 00 11 00 00 00 11 00 00 00  ................
  00004360: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004370: 07 00 05 00 3E 11 00 00 00 00 00 00 1A 00 01 12  ....>...........
  00004380: 05 00 00 00 74 00 00 00 20 00 00 00 20 00 00 00  ....t... ... ...
  00004390: 20 00 00 00 20 00 00 00 1A 00 09 10 12 00 00 00   ... ...........
  000043A0: 2C 10 00 00 00 00 00 00 07 00 05 00 40 11 00 00  ,...........@...
  000043B0: 00 00 00 00 0E 00 01 12 02 00 00 00 74 00 00 00  ............t...
  000043C0: 22 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  000043D0: 00 00 00 00 07 00 02 00 42 11 00 00 00 00 00 00  ........B.......
  000043E0: 0A 00 01 12 01 00 00 00 CF 10 00 00 1A 00 09 10  ................
  000043F0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00004400: 44 11 00 00 00 00 00 00 1E 00 05 10 00 00 80 00  D...............
  00004410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 44  ...............D
  00004420: 33 44 46 69 78 75 70 F1 0A 00 02 10 46 11 00 00  3DFixup.....F...
  00004430: 0A 00 00 00 0A 00 02 10 47 11 00 00 0A 00 00 00  ........G.......
  00004440: 0E 00 01 12 02 00 00 00 75 00 00 00 48 11 00 00  ........u...H...
  00004450: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004460: 07 00 02 00 49 11 00 00 00 00 00 00 22 00 05 10  ....I......."...
  00004470: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00004480: 00 00 0D 44 33 44 50 75 73 68 42 75 66 66 65 72  ...D3DPushBuffer
  00004490: 0A 00 02 10 4B 11 00 00 0A 00 00 00 0A 00 02 10  ....K...........
  000044A0: 4C 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  L...............
  000044B0: 75 00 00 00 74 00 00 00 4D 11 00 00 1A 00 09 10  u...t...M.......
  000044C0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000044D0: 4E 11 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  N...............
  000044E0: 4C 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  L...........,...
  000044F0: 00 00 00 00 07 00 01 00 50 11 00 00 00 00 00 00  ........P.......
  00004500: 0E 00 01 12 02 00 00 00 4C 11 00 00 47 11 00 00  ........L...G...
  00004510: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004520: 07 00 02 00 52 11 00 00 00 00 00 00 0A 00 01 12  ....R...........
  00004530: 01 00 00 00 96 10 00 00 1A 00 09 10 12 00 00 00  ................
  00004540: 2C 10 00 00 00 00 00 00 07 00 01 00 54 11 00 00  ,...........T...
  00004550: 00 00 00 00 12 00 01 12 03 00 00 00 93 10 00 00  ................
  00004560: 93 10 00 00 93 10 00 00 1A 00 09 10 12 00 00 00  ................
  00004570: 2C 10 00 00 00 00 00 00 07 00 03 00 56 11 00 00  ,...........V...
  00004580: 00 00 00 00 16 00 01 12 04 00 00 00 75 00 00 00  ............u...
  00004590: 93 10 00 00 93 10 00 00 93 10 00 00 1A 00 09 10  ................
  000045A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 04 00  ....,...........
  000045B0: 58 11 00 00 00 00 00 00 12 00 01 12 03 00 00 00  X...............
  000045C0: 75 00 00 00 96 10 00 00 96 10 00 00 1A 00 09 10  u...............
  000045D0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000045E0: 5A 11 00 00 00 00 00 00 26 00 05 10 00 00 80 00  Z.......&.......
  000045F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 5F  ..............._
  00004600: 44 33 44 53 54 52 45 41 4D 5F 49 4E 50 55 54 F1  D3DSTREAM_INPUT.
  00004610: 0A 00 01 10 5C 11 00 00 01 00 F2 F1 0A 00 02 10  ....\...........
  00004620: 5D 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ]...............
  00004630: 22 00 00 00 75 00 00 00 5E 11 00 00 1A 00 09 10  "...u...^.......
  00004640: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004650: 5F 11 00 00 00 00 00 00 12 00 01 12 03 00 00 00  _...............
  00004660: 11 11 00 00 75 00 00 00 5E 11 00 00 1A 00 09 10  ....u...^.......
  00004670: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004680: 61 11 00 00 00 00 00 00 0A 00 02 10 5C 11 00 00  a...........\...
  00004690: 0A 00 00 00 12 00 01 12 03 00 00 00 22 04 00 00  ............"...
  000046A0: 75 04 00 00 63 11 00 00 1A 00 09 10 12 00 00 00  u...c...........
  000046B0: 2C 10 00 00 00 00 00 00 07 00 03 00 64 11 00 00  ,...........d...
  000046C0: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  000046D0: 74 00 00 00 8C 10 00 00 1A 00 09 10 12 00 00 00  t...............
  000046E0: 2C 10 00 00 00 00 00 00 07 00 03 00 66 11 00 00  ,...........f...
  000046F0: 00 00 00 00 0A 00 02 10 8A 10 00 00 0A 00 00 00  ................
  00004700: 12 00 01 12 03 00 00 00 22 04 00 00 74 04 00 00  ........"...t...
  00004710: 68 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  h...........,...
  00004720: 00 00 00 00 07 00 03 00 69 11 00 00 00 00 00 00  ........i.......
  00004730: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00004740: 00 00 00 00 00 00 08 5F 44 33 44 54 49 4C 45 F1  ......._D3DTILE.
  00004750: 0A 00 01 10 6B 11 00 00 01 00 F2 F1 0A 00 02 10  ....k...........
  00004760: 6C 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  l...............
  00004770: 22 00 00 00 6D 11 00 00 1A 00 09 10 12 00 00 00  "...m...........
  00004780: 2C 10 00 00 00 00 00 00 07 00 02 00 6E 11 00 00  ,...........n...
  00004790: 00 00 00 00 0A 00 02 10 6B 11 00 00 0A 00 00 00  ........k.......
  000047A0: 0E 00 01 12 02 00 00 00 22 00 00 00 70 11 00 00  ........"...p...
  000047B0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000047C0: 07 00 02 00 71 11 00 00 00 00 00 00 1A 00 09 10  ....q...........
  000047D0: 22 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  "...,...........
  000047E0: 31 10 00 00 00 00 00 00 16 00 01 12 04 00 00 00  1...............
  000047F0: 22 00 00 00 22 00 00 00 DB 10 00 00 22 00 00 00  "..."......."...
  00004800: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004810: 07 00 04 00 74 11 00 00 00 00 00 00 16 00 01 12  ....t...........
  00004820: 04 00 00 00 22 00 00 00 22 00 00 00 22 04 00 00  ...."..."..."...
  00004830: 22 00 00 00 1A 00 09 10 03 00 00 00 2C 10 00 00  "...........,...
  00004840: 00 00 00 00 07 00 04 00 76 11 00 00 00 00 00 00  ........v.......
  00004850: 0A 00 02 10 22 04 00 00 0A 00 00 00 0E 00 01 12  ...."...........
  00004860: 02 00 00 00 22 00 00 00 78 11 00 00 1A 00 09 10  ...."...x.......
  00004870: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004880: 79 11 00 00 00 00 00 00 1A 00 09 10 03 00 00 00  y...............
  00004890: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  000048A0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000048B0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 33 44 56  ..........._D3DV
  000048C0: 42 4C 41 4E 4B 44 41 54 41 F3 F2 F1 0A 00 02 10  BLANKDATA.......
  000048D0: 7C 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  |...............
  000048E0: 7D 11 00 00 0E 00 08 10 03 00 00 00 00 00 01 00  }...............
  000048F0: 7E 11 00 00 0A 00 02 10 7F 11 00 00 0A 00 00 00  ~...............
  00004900: 0A 00 01 12 01 00 00 00 80 11 00 00 1A 00 09 10  ................
  00004910: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00004920: 81 11 00 00 00 00 00 00 22 00 05 10 00 00 80 00  ........".......
  00004930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0C 5F  ..............._
  00004940: 44 33 44 53 57 41 50 44 41 54 41 F1 0A 00 02 10  D3DSWAPDATA.....
  00004950: 83 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00004960: 84 11 00 00 0E 00 08 10 03 00 00 00 00 00 01 00  ................
  00004970: 85 11 00 00 0A 00 02 10 86 11 00 00 0A 00 00 00  ................
  00004980: 0A 00 01 12 01 00 00 00 87 11 00 00 1A 00 09 10  ................
  00004990: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  000049A0: 88 11 00 00 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  000049B0: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  000049C0: 00 00 00 00 1A 00 09 10 74 00 00 00 2C 10 00 00  ........t...,...
  000049D0: 00 00 00 00 07 00 01 00 BB 10 00 00 00 00 00 00  ................
  000049E0: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000049F0: 07 00 01 00 BB 10 00 00 00 00 00 00 5A 00 03 12  ............Z...
  00004A00: 03 04 03 00 00 00 10 44 33 44 43 41 4C 4C 42 41  .......D3DCALLBA
  00004A10: 43 4B 5F 52 45 41 44 F1 03 04 03 00 01 00 11 44  CK_READ........D
  00004A20: 33 44 43 41 4C 4C 42 41 43 4B 5F 57 52 49 54 45  3DCALLBACK_WRITE
  00004A30: 03 04 03 00 04 80 FF FF FF 7F 1B 44 33 44 43 41  ...........D3DCA
  00004A40: 4C 4C 42 41 43 4B 54 59 50 45 5F 46 4F 52 43 45  LLBACKTYPE_FORCE
  00004A50: 5F 44 57 4F 52 44 F2 F1 22 00 07 10 03 00 00 00  _DWORD..".......
  00004A60: 74 00 00 00 8D 11 00 00 10 5F 44 33 44 43 41 4C  t........_D3DCAL
  00004A70: 4C 42 41 43 4B 54 59 50 45 F3 F2 F1 0E 00 08 10  LBACKTYPE.......
  00004A80: 03 00 00 00 00 00 01 00 BB 10 00 00 0A 00 02 10  ................
  00004A90: 8F 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  00004AA0: 8E 11 00 00 90 11 00 00 22 00 00 00 1A 00 09 10  ........".......
  00004AB0: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004AC0: 91 11 00 00 00 00 00 00 1A 00 09 10 03 00 00 00  ................
  00004AD0: 2C 10 00 00 00 00 00 00 07 00 01 00 2F 11 00 00  ,.........../...
  00004AE0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00004AF0: 00 00 00 00 00 00 00 00 00 00 11 5F 44 33 44 43  ..........._D3DC
  00004B00: 4F 50 59 52 45 43 54 53 54 41 54 45 0A 00 01 10  OPYRECTSTATE....
  00004B10: 94 11 00 00 01 00 F2 F1 0A 00 02 10 95 11 00 00  ................
  00004B20: 0A 00 00 00 2A 00 05 10 00 00 80 00 00 00 00 00  ....*...........
  00004B30: 00 00 00 00 00 00 00 00 00 00 14 5F 44 33 44 43  ..........._D3DC
  00004B40: 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45 F1  OPYRECTROPSTATE.
  00004B50: 0A 00 01 10 97 11 00 00 01 00 F2 F1 0A 00 02 10  ................
  00004B60: 98 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00004B70: 96 11 00 00 99 11 00 00 1A 00 09 10 12 00 00 00  ................
  00004B80: 2C 10 00 00 00 00 00 00 07 00 02 00 9A 11 00 00  ,...............
  00004B90: 00 00 00 00 0A 00 02 10 94 11 00 00 0A 00 00 00  ................
  00004BA0: 0A 00 02 10 97 11 00 00 0A 00 00 00 0E 00 01 12  ................
  00004BB0: 02 00 00 00 9C 11 00 00 9D 11 00 00 1A 00 09 10  ................
  00004BC0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004BD0: 9E 11 00 00 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  00004BE0: 2C 10 00 00 00 00 00 00 07 00 01 00 BB 10 00 00  ,...............
  00004BF0: 00 00 00 00 0E 00 01 12 02 00 00 00 40 00 00 00  ............@...
  00004C00: 40 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  @...........,...
  00004C10: 00 00 00 00 07 00 02 00 A1 11 00 00 00 00 00 00  ................
  00004C20: 0E 00 01 12 02 00 00 00 40 04 00 00 40 04 00 00  ........@...@...
  00004C30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004C40: 07 00 02 00 A3 11 00 00 00 00 00 00 0A 00 01 12  ................
  00004C50: 01 00 00 00 22 00 00 00 1A 00 09 10 03 00 00 00  ...."...........
  00004C60: 2C 10 00 00 00 00 00 00 07 00 01 00 A5 11 00 00  ,...............
  00004C70: 00 00 00 00 1A 00 09 10 22 00 00 00 2C 10 00 00  ........"...,...
  00004C80: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00004C90: 7A 10 03 12 0B 14 0B 00 3D 10 00 00 06 41 64 64  z.......=....Add
  00004CA0: 52 65 66 F1 0B 14 0B 00 3D 10 00 00 07 52 65 6C  Ref.....=....Rel
  00004CB0: 65 61 73 65 0B 14 0B 00 40 10 00 00 0B 47 65 74  ease....@....Get
  00004CC0: 44 69 72 65 63 74 33 44 0B 14 0B 00 42 10 00 00  Direct3D....B...
  00004CD0: 0D 47 65 74 44 65 76 69 63 65 43 61 70 73 F2 F1  .GetDeviceCaps..
  00004CE0: 0B 14 0B 00 44 10 00 00 0E 47 65 74 44 69 73 70  ....D....GetDisp
  00004CF0: 6C 61 79 4D 6F 64 65 F1 0B 14 0B 00 48 10 00 00  layMode.....H...
  00004D00: 15 47 65 74 43 72 65 61 74 69 6F 6E 50 61 72 61  .GetCreationPara
  00004D10: 6D 65 74 65 72 73 F2 F1 0B 14 0B 00 4A 10 00 00  meters......J...
  00004D20: 05 52 65 73 65 74 F2 F1 0B 14 0B 00 4F 10 00 00  .Reset......O...
  00004D30: 07 50 72 65 73 65 6E 74 0B 14 0B 00 54 10 00 00  .Present....T...
  00004D40: 0D 47 65 74 42 61 63 6B 42 75 66 66 65 72 F2 F1  .GetBackBuffer..
  00004D50: 0B 14 0B 00 58 10 00 00 0F 47 65 74 52 61 73 74  ....X....GetRast
  00004D60: 65 72 53 74 61 74 75 73 0B 14 0B 00 5D 10 00 00  erStatus....]...
  00004D70: 0C 53 65 74 47 61 6D 6D 61 52 61 6D 70 F3 F2 F1  .SetGammaRamp...
  00004D80: 0B 14 0B 00 60 10 00 00 0C 47 65 74 47 61 6D 6D  ....`....GetGamm
  00004D90: 61 52 61 6D 70 F3 F2 F1 0B 14 0B 00 65 10 00 00  aRamp.......e...
  00004DA0: 0D 43 72 65 61 74 65 54 65 78 74 75 72 65 F2 F1  .CreateTexture..
  00004DB0: 0B 14 0B 00 6A 10 00 00 13 43 72 65 61 74 65 56  ....j....CreateV
  00004DC0: 6F 6C 75 6D 65 54 65 78 74 75 72 65 0B 14 0B 00  olumeTexture....
  00004DD0: 6F 10 00 00 11 43 72 65 61 74 65 43 75 62 65 54  o....CreateCubeT
  00004DE0: 65 78 74 75 72 65 F2 F1 0B 14 0B 00 74 10 00 00  exture......t...
  00004DF0: 12 43 72 65 61 74 65 56 65 72 74 65 78 42 75 66  .CreateVertexBuf
  00004E00: 66 65 72 F1 0B 14 0B 00 79 10 00 00 11 43 72 65  fer.....y....Cre
  00004E10: 61 74 65 49 6E 64 65 78 42 75 66 66 65 72 F2 F1  ateIndexBuffer..
  00004E20: 0B 14 0B 00 7B 10 00 00 12 43 72 65 61 74 65 52  ....{....CreateR
  00004E30: 65 6E 64 65 72 54 61 72 67 65 74 F1 0B 14 0B 00  enderTarget.....
  00004E40: 7D 10 00 00 19 43 72 65 61 74 65 44 65 70 74 68  }....CreateDepth
  00004E50: 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F2 F1  StencilSurface..
  00004E60: 0B 14 0B 00 7F 10 00 00 12 43 72 65 61 74 65 49  .........CreateI
  00004E70: 6D 61 67 65 53 75 72 66 61 63 65 F1 0B 14 0B 00  mageSurface.....
  00004E80: 84 10 00 00 09 43 6F 70 79 52 65 63 74 73 F2 F1  .....CopyRects..
  00004E90: 0B 14 0B 00 86 10 00 00 0F 53 65 74 52 65 6E 64  .........SetRend
  00004EA0: 65 72 54 61 72 67 65 74 0B 14 0B 00 88 10 00 00  erTarget........
  00004EB0: 0F 47 65 74 52 65 6E 64 65 72 54 61 72 67 65 74  .GetRenderTarget
  00004EC0: 0B 14 0B 00 88 10 00 00 16 47 65 74 44 65 70 74  .........GetDept
  00004ED0: 68 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F1  hStencilSurface.
  00004EE0: 0B 14 0B 00 89 10 00 00 0A 42 65 67 69 6E 53 63  .........BeginSc
  00004EF0: 65 6E 65 F1 0B 14 0B 00 89 10 00 00 08 45 6E 64  ene..........End
  00004F00: 53 63 65 6E 65 F3 F2 F1 0B 14 0B 00 8E 10 00 00  Scene...........
  00004F10: 05 43 6C 65 61 72 F2 F1 0B 14 0B 00 95 10 00 00  .Clear..........
  00004F20: 0C 53 65 74 54 72 61 6E 73 66 6F 72 6D F3 F2 F1  .SetTransform...
  00004F30: 0B 14 0B 00 98 10 00 00 0C 47 65 74 54 72 61 6E  .........GetTran
  00004F40: 73 66 6F 72 6D F3 F2 F1 0B 14 0B 00 95 10 00 00  sform...........
  00004F50: 11 4D 75 6C 74 69 70 6C 79 54 72 61 6E 73 66 6F  .MultiplyTransfo
  00004F60: 72 6D F2 F1 0B 14 0B 00 9D 10 00 00 0B 53 65 74  rm...........Set
  00004F70: 56 69 65 77 70 6F 72 74 0B 14 0B 00 A0 10 00 00  Viewport........
  00004F80: 0B 47 65 74 56 69 65 77 70 6F 72 74 0B 14 0B 00  .GetViewport....
  00004F90: A5 10 00 00 0B 53 65 74 4D 61 74 65 72 69 61 6C  .....SetMaterial
  00004FA0: 0B 14 0B 00 A8 10 00 00 0B 47 65 74 4D 61 74 65  .........GetMate
  00004FB0: 72 69 61 6C 0B 14 0B 00 AD 10 00 00 08 53 65 74  rial.........Set
  00004FC0: 4C 69 67 68 74 F3 F2 F1 0B 14 0B 00 B0 10 00 00  Light...........
  00004FD0: 08 47 65 74 4C 69 67 68 74 F3 F2 F1 0B 14 0B 00  .GetLight.......
  00004FE0: B2 10 00 00 0B 4C 69 67 68 74 45 6E 61 62 6C 65  .....LightEnable
  00004FF0: 0B 14 0B 00 B4 10 00 00 0E 47 65 74 4C 69 67 68  .........GetLigh
  00005000: 74 45 6E 61 62 6C 65 F1 0B 14 0B 00 B8 10 00 00  tEnable.........
  00005010: 0E 53 65 74 52 65 6E 64 65 72 53 74 61 74 65 F1  .SetRenderState.
  00005020: 0B 14 0B 00 BA 10 00 00 0E 47 65 74 52 65 6E 64  .........GetRend
  00005030: 65 72 53 74 61 74 65 F1 0B 14 0B 00 BC 10 00 00  erState.........
  00005040: 0F 41 70 70 6C 79 53 74 61 74 65 42 6C 6F 63 6B  .ApplyStateBlock
  00005050: 0B 14 0B 00 BC 10 00 00 11 43 61 70 74 75 72 65  .........Capture
  00005060: 53 74 61 74 65 42 6C 6F 63 6B F2 F1 0B 14 0B 00  StateBlock......
  00005070: BC 10 00 00 10 44 65 6C 65 74 65 53 74 61 74 65  .....DeleteState
  00005080: 42 6C 6F 63 6B F3 F2 F1 0B 14 0B 00 C0 10 00 00  Block...........
  00005090: 10 43 72 65 61 74 65 53 74 61 74 65 42 6C 6F 63  .CreateStateBloc
  000050A0: 6B F3 F2 F1 0B 14 0B 00 C5 10 00 00 0A 47 65 74  k............Get
  000050B0: 54 65 78 74 75 72 65 F1 0B 14 0B 00 C7 10 00 00  Texture.........
  000050C0: 0A 53 65 74 54 65 78 74 75 72 65 F1 0B 14 0B 00  .SetTexture.....
  000050D0: CB 10 00 00 14 47 65 74 54 65 78 74 75 72 65 53  .....GetTextureS
  000050E0: 74 61 67 65 53 74 61 74 65 F3 F2 F1 0B 14 0B 00  tageState.......
  000050F0: CD 10 00 00 14 53 65 74 54 65 78 74 75 72 65 53  .....SetTextureS
  00005100: 74 61 67 65 53 74 61 74 65 F3 F2 F1 0B 14 0B 00  tageState.......
  00005110: D1 10 00 00 0D 44 72 61 77 50 72 69 6D 69 74 69  .....DrawPrimiti
  00005120: 76 65 F2 F1 0B 14 0B 00 D3 10 00 00 14 44 72 61  ve...........Dra
  00005130: 77 49 6E 64 65 78 65 64 50 72 69 6D 69 74 69 76  wIndexedPrimitiv
  00005140: 65 F3 F2 F1 0B 14 0B 00 D7 10 00 00 0F 44 72 61  e............Dra
  00005150: 77 50 72 69 6D 69 74 69 76 65 55 50 0B 14 0B 00  wPrimitiveUP....
  00005160: D9 10 00 00 16 44 72 61 77 49 6E 64 65 78 65 64  .....DrawIndexed
  00005170: 50 72 69 6D 69 74 69 76 65 55 50 F1 0B 14 0B 00  PrimitiveUP.....
  00005180: DD 10 00 00 12 43 72 65 61 74 65 56 65 72 74 65  .....CreateVerte
  00005190: 78 53 68 61 64 65 72 F1 0B 14 0B 00 BC 10 00 00  xShader.........
  000051A0: 0F 53 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .SetVertexShader
  000051B0: 0B 14 0B 00 DF 10 00 00 0F 47 65 74 56 65 72 74  .........GetVert
  000051C0: 65 78 53 68 61 64 65 72 0B 14 0B 00 BC 10 00 00  exShader........
  000051D0: 12 44 65 6C 65 74 65 56 65 72 74 65 78 53 68 61  .DeleteVertexSha
  000051E0: 64 65 72 F1 0B 14 0B 00 E1 10 00 00 17 53 65 74  der..........Set
  000051F0: 56 65 72 74 65 78 53 68 61 64 65 72 43 6F 6E 73  VertexShaderCons
  00005200: 74 61 6E 74 0B 14 0B 00 E3 10 00 00 17 47 65 74  tant.........Get
  00005210: 56 65 72 74 65 78 53 68 61 64 65 72 43 6F 6E 73  VertexShaderCons
  00005220: 74 61 6E 74 0B 14 0B 00 E5 10 00 00 1A 47 65 74  tant.........Get
  00005230: 56 65 72 74 65 78 53 68 61 64 65 72 44 65 63 6C  VertexShaderDecl
  00005240: 61 72 61 74 69 6F 6E F1 0B 14 0B 00 E5 10 00 00  aration.........
  00005250: 17 47 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .GetVertexShader
  00005260: 46 75 6E 63 74 69 6F 6E 0B 14 0B 00 E7 10 00 00  Function........
  00005270: 0F 53 65 74 53 74 72 65 61 6D 53 6F 75 72 63 65  .SetStreamSource
  00005280: 0B 14 0B 00 E9 10 00 00 0F 47 65 74 53 74 72 65  .........GetStre
  00005290: 61 6D 53 6F 75 72 63 65 0B 14 0B 00 EB 10 00 00  amSource........
  000052A0: 0A 53 65 74 49 6E 64 69 63 65 73 F1 0B 14 0B 00  .SetIndices.....
  000052B0: ED 10 00 00 0A 47 65 74 49 6E 64 69 63 65 73 F1  .....GetIndices.
  000052C0: 0B 14 0B 00 F2 10 00 00 11 43 72 65 61 74 65 50  .........CreateP
  000052D0: 69 78 65 6C 53 68 61 64 65 72 F2 F1 0B 14 0B 00  ixelShader......
  000052E0: BC 10 00 00 0E 53 65 74 50 69 78 65 6C 53 68 61  .....SetPixelSha
  000052F0: 64 65 72 F1 0B 14 0B 00 F4 10 00 00 15 53 65 74  der..........Set
  00005300: 50 69 78 65 6C 53 68 61 64 65 72 50 72 6F 67 72  PixelShaderProgr
  00005310: 61 6D F2 F1 0B 14 0B 00 DF 10 00 00 0E 47 65 74  am...........Get
  00005320: 50 69 78 65 6C 53 68 61 64 65 72 F1 0B 14 0B 00  PixelShader.....
  00005330: BC 10 00 00 11 44 65 6C 65 74 65 50 69 78 65 6C  .....DeletePixel
  00005340: 53 68 61 64 65 72 F2 F1 0B 14 0B 00 F6 10 00 00  Shader..........
  00005350: 16 53 65 74 50 69 78 65 6C 53 68 61 64 65 72 43  .SetPixelShaderC
  00005360: 6F 6E 73 74 61 6E 74 F1 0B 14 0B 00 F8 10 00 00  onstant.........
  00005370: 16 47 65 74 50 69 78 65 6C 53 68 61 64 65 72 43  .GetPixelShaderC
  00005380: 6F 6E 73 74 61 6E 74 F1 0B 14 0B 00 FB 10 00 00  onstant.........
  00005390: 16 47 65 74 50 69 78 65 6C 53 68 61 64 65 72 46  .GetPixelShaderF
  000053A0: 75 6E 63 74 69 6F 6E F1 0B 14 0B 00 02 11 00 00  unction.........
  000053B0: 0D 44 72 61 77 52 65 63 74 50 61 74 63 68 F2 F1  .DrawRectPatch..
  000053C0: 0B 14 0B 00 07 11 00 00 0C 44 72 61 77 54 72 69  .........DrawTri
  000053D0: 50 61 74 63 68 F3 F2 F1 0B 14 0B 00 08 11 00 00  Patch...........
  000053E0: 0B 44 65 6C 65 74 65 50 61 74 63 68 0B 14 0B 00  .DeletePatch....
  000053F0: 0A 11 00 00 15 53 65 74 53 68 61 64 65 72 43 6F  .....SetShaderCo
  00005400: 6E 73 74 61 6E 74 4D 6F 64 65 F2 F1 0B 14 0B 00  nstantMode......
  00005410: 0C 11 00 00 15 47 65 74 53 68 61 64 65 72 43 6F  .....GetShaderCo
  00005420: 6E 73 74 61 6E 74 4D 6F 64 65 F2 F1 0B 14 0B 00  nstantMode......
  00005430: 0D 11 00 00 10 4C 6F 61 64 56 65 72 74 65 78 53  .....LoadVertexS
  00005440: 68 61 64 65 72 F3 F2 F1 0B 14 0B 00 0F 11 00 00  hader...........
  00005450: 17 4C 6F 61 64 56 65 72 74 65 78 53 68 61 64 65  .LoadVertexShade
  00005460: 72 50 72 6F 67 72 61 6D 0B 14 0B 00 0D 11 00 00  rProgram........
  00005470: 12 53 65 6C 65 63 74 56 65 72 74 65 78 53 68 61  .SelectVertexSha
  00005480: 64 65 72 F1 0B 14 0B 00 13 11 00 00 18 53 65 6C  der..........Sel
  00005490: 65 63 74 56 65 72 74 65 78 53 68 61 64 65 72 44  ectVertexShaderD
  000054A0: 69 72 65 63 74 F3 F2 F1 0B 14 0B 00 15 11 00 00  irect...........
  000054B0: 14 52 75 6E 56 65 72 74 65 78 53 74 61 74 65 53  .RunVertexStateS
  000054C0: 68 61 64 65 72 F3 F2 F1 0B 14 0B 00 17 11 00 00  hader...........
  000054D0: 13 47 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .GetVertexShader
  000054E0: 53 69 7A 65 0B 14 0B 00 19 11 00 00 13 47 65 74  Size.........Get
  000054F0: 56 65 72 74 65 78 53 68 61 64 65 72 54 79 70 65  VertexShaderType
  00005500: 0B 14 0B 00 D1 10 00 00 0C 44 72 61 77 56 65 72  .........DrawVer
  00005510: 74 69 63 65 73 F3 F2 F1 0B 14 0B 00 1D 11 00 00  tices...........
  00005520: 13 44 72 61 77 49 6E 64 65 78 65 64 56 65 72 74  .DrawIndexedVert
  00005530: 69 63 65 73 0B 14 0B 00 D7 10 00 00 0E 44 72 61  ices.........Dra
  00005540: 77 56 65 72 74 69 63 65 73 55 50 F1 0B 14 0B 00  wVerticesUP.....
  00005550: 1F 11 00 00 15 44 72 61 77 49 6E 64 65 78 65 64  .....DrawIndexed
  00005560: 56 65 72 74 69 63 65 73 55 50 F2 F1 0B 14 0B 00  VerticesUP......
  00005570: 21 11 00 00 10 50 72 69 6D 65 56 65 72 74 65 78  !....PrimeVertex
  00005580: 43 61 63 68 65 F3 F2 F1 0B 14 0B 00 28 11 00 00  Cache.......(...
  00005590: 0D 43 72 65 61 74 65 50 61 6C 65 74 74 65 F2 F1  .CreatePalette..
  000055A0: 0B 14 0B 00 2A 11 00 00 0A 47 65 74 50 61 6C 65  ....*....GetPale
  000055B0: 74 74 65 F1 0B 14 0B 00 2C 11 00 00 0A 53 65 74  tte.....,....Set
  000055C0: 50 61 6C 65 74 74 65 F1 0B 14 0B 00 CD 10 00 00  Palette.........
  000055D0: 1D 53 65 74 54 65 78 74 75 72 65 53 74 61 67 65  .SetTextureStage
  000055E0: 53 74 61 74 65 4E 6F 74 49 6E 6C 69 6E 65 F2 F1  StateNotInline..
  000055F0: 0B 14 0B 00 B8 10 00 00 17 53 65 74 52 65 6E 64  .........SetRend
  00005600: 65 72 53 74 61 74 65 4E 6F 74 49 6E 6C 69 6E 65  erStateNotInline
  00005610: 0B 14 0B 00 A5 10 00 00 0F 53 65 74 42 61 63 6B  .........SetBack
  00005620: 4D 61 74 65 72 69 61 6C 0B 14 0B 00 A8 10 00 00  Material........
  00005630: 0F 47 65 74 42 61 63 6B 4D 61 74 65 72 69 61 6C  .GetBackMaterial
  00005640: 0B 14 0B 00 2E 11 00 00 0D 55 70 64 61 74 65 4F  .........UpdateO
  00005650: 76 65 72 6C 61 79 F2 F1 0B 14 0B 00 30 11 00 00  verlay......0...
  00005660: 0D 45 6E 61 62 6C 65 4F 76 65 72 6C 61 79 F2 F1  .EnableOverlay..
  00005670: 0B 14 0B 00 89 10 00 00 13 42 65 67 69 6E 56 69  .........BeginVi
  00005680: 73 69 62 69 6C 69 74 79 54 65 73 74 0B 14 0B 00  sibilityTest....
  00005690: BC 10 00 00 11 45 6E 64 56 69 73 69 62 69 6C 69  .....EndVisibili
  000056A0: 74 79 54 65 73 74 F2 F1 0B 14 0B 00 32 11 00 00  tyTest......2...
  000056B0: 17 47 65 74 56 69 73 69 62 69 6C 69 74 79 54 65  .GetVisibilityTe
  000056C0: 73 74 52 65 73 75 6C 74 0B 14 0B 00 33 11 00 00  stResult....3...
  000056D0: 16 47 65 74 4F 76 65 72 6C 61 79 55 70 64 61 74  .GetOverlayUpdat
  000056E0: 65 53 74 61 74 75 73 F1 0B 14 0B 00 37 11 00 00  eStatus.....7...
  000056F0: 15 47 65 74 44 69 73 70 6C 61 79 46 69 65 6C 64  .GetDisplayField
  00005700: 53 74 61 74 75 73 F2 F1 0B 14 0B 00 39 11 00 00  Status......9...
  00005710: 0F 53 65 74 56 65 72 74 65 78 44 61 74 61 32 66  .SetVertexData2f
  00005720: 0B 14 0B 00 3B 11 00 00 0F 53 65 74 56 65 72 74  ....;....SetVert
  00005730: 65 78 44 61 74 61 34 66 0B 14 0B 00 3D 11 00 00  exData4f....=...
  00005740: 0F 53 65 74 56 65 72 74 65 78 44 61 74 61 32 73  .SetVertexData2s
  00005750: 0B 14 0B 00 3F 11 00 00 0F 53 65 74 56 65 72 74  ....?....SetVert
  00005760: 65 78 44 61 74 61 34 73 0B 14 0B 00 41 11 00 00  exData4s....A...
  00005770: 10 53 65 74 56 65 72 74 65 78 44 61 74 61 34 75  .SetVertexData4u
  00005780: 62 F3 F2 F1 0B 14 0B 00 43 11 00 00 12 53 65 74  b.......C....Set
  00005790: 56 65 72 74 65 78 44 61 74 61 43 6F 6C 6F 72 F1  VertexDataColor.
  000057A0: 0B 14 0B 00 45 11 00 00 05 42 65 67 69 6E F2 F1  ....E....Begin..
  000057B0: 0B 14 0B 00 89 10 00 00 03 45 6E 64 0B 14 0B 00  .........End....
  000057C0: 4A 11 00 00 0B 43 72 65 61 74 65 46 69 78 75 70  J....CreateFixup
  000057D0: 0B 14 0B 00 4F 11 00 00 10 43 72 65 61 74 65 50  ....O....CreateP
  000057E0: 75 73 68 42 75 66 66 65 72 F3 F2 F1 0B 14 0B 00  ushBuffer.......
  000057F0: 51 11 00 00 0F 42 65 67 69 6E 50 75 73 68 42 75  Q....BeginPushBu
  00005800: 66 66 65 72 0B 14 0B 00 89 10 00 00 0D 45 6E 64  ffer.........End
  00005810: 50 75 73 68 42 75 66 66 65 72 F2 F1 0B 14 0B 00  PushBuffer......
  00005820: 53 11 00 00 0D 52 75 6E 50 75 73 68 42 75 66 66  S....RunPushBuff
  00005830: 65 72 F2 F1 0B 14 0B 00 DF 10 00 00 13 47 65 74  er...........Get
  00005840: 50 75 73 68 42 75 66 66 65 72 4F 66 66 73 65 74  PushBufferOffset
  00005850: 0B 14 0B 00 89 10 00 00 03 4E 6F 70 0B 14 0B 00  .........Nop....
  00005860: 55 11 00 00 1B 47 65 74 50 72 6F 6A 65 63 74 69  U....GetProjecti
  00005870: 6F 6E 56 69 65 77 70 6F 72 74 4D 61 74 72 69 78  onViewportMatrix
  00005880: 0B 14 0B 00 57 11 00 00 0C 53 65 74 4D 6F 64 65  ....W....SetMode
  00005890: 6C 56 69 65 77 F3 F2 F1 0B 14 0B 00 55 11 00 00  lView.......U...
  000058A0: 0C 47 65 74 4D 6F 64 65 6C 56 69 65 77 F3 F2 F1  .GetModelView...
  000058B0: 0B 14 0B 00 59 11 00 00 17 53 65 74 56 65 72 74  ....Y....SetVert
  000058C0: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  000058D0: 0B 14 0B 00 5B 11 00 00 17 47 65 74 56 65 72 74  ....[....GetVert
  000058E0: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  000058F0: 0B 14 0B 00 60 11 00 00 14 53 65 74 56 65 72 74  ....`....SetVert
  00005900: 65 78 53 68 61 64 65 72 49 6E 70 75 74 F3 F2 F1  exShaderInput...
  00005910: 0B 14 0B 00 62 11 00 00 1A 53 65 74 56 65 72 74  ....b....SetVert
  00005920: 65 78 53 68 61 64 65 72 49 6E 70 75 74 44 69 72  exShaderInputDir
  00005930: 65 63 74 F1 0B 14 0B 00 65 11 00 00 14 47 65 74  ect.....e....Get
  00005940: 56 65 72 74 65 78 53 68 61 64 65 72 49 6E 70 75  VertexShaderInpu
  00005950: 74 F3 F2 F1 0B 14 0B 00 C7 10 00 00 0D 53 77 69  t............Swi
  00005960: 74 63 68 54 65 78 74 75 72 65 F2 F1 0B 14 0B 00  tchTexture......
  00005970: 89 10 00 00 07 53 75 73 70 65 6E 64 0B 14 0B 00  .....Suspend....
  00005980: 30 11 00 00 06 52 65 73 75 6D 65 F1 0B 14 0B 00  0....Resume.....
  00005990: 67 11 00 00 0B 53 65 74 53 63 69 73 73 6F 72 73  g....SetScissors
  000059A0: 0B 14 0B 00 6A 11 00 00 0B 47 65 74 53 63 69 73  ....j....GetScis
  000059B0: 73 6F 72 73 0B 14 0B 00 6F 11 00 00 07 53 65 74  sors....o....Set
  000059C0: 54 69 6C 65 0B 14 0B 00 72 11 00 00 07 47 65 74  Tile....r....Get
  000059D0: 54 69 6C 65 0B 14 0B 00 73 11 00 00 16 47 65 74  Tile....s....Get
  000059E0: 54 69 6C 65 43 6F 6D 70 72 65 73 73 69 6F 6E 54  TileCompressionT
  000059F0: 61 67 73 F1 0B 14 0B 00 75 11 00 00 19 53 65 74  ags.....u....Set
  00005A00: 54 69 6C 65 43 6F 6D 70 72 65 73 73 69 6F 6E 54  TileCompressionT
  00005A10: 61 67 42 69 74 73 F2 F1 0B 14 0B 00 77 11 00 00  agBits......w...
  00005A20: 19 47 65 74 54 69 6C 65 43 6F 6D 70 72 65 73 73  .GetTileCompress
  00005A30: 69 6F 6E 54 61 67 42 69 74 73 F2 F1 0B 14 0B 00  ionTagBits......
  00005A40: 7A 11 00 00 09 42 65 67 69 6E 50 75 73 68 F2 F1  z....BeginPush..
  00005A50: 0B 14 0B 00 DF 10 00 00 07 45 6E 64 50 75 73 68  .........EndPush
  00005A60: 0B 14 0B 00 33 11 00 00 06 49 73 42 75 73 79 F1  ....3....IsBusy.
  00005A70: 0B 14 0B 00 7B 11 00 00 0E 42 6C 6F 63 6B 55 6E  ....{....BlockUn
  00005A80: 74 69 6C 49 64 6C 65 F1 0B 14 0B 00 7B 11 00 00  tilIdle.....{...
  00005A90: 0E 4B 69 63 6B 50 75 73 68 42 75 66 66 65 72 F1  .KickPushBuffer.
  00005AA0: 0B 14 0B 00 82 11 00 00 18 53 65 74 56 65 72 74  .........SetVert
  00005AB0: 69 63 61 6C 42 6C 61 6E 6B 43 61 6C 6C 62 61 63  icalBlankCallbac
  00005AC0: 6B F3 F2 F1 0B 14 0B 00 89 11 00 00 0F 53 65 74  k............Set
  00005AD0: 53 77 61 70 43 61 6C 6C 62 61 63 6B 0B 14 0B 00  SwapCallback....
  00005AE0: 7B 11 00 00 17 42 6C 6F 63 6B 55 6E 74 69 6C 56  {....BlockUntilV
  00005AF0: 65 72 74 69 63 61 6C 42 6C 61 6E 6B 0B 14 0B 00  erticalBlank....
  00005B00: 8A 11 00 00 0B 49 6E 73 65 72 74 46 65 6E 63 65  .....InsertFence
  00005B10: 0B 14 0B 00 8B 11 00 00 0E 49 73 46 65 6E 63 65  .........IsFence
  00005B20: 50 65 6E 64 69 6E 67 F1 0B 14 0B 00 8C 11 00 00  Pending.........
  00005B30: 0C 42 6C 6F 63 6B 4F 6E 46 65 6E 63 65 F3 F2 F1  .BlockOnFence...
  00005B40: 0B 14 0B 00 92 11 00 00 0E 49 6E 73 65 72 74 43  .........InsertC
  00005B50: 61 6C 6C 62 61 63 6B F1 0B 14 0B 00 7B 11 00 00  allback.....{...
  00005B60: 10 46 6C 75 73 68 56 65 72 74 65 78 43 61 63 68  .FlushVertexCach
  00005B70: 65 F3 F2 F1 0B 14 0B 00 8C 11 00 00 10 53 65 74  e............Set
  00005B80: 46 6C 69 63 6B 65 72 46 69 6C 74 65 72 F3 F2 F1  FlickerFilter...
  00005B90: 0B 14 0B 00 93 11 00 00 14 53 65 74 53 6F 66 74  .........SetSoft
  00005BA0: 44 69 73 70 6C 61 79 46 69 6C 74 65 72 F3 F2 F1  DisplayFilter...
  00005BB0: 0B 14 0B 00 9B 11 00 00 11 53 65 74 43 6F 70 79  .........SetCopy
  00005BC0: 52 65 63 74 73 53 74 61 74 65 F2 F1 0B 14 0B 00  RectsState......
  00005BD0: 9F 11 00 00 11 47 65 74 43 6F 70 79 52 65 63 74  .....GetCopyRect
  00005BE0: 73 53 74 61 74 65 F2 F1 0B 14 0B 00 89 10 00 00  sState..........
  00005BF0: 0E 50 65 72 73 69 73 74 44 69 73 70 6C 61 79 F1  .PersistDisplay.
  00005C00: 0B 14 0B 00 88 10 00 00 13 47 65 74 50 65 72 73  .........GetPers
  00005C10: 69 73 74 65 64 53 75 72 66 61 63 65 0B 14 0B 00  istedSurface....
  00005C20: A0 11 00 00 04 53 77 61 70 F3 F2 F1 0B 14 0B 00  .....Swap.......
  00005C30: A2 11 00 00 12 53 65 74 42 61 63 6B 42 75 66 66  .....SetBackBuff
  00005C40: 65 72 53 63 61 6C 65 F1 0B 14 0B 00 A4 11 00 00  erScale.........
  00005C50: 12 47 65 74 42 61 63 6B 42 75 66 66 65 72 53 63  .GetBackBufferSc
  00005C60: 61 6C 65 F1 0B 14 0B 00 A2 11 00 00 14 53 65 74  ale..........Set
  00005C70: 53 63 72 65 65 6E 53 70 61 63 65 4F 66 66 73 65  ScreenSpaceOffse
  00005C80: 74 F3 F2 F1 0B 14 0B 00 A4 11 00 00 14 47 65 74  t............Get
  00005C90: 53 63 72 65 65 6E 53 70 61 63 65 4F 66 66 73 65  ScreenSpaceOffse
  00005CA0: 74 F3 F2 F1 0B 14 0B 00 A6 11 00 00 10 53 65 74  t............Set
  00005CB0: 4F 76 65 72 73 63 61 6E 43 6F 6C 6F 72 F3 F2 F1  OverscanColor...
  00005CC0: 0B 14 0B 00 A7 11 00 00 10 47 65 74 4F 76 65 72  .........GetOver
  00005CD0: 73 63 61 6E 43 6F 6C 6F 72 F3 F2 F1 0B 14 0B 00  scanColor.......
  00005CE0: A0 11 00 00 0E 53 65 74 44 65 62 75 67 4D 61 72  .....SetDebugMar
  00005CF0: 6B 65 72 F1 0B 14 0B 00 8A 11 00 00 0E 47 65 74  ker..........Get
  00005D00: 44 65 62 75 67 4D 61 72 6B 65 72 F1 1E 00 05 10  DebugMarker.....
  00005D10: A4 00 00 00 A8 11 00 00 00 00 00 00 00 00 00 00  ................
  00005D20: 01 00 09 44 33 44 44 65 76 69 63 65 9A 00 03 12  ...D3DDevice....
  00005D30: 03 04 03 00 01 00 15 44 33 44 53 57 41 50 45 46  .......D3DSWAPEF
  00005D40: 46 45 43 54 5F 44 49 53 43 41 52 44 03 04 03 00  FECT_DISCARD....
  00005D50: 02 00 12 44 33 44 53 57 41 50 45 46 46 45 43 54  ...D3DSWAPEFFECT
  00005D60: 5F 46 4C 49 50 F3 F2 F1 03 04 03 00 03 00 12 44  _FLIP..........D
  00005D70: 33 44 53 57 41 50 45 46 46 45 43 54 5F 43 4F 50  3DSWAPEFFECT_COP
  00005D80: 59 F3 F2 F1 03 04 03 00 04 00 18 44 33 44 53 57  Y..........D3DSW
  00005D90: 41 50 45 46 46 45 43 54 5F 43 4F 50 59 5F 56 53  APEFFECT_COPY_VS
  00005DA0: 59 4E 43 F1 03 04 03 00 04 80 FF FF FF 7F 19 44  YNC............D
  00005DB0: 33 44 53 57 41 50 45 46 46 45 43 54 5F 46 4F 52  3DSWAPEFFECT_FOR
  00005DC0: 43 45 5F 44 57 4F 52 44 1E 00 07 10 05 00 00 00  CE_DWORD........
  00005DD0: 74 00 00 00 AA 11 00 00 0E 5F 44 33 44 53 57 41  t........_D3DSWA
  00005DE0: 50 45 46 46 45 43 54 F1 1E 00 05 10 00 00 80 00  PEFFECT.........
  00005DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 48  ...............H
  00005E00: 57 4E 44 5F 5F F3 F2 F1 0A 00 02 10 AC 11 00 00  WND__...........
  00005E10: 0A 00 00 00 0E 00 03 10 51 10 00 00 11 00 00 00  ........Q.......
  00005E20: 0C 00 00 F1 BA 01 03 12 05 14 03 00 75 00 00 00  ............u...
  00005E30: 00 00 0F 42 61 63 6B 42 75 66 66 65 72 57 69 64  ...BackBufferWid
  00005E40: 74 68 F2 F1 05 14 03 00 75 00 00 00 04 00 10 42  th......u......B
  00005E50: 61 63 6B 42 75 66 66 65 72 48 65 69 67 68 74 F1  ackBufferHeight.
  00005E60: 05 14 03 00 1B 10 00 00 08 00 10 42 61 63 6B 42  ...........BackB
  00005E70: 75 66 66 65 72 46 6F 72 6D 61 74 F1 05 14 03 00  ufferFormat.....
  00005E80: 75 00 00 00 0C 00 0F 42 61 63 6B 42 75 66 66 65  u......BackBuffe
  00005E90: 72 43 6F 75 6E 74 F2 F1 05 14 03 00 22 00 00 00  rCount......"...
  00005EA0: 10 00 0F 4D 75 6C 74 69 53 61 6D 70 6C 65 54 79  ...MultiSampleTy
  00005EB0: 70 65 F2 F1 05 14 03 00 AB 11 00 00 14 00 0A 53  pe.............S
  00005EC0: 77 61 70 45 66 66 65 63 74 F3 F2 F1 05 14 03 00  wapEffect.......
  00005ED0: AD 11 00 00 18 00 0D 68 44 65 76 69 63 65 57 69  .......hDeviceWi
  00005EE0: 6E 64 6F 77 05 14 03 00 74 00 00 00 1C 00 08 57  ndow....t......W
  00005EF0: 69 6E 64 6F 77 65 64 F1 05 14 03 00 74 00 00 00  indowed.....t...
  00005F00: 20 00 16 45 6E 61 62 6C 65 41 75 74 6F 44 65 70   ..EnableAutoDep
  00005F10: 74 68 53 74 65 6E 63 69 6C F3 F2 F1 05 14 03 00  thStencil.......
  00005F20: 1B 10 00 00 24 00 16 41 75 74 6F 44 65 70 74 68  ....$..AutoDepth
  00005F30: 53 74 65 6E 63 69 6C 46 6F 72 6D 61 74 F3 F2 F1  StencilFormat...
  00005F40: 05 14 03 00 22 00 00 00 28 00 05 46 6C 61 67 73  ...."...(..Flags
  00005F50: 05 14 03 00 75 00 00 00 2C 00 1A 46 75 6C 6C 53  ....u...,..FullS
  00005F60: 63 72 65 65 6E 5F 52 65 66 72 65 73 68 52 61 74  creen_RefreshRat
  00005F70: 65 49 6E 48 7A F3 F2 F1 05 14 03 00 75 00 00 00  eInHz.......u...
  00005F80: 30 00 1F 46 75 6C 6C 53 63 72 65 65 6E 5F 50 72  0..FullScreen_Pr
  00005F90: 65 73 65 6E 74 61 74 69 6F 6E 49 6E 74 65 72 76  esentationInterv
  00005FA0: 61 6C F2 F1 05 14 03 00 AE 11 00 00 34 00 0E 42  al..........4..B
  00005FB0: 75 66 66 65 72 53 75 72 66 61 63 65 73 F3 F2 F1  ufferSurfaces...
  00005FC0: 05 14 03 00 51 10 00 00 40 00 13 44 65 70 74 68  ....Q...@..Depth
  00005FD0: 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F2 F1  StencilSurface..
  00005FE0: 2E 00 05 10 0F 00 00 00 AF 11 00 00 00 00 00 00  ................
  00005FF0: 00 00 00 00 44 00 17 5F 44 33 44 50 52 45 53 45  ....D.._D3DPRESE
  00006000: 4E 54 5F 50 41 52 41 4D 45 54 45 52 53 5F F2 F1  NT_PARAMETERS_..
  00006010: 66 00 03 12 05 14 03 00 75 00 00 00 00 00 0E 41  f.......u......A
  00006020: 64 61 70 74 65 72 4F 72 64 69 6E 61 6C F3 F2 F1  dapterOrdinal...
  00006030: 05 14 03 00 19 10 00 00 04 00 0A 44 65 76 69 63  ...........Devic
  00006040: 65 54 79 70 65 F3 F2 F1 05 14 03 00 AD 11 00 00  eType...........
  00006050: 08 00 0C 68 46 6F 63 75 73 57 69 6E 64 6F 77 F1  ...hFocusWindow.
  00006060: 05 14 03 00 22 00 00 00 0C 00 0D 42 65 68 61 76  ...."......Behav
  00006070: 69 6F 72 46 6C 61 67 73 36 00 05 10 04 00 00 00  iorFlags6.......
  00006080: B1 11 00 00 00 00 00 00 00 00 00 00 10 00 1E 5F  ..............._
  00006090: 44 33 44 44 45 56 49 43 45 5F 43 52 45 41 54 49  D3DDEVICE_CREATI
  000060A0: 4F 4E 5F 50 41 52 41 4D 45 54 45 52 53 F3 F2 F1  ON_PARAMETERS...
  000060B0: 46 00 03 12 05 14 03 00 12 00 00 00 00 00 04 6C  F..............l
  000060C0: 65 66 74 F1 05 14 03 00 12 00 00 00 04 00 03 74  eft............t
  000060D0: 6F 70 F2 F1 05 14 03 00 12 00 00 00 08 00 05 72  op.............r
  000060E0: 69 67 68 74 05 14 03 00 12 00 00 00 0C 00 06 62  ight...........b
  000060F0: 6F 74 74 6F 6D F3 F2 F1 1E 00 05 10 04 00 00 00  ottom...........
  00006100: B3 11 00 00 00 00 00 00 00 00 00 00 10 00 07 74  ...............t
  00006110: 61 67 52 45 43 54 F2 F1 26 00 05 10 00 00 80 00  agRECT..&.......
  00006120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 44  ...............D
  00006130: 33 44 50 69 78 65 6C 43 6F 6E 74 61 69 6E 65 72  3DPixelContainer
  00006140: 0A 00 01 12 01 00 00 00 C3 10 00 00 0A 00 02 10  ................
  00006150: 50 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  P...............
  00006160: 50 10 00 00 B7 11 00 00 07 00 01 00 B6 11 00 00  P...............
  00006170: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00006180: 00 00 00 00 00 00 00 00 00 00 10 5F 44 33 44 53  ..........._D3DS
  00006190: 55 52 46 41 43 45 5F 44 45 53 43 F1 0A 00 02 10  URFACE_DESC.....
  000061A0: B9 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  000061B0: BA 11 00 00 1A 00 09 10 12 00 00 00 50 10 00 00  ............P...
  000061C0: B7 11 00 00 07 00 01 00 BB 11 00 00 00 00 00 00  ................
  000061D0: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  000061E0: 00 00 00 00 00 00 0F 5F 44 33 44 4C 4F 43 4B 45  ......._D3DLOCKE
  000061F0: 44 5F 52 45 43 54 F2 F1 0A 00 02 10 BD 11 00 00  D_RECT..........
  00006200: 0A 00 00 00 12 00 01 12 03 00 00 00 BE 11 00 00  ................
  00006210: 4D 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  M..."...........
  00006220: 50 10 00 00 B7 11 00 00 07 00 03 00 BF 11 00 00  P...............
  00006230: 00 00 00 00 1A 00 09 10 12 00 00 00 50 10 00 00  ............P...
  00006240: B7 11 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006250: 72 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  r...............
  00006260: 0B 14 03 00 B8 11 00 00 0C 47 65 74 43 6F 6E 74  .........GetCont
  00006270: 61 69 6E 65 72 F3 F2 F1 0B 14 03 00 BC 11 00 00  ainer...........
  00006280: 07 47 65 74 44 65 73 63 0B 14 03 00 C0 11 00 00  .GetDesc........
  00006290: 08 4C 6F 63 6B 52 65 63 74 F3 F2 F1 0B 14 03 00  .LockRect.......
  000062A0: C1 11 00 00 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1  .....UnlockRect.
  000062B0: 05 14 03 00 C2 10 00 00 14 00 06 50 61 72 65 6E  ...........Paren
  000062C0: 74 F3 F2 F1 22 00 05 10 06 00 00 00 C2 11 00 00  t..."...........
  000062D0: 00 00 00 00 00 00 00 00 18 00 0A 44 33 44 53 75  ...........D3DSu
  000062E0: 72 66 61 63 65 F3 F2 F1 2A 00 03 12 05 14 03 00  rface...*.......
  000062F0: 74 00 00 00 00 00 08 49 6E 56 42 6C 61 6E 6B F1  t......InVBlank.
  00006300: 05 14 03 00 75 00 00 00 04 00 08 53 63 61 6E 4C  ....u......ScanL
  00006310: 69 6E 65 F1 26 00 05 10 02 00 00 00 C4 11 00 00  ine.&...........
  00006320: 00 00 00 00 00 00 00 00 08 00 11 5F 44 33 44 52  ..........._D3DR
  00006330: 41 53 54 45 52 5F 53 54 41 54 55 53 0E 00 03 10  ASTER_STATUS....
  00006340: 20 00 00 00 11 00 00 00 00 01 00 F1 32 00 03 12   ...........2...
  00006350: 05 14 03 00 C6 11 00 00 00 00 03 72 65 64 F2 F1  ...........red..
  00006360: 05 14 03 00 C6 11 00 00 00 01 05 67 72 65 65 6E  ...........green
  00006370: 05 14 03 00 C6 11 00 00 00 02 04 62 6C 75 65 F1  ...........blue.
  00006380: 22 00 05 10 03 00 00 00 C7 11 00 00 00 00 00 00  "...............
  00006390: 00 00 00 00 00 03 0D 5F 44 33 44 47 41 4D 4D 41  ......._D3DGAMMA
  000063A0: 52 41 4D 50 0E 00 01 12 02 00 00 00 75 00 00 00  RAMP........u...
  000063B0: BA 11 00 00 0A 00 02 10 61 10 00 00 0A 04 00 00  ........a.......
  000063C0: 1A 00 09 10 12 00 00 00 61 10 00 00 CA 11 00 00  ........a.......
  000063D0: 07 00 02 00 C9 11 00 00 00 00 00 00 0E 00 01 12  ................
  000063E0: 02 00 00 00 75 00 00 00 52 10 00 00 1A 00 09 10  ....u...R.......
  000063F0: 12 00 00 00 61 10 00 00 CA 11 00 00 07 00 02 00  ....a...........
  00006400: CC 11 00 00 00 00 00 00 16 00 01 12 04 00 00 00  ................
  00006410: 75 00 00 00 BE 11 00 00 4D 10 00 00 22 00 00 00  u.......M..."...
  00006420: 1A 00 09 10 12 00 00 00 61 10 00 00 CA 11 00 00  ........a.......
  00006430: 07 00 04 00 CE 11 00 00 00 00 00 00 1A 00 09 10  ................
  00006440: 12 00 00 00 61 10 00 00 CA 11 00 00 07 00 01 00  ....a...........
  00006450: 10 10 00 00 00 00 00 00 66 00 03 12 00 14 03 00  ........f.......
  00006460: C1 10 00 00 00 00 F2 F1 0B 14 03 00 CB 11 00 00  ................
  00006470: 0C 47 65 74 4C 65 76 65 6C 44 65 73 63 F3 F2 F1  .GetLevelDesc...
  00006480: 0B 14 03 00 CD 11 00 00 0F 47 65 74 53 75 72 66  .........GetSurf
  00006490: 61 63 65 4C 65 76 65 6C 0B 14 03 00 CF 11 00 00  aceLevel........
  000064A0: 08 4C 6F 63 6B 52 65 63 74 F3 F2 F1 0B 14 03 00  .LockRect.......
  000064B0: D0 11 00 00 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1  .....UnlockRect.
  000064C0: 22 00 05 10 05 00 00 00 D1 11 00 00 00 00 00 00  "...............
  000064D0: 00 00 00 00 14 00 0A 44 33 44 54 65 78 74 75 72  .......D3DTextur
  000064E0: 65 F3 F2 F1 26 00 05 10 00 00 80 00 00 00 00 00  e...&...........
  000064F0: 00 00 00 00 00 00 00 00 00 00 0F 5F 44 33 44 56  ..........._D3DV
  00006500: 4F 4C 55 4D 45 5F 44 45 53 43 F2 F1 0A 00 02 10  OLUME_DESC......
  00006510: D3 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00006520: 75 00 00 00 D4 11 00 00 0A 00 02 10 66 10 00 00  u...........f...
  00006530: 0A 04 00 00 1A 00 09 10 12 00 00 00 66 10 00 00  ............f...
  00006540: D6 11 00 00 07 00 02 00 D5 11 00 00 00 00 00 00  ................
  00006550: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00006560: 00 00 00 00 00 00 09 44 33 44 56 6F 6C 75 6D 65  .......D3DVolume
  00006570: 0A 00 02 10 D8 11 00 00 0A 00 00 00 0A 00 02 10  ................
  00006580: D9 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00006590: 75 00 00 00 DA 11 00 00 1A 00 09 10 12 00 00 00  u...............
  000065A0: 66 10 00 00 D6 11 00 00 07 00 02 00 DB 11 00 00  f...............
  000065B0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000065C0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 33 44 4C  ..........._D3DL
  000065D0: 4F 43 4B 45 44 5F 42 4F 58 F3 F2 F1 0A 00 02 10  OCKED_BOX.......
  000065E0: DD 11 00 00 0A 00 00 00 1E 00 05 10 00 00 80 00  ................
  000065F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07 5F  ..............._
  00006600: 44 33 44 42 4F 58 F2 F1 0A 00 01 10 DF 11 00 00  D3DBOX..........
  00006610: 01 00 F2 F1 0A 00 02 10 E0 11 00 00 0A 00 00 00  ................
  00006620: 16 00 01 12 04 00 00 00 75 00 00 00 DE 11 00 00  ........u.......
  00006630: E1 11 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00006640: 66 10 00 00 D6 11 00 00 07 00 04 00 E2 11 00 00  f...............
  00006650: 00 00 00 00 1A 00 09 10 12 00 00 00 66 10 00 00  ............f...
  00006660: D6 11 00 00 07 00 01 00 10 10 00 00 00 00 00 00  ................
  00006670: 62 00 03 12 00 14 03 00 C1 10 00 00 00 00 F2 F1  b...............
  00006680: 0B 14 03 00 D7 11 00 00 0C 47 65 74 4C 65 76 65  .........GetLeve
  00006690: 6C 44 65 73 63 F3 F2 F1 0B 14 03 00 DC 11 00 00  lDesc...........
  000066A0: 0E 47 65 74 56 6F 6C 75 6D 65 4C 65 76 65 6C F1  .GetVolumeLevel.
  000066B0: 0B 14 03 00 E3 11 00 00 07 4C 6F 63 6B 42 6F 78  .........LockBox
  000066C0: 0B 14 03 00 E4 11 00 00 09 55 6E 6C 6F 63 6B 42  .........UnlockB
  000066D0: 6F 78 F2 F1 26 00 05 10 05 00 00 00 E5 11 00 00  ox..&...........
  000066E0: 00 00 00 00 00 00 00 00 14 00 10 44 33 44 56 6F  ...........D3DVo
  000066F0: 6C 75 6D 65 54 65 78 74 75 72 65 F1 0A 00 02 10  lumeTexture.....
  00006700: 6B 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  k...............
  00006710: 6B 10 00 00 E7 11 00 00 07 00 02 00 C9 11 00 00  k...............
  00006720: 00 00 00 00 02 01 03 12 03 04 03 00 00 00 1A 44  ...............D
  00006730: 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45 5F 50  3DCUBEMAP_FACE_P
  00006740: 4F 53 49 54 49 56 45 5F 58 F3 F2 F1 03 04 03 00  OSITIVE_X.......
  00006750: 01 00 1A 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  00006760: 43 45 5F 4E 45 47 41 54 49 56 45 5F 58 F3 F2 F1  CE_NEGATIVE_X...
  00006770: 03 04 03 00 02 00 1A 44 33 44 43 55 42 45 4D 41  .......D3DCUBEMA
  00006780: 50 5F 46 41 43 45 5F 50 4F 53 49 54 49 56 45 5F  P_FACE_POSITIVE_
  00006790: 59 F3 F2 F1 03 04 03 00 03 00 1A 44 33 44 43 55  Y..........D3DCU
  000067A0: 42 45 4D 41 50 5F 46 41 43 45 5F 4E 45 47 41 54  BEMAP_FACE_NEGAT
  000067B0: 49 56 45 5F 59 F3 F2 F1 03 04 03 00 04 00 1A 44  IVE_Y..........D
  000067C0: 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45 5F 50  3DCUBEMAP_FACE_P
  000067D0: 4F 53 49 54 49 56 45 5F 5A F3 F2 F1 03 04 03 00  OSITIVE_Z.......
  000067E0: 05 00 1A 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  000067F0: 43 45 5F 4E 45 47 41 54 49 56 45 5F 5A F3 F2 F1  CE_NEGATIVE_Z...
  00006800: 03 04 03 00 04 80 FF FF FF 7F 1B 44 33 44 43 55  ...........D3DCU
  00006810: 42 45 4D 41 50 5F 46 41 43 45 5F 46 4F 52 43 45  BEMAP_FACE_FORCE
  00006820: 5F 44 57 4F 52 44 F2 F1 22 00 07 10 07 00 00 00  _DWORD..".......
  00006830: 74 00 00 00 E9 11 00 00 11 5F 44 33 44 43 55 42  t........_D3DCUB
  00006840: 45 4D 41 50 5F 46 41 43 45 53 F2 F1 12 00 01 12  EMAP_FACES......
  00006850: 03 00 00 00 EA 11 00 00 75 00 00 00 52 10 00 00  ........u...R...
  00006860: 1A 00 09 10 12 00 00 00 6B 10 00 00 E7 11 00 00  ........k.......
  00006870: 07 00 03 00 EB 11 00 00 00 00 00 00 1A 00 01 12  ................
  00006880: 05 00 00 00 EA 11 00 00 75 00 00 00 BE 11 00 00  ........u.......
  00006890: 4D 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  M..."...........
  000068A0: 6B 10 00 00 E7 11 00 00 07 00 05 00 ED 11 00 00  k...............
  000068B0: 00 00 00 00 0E 00 01 12 02 00 00 00 EA 11 00 00  ................
  000068C0: 75 00 00 00 1A 00 09 10 12 00 00 00 6B 10 00 00  u...........k...
  000068D0: E7 11 00 00 07 00 02 00 EF 11 00 00 00 00 00 00  ................
  000068E0: 6A 00 03 12 00 14 03 00 C1 10 00 00 00 00 F2 F1  j...............
  000068F0: 0B 14 03 00 E8 11 00 00 0C 47 65 74 4C 65 76 65  .........GetLeve
  00006900: 6C 44 65 73 63 F3 F2 F1 0B 14 03 00 EC 11 00 00  lDesc...........
  00006910: 11 47 65 74 43 75 62 65 4D 61 70 53 75 72 66 61  .GetCubeMapSurfa
  00006920: 63 65 F2 F1 0B 14 03 00 EE 11 00 00 08 4C 6F 63  ce...........Loc
  00006930: 6B 52 65 63 74 F3 F2 F1 0B 14 03 00 F0 11 00 00  kRect...........
  00006940: 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1 26 00 05 10  .UnlockRect.&...
  00006950: 05 00 00 00 F1 11 00 00 00 00 00 00 00 00 00 00  ................
  00006960: 14 00 0E 44 33 44 43 75 62 65 54 65 78 74 75 72  ...D3DCubeTextur
  00006970: 65 F3 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  e..."...........
  00006980: 00 00 00 00 00 00 00 00 00 00 0B 44 33 44 52 65  ...........D3DRe
  00006990: 73 6F 75 72 63 65 F2 F1 0A 00 02 10 20 04 00 00  source...... ...
  000069A0: 0A 00 00 00 16 00 01 12 04 00 00 00 75 00 00 00  ............u...
  000069B0: 75 00 00 00 F4 11 00 00 22 00 00 00 0A 00 02 10  u.......".......
  000069C0: 70 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  p...............
  000069D0: 70 10 00 00 F6 11 00 00 07 00 04 00 F5 11 00 00  p...............
  000069E0: 00 00 00 00 1A 00 09 10 12 00 00 00 70 10 00 00  ............p...
  000069F0: F6 11 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006A00: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  00006A10: 00 00 00 00 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  00006A20: 58 42 55 46 46 45 52 5F 44 45 53 43 0A 00 02 10  XBUFFER_DESC....
  00006A30: F9 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00006A40: FA 11 00 00 1A 00 09 10 12 00 00 00 70 10 00 00  ............p...
  00006A50: F6 11 00 00 07 00 01 00 FB 11 00 00 00 00 00 00  ................
  00006A60: 3E 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  >...............
  00006A70: 0B 14 03 00 F7 11 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  00006A80: 0B 14 03 00 F8 11 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  00006A90: 0B 14 03 00 FC 11 00 00 07 47 65 74 44 65 73 63  .........GetDesc
  00006AA0: 26 00 05 10 04 00 00 00 FD 11 00 00 00 00 00 00  &...............
  00006AB0: 00 00 00 00 0C 00 0F 44 33 44 56 65 72 74 65 78  .......D3DVertex
  00006AC0: 42 75 66 66 65 72 F2 F1 0A 00 02 10 75 10 00 00  Buffer......u...
  00006AD0: 0A 04 00 00 1A 00 09 10 12 00 00 00 75 10 00 00  ............u...
  00006AE0: FF 11 00 00 07 00 04 00 F5 11 00 00 00 00 00 00  ................
  00006AF0: 1A 00 09 10 12 00 00 00 75 10 00 00 FF 11 00 00  ........u.......
  00006B00: 07 00 00 00 09 10 00 00 00 00 00 00 2A 00 05 10  ............*...
  00006B10: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00006B20: 00 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46 46  ..._D3DINDEXBUFF
  00006B30: 45 52 5F 44 45 53 43 F1 0A 00 02 10 02 12 00 00  ER_DESC.........
  00006B40: 0A 00 00 00 0A 00 01 12 01 00 00 00 03 12 00 00  ................
  00006B50: 1A 00 09 10 12 00 00 00 75 10 00 00 FF 11 00 00  ........u.......
  00006B60: 07 00 01 00 04 12 00 00 00 00 00 00 3E 00 03 12  ............>...
  00006B70: 00 14 03 00 F3 11 00 00 00 00 F2 F1 0B 14 03 00  ................
  00006B80: 00 12 00 00 04 4C 6F 63 6B F3 F2 F1 0B 14 03 00  .....Lock.......
  00006B90: 01 12 00 00 06 55 6E 6C 6F 63 6B F1 0B 14 03 00  .....Unlock.....
  00006BA0: 05 12 00 00 07 47 65 74 44 65 73 63 26 00 05 10  .....GetDesc&...
  00006BB0: 04 00 00 00 06 12 00 00 00 00 00 00 00 00 00 00  ................
  00006BC0: 0C 00 0E 44 33 44 49 6E 64 65 78 42 75 66 66 65  ...D3DIndexBuffe
  00006BD0: 72 F3 F2 F1 0A 00 02 10 22 04 00 00 0A 00 00 00  r.......".......
  00006BE0: 0E 00 01 12 02 00 00 00 08 12 00 00 22 00 00 00  ............"...
  00006BF0: 0A 00 02 10 24 11 00 00 0A 04 00 00 1A 00 09 10  ....$...........
  00006C00: 12 00 00 00 24 11 00 00 0A 12 00 00 07 00 02 00  ....$...........
  00006C10: 09 12 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  00006C20: 24 11 00 00 0A 12 00 00 07 00 00 00 09 10 00 00  $...............
  00006C30: 00 00 00 00 1A 00 09 10 23 11 00 00 24 11 00 00  ........#...$...
  00006C40: 0A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006C50: 3E 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  >...............
  00006C60: 0B 14 03 00 0B 12 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  00006C70: 0B 14 03 00 0C 12 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  00006C80: 0B 14 03 00 0D 12 00 00 07 47 65 74 53 69 7A 65  .........GetSize
  00006C90: 22 00 05 10 04 00 00 00 0E 12 00 00 00 00 00 00  "...............
  00006CA0: 00 00 00 00 0C 00 0A 44 33 44 50 61 6C 65 74 74  .......D3DPalett
  00006CB0: 65 F3 F2 F1 1A 00 03 12 05 14 03 00 12 00 00 00  e...............
  00006CC0: 00 00 01 78 05 14 03 00 12 00 00 00 04 00 01 79  ...x...........y
  00006CD0: 1E 00 05 10 02 00 00 00 10 12 00 00 00 00 00 00  ................
  00006CE0: 00 00 00 00 08 00 08 74 61 67 50 4F 49 4E 54 F1  .......tagPOINT.
  00006CF0: B2 00 03 12 05 14 03 00 22 00 00 00 00 00 03 52  ........"......R
  00006D00: 6F 70 F2 F1 05 14 03 00 22 00 00 00 04 00 05 53  op......"......S
  00006D10: 68 61 70 65 05 14 03 00 22 00 00 00 08 00 0D 50  hape...."......P
  00006D20: 61 74 74 65 72 6E 53 65 6C 65 63 74 05 14 03 00  atternSelect....
  00006D30: 22 00 00 00 0C 00 0A 4D 6F 6E 6F 43 6F 6C 6F 72  "......MonoColor
  00006D40: 30 F3 F2 F1 05 14 03 00 22 00 00 00 10 00 0A 4D  0......."......M
  00006D50: 6F 6E 6F 43 6F 6C 6F 72 31 F3 F2 F1 05 14 03 00  onoColor1.......
  00006D60: 22 00 00 00 14 00 0C 4D 6F 6E 6F 50 61 74 74 65  "......MonoPatte
  00006D70: 72 6E 30 F1 05 14 03 00 22 00 00 00 18 00 0C 4D  rn0....."......M
  00006D80: 6F 6E 6F 50 61 74 74 65 72 6E 31 F1 05 14 03 00  onoPattern1.....
  00006D90: DB 10 00 00 1C 00 0C 43 6F 6C 6F 72 50 61 74 74  .......ColorPatt
  00006DA0: 65 72 6E F1 2A 00 05 10 08 00 00 00 12 12 00 00  ern.*...........
  00006DB0: 00 00 00 00 00 00 00 00 20 00 14 5F 44 33 44 43  ........ .._D3DC
  00006DC0: 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45 F1  OPYRECTROPSTATE.
  00006DD0: 56 02 03 12 03 04 03 00 00 00 20 44 33 44 43 4F  V......... D3DCO
  00006DE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006DF0: 4D 41 54 5F 44 45 46 41 55 4C 54 F1 03 04 03 00  MAT_DEFAULT.....
  00006E00: 01 00 1B 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ...D3DCOPYRECT_C
  00006E10: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 59 38 F2 F1  OLOR_FORMAT_Y8..
  00006E20: 03 04 03 00 02 00 2A 44 33 44 43 4F 50 59 52 45  ......*D3DCOPYRE
  00006E30: 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F  CT_COLOR_FORMAT_
  00006E40: 58 31 52 35 47 35 42 35 5F 5A 31 52 35 47 35 42  X1R5G5B5_Z1R5G5B
  00006E50: 35 F3 F2 F1 03 04 03 00 03 00 2A 44 33 44 43 4F  5.........*D3DCO
  00006E60: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006E70: 4D 41 54 5F 58 31 52 35 47 35 42 35 5F 4F 31 52  MAT_X1R5G5B5_O1R
  00006E80: 35 47 35 42 35 F3 F2 F1 03 04 03 00 04 00 1F 44  5G5B5..........D
  00006E90: 33 44 43 4F 50 59 52 45 43 54 5F 43 4F 4C 4F 52  3DCOPYRECT_COLOR
  00006EA0: 5F 46 4F 52 4D 41 54 5F 52 35 47 36 42 35 F2 F1  _FORMAT_R5G6B5..
  00006EB0: 03 04 03 00 05 00 1C 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  00006EC0: 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F  CT_COLOR_FORMAT_
  00006ED0: 59 31 36 F1 03 04 03 00 06 00 2A 44 33 44 43 4F  Y16.......*D3DCO
  00006EE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006EF0: 4D 41 54 5F 58 38 52 38 47 38 42 38 5F 5A 38 52  MAT_X8R8G8B8_Z8R
  00006F00: 38 47 38 42 38 F3 F2 F1 03 04 03 00 07 00 2A 44  8G8B8.........*D
  00006F10: 33 44 43 4F 50 59 52 45 43 54 5F 43 4F 4C 4F 52  3DCOPYRECT_COLOR
  00006F20: 5F 46 4F 52 4D 41 54 5F 58 38 52 38 47 38 42 38  _FORMAT_X8R8G8B8
  00006F30: 5F 4F 38 52 38 47 38 42 38 F3 F2 F1 03 04 03 00  _O8R8G8B8.......
  00006F40: 08 00 2E 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ...D3DCOPYRECT_C
  00006F50: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 58 31 41 37  OLOR_FORMAT_X1A7
  00006F60: 52 38 47 38 42 38 5F 5A 31 41 37 52 38 47 38 42  R8G8B8_Z1A7R8G8B
  00006F70: 38 F3 F2 F1 03 04 03 00 09 00 2E 44 33 44 43 4F  8..........D3DCO
  00006F80: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006F90: 4D 41 54 5F 58 31 41 37 52 38 47 38 42 38 5F 4F  MAT_X1A7R8G8B8_O
  00006FA0: 31 41 37 52 38 47 38 42 38 F3 F2 F1 03 04 03 00  1A7R8G8B8.......
  00006FB0: 0A 00 21 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ..!D3DCOPYRECT_C
  00006FC0: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 41 38 52 38  OLOR_FORMAT_A8R8
  00006FD0: 47 38 42 38 03 04 03 00 0B 00 1C 44 33 44 43 4F  G8B8.......D3DCO
  00006FE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006FF0: 4D 41 54 5F 59 33 32 F1 03 04 03 00 04 80 FF FF  MAT_Y32.........
  00007000: FF 7F 24 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ..$D3DCOPYRECT_C
  00007010: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 46 4F 52 43  OLOR_FORMAT_FORC
  00007020: 45 5F 44 57 4F 52 44 F1 26 00 07 10 0D 00 00 00  E_DWORD.&.......
  00007030: 74 00 00 00 14 12 00 00 17 5F 44 33 44 43 4F 50  t........_D3DCOP
  00007040: 59 52 45 43 54 43 4F 4C 4F 52 46 4F 52 4D 41 54  YRECTCOLORFORMAT
  00007050: DE 00 03 12 03 04 03 00 00 00 17 44 33 44 43 4F  ...........D3DCO
  00007060: 50 59 52 45 43 54 5F 53 52 43 43 4F 50 59 5F 41  PYRECT_SRCCOPY_A
  00007070: 4E 44 F2 F1 03 04 03 00 01 00 13 44 33 44 43 4F  ND.........D3DCO
  00007080: 50 59 52 45 43 54 5F 52 4F 50 5F 41 4E 44 F2 F1  PYRECT_ROP_AND..
  00007090: 03 04 03 00 02 00 15 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  000070A0: 43 54 5F 42 4C 45 4E 44 5F 41 4E 44 03 04 03 00  CT_BLEND_AND....
  000070B0: 03 00 13 44 33 44 43 4F 50 59 52 45 43 54 5F 53  ...D3DCOPYRECT_S
  000070C0: 52 43 43 4F 50 59 F2 F1 03 04 03 00 04 00 1B 44  RCCOPY.........D
  000070D0: 33 44 43 4F 50 59 52 45 43 54 5F 53 52 43 43 4F  3DCOPYRECT_SRCCO
  000070E0: 50 59 5F 50 52 45 4D 55 4C 54 F2 F1 03 04 03 00  PY_PREMULT......
  000070F0: 05 00 19 44 33 44 43 4F 50 59 52 45 43 54 5F 42  ...D3DCOPYRECT_B
  00007100: 4C 45 4E 44 5F 50 52 45 4D 55 4C 54 03 04 03 00  LEND_PREMULT....
  00007110: 04 80 FF FF FF 7F 17 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  00007120: 43 54 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F2 F1  CT_FORCE_DWORD..
  00007130: 26 00 07 10 07 00 00 00 74 00 00 00 16 12 00 00  &.......t.......
  00007140: 15 5F 44 33 44 43 4F 50 59 52 45 43 54 4F 50 45  ._D3DCOPYRECTOPE
  00007150: 52 41 54 49 4F 4E F2 F1 C2 00 03 12 05 14 03 00  RATION..........
  00007160: 15 12 00 00 00 00 0B 43 6F 6C 6F 72 46 6F 72 6D  .......ColorForm
  00007170: 61 74 F2 F1 05 14 03 00 17 12 00 00 04 00 09 4F  at.............O
  00007180: 70 65 72 61 74 69 6F 6E 05 14 03 00 74 00 00 00  peration....t...
  00007190: 08 00 0E 43 6F 6C 6F 72 4B 65 79 45 6E 61 62 6C  ...ColorKeyEnabl
  000071A0: 65 F3 F2 F1 05 14 03 00 22 00 00 00 0C 00 0D 43  e......."......C
  000071B0: 6F 6C 6F 72 4B 65 79 56 61 6C 75 65 05 14 03 00  olorKeyValue....
  000071C0: 22 00 00 00 10 00 0A 42 6C 65 6E 64 41 6C 70 68  "......BlendAlph
  000071D0: 61 F3 F2 F1 05 14 03 00 22 00 00 00 14 00 0C 50  a......."......P
  000071E0: 72 65 6D 75 6C 74 41 6C 70 68 61 F1 05 14 03 00  remultAlpha.....
  000071F0: 22 00 00 00 18 00 0D 43 6C 69 70 70 69 6E 67 50  "......ClippingP
  00007200: 6F 69 6E 74 05 14 03 00 22 00 00 00 1C 00 0C 43  oint...."......C
  00007210: 6C 69 70 70 69 6E 67 53 69 7A 65 F1 26 00 05 10  lippingSize.&...
  00007220: 08 00 00 00 18 12 00 00 00 00 00 00 00 00 00 00  ................
  00007230: 20 00 11 5F 44 33 44 43 4F 50 59 52 45 43 54 53   .._D3DCOPYRECTS
  00007240: 54 41 54 45 42 00 03 12 05 14 03 00 12 00 00 00  TATEB...........
  00007250: 00 00 02 78 31 F3 F2 F1 05 14 03 00 12 00 00 00  ...x1...........
  00007260: 04 00 02 79 31 F3 F2 F1 05 14 03 00 12 00 00 00  ...y1...........
  00007270: 08 00 02 78 32 F3 F2 F1 05 14 03 00 12 00 00 00  ...x2...........
  00007280: 0C 00 02 79 32 F3 F2 F1 1E 00 05 10 04 00 00 00  ...y2...........
  00007290: 1A 12 00 00 00 00 00 00 00 00 00 00 10 00 08 5F  ..............._
  000072A0: 44 33 44 52 45 43 54 F1 0E 00 03 10 40 00 00 00  D3DRECT.....@...
  000072B0: 11 00 00 00 10 00 00 F1 0E 00 03 10 1C 12 00 00  ................
  000072C0: 11 00 00 00 40 00 00 F1 0E 01 03 12 05 14 03 00  ....@...........
  000072D0: 40 00 00 00 00 00 03 5F 31 31 F2 F1 05 14 03 00  @......_11......
  000072E0: 40 00 00 00 04 00 03 5F 31 32 F2 F1 05 14 03 00  @......_12......
  000072F0: 40 00 00 00 08 00 03 5F 31 33 F2 F1 05 14 03 00  @......_13......
  00007300: 40 00 00 00 0C 00 03 5F 31 34 F2 F1 05 14 03 00  @......_14......
  00007310: 40 00 00 00 10 00 03 5F 32 31 F2 F1 05 14 03 00  @......_21......
  00007320: 40 00 00 00 14 00 03 5F 32 32 F2 F1 05 14 03 00  @......_22......
  00007330: 40 00 00 00 18 00 03 5F 32 33 F2 F1 05 14 03 00  @......_23......
  00007340: 40 00 00 00 1C 00 03 5F 32 34 F2 F1 05 14 03 00  @......_24......
  00007350: 40 00 00 00 20 00 03 5F 33 31 F2 F1 05 14 03 00  @... .._31......
  00007360: 40 00 00 00 24 00 03 5F 33 32 F2 F1 05 14 03 00  @...$.._32......
  00007370: 40 00 00 00 28 00 03 5F 33 33 F2 F1 05 14 03 00  @...(.._33......
  00007380: 40 00 00 00 2C 00 03 5F 33 34 F2 F1 05 14 03 00  @...,.._34......
  00007390: 40 00 00 00 30 00 03 5F 34 31 F2 F1 05 14 03 00  @...0.._41......
  000073A0: 40 00 00 00 34 00 03 5F 34 32 F2 F1 05 14 03 00  @...4.._42......
  000073B0: 40 00 00 00 38 00 03 5F 34 33 F2 F1 05 14 03 00  @...8.._43......
  000073C0: 40 00 00 00 3C 00 03 5F 34 34 F2 F1 05 14 03 00  @...<.._44......
  000073D0: 1D 12 00 00 00 00 01 6D 22 00 05 10 11 00 00 00  .......m".......
  000073E0: 1E 12 00 00 00 00 00 00 00 00 00 00 40 00 0A 5F  ............@.._
  000073F0: 44 33 44 4D 41 54 52 49 58 F3 F2 F1 5E 00 03 12  D3DMATRIX...^...
  00007400: 05 14 03 00 22 00 00 00 00 00 01 58 05 14 03 00  ...."......X....
  00007410: 22 00 00 00 04 00 01 59 05 14 03 00 22 00 00 00  "......Y...."...
  00007420: 08 00 05 57 69 64 74 68 05 14 03 00 22 00 00 00  ...Width...."...
  00007430: 0C 00 06 48 65 69 67 68 74 F3 F2 F1 05 14 03 00  ...Height.......
  00007440: 40 00 00 00 10 00 04 4D 69 6E 5A F1 05 14 03 00  @......MinZ.....
  00007450: 40 00 00 00 14 00 04 4D 61 78 5A F1 22 00 05 10  @......MaxZ."...
  00007460: 06 00 00 00 20 12 00 00 00 00 00 00 00 00 00 00  .... ...........
  00007470: 18 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38  ..._D3DVIEWPORT8
  00007480: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00007490: 00 00 00 00 00 00 0E 5F 44 33 44 43 4F 4C 4F 52  ......._D3DCOLOR
  000074A0: 56 41 4C 55 45 F3 F2 F1 62 00 03 12 05 14 03 00  VALUE...b.......
  000074B0: 22 12 00 00 00 00 07 44 69 66 66 75 73 65 F2 F1  "......Diffuse..
  000074C0: 05 14 03 00 22 12 00 00 10 00 07 41 6D 62 69 65  ...."......Ambie
  000074D0: 6E 74 F2 F1 05 14 03 00 22 12 00 00 20 00 08 53  nt......"... ..S
  000074E0: 70 65 63 75 6C 61 72 F1 05 14 03 00 22 12 00 00  pecular....."...
  000074F0: 30 00 08 45 6D 69 73 73 69 76 65 F1 05 14 03 00  0..Emissive.....
  00007500: 40 00 00 00 40 00 05 50 6F 77 65 72 22 00 05 10  @...@..Power"...
  00007510: 05 00 00 00 23 12 00 00 00 00 00 00 00 00 00 00  ....#...........
  00007520: 44 00 0D 5F 44 33 44 4D 41 54 45 52 49 41 4C 38  D.._D3DMATERIAL8
  00007530: 6A 00 03 12 03 04 03 00 01 00 0E 44 33 44 4C 49  j..........D3DLI
  00007540: 47 48 54 5F 50 4F 49 4E 54 F3 F2 F1 03 04 03 00  GHT_POINT.......
  00007550: 02 00 0D 44 33 44 4C 49 47 48 54 5F 53 50 4F 54  ...D3DLIGHT_SPOT
  00007560: 03 04 03 00 03 00 14 44 33 44 4C 49 47 48 54 5F  .......D3DLIGHT_
  00007570: 44 49 52 45 43 54 49 4F 4E 41 4C F1 03 04 03 00  DIRECTIONAL.....
  00007580: 04 80 FF FF FF 7F 14 44 33 44 4C 49 47 48 54 5F  .......D3DLIGHT_
  00007590: 46 4F 52 43 45 5F 44 57 4F 52 44 F1 1E 00 07 10  FORCE_DWORD.....
  000075A0: 04 00 00 00 74 00 00 00 25 12 00 00 0D 5F 44 33  ....t...%...._D3
  000075B0: 44 4C 49 47 48 54 54 59 50 45 F2 F1 22 00 05 10  DLIGHTTYPE.."...
  000075C0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  000075D0: 00 00 0A 5F 44 33 44 56 45 43 54 4F 52 F3 F2 F1  ..._D3DVECTOR...
  000075E0: 02 01 03 12 05 14 03 00 26 12 00 00 00 00 04 54  ........&......T
  000075F0: 79 70 65 F1 05 14 03 00 22 12 00 00 04 00 07 44  ype....."......D
  00007600: 69 66 66 75 73 65 F2 F1 05 14 03 00 22 12 00 00  iffuse......"...
  00007610: 14 00 08 53 70 65 63 75 6C 61 72 F1 05 14 03 00  ...Specular.....
  00007620: 22 12 00 00 24 00 07 41 6D 62 69 65 6E 74 F2 F1  "...$..Ambient..
  00007630: 05 14 03 00 27 12 00 00 34 00 08 50 6F 73 69 74  ....'...4..Posit
  00007640: 69 6F 6E F1 05 14 03 00 27 12 00 00 40 00 09 44  ion.....'...@..D
  00007650: 69 72 65 63 74 69 6F 6E 05 14 03 00 40 00 00 00  irection....@...
  00007660: 4C 00 05 52 61 6E 67 65 05 14 03 00 40 00 00 00  L..Range....@...
  00007670: 50 00 07 46 61 6C 6C 6F 66 66 F2 F1 05 14 03 00  P..Falloff......
  00007680: 40 00 00 00 54 00 0C 41 74 74 65 6E 75 61 74 69  @...T..Attenuati
  00007690: 6F 6E 30 F1 05 14 03 00 40 00 00 00 58 00 0C 41  on0.....@...X..A
  000076A0: 74 74 65 6E 75 61 74 69 6F 6E 31 F1 05 14 03 00  ttenuation1.....
  000076B0: 40 00 00 00 5C 00 0C 41 74 74 65 6E 75 61 74 69  @...\..Attenuati
  000076C0: 6F 6E 32 F1 05 14 03 00 40 00 00 00 60 00 05 54  on2.....@...`..T
  000076D0: 68 65 74 61 05 14 03 00 40 00 00 00 64 00 03 50  heta....@...d..P
  000076E0: 68 69 F2 F1 22 00 05 10 0D 00 00 00 28 12 00 00  hi..".......(...
  000076F0: 00 00 00 00 00 00 00 00 68 00 0A 5F 44 33 44 4C  ........h.._D3DL
  00007700: 49 47 48 54 38 F3 F2 F1 0A 00 02 10 C1 10 00 00  IGHT8...........
  00007710: 0A 04 00 00 1A 00 09 10 22 00 00 00 C1 10 00 00  ........".......
  00007720: 2A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  *...............
  00007730: 26 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  &...............
  00007740: 0B 14 03 00 2B 12 00 00 0D 47 65 74 4C 65 76 65  ....+....GetLeve
  00007750: 6C 43 6F 75 6E 74 F2 F1 26 00 05 10 02 00 00 00  lCount..&.......
  00007760: 2C 12 00 00 00 00 00 00 00 00 00 00 14 00 0E 44  ,..............D
  00007770: 33 44 42 61 73 65 54 65 78 74 75 72 65 F3 F2 F1  3DBaseTexture...
  00007780: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  00007790: 00 00 00 00 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  000077A0: 58 53 48 41 44 45 52 49 4E 50 55 54 0E 00 03 10  XSHADERINPUT....
  000077B0: 2E 12 00 00 11 00 00 00 00 01 00 F1 12 00 03 12  ................
  000077C0: 05 14 03 00 2F 12 00 00 00 00 05 49 6E 70 75 74  ..../......Input
  000077D0: 2E 00 05 10 01 00 00 00 30 12 00 00 00 00 00 00  ........0.......
  000077E0: 00 00 00 00 00 01 19 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  000077F0: 58 41 54 54 52 49 42 55 54 45 46 4F 52 4D 41 54  XATTRIBUTEFORMAT
  00007800: 0E 00 03 10 22 00 00 00 11 00 00 00 20 00 00 F1  ...."....... ...
  00007810: FE 01 03 12 05 14 03 00 32 12 00 00 00 00 0D 50  ........2......P
  00007820: 53 41 6C 70 68 61 49 6E 70 75 74 73 05 14 03 00  SAlphaInputs....
  00007830: 22 00 00 00 20 00 19 50 53 46 69 6E 61 6C 43 6F  "... ..PSFinalCo
  00007840: 6D 62 69 6E 65 72 49 6E 70 75 74 73 41 42 43 44  mbinerInputsABCD
  00007850: 05 14 03 00 22 00 00 00 24 00 18 50 53 46 69 6E  ...."...$..PSFin
  00007860: 61 6C 43 6F 6D 62 69 6E 65 72 49 6E 70 75 74 73  alCombinerInputs
  00007870: 45 46 47 F1 05 14 03 00 32 12 00 00 28 00 0B 50  EFG.....2...(..P
  00007880: 53 43 6F 6E 73 74 61 6E 74 30 F2 F1 05 14 03 00  SConstant0......
  00007890: 32 12 00 00 48 00 0B 50 53 43 6F 6E 73 74 61 6E  2...H..PSConstan
  000078A0: 74 31 F2 F1 05 14 03 00 32 12 00 00 68 00 0E 50  t1......2...h..P
  000078B0: 53 41 6C 70 68 61 4F 75 74 70 75 74 73 F3 F2 F1  SAlphaOutputs...
  000078C0: 05 14 03 00 32 12 00 00 88 00 0B 50 53 52 47 42  ....2......PSRGB
  000078D0: 49 6E 70 75 74 73 F2 F1 05 14 03 00 22 00 00 00  Inputs......"...
  000078E0: A8 00 0D 50 53 43 6F 6D 70 61 72 65 4D 6F 64 65  ...PSCompareMode
  000078F0: 05 14 03 00 22 00 00 00 AC 00 18 50 53 46 69 6E  ...."......PSFin
  00007900: 61 6C 43 6F 6D 62 69 6E 65 72 43 6F 6E 73 74 61  alCombinerConsta
  00007910: 6E 74 30 F1 05 14 03 00 22 00 00 00 B0 00 18 50  nt0....."......P
  00007920: 53 46 69 6E 61 6C 43 6F 6D 62 69 6E 65 72 43 6F  SFinalCombinerCo
  00007930: 6E 73 74 61 6E 74 31 F1 05 14 03 00 32 12 00 00  nstant1.....2...
  00007940: B4 00 0C 50 53 52 47 42 4F 75 74 70 75 74 73 F1  ...PSRGBOutputs.
  00007950: 05 14 03 00 22 00 00 00 D4 00 0F 50 53 43 6F 6D  ...."......PSCom
  00007960: 62 69 6E 65 72 43 6F 75 6E 74 F2 F1 05 14 03 00  binerCount......
  00007970: 22 00 00 00 D8 00 0E 50 53 54 65 78 74 75 72 65  "......PSTexture
  00007980: 4D 6F 64 65 73 F3 F2 F1 05 14 03 00 22 00 00 00  Modes......."...
  00007990: DC 00 0C 50 53 44 6F 74 4D 61 70 70 69 6E 67 F1  ...PSDotMapping.
  000079A0: 05 14 03 00 22 00 00 00 E0 00 0E 50 53 49 6E 70  ...."......PSInp
  000079B0: 75 74 54 65 78 74 75 72 65 F3 F2 F1 05 14 03 00  utTexture.......
  000079C0: 22 00 00 00 E4 00 0B 50 53 43 30 4D 61 70 70 69  "......PSC0Mappi
  000079D0: 6E 67 F2 F1 05 14 03 00 22 00 00 00 E8 00 0B 50  ng......"......P
  000079E0: 53 43 31 4D 61 70 70 69 6E 67 F2 F1 05 14 03 00  SC1Mapping......
  000079F0: 22 00 00 00 EC 00 18 50 53 46 69 6E 61 6C 43 6F  "......PSFinalCo
  00007A00: 6D 62 69 6E 65 72 43 6F 6E 73 74 61 6E 74 73 F1  mbinerConstants.
  00007A10: 2A 00 05 10 12 00 00 00 33 12 00 00 00 00 00 00  *.......3.......
  00007A20: 00 00 00 00 F0 00 12 5F 44 33 44 50 69 78 65 6C  ......._D3DPixel
  00007A30: 53 68 61 64 65 72 44 65 66 F3 F2 F1 6E 00 03 12  ShaderDef...n...
  00007A40: 03 04 03 00 00 00 0F 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007A50: 42 45 5A 49 45 52 F2 F1 03 04 03 00 01 00 10 44  BEZIER.........D
  00007A60: 33 44 42 41 53 49 53 5F 42 53 50 4C 49 4E 45 F1  3DBASIS_BSPLINE.
  00007A70: 03 04 03 00 02 00 14 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007A80: 49 4E 54 45 52 50 4F 4C 41 54 45 F1 03 04 03 00  INTERPOLATE.....
  00007A90: 04 80 FF FF FF 7F 14 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007AA0: 46 4F 52 43 45 5F 44 57 4F 52 44 F1 1E 00 07 10  FORCE_DWORD.....
  00007AB0: 04 00 00 00 74 00 00 00 35 12 00 00 0D 5F 44 33  ....t...5...._D3
  00007AC0: 44 42 41 53 49 53 54 59 50 45 F2 F1 6A 00 03 12  DBASISTYPE..j...
  00007AD0: 03 04 03 00 01 00 0F 44 33 44 4F 52 44 45 52 5F  .......D3DORDER_
  00007AE0: 4C 49 4E 45 41 52 F2 F1 03 04 03 00 03 00 0E 44  LINEAR.........D
  00007AF0: 33 44 4F 52 44 45 52 5F 43 55 42 49 43 F3 F2 F1  3DORDER_CUBIC...
  00007B00: 03 04 03 00 05 00 10 44 33 44 4F 52 44 45 52 5F  .......D3DORDER_
  00007B10: 51 55 49 4E 54 49 43 F1 03 04 03 00 04 80 FF FF  QUINTIC.........
  00007B20: FF 7F 14 44 33 44 4F 52 44 45 52 5F 46 4F 52 43  ...D3DORDER_FORC
  00007B30: 45 5F 44 57 4F 52 44 F1 1E 00 07 10 04 00 00 00  E_DWORD.........
  00007B40: 74 00 00 00 37 12 00 00 0D 5F 44 33 44 4F 52 44  t...7...._D3DORD
  00007B50: 45 52 54 59 50 45 F2 F1 A2 00 03 12 05 14 03 00  ERTYPE..........
  00007B60: 75 00 00 00 00 00 16 53 74 61 72 74 56 65 72 74  u......StartVert
  00007B70: 65 78 4F 66 66 73 65 74 57 69 64 74 68 F3 F2 F1  exOffsetWidth...
  00007B80: 05 14 03 00 75 00 00 00 04 00 17 53 74 61 72 74  ....u......Start
  00007B90: 56 65 72 74 65 78 4F 66 66 73 65 74 48 65 69 67  VertexOffsetHeig
  00007BA0: 68 74 F2 F1 05 14 03 00 75 00 00 00 08 00 05 57  ht......u......W
  00007BB0: 69 64 74 68 05 14 03 00 75 00 00 00 0C 00 06 48  idth....u......H
  00007BC0: 65 69 67 68 74 F3 F2 F1 05 14 03 00 75 00 00 00  eight.......u...
  00007BD0: 10 00 06 53 74 72 69 64 65 F3 F2 F1 05 14 03 00  ...Stride.......
  00007BE0: 36 12 00 00 14 00 05 42 61 73 69 73 05 14 03 00  6......Basis....
  00007BF0: 38 12 00 00 18 00 05 4F 72 64 65 72 2A 00 05 10  8......Order*...
  00007C00: 07 00 00 00 39 12 00 00 00 00 00 00 00 00 00 00  ....9...........
  00007C10: 1C 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00007C20: 5F 49 4E 46 4F F3 F2 F1 56 00 03 12 05 14 03 00  _INFO...V.......
  00007C30: 75 00 00 00 00 00 11 53 74 61 72 74 56 65 72 74  u......StartVert
  00007C40: 65 78 4F 66 66 73 65 74 05 14 03 00 75 00 00 00  exOffset....u...
  00007C50: 04 00 0B 4E 75 6D 56 65 72 74 69 63 65 73 F2 F1  ...NumVertices..
  00007C60: 05 14 03 00 36 12 00 00 08 00 05 42 61 73 69 73  ....6......Basis
  00007C70: 05 14 03 00 38 12 00 00 0C 00 05 4F 72 64 65 72  ....8......Order
  00007C80: 26 00 05 10 04 00 00 00 3B 12 00 00 00 00 00 00  &.......;.......
  00007C90: 00 00 00 00 10 00 11 5F 44 33 44 54 52 49 50 41  ......._D3DTRIPA
  00007CA0: 54 43 48 5F 49 4E 46 4F 66 00 03 12 03 04 03 00  TCH_INFOf.......
  00007CB0: 01 00 0C 44 33 44 46 49 45 4C 44 5F 4F 44 44 F1  ...D3DFIELD_ODD.
  00007CC0: 03 04 03 00 02 00 0D 44 33 44 46 49 45 4C 44 5F  .......D3DFIELD_
  00007CD0: 45 56 45 4E 03 04 03 00 03 00 14 44 33 44 46 49  EVEN.......D3DFI
  00007CE0: 45 4C 44 5F 50 52 4F 47 52 45 53 53 49 56 45 F1  ELD_PROGRESSIVE.
  00007CF0: 03 04 03 00 04 80 FF FF FF 7F 14 44 33 44 46 49  ...........D3DFI
  00007D00: 45 4C 44 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F1  ELD_FORCE_DWORD.
  00007D10: 1E 00 07 10 04 00 00 00 74 00 00 00 3D 12 00 00  ........t...=...
  00007D20: 0D 5F 44 33 44 46 49 45 4C 44 54 59 50 45 F2 F1  ._D3DFIELDTYPE..
  00007D30: 2A 00 03 12 05 14 03 00 3E 12 00 00 00 00 05 46  *.......>......F
  00007D40: 69 65 6C 64 05 14 03 00 75 00 00 00 04 00 0B 56  ield....u......V
  00007D50: 42 6C 61 6E 6B 43 6F 75 6E 74 F2 F1 26 00 05 10  BlankCount..&...
  00007D60: 02 00 00 00 3F 12 00 00 00 00 00 00 00 00 00 00  ....?...........
  00007D70: 08 00 10 5F 44 33 44 46 49 45 4C 44 5F 53 54 41  ..._D3DFIELD_STA
  00007D80: 54 55 53 F1 0A 00 02 10 46 11 00 00 0A 04 00 00  TUS.....F.......
  00007D90: 1A 00 09 10 12 00 00 00 46 11 00 00 41 12 00 00  ........F...A...
  00007DA0: 07 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  00007DB0: 12 00 00 00 46 11 00 00 41 12 00 00 07 00 01 00  ....F...A.......
  00007DC0: DE 10 00 00 00 00 00 00 72 00 03 12 00 14 03 00  ........r.......
  00007DD0: F3 11 00 00 00 00 F2 F1 0B 14 03 00 42 12 00 00  ............B...
  00007DE0: 05 52 65 73 65 74 F2 F1 0B 14 03 00 43 12 00 00  .Reset......C...
  00007DF0: 07 47 65 74 53 69 7A 65 0B 14 03 00 43 12 00 00  .GetSize....C...
  00007E00: 08 47 65 74 53 70 61 63 65 F3 F2 F1 05 14 03 00  .GetSpace.......
  00007E10: 22 00 00 00 0C 00 03 52 75 6E F2 F1 05 14 03 00  "......Run......
  00007E20: 22 00 00 00 10 00 04 4E 65 78 74 F1 05 14 03 00  "......Next.....
  00007E30: 22 00 00 00 14 00 04 53 69 7A 65 F1 1E 00 05 10  "......Size.....
  00007E40: 07 00 00 00 44 12 00 00 00 00 00 00 00 00 00 00  ....D...........
  00007E50: 18 00 08 44 33 44 46 69 78 75 70 F1 0A 00 02 10  ...D3DFixup.....
  00007E60: 4B 11 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  K...............
  00007E70: 4B 11 00 00 46 12 00 00 07 00 01 00 2F 11 00 00  K...F......./...
  00007E80: 00 00 00 00 0E 00 01 12 02 00 00 00 47 11 00 00  ............G...
  00007E90: 74 00 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  t...........K...
  00007EA0: 46 12 00 00 07 00 02 00 48 12 00 00 00 00 00 00  F.......H.......
  00007EB0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007EC0: 07 00 00 00 09 10 00 00 00 00 00 00 12 00 01 12  ................
  00007ED0: 03 00 00 00 22 00 00 00 4C 11 00 00 47 11 00 00  ...."...L...G...
  00007EE0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007EF0: 07 00 03 00 4B 12 00 00 00 00 00 00 16 00 01 12  ....K...........
  00007F00: 04 00 00 00 22 00 00 00 93 10 00 00 93 10 00 00  ...."...........
  00007F10: 93 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ............K...
  00007F20: 46 12 00 00 07 00 04 00 4D 12 00 00 00 00 00 00  F.......M.......
  00007F30: 1A 00 01 12 05 00 00 00 22 00 00 00 75 00 00 00  ........"...u...
  00007F40: 93 10 00 00 93 10 00 00 93 10 00 00 1A 00 09 10  ................
  00007F50: 12 00 00 00 4B 11 00 00 46 12 00 00 07 00 05 00  ....K...F.......
  00007F60: 4F 12 00 00 00 00 00 00 16 00 01 12 04 00 00 00  O...............
  00007F70: 22 00 00 00 22 00 00 00 75 00 00 00 5E 11 00 00  "..."...u...^...
  00007F80: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007F90: 07 00 04 00 51 12 00 00 00 00 00 00 16 00 01 12  ....Q...........
  00007FA0: 04 00 00 00 22 00 00 00 11 11 00 00 75 00 00 00  ....".......u...
  00007FB0: 5E 11 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ^...........K...
  00007FC0: 46 12 00 00 07 00 04 00 53 12 00 00 00 00 00 00  F.......S.......
  00007FD0: 12 00 01 12 03 00 00 00 22 00 00 00 51 10 00 00  ........"...Q...
  00007FE0: 51 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  Q...........K...
  00007FF0: 46 12 00 00 07 00 03 00 55 12 00 00 00 00 00 00  F.......U.......
  00008000: 12 00 01 12 03 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00008010: C2 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ............K...
  00008020: 46 12 00 00 07 00 03 00 57 12 00 00 00 00 00 00  F.......W.......
  00008030: 12 00 01 12 03 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00008040: 25 11 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  %...........K...
  00008050: 46 12 00 00 07 00 03 00 59 12 00 00 00 00 00 00  F.......Y.......
  00008060: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00008070: 07 00 02 00 31 10 00 00 00 00 00 00 16 00 01 12  ....1...........
  00008080: 04 00 00 00 22 00 00 00 74 00 00 00 D5 10 00 00  ...."...t.......
  00008090: 22 00 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  "...........K...
  000080A0: 46 12 00 00 07 00 04 00 5C 12 00 00 00 00 00 00  F.......\.......
  000080B0: 0E 00 01 12 02 00 00 00 22 00 00 00 75 00 00 00  ........"...u...
  000080C0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  000080D0: 07 00 02 00 5E 12 00 00 00 00 00 00 1A 00 09 10  ....^...........
  000080E0: 12 00 00 00 4B 11 00 00 46 12 00 00 07 00 01 00  ....K...F.......
  000080F0: DE 10 00 00 00 00 00 00 A2 01 03 12 00 14 03 00  ................
  00008100: F3 11 00 00 00 00 F2 F1 0B 14 03 00 47 12 00 00  ............G...
  00008110: 06 56 65 72 69 66 79 F1 0B 14 03 00 49 12 00 00  .Verify.....I...
  00008120: 0A 42 65 67 69 6E 46 69 78 75 70 F1 0B 14 03 00  .BeginFixup.....
  00008130: 4A 12 00 00 08 45 6E 64 46 69 78 75 70 F3 F2 F1  J....EndFixup...
  00008140: 0B 14 03 00 4C 12 00 00 0D 52 75 6E 50 75 73 68  ....L....RunPush
  00008150: 42 75 66 66 65 72 F2 F1 0B 14 03 00 4E 12 00 00  Buffer......N...
  00008160: 0C 53 65 74 4D 6F 64 65 6C 56 69 65 77 F3 F2 F1  .SetModelView...
  00008170: 0B 14 03 00 50 12 00 00 17 53 65 74 56 65 72 74  ....P....SetVert
  00008180: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  00008190: 0B 14 03 00 52 12 00 00 14 53 65 74 56 65 72 74  ....R....SetVert
  000081A0: 65 78 53 68 61 64 65 72 49 6E 70 75 74 F3 F2 F1  exShaderInput...
  000081B0: 0B 14 03 00 54 12 00 00 1A 53 65 74 56 65 72 74  ....T....SetVert
  000081C0: 65 78 53 68 61 64 65 72 49 6E 70 75 74 44 69 72  exShaderInputDir
  000081D0: 65 63 74 F1 0B 14 03 00 56 12 00 00 0F 53 65 74  ect.....V....Set
  000081E0: 52 65 6E 64 65 72 54 61 72 67 65 74 0B 14 03 00  RenderTarget....
  000081F0: 58 12 00 00 0A 53 65 74 54 65 78 74 75 72 65 F1  X....SetTexture.
  00008200: 0B 14 03 00 5A 12 00 00 0A 53 65 74 50 61 6C 65  ....Z....SetPale
  00008210: 74 74 65 F1 0B 14 03 00 5B 12 00 00 11 45 6E 64  tte.....[....End
  00008220: 56 69 73 69 62 69 6C 69 74 79 54 65 73 74 F2 F1  VisibilityTest..
  00008230: 0B 14 03 00 5D 12 00 00 17 53 65 74 56 65 72 74  ....]....SetVert
  00008240: 65 78 53 68 61 64 65 72 43 6F 6E 73 74 61 6E 74  exShaderConstant
  00008250: 0B 14 03 00 5F 12 00 00 04 4A 75 6D 70 F3 F2 F1  ...._....Jump...
  00008260: 0B 14 03 00 60 12 00 00 07 47 65 74 53 69 7A 65  ....`....GetSize
  00008270: 05 14 03 00 22 00 00 00 0C 00 04 53 69 7A 65 F1  ...."......Size.
  00008280: 05 14 03 00 22 00 00 00 10 00 0E 41 6C 6C 6F 63  ...."......Alloc
  00008290: 61 74 69 6F 6E 53 69 7A 65 F3 F2 F1 22 00 05 10  ationSize..."...
  000082A0: 12 00 00 00 61 12 00 00 00 00 00 00 00 00 00 00  ....a...........
  000082B0: 14 00 0D 44 33 44 50 75 73 68 42 75 66 66 65 72  ...D3DPushBuffer
  000082C0: 42 00 03 12 05 14 03 00 71 10 00 00 00 00 0C 56  B.......q......V
  000082D0: 65 72 74 65 78 42 75 66 66 65 72 F1 05 14 03 00  ertexBuffer.....
  000082E0: 75 00 00 00 04 00 06 53 74 72 69 64 65 F3 F2 F1  u......Stride...
  000082F0: 05 14 03 00 75 00 00 00 08 00 06 4F 66 66 73 65  ....u......Offse
  00008300: 74 F3 F2 F1 26 00 05 10 03 00 00 00 63 12 00 00  t...&.......c...
  00008310: 00 00 00 00 00 00 00 00 0C 00 10 5F 44 33 44 53  ..........._D3DS
  00008320: 54 52 45 41 4D 5F 49 4E 50 55 54 F1 6E 00 03 12  TREAM_INPUT.n...
  00008330: 05 14 03 00 22 00 00 00 00 00 05 46 6C 61 67 73  ...."......Flags
  00008340: 05 14 03 00 03 04 00 00 04 00 07 70 4D 65 6D 6F  ...........pMemo
  00008350: 72 79 F2 F1 05 14 03 00 22 00 00 00 08 00 04 53  ry......"......S
  00008360: 69 7A 65 F1 05 14 03 00 22 00 00 00 0C 00 05 50  ize....."......P
  00008370: 69 74 63 68 05 14 03 00 22 00 00 00 10 00 09 5A  itch...."......Z
  00008380: 53 74 61 72 74 54 61 67 05 14 03 00 22 00 00 00  StartTag...."...
  00008390: 14 00 07 5A 4F 66 66 73 65 74 F2 F1 1E 00 05 10  ...ZOffset......
  000083A0: 06 00 00 00 65 12 00 00 00 00 00 00 00 00 00 00  ....e...........
  000083B0: 18 00 08 5F 44 33 44 54 49 4C 45 F1 2A 00 03 12  ..._D3DTILE.*...
  000083C0: 03 04 03 00 00 00 0A 44 33 44 4D 45 4D 5F 41 47  .......D3DMEM_AG
  000083D0: 50 F3 F2 F1 03 04 03 00 01 00 0C 44 33 44 4D 45  P..........D3DME
  000083E0: 4D 5F 56 49 44 45 4F F1 1A 00 07 10 02 00 00 00  M_VIDEO.........
  000083F0: 74 00 00 00 67 12 00 00 0A 5F 44 33 44 4D 45 4D  t...g...._D3DMEM
  00008400: 4F 52 59 F1 0A 00 02 10 F3 11 00 00 0A 00 00 00  ORY.............
  00008410: 0A 00 02 10 F3 11 00 00 0A 04 00 00 1A 00 09 10  ................
  00008420: 22 00 00 00 F3 11 00 00 6A 12 00 00 07 00 00 00  ".......j.......
  00008430: 09 10 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  00008440: 2E 10 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  ................
  00008450: 6A 12 00 00 07 00 01 00 6C 12 00 00 00 00 00 00  j.......l.......
  00008460: 1A 00 09 10 1F 10 00 00 F3 11 00 00 6A 12 00 00  ............j...
  00008470: 07 00 00 00 09 10 00 00 00 00 00 00 16 00 01 12  ................
  00008480: 04 00 00 00 02 10 00 00 D5 10 00 00 22 00 00 00  ............"...
  00008490: 22 00 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  "...............
  000084A0: 6A 12 00 00 07 00 04 00 6F 12 00 00 00 00 00 00  j.......o.......
  000084B0: 12 00 01 12 03 00 00 00 02 10 00 00 03 04 00 00  ................
  000084C0: 22 04 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  "...............
  000084D0: 6A 12 00 00 07 00 03 00 71 12 00 00 00 00 00 00  j.......q.......
  000084E0: 0A 00 01 12 01 00 00 00 02 10 00 00 1A 00 09 10  ................
  000084F0: 12 00 00 00 F3 11 00 00 6A 12 00 00 07 00 01 00  ........j.......
  00008500: 73 12 00 00 00 00 00 00 1A 00 09 10 74 00 00 00  s...........t...
  00008510: F3 11 00 00 6A 12 00 00 07 00 00 00 09 10 00 00  ....j...........
  00008520: 00 00 00 00 1A 00 09 10 03 00 00 00 F3 11 00 00  ................
  00008530: 6A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  j...............
  00008540: 0A 00 01 12 01 00 00 00 68 12 00 00 1A 00 09 10  ........h.......
  00008550: 03 00 00 00 F3 11 00 00 6A 12 00 00 07 00 01 00  ........j.......
  00008560: 77 12 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  w...............
  00008570: 03 04 00 00 1A 00 09 10 03 00 00 00 F3 11 00 00  ................
  00008580: 6A 12 00 00 07 00 01 00 79 12 00 00 00 00 00 00  j.......y.......
  00008590: 1E 01 03 12 0B 14 03 00 6B 12 00 00 06 41 64 64  ........k....Add
  000085A0: 52 65 66 F1 0B 14 03 00 6B 12 00 00 07 52 65 6C  Ref.....k....Rel
  000085B0: 65 61 73 65 0B 14 03 00 6D 12 00 00 09 47 65 74  ease....m....Get
  000085C0: 44 65 76 69 63 65 F2 F1 0B 14 03 00 6E 12 00 00  Device......n...
  000085D0: 07 47 65 74 54 79 70 65 0B 14 03 00 70 12 00 00  .GetType....p...
  000085E0: 0E 53 65 74 50 72 69 76 61 74 65 44 61 74 61 F1  .SetPrivateData.
  000085F0: 0B 14 03 00 72 12 00 00 0E 47 65 74 50 72 69 76  ....r....GetPriv
  00008600: 61 74 65 44 61 74 61 F1 0B 14 03 00 74 12 00 00  ateData.....t...
  00008610: 0F 46 72 65 65 50 72 69 76 61 74 65 44 61 74 61  .FreePrivateData
  00008620: 0B 14 03 00 75 12 00 00 06 49 73 42 75 73 79 F1  ....u....IsBusy.
  00008630: 0B 14 03 00 76 12 00 00 11 42 6C 6F 63 6B 55 6E  ....v....BlockUn
  00008640: 74 69 6C 4E 6F 74 42 75 73 79 F2 F1 0B 14 03 00  tilNotBusy......
  00008650: 78 12 00 00 12 4D 6F 76 65 52 65 73 6F 75 72 63  x....MoveResourc
  00008660: 65 4D 65 6D 6F 72 79 F1 0B 14 03 00 7A 12 00 00  eMemory.....z...
  00008670: 08 52 65 67 69 73 74 65 72 F3 F2 F1 05 14 03 00  .Register.......
  00008680: 22 00 00 00 00 00 06 43 6F 6D 6D 6F 6E F3 F2 F1  "......Common...
  00008690: 05 14 03 00 22 00 00 00 04 00 04 44 61 74 61 F1  ...."......Data.
  000086A0: 05 14 03 00 22 00 00 00 08 00 04 4C 6F 63 6B F1  ...."......Lock.
  000086B0: 22 00 05 10 0E 00 00 00 7B 12 00 00 00 00 00 00  ".......{.......
  000086C0: 00 00 00 00 0C 00 0B 44 33 44 52 65 73 6F 75 72  .......D3DResour
  000086D0: 63 65 F2 F1 86 00 03 12 05 14 03 00 1B 10 00 00  ce..............
  000086E0: 00 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  000086F0: 1F 10 00 00 04 00 04 54 79 70 65 F1 05 14 03 00  .......Type.....
  00008700: 22 00 00 00 08 00 05 55 73 61 67 65 05 14 03 00  "......Usage....
  00008710: 75 00 00 00 0C 00 04 53 69 7A 65 F1 05 14 03 00  u......Size.....
  00008720: 22 00 00 00 10 00 0F 4D 75 6C 74 69 53 61 6D 70  "......MultiSamp
  00008730: 6C 65 54 79 70 65 F2 F1 05 14 03 00 75 00 00 00  leType......u...
  00008740: 14 00 05 57 69 64 74 68 05 14 03 00 75 00 00 00  ...Width....u...
  00008750: 18 00 06 48 65 69 67 68 74 F3 F2 F1 26 00 05 10  ...Height...&...
  00008760: 07 00 00 00 7D 12 00 00 00 00 00 00 00 00 00 00  ....}...........
  00008770: 1C 00 10 5F 44 33 44 53 55 52 46 41 43 45 5F 44  ..._D3DSURFACE_D
  00008780: 45 53 43 F1 22 00 03 12 05 14 03 00 74 00 00 00  ESC.".......t...
  00008790: 00 00 05 50 69 74 63 68 05 14 03 00 03 04 00 00  ...Pitch........
  000087A0: 04 00 05 70 42 69 74 73 26 00 05 10 02 00 00 00  ...pBits&.......
  000087B0: 7F 12 00 00 00 00 00 00 00 00 00 00 08 00 0F 5F  ..............._
  000087C0: 44 33 44 4C 4F 43 4B 45 44 5F 52 45 43 54 F2 F1  D3DLOCKED_RECT..
  000087D0: 7A 00 03 12 05 14 03 00 1B 10 00 00 00 00 06 46  z..............F
  000087E0: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 1F 10 00 00  ormat...........
  000087F0: 04 00 04 54 79 70 65 F1 05 14 03 00 22 00 00 00  ...Type....."...
  00008800: 08 00 05 55 73 61 67 65 05 14 03 00 75 00 00 00  ...Usage....u...
  00008810: 0C 00 04 53 69 7A 65 F1 05 14 03 00 75 00 00 00  ...Size.....u...
  00008820: 10 00 05 57 69 64 74 68 05 14 03 00 75 00 00 00  ...Width....u...
  00008830: 14 00 06 48 65 69 67 68 74 F3 F2 F1 05 14 03 00  ...Height.......
  00008840: 75 00 00 00 18 00 05 44 65 70 74 68 26 00 05 10  u......Depth&...
  00008850: 07 00 00 00 81 12 00 00 00 00 00 00 00 00 00 00  ................
  00008860: 1C 00 0F 5F 44 33 44 56 4F 4C 55 4D 45 5F 44 45  ..._D3DVOLUME_DE
  00008870: 53 43 F2 F1 0A 00 02 10 D8 11 00 00 0A 04 00 00  SC..............
  00008880: 1A 00 09 10 12 00 00 00 D8 11 00 00 83 12 00 00  ................
  00008890: 07 00 01 00 B6 11 00 00 00 00 00 00 0A 00 01 12  ................
  000088A0: 01 00 00 00 D4 11 00 00 1A 00 09 10 12 00 00 00  ................
  000088B0: D8 11 00 00 83 12 00 00 07 00 01 00 85 12 00 00  ................
  000088C0: 00 00 00 00 12 00 01 12 03 00 00 00 DE 11 00 00  ................
  000088D0: E1 11 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000088E0: D8 11 00 00 83 12 00 00 07 00 03 00 87 12 00 00  ................
  000088F0: 00 00 00 00 1A 00 09 10 12 00 00 00 D8 11 00 00  ................
  00008900: 83 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00008910: 6E 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  n...............
  00008920: 0B 14 03 00 84 12 00 00 0C 47 65 74 43 6F 6E 74  .........GetCont
  00008930: 61 69 6E 65 72 F3 F2 F1 0B 14 03 00 86 12 00 00  ainer...........
  00008940: 07 47 65 74 44 65 73 63 0B 14 03 00 88 12 00 00  .GetDesc........
  00008950: 07 4C 6F 63 6B 42 6F 78 0B 14 03 00 89 12 00 00  .LockBox........
  00008960: 09 55 6E 6C 6F 63 6B 42 6F 78 F2 F1 05 14 03 00  .UnlockBox......
  00008970: C2 10 00 00 14 00 06 50 61 72 65 6E 74 F3 F2 F1  .......Parent...
  00008980: 1E 00 05 10 06 00 00 00 8A 12 00 00 00 00 00 00  ................
  00008990: 00 00 00 00 18 00 09 44 33 44 56 6F 6C 75 6D 65  .......D3DVolume
  000089A0: 66 00 03 12 05 14 03 00 75 00 00 00 00 00 04 4C  f.......u......L
  000089B0: 65 66 74 F1 05 14 03 00 75 00 00 00 04 00 03 54  eft.....u......T
  000089C0: 6F 70 F2 F1 05 14 03 00 75 00 00 00 08 00 05 52  op......u......R
  000089D0: 69 67 68 74 05 14 03 00 75 00 00 00 0C 00 06 42  ight....u......B
  000089E0: 6F 74 74 6F 6D F3 F2 F1 05 14 03 00 75 00 00 00  ottom.......u...
  000089F0: 10 00 05 46 72 6F 6E 74 05 14 03 00 75 00 00 00  ...Front....u...
  00008A00: 14 00 04 42 61 63 6B F1 1E 00 05 10 06 00 00 00  ...Back.........
  00008A10: 8C 12 00 00 00 00 00 00 00 00 00 00 18 00 07 5F  ..............._
  00008A20: 44 33 44 42 4F 58 F2 F1 3E 00 03 12 05 14 03 00  D3DBOX..>.......
  00008A30: 74 00 00 00 00 00 08 52 6F 77 50 69 74 63 68 F1  t......RowPitch.
  00008A40: 05 14 03 00 74 00 00 00 04 00 0A 53 6C 69 63 65  ....t......Slice
  00008A50: 50 69 74 63 68 F3 F2 F1 05 14 03 00 03 04 00 00  Pitch...........
  00008A60: 08 00 05 70 42 69 74 73 26 00 05 10 03 00 00 00  ...pBits&.......
  00008A70: 8E 12 00 00 00 00 00 00 00 00 00 00 0C 00 0E 5F  ..............._
  00008A80: 44 33 44 4C 4F 43 4B 45 44 5F 42 4F 58 F3 F2 F1  D3DLOCKED_BOX...
  00008A90: 26 00 03 12 05 14 03 00 1B 10 00 00 00 00 06 46  &..............F
  00008AA0: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 1F 10 00 00  ormat...........
  00008AB0: 04 00 04 54 79 70 65 F1 2A 00 05 10 02 00 00 00  ...Type.*.......
  00008AC0: 90 12 00 00 00 00 00 00 00 00 00 00 08 00 15 5F  ..............._
  00008AD0: 44 33 44 56 45 52 54 45 58 42 55 46 46 45 52 5F  D3DVERTEXBUFFER_
  00008AE0: 44 45 53 43 26 00 03 12 05 14 03 00 1B 10 00 00  DESC&...........
  00008AF0: 00 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  00008B00: 1F 10 00 00 04 00 04 54 79 70 65 F1 2A 00 05 10  .......Type.*...
  00008B10: 02 00 00 00 92 12 00 00 00 00 00 00 00 00 00 00  ................
  00008B20: 08 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46 46  ..._D3DINDEXBUFF
  00008B30: 45 52 5F 44 45 53 43 F1 22 00 05 10 00 00 80 00  ER_DESC.".......
  00008B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0B 44  ...............D
  00008B50: 33 44 58 56 45 43 54 4F 52 32 F2 F1 0A 00 02 10  3DXVECTOR2......
  00008B60: 94 12 00 00 0A 04 00 00 0E 00 01 12 02 00 00 00  ................
  00008B70: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00008B80: 94 12 00 00 95 12 00 00 0B 00 02 00 96 12 00 00  ................
  00008B90: 00 00 00 00 0A 00 01 10 40 00 00 00 01 00 F2 F1  ........@.......
  00008BA0: 0A 00 02 10 98 12 00 00 0A 00 00 00 0A 00 01 12  ................
  00008BB0: 01 00 00 00 99 12 00 00 1A 00 09 10 03 00 00 00  ................
  00008BC0: 94 12 00 00 95 12 00 00 0B 00 01 00 9A 12 00 00  ................
  00008BD0: 00 00 00 00 1A 00 09 10 03 00 00 00 94 12 00 00  ................
  00008BE0: 95 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00008BF0: 1A 00 06 12 03 00 00 00 97 12 00 00 03 00 00 00  ................
  00008C00: 9B 12 00 00 03 00 00 00 9C 12 00 00 1A 00 09 10  ................
  00008C10: 40 04 00 00 94 12 00 00 95 12 00 00 0B 00 00 00  @...............
  00008C20: 09 10 00 00 00 00 00 00 0A 00 01 10 94 12 00 00  ................
  00008C30: 01 00 F2 F1 0A 00 02 10 9F 12 00 00 0A 04 00 00  ................
  00008C40: 1A 00 09 10 99 12 00 00 94 12 00 00 A0 12 00 00  ................
  00008C50: 0B 00 00 00 09 10 00 00 00 00 00 00 0A 00 02 10  ................
  00008C60: 94 12 00 00 2A 00 00 00 0A 00 02 10 9F 12 00 00  ....*...........
  00008C70: 2A 00 00 00 0A 00 01 12 01 00 00 00 A3 12 00 00  *...............
  00008C80: 1A 00 09 10 A2 12 00 00 94 12 00 00 95 12 00 00  ................
  00008C90: 0B 00 01 00 A4 12 00 00 00 00 00 00 0A 00 01 12  ................
  00008CA0: 01 00 00 00 40 00 00 00 1A 00 09 10 A2 12 00 00  ....@...........
  00008CB0: 94 12 00 00 95 12 00 00 0B 00 01 00 A6 12 00 00  ................
  00008CC0: 00 00 00 00 1A 00 09 10 94 12 00 00 94 12 00 00  ................
  00008CD0: A0 12 00 00 0B 00 01 00 A4 12 00 00 00 00 00 00  ................
  00008CE0: 1A 00 09 10 94 12 00 00 94 12 00 00 A0 12 00 00  ................
  00008CF0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  00008D00: 03 00 00 00 A8 12 00 00 03 00 00 00 A9 12 00 00  ................
  00008D10: 12 00 06 12 03 00 00 00 A8 12 00 00 03 00 00 00  ................
  00008D20: A9 12 00 00 1A 00 09 10 94 12 00 00 94 12 00 00  ................
  00008D30: A0 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  00008D40: 1A 00 09 10 74 00 00 00 94 12 00 00 A0 12 00 00  ....t...........
  00008D50: 0B 00 01 00 A4 12 00 00 00 00 00 00 32 01 03 12  ............2...
  00008D60: 07 14 03 00 9D 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00008D70: 54 4F 52 32 0B 14 03 00 9E 12 00 00 10 6F 70 65  TOR2.........ope
  00008D80: 72 61 74 6F 72 20 66 6C 6F 61 74 20 2A F3 F2 F1  rator float *...
  00008D90: 0B 14 03 00 A1 12 00 00 16 6F 70 65 72 61 74 6F  .........operato
  00008DA0: 72 20 63 6F 6E 73 74 20 66 6C 6F 61 74 20 2A F1  r const float *.
  00008DB0: 0B 14 03 00 A5 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00008DC0: 72 2B 3D F1 0B 14 03 00 A5 12 00 00 0A 6F 70 65  r+=..........ope
  00008DD0: 72 61 74 6F 72 2D 3D F1 0B 14 03 00 A7 12 00 00  rator-=.........
  00008DE0: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  00008DF0: A7 12 00 00 0A 6F 70 65 72 61 74 6F 72 2F 3D F1  .....operator/=.
  00008E00: 07 14 02 00 AA 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  00008E10: 72 2B F2 F1 07 14 02 00 AB 12 00 00 09 6F 70 65  r+...........ope
  00008E20: 72 61 74 6F 72 2D F2 F1 0B 14 03 00 AC 12 00 00  rator-..........
  00008E30: 09 6F 70 65 72 61 74 6F 72 2A F2 F1 0B 14 03 00  .operator*......
  00008E40: AC 12 00 00 09 6F 70 65 72 61 74 6F 72 2F F2 F1  .....operator/..
  00008E50: 0B 14 03 00 AD 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00008E60: 72 3D 3D F1 0B 14 03 00 AD 12 00 00 0A 6F 70 65  r==..........ope
  00008E70: 72 61 74 6F 72 21 3D F1 05 14 03 00 40 00 00 00  rator!=.....@...
  00008E80: 00 00 01 78 05 14 03 00 40 00 00 00 04 00 01 79  ...x....@......y
  00008E90: 22 00 05 10 13 00 46 00 AE 12 00 00 00 00 00 00  ".....F.........
  00008EA0: 00 00 00 00 08 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  00008EB0: 52 32 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  R2.."...........
  00008EC0: 00 00 00 00 00 00 00 00 00 00 0B 44 33 44 58 56  ...........D3DXV
  00008ED0: 45 43 54 4F 52 33 F2 F1 0A 00 02 10 B0 12 00 00  ECTOR3..........
  00008EE0: 0A 04 00 00 12 00 01 12 03 00 00 00 40 00 00 00  ............@...
  00008EF0: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00008F00: B0 12 00 00 B1 12 00 00 0B 00 03 00 B2 12 00 00  ................
  00008F10: 00 00 00 00 0A 00 01 10 27 12 00 00 01 00 F2 F1  ........'.......
  00008F20: 0A 00 02 10 B4 12 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  00008F30: 01 00 00 00 B5 12 00 00 1A 00 09 10 03 00 00 00  ................
  00008F40: B0 12 00 00 B1 12 00 00 0B 00 01 00 B6 12 00 00  ................
  00008F50: 00 00 00 00 1A 00 09 10 03 00 00 00 B0 12 00 00  ................
  00008F60: B1 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00008F70: 1A 00 09 10 03 00 00 00 B0 12 00 00 B1 12 00 00  ................
  00008F80: 0B 00 00 00 09 10 00 00 00 00 00 00 22 00 06 12  ............"...
  00008F90: 03 00 00 00 B3 12 00 00 03 00 00 00 B7 12 00 00  ................
  00008FA0: 03 00 00 00 B8 12 00 00 03 00 00 00 B9 12 00 00  ................
  00008FB0: 1A 00 09 10 40 04 00 00 B0 12 00 00 B1 12 00 00  ....@...........
  00008FC0: 0B 00 00 00 09 10 00 00 00 00 00 00 0A 00 01 10  ................
  00008FD0: B0 12 00 00 01 00 F2 F1 0A 00 02 10 BC 12 00 00  ................
  00008FE0: 0A 04 00 00 1A 00 09 10 99 12 00 00 B0 12 00 00  ................
  00008FF0: BD 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009000: 0A 00 02 10 B0 12 00 00 2A 00 00 00 0A 00 02 10  ........*.......
  00009010: BC 12 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  00009020: C0 12 00 00 1A 00 09 10 BF 12 00 00 B0 12 00 00  ................
  00009030: B1 12 00 00 0B 00 01 00 C1 12 00 00 00 00 00 00  ................
  00009040: 1A 00 09 10 BF 12 00 00 B0 12 00 00 B1 12 00 00  ................
  00009050: 0B 00 01 00 A6 12 00 00 00 00 00 00 1A 00 09 10  ................
  00009060: B0 12 00 00 B0 12 00 00 BD 12 00 00 0B 00 01 00  ................
  00009070: C1 12 00 00 00 00 00 00 1A 00 09 10 B0 12 00 00  ................
  00009080: B0 12 00 00 BD 12 00 00 0B 00 00 00 09 10 00 00  ................
  00009090: 00 00 00 00 12 00 06 12 03 00 00 00 C4 12 00 00  ................
  000090A0: 03 00 00 00 C5 12 00 00 12 00 06 12 03 00 00 00  ................
  000090B0: C4 12 00 00 03 00 00 00 C5 12 00 00 1A 00 09 10  ................
  000090C0: B0 12 00 00 B0 12 00 00 BD 12 00 00 0B 00 01 00  ................
  000090D0: A6 12 00 00 00 00 00 00 1A 00 09 10 74 00 00 00  ............t...
  000090E0: B0 12 00 00 BD 12 00 00 0B 00 01 00 C1 12 00 00  ................
  000090F0: 00 00 00 00 26 01 03 12 00 14 03 00 27 12 00 00  ....&.......'...
  00009100: 00 00 F2 F1 07 14 04 00 BA 12 00 00 0B 44 33 44  .............D3D
  00009110: 58 56 45 43 54 4F 52 33 0B 14 03 00 BB 12 00 00  XVECTOR3........
  00009120: 10 6F 70 65 72 61 74 6F 72 20 66 6C 6F 61 74 20  .operator float 
  00009130: 2A F3 F2 F1 0B 14 03 00 BE 12 00 00 16 6F 70 65  *............ope
  00009140: 72 61 74 6F 72 20 63 6F 6E 73 74 20 66 6C 6F 61  rator const floa
  00009150: 74 20 2A F1 0B 14 03 00 C2 12 00 00 0A 6F 70 65  t *..........ope
  00009160: 72 61 74 6F 72 2B 3D F1 0B 14 03 00 C2 12 00 00  rator+=.........
  00009170: 0A 6F 70 65 72 61 74 6F 72 2D 3D F1 0B 14 03 00  .operator-=.....
  00009180: C3 12 00 00 0A 6F 70 65 72 61 74 6F 72 2A 3D F1  .....operator*=.
  00009190: 0B 14 03 00 C3 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  000091A0: 72 2F 3D F1 07 14 02 00 C6 12 00 00 09 6F 70 65  r/=..........ope
  000091B0: 72 61 74 6F 72 2B F2 F1 07 14 02 00 C7 12 00 00  rator+..........
  000091C0: 09 6F 70 65 72 61 74 6F 72 2D F2 F1 0B 14 03 00  .operator-......
  000091D0: C8 12 00 00 09 6F 70 65 72 61 74 6F 72 2A F2 F1  .....operator*..
  000091E0: 0B 14 03 00 C8 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000091F0: 72 2F F2 F1 0B 14 03 00 C9 12 00 00 0A 6F 70 65  r/...........ope
  00009200: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 C9 12 00 00  rator==.........
  00009210: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 22 00 05 10  .operator!=."...
  00009220: 13 00 46 00 CA 12 00 00 00 00 00 00 00 00 00 00  ..F.............
  00009230: 0C 00 0B 44 33 44 58 56 45 43 54 4F 52 33 F2 F1  ...D3DXVECTOR3..
  00009240: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  00009250: 00 00 00 00 00 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  00009260: 52 34 F2 F1 0A 00 02 10 CC 12 00 00 0A 04 00 00  R4..............
  00009270: 16 00 01 12 04 00 00 00 40 00 00 00 40 00 00 00  ........@...@...
  00009280: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00009290: CC 12 00 00 CD 12 00 00 0B 00 04 00 CE 12 00 00  ................
  000092A0: 00 00 00 00 1A 00 09 10 03 00 00 00 CC 12 00 00  ................
  000092B0: CD 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  000092C0: 1A 00 09 10 03 00 00 00 CC 12 00 00 CD 12 00 00  ................
  000092D0: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  000092E0: 03 00 00 00 CF 12 00 00 03 00 00 00 D0 12 00 00  ................
  000092F0: 03 00 00 00 D1 12 00 00 1A 00 09 10 40 04 00 00  ............@...
  00009300: CC 12 00 00 CD 12 00 00 0B 00 00 00 09 10 00 00  ................
  00009310: 00 00 00 00 0A 00 01 10 CC 12 00 00 01 00 F2 F1  ................
  00009320: 0A 00 02 10 D4 12 00 00 0A 04 00 00 1A 00 09 10  ................
  00009330: 99 12 00 00 CC 12 00 00 D5 12 00 00 0B 00 00 00  ................
  00009340: 09 10 00 00 00 00 00 00 0A 00 02 10 CC 12 00 00  ................
  00009350: 2A 00 00 00 0A 00 02 10 D4 12 00 00 2A 00 00 00  *...........*...
  00009360: 0A 00 01 12 01 00 00 00 D8 12 00 00 1A 00 09 10  ................
  00009370: D7 12 00 00 CC 12 00 00 CD 12 00 00 0B 00 01 00  ................
  00009380: D9 12 00 00 00 00 00 00 1A 00 09 10 D7 12 00 00  ................
  00009390: CC 12 00 00 CD 12 00 00 0B 00 01 00 A6 12 00 00  ................
  000093A0: 00 00 00 00 1A 00 09 10 CC 12 00 00 CC 12 00 00  ................
  000093B0: D5 12 00 00 0B 00 01 00 D9 12 00 00 00 00 00 00  ................
  000093C0: 1A 00 09 10 CC 12 00 00 CC 12 00 00 D5 12 00 00  ................
  000093D0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  000093E0: 03 00 00 00 DC 12 00 00 03 00 00 00 DD 12 00 00  ................
  000093F0: 12 00 06 12 03 00 00 00 DC 12 00 00 03 00 00 00  ................
  00009400: DD 12 00 00 1A 00 09 10 CC 12 00 00 CC 12 00 00  ................
  00009410: D5 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  00009420: 1A 00 09 10 74 00 00 00 CC 12 00 00 D5 12 00 00  ....t...........
  00009430: 0B 00 01 00 D9 12 00 00 00 00 00 00 4A 01 03 12  ............J...
  00009440: 07 14 03 00 D2 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00009450: 54 4F 52 34 0B 14 03 00 D3 12 00 00 10 6F 70 65  TOR4.........ope
  00009460: 72 61 74 6F 72 20 66 6C 6F 61 74 20 2A F3 F2 F1  rator float *...
  00009470: 0B 14 03 00 D6 12 00 00 16 6F 70 65 72 61 74 6F  .........operato
  00009480: 72 20 63 6F 6E 73 74 20 66 6C 6F 61 74 20 2A F1  r const float *.
  00009490: 0B 14 03 00 DA 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  000094A0: 72 2B 3D F1 0B 14 03 00 DA 12 00 00 0A 6F 70 65  r+=..........ope
  000094B0: 72 61 74 6F 72 2D 3D F1 0B 14 03 00 DB 12 00 00  rator-=.........
  000094C0: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  000094D0: DB 12 00 00 0A 6F 70 65 72 61 74 6F 72 2F 3D F1  .....operator/=.
  000094E0: 07 14 02 00 DE 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000094F0: 72 2B F2 F1 07 14 02 00 DF 12 00 00 09 6F 70 65  r+...........ope
  00009500: 72 61 74 6F 72 2D F2 F1 0B 14 03 00 E0 12 00 00  rator-..........
  00009510: 09 6F 70 65 72 61 74 6F 72 2A F2 F1 0B 14 03 00  .operator*......
  00009520: E0 12 00 00 09 6F 70 65 72 61 74 6F 72 2F F2 F1  .....operator/..
  00009530: 0B 14 03 00 E1 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009540: 72 3D 3D F1 0B 14 03 00 E1 12 00 00 0A 6F 70 65  r==..........ope
  00009550: 72 61 74 6F 72 21 3D F1 05 14 03 00 40 00 00 00  rator!=.....@...
  00009560: 00 00 01 78 05 14 03 00 40 00 00 00 04 00 01 79  ...x....@......y
  00009570: 05 14 03 00 40 00 00 00 08 00 01 7A 05 14 03 00  ....@......z....
  00009580: 40 00 00 00 0C 00 01 77 22 00 05 10 15 00 46 00  @......w".....F.
  00009590: E2 12 00 00 00 00 00 00 00 00 00 00 10 00 0B 44  ...............D
  000095A0: 33 44 58 56 45 43 54 4F 52 34 F2 F1 22 00 05 10  3DXVECTOR4.."...
  000095B0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  000095C0: 00 00 0A 44 33 44 58 4D 41 54 52 49 58 F3 F2 F1  ...D3DXMATRIX...
  000095D0: 0A 00 02 10 E4 12 00 00 0A 04 00 00 46 00 01 12  ............F...
  000095E0: 10 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  ....@...@...@...
  000095F0: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009600: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009610: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009620: 40 00 00 00 1A 00 09 10 03 00 00 00 E4 12 00 00  @...............
  00009630: E5 12 00 00 0B 00 10 00 E6 12 00 00 00 00 00 00  ................
  00009640: 0A 00 02 10 92 10 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  00009650: 01 00 00 00 E8 12 00 00 1A 00 09 10 03 00 00 00  ................
  00009660: E4 12 00 00 E5 12 00 00 0B 00 01 00 E9 12 00 00  ................
  00009670: 00 00 00 00 1A 00 09 10 03 00 00 00 E4 12 00 00  ................
  00009680: E5 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00009690: 1A 00 09 10 03 00 00 00 E4 12 00 00 E5 12 00 00  ................
  000096A0: 0B 00 00 00 09 10 00 00 00 00 00 00 22 00 06 12  ............"...
  000096B0: 03 00 00 00 E7 12 00 00 03 00 00 00 EA 12 00 00  ................
  000096C0: 03 00 00 00 EB 12 00 00 03 00 00 00 EC 12 00 00  ................
  000096D0: 0E 00 01 12 02 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  000096E0: 0A 00 01 10 E4 12 00 00 01 00 F2 F1 0A 00 02 10  ................
  000096F0: EF 12 00 00 0A 04 00 00 1A 00 09 10 40 00 00 00  ............@...
  00009700: E4 12 00 00 F0 12 00 00 0B 00 02 00 EE 12 00 00  ................
  00009710: 00 00 00 00 0A 00 02 10 40 00 00 00 2A 00 00 00  ........@...*...
  00009720: 1A 00 09 10 F2 12 00 00 E4 12 00 00 E5 12 00 00  ................
  00009730: 0B 00 02 00 EE 12 00 00 00 00 00 00 12 00 06 12  ................
  00009740: 03 00 00 00 F1 12 00 00 03 00 00 00 F3 12 00 00  ................
  00009750: 1A 00 09 10 40 04 00 00 E4 12 00 00 E5 12 00 00  ....@...........
  00009760: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  00009770: 99 12 00 00 E4 12 00 00 F0 12 00 00 0B 00 00 00  ................
  00009780: 09 10 00 00 00 00 00 00 0A 00 02 10 E4 12 00 00  ................
  00009790: 2A 00 00 00 1A 00 09 10 F7 12 00 00 E4 12 00 00  *...............
  000097A0: E5 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  000097B0: 0A 00 02 10 EF 12 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  000097C0: 01 00 00 00 F9 12 00 00 1A 00 09 10 F7 12 00 00  ................
  000097D0: E4 12 00 00 E5 12 00 00 0B 00 01 00 FA 12 00 00  ................
  000097E0: 00 00 00 00 12 00 06 12 03 00 00 00 F8 12 00 00  ................
  000097F0: 03 00 00 00 FB 12 00 00 1A 00 09 10 E4 12 00 00  ................
  00009800: E4 12 00 00 F0 12 00 00 0B 00 01 00 FA 12 00 00  ................
  00009810: 00 00 00 00 1A 00 09 10 E4 12 00 00 E4 12 00 00  ................
  00009820: F0 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009830: 12 00 06 12 03 00 00 00 FD 12 00 00 03 00 00 00  ................
  00009840: FE 12 00 00 12 00 06 12 03 00 00 00 FD 12 00 00  ................
  00009850: 03 00 00 00 FE 12 00 00 1A 00 09 10 E4 12 00 00  ................
  00009860: E4 12 00 00 F0 12 00 00 0B 00 01 00 A6 12 00 00  ................
  00009870: 00 00 00 00 12 00 06 12 03 00 00 00 01 13 00 00  ................
  00009880: 03 00 00 00 FD 12 00 00 1A 00 09 10 74 00 00 00  ............t...
  00009890: E4 12 00 00 F0 12 00 00 0B 00 01 00 FA 12 00 00  ................
  000098A0: 00 00 00 00 3A 01 03 12 00 14 03 00 91 10 00 00  ....:...........
  000098B0: 00 00 F2 F1 07 14 04 00 ED 12 00 00 0A 44 33 44  .............D3D
  000098C0: 58 4D 41 54 52 49 58 F1 07 14 02 00 F4 12 00 00  XMATRIX.........
  000098D0: 0A 6F 70 65 72 61 74 6F 72 28 29 F1 0B 14 03 00  .operator().....
  000098E0: F5 12 00 00 10 6F 70 65 72 61 74 6F 72 20 66 6C  .....operator fl
  000098F0: 6F 61 74 20 2A F3 F2 F1 0B 14 03 00 F6 12 00 00  oat *...........
  00009900: 16 6F 70 65 72 61 74 6F 72 20 63 6F 6E 73 74 20  .operator const 
  00009910: 66 6C 6F 61 74 20 2A F1 07 14 02 00 FC 12 00 00  float *.........
  00009920: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  00009930: FB 12 00 00 0A 6F 70 65 72 61 74 6F 72 2B 3D F1  .....operator+=.
  00009940: 0B 14 03 00 FB 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009950: 72 2D 3D F1 0B 14 03 00 F8 12 00 00 0A 6F 70 65  r-=..........ope
  00009960: 72 61 74 6F 72 2F 3D F1 07 14 02 00 FF 12 00 00  rator/=.........
  00009970: 09 6F 70 65 72 61 74 6F 72 2B F2 F1 07 14 02 00  .operator+......
  00009980: 00 13 00 00 09 6F 70 65 72 61 74 6F 72 2D F2 F1  .....operator-..
  00009990: 07 14 02 00 02 13 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000099A0: 72 2A F2 F1 0B 14 03 00 01 13 00 00 09 6F 70 65  r*...........ope
  000099B0: 72 61 74 6F 72 2F F2 F1 0B 14 03 00 03 13 00 00  rator/..........
  000099C0: 0A 6F 70 65 72 61 74 6F 72 3D 3D F1 0B 14 03 00  .operator==.....
  000099D0: 03 13 00 00 0A 6F 70 65 72 61 74 6F 72 21 3D F1  .....operator!=.
  000099E0: 22 00 05 10 17 00 46 00 04 13 00 00 00 00 00 00  ".....F.........
  000099F0: 00 00 00 00 40 00 0A 44 33 44 58 4D 41 54 52 49  ....@..D3DXMATRI
  00009A00: 58 F3 F2 F1 26 00 05 10 00 00 80 00 00 00 00 00  X...&...........
  00009A10: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 58 51  ...........D3DXQ
  00009A20: 55 41 54 45 52 4E 49 4F 4E F3 F2 F1 0A 00 02 10  UATERNION.......
  00009A30: 06 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  ................
  00009A40: 06 13 00 00 07 13 00 00 0B 00 04 00 CE 12 00 00  ................
  00009A50: 00 00 00 00 1A 00 09 10 03 00 00 00 06 13 00 00  ................
  00009A60: 07 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00009A70: 1A 00 09 10 03 00 00 00 06 13 00 00 07 13 00 00  ................
  00009A80: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  00009A90: 03 00 00 00 08 13 00 00 03 00 00 00 09 13 00 00  ................
  00009AA0: 03 00 00 00 0A 13 00 00 1A 00 09 10 40 04 00 00  ............@...
  00009AB0: 06 13 00 00 07 13 00 00 0B 00 00 00 09 10 00 00  ................
  00009AC0: 00 00 00 00 0A 00 01 10 06 13 00 00 01 00 F2 F1  ................
  00009AD0: 0A 00 02 10 0D 13 00 00 0A 04 00 00 1A 00 09 10  ................
  00009AE0: 99 12 00 00 06 13 00 00 0E 13 00 00 0B 00 00 00  ................
  00009AF0: 09 10 00 00 00 00 00 00 0A 00 02 10 06 13 00 00  ................
  00009B00: 2A 00 00 00 0A 00 02 10 0D 13 00 00 2A 00 00 00  *...........*...
  00009B10: 0A 00 01 12 01 00 00 00 11 13 00 00 1A 00 09 10  ................
  00009B20: 10 13 00 00 06 13 00 00 07 13 00 00 0B 00 01 00  ................
  00009B30: 12 13 00 00 00 00 00 00 1A 00 09 10 10 13 00 00  ................
  00009B40: 06 13 00 00 07 13 00 00 0B 00 01 00 A6 12 00 00  ................
  00009B50: 00 00 00 00 12 00 06 12 03 00 00 00 14 13 00 00  ................
  00009B60: 03 00 00 00 13 13 00 00 1A 00 09 10 06 13 00 00  ................
  00009B70: 06 13 00 00 0E 13 00 00 0B 00 01 00 12 13 00 00  ................
  00009B80: 00 00 00 00 1A 00 09 10 06 13 00 00 06 13 00 00  ................
  00009B90: 0E 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009BA0: 12 00 06 12 03 00 00 00 16 13 00 00 03 00 00 00  ................
  00009BB0: 17 13 00 00 12 00 06 12 03 00 00 00 16 13 00 00  ................
  00009BC0: 03 00 00 00 17 13 00 00 1A 00 09 10 06 13 00 00  ................
  00009BD0: 06 13 00 00 0E 13 00 00 0B 00 01 00 A6 12 00 00  ................
  00009BE0: 00 00 00 00 12 00 06 12 03 00 00 00 1A 13 00 00  ................
  00009BF0: 03 00 00 00 16 13 00 00 1A 00 09 10 74 00 00 00  ............t...
  00009C00: 06 13 00 00 0E 13 00 00 0B 00 01 00 12 13 00 00  ................
  00009C10: 00 00 00 00 4E 01 03 12 07 14 03 00 0B 13 00 00  ....N...........
  00009C20: 0E 44 33 44 58 51 55 41 54 45 52 4E 49 4F 4E F1  .D3DXQUATERNION.
  00009C30: 0B 14 03 00 0C 13 00 00 10 6F 70 65 72 61 74 6F  .........operato
  00009C40: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  00009C50: 0F 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  .....operator co
  00009C60: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  00009C70: 13 13 00 00 0A 6F 70 65 72 61 74 6F 72 2B 3D F1  .....operator+=.
  00009C80: 0B 14 03 00 13 13 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009C90: 72 2D 3D F1 07 14 02 00 15 13 00 00 0A 6F 70 65  r-=..........ope
  00009CA0: 72 61 74 6F 72 2A 3D F1 0B 14 03 00 14 13 00 00  rator*=.........
  00009CB0: 0A 6F 70 65 72 61 74 6F 72 2F 3D F1 07 14 02 00  .operator/=.....
  00009CC0: 18 13 00 00 09 6F 70 65 72 61 74 6F 72 2B F2 F1  .....operator+..
  00009CD0: 07 14 02 00 19 13 00 00 09 6F 70 65 72 61 74 6F  .........operato
  00009CE0: 72 2D F2 F1 07 14 02 00 1B 13 00 00 09 6F 70 65  r-...........ope
  00009CF0: 72 61 74 6F 72 2A F2 F1 0B 14 03 00 1A 13 00 00  rator*..........
  00009D00: 09 6F 70 65 72 61 74 6F 72 2F F2 F1 0B 14 03 00  .operator/......
  00009D10: 1C 13 00 00 0A 6F 70 65 72 61 74 6F 72 3D 3D F1  .....operator==.
  00009D20: 0B 14 03 00 1C 13 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009D30: 72 21 3D F1 05 14 03 00 40 00 00 00 00 00 01 78  r!=.....@......x
  00009D40: 05 14 03 00 40 00 00 00 04 00 01 79 05 14 03 00  ....@......y....
  00009D50: 40 00 00 00 08 00 01 7A 05 14 03 00 40 00 00 00  @......z....@...
  00009D60: 0C 00 01 77 26 00 05 10 17 00 46 00 1D 13 00 00  ...w&.....F.....
  00009D70: 00 00 00 00 00 00 00 00 10 00 0E 44 33 44 58 51  ...........D3DXQ
  00009D80: 55 41 54 45 52 4E 49 4F 4E F3 F2 F1 1E 00 05 10  UATERNION.......
  00009D90: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00009DA0: 00 00 09 44 33 44 58 50 4C 41 4E 45 0A 00 02 10  ...D3DXPLANE....
  00009DB0: 1F 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  ................
  00009DC0: 1F 13 00 00 20 13 00 00 0B 00 04 00 CE 12 00 00  .... ...........
  00009DD0: 00 00 00 00 1A 00 09 10 03 00 00 00 1F 13 00 00  ................
  00009DE0: 20 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00   ...............
  00009DF0: 1A 00 09 10 03 00 00 00 1F 13 00 00 20 13 00 00  ............ ...
  00009E00: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  00009E10: 03 00 00 00 21 13 00 00 03 00 00 00 22 13 00 00  ....!......."...
  00009E20: 03 00 00 00 23 13 00 00 1A 00 09 10 40 04 00 00  ....#.......@...
  00009E30: 1F 13 00 00 20 13 00 00 0B 00 00 00 09 10 00 00  .... ...........
  00009E40: 00 00 00 00 0A 00 01 10 1F 13 00 00 01 00 F2 F1  ................
  00009E50: 0A 00 02 10 26 13 00 00 0A 04 00 00 1A 00 09 10  ....&...........
  00009E60: 99 12 00 00 1F 13 00 00 27 13 00 00 0B 00 00 00  ........'.......
  00009E70: 09 10 00 00 00 00 00 00 1A 00 09 10 1F 13 00 00  ................
  00009E80: 1F 13 00 00 27 13 00 00 0B 00 00 00 09 10 00 00  ....'...........
  00009E90: 00 00 00 00 0A 00 02 10 26 13 00 00 2A 00 00 00  ........&...*...
  00009EA0: 0A 00 01 12 01 00 00 00 2A 13 00 00 1A 00 09 10  ........*.......
  00009EB0: 74 00 00 00 1F 13 00 00 27 13 00 00 0B 00 01 00  t.......'.......
  00009EC0: 2B 13 00 00 00 00 00 00 D2 00 03 12 07 14 03 00  +...............
  00009ED0: 24 13 00 00 09 44 33 44 58 50 4C 41 4E 45 F2 F1  $....D3DXPLANE..
  00009EE0: 0B 14 03 00 25 13 00 00 10 6F 70 65 72 61 74 6F  ....%....operato
  00009EF0: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  00009F00: 28 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  (....operator co
  00009F10: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  00009F20: 29 13 00 00 09 6F 70 65 72 61 74 6F 72 2B F2 F1  )....operator+..
  00009F30: 0B 14 03 00 29 13 00 00 09 6F 70 65 72 61 74 6F  ....)....operato
  00009F40: 72 2D F2 F1 0B 14 03 00 2C 13 00 00 0A 6F 70 65  r-......,....ope
  00009F50: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 2C 13 00 00  rator==.....,...
  00009F60: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 05 14 03 00  .operator!=.....
  00009F70: 40 00 00 00 00 00 01 61 05 14 03 00 40 00 00 00  @......a....@...
  00009F80: 04 00 01 62 05 14 03 00 40 00 00 00 08 00 01 63  ...b....@......c
  00009F90: 05 14 03 00 40 00 00 00 0C 00 01 64 1E 00 05 10  ....@......d....
  00009FA0: 0D 00 46 00 2D 13 00 00 00 00 00 00 00 00 00 00  ..F.-...........
  00009FB0: 10 00 09 44 33 44 58 50 4C 41 4E 45 1E 00 05 10  ...D3DXPLANE....
  00009FC0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00009FD0: 00 00 09 44 33 44 58 43 4F 4C 4F 52 0A 00 02 10  ...D3DXCOLOR....
  00009FE0: 2F 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  /...............
  00009FF0: 2F 13 00 00 30 13 00 00 0B 00 04 00 CE 12 00 00  /...0...........
  0000A000: 00 00 00 00 0A 00 01 10 22 12 00 00 01 00 F2 F1  ........".......
  0000A010: 0A 00 02 10 32 13 00 00 2A 00 00 00 0A 00 01 12  ....2...*.......
  0000A020: 01 00 00 00 33 13 00 00 1A 00 09 10 03 00 00 00  ....3...........
  0000A030: 2F 13 00 00 30 13 00 00 0B 00 01 00 34 13 00 00  /...0.......4...
  0000A040: 00 00 00 00 1A 00 09 10 03 00 00 00 2F 13 00 00  ............/...
  0000A050: 30 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  0...............
  0000A060: 1A 00 09 10 03 00 00 00 2F 13 00 00 30 13 00 00  ......../...0...
  0000A070: 0B 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000A080: 03 00 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  ..../...0.......
  0000A090: 09 10 00 00 00 00 00 00 2A 00 06 12 03 00 00 00  ........*.......
  0000A0A0: 31 13 00 00 03 00 00 00 35 13 00 00 03 00 00 00  1.......5.......
  0000A0B0: 36 13 00 00 03 00 00 00 37 13 00 00 03 00 00 00  6.......7.......
  0000A0C0: 38 13 00 00 0A 00 01 10 2F 13 00 00 01 00 F2 F1  8......./.......
  0000A0D0: 0A 00 02 10 3A 13 00 00 0A 04 00 00 1A 00 09 10  ....:...........
  0000A0E0: 22 00 00 00 2F 13 00 00 3B 13 00 00 0B 00 00 00  ".../...;.......
  0000A0F0: 09 10 00 00 00 00 00 00 1A 00 09 10 40 04 00 00  ............@...
  0000A100: 2F 13 00 00 30 13 00 00 0B 00 00 00 09 10 00 00  /...0...........
  0000A110: 00 00 00 00 1A 00 09 10 99 12 00 00 2F 13 00 00  ............/...
  0000A120: 3B 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ;...............
  0000A130: 0A 00 02 10 22 12 00 00 0A 00 00 00 1A 00 09 10  ...."...........
  0000A140: 3F 13 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  ?.../...0.......
  0000A150: 09 10 00 00 00 00 00 00 0A 00 02 10 32 13 00 00  ............2...
  0000A160: 0A 00 00 00 1A 00 09 10 41 13 00 00 2F 13 00 00  ........A.../...
  0000A170: 3B 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ;...............
  0000A180: 0A 00 02 10 22 12 00 00 2A 00 00 00 1A 00 09 10  ...."...*.......
  0000A190: 43 13 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  C.../...0.......
  0000A1A0: 09 10 00 00 00 00 00 00 1A 00 09 10 33 13 00 00  ............3...
  0000A1B0: 2F 13 00 00 3B 13 00 00 0B 00 00 00 09 10 00 00  /...;...........
  0000A1C0: 00 00 00 00 0A 00 02 10 2F 13 00 00 2A 00 00 00  ......../...*...
  0000A1D0: 0A 00 02 10 3A 13 00 00 2A 00 00 00 0A 00 01 12  ....:...*.......
  0000A1E0: 01 00 00 00 47 13 00 00 1A 00 09 10 46 13 00 00  ....G.......F...
  0000A1F0: 2F 13 00 00 30 13 00 00 0B 00 01 00 48 13 00 00  /...0.......H...
  0000A200: 00 00 00 00 1A 00 09 10 46 13 00 00 2F 13 00 00  ........F.../...
  0000A210: 30 13 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  0...............
  0000A220: 1A 00 09 10 2F 13 00 00 2F 13 00 00 3B 13 00 00  ..../.../...;...
  0000A230: 0B 00 01 00 48 13 00 00 00 00 00 00 1A 00 09 10  ....H...........
  0000A240: 2F 13 00 00 2F 13 00 00 3B 13 00 00 0B 00 00 00  /.../...;.......
  0000A250: 09 10 00 00 00 00 00 00 12 00 06 12 03 00 00 00  ................
  0000A260: 4B 13 00 00 03 00 00 00 4C 13 00 00 12 00 06 12  K.......L.......
  0000A270: 03 00 00 00 4B 13 00 00 03 00 00 00 4C 13 00 00  ....K.......L...
  0000A280: 1A 00 09 10 2F 13 00 00 2F 13 00 00 3B 13 00 00  ..../.../...;...
  0000A290: 0B 00 01 00 A6 12 00 00 00 00 00 00 1A 00 09 10  ................
  0000A2A0: 74 00 00 00 2F 13 00 00 3B 13 00 00 0B 00 01 00  t.../...;.......
  0000A2B0: 48 13 00 00 00 00 00 00 22 02 03 12 07 14 05 00  H.......".......
  0000A2C0: 39 13 00 00 09 44 33 44 58 43 4F 4C 4F 52 F2 F1  9....D3DXCOLOR..
  0000A2D0: 0B 14 03 00 3C 13 00 00 16 6F 70 65 72 61 74 6F  ....<....operato
  0000A2E0: 72 20 75 6E 73 69 67 6E 65 64 20 6C 6F 6E 67 F1  r unsigned long.
  0000A2F0: 0B 14 03 00 3D 13 00 00 10 6F 70 65 72 61 74 6F  ....=....operato
  0000A300: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  0000A310: 3E 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  >....operator co
  0000A320: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  0000A330: 40 13 00 00 20 6F 70 65 72 61 74 6F 72 20 73 74  @... operator st
  0000A340: 72 75 63 74 20 5F 44 33 44 43 4F 4C 4F 52 56 41  ruct _D3DCOLORVA
  0000A350: 4C 55 45 20 2A F3 F2 F1 0B 14 03 00 42 13 00 00  LUE *.......B...
  0000A360: 26 6F 70 65 72 61 74 6F 72 20 63 6F 6E 73 74 20  &operator const 
  0000A370: 73 74 72 75 63 74 20 5F 44 33 44 43 4F 4C 4F 52  struct _D3DCOLOR
  0000A380: 56 41 4C 55 45 20 2A F1 0B 14 03 00 44 13 00 00  VALUE *.....D...
  0000A390: 20 6F 70 65 72 61 74 6F 72 20 73 74 72 75 63 74   operator struct
  0000A3A0: 20 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55 45 20   _D3DCOLORVALUE 
  0000A3B0: 26 F3 F2 F1 0B 14 03 00 45 13 00 00 26 6F 70 65  &.......E...&ope
  0000A3C0: 72 61 74 6F 72 20 63 6F 6E 73 74 20 73 74 72 75  rator const stru
  0000A3D0: 63 74 20 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55  ct _D3DCOLORVALU
  0000A3E0: 45 20 26 F1 0B 14 03 00 49 13 00 00 0A 6F 70 65  E &.....I....ope
  0000A3F0: 72 61 74 6F 72 2B 3D F1 0B 14 03 00 49 13 00 00  rator+=.....I...
  0000A400: 0A 6F 70 65 72 61 74 6F 72 2D 3D F1 0B 14 03 00  .operator-=.....
  0000A410: 4A 13 00 00 0A 6F 70 65 72 61 74 6F 72 2A 3D F1  J....operator*=.
  0000A420: 0B 14 03 00 4A 13 00 00 0A 6F 70 65 72 61 74 6F  ....J....operato
  0000A430: 72 2F 3D F1 07 14 02 00 4D 13 00 00 09 6F 70 65  r/=.....M....ope
  0000A440: 72 61 74 6F 72 2B F2 F1 07 14 02 00 4E 13 00 00  rator+......N...
  0000A450: 09 6F 70 65 72 61 74 6F 72 2D F2 F1 0B 14 03 00  .operator-......
  0000A460: 4F 13 00 00 09 6F 70 65 72 61 74 6F 72 2A F2 F1  O....operator*..
  0000A470: 0B 14 03 00 4F 13 00 00 09 6F 70 65 72 61 74 6F  ....O....operato
  0000A480: 72 2F F2 F1 0B 14 03 00 50 13 00 00 0A 6F 70 65  r/......P....ope
  0000A490: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 50 13 00 00  rator==.....P...
  0000A4A0: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 05 14 03 00  .operator!=.....
  0000A4B0: 40 00 00 00 00 00 01 72 05 14 03 00 40 00 00 00  @......r....@...
  0000A4C0: 04 00 01 67 05 14 03 00 40 00 00 00 08 00 01 62  ...g....@......b
  0000A4D0: 05 14 03 00 40 00 00 00 0C 00 01 61 1E 00 05 10  ....@......a....
  0000A4E0: 1C 00 46 00 51 13 00 00 00 00 00 00 00 00 00 00  ..F.Q...........
  0000A4F0: 10 00 09 44 33 44 58 43 4F 4C 4F 52 26 00 03 12  ...D3DXCOLOR&...
  0000A500: 05 14 03 00 40 00 00 00 00 00 01 78 05 14 03 00  ....@......x....
  0000A510: 40 00 00 00 04 00 01 79 05 14 03 00 40 00 00 00  @......y....@...
  0000A520: 08 00 01 7A 22 00 05 10 03 00 00 00 53 13 00 00  ...z".......S...
  0000A530: 00 00 00 00 00 00 00 00 0C 00 0A 5F 44 33 44 56  ..........._D3DV
  0000A540: 45 43 54 4F 52 F3 F2 F1 32 00 03 12 05 14 03 00  ECTOR...2.......
  0000A550: 40 00 00 00 00 00 01 72 05 14 03 00 40 00 00 00  @......r....@...
  0000A560: 04 00 01 67 05 14 03 00 40 00 00 00 08 00 01 62  ...g....@......b
  0000A570: 05 14 03 00 40 00 00 00 0C 00 01 61 26 00 05 10  ....@......a&...
  0000A580: 04 00 00 00 55 13 00 00 00 00 00 00 00 00 00 00  ....U...........
  0000A590: 10 00 0E 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55  ..._D3DCOLORVALU
  0000A5A0: 45 F3 F2 F1 0A 00 02 10 9F 12 00 00 0A 00 00 00  E...............
  0000A5B0: 0A 00 02 10 94 12 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A5C0: BC 12 00 00 0A 00 00 00 0A 00 02 10 B0 12 00 00  ................
  0000A5D0: 0A 00 00 00 0A 00 02 10 D4 12 00 00 0A 00 00 00  ................
  0000A5E0: 0A 00 02 10 CC 12 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A5F0: E4 12 00 00 0A 00 00 00 0A 00 02 10 EF 12 00 00  ................
  0000A600: 0A 00 00 00 0A 00 02 10 0D 13 00 00 0A 00 00 00  ................
  0000A610: 0A 00 02 10 06 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A620: 26 13 00 00 0A 00 00 00 0A 00 02 10 3A 13 00 00  &...........:...
  0000A630: 0A 00 00 00 0A 00 02 10 2F 13 00 00 0A 00 00 00  ......../.......
  0000A640: 0A 00 02 10 03 04 00 00 0A 00 00 00 0A 00 01 10  ................
  0000A650: 00 10 00 00 01 00 F2 F1 0A 00 02 10 65 13 00 00  ............e...
  0000A660: 2A 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  *..."...........
  0000A670: 00 00 00 00 00 00 00 00 00 00 0C 49 44 69 72 65  ...........IDire
  0000A680: 63 74 53 6F 75 6E 64 F1 0A 00 02 10 67 13 00 00  ctSound.....g...
  0000A690: 0A 04 00 00 0E 00 01 12 02 00 00 00 66 13 00 00  ............f...
  0000A6A0: 64 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  d...........g...
  0000A6B0: 68 13 00 00 07 00 02 00 69 13 00 00 00 00 00 00  h.......i.......
  0000A6C0: 1A 00 09 10 22 00 00 00 67 13 00 00 68 13 00 00  ...."...g...h...
  0000A6D0: 07 00 00 00 09 10 00 00 00 00 00 00 1E 00 05 10  ................
  0000A6E0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A6F0: 00 00 07 5F 44 53 43 41 50 53 F2 F1 0A 00 02 10  ..._DSCAPS......
  0000A700: 6C 13 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  l...............
  0000A710: 6D 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  m...........g...
  0000A720: 68 13 00 00 07 00 01 00 6E 13 00 00 00 00 00 00  h.......n.......
  0000A730: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000A740: 00 00 00 00 00 00 0D 5F 44 53 42 55 46 46 45 52  ......._DSBUFFER
  0000A750: 44 45 53 43 0A 00 01 10 70 13 00 00 01 00 F2 F1  DESC....p.......
  0000A760: 0A 00 02 10 71 13 00 00 0A 00 00 00 2A 00 05 10  ....q.......*...
  0000A770: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A780: 00 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 42  ...IDirectSoundB
  0000A790: 75 66 66 65 72 F3 F2 F1 0A 00 02 10 73 13 00 00  uffer.......s...
  0000A7A0: 0A 00 00 00 0A 00 02 10 74 13 00 00 0A 00 00 00  ........t.......
  0000A7B0: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  0000A7C0: 00 00 00 00 00 00 08 49 55 6E 6B 6E 6F 77 6E F1  .......IUnknown.
  0000A7D0: 0A 00 02 10 76 13 00 00 0A 00 00 00 12 00 01 12  ....v...........
  0000A7E0: 03 00 00 00 72 13 00 00 75 13 00 00 77 13 00 00  ....r...u...w...
  0000A7F0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A800: 07 00 03 00 78 13 00 00 00 00 00 00 22 00 05 10  ....x......."...
  0000A810: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A820: 00 00 0D 5F 44 53 53 54 52 45 41 4D 44 45 53 43  ..._DSSTREAMDESC
  0000A830: 0A 00 01 10 7A 13 00 00 01 00 F2 F1 0A 00 02 10  ....z...........
  0000A840: 7B 13 00 00 0A 00 00 00 2A 00 05 10 00 00 80 00  {.......*.......
  0000A850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 49  ...............I
  0000A860: 44 69 72 65 63 74 53 6F 75 6E 64 53 74 72 65 61  DirectSoundStrea
  0000A870: 6D F3 F2 F1 0A 00 02 10 7D 13 00 00 0A 00 00 00  m.......}.......
  0000A880: 0A 00 02 10 7E 13 00 00 0A 00 00 00 12 00 01 12  ....~...........
  0000A890: 03 00 00 00 7C 13 00 00 7F 13 00 00 77 13 00 00  ....|.......w...
  0000A8A0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A8B0: 07 00 03 00 80 13 00 00 00 00 00 00 0A 00 01 12  ................
  0000A8C0: 01 00 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000A8D0: 67 13 00 00 68 13 00 00 07 00 01 00 82 13 00 00  g...h...........
  0000A8E0: 00 00 00 00 0E 00 01 12 02 00 00 00 AD 11 00 00  ................
  0000A8F0: 22 00 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  "...........g...
  0000A900: 68 13 00 00 07 00 02 00 84 13 00 00 00 00 00 00  h...............
  0000A910: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A920: 07 00 00 00 09 10 00 00 00 00 00 00 0A 00 02 10  ................
  0000A930: D4 10 00 00 0A 00 00 00 26 00 05 10 00 00 80 00  ........&.......
  0000A940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5F  ..............._
  0000A950: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  0000A960: 0A 00 01 10 88 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000A970: 89 13 00 00 0A 00 00 00 2A 00 05 10 00 00 80 00  ........*.......
  0000A980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 5F  ..............._
  0000A990: 44 53 45 46 46 45 43 54 49 4D 41 47 45 44 45 53  DSEFFECTIMAGEDES
  0000A9A0: 43 F3 F2 F1 0A 00 02 10 8B 13 00 00 0A 00 00 00  C...............
  0000A9B0: 0A 00 02 10 8C 13 00 00 0A 00 00 00 16 00 01 12  ................
  0000A9C0: 04 00 00 00 87 13 00 00 22 00 00 00 8A 13 00 00  ........".......
  0000A9D0: 8D 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  ............g...
  0000A9E0: 68 13 00 00 07 00 04 00 8E 13 00 00 00 00 00 00  h...............
  0000A9F0: 16 00 01 12 04 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  0000AA00: 03 04 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000AA10: 67 13 00 00 68 13 00 00 07 00 04 00 90 13 00 00  g...h...........
  0000AA20: 00 00 00 00 1A 00 01 12 05 00 00 00 22 00 00 00  ............"...
  0000AA30: 22 00 00 00 87 13 00 00 22 00 00 00 22 00 00 00  "......."..."...
  0000AA40: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AA50: 07 00 05 00 92 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000AA60: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 01 00  ....g...h.......
  0000AA70: 2F 11 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  /...............
  0000AA80: 67 13 00 00 68 13 00 00 07 00 02 00 31 10 00 00  g...h.......1...
  0000AA90: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  0000AAA0: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 53 33 44  ..........._DS3D
  0000AAB0: 4C 49 53 54 45 4E 45 52 0A 00 01 10 96 13 00 00  LISTENER........
  0000AAC0: 01 00 F2 F1 0A 00 02 10 97 13 00 00 0A 00 00 00  ................
  0000AAD0: 0E 00 01 12 02 00 00 00 98 13 00 00 22 00 00 00  ............"...
  0000AAE0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AAF0: 07 00 02 00 99 13 00 00 00 00 00 00 0E 00 01 12  ................
  0000AB00: 02 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  ....@...".......
  0000AB10: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 02 00  ....g...h.......
  0000AB20: 9B 13 00 00 00 00 00 00 22 00 01 12 07 00 00 00  ........".......
  0000AB30: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  0000AB40: 40 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  @...@...".......
  0000AB50: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 07 00  ....g...h.......
  0000AB60: 9D 13 00 00 00 00 00 00 16 00 01 12 04 00 00 00  ................
  0000AB70: 40 00 00 00 40 00 00 00 40 00 00 00 22 00 00 00  @...@...@..."...
  0000AB80: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AB90: 07 00 04 00 9F 13 00 00 00 00 00 00 26 00 05 10  ............&...
  0000ABA0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000ABB0: 00 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  ..._DSI3DL2LISTE
  0000ABC0: 4E 45 52 F1 0A 00 01 10 A1 13 00 00 01 00 F2 F1  NER.............
  0000ABD0: 0A 00 02 10 A2 13 00 00 0A 00 00 00 0E 00 01 12  ................
  0000ABE0: 02 00 00 00 A3 13 00 00 22 00 00 00 1A 00 09 10  ........".......
  0000ABF0: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 02 00  ....g...h.......
  0000AC00: A4 13 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000AC10: 13 04 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  ............g...
  0000AC20: 68 13 00 00 07 00 01 00 A6 13 00 00 00 00 00 00  h...............
  0000AC30: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  0000AC40: 00 00 00 00 00 00 0F 5F 44 53 4F 55 54 50 55 54  ......._DSOUTPUT
  0000AC50: 4C 45 56 45 4C 53 F2 F1 0A 00 02 10 A8 13 00 00  LEVELS..........
  0000AC60: 0A 00 00 00 0E 00 01 12 02 00 00 00 A9 13 00 00  ................
  0000AC70: 74 00 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  t...........g...
  0000AC80: 68 13 00 00 07 00 02 00 AA 13 00 00 00 00 00 00  h...............
  0000AC90: 82 02 03 12 0B 14 03 00 6A 13 00 00 0E 51 75 65  ........j....Que
  0000ACA0: 72 79 49 6E 74 65 72 66 61 63 65 F1 0B 14 03 00  ryInterface.....
  0000ACB0: 6B 13 00 00 06 41 64 64 52 65 66 F1 0B 14 03 00  k....AddRef.....
  0000ACC0: 6B 13 00 00 07 52 65 6C 65 61 73 65 0B 14 03 00  k....Release....
  0000ACD0: 6F 13 00 00 07 47 65 74 43 61 70 73 0B 14 03 00  o....GetCaps....
  0000ACE0: 79 13 00 00 11 43 72 65 61 74 65 53 6F 75 6E 64  y....CreateSound
  0000ACF0: 42 75 66 66 65 72 F2 F1 0B 14 03 00 81 13 00 00  Buffer..........
  0000AD00: 11 43 72 65 61 74 65 53 6F 75 6E 64 53 74 72 65  .CreateSoundStre
  0000AD10: 61 6D F2 F1 0B 14 03 00 83 13 00 00 10 47 65 74  am...........Get
  0000AD20: 53 70 65 61 6B 65 72 43 6F 6E 66 69 67 F3 F2 F1  SpeakerConfig...
  0000AD30: 0B 14 03 00 85 13 00 00 13 53 65 74 43 6F 6F 70  .........SetCoop
  0000AD40: 65 72 61 74 69 76 65 4C 65 76 65 6C 0B 14 03 00  erativeLevel....
  0000AD50: 86 13 00 00 07 43 6F 6D 70 61 63 74 0B 14 03 00  .....Compact....
  0000AD60: 8F 13 00 00 14 44 6F 77 6E 6C 6F 61 64 45 66 66  .....DownloadEff
  0000AD70: 65 63 74 73 49 6D 61 67 65 F3 F2 F1 0B 14 03 00  ectsImage.......
  0000AD80: 91 13 00 00 0D 47 65 74 45 66 66 65 63 74 44 61  .....GetEffectDa
  0000AD90: 74 61 F2 F1 0B 14 03 00 93 13 00 00 0D 53 65 74  ta...........Set
  0000ADA0: 45 66 66 65 63 74 44 61 74 61 F2 F1 0B 14 03 00  EffectData......
  0000ADB0: 86 13 00 00 10 43 6F 6D 6D 69 74 45 66 66 65 63  .....CommitEffec
  0000ADC0: 74 44 61 74 61 F3 F2 F1 0B 14 03 00 94 13 00 00  tData...........
  0000ADD0: 10 45 6E 61 62 6C 65 48 65 61 64 70 68 6F 6E 65  .EnableHeadphone
  0000ADE0: 73 F3 F2 F1 0B 14 03 00 95 13 00 00 11 53 65 74  s............Set
  0000ADF0: 4D 69 78 42 69 6E 48 65 61 64 72 6F 6F 6D F2 F1  MixBinHeadroom..
  0000AE00: 0B 14 03 00 9A 13 00 00 10 53 65 74 41 6C 6C 50  .........SetAllP
  0000AE10: 61 72 61 6D 65 74 65 72 73 F3 F2 F1 0B 14 03 00  arameters.......
  0000AE20: 9C 13 00 00 11 53 65 74 44 69 73 74 61 6E 63 65  .....SetDistance
  0000AE30: 46 61 63 74 6F 72 F2 F1 0B 14 03 00 9C 13 00 00  Factor..........
  0000AE40: 10 53 65 74 44 6F 70 70 6C 65 72 46 61 63 74 6F  .SetDopplerFacto
  0000AE50: 72 F3 F2 F1 0B 14 03 00 9E 13 00 00 0E 53 65 74  r............Set
  0000AE60: 4F 72 69 65 6E 74 61 74 69 6F 6E F1 0B 14 03 00  Orientation.....
  0000AE70: A0 13 00 00 0B 53 65 74 50 6F 73 69 74 69 6F 6E  .....SetPosition
  0000AE80: 0B 14 03 00 9C 13 00 00 10 53 65 74 52 6F 6C 6C  .........SetRoll
  0000AE90: 6F 66 66 46 61 63 74 6F 72 F3 F2 F1 0B 14 03 00  offFactor.......
  0000AEA0: A0 13 00 00 0B 53 65 74 56 65 6C 6F 63 69 74 79  .....SetVelocity
  0000AEB0: 0B 14 03 00 A5 13 00 00 10 53 65 74 49 33 44 4C  .........SetI3DL
  0000AEC0: 32 4C 69 73 74 65 6E 65 72 F3 F2 F1 0B 14 03 00  2Listener.......
  0000AED0: 86 13 00 00 16 43 6F 6D 6D 69 74 44 65 66 65 72  .....CommitDefer
  0000AEE0: 72 65 64 53 65 74 74 69 6E 67 73 F1 0B 14 03 00  redSettings.....
  0000AEF0: A7 13 00 00 07 47 65 74 54 69 6D 65 0B 14 03 00  .....GetTime....
  0000AF00: AB 13 00 00 0F 47 65 74 4F 75 74 70 75 74 4C 65  .....GetOutputLe
  0000AF10: 76 65 6C 73 22 00 05 10 1A 00 00 00 AC 13 00 00  vels"...........
  0000AF20: 00 00 00 00 00 00 00 00 01 00 0C 49 44 69 72 65  ...........IDire
  0000AF30: 63 74 53 6F 75 6E 64 F1 72 00 03 12 05 14 03 00  ctSound.r.......
  0000AF40: 22 00 00 00 00 00 0F 64 77 46 72 65 65 32 44 42  "......dwFree2DB
  0000AF50: 75 66 66 65 72 73 F2 F1 05 14 03 00 22 00 00 00  uffers......"...
  0000AF60: 04 00 0F 64 77 46 72 65 65 33 44 42 75 66 66 65  ...dwFree3DBuffe
  0000AF70: 72 73 F2 F1 05 14 03 00 22 00 00 00 08 00 10 64  rs......"......d
  0000AF80: 77 46 72 65 65 42 75 66 66 65 72 53 47 45 73 F1  wFreeBufferSGEs.
  0000AF90: 05 14 03 00 22 00 00 00 0C 00 11 64 77 4D 65 6D  ...."......dwMem
  0000AFA0: 6F 72 79 41 6C 6C 6F 63 61 74 65 64 1E 00 05 10  oryAllocated....
  0000AFB0: 04 00 00 00 AE 13 00 00 00 00 00 00 00 00 00 00  ................
  0000AFC0: 10 00 07 5F 44 53 43 41 50 53 F2 F1 06 00 0A 00  ..._DSCAPS......
  0000AFD0: 03 00 55 50 0A 00 02 10 B0 13 00 00 0A 00 00 00  ..UP............
  0000AFE0: 0A 00 02 10 03 04 00 00 0A 00 00 00 0E 00 01 12  ................
  0000AFF0: 02 00 00 00 66 13 00 00 B2 13 00 00 0A 00 02 10  ....f...........
  0000B000: 76 13 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  v...............
  0000B010: 76 13 00 00 B4 13 00 00 07 00 02 00 B3 13 00 00  v...............
  0000B020: 00 00 00 00 1A 00 09 10 22 00 00 00 76 13 00 00  ........"...v...
  0000B030: B4 13 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  0000B040: 0A 00 01 10 76 13 00 00 01 00 F2 F1 0A 00 02 10  ....v...........
  0000B050: B7 13 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  0000B060: B8 13 00 00 1A 00 09 10 03 00 00 00 76 13 00 00  ............v...
  0000B070: B4 13 00 00 0B 00 01 00 B9 13 00 00 00 00 00 00  ................
  0000B080: 1A 00 09 10 03 00 00 00 76 13 00 00 B4 13 00 00  ........v.......
  0000B090: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000B0A0: 03 01 00 00 BA 13 00 00 03 01 00 00 BB 13 00 00  ................
  0000B0B0: 62 00 03 12 09 14 00 00 B1 13 00 00 0B 14 1B 00  b...............
  0000B0C0: B5 13 00 00 00 00 00 00 0E 51 75 65 72 79 49 6E  .........QueryIn
  0000B0D0: 74 65 72 66 61 63 65 F1 0B 14 1B 00 B6 13 00 00  terface.........
  0000B0E0: 04 00 00 00 06 41 64 64 52 65 66 F1 0B 14 1B 00  .....AddRef.....
  0000B0F0: B6 13 00 00 08 00 00 00 07 52 65 6C 65 61 73 65  .........Release
  0000B100: 07 14 02 00 BC 13 00 00 08 49 55 6E 6B 6E 6F 77  .........IUnknow
  0000B110: 6E F3 F2 F1 06 00 0A 00 03 00 55 50 1E 00 05 10  n.........UP....
  0000B120: 06 00 02 00 BD 13 00 00 00 00 00 00 BE 13 00 00  ................
  0000B130: 04 00 08 49 55 6E 6B 6E 6F 77 6E F1 22 00 05 10  ...IUnknown."...
  0000B140: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000B150: 00 00 0D 74 57 41 56 45 46 4F 52 4D 41 54 45 58  ...tWAVEFORMATEX
  0000B160: 0A 00 02 10 C0 13 00 00 0A 00 00 00 22 00 05 10  ............"...
  0000B170: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000B180: 00 00 0A 5F 44 53 4D 49 58 42 49 4E 53 F3 F2 F1  ..._DSMIXBINS...
  0000B190: 0A 00 01 10 C2 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000B1A0: C3 13 00 00 0A 00 00 00 86 00 03 12 05 14 03 00  ................
  0000B1B0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000B1C0: 05 14 03 00 22 00 00 00 04 00 07 64 77 46 6C 61  ...."......dwFla
  0000B1D0: 67 73 F2 F1 05 14 03 00 22 00 00 00 08 00 0D 64  gs......"......d
  0000B1E0: 77 42 75 66 66 65 72 42 79 74 65 73 05 14 03 00  wBufferBytes....
  0000B1F0: C1 13 00 00 0C 00 0B 6C 70 77 66 78 46 6F 72 6D  .......lpwfxForm
  0000B200: 61 74 F2 F1 05 14 03 00 C4 13 00 00 10 00 09 6C  at.............l
  0000B210: 70 4D 69 78 42 69 6E 73 05 14 03 00 22 00 00 00  pMixBins...."...
  0000B220: 14 00 0D 64 77 49 6E 70 75 74 4D 69 78 42 69 6E  ...dwInputMixBin
  0000B230: 22 00 05 10 06 00 00 00 C5 13 00 00 00 00 00 00  "...............
  0000B240: 00 00 00 00 18 00 0D 5F 44 53 42 55 46 46 45 52  ......._DSBUFFER
  0000B250: 44 45 53 43 12 00 01 12 03 00 00 00 03 04 00 00  DESC............
  0000B260: 03 04 00 00 22 00 00 00 0E 00 08 10 03 00 00 00  ...."...........
  0000B270: 07 00 03 00 C7 13 00 00 0A 00 02 10 C8 13 00 00  ................
  0000B280: 0A 00 00 00 92 00 03 12 05 14 03 00 22 00 00 00  ............"...
  0000B290: 00 00 07 64 77 46 6C 61 67 73 F2 F1 05 14 03 00  ...dwFlags......
  0000B2A0: 22 00 00 00 04 00 14 64 77 4D 61 78 41 74 74 61  "......dwMaxAtta
  0000B2B0: 63 68 65 64 50 61 63 6B 65 74 73 F1 05 14 03 00  chedPackets.....
  0000B2C0: C1 13 00 00 08 00 0B 6C 70 77 66 78 46 6F 72 6D  .......lpwfxForm
  0000B2D0: 61 74 F2 F1 05 14 03 00 C9 13 00 00 0C 00 0C 6C  at.............l
  0000B2E0: 70 66 6E 43 61 6C 6C 62 61 63 6B F1 05 14 03 00  pfnCallback.....
  0000B2F0: 03 04 00 00 10 00 0A 6C 70 76 43 6F 6E 74 65 78  .......lpvContex
  0000B300: 74 F3 F2 F1 05 14 03 00 C4 13 00 00 14 00 09 6C  t..............l
  0000B310: 70 4D 69 78 42 69 6E 73 22 00 05 10 06 00 00 00  pMixBins".......
  0000B320: CA 13 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  ..............._
  0000B330: 44 53 53 54 52 45 41 4D 44 45 53 43 16 00 03 12  DSSTREAMDESC....
  0000B340: 05 14 03 00 74 00 00 00 00 00 06 75 6E 75 73 65  ....t......unuse
  0000B350: 64 F3 F2 F1 1E 00 05 10 01 00 00 00 CC 13 00 00  d...............
  0000B360: 00 00 00 00 00 00 00 00 04 00 06 48 57 4E 44 5F  ...........HWND_
  0000B370: 5F F3 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  _..."...........
  0000B380: 00 00 00 00 00 00 00 00 00 00 0C 5F 44 53 45 46  ..........._DSEF
  0000B390: 46 45 43 54 4D 41 50 F1 0E 00 03 10 CE 13 00 00  FECTMAP.........
  0000B3A0: 11 00 00 00 20 00 00 F1 52 00 03 12 05 14 03 00  .... ...R.......
  0000B3B0: 22 00 00 00 00 00 0D 64 77 45 66 66 65 63 74 43  "......dwEffectC
  0000B3C0: 6F 75 6E 74 05 14 03 00 22 00 00 00 04 00 12 64  ount...."......d
  0000B3D0: 77 54 6F 74 61 6C 53 63 72 61 74 63 68 53 69 7A  wTotalScratchSiz
  0000B3E0: 65 F3 F2 F1 05 14 03 00 CF 13 00 00 08 00 0B 61  e..............a
  0000B3F0: 45 66 66 65 63 74 4D 61 70 73 F2 F1 2A 00 05 10  EffectMaps..*...
  0000B400: 03 00 00 00 D0 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B410: 28 00 12 5F 44 53 45 46 46 45 43 54 49 4D 41 47  (.._DSEFFECTIMAG
  0000B420: 45 44 45 53 43 F3 F2 F1 3E 00 03 12 05 14 03 00  EDESC...>.......
  0000B430: 22 00 00 00 00 00 12 64 77 49 33 44 4C 32 52 65  "......dwI3DL2Re
  0000B440: 76 65 72 62 49 6E 64 65 78 F3 F2 F1 05 14 03 00  verbIndex.......
  0000B450: 22 00 00 00 04 00 10 64 77 43 72 6F 73 73 74 61  "......dwCrossta
  0000B460: 6C 6B 49 6E 64 65 78 F1 26 00 05 10 02 00 00 00  lkIndex.&.......
  0000B470: D2 13 00 00 00 00 00 00 00 00 00 00 08 00 11 5F  ..............._
  0000B480: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  0000B490: 0A 00 02 10 96 13 00 00 0A 04 00 00 1A 00 09 10  ................
  0000B4A0: 03 00 00 00 96 13 00 00 D4 13 00 00 0B 00 00 00  ................
  0000B4B0: 09 10 00 00 00 00 00 00 DA 00 03 12 05 14 03 00  ................
  0000B4C0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000B4D0: 05 14 03 00 B0 12 00 00 04 00 09 76 50 6F 73 69  ...........vPosi
  0000B4E0: 74 69 6F 6E 05 14 03 00 B0 12 00 00 10 00 09 76  tion...........v
  0000B4F0: 56 65 6C 6F 63 69 74 79 05 14 03 00 B0 12 00 00  Velocity........
  0000B500: 1C 00 0C 76 4F 72 69 65 6E 74 46 72 6F 6E 74 F1  ...vOrientFront.
  0000B510: 05 14 03 00 B0 12 00 00 28 00 0A 76 4F 72 69 65  ........(..vOrie
  0000B520: 6E 74 54 6F 70 F3 F2 F1 05 14 03 00 40 00 00 00  ntTop.......@...
  0000B530: 34 00 10 66 6C 44 69 73 74 61 6E 63 65 46 61 63  4..flDistanceFac
  0000B540: 74 6F 72 F1 05 14 03 00 40 00 00 00 38 00 0F 66  tor.....@...8..f
  0000B550: 6C 52 6F 6C 6C 6F 66 66 46 61 63 74 6F 72 F2 F1  lRolloffFactor..
  0000B560: 05 14 03 00 40 00 00 00 3C 00 0F 66 6C 44 6F 70  ....@...<..flDop
  0000B570: 70 6C 65 72 46 61 63 74 6F 72 F2 F1 0B 14 03 01  plerFactor......
  0000B580: D5 13 00 00 0D 5F 44 53 33 44 4C 49 53 54 45 4E  ....._DS3DLISTEN
  0000B590: 45 52 F2 F1 22 00 05 10 09 00 02 00 D6 13 00 00  ER.."...........
  0000B5A0: 00 00 00 00 00 00 00 00 40 00 0D 5F 44 53 33 44  ........@.._DS3D
  0000B5B0: 4C 49 53 54 45 4E 45 52 22 01 03 12 05 14 03 00  LISTENER".......
  0000B5C0: 12 00 00 00 00 00 05 6C 52 6F 6F 6D 05 14 03 00  .......lRoom....
  0000B5D0: 12 00 00 00 04 00 07 6C 52 6F 6F 6D 48 46 F2 F1  .......lRoomHF..
  0000B5E0: 05 14 03 00 40 00 00 00 08 00 13 66 6C 52 6F 6F  ....@......flRoo
  0000B5F0: 6D 52 6F 6C 6C 6F 66 66 46 61 63 74 6F 72 F2 F1  mRolloffFactor..
  0000B600: 05 14 03 00 40 00 00 00 0C 00 0B 66 6C 44 65 63  ....@......flDec
  0000B610: 61 79 54 69 6D 65 F2 F1 05 14 03 00 40 00 00 00  ayTime......@...
  0000B620: 10 00 0E 66 6C 44 65 63 61 79 48 46 52 61 74 69  ...flDecayHFRati
  0000B630: 6F F3 F2 F1 05 14 03 00 12 00 00 00 14 00 0C 6C  o..............l
  0000B640: 52 65 66 6C 65 63 74 69 6F 6E 73 F1 05 14 03 00  Reflections.....
  0000B650: 40 00 00 00 18 00 12 66 6C 52 65 66 6C 65 63 74  @......flReflect
  0000B660: 69 6F 6E 73 44 65 6C 61 79 F3 F2 F1 05 14 03 00  ionsDelay.......
  0000B670: 12 00 00 00 1C 00 07 6C 52 65 76 65 72 62 F2 F1  .......lReverb..
  0000B680: 05 14 03 00 40 00 00 00 20 00 0D 66 6C 52 65 76  ....@... ..flRev
  0000B690: 65 72 62 44 65 6C 61 79 05 14 03 00 40 00 00 00  erbDelay....@...
  0000B6A0: 24 00 0B 66 6C 44 69 66 66 75 73 69 6F 6E F2 F1  $..flDiffusion..
  0000B6B0: 05 14 03 00 40 00 00 00 28 00 09 66 6C 44 65 6E  ....@...(..flDen
  0000B6C0: 73 69 74 79 05 14 03 00 40 00 00 00 2C 00 0D 66  sity....@...,..f
  0000B6D0: 6C 48 46 52 65 66 65 72 65 6E 63 65 26 00 05 10  lHFReference&...
  0000B6E0: 0C 00 00 00 D8 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B6F0: 30 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  0.._DSI3DL2LISTE
  0000B700: 4E 45 52 F1 26 02 03 12 05 14 03 00 22 00 00 00  NER.&......."...
  0000B710: 00 00 15 64 77 41 6E 61 6C 6F 67 4C 65 66 74 54  ...dwAnalogLeftT
  0000B720: 6F 74 61 6C 50 65 61 6B 05 14 03 00 22 00 00 00  otalPeak...."...
  0000B730: 04 00 16 64 77 41 6E 61 6C 6F 67 52 69 67 68 74  ...dwAnalogRight
  0000B740: 54 6F 74 61 6C 50 65 61 6B F3 F2 F1 05 14 03 00  TotalPeak.......
  0000B750: 22 00 00 00 08 00 14 64 77 41 6E 61 6C 6F 67 4C  "......dwAnalogL
  0000B760: 65 66 74 54 6F 74 61 6C 52 4D 53 F1 05 14 03 00  eftTotalRMS.....
  0000B770: 22 00 00 00 0C 00 15 64 77 41 6E 61 6C 6F 67 52  "......dwAnalogR
  0000B780: 69 67 68 74 54 6F 74 61 6C 52 4D 53 05 14 03 00  ightTotalRMS....
  0000B790: 22 00 00 00 10 00 16 64 77 44 69 67 69 74 61 6C  "......dwDigital
  0000B7A0: 46 72 6F 6E 74 4C 65 66 74 50 65 61 6B F3 F2 F1  FrontLeftPeak...
  0000B7B0: 05 14 03 00 22 00 00 00 14 00 18 64 77 44 69 67  ...."......dwDig
  0000B7C0: 69 74 61 6C 46 72 6F 6E 74 43 65 6E 74 65 72 50  italFrontCenterP
  0000B7D0: 65 61 6B F1 05 14 03 00 22 00 00 00 18 00 17 64  eak....."......d
  0000B7E0: 77 44 69 67 69 74 61 6C 46 72 6F 6E 74 52 69 67  wDigitalFrontRig
  0000B7F0: 68 74 50 65 61 6B F2 F1 05 14 03 00 22 00 00 00  htPeak......"...
  0000B800: 1C 00 15 64 77 44 69 67 69 74 61 6C 42 61 63 6B  ...dwDigitalBack
  0000B810: 4C 65 66 74 50 65 61 6B 05 14 03 00 22 00 00 00  LeftPeak...."...
  0000B820: 20 00 16 64 77 44 69 67 69 74 61 6C 42 61 63 6B   ..dwDigitalBack
  0000B830: 52 69 67 68 74 50 65 61 6B F3 F2 F1 05 14 03 00  RightPeak.......
  0000B840: 22 00 00 00 24 00 19 64 77 44 69 67 69 74 61 6C  "...$..dwDigital
  0000B850: 4C 6F 77 46 72 65 71 75 65 6E 63 79 50 65 61 6B  LowFrequencyPeak
  0000B860: 05 14 03 00 22 00 00 00 28 00 15 64 77 44 69 67  ...."...(..dwDig
  0000B870: 69 74 61 6C 46 72 6F 6E 74 4C 65 66 74 52 4D 53  italFrontLeftRMS
  0000B880: 05 14 03 00 22 00 00 00 2C 00 17 64 77 44 69 67  ...."...,..dwDig
  0000B890: 69 74 61 6C 46 72 6F 6E 74 43 65 6E 74 65 72 52  italFrontCenterR
  0000B8A0: 4D 53 F2 F1 05 14 03 00 22 00 00 00 30 00 16 64  MS......"...0..d
  0000B8B0: 77 44 69 67 69 74 61 6C 46 72 6F 6E 74 52 69 67  wDigitalFrontRig
  0000B8C0: 68 74 52 4D 53 F3 F2 F1 05 14 03 00 22 00 00 00  htRMS......."...
  0000B8D0: 34 00 14 64 77 44 69 67 69 74 61 6C 42 61 63 6B  4..dwDigitalBack
  0000B8E0: 4C 65 66 74 52 4D 53 F1 05 14 03 00 22 00 00 00  LeftRMS....."...
  0000B8F0: 38 00 15 64 77 44 69 67 69 74 61 6C 42 61 63 6B  8..dwDigitalBack
  0000B900: 52 69 67 68 74 52 4D 53 05 14 03 00 22 00 00 00  RightRMS...."...
  0000B910: 3C 00 18 64 77 44 69 67 69 74 61 6C 4C 6F 77 46  <..dwDigitalLowF
  0000B920: 72 65 71 75 65 6E 63 79 52 4D 53 F1 26 00 05 10  requencyRMS.&...
  0000B930: 10 00 00 00 DA 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B940: 40 00 0F 5F 44 53 4F 55 54 50 55 54 4C 45 56 45  @.._DSOUTPUTLEVE
  0000B950: 4C 53 F2 F1 0A 00 02 10 73 13 00 00 0A 04 00 00  LS......s.......
  0000B960: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000B970: 07 00 02 00 69 13 00 00 00 00 00 00 1A 00 09 10  ....i...........
  0000B980: 22 00 00 00 73 13 00 00 DC 13 00 00 07 00 00 00  "...s...........
  0000B990: 09 10 00 00 00 00 00 00 0A 00 01 10 C0 13 00 00  ................
  0000B9A0: 01 00 F2 F1 0A 00 02 10 DF 13 00 00 0A 00 00 00  ................
  0000B9B0: 0A 00 01 12 01 00 00 00 E0 13 00 00 1A 00 09 10  ................
  0000B9C0: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 01 00  ....s...........
  0000B9D0: E1 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000B9E0: 73 13 00 00 DC 13 00 00 07 00 01 00 BB 10 00 00  s...............
  0000B9F0: 00 00 00 00 0A 00 01 12 01 00 00 00 12 00 00 00  ................
  0000BA00: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BA10: 07 00 01 00 E4 13 00 00 00 00 00 00 22 00 05 10  ............"...
  0000BA20: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000BA30: 00 00 0A 5F 44 53 4C 46 4F 44 45 53 43 F3 F2 F1  ..._DSLFODESC...
  0000BA40: 0A 00 01 10 E6 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000BA50: E7 13 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000BA60: E8 13 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BA70: DC 13 00 00 07 00 01 00 E9 13 00 00 00 00 00 00  ................
  0000BA80: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  0000BA90: 00 00 00 00 00 00 0F 5F 44 53 45 4E 56 45 4C 4F  ......._DSENVELO
  0000BAA0: 50 45 44 45 53 43 F2 F1 0A 00 01 10 EB 13 00 00  PEDESC..........
  0000BAB0: 01 00 F2 F1 0A 00 02 10 EC 13 00 00 0A 00 00 00  ................
  0000BAC0: 0A 00 01 12 01 00 00 00 ED 13 00 00 1A 00 09 10  ................
  0000BAD0: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 01 00  ....s...........
  0000BAE0: EE 13 00 00 00 00 00 00 22 00 05 10 00 00 80 00  ........".......
  0000BAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 5F  ..............._
  0000BB00: 44 53 46 49 4C 54 45 52 44 45 53 43 0A 00 01 10  DSFILTERDESC....
  0000BB10: F0 13 00 00 01 00 F2 F1 0A 00 02 10 F1 13 00 00  ................
  0000BB20: 0A 00 00 00 0A 00 01 12 01 00 00 00 F2 13 00 00  ................
  0000BB30: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BB40: 07 00 01 00 F3 13 00 00 00 00 00 00 0A 00 01 12  ................
  0000BB50: 01 00 00 00 74 13 00 00 1A 00 09 10 12 00 00 00  ....t...........
  0000BB60: 73 13 00 00 DC 13 00 00 07 00 01 00 F5 13 00 00  s...............
  0000BB70: 00 00 00 00 0A 00 01 12 01 00 00 00 C4 13 00 00  ................
  0000BB80: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BB90: 07 00 01 00 F7 13 00 00 00 00 00 00 22 00 05 10  ............"...
  0000BBA0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000BBB0: 00 00 0B 5F 44 53 33 44 42 55 46 46 45 52 F2 F1  ..._DS3DBUFFER..
  0000BBC0: 0A 00 01 10 F9 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000BBD0: FA 13 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  0000BBE0: FB 13 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000BBF0: 73 13 00 00 DC 13 00 00 07 00 02 00 FC 13 00 00  s...............
  0000BC00: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  0000BC10: 22 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  0000BC20: 73 13 00 00 DC 13 00 00 07 00 03 00 FE 13 00 00  s...............
  0000BC30: 00 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BC40: DC 13 00 00 07 00 04 00 9F 13 00 00 00 00 00 00  ................
  0000BC50: 0E 00 01 12 02 00 00 00 12 00 00 00 22 00 00 00  ............"...
  0000BC60: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BC70: 07 00 02 00 01 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000BC80: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 02 00  ....s...........
  0000BC90: 9B 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000BCA0: 73 13 00 00 DC 13 00 00 07 00 02 00 31 10 00 00  s...........1...
  0000BCB0: 00 00 00 00 12 00 01 12 03 00 00 00 99 12 00 00  ................
  0000BCC0: 22 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  0000BCD0: 73 13 00 00 DC 13 00 00 07 00 03 00 05 14 00 00  s...............
  0000BCE0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  0000BCF0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 53 49 33  ..........._DSI3
  0000BD00: 44 4C 32 42 55 46 46 45 52 F3 F2 F1 0A 00 01 10  DL2BUFFER.......
  0000BD10: 07 14 00 00 01 00 F2 F1 0A 00 02 10 08 14 00 00  ................
  0000BD20: 0A 00 00 00 0E 00 01 12 02 00 00 00 09 14 00 00  ................
  0000BD30: 22 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BD40: DC 13 00 00 07 00 02 00 0A 14 00 00 00 00 00 00  ................
  0000BD50: 0E 00 01 12 02 00 00 00 13 00 00 00 22 00 00 00  ............"...
  0000BD60: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BD70: 07 00 02 00 0C 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000BD80: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 00 00  ....s...........
  0000BD90: 09 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000BDA0: 73 13 00 00 DC 13 00 00 07 00 01 00 82 13 00 00  s...............
  0000BDB0: 00 00 00 00 0E 00 01 12 02 00 00 00 22 04 00 00  ............"...
  0000BDC0: 22 04 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BDD0: DC 13 00 00 07 00 02 00 10 14 00 00 00 00 00 00  ................
  0000BDE0: 0E 00 01 12 02 00 00 00 03 04 00 00 22 00 00 00  ............"...
  0000BDF0: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BE00: 07 00 02 00 12 14 00 00 00 00 00 00 22 00 01 12  ............"...
  0000BE10: 07 00 00 00 22 00 00 00 22 00 00 00 64 13 00 00  ...."..."...d...
  0000BE20: 22 04 00 00 64 13 00 00 22 04 00 00 22 00 00 00  "...d..."..."...
  0000BE30: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BE40: 07 00 07 00 14 14 00 00 00 00 00 00 16 00 01 12  ................
  0000BE50: 04 00 00 00 03 04 00 00 22 00 00 00 03 04 00 00  ........".......
  0000BE60: 22 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BE70: DC 13 00 00 07 00 04 00 16 14 00 00 00 00 00 00  ................
  0000BE80: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  0000BE90: 00 00 00 00 00 00 12 5F 44 53 42 50 4F 53 49 54  ......._DSBPOSIT
  0000BEA0: 49 4F 4E 4E 4F 54 49 46 59 F3 F2 F1 0A 00 01 10  IONNOTIFY.......
  0000BEB0: 18 14 00 00 01 00 F2 F1 0A 00 02 10 19 14 00 00  ................
  0000BEC0: 0A 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  0000BED0: 1A 14 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BEE0: DC 13 00 00 07 00 02 00 1B 14 00 00 00 00 00 00  ................
  0000BEF0: A2 03 03 12 0B 14 03 00 DD 13 00 00 0E 51 75 65  .............Que
  0000BF00: 72 79 49 6E 74 65 72 66 61 63 65 F1 0B 14 03 00  ryInterface.....
  0000BF10: DE 13 00 00 06 41 64 64 52 65 66 F1 0B 14 03 00  .....AddRef.....
  0000BF20: DE 13 00 00 07 52 65 6C 65 61 73 65 0B 14 03 00  .....Release....
  0000BF30: E2 13 00 00 09 53 65 74 46 6F 72 6D 61 74 F2 F1  .....SetFormat..
  0000BF40: 0B 14 03 00 E3 13 00 00 0C 53 65 74 46 72 65 71  .........SetFreq
  0000BF50: 75 65 6E 63 79 F3 F2 F1 0B 14 03 00 E5 13 00 00  uency...........
  0000BF60: 09 53 65 74 56 6F 6C 75 6D 65 F2 F1 0B 14 03 00  .SetVolume......
  0000BF70: E5 13 00 00 08 53 65 74 50 69 74 63 68 F3 F2 F1  .....SetPitch...
  0000BF80: 0B 14 03 00 EA 13 00 00 06 53 65 74 4C 46 4F F1  .........SetLFO.
  0000BF90: 0B 14 03 00 EF 13 00 00 05 53 65 74 45 47 F2 F1  .........SetEG..
  0000BFA0: 0B 14 03 00 F4 13 00 00 09 53 65 74 46 69 6C 74  .........SetFilt
  0000BFB0: 65 72 F2 F1 0B 14 03 00 E3 13 00 00 0B 53 65 74  er...........Set
  0000BFC0: 48 65 61 64 72 6F 6F 6D 0B 14 03 00 F6 13 00 00  Headroom........
  0000BFD0: 0F 53 65 74 4F 75 74 70 75 74 42 75 66 66 65 72  .SetOutputBuffer
  0000BFE0: 0B 14 03 00 F8 13 00 00 0A 53 65 74 4D 69 78 42  .........SetMixB
  0000BFF0: 69 6E 73 F1 0B 14 03 00 F8 13 00 00 10 53 65 74  ins..........Set
  0000C000: 4D 69 78 42 69 6E 56 6F 6C 75 6D 65 73 F3 F2 F1  MixBinVolumes...
  0000C010: 0B 14 03 00 FD 13 00 00 10 53 65 74 41 6C 6C 50  .........SetAllP
  0000C020: 61 72 61 6D 65 74 65 72 73 F3 F2 F1 0B 14 03 00  arameters.......
  0000C030: FF 13 00 00 0D 53 65 74 43 6F 6E 65 41 6E 67 6C  .....SetConeAngl
  0000C040: 65 73 F2 F1 0B 14 03 00 00 14 00 00 12 53 65 74  es...........Set
  0000C050: 43 6F 6E 65 4F 72 69 65 6E 74 61 74 69 6F 6E F1  ConeOrientation.
  0000C060: 0B 14 03 00 02 14 00 00 14 53 65 74 43 6F 6E 65  .........SetCone
  0000C070: 4F 75 74 73 69 64 65 56 6F 6C 75 6D 65 F3 F2 F1  OutsideVolume...
  0000C080: 0B 14 03 00 03 14 00 00 0E 53 65 74 4D 61 78 44  .........SetMaxD
  0000C090: 69 73 74 61 6E 63 65 F1 0B 14 03 00 03 14 00 00  istance.........
  0000C0A0: 0E 53 65 74 4D 69 6E 44 69 73 74 61 6E 63 65 F1  .SetMinDistance.
  0000C0B0: 0B 14 03 00 04 14 00 00 07 53 65 74 4D 6F 64 65  .........SetMode
  0000C0C0: 0B 14 03 00 00 14 00 00 0B 53 65 74 50 6F 73 69  .........SetPosi
  0000C0D0: 74 69 6F 6E 0B 14 03 00 00 14 00 00 0B 53 65 74  tion.........Set
  0000C0E0: 56 65 6C 6F 63 69 74 79 0B 14 03 00 03 14 00 00  Velocity........
  0000C0F0: 11 53 65 74 44 69 73 74 61 6E 63 65 46 61 63 74  .SetDistanceFact
  0000C100: 6F 72 F2 F1 0B 14 03 00 03 14 00 00 10 53 65 74  or...........Set
  0000C110: 44 6F 70 70 6C 65 72 46 61 63 74 6F 72 F3 F2 F1  DopplerFactor...
  0000C120: 0B 14 03 00 03 14 00 00 10 53 65 74 52 6F 6C 6C  .........SetRoll
  0000C130: 6F 66 66 46 61 63 74 6F 72 F3 F2 F1 0B 14 03 00  offFactor.......
  0000C140: 06 14 00 00 0F 53 65 74 52 6F 6C 6C 6F 66 66 43  .....SetRolloffC
  0000C150: 75 72 76 65 0B 14 03 00 0B 14 00 00 0E 53 65 74  urve.........Set
  0000C160: 49 33 44 4C 32 53 6F 75 72 63 65 F1 0B 14 03 00  I3DL2Source.....
  0000C170: FF 13 00 00 04 50 6C 61 79 F3 F2 F1 0B 14 03 00  .....Play.......
  0000C180: 0D 14 00 00 06 50 6C 61 79 45 78 F1 0B 14 03 00  .....PlayEx.....
  0000C190: 0E 14 00 00 04 53 74 6F 70 F3 F2 F1 0B 14 03 00  .....Stop.......
  0000C1A0: 0D 14 00 00 06 53 74 6F 70 45 78 F1 0B 14 03 00  .....StopEx.....
  0000C1B0: 04 14 00 00 0D 53 65 74 50 6C 61 79 52 65 67 69  .....SetPlayRegi
  0000C1C0: 6F 6E F2 F1 0B 14 03 00 04 14 00 00 0D 53 65 74  on...........Set
  0000C1D0: 4C 6F 6F 70 52 65 67 69 6F 6E F2 F1 0B 14 03 00  LoopRegion......
  0000C1E0: 0F 14 00 00 09 47 65 74 53 74 61 74 75 73 F2 F1  .....GetStatus..
  0000C1F0: 0B 14 03 00 11 14 00 00 12 47 65 74 43 75 72 72  .........GetCurr
  0000C200: 65 6E 74 50 6F 73 69 74 69 6F 6E F1 0B 14 03 00  entPosition.....
  0000C210: E3 13 00 00 12 53 65 74 43 75 72 72 65 6E 74 50  .....SetCurrentP
  0000C220: 6F 73 69 74 69 6F 6E F1 0B 14 03 00 13 14 00 00  osition.........
  0000C230: 0D 53 65 74 42 75 66 66 65 72 44 61 74 61 F2 F1  .SetBufferData..
  0000C240: 0B 14 03 00 15 14 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  0000C250: 0B 14 03 00 17 14 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  0000C260: 0B 14 03 00 0E 14 00 00 07 52 65 73 74 6F 72 65  .........Restore
  0000C270: 0B 14 03 00 1C 14 00 00 18 53 65 74 4E 6F 74 69  .........SetNoti
  0000C280: 66 69 63 61 74 69 6F 6E 50 6F 73 69 74 69 6F 6E  ficationPosition
  0000C290: 73 F3 F2 F1 2A 00 05 10 2A 00 00 00 1D 14 00 00  s...*...*.......
  0000C2A0: 00 00 00 00 00 00 00 00 01 00 12 49 44 69 72 65  ...........IDire
  0000C2B0: 63 74 53 6F 75 6E 64 42 75 66 66 65 72 F3 F2 F1  ctSoundBuffer...
  0000C2C0: AE 00 03 12 05 14 03 00 21 00 00 00 00 00 0A 77  ........!......w
  0000C2D0: 46 6F 72 6D 61 74 54 61 67 F3 F2 F1 05 14 03 00  FormatTag.......
  0000C2E0: 21 00 00 00 02 00 09 6E 43 68 61 6E 6E 65 6C 73  !......nChannels
  0000C2F0: 05 14 03 00 22 00 00 00 04 00 0E 6E 53 61 6D 70  ...."......nSamp
  0000C300: 6C 65 73 50 65 72 53 65 63 F3 F2 F1 05 14 03 00  lesPerSec.......
  0000C310: 22 00 00 00 08 00 0F 6E 41 76 67 42 79 74 65 73  "......nAvgBytes
  0000C320: 50 65 72 53 65 63 F2 F1 05 14 03 00 21 00 00 00  PerSec......!...
  0000C330: 0C 00 0B 6E 42 6C 6F 63 6B 41 6C 69 67 6E F2 F1  ...nBlockAlign..
  0000C340: 05 14 03 00 21 00 00 00 0E 00 0E 77 42 69 74 73  ....!......wBits
  0000C350: 50 65 72 53 61 6D 70 6C 65 F3 F2 F1 05 14 03 00  PerSample.......
  0000C360: 21 00 00 00 10 00 06 63 62 53 69 7A 65 F3 F2 F1  !......cbSize...
  0000C370: 22 00 05 10 07 00 00 00 1F 14 00 00 00 00 00 00  "...............
  0000C380: 00 00 00 00 12 00 0D 74 57 41 56 45 46 4F 52 4D  .......tWAVEFORM
  0000C390: 41 54 45 58 96 00 03 12 05 14 03 00 22 00 00 00  ATEX........"...
  0000C3A0: 00 00 05 64 77 4C 46 4F 05 14 03 00 22 00 00 00  ...dwLFO...."...
  0000C3B0: 04 00 07 64 77 44 65 6C 61 79 F2 F1 05 14 03 00  ...dwDelay......
  0000C3C0: 22 00 00 00 08 00 07 64 77 44 65 6C 74 61 F2 F1  "......dwDelta..
  0000C3D0: 05 14 03 00 12 00 00 00 0C 00 10 6C 50 69 74 63  ...........lPitc
  0000C3E0: 68 4D 6F 64 75 6C 61 74 69 6F 6E F1 05 14 03 00  hModulation.....
  0000C3F0: 12 00 00 00 10 00 12 6C 46 69 6C 74 65 72 43 75  .......lFilterCu
  0000C400: 74 4F 66 66 52 61 6E 67 65 F3 F2 F1 05 14 03 00  tOffRange.......
  0000C410: 12 00 00 00 14 00 14 6C 41 6D 70 6C 69 74 75 64  .......lAmplitud
  0000C420: 65 4D 6F 64 75 6C 61 74 69 6F 6E F1 22 00 05 10  eModulation."...
  0000C430: 06 00 00 00 21 14 00 00 00 00 00 00 00 00 00 00  ....!...........
  0000C440: 18 00 0A 5F 44 53 4C 46 4F 44 45 53 43 F3 F2 F1  ..._DSLFODESC...
  0000C450: CE 00 03 12 05 14 03 00 22 00 00 00 00 00 04 64  ........"......d
  0000C460: 77 45 47 F1 05 14 03 00 22 00 00 00 04 00 06 64  wEG....."......d
  0000C470: 77 4D 6F 64 65 F3 F2 F1 05 14 03 00 22 00 00 00  wMode......."...
  0000C480: 08 00 07 64 77 44 65 6C 61 79 F2 F1 05 14 03 00  ...dwDelay......
  0000C490: 22 00 00 00 0C 00 08 64 77 41 74 74 61 63 6B F1  "......dwAttack.
  0000C4A0: 05 14 03 00 22 00 00 00 10 00 06 64 77 48 6F 6C  ...."......dwHol
  0000C4B0: 64 F3 F2 F1 05 14 03 00 22 00 00 00 14 00 07 64  d......."......d
  0000C4C0: 77 44 65 63 61 79 F2 F1 05 14 03 00 22 00 00 00  wDecay......"...
  0000C4D0: 18 00 09 64 77 52 65 6C 65 61 73 65 05 14 03 00  ...dwRelease....
  0000C4E0: 22 00 00 00 1C 00 09 64 77 53 75 73 74 61 69 6E  "......dwSustain
  0000C4F0: 05 14 03 00 12 00 00 00 20 00 0B 6C 50 69 74 63  ........ ..lPitc
  0000C500: 68 53 63 61 6C 65 F2 F1 05 14 03 00 12 00 00 00  hScale..........
  0000C510: 24 00 0D 6C 46 69 6C 74 65 72 43 75 74 4F 66 66  $..lFilterCutOff
  0000C520: 26 00 05 10 0A 00 00 00 23 14 00 00 00 00 00 00  &.......#.......
  0000C530: 00 00 00 00 28 00 0F 5F 44 53 45 4E 56 45 4C 4F  ....(.._DSENVELO
  0000C540: 50 45 44 45 53 43 F2 F1 0E 00 03 10 22 00 00 00  PEDESC......"...
  0000C550: 11 00 00 00 10 00 00 F1 4E 00 03 12 05 14 03 00  ........N.......
  0000C560: 22 00 00 00 00 00 06 64 77 4D 6F 64 65 F3 F2 F1  "......dwMode...
  0000C570: 05 14 03 00 22 00 00 00 04 00 0E 64 77 51 43 6F  ...."......dwQCo
  0000C580: 65 66 66 69 63 69 65 6E 74 F3 F2 F1 05 14 03 00  efficient.......
  0000C590: 25 14 00 00 08 00 0F 61 64 77 43 6F 65 66 66 69  %......adwCoeffi
  0000C5A0: 63 69 65 6E 74 73 F2 F1 22 00 05 10 03 00 00 00  cients..".......
  0000C5B0: 26 14 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  &.............._
  0000C5C0: 44 53 46 49 4C 54 45 52 44 45 53 43 2A 00 05 10  DSFILTERDESC*...
  0000C5D0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000C5E0: 00 00 13 5F 44 53 4D 49 58 42 49 4E 56 4F 4C 55  ..._DSMIXBINVOLU
  0000C5F0: 4D 45 50 41 49 52 F2 F1 0A 00 01 10 28 14 00 00  MEPAIR......(...
  0000C600: 01 00 F2 F1 0A 00 02 10 29 14 00 00 0A 00 00 00  ........).......
  0000C610: 3A 00 03 12 05 14 03 00 22 00 00 00 00 00 0D 64  :......."......d
  0000C620: 77 4D 69 78 42 69 6E 43 6F 75 6E 74 05 14 03 00  wMixBinCount....
  0000C630: 2A 14 00 00 04 00 13 6C 70 4D 69 78 42 69 6E 56  *......lpMixBinV
  0000C640: 6F 6C 75 6D 65 50 61 69 72 73 F2 F1 22 00 05 10  olumePairs.."...
  0000C650: 02 00 00 00 2B 14 00 00 00 00 00 00 00 00 00 00  ....+...........
  0000C660: 08 00 0A 5F 44 53 4D 49 58 42 49 4E 53 F3 F2 F1  ..._DSMIXBINS...
  0000C670: 0A 00 02 10 F9 13 00 00 0A 04 00 00 1A 00 09 10  ................
  0000C680: 03 00 00 00 F9 13 00 00 2D 14 00 00 0B 00 00 00  ........-.......
  0000C690: 09 10 00 00 00 00 00 00 62 01 03 12 05 14 03 00  ........b.......
  0000C6A0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000C6B0: 05 14 03 00 B0 12 00 00 04 00 09 76 50 6F 73 69  ...........vPosi
  0000C6C0: 74 69 6F 6E 05 14 03 00 B0 12 00 00 10 00 09 76  tion...........v
  0000C6D0: 56 65 6C 6F 63 69 74 79 05 14 03 00 22 00 00 00  Velocity...."...
  0000C6E0: 1C 00 11 64 77 49 6E 73 69 64 65 43 6F 6E 65 41  ...dwInsideConeA
  0000C6F0: 6E 67 6C 65 05 14 03 00 22 00 00 00 20 00 12 64  ngle...."... ..d
  0000C700: 77 4F 75 74 73 69 64 65 43 6F 6E 65 41 6E 67 6C  wOutsideConeAngl
  0000C710: 65 F3 F2 F1 05 14 03 00 B0 12 00 00 24 00 10 76  e...........$..v
  0000C720: 43 6F 6E 65 4F 72 69 65 6E 74 61 74 69 6F 6E F1  ConeOrientation.
  0000C730: 05 14 03 00 12 00 00 00 30 00 12 6C 43 6F 6E 65  ........0..lCone
  0000C740: 4F 75 74 73 69 64 65 56 6F 6C 75 6D 65 F3 F2 F1  OutsideVolume...
  0000C750: 05 14 03 00 40 00 00 00 34 00 0D 66 6C 4D 69 6E  ....@...4..flMin
  0000C760: 44 69 73 74 61 6E 63 65 05 14 03 00 40 00 00 00  Distance....@...
  0000C770: 38 00 0D 66 6C 4D 61 78 44 69 73 74 61 6E 63 65  8..flMaxDistance
  0000C780: 05 14 03 00 22 00 00 00 3C 00 06 64 77 4D 6F 64  ...."...<..dwMod
  0000C790: 65 F3 F2 F1 05 14 03 00 40 00 00 00 40 00 10 66  e.......@...@..f
  0000C7A0: 6C 44 69 73 74 61 6E 63 65 46 61 63 74 6F 72 F1  lDistanceFactor.
  0000C7B0: 05 14 03 00 40 00 00 00 44 00 0F 66 6C 52 6F 6C  ....@...D..flRol
  0000C7C0: 6C 6F 66 66 46 61 63 74 6F 72 F2 F1 05 14 03 00  loffFactor......
  0000C7D0: 40 00 00 00 48 00 0F 66 6C 44 6F 70 70 6C 65 72  @...H..flDoppler
  0000C7E0: 46 61 63 74 6F 72 F2 F1 0B 14 03 01 2E 14 00 00  Factor..........
  0000C7F0: 0B 5F 44 53 33 44 42 55 46 46 45 52 22 00 05 10  ._DS3DBUFFER"...
  0000C800: 0E 00 02 00 2F 14 00 00 00 00 00 00 00 00 00 00  ..../...........
  0000C810: 4C 00 0B 5F 44 53 33 44 42 55 46 46 45 52 F2 F1  L.._DS3DBUFFER..
  0000C820: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  0000C830: 00 00 00 00 00 00 13 5F 44 53 49 33 44 4C 32 4F  ......._DSI3DL2O
  0000C840: 42 53 54 52 55 43 54 49 4F 4E F2 F1 26 00 05 10  BSTRUCTION..&...
  0000C850: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000C860: 00 00 11 5F 44 53 49 33 44 4C 32 4F 43 43 4C 55  ..._DSI3DL2OCCLU
  0000C870: 53 49 4F 4E 9A 00 03 12 05 14 03 00 12 00 00 00  SION............
  0000C880: 00 00 07 6C 44 69 72 65 63 74 F2 F1 05 14 03 00  ...lDirect......
  0000C890: 12 00 00 00 04 00 09 6C 44 69 72 65 63 74 48 46  .......lDirectHF
  0000C8A0: 05 14 03 00 12 00 00 00 08 00 05 6C 52 6F 6F 6D  ...........lRoom
  0000C8B0: 05 14 03 00 12 00 00 00 0C 00 07 6C 52 6F 6F 6D  ...........lRoom
  0000C8C0: 48 46 F2 F1 05 14 03 00 40 00 00 00 10 00 13 66  HF......@......f
  0000C8D0: 6C 52 6F 6F 6D 52 6F 6C 6C 6F 66 66 46 61 63 74  lRoomRolloffFact
  0000C8E0: 6F 72 F2 F1 05 14 03 00 31 14 00 00 14 00 0B 4F  or......1......O
  0000C8F0: 62 73 74 72 75 63 74 69 6F 6E F2 F1 05 14 03 00  bstruction......
  0000C900: 32 14 00 00 1C 00 09 4F 63 63 6C 75 73 69 6F 6E  2......Occlusion
  0000C910: 26 00 05 10 07 00 00 00 33 14 00 00 00 00 00 00  &.......3.......
  0000C920: 00 00 00 00 24 00 0E 5F 44 53 49 33 44 4C 32 42  ....$.._DSI3DL2B
  0000C930: 55 46 46 45 52 F3 F2 F1 2E 00 03 12 05 14 03 00  UFFER...........
  0000C940: 22 00 00 00 00 00 08 64 77 4F 66 66 73 65 74 F1  "......dwOffset.
  0000C950: 05 14 03 00 03 04 00 00 04 00 0C 68 45 76 65 6E  ...........hEven
  0000C960: 74 4E 6F 74 69 66 79 F1 2A 00 05 10 02 00 00 00  tNotify.*.......
  0000C970: 35 14 00 00 00 00 00 00 00 00 00 00 08 00 12 5F  5.............._
  0000C980: 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F 54 49 46  DSBPOSITIONNOTIF
  0000C990: 59 F3 F2 F1 0A 00 02 10 7D 13 00 00 0A 04 00 00  Y.......}.......
  0000C9A0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000C9B0: 00 00 00 00 00 00 0C 58 4D 65 64 69 61 4F 62 6A  .......XMediaObj
  0000C9C0: 65 63 74 F1 1A 00 09 10 22 00 00 00 7D 13 00 00  ect....."...}...
  0000C9D0: 37 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  7...............
  0000C9E0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000C9F0: 00 00 00 00 00 00 0B 5F 58 4D 45 44 49 41 49 4E  ......._XMEDIAIN
  0000CA00: 46 4F F2 F1 0A 00 02 10 3A 14 00 00 0A 00 00 00  FO......:.......
  0000CA10: 0A 00 01 12 01 00 00 00 3B 14 00 00 1A 00 09 10  ........;.......
  0000CA20: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CA30: 3C 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  <...............
  0000CA40: 7D 13 00 00 37 14 00 00 07 00 01 00 82 13 00 00  }...7...........
  0000CA50: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  0000CA60: 00 00 00 00 00 00 00 00 00 00 0D 5F 58 4D 45 44  ..........._XMED
  0000CA70: 49 41 50 41 43 4B 45 54 0A 00 01 10 3F 14 00 00  IAPACKET....?...
  0000CA80: 01 00 F2 F1 0A 00 02 10 40 14 00 00 0A 00 00 00  ........@.......
  0000CA90: 0E 00 01 12 02 00 00 00 41 14 00 00 41 14 00 00  ........A...A...
  0000CAA0: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CAB0: 07 00 02 00 42 14 00 00 00 00 00 00 1A 00 09 10  ....B...........
  0000CAC0: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 00 00  ....}...7.......
  0000CAD0: 09 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CAE0: 7D 13 00 00 37 14 00 00 07 00 02 00 69 13 00 00  }...7.......i...
  0000CAF0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CB00: 37 14 00 00 07 00 01 00 E1 13 00 00 00 00 00 00  7...............
  0000CB10: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CB20: 07 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000CB30: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CB40: E4 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CB50: 7D 13 00 00 37 14 00 00 07 00 01 00 E9 13 00 00  }...7...........
  0000CB60: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CB70: 37 14 00 00 07 00 01 00 EE 13 00 00 00 00 00 00  7...............
  0000CB80: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CB90: 07 00 01 00 F3 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000CBA0: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CBB0: F5 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CBC0: 7D 13 00 00 37 14 00 00 07 00 01 00 F7 13 00 00  }...7...........
  0000CBD0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CBE0: 37 14 00 00 07 00 02 00 FC 13 00 00 00 00 00 00  7...............
  0000CBF0: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CC00: 07 00 03 00 FE 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000CC10: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 04 00  ....}...7.......
  0000CC20: 9F 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CC30: 7D 13 00 00 37 14 00 00 07 00 02 00 01 14 00 00  }...7...........
  0000CC40: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CC50: 37 14 00 00 07 00 02 00 9B 13 00 00 00 00 00 00  7...............
  0000CC60: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CC70: 07 00 02 00 31 10 00 00 00 00 00 00 1A 00 09 10  ....1...........
  0000CC80: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 03 00  ....}...7.......
  0000CC90: 05 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CCA0: 7D 13 00 00 37 14 00 00 07 00 02 00 0A 14 00 00  }...7...........
  0000CCB0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CCC0: 37 14 00 00 07 00 02 00 0C 14 00 00 00 00 00 00  7...............
  0000CCD0: 0A 00 01 10 7D 13 00 00 01 00 F2 F1 0A 00 02 10  ....}...........
  0000CCE0: 57 14 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  W...*...........
  0000CCF0: 58 14 00 00 1A 00 09 10 03 00 00 00 7D 13 00 00  X...........}...
  0000CD00: 37 14 00 00 0B 00 01 00 59 14 00 00 00 00 00 00  7.......Y.......
  0000CD10: 1A 00 09 10 03 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CD20: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000CD30: 03 01 00 00 5A 14 00 00 03 01 00 00 5B 14 00 00  ....Z.......[...
  0000CD40: 2E 03 03 12 00 14 03 00 38 14 00 00 00 00 F2 F1  ........8.......
  0000CD50: 0B 14 17 00 39 14 00 00 06 41 64 64 52 65 66 F1  ....9....AddRef.
  0000CD60: 0B 14 17 00 39 14 00 00 07 52 65 6C 65 61 73 65  ....9....Release
  0000CD70: 0B 14 17 00 3D 14 00 00 07 47 65 74 49 6E 66 6F  ....=....GetInfo
  0000CD80: 0B 14 17 00 3E 14 00 00 09 47 65 74 53 74 61 74  ....>....GetStat
  0000CD90: 75 73 F2 F1 0B 14 17 00 43 14 00 00 07 50 72 6F  us......C....Pro
  0000CDA0: 63 65 73 73 0B 14 17 00 44 14 00 00 0D 44 69 73  cess....D....Dis
  0000CDB0: 63 6F 6E 74 69 6E 75 69 74 79 F2 F1 0B 14 17 00  continuity......
  0000CDC0: 44 14 00 00 05 46 6C 75 73 68 F2 F1 0B 14 03 00  D....Flush......
  0000CDD0: 45 14 00 00 0E 51 75 65 72 79 49 6E 74 65 72 66  E....QueryInterf
  0000CDE0: 61 63 65 F1 0B 14 03 00 46 14 00 00 09 53 65 74  ace.....F....Set
  0000CDF0: 46 6F 72 6D 61 74 F2 F1 0B 14 03 00 47 14 00 00  Format......G...
  0000CE00: 0C 53 65 74 46 72 65 71 75 65 6E 63 79 F3 F2 F1  .SetFrequency...
  0000CE10: 0B 14 03 00 48 14 00 00 09 53 65 74 56 6F 6C 75  ....H....SetVolu
  0000CE20: 6D 65 F2 F1 0B 14 03 00 48 14 00 00 08 53 65 74  me......H....Set
  0000CE30: 50 69 74 63 68 F3 F2 F1 0B 14 03 00 49 14 00 00  Pitch.......I...
  0000CE40: 06 53 65 74 4C 46 4F F1 0B 14 03 00 4A 14 00 00  .SetLFO.....J...
  0000CE50: 05 53 65 74 45 47 F2 F1 0B 14 03 00 4B 14 00 00  .SetEG......K...
  0000CE60: 09 53 65 74 46 69 6C 74 65 72 F2 F1 0B 14 03 00  .SetFilter......
  0000CE70: 47 14 00 00 0B 53 65 74 48 65 61 64 72 6F 6F 6D  G....SetHeadroom
  0000CE80: 0B 14 03 00 4C 14 00 00 0F 53 65 74 4F 75 74 70  ....L....SetOutp
  0000CE90: 75 74 42 75 66 66 65 72 0B 14 03 00 4D 14 00 00  utBuffer....M...
  0000CEA0: 0A 53 65 74 4D 69 78 42 69 6E 73 F1 0B 14 03 00  .SetMixBins.....
  0000CEB0: 4D 14 00 00 10 53 65 74 4D 69 78 42 69 6E 56 6F  M....SetMixBinVo
  0000CEC0: 6C 75 6D 65 73 F3 F2 F1 0B 14 03 00 4E 14 00 00  lumes.......N...
  0000CED0: 10 53 65 74 41 6C 6C 50 61 72 61 6D 65 74 65 72  .SetAllParameter
  0000CEE0: 73 F3 F2 F1 0B 14 03 00 4F 14 00 00 0D 53 65 74  s.......O....Set
  0000CEF0: 43 6F 6E 65 41 6E 67 6C 65 73 F2 F1 0B 14 03 00  ConeAngles......
  0000CF00: 50 14 00 00 12 53 65 74 43 6F 6E 65 4F 72 69 65  P....SetConeOrie
  0000CF10: 6E 74 61 74 69 6F 6E F1 0B 14 03 00 51 14 00 00  ntation.....Q...
  0000CF20: 14 53 65 74 43 6F 6E 65 4F 75 74 73 69 64 65 56  .SetConeOutsideV
  0000CF30: 6F 6C 75 6D 65 F3 F2 F1 0B 14 03 00 52 14 00 00  olume.......R...
  0000CF40: 0E 53 65 74 4D 61 78 44 69 73 74 61 6E 63 65 F1  .SetMaxDistance.
  0000CF50: 0B 14 03 00 52 14 00 00 0E 53 65 74 4D 69 6E 44  ....R....SetMinD
  0000CF60: 69 73 74 61 6E 63 65 F1 0B 14 03 00 53 14 00 00  istance.....S...
  0000CF70: 07 53 65 74 4D 6F 64 65 0B 14 03 00 50 14 00 00  .SetMode....P...
  0000CF80: 0B 53 65 74 50 6F 73 69 74 69 6F 6E 0B 14 03 00  .SetPosition....
  0000CF90: 50 14 00 00 0B 53 65 74 56 65 6C 6F 63 69 74 79  P....SetVelocity
  0000CFA0: 0B 14 03 00 52 14 00 00 11 53 65 74 44 69 73 74  ....R....SetDist
  0000CFB0: 61 6E 63 65 46 61 63 74 6F 72 F2 F1 0B 14 03 00  anceFactor......
  0000CFC0: 52 14 00 00 10 53 65 74 44 6F 70 70 6C 65 72 46  R....SetDopplerF
  0000CFD0: 61 63 74 6F 72 F3 F2 F1 0B 14 03 00 52 14 00 00  actor.......R...
  0000CFE0: 10 53 65 74 52 6F 6C 6C 6F 66 66 46 61 63 74 6F  .SetRolloffFacto
  0000CFF0: 72 F3 F2 F1 0B 14 03 00 54 14 00 00 0F 53 65 74  r.......T....Set
  0000D000: 52 6F 6C 6C 6F 66 66 43 75 72 76 65 0B 14 03 00  RolloffCurve....
  0000D010: 55 14 00 00 0E 53 65 74 49 33 44 4C 32 53 6F 75  U....SetI3DL2Sou
  0000D020: 72 63 65 F1 0B 14 03 00 47 14 00 00 05 50 61 75  rce.....G....Pau
  0000D030: 73 65 F2 F1 0B 14 03 00 56 14 00 00 07 50 61 75  se......V....Pau
  0000D040: 73 65 45 78 0B 14 03 00 56 14 00 00 07 46 6C 75  seEx....V....Flu
  0000D050: 73 68 45 78 07 14 02 00 5C 14 00 00 12 49 44 69  shEx....\....IDi
  0000D060: 72 65 63 74 53 6F 75 6E 64 53 74 72 65 61 6D F1  rectSoundStream.
  0000D070: 0A 00 0A 00 07 00 55 55 55 50 F2 F1 2A 00 05 10  ......UUUP..*...
  0000D080: 27 00 02 00 5D 14 00 00 00 00 00 00 5E 14 00 00  '...].......^...
  0000D090: 04 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 53  ...IDirectSoundS
  0000D0A0: 74 72 65 61 6D F3 F2 F1 1E 00 04 10 00 00 80 00  tream...........
  0000D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 53  ...............S
  0000D0C0: 77 69 7A 7A 6C 65 72 F1 0A 00 02 10 60 14 00 00  wizzler.....`...
  0000D0D0: 0A 04 00 00 1A 00 09 10 03 00 00 00 60 14 00 00  ............`...
  0000D0E0: 61 14 00 00 0B 00 03 00 FE 13 00 00 00 00 00 00  a...............
  0000D0F0: 1A 00 09 10 03 00 00 00 60 14 00 00 61 14 00 00  ........`...a...
  0000D100: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000D110: 03 00 00 00 62 14 00 00 03 00 00 00 63 14 00 00  ....b.......c...
  0000D120: 1A 00 09 10 22 00 00 00 60 14 00 00 61 14 00 00  ...."...`...a...
  0000D130: 0B 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000D140: 22 00 00 00 60 14 00 00 61 14 00 00 0B 00 03 00  "...`...a.......
  0000D150: FE 13 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000D160: 22 00 00 00 1A 00 09 10 22 00 00 00 60 14 00 00  "......."...`...
  0000D170: 61 14 00 00 0B 00 01 00 67 14 00 00 00 00 00 00  a.......g.......
  0000D180: 1A 00 09 10 22 00 00 00 60 14 00 00 61 14 00 00  ...."...`...a...
  0000D190: 0B 00 01 00 67 14 00 00 00 00 00 00 1A 00 09 10  ....g...........
  0000D1A0: 22 00 00 00 60 14 00 00 61 14 00 00 0B 00 00 00  "...`...a.......
  0000D1B0: 09 10 00 00 00 00 00 00 66 02 03 12 05 14 03 00  ........f.......
  0000D1C0: 22 00 00 00 00 00 07 6D 5F 57 69 64 74 68 F2 F1  "......m_Width..
  0000D1D0: 05 14 03 00 22 00 00 00 04 00 08 6D 5F 48 65 69  ...."......m_Hei
  0000D1E0: 67 68 74 F1 05 14 03 00 22 00 00 00 08 00 07 6D  ght....."......m
  0000D1F0: 5F 44 65 70 74 68 F2 F1 05 14 03 00 22 00 00 00  _Depth......"...
  0000D200: 0C 00 07 6D 5F 4D 61 73 6B 55 F2 F1 05 14 03 00  ...m_MaskU......
  0000D210: 22 00 00 00 10 00 07 6D 5F 4D 61 73 6B 56 F2 F1  "......m_MaskV..
  0000D220: 05 14 03 00 22 00 00 00 14 00 07 6D 5F 4D 61 73  ...."......m_Mas
  0000D230: 6B 57 F2 F1 05 14 03 00 22 00 00 00 18 00 03 6D  kW......"......m
  0000D240: 5F 75 F2 F1 05 14 03 00 22 00 00 00 1C 00 03 6D  _u......"......m
  0000D250: 5F 76 F2 F1 05 14 03 00 22 00 00 00 20 00 03 6D  _v......"... ..m
  0000D260: 5F 77 F2 F1 07 14 02 00 64 14 00 00 08 53 77 69  _w......d....Swi
  0000D270: 7A 7A 6C 65 72 F3 F2 F1 0B 14 03 00 62 14 00 00  zzler.......b...
  0000D280: 04 49 6E 69 74 F3 F2 F1 0B 14 03 00 65 14 00 00  .Init.......e...
  0000D290: 08 53 77 69 7A 7A 6C 65 55 F3 F2 F1 0B 14 03 00  .SwizzleU.......
  0000D2A0: 65 14 00 00 08 53 77 69 7A 7A 6C 65 56 F3 F2 F1  e....SwizzleV...
  0000D2B0: 0B 14 03 00 65 14 00 00 08 53 77 69 7A 7A 6C 65  ....e....Swizzle
  0000D2C0: 57 F3 F2 F1 0B 14 03 00 66 14 00 00 07 53 77 69  W.......f....Swi
  0000D2D0: 7A 7A 6C 65 0B 14 03 00 68 14 00 00 0A 55 6E 73  zzle....h....Uns
  0000D2E0: 77 69 7A 7A 6C 65 55 F1 0B 14 03 00 68 14 00 00  wizzleU.....h...
  0000D2F0: 0A 55 6E 73 77 69 7A 7A 6C 65 56 F1 0B 14 03 00  .UnswizzleV.....
  0000D300: 68 14 00 00 0A 55 6E 73 77 69 7A 7A 6C 65 57 F1  h....UnswizzleW.
  0000D310: 0B 14 03 00 69 14 00 00 04 53 65 74 55 F3 F2 F1  ....i....SetU...
  0000D320: 0B 14 03 00 69 14 00 00 04 53 65 74 56 F3 F2 F1  ....i....SetV...
  0000D330: 0B 14 03 00 69 14 00 00 04 53 65 74 57 F3 F2 F1  ....i....SetW...
  0000D340: 0B 14 03 00 69 14 00 00 04 41 64 64 55 F3 F2 F1  ....i....AddU...
  0000D350: 0B 14 03 00 69 14 00 00 04 41 64 64 56 F3 F2 F1  ....i....AddV...
  0000D360: 0B 14 03 00 69 14 00 00 04 41 64 64 57 F3 F2 F1  ....i....AddW...
  0000D370: 0B 14 03 00 69 14 00 00 04 53 75 62 55 F3 F2 F1  ....i....SubU...
  0000D380: 0B 14 03 00 69 14 00 00 04 53 75 62 56 F3 F2 F1  ....i....SubV...
  0000D390: 0B 14 03 00 69 14 00 00 04 53 75 62 57 F3 F2 F1  ....i....SubW...
  0000D3A0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 55 F3 F2 F1  ....j....IncU...
  0000D3B0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 56 F3 F2 F1  ....j....IncV...
  0000D3C0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 57 F3 F2 F1  ....j....IncW...
  0000D3D0: 0B 14 03 00 6A 14 00 00 04 44 65 63 55 F3 F2 F1  ....j....DecU...
  0000D3E0: 0B 14 03 00 6A 14 00 00 04 44 65 63 56 F3 F2 F1  ....j....DecV...
  0000D3F0: 0B 14 03 00 6A 14 00 00 04 44 65 63 57 F3 F2 F1  ....j....DecW...
  0000D400: 0B 14 03 00 6A 14 00 00 05 47 65 74 32 44 F2 F1  ....j....Get2D..
  0000D410: 0B 14 03 00 6A 14 00 00 05 47 65 74 33 44 F2 F1  ....j....Get3D..
  0000D420: 1E 00 04 10 24 00 02 00 6B 14 00 00 00 00 00 00  ....$...k.......
  0000D430: 00 00 00 00 24 00 08 53 77 69 7A 7A 6C 65 72 F1  ....$..Swizzler.
  0000D440: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  0000D450: 00 00 00 00 00 00 08 58 47 42 75 66 66 65 72 F1  .......XGBuffer.
  0000D460: 0A 00 02 10 6D 14 00 00 0A 04 00 00 1A 00 09 10  ....m...........
  0000D470: 22 00 00 00 6D 14 00 00 6E 14 00 00 07 00 00 00  "...m...n.......
  0000D480: 09 10 00 00 00 00 00 00 1A 00 09 10 03 04 00 00  ................
  0000D490: 6D 14 00 00 6E 14 00 00 07 00 00 00 09 10 00 00  m...n...........
  0000D4A0: 00 00 00 00 1A 00 09 10 22 00 00 00 6D 14 00 00  ........"...m...
  0000D4B0: 6E 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  n...............
  0000D4C0: 8A 00 03 12 05 14 03 00 22 00 00 00 00 00 08 72  ........"......r
  0000D4D0: 65 66 43 6F 75 6E 74 F1 05 14 03 00 03 04 00 00  efCount.........
  0000D4E0: 04 00 05 70 44 61 74 61 05 14 03 00 22 00 00 00  ...pData...."...
  0000D4F0: 08 00 04 73 69 7A 65 F1 0B 14 03 00 6F 14 00 00  ...size.....o...
  0000D500: 06 41 64 64 52 65 66 F1 0B 14 03 00 6F 14 00 00  .AddRef.....o...
  0000D510: 07 52 65 6C 65 61 73 65 0B 14 03 00 70 14 00 00  .Release....p...
  0000D520: 10 47 65 74 42 75 66 66 65 72 50 6F 69 6E 74 65  .GetBufferPointe
  0000D530: 72 F3 F2 F1 0B 14 03 00 71 14 00 00 0D 47 65 74  r.......q....Get
  0000D540: 42 75 66 66 65 72 53 69 7A 65 F2 F1 1E 00 05 10  BufferSize......
  0000D550: 07 00 00 00 72 14 00 00 00 00 00 00 00 00 00 00  ....r...........
  0000D560: 0C 00 08 58 47 42 75 66 66 65 72 F1 0E 00 01 12  ...XGBuffer.....
  0000D570: 02 00 00 00 02 10 00 00 02 10 00 00 0E 00 08 10  ................
  0000D580: 74 00 00 00 07 00 02 00 74 14 00 00 0E 00 08 10  t.......t.......
  0000D590: 22 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  "...............
  0000D5A0: 75 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  u...............
  0000D5B0: 03 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  ................
  0000D5C0: 03 00 00 00 07 00 02 00 B9 10 00 00 0E 00 08 10  ................
  0000D5D0: 03 00 00 00 07 00 03 00 CA 10 00 00 0E 00 08 10  ................
  0000D5E0: 03 00 00 00 07 00 02 00 B7 10 00 00 0E 00 08 10  ................
  0000D5F0: 03 00 00 00 07 00 03 00 CC 10 00 00 0E 00 01 12  ................
  0000D600: 02 00 00 00 69 12 00 00 68 12 00 00 0E 00 08 10  ....i...h.......
  0000D610: 03 00 00 00 07 00 02 00 7D 14 00 00 0E 00 01 12  ........}.......
  0000D620: 02 00 00 00 62 10 00 00 75 00 00 00 0E 00 08 10  ....b...u.......
  0000D630: 03 00 00 00 07 00 02 00 7F 14 00 00 0E 00 01 12  ................
  0000D640: 02 00 00 00 67 10 00 00 75 00 00 00 0E 00 08 10  ....g...u.......
  0000D650: 03 00 00 00 07 00 02 00 81 14 00 00 12 00 01 12  ................
  0000D660: 03 00 00 00 6C 10 00 00 EA 11 00 00 75 00 00 00  ....l.......u...
  0000D670: 0E 00 08 10 03 00 00 00 07 00 03 00 83 14 00 00  ................
  0000D680: 0A 00 01 12 01 00 00 00 71 10 00 00 0E 00 08 10  ........q.......
  0000D690: 03 00 00 00 07 00 01 00 85 14 00 00 1A 00 01 12  ................
  0000D6A0: 05 00 00 00 76 10 00 00 75 00 00 00 75 00 00 00  ....v...u...u...
  0000D6B0: F4 11 00 00 22 00 00 00 0E 00 08 10 03 00 00 00  ...."...........
  0000D6C0: 07 00 05 00 87 14 00 00 0A 00 01 12 01 00 00 00  ................
  0000D6D0: 76 10 00 00 0E 00 08 10 03 00 00 00 07 00 01 00  v...............
  0000D6E0: 89 14 00 00 0A 00 01 12 01 00 00 00 25 11 00 00  ............%...
  0000D6F0: 0E 00 08 10 03 00 00 00 07 00 01 00 8B 14 00 00  ................
  0000D700: 0A 00 01 12 01 00 00 00 51 10 00 00 0E 00 08 10  ........Q.......
  0000D710: 03 00 00 00 07 00 01 00 8D 14 00 00 0A 00 01 12  ................
  0000D720: 01 00 00 00 D9 11 00 00 0E 00 08 10 03 00 00 00  ................
  0000D730: 07 00 01 00 8F 14 00 00 0A 00 01 12 01 00 00 00  ................
  0000D740: 40 00 00 00 0E 00 08 10 40 00 00 00 07 00 01 00  @.......@.......
  0000D750: 91 14 00 00 0A 00 01 12 01 00 00 00 1B 10 00 00  ................
  0000D760: 0E 00 08 10 70 00 00 00 07 00 01 00 93 14 00 00  ....p...........
  0000D770: 0E 00 08 10 70 00 00 00 07 00 01 00 BB 10 00 00  ....p...........
  0000D780: 0E 00 08 10 74 00 00 00 07 00 01 00 BB 10 00 00  ....t...........
  0000D790: 0E 00 08 10 22 00 00 00 07 00 01 00 BB 10 00 00  ...."...........
  0000D7A0: 0E 00 08 10 22 00 00 00 04 00 01 00 BB 10 00 00  ...."...........
  0000D7B0: 0E 00 08 10 22 00 00 00 07 00 02 00 31 10 00 00  ....".......1...
  0000D7C0: 2E 00 01 12 0A 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  0000D7D0: 22 00 00 00 22 00 00 00 1B 10 00 00 22 00 00 00  "..."......."...
  0000D7E0: 70 00 00 00 70 00 00 00 22 04 00 00 22 04 00 00  p...p..."..."...
  0000D7F0: 0E 00 08 10 22 00 00 00 07 00 0A 00 9A 14 00 00  ...."...........
  0000D800: 32 00 01 12 0B 00 00 00 22 00 00 00 22 00 00 00  2......."..."...
  0000D810: 22 00 00 00 22 00 00 00 22 00 00 00 1B 10 00 00  "..."...".......
  0000D820: 22 00 00 00 70 00 00 00 70 00 00 00 22 00 00 00  "...p...p..."...
  0000D830: C2 10 00 00 0E 00 08 10 03 00 00 00 07 00 0B 00  ................
  0000D840: 9C 14 00 00 1E 00 01 12 06 00 00 00 75 00 00 00  ............u...
  0000D850: 75 00 00 00 1B 10 00 00 51 10 00 00 75 00 00 00  u.......Q...u...
  0000D860: 75 00 00 00 0E 00 08 10 03 00 00 00 07 00 06 00  u...............
  0000D870: 9E 14 00 00 2A 00 01 12 09 00 00 00 75 00 00 00  ....*.......u...
  0000D880: 75 00 00 00 75 00 00 00 22 00 00 00 1B 10 00 00  u...u...".......
  0000D890: 22 00 00 00 62 10 00 00 75 00 00 00 75 00 00 00  "...b...u...u...
  0000D8A0: 0E 00 08 10 03 00 00 00 07 00 09 00 A0 14 00 00  ................
  0000D8B0: 26 00 01 12 08 00 00 00 75 00 00 00 75 00 00 00  &.......u...u...
  0000D8C0: 22 00 00 00 1B 10 00 00 22 00 00 00 6C 10 00 00  "......."...l...
  0000D8D0: 75 00 00 00 75 00 00 00 0E 00 08 10 03 00 00 00  u...u...........
  0000D8E0: 07 00 08 00 A2 14 00 00 2E 00 01 12 0A 00 00 00  ................
  0000D8F0: 75 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  u...u...u...u...
  0000D900: 22 00 00 00 1B 10 00 00 22 00 00 00 67 10 00 00  "......."...g...
  0000D910: 75 00 00 00 75 00 00 00 0E 00 08 10 03 00 00 00  u...u...........
  0000D920: 07 00 0A 00 A4 14 00 00 1E 00 01 12 06 00 00 00  ................
  0000D930: 75 00 00 00 22 00 00 00 22 00 00 00 22 00 00 00  u..."..."..."...
  0000D940: 71 10 00 00 75 00 00 00 0E 00 08 10 03 00 00 00  q...u...........
  0000D950: 07 00 06 00 A6 14 00 00 1E 00 01 12 06 00 00 00  ................
  0000D960: 75 00 00 00 22 00 00 00 1B 10 00 00 22 00 00 00  u..."......."...
  0000D970: 76 10 00 00 75 00 00 00 0E 00 08 10 03 00 00 00  v...u...........
  0000D980: 07 00 06 00 A8 14 00 00 12 00 01 12 03 00 00 00  ................
  0000D990: 23 11 00 00 25 11 00 00 75 00 00 00 0E 00 08 10  #...%...u.......
  0000D9A0: 03 00 00 00 07 00 03 00 AA 14 00 00 16 00 01 12  ................
  0000D9B0: 04 00 00 00 75 00 00 00 74 00 00 00 4C 11 00 00  ....u...t...L...
  0000D9C0: 75 00 00 00 0E 00 08 10 03 00 00 00 07 00 04 00  u...............
  0000D9D0: AC 14 00 00 12 00 01 12 03 00 00 00 75 00 00 00  ............u...
  0000D9E0: 47 11 00 00 75 00 00 00 0E 00 08 10 03 00 00 00  G...u...........
  0000D9F0: 07 00 03 00 AE 14 00 00 A2 00 03 12 05 14 03 00  ................
  0000DA00: 03 04 00 00 00 00 08 70 76 42 75 66 66 65 72 F1  .......pvBuffer.
  0000DA10: 05 14 03 00 22 00 00 00 04 00 09 64 77 4D 61 78  ...."......dwMax
  0000DA20: 53 69 7A 65 05 14 03 00 22 04 00 00 08 00 10 70  Size...."......p
  0000DA30: 64 77 43 6F 6D 70 6C 65 74 65 64 53 69 7A 65 F1  dwCompletedSize.
  0000DA40: 05 14 03 00 22 04 00 00 0C 00 09 70 64 77 53 74  ...."......pdwSt
  0000DA50: 61 74 75 73 05 14 03 00 03 04 00 00 10 00 10 68  atus...........h
  0000DA60: 43 6F 6D 70 6C 65 74 69 6F 6E 45 76 65 6E 74 F1  CompletionEvent.
  0000DA70: 05 14 03 00 03 04 00 00 10 00 08 70 43 6F 6E 74  ...........pCont
  0000DA80: 65 78 74 F1 05 14 03 00 13 04 00 00 14 00 0C 70  ext............p
  0000DA90: 72 74 54 69 6D 65 73 74 61 6D 70 F1 22 00 05 10  rtTimestamp."...
  0000DAA0: 07 00 00 00 B0 14 00 00 00 00 00 00 00 00 00 00  ................
  0000DAB0: 18 00 0D 5F 58 4D 45 44 49 41 50 41 43 4B 45 54  ..._XMEDIAPACKET
  0000DAC0: 32 00 03 12 05 14 03 00 03 04 00 00 00 00 10 68  2..............h
  0000DAD0: 43 6F 6D 70 6C 65 74 69 6F 6E 45 76 65 6E 74 F1  CompletionEvent.
  0000DAE0: 05 14 03 00 03 04 00 00 00 00 08 70 43 6F 6E 74  ...........pCont
  0000DAF0: 65 78 74 F1 26 00 06 10 02 00 08 00 B2 14 00 00  ext.&...........
  0000DB00: 04 00 18 5F 58 4D 45 44 49 41 50 41 43 4B 45 54  ..._XMEDIAPACKET
  0000DB10: 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 F1 0A 00 01 10  ::__unnamed.....
  0000DB20: 75 00 00 00 01 00 F2 F1 0E 00 03 10 B4 14 00 00  u...............
  0000DB30: 11 00 00 00 08 00 00 F1 0E 00 03 10 B5 14 00 00  ................
  0000DB40: 11 00 00 00 58 00 00 F1 0A 00 02 10 EC 13 00 00  ....X...........
  0000DB50: 0A 00 00 00 D2 00 03 12 05 14 03 00 03 04 00 00  ................
  0000DB60: 00 00 0E 6C 70 76 43 6F 64 65 53 65 67 6D 65 6E  ...lpvCodeSegmen
  0000DB70: 74 F3 F2 F1 05 14 03 00 22 00 00 00 04 00 0A 64  t......."......d
  0000DB80: 77 43 6F 64 65 53 69 7A 65 F3 F2 F1 05 14 03 00  wCodeSize.......
  0000DB90: 03 04 00 00 08 00 0F 6C 70 76 53 74 61 74 65 53  .......lpvStateS
  0000DBA0: 65 67 6D 65 6E 74 F2 F1 05 14 03 00 22 00 00 00  egment......"...
  0000DBB0: 0C 00 0B 64 77 53 74 61 74 65 53 69 7A 65 F2 F1  ...dwStateSize..
  0000DBC0: 05 14 03 00 03 04 00 00 10 00 11 6C 70 76 59 4D  ...........lpvYM
  0000DBD0: 65 6D 6F 72 79 53 65 67 6D 65 6E 74 05 14 03 00  emorySegment....
  0000DBE0: 22 00 00 00 14 00 0D 64 77 59 4D 65 6D 6F 72 79  "......dwYMemory
  0000DBF0: 53 69 7A 65 05 14 03 00 03 04 00 00 18 00 11 6C  Size...........l
  0000DC00: 70 76 53 63 72 61 74 63 68 53 65 67 6D 65 6E 74  pvScratchSegment
  0000DC10: 05 14 03 00 22 00 00 00 1C 00 0D 64 77 53 63 72  ...."......dwScr
  0000DC20: 61 74 63 68 53 69 7A 65 22 00 05 10 08 00 00 00  atchSize".......
  0000DC30: B8 14 00 00 00 00 00 00 00 00 00 00 20 00 0C 5F  ............ .._
  0000DC40: 44 53 45 46 46 45 43 54 4D 41 50 F1 0A 00 02 10  DSEFFECTMAP.....
  0000DC50: 89 13 00 00 0A 00 00 00 0A 00 02 10 DF 13 00 00  ................
  0000DC60: 0A 00 00 00 0A 00 02 10 C0 13 00 00 0A 00 00 00  ................
  0000DC70: 36 01 03 12 03 04 03 00 00 00 21 50 53 5F 49 4E  6.........!PS_IN
  0000DC80: 50 55 54 4D 41 50 50 49 4E 47 5F 55 4E 53 49 47  PUTMAPPING_UNSIG
  0000DC90: 4E 45 44 5F 49 44 45 4E 54 49 54 59 03 04 03 00  NED_IDENTITY....
  0000DCA0: 20 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49   ..PS_INPUTMAPPI
  0000DCB0: 4E 47 5F 55 4E 53 49 47 4E 45 44 5F 49 4E 56 45  NG_UNSIGNED_INVE
  0000DCC0: 52 54 F2 F1 03 04 03 00 40 00 1D 50 53 5F 49 4E  RT......@..PS_IN
  0000DCD0: 50 55 54 4D 41 50 50 49 4E 47 5F 45 58 50 41 4E  PUTMAPPING_EXPAN
  0000DCE0: 44 5F 4E 4F 52 4D 41 4C 03 04 03 00 60 00 1D 50  D_NORMAL....`..P
  0000DCF0: 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 45  S_INPUTMAPPING_E
  0000DD00: 58 50 41 4E 44 5F 4E 45 47 41 54 45 03 04 03 00  XPAND_NEGATE....
  0000DD10: 80 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  ...PS_INPUTMAPPI
  0000DD20: 4E 47 5F 48 41 4C 46 42 49 41 53 5F 4E 4F 52 4D  NG_HALFBIAS_NORM
  0000DD30: 41 4C F2 F1 03 04 03 00 A0 00 1F 50 53 5F 49 4E  AL.........PS_IN
  0000DD40: 50 55 54 4D 41 50 50 49 4E 47 5F 48 41 4C 46 42  PUTMAPPING_HALFB
  0000DD50: 49 41 53 5F 4E 45 47 41 54 45 F2 F1 03 04 03 00  IAS_NEGATE......
  0000DD60: C0 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  ...PS_INPUTMAPPI
  0000DD70: 4E 47 5F 53 49 47 4E 45 44 5F 49 44 45 4E 54 49  NG_SIGNED_IDENTI
  0000DD80: 54 59 F2 F1 03 04 03 00 E0 00 1D 50 53 5F 49 4E  TY.........PS_IN
  0000DD90: 50 55 54 4D 41 50 50 49 4E 47 5F 53 49 47 4E 45  PUTMAPPING_SIGNE
  0000DDA0: 44 5F 4E 45 47 41 54 45 1E 00 07 10 08 00 00 00  D_NEGATE........
  0000DDB0: 74 00 00 00 BD 14 00 00 0F 50 53 5F 49 4E 50 55  t........PS_INPU
  0000DDC0: 54 4D 41 50 50 49 4E 47 32 00 03 12 00 14 03 00  TMAPPING2.......
  0000DDD0: F3 11 00 00 00 00 F2 F1 05 14 03 00 22 00 00 00  ............"...
  0000DDE0: 0C 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  0000DDF0: 22 00 00 00 10 00 04 53 69 7A 65 F1 26 00 05 10  "......Size.&...
  0000DE00: 03 00 00 00 BF 14 00 00 00 00 00 00 00 00 00 00  ................
  0000DE10: 14 00 11 44 33 44 50 69 78 65 6C 43 6F 6E 74 61  ...D3DPixelConta
  0000DE20: 69 6E 65 72 2A 00 03 12 05 14 03 00 22 00 00 00  iner*......."...
  0000DE30: 00 00 08 64 77 4D 69 78 42 69 6E F1 05 14 03 00  ...dwMixBin.....
  0000DE40: 12 00 00 00 04 00 07 6C 56 6F 6C 75 6D 65 F2 F1  .......lVolume..
  0000DE50: 2A 00 05 10 02 00 00 00 C1 14 00 00 00 00 00 00  *...............
  0000DE60: 00 00 00 00 08 00 13 5F 44 53 4D 49 58 42 49 4E  ......._DSMIXBIN
  0000DE70: 56 4F 4C 55 4D 45 50 41 49 52 F2 F1 0A 00 02 10  VOLUMEPAIR......
  0000DE80: 71 13 00 00 0A 00 00 00 0A 00 02 10 97 13 00 00  q...............
  0000DE90: 0A 00 00 00 0E 00 03 10 22 00 00 00 11 00 00 00  ........".......
  0000DEA0: 80 00 00 F1 0E 00 03 10 C5 14 00 00 11 00 00 00  ................
  0000DEB0: 00 02 00 F1 0A 00 02 10 40 14 00 00 0A 00 00 00  ........@.......
  0000DEC0: 2A 00 03 12 05 14 03 00 12 00 00 00 00 00 08 6C  *..............l
  0000DED0: 48 46 4C 65 76 65 6C F1 05 14 03 00 40 00 00 00  HFLevel.....@...
  0000DEE0: 04 00 09 66 6C 4C 46 52 61 74 69 6F 2A 00 05 10  ...flLFRatio*...
  0000DEF0: 02 00 00 00 C8 14 00 00 00 00 00 00 00 00 00 00  ................
  0000DF00: 08 00 13 5F 44 53 49 33 44 4C 32 4F 42 53 54 52  ..._DSI3DL2OBSTR
  0000DF10: 55 43 54 49 4F 4E F2 F1 0A 00 02 10 08 14 00 00  UCTION..........
  0000DF20: 0A 00 00 00 1E 03 03 12 03 04 03 00 01 00 0E 44  ...............D
  0000DF30: 33 44 54 4F 50 5F 44 49 53 41 42 4C 45 F3 F2 F1  3DTOP_DISABLE...
  0000DF40: 03 04 03 00 02 00 11 44 33 44 54 4F 50 5F 53 45  .......D3DTOP_SE
  0000DF50: 4C 45 43 54 41 52 47 31 03 04 03 00 03 00 11 44  LECTARG1.......D
  0000DF60: 33 44 54 4F 50 5F 53 45 4C 45 43 54 41 52 47 32  3DTOP_SELECTARG2
  0000DF70: 03 04 03 00 04 00 0F 44 33 44 54 4F 50 5F 4D 4F  .......D3DTOP_MO
  0000DF80: 44 55 4C 41 54 45 F2 F1 03 04 03 00 05 00 11 44  DULATE.........D
  0000DF90: 33 44 54 4F 50 5F 4D 4F 44 55 4C 41 54 45 32 58  3DTOP_MODULATE2X
  0000DFA0: 03 04 03 00 06 00 11 44 33 44 54 4F 50 5F 4D 4F  .......D3DTOP_MO
  0000DFB0: 44 55 4C 41 54 45 34 58 03 04 03 00 07 00 0A 44  DULATE4X.......D
  0000DFC0: 33 44 54 4F 50 5F 41 44 44 F3 F2 F1 03 04 03 00  3DTOP_ADD.......
  0000DFD0: 08 00 10 44 33 44 54 4F 50 5F 41 44 44 53 49 47  ...D3DTOP_ADDSIG
  0000DFE0: 4E 45 44 F1 03 04 03 00 09 00 12 44 33 44 54 4F  NED........D3DTO
  0000DFF0: 50 5F 41 44 44 53 49 47 4E 45 44 32 58 F3 F2 F1  P_ADDSIGNED2X...
  0000E000: 03 04 03 00 0A 00 0F 44 33 44 54 4F 50 5F 53 55  .......D3DTOP_SU
  0000E010: 42 54 52 41 43 54 F2 F1 03 04 03 00 0B 00 10 44  BTRACT.........D
  0000E020: 33 44 54 4F 50 5F 41 44 44 53 4D 4F 4F 54 48 F1  3DTOP_ADDSMOOTH.
  0000E030: 03 04 03 00 0C 00 18 44 33 44 54 4F 50 5F 42 4C  .......D3DTOP_BL
  0000E040: 45 4E 44 44 49 46 46 55 53 45 41 4C 50 48 41 F1  ENDDIFFUSEALPHA.
  0000E050: 03 04 03 00 0E 00 18 44 33 44 54 4F 50 5F 42 4C  .......D3DTOP_BL
  0000E060: 45 4E 44 54 45 58 54 55 52 45 41 4C 50 48 41 F1  ENDTEXTUREALPHA.
  0000E070: 03 04 03 00 0F 00 17 44 33 44 54 4F 50 5F 42 4C  .......D3DTOP_BL
  0000E080: 45 4E 44 46 41 43 54 4F 52 41 4C 50 48 41 F2 F1  ENDFACTORALPHA..
  0000E090: 03 04 03 00 10 00 1A 44 33 44 54 4F 50 5F 42 4C  .......D3DTOP_BL
  0000E0A0: 45 4E 44 54 45 58 54 55 52 45 41 4C 50 48 41 50  ENDTEXTUREALPHAP
  0000E0B0: 4D F3 F2 F1 03 04 03 00 0D 00 18 44 33 44 54 4F  M..........D3DTO
  0000E0C0: 50 5F 42 4C 45 4E 44 43 55 52 52 45 4E 54 41 4C  P_BLENDCURRENTAL
  0000E0D0: 50 48 41 F1 03 04 03 00 11 00 12 44 33 44 54 4F  PHA........D3DTO
  0000E0E0: 50 5F 50 52 45 4D 4F 44 55 4C 41 54 45 F3 F2 F1  P_PREMODULATE...
  0000E0F0: 03 04 03 00 12 00 1D 44 33 44 54 4F 50 5F 4D 4F  .......D3DTOP_MO
  0000E100: 44 55 4C 41 54 45 41 4C 50 48 41 5F 41 44 44 43  DULATEALPHA_ADDC
  0000E110: 4F 4C 4F 52 03 04 03 00 13 00 1D 44 33 44 54 4F  OLOR.......D3DTO
  0000E120: 50 5F 4D 4F 44 55 4C 41 54 45 43 4F 4C 4F 52 5F  P_MODULATECOLOR_
  0000E130: 41 44 44 41 4C 50 48 41 03 04 03 00 14 00 20 44  ADDALPHA...... D
  0000E140: 33 44 54 4F 50 5F 4D 4F 44 55 4C 41 54 45 49 4E  3DTOP_MODULATEIN
  0000E150: 56 41 4C 50 48 41 5F 41 44 44 43 4F 4C 4F 52 F1  VALPHA_ADDCOLOR.
  0000E160: 03 04 03 00 15 00 20 44 33 44 54 4F 50 5F 4D 4F  ...... D3DTOP_MO
  0000E170: 44 55 4C 41 54 45 49 4E 56 43 4F 4C 4F 52 5F 41  DULATEINVCOLOR_A
  0000E180: 44 44 41 4C 50 48 41 F1 03 04 03 00 16 00 12 44  DDALPHA........D
  0000E190: 33 44 54 4F 50 5F 44 4F 54 50 52 4F 44 55 43 54  3DTOP_DOTPRODUCT
  0000E1A0: 33 F3 F2 F1 03 04 03 00 17 00 12 44 33 44 54 4F  3..........D3DTO
  0000E1B0: 50 5F 4D 55 4C 54 49 50 4C 59 41 44 44 F3 F2 F1  P_MULTIPLYADD...
  0000E1C0: 03 04 03 00 18 00 0B 44 33 44 54 4F 50 5F 4C 45  .......D3DTOP_LE
  0000E1D0: 52 50 F2 F1 03 04 03 00 19 00 11 44 33 44 54 4F  RP.........D3DTO
  0000E1E0: 50 5F 42 55 4D 50 45 4E 56 4D 41 50 03 04 03 00  P_BUMPENVMAP....
  0000E1F0: 1A 00 1A 44 33 44 54 4F 50 5F 42 55 4D 50 45 4E  ...D3DTOP_BUMPEN
  0000E200: 56 4D 41 50 4C 55 4D 49 4E 41 4E 43 45 F3 F2 F1  VMAPLUMINANCE...
  0000E210: 03 04 03 00 1B 00 0A 44 33 44 54 4F 50 5F 4D 41  .......D3DTOP_MA
  0000E220: 58 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 12 44  X..............D
  0000E230: 33 44 54 4F 50 5F 46 4F 52 43 45 5F 44 57 4F 52  3DTOP_FORCE_DWOR
  0000E240: 44 F3 F2 F1 1E 00 07 10 1C 00 00 00 74 00 00 00  D...........t...
  0000E250: CB 14 00 00 0D 5F 44 33 44 54 45 58 54 55 52 45  ....._D3DTEXTURE
  0000E260: 4F 50 F2 F1 86 00 03 12 05 14 03 00 22 00 00 00  OP.........."...
  0000E270: 00 00 04 53 77 61 70 F1 05 14 03 00 22 00 00 00  ...Swap....."...
  0000E280: 04 00 0A 53 77 61 70 56 42 6C 61 6E 6B F3 F2 F1  ...SwapVBlank...
  0000E290: 05 14 03 00 22 00 00 00 08 00 0D 4D 69 73 73 65  ...."......Misse
  0000E2A0: 64 56 42 6C 61 6E 6B 73 05 14 03 00 22 00 00 00  dVBlanks...."...
  0000E2B0: 0C 00 13 54 69 6D 65 55 6E 74 69 6C 53 77 61 70  ...TimeUntilSwap
  0000E2C0: 56 42 6C 61 6E 6B F2 F1 05 14 03 00 22 00 00 00  VBlank......"...
  0000E2D0: 10 00 16 54 69 6D 65 42 65 74 77 65 65 6E 53 77  ...TimeBetweenSw
  0000E2E0: 61 70 56 42 6C 61 6E 6B 73 F3 F2 F1 22 00 05 10  apVBlanks..."...
  0000E2F0: 05 00 00 00 CD 14 00 00 00 00 00 00 00 00 00 00  ................
  0000E300: 14 00 0C 5F 44 33 44 53 57 41 50 44 41 54 41 F1  ..._D3DSWAPDATA.
  0000E310: 0A 00 01 10 20 00 00 00 01 00 F2 F1 0E 00 03 10  .... ...........
  0000E320: CF 14 00 00 11 00 00 00 42 00 00 F1 0A 00 02 10  ........B.......
  0000E330: 7F 11 00 00 0A 00 00 00 2A 00 03 12 05 14 03 00  ........*.......
  0000E340: 12 00 00 00 00 00 08 6C 48 46 4C 65 76 65 6C F1  .......lHFLevel.
  0000E350: 05 14 03 00 40 00 00 00 04 00 09 66 6C 4C 46 52  ....@......flLFR
  0000E360: 61 74 69 6F 26 00 05 10 02 00 00 00 D2 14 00 00  atio&...........
  0000E370: 00 00 00 00 00 00 00 00 08 00 11 5F 44 53 49 33  ..........._DSI3
  0000E380: 44 4C 32 4F 43 43 4C 55 53 49 4F 4E 0A 00 02 10  DL2OCCLUSION....
  0000E390: 3A 14 00 00 0A 00 00 00 62 00 03 12 05 14 03 00  :.......b.......
  0000E3A0: 22 00 00 00 00 00 07 64 77 46 6C 61 67 73 F2 F1  "......dwFlags..
  0000E3B0: 05 14 03 00 22 00 00 00 04 00 0B 64 77 49 6E 70  ...."......dwInp
  0000E3C0: 75 74 53 69 7A 65 F2 F1 05 14 03 00 22 00 00 00  utSize......"...
  0000E3D0: 08 00 0C 64 77 4F 75 74 70 75 74 53 69 7A 65 F1  ...dwOutputSize.
  0000E3E0: 05 14 03 00 22 00 00 00 0C 00 0E 64 77 4D 61 78  ...."......dwMax
  0000E3F0: 4C 6F 6F 6B 61 68 65 61 64 F3 F2 F1 22 00 05 10  Lookahead..."...
  0000E400: 04 00 00 00 D5 14 00 00 00 00 00 00 00 00 00 00  ................
  0000E410: 10 00 0B 5F 58 4D 45 44 49 41 49 4E 46 4F F2 F1  ..._XMEDIAINFO..
  0000E420: 0A 00 02 10 F1 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000E430: AC 11 00 00 0A 00 00 00 0A 00 02 10 6C 13 00 00  ............l...
  0000E440: 0A 00 00 00 0E 00 03 10 DA 10 00 00 11 00 00 00  ................
  0000E450: 8C 00 00 F1 0A 00 02 10 86 11 00 00 0A 00 00 00  ................
  0000E460: 36 00 03 12 05 14 03 00 22 00 00 00 00 00 06 56  6......."......V
  0000E470: 42 6C 61 6E 6B F3 F2 F1 05 14 03 00 22 00 00 00  Blank......."...
  0000E480: 04 00 04 53 77 61 70 F1 05 14 03 00 22 00 00 00  ...Swap....."...
  0000E490: 08 00 05 46 6C 61 67 73 26 00 05 10 03 00 00 00  ...Flags&.......
  0000E4A0: DC 14 00 00 00 00 00 00 00 00 00 00 0C 00 0E 5F  ..............._
  0000E4B0: 44 33 44 56 42 4C 41 4E 4B 44 41 54 41 F3 F2 F1  D3DVBLANKDATA...
  0000E4C0: 0E 00 03 10 21 00 00 00 11 00 00 00 10 00 00 F1  ....!...........
  0000E4D0: 0A 00 0A 00 07 00 55 55 55 50 F2 F1 0A 00 02 10  ......UUUP......
  0000E4E0: DF 14 00 00 0A 00 00 00 0A 00 02 10 38 14 00 00  ............8...
  0000E4F0: 0A 04 00 00 1A 00 09 10 22 00 00 00 38 14 00 00  ........"...8...
  0000E500: E1 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  0000E510: 1A 00 09 10 12 00 00 00 38 14 00 00 E1 14 00 00  ........8.......
  0000E520: 07 00 01 00 3C 14 00 00 00 00 00 00 1A 00 09 10  ....<...........
  0000E530: 12 00 00 00 38 14 00 00 E1 14 00 00 07 00 01 00  ....8...........
  0000E540: 82 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000E550: 38 14 00 00 E1 14 00 00 07 00 02 00 42 14 00 00  8...........B...
  0000E560: 00 00 00 00 1A 00 09 10 12 00 00 00 38 14 00 00  ............8...
  0000E570: E1 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  0000E580: 0A 00 01 10 38 14 00 00 01 00 F2 F1 0A 00 02 10  ....8...........
  0000E590: E7 14 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  0000E5A0: E8 14 00 00 1A 00 09 10 03 00 00 00 38 14 00 00  ............8...
  0000E5B0: E1 14 00 00 0B 00 01 00 E9 14 00 00 00 00 00 00  ................
  0000E5C0: 1A 00 09 10 03 00 00 00 38 14 00 00 E1 14 00 00  ........8.......
  0000E5D0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000E5E0: 03 01 00 00 EA 14 00 00 03 01 00 00 EB 14 00 00  ................
  0000E5F0: BA 00 03 12 09 14 00 00 E0 14 00 00 0B 14 1B 00  ................
  0000E600: E2 14 00 00 00 00 00 00 06 41 64 64 52 65 66 F1  .........AddRef.
  0000E610: 0B 14 1B 00 E2 14 00 00 04 00 00 00 07 52 65 6C  .............Rel
  0000E620: 65 61 73 65 0B 14 1B 00 E3 14 00 00 08 00 00 00  ease............
  0000E630: 07 47 65 74 49 6E 66 6F 0B 14 1B 00 E4 14 00 00  .GetInfo........
  0000E640: 0C 00 00 00 09 47 65 74 53 74 61 74 75 73 F2 F1  .....GetStatus..
  0000E650: 0B 14 1B 00 E5 14 00 00 10 00 00 00 07 50 72 6F  .............Pro
  0000E660: 63 65 73 73 0B 14 1B 00 E6 14 00 00 14 00 00 00  cess............
  0000E670: 0D 44 69 73 63 6F 6E 74 69 6E 75 69 74 79 F2 F1  .Discontinuity..
  0000E680: 0B 14 1B 00 E6 14 00 00 18 00 00 00 05 46 6C 75  .............Flu
  0000E690: 73 68 F2 F1 07 14 02 00 EC 14 00 00 0C 58 4D 65  sh...........XMe
  0000E6A0: 64 69 61 4F 62 6A 65 63 74 F3 F2 F1 0A 00 0A 00  diaObject.......
  0000E6B0: 07 00 55 55 55 50 F2 F1 22 00 05 10 0A 00 02 00  ..UUUP..".......
  0000E6C0: ED 14 00 00 00 00 00 00 EE 14 00 00 04 00 0C 58  ...............X
  0000E6D0: 4D 65 64 69 61 4F 62 6A 65 63 74 F1 2A 00 03 12  MediaObject.*...
  0000E6E0: 05 14 03 00 22 00 00 00 00 00 07 4C 6F 77 50 61  ...."......LowPa
  0000E6F0: 72 74 F2 F1 05 14 03 00 12 00 00 00 04 00 08 48  rt.............H
  0000E700: 69 67 68 50 61 72 74 F1 2E 00 05 10 02 00 08 00  ighPart.........
  0000E710: F0 14 00 00 00 00 00 00 00 00 00 00 08 00 19 5F  ..............._
  0000E720: 4C 41 52 47 45 5F 49 4E 54 45 47 45 52 3A 3A 5F  LARGE_INTEGER::_
  0000E730: 5F 75 6E 6E 61 6D 65 64 4A 00 03 12 05 14 03 00  _unnamedJ.......
  0000E740: 22 00 00 00 00 00 07 4C 6F 77 50 61 72 74 F2 F1  "......LowPart..
  0000E750: 05 14 03 00 12 00 00 00 04 00 08 48 69 67 68 50  ...........HighP
  0000E760: 61 72 74 F1 05 14 03 00 F1 14 00 00 00 00 01 75  art............u
  0000E770: 05 14 03 00 13 00 00 00 00 00 08 51 75 61 64 50  ...........QuadP
  0000E780: 61 72 74 F1 1E 00 06 10 04 00 00 00 F2 14 00 00  art.............
  0000E790: 08 00 0E 5F 4C 41 52 47 45 5F 49 4E 54 45 47 45  ..._LARGE_INTEGE
  0000E7A0: 52 F3 F2 F1 0A 00 02 10 7B 13 00 00 0A 00 00 00  R.......{.......
  0000E7B0: 0A 00 02 10 19 14 00 00 0A 00 00 00 0E 00 03 10  ................
  0000E7C0: DA 10 00 00 11 00 00 00 10 00 00 F1 0A 00 02 10  ................
  0000E7D0: C3 13 00 00 0A 00 00 00 0E 01 03 12 05 14 03 00  ................
  0000E7E0: 40 00 00 00 00 00 03 5F 31 31 F2 F1 05 14 03 00  @......_11......
  0000E7F0: 40 00 00 00 04 00 03 5F 31 32 F2 F1 05 14 03 00  @......_12......
  0000E800: 40 00 00 00 08 00 03 5F 31 33 F2 F1 05 14 03 00  @......_13......
  0000E810: 40 00 00 00 0C 00 03 5F 31 34 F2 F1 05 14 03 00  @......_14......
  0000E820: 40 00 00 00 10 00 03 5F 32 31 F2 F1 05 14 03 00  @......_21......
  0000E830: 40 00 00 00 14 00 03 5F 32 32 F2 F1 05 14 03 00  @......_22......
  0000E840: 40 00 00 00 18 00 03 5F 32 33 F2 F1 05 14 03 00  @......_23......
  0000E850: 40 00 00 00 1C 00 03 5F 32 34 F2 F1 05 14 03 00  @......_24......
  0000E860: 40 00 00 00 20 00 03 5F 33 31 F2 F1 05 14 03 00  @... .._31......
  0000E870: 40 00 00 00 24 00 03 5F 33 32 F2 F1 05 14 03 00  @...$.._32......
  0000E880: 40 00 00 00 28 00 03 5F 33 33 F2 F1 05 14 03 00  @...(.._33......
  0000E890: 40 00 00 00 2C 00 03 5F 33 34 F2 F1 05 14 03 00  @...,.._34......
  0000E8A0: 40 00 00 00 30 00 03 5F 34 31 F2 F1 05 14 03 00  @...0.._41......
  0000E8B0: 40 00 00 00 34 00 03 5F 34 32 F2 F1 05 14 03 00  @...4.._42......
  0000E8C0: 40 00 00 00 38 00 03 5F 34 33 F2 F1 05 14 03 00  @...8.._43......
  0000E8D0: 40 00 00 00 3C 00 03 5F 34 34 F2 F1 05 14 03 00  @...<.._44......
  0000E8E0: 1D 12 00 00 00 00 01 6D 22 00 06 10 11 00 08 00  .......m".......
  0000E8F0: F8 14 00 00 40 00 15 5F 44 33 44 4D 41 54 52 49  ....@.._D3DMATRI
  0000E900: 58 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 02 01 03 12  X::__unnamed....
  0000E910: 05 14 03 00 40 00 00 00 00 00 03 5F 31 31 F2 F1  ....@......_11..
  0000E920: 05 14 03 00 40 00 00 00 04 00 03 5F 31 32 F2 F1  ....@......_12..
  0000E930: 05 14 03 00 40 00 00 00 08 00 03 5F 31 33 F2 F1  ....@......_13..
  0000E940: 05 14 03 00 40 00 00 00 0C 00 03 5F 31 34 F2 F1  ....@......_14..
  0000E950: 05 14 03 00 40 00 00 00 10 00 03 5F 32 31 F2 F1  ....@......_21..
  0000E960: 05 14 03 00 40 00 00 00 14 00 03 5F 32 32 F2 F1  ....@......_22..
  0000E970: 05 14 03 00 40 00 00 00 18 00 03 5F 32 33 F2 F1  ....@......_23..
  0000E980: 05 14 03 00 40 00 00 00 1C 00 03 5F 32 34 F2 F1  ....@......_24..
  0000E990: 05 14 03 00 40 00 00 00 20 00 03 5F 33 31 F2 F1  ....@... .._31..
  0000E9A0: 05 14 03 00 40 00 00 00 24 00 03 5F 33 32 F2 F1  ....@...$.._32..
  0000E9B0: 05 14 03 00 40 00 00 00 28 00 03 5F 33 33 F2 F1  ....@...(.._33..
  0000E9C0: 05 14 03 00 40 00 00 00 2C 00 03 5F 33 34 F2 F1  ....@...,.._34..
  0000E9D0: 05 14 03 00 40 00 00 00 30 00 03 5F 34 31 F2 F1  ....@...0.._41..
  0000E9E0: 05 14 03 00 40 00 00 00 34 00 03 5F 34 32 F2 F1  ....@...4.._42..
  0000E9F0: 05 14 03 00 40 00 00 00 38 00 03 5F 34 33 F2 F1  ....@...8.._43..
  0000EA00: 05 14 03 00 40 00 00 00 3C 00 03 5F 34 34 F2 F1  ....@...<.._44..
  0000EA10: 36 00 05 10 10 00 08 00 FA 14 00 00 00 00 00 00  6...............
  0000EA20: 00 00 00 00 40 00 20 5F 44 33 44 4D 41 54 52 49  ....@. _D3DMATRI
  0000EA30: 58 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 3A 3A 5F 5F  X::__unnamed::__
  0000EA40: 75 6E 6E 61 6D 65 64 F1 6E 00 03 12 05 14 03 00  unnamed.n.......
  0000EA50: 22 00 00 00 00 00 0B 53 74 72 65 61 6D 49 6E 64  "......StreamInd
  0000EA60: 65 78 F2 F1 05 14 03 00 22 00 00 00 04 00 06 4F  ex......"......O
  0000EA70: 66 66 73 65 74 F3 F2 F1 05 14 03 00 22 00 00 00  ffset......."...
  0000EA80: 08 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  0000EA90: 20 00 00 00 0C 00 08 54 65 73 73 54 79 70 65 F1   ......TessType.
  0000EAA0: 05 14 03 00 20 00 00 00 0D 00 0A 54 65 73 73 53  .... ......TessS
  0000EAB0: 6F 75 72 63 65 F3 F2 F1 2A 00 05 10 05 00 00 00  ource...*.......
  0000EAC0: FC 14 00 00 00 00 00 00 00 00 00 00 10 00 15 5F  ..............._
  0000EAD0: 44 33 44 56 45 52 54 45 58 53 48 41 44 45 52 49  D3DVERTEXSHADERI
  0000EAE0: 4E 50 55 54 2A 00 03 12 05 14 03 00 22 00 00 00  NPUT*......."...
  0000EAF0: 00 00 07 4C 6F 77 50 61 72 74 F2 F1 05 14 03 00  ...LowPart......
  0000EB00: 12 00 00 00 04 00 08 48 69 67 68 50 61 72 74 F1  .......HighPart.
  0000EB10: 2E 00 05 10 02 00 08 00 FE 14 00 00 00 00 00 00  ................
  0000EB20: 00 00 00 00 08 00 19 5F 4C 41 52 47 45 5F 49 4E  ......._LARGE_IN
  0000EB30: 54 45 47 45 52 3A 3A 5F 5F 75 6E 6E 61 6D 65 64  TEGER::__unnamed
  0000EB40: 0A 00 02 10 8F 11 00 00 0A 00 00 00 0A 00 02 10  ................
  0000EB50: A2 13 00 00 0A 00 00 00 0A 00 02 10 76 13 00 00  ............v...
  0000EB60: 0A 00 00 00 0E 00 03 10 DA 10 00 00 11 00 00 00  ................
  0000EB70: 48 01 00 F1 0A 00 02 10 73 13 00 00 0A 00 00 00  H.......s.......
  0000EB80: 0A 00 02 10 29 14 00 00 0A 00 00 00 0E 00 03 10  ....)...........
  0000EB90: DA 10 00 00 11 00 00 00 58 00 00 F1 0E 00 03 10  ........X.......
  0000EBA0: 22 00 00 00 11 00 00 00 48 02 00 F1 0A 00 02 10  ".......H.......
  0000EBB0: E7 13 00 00 0A 00 00 00 0A 00 02 10 7D 13 00 00  ............}...
  0000EBC0: 0A 00 00 00 1A 00 03 12 03 04 03 00 14 00 11 4D  ...............M
  0000EBD0: 41 58 5F 46 56 46 5F 44 45 43 4C 5F 53 49 5A 45  AX_FVF_DECL_SIZE
  0000EBE0: 22 00 07 10 01 00 00 00 74 00 00 00 0A 15 00 00  ".......t.......
  0000EBF0: 12 5F 4D 41 58 5F 46 56 46 5F 44 45 43 4C 5F 53  ._MAX_FVF_DECL_S
  0000EC00: 49 5A 45 F1 9A 01 03 12 03 04 03 00 00 00 0F 44  IZE............D
  0000EC10: 33 44 53 42 44 5F 54 45 58 54 55 52 45 53 F2 F1  3DSBD_TEXTURES..
  0000EC20: 03 04 03 00 04 00 12 44 33 44 53 42 44 5F 50 49  .......D3DSBD_PI
  0000EC30: 58 45 4C 53 48 41 44 45 52 F3 F2 F1 03 04 03 00  XELSHADER.......
  0000EC40: 05 00 13 44 33 44 53 42 44 5F 56 45 52 54 45 58  ...D3DSBD_VERTEX
  0000EC50: 53 48 41 44 45 52 F2 F1 03 04 03 00 06 00 0E 44  SHADER.........D
  0000EC60: 33 44 53 42 44 5F 49 4E 44 49 43 45 53 F3 F2 F1  3DSBD_INDICES...
  0000EC70: 03 04 03 00 07 00 0E 44 33 44 53 42 44 5F 53 54  .......D3DSBD_ST
  0000EC80: 52 45 41 4D 53 F3 F2 F1 03 04 03 00 17 00 1B 44  REAMS..........D
  0000EC90: 33 44 53 42 44 5F 50 49 58 45 4C 53 48 41 44 45  3DSBD_PIXELSHADE
  0000ECA0: 52 43 4F 4E 53 54 41 4E 54 53 F2 F1 03 04 03 00  RCONSTANTS......
  0000ECB0: 27 00 1C 44 33 44 53 42 44 5F 56 45 52 54 45 58  '..D3DSBD_VERTEX
  0000ECC0: 53 48 41 44 45 52 43 4F 4E 53 54 41 4E 54 53 F1  SHADERCONSTANTS.
  0000ECD0: 03 04 03 00 E7 00 13 44 33 44 53 42 44 5F 52 45  .......D3DSBD_RE
  0000ECE0: 4E 44 45 52 53 54 41 54 45 53 F2 F1 03 04 03 00  NDERSTATES......
  0000ECF0: 79 01 14 44 33 44 53 42 44 5F 54 45 58 54 55 52  y..D3DSBD_TEXTUR
  0000ED00: 45 53 54 41 54 45 53 F1 03 04 03 00 F9 01 11 44  ESTATES........D
  0000ED10: 33 44 53 42 44 5F 54 52 41 4E 53 46 4F 52 4D 53  3DSBD_TRANSFORMS
  0000ED20: 03 04 03 00 03 02 0F 44 33 44 53 42 44 5F 56 49  .......D3DSBD_VI
  0000ED30: 45 57 50 4F 52 54 F2 F1 03 04 03 00 04 02 0F 44  EWPORT.........D
  0000ED40: 33 44 53 42 44 5F 4D 41 54 45 52 49 41 4C F2 F1  3DSBD_MATERIAL..
  0000ED50: 03 04 03 00 05 02 13 44 33 44 53 42 44 5F 42 41  .......D3DSBD_BA
  0000ED60: 43 4B 4D 41 54 45 52 49 41 4C F2 F1 03 04 03 00  CKMATERIAL......
  0000ED70: 06 02 0A 44 33 44 53 42 44 5F 4D 41 58 F3 F2 F1  ...D3DSBD_MAX...
  0000ED80: 03 04 03 00 04 80 FF FF FF 7F 12 44 33 44 53 42  ...........D3DSB
  0000ED90: 44 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  D_FORCE_DWORD...
  0000EDA0: 2A 00 07 10 0F 00 00 00 74 00 00 00 0C 15 00 00  *.......t.......
  0000EDB0: 18 5F 44 33 44 53 54 41 54 45 42 4C 4F 43 4B 44  ._D3DSTATEBLOCKD
  0000EDC0: 49 52 54 59 49 4E 44 45 58 F3 F2 F1 0A 00 02 10  IRTYINDEX.......
  0000EDD0: FA 13 00 00 0A 00 00 00 0A 00 02 10 8B 13 00 00  ................
  0000EDE0: 0A 00 00 00 0A 00 02 10 C8 13 00 00 0A 00 00 00  ................
  0000EDF0: EE 01 03 12 03 04 03 00 00 00 10 50 53 5F 52 45  ...........PS_RE
  0000EE00: 47 49 53 54 45 52 5F 5A 45 52 4F F1 03 04 03 00  GISTER_ZERO.....
  0000EE10: 00 00 13 50 53 5F 52 45 47 49 53 54 45 52 5F 44  ...PS_REGISTER_D
  0000EE20: 49 53 43 41 52 44 F2 F1 03 04 03 00 01 00 0E 50  ISCARD.........P
  0000EE30: 53 5F 52 45 47 49 53 54 45 52 5F 43 30 F3 F2 F1  S_REGISTER_C0...
  0000EE40: 03 04 03 00 02 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EE50: 45 52 5F 43 31 F3 F2 F1 03 04 03 00 03 00 0F 50  ER_C1..........P
  0000EE60: 53 5F 52 45 47 49 53 54 45 52 5F 46 4F 47 F2 F1  S_REGISTER_FOG..
  0000EE70: 03 04 03 00 04 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EE80: 45 52 5F 56 30 F3 F2 F1 03 04 03 00 05 00 0E 50  ER_V0..........P
  0000EE90: 53 5F 52 45 47 49 53 54 45 52 5F 56 31 F3 F2 F1  S_REGISTER_V1...
  0000EEA0: 03 04 03 00 08 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EEB0: 45 52 5F 54 30 F3 F2 F1 03 04 03 00 09 00 0E 50  ER_T0..........P
  0000EEC0: 53 5F 52 45 47 49 53 54 45 52 5F 54 31 F3 F2 F1  S_REGISTER_T1...
  0000EED0: 03 04 03 00 0A 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EEE0: 45 52 5F 54 32 F3 F2 F1 03 04 03 00 0B 00 0E 50  ER_T2..........P
  0000EEF0: 53 5F 52 45 47 49 53 54 45 52 5F 54 33 F3 F2 F1  S_REGISTER_T3...
  0000EF00: 03 04 03 00 0C 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EF10: 45 52 5F 52 30 F3 F2 F1 03 04 03 00 0D 00 0E 50  ER_R0..........P
  0000EF20: 53 5F 52 45 47 49 53 54 45 52 5F 52 31 F3 F2 F1  S_REGISTER_R1...
  0000EF30: 03 04 03 00 0E 00 14 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EF40: 45 52 5F 56 31 52 30 5F 53 55 4D F1 03 04 03 00  ER_V1R0_SUM.....
  0000EF50: 0F 00 13 50 53 5F 52 45 47 49 53 54 45 52 5F 45  ...PS_REGISTER_E
  0000EF60: 46 5F 50 52 4F 44 F2 F1 03 04 03 00 20 00 0F 50  F_PROD...... ..P
  0000EF70: 53 5F 52 45 47 49 53 54 45 52 5F 4F 4E 45 F2 F1  S_REGISTER_ONE..
  0000EF80: 03 04 03 00 40 00 18 50 53 5F 52 45 47 49 53 54  ....@..PS_REGIST
  0000EF90: 45 52 5F 4E 45 47 41 54 49 56 45 5F 4F 4E 45 F1  ER_NEGATIVE_ONE.
  0000EFA0: 03 04 03 00 A0 00 14 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EFB0: 45 52 5F 4F 4E 45 5F 48 41 4C 46 F1 03 04 03 00  ER_ONE_HALF.....
  0000EFC0: 80 00 1D 50 53 5F 52 45 47 49 53 54 45 52 5F 4E  ...PS_REGISTER_N
  0000EFD0: 45 47 41 54 49 56 45 5F 4F 4E 45 5F 48 41 4C 46  EGATIVE_ONE_HALF
  0000EFE0: 1A 00 07 10 13 00 00 00 74 00 00 00 11 15 00 00  ........t.......
  0000EFF0: 0B 50 53 5F 52 45 47 49 53 54 45 52              .PS_REGISTER

SECTION HEADER #41
.debug$S name
       0 physical address
       0 virtual address
      28 size of raw data
   12E91 file pointer to raw data (00012E91 to 00012EB8)
   12EB9 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #41
  00000000: 26 00 08 10 B6 14 00 00 00 00 00 00 00 00 19 44  &..............D
  00000010: 33 44 50 52 49 4D 49 54 49 56 45 54 4F 56 45 52  3DPRIMITIVETOVER
  00000020: 54 45 58 43 4F 55 4E 54                          TEXCOUNT

RELOCATIONS #41
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        18  _D3DPRIMITIVETOVERTEXCOUNT
 0000000C  SECTION                        0000        18  _D3DPRIMITIVETOVERTEXCOUNT

SECTION HEADER #42
.debug$S name
       0 physical address
       0 virtual address
      29 size of raw data
   12ECD file pointer to raw data (00012ECD to 00012EF5)
   12EF6 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #42
  00000000: 27 00 08 10 03 15 00 00 00 00 00 00 00 00 1A 44  '..............D
  00000010: 33 44 53 49 4D 50 4C 45 52 45 4E 44 45 52 53 54  3DSIMPLERENDERST
  00000020: 41 54 45 45 4E 43 4F 44 45                       ATEENCODE

RELOCATIONS #42
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        15  _D3DSIMPLERENDERSTATEENCODE
 0000000C  SECTION                        0000        15  _D3DSIMPLERENDERSTATEENCODE

SECTION HEADER #43
.debug$S name
       0 physical address
       0 virtual address
      25 size of raw data
   12F0A file pointer to raw data (00012F0A to 00012F2E)
   12F2F file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #43
  00000000: 23 00 08 10 F6 14 00 00 00 00 00 00 00 00 16 44  #..............D
  00000010: 33 44 54 45 58 54 55 52 45 44 49 52 45 43 54 45  3DTEXTUREDIRECTE
  00000020: 4E 43 4F 44 45                                   NCODE

RELOCATIONS #43
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        12  _D3DTEXTUREDIRECTENCODE
 0000000C  SECTION                        0000        12  _D3DTEXTUREDIRECTENCODE

SECTION HEADER #44
.debug$S name
       0 physical address
       0 virtual address
      26 size of raw data
   12F43 file pointer to raw data (00012F43 to 00012F68)
   12F69 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #44
  00000000: 24 00 08 10 DA 14 00 00 00 00 00 00 00 00 17 44  $..............D
  00000010: 33 44 44 49 52 54 59 46 52 4F 4D 52 45 4E 44 45  3DDIRTYFROMRENDE
  00000020: 52 53 54 41 54 45                                RSTATE

RELOCATIONS #44
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         F  _D3DDIRTYFROMRENDERSTATE
 0000000C  SECTION                        0000         F  _D3DDIRTYFROMRENDERSTATE

SECTION HEADER #45
.debug$S name
       0 physical address
       0 virtual address
      27 size of raw data
   12F7D file pointer to raw data (00012F7D to 00012FA3)
   12FA4 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #45
  00000000: 25 00 08 10 06 15 00 00 00 00 00 00 00 00 18 44  %..............D
  00000010: 33 44 44 49 52 54 59 46 52 4F 4D 54 45 58 54 55  3DDIRTYFROMTEXTU
  00000020: 52 45 53 54 41 54 45                             RESTATE

RELOCATIONS #45
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         C  _D3DDIRTYFROMTEXTURESTATE
 0000000C  SECTION                        0000         C  _D3DDIRTYFROMTEXTURESTATE

SECTION HEADER #46
.debug$S name
       0 physical address
       0 virtual address
      23 size of raw data
   12FB8 file pointer to raw data (00012FB8 to 00012FDA)
   12FDB file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #46
  00000000: 21 00 08 10 DE 14 00 00 00 00 00 00 00 00 14 58  !..............X
  00000010: 47 72 61 70 68 69 63 73 42 75 69 6C 64 4E 75 6D  GraphicsBuildNum
  00000020: 62 65 72                                         ber

RELOCATIONS #46
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        1B  _XGraphicsBuildNumber
 0000000C  SECTION                        0000        1B  _XGraphicsBuildNumber

SECTION HEADER #47
.debug$S name
       0 physical address
       0 virtual address
      29 size of raw data
   12FEF file pointer to raw data (00012FEF to 00013017)
   13018 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #47
  00000000: 27 00 08 10 D0 14 00 00 00 00 00 00 00 00 1A 58  '..............X
  00000010: 47 52 41 50 48 49 43 53 3A 3A 67 5F 54 65 78 74  GRAPHICS::g_Text
  00000020: 75 72 65 46 6F 72 6D 61 74                       ureFormat

RELOCATIONS #47
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         9  ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)
 0000000C  SECTION                        0000         9  ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)

COFF SYMBOL TABLE
000 0000001E DEBUG  notype       Filename     | .file
    ..\header.cpp
002 001D2426 ABS    notype       Static       | @comp.id
003 00000000 SECT1  notype       Static       | .drectve
    Section length   5E, #relocs    0, #linenums    0, checksum        0
005 00000000 SECT2  notype       Static       | .debug$S
    Section length 1A53, #relocs    0, #linenums    0, checksum        0
007 00000000 SECT3  notype       Static       | XGRPH_RD
    Section length   42, #relocs    0, #linenums    0, checksum DC39E582, selection    2 (pick any)
009 00000000 SECT3  notype       External     | ?g_TextureFormat@XGRAPHICS@@3QBEB (unsigned char const * const XGRAPHICS::g_TextureFormat)
00A 00000000 SECT4  notype       Static       | XGRPH_RD
    Section length   58, #relocs    0, #linenums    0, checksum C5165846, selection    2 (pick any)
00C 00000000 SECT4  notype       External     | _D3DDIRTYFROMTEXTURESTATE
00D 00000000 SECT5  notype       Static       | XGRPH_RD
    Section length   8C, #relocs    0, #linenums    0, checksum C94CCAFD, selection    2 (pick any)
00F 00000000 SECT5  notype       External     | _D3DDIRTYFROMRENDERSTATE
010 00000000 SECT6  notype       Static       | XGRPH_RD
    Section length   10, #relocs    0, #linenums    0, checksum 73FA7410, selection    2 (pick any)
012 00000000 SECT6  notype       External     | _D3DTEXTUREDIRECTENCODE
013 00000000 SECT7  notype       Static       | XGRPH_RD
    Section length  148, #relocs    0, #linenums    0, checksum 2ED435D5, selection    2 (pick any)
015 00000000 SECT7  notype       External     | _D3DSIMPLERENDERSTATEENCODE
016 00000000 SECT8  notype       Static       | XGRPH_RD
    Section length   58, #relocs    0, #linenums    0, checksum 42D5A7C7, selection    2 (pick any)
018 00000000 SECT8  notype       External     | _D3DPRIMITIVETOVERTEXCOUNT
019 00000000 SECT9  notype       Static       | .XBLD$V
    Section length   10, #relocs    0, #linenums    0, checksum 27113BFE, selection    2 (pick any)
01B 00000000 SECT9  notype       External     | _XGraphicsBuildNumber
01C 00000000 SECTA  notype       Static       | XGRPH
    Section length   11, #relocs    1, #linenums    3, checksum DB15EC21, selection    2 (pick any)
01E 0000007E DEBUG  notype       Filename     | .file
    d:\xbox\private\windows\directx\dxg\xgraphics\misc\header.h
023 00000000 SECTA  notype ()    External     | ?IsSwizzledD3DFORMAT@XGRAPHICS@@YG_NW4_D3DFORMAT@@@Z (bool __stdcall XGRAPHICS::IsSwizzledD3DFORMAT(enum _D3DFORMAT))
    tag index 00000025 size 00000011 lines 000028DE next function 00000000
025 00000000 SECTA  notype       BeginFunction | .bf
    line# 0058 end 00000000
027 00000003 SECTA  notype       .bf or.ef    | .lf
028 00000011 SECTA  notype       EndFunction  | .ef
    line# 005a
02A 00000000 SECTB  notype       Static       | .debug$S
    Section length   5D, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0xA)
02C 00000000 SECTC  notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0xA)
02E 00000000 SECTD  notype       Static       | XGRPH
    Section length   1C, #relocs    0, #linenums    5, checksum C8E64588, selection    2 (pick any)
030 00000000 SECTD  notype ()    External     | ?IsCompressedD3DFORMAT@XGRAPHICS@@YG_NK@Z (bool __stdcall XGRAPHICS::IsCompressedD3DFORMAT(unsigned long))
    tag index 00000032 size 0000001C lines 00002997 next function 00000000
032 00000000 SECTD  notype       BeginFunction | .bf
    line# 005f end 00000000
034 00000005 SECTD  notype       .bf or.ef    | .lf
035 0000001C SECTD  notype       EndFunction  | .ef
    line# 0069
037 00000000 SECTE  notype       Static       | .debug$S
    Section length   5F, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0xD)
039 00000000 SECTF  notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0xD)
03B 00000000 SECT10 notype       Static       | XGRPH
    Section length   11, #relocs    1, #linenums    3, checksum F8BDD379, selection    2 (pick any)
03D 00000000 SECT10 notype ()    External     | ?IsValidDepthBufferD3DFORMAT@XGRAPHICS@@YGHK@Z (int __stdcall XGRAPHICS::IsValidDepthBufferD3DFORMAT(unsigned long))
    tag index 0000003F size 00000011 lines 00002A5D next function 00000000
03F 00000000 SECT10 notype       BeginFunction | .bf
    line# 006e end 00000000
041 00000003 SECT10 notype       .bf or.ef    | .lf
042 00000011 SECT10 notype       EndFunction  | .ef
    line# 0070
044 00000000 SECT11 notype       Static       | .debug$S
    Section length   65, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x10)
046 00000000 SECT12 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x10)
048 00000000 SECT13 notype       Static       | XGRPH
    Section length   11, #relocs    1, #linenums    3, checksum D954CC5D, selection    2 (pick any)
04A 00000000 SECT13 notype ()    External     | ?BitsPerPixelOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::BitsPerPixelOfD3DFORMAT(unsigned long))
    tag index 0000004C size 00000011 lines 00002B1D next function 00000000
04C 00000000 SECT13 notype       BeginFunction | .bf
    line# 0075 end 00000000
04E 00000003 SECT13 notype       .bf or.ef    | .lf
04F 00000011 SECT13 notype       EndFunction  | .ef
    line# 0077
051 00000000 SECT14 notype       Static       | .debug$S
    Section length   61, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x13)
053 00000000 SECT15 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x13)
055 00000000 SECT16 notype       Static       | XGRPH
    Section length    C, #relocs    0, #linenums    3, checksum 809E39E8, selection    2 (pick any)
057 00000000 SECT16 notype ()    External     | ?Log2@XGRAPHICS@@YIKK@Z (unsigned long __fastcall XGRAPHICS::Log2(unsigned long))
    tag index 00000059 size 0000000C lines 00002BCA next function 00000000
059 00000000 SECT16 notype       BeginFunction | .bf
    line# 007d end 00000000
05B 00000003 SECT16 notype       .bf or.ef    | .lf
05C 0000000C SECT16 notype       EndFunction  | .ef
    line# 007f
05E 00000000 SECT17 notype       Static       | .debug$S
    Section length   4B, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x16)
060 00000000 SECT18 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x16)
062 00000000 SECT19 notype       Static       | XGRPH
    Section length   13, #relocs    1, #linenums    3, checksum 9AD5CF8A, selection    2 (pick any)
064 00000000 SECT19 notype ()    External     | ?MinimumTextureSizeOfD3DFORMAT@XGRAPHICS@@YGKK@Z (unsigned long __stdcall XGRAPHICS::MinimumTextureSizeOfD3DFORMAT(unsigned long))
    tag index 00000066 size 00000013 lines 00002C72 next function 00000000
066 00000000 SECT19 notype       BeginFunction | .bf
    line# 0085 end 00000000
068 00000003 SECT19 notype       .bf or.ef    | .lf
069 00000013 SECT19 notype       EndFunction  | .ef
    line# 0087
06B 00000000 SECT1A notype       Static       | .debug$S
    Section length   67, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x19)
06D 00000000 SECT1B notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x19)
06F 00000000 SECT1C notype       Static       | XGRPH
    Section length   15, #relocs    0, #linenums    3, checksum 44324D4E, selection    2 (pick any)
071 00000000 SECT1C notype ()    External     | ?CalcPitch@XGRAPHICS@@YGKKK@Z (unsigned long __stdcall XGRAPHICS::CalcPitch(unsigned long,unsigned long))
    tag index 00000073 size 00000015 lines 00002D2E next function 00000000
073 00000000 SECT1C notype       BeginFunction | .bf
    line# 008d end 00000000
075 00000003 SECT1C notype       .bf or.ef    | .lf
076 00000015 SECT1C notype       EndFunction  | .ef
    line# 0090
078 00000000 SECT1D notype       Static       | .debug$S
    Section length   68, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x1C)
07A 00000000 SECT1E notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x1C)
07C 00000000 SECT1F notype       Static       | XGRPH
    Section length  19F, #relocs    6, #linenums   25, checksum 91842CF0, selection    1 (pick no duplicates)
07E 00000000 DEBUG  notype       Filename     | .file
    d:\xbox\private\windows\directx\dxg\xgraphics\misc\header.cpp
083 00000000 SECT1F notype ()    External     | ?EncodeFormat@XGRAPHICS@@YGKKKKKW4_D3DFORMAT@@K_N1PAK2@Z (unsigned long __stdcall XGRAPHICS::EncodeFormat(unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long *,unsigned long *))
    tag index 00000085 size 0000019F lines 00002FB1 next function 00000000
085 00000000 SECT1F notype       BeginFunction | .bf
    line# 001c end 00000000
087 00000025 SECT1F notype       .bf or.ef    | .lf
088 0000019F SECT1F notype       EndFunction  | .ef
    line# 00f9
08A 00000000 SECT20 notype       Static       | .debug$S
    Section length  1B2, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x1F)
08C 00000000 SECT21 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x1F)
08E 00000000 SECT22 notype       Static       | XGRPH
    Section length   4C, #relocs    1, #linenums    6, checksum 192E21DA, selection    1 (pick no duplicates)
090 00000000 SECT22 notype ()    External     | ?EncodeTexture@XGRAPHICS@@YGXKKKKKW4_D3DFORMAT@@K_N1KPAUD3DBaseTexture@@@Z (void __stdcall XGRAPHICS::EncodeTexture(unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,enum _D3DFORMAT,unsigned long,bool,bool,unsigned long,struct D3DBaseTexture *))
    tag index 00000092 size 0000004C lines 000032C5 next function 00000000
092 00000000 SECT22 notype       BeginFunction | .bf
    line# 0107 end 00000000
094 00000006 SECT22 notype       .bf or.ef    | .lf
095 0000004C SECT22 notype       EndFunction  | .ef
    line# 011b
097 00000000 SECT23 notype       Static       | .debug$S
    Section length  116, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x22)
099 00000000 SECT24 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x22)
09B 00000000 SECT25 notype       Static       | XGRPH
    Section length   41, #relocs    1, #linenums    6, checksum 174E65ED, selection    1 (pick no duplicates)
09D 00000000 SECT25 notype ()    External     | _XGSetSurfaceHeader@24
    tag index 0000009F size 00000041 lines 00003478 next function 00000000
09F 00000000 SECT25 notype       BeginFunction | .bf
    line# 0126 end 00000000
0A1 00000006 SECT25 notype       .bf or.ef    | .lf
0A2 00000041 SECT25 notype       EndFunction  | .ef
    line# 0136
0A4 00000000 SECT26 notype       Static       | .debug$S
    Section length   AE, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x25)
0A6 00000000 SECT27 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x25)
0A8 00000000 SECT28 notype       Static       | XGRPH
    Section length   2A, #relocs    1, #linenums    3, checksum 8BBDA31F, selection    1 (pick no duplicates)
0AA 00000000 SECT28 notype ()    External     | _XGSetTextureHeader@36
    tag index 000000AC size 0000002A lines 000035AC next function 00000000
0AC 00000000 SECT28 notype       BeginFunction | .bf
    line# 0144 end 00000000
0AE 00000003 SECT28 notype       .bf or.ef    | .lf
0AF 0000002A SECT28 notype       EndFunction  | .ef
    line# 0150
0B1 00000000 SECT29 notype       Static       | .debug$S
    Section length   E4, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x28)
0B3 00000000 SECT2A notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x28)
0B5 00000000 SECT2B notype       Static       | XGRPH
    Section length   2A, #relocs    1, #linenums    3, checksum ADDB8BDC, selection    1 (pick no duplicates)
0B7 00000000 SECT2B notype ()    External     | _XGSetCubeTextureHeader@32
    tag index 000000B9 size 0000002A lines 00003704 next function 00000000
0B9 00000000 SECT2B notype       BeginFunction | .bf
    line# 015d end 00000000
0BB 00000003 SECT2B notype       .bf or.ef    | .lf
0BC 0000002A SECT2B notype       EndFunction  | .ef
    line# 0169
0BE 00000000 SECT2C notype       Static       | .debug$S
    Section length   DE, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x2B)
0C0 00000000 SECT2D notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x2B)
0C2 00000000 SECT2E notype       Static       | XGRPH
    Section length   2B, #relocs    1, #linenums    3, checksum DD1BA69D, selection    1 (pick no duplicates)
0C4 00000000 SECT2E notype ()    External     | _XGSetVolumeTextureHeader@40
    tag index 000000C6 size 0000002B lines 00003857 next function 00000000
0C6 00000000 SECT2E notype       BeginFunction | .bf
    line# 0178 end 00000000
0C8 00000003 SECT2E notype       .bf or.ef    | .lf
0C9 0000002B SECT2E notype       EndFunction  | .ef
    line# 0184
0CB 00000000 SECT2F notype       Static       | .debug$S
    Section length  102, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x2E)
0CD 00000000 SECT30 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x2E)
0CF 00000000 SECT31 notype       Static       | XGRPH
    Section length   18, #relocs    0, #linenums    5, checksum 1D3012CF, selection    1 (pick no duplicates)
0D1 00000000 SECT31 notype ()    External     | _XGSetVertexBufferHeader@24
    tag index 000000D3 size 00000018 lines 000039B1 next function 00000000
0D3 00000000 SECT31 notype       BeginFunction | .bf
    line# 018f end 00000000
0D5 00000005 SECT31 notype       .bf or.ef    | .lf
0D6 00000018 SECT31 notype       EndFunction  | .ef
    line# 0193
0D8 00000000 SECT32 notype       Static       | .debug$S
    Section length   AE, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x31)
0DA 00000000 SECT33 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x31)
0DC 00000000 SECT34 notype       Static       | XGRPH
    Section length   18, #relocs    0, #linenums    5, checksum D19A1251, selection    1 (pick no duplicates)
0DE 00000000 SECT34 notype ()    External     | _XGSetIndexBufferHeader@24
    tag index 000000E0 size 00000018 lines 00003AC3 next function 00000000
0E0 00000000 SECT34 notype       BeginFunction | .bf
    line# 019e end 00000000
0E2 00000005 SECT34 notype       .bf or.ef    | .lf
0E3 00000018 SECT34 notype       EndFunction  | .ef
    line# 01a2
0E5 00000000 SECT35 notype       Static       | .debug$S
    Section length   B0, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x34)
0E7 00000000 SECT36 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x34)
0E9 00000000 SECT37 notype       Static       | XGRPH
    Section length   21, #relocs    0, #linenums    4, checksum F14463E0, selection    1 (pick no duplicates)
0EB 00000000 SECT37 notype ()    External     | _XGSetPaletteHeader@12
    tag index 000000ED size 00000021 lines 00003BE0 next function 00000000
0ED 00000000 SECT37 notype       BeginFunction | .bf
    line# 01aa end 00000000
0EF 00000004 SECT37 notype       .bf or.ef    | .lf
0F0 00000021 SECT37 notype       EndFunction  | .ef
    line# 01b1
0F2 00000000 SECT38 notype       Static       | .debug$S
    Section length   75, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x37)
0F4 00000000 SECT39 notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x37)
0F6 00000000 SECT3A notype       Static       | XGRPH
    Section length   2F, #relocs    0, #linenums    7, checksum  618C122, selection    1 (pick no duplicates)
0F8 00000000 SECT3A notype ()    External     | _XGSetPushBufferHeader@16
    tag index 000000FA size 0000002F lines 00003CCA next function 00000000
0FA 00000000 SECT3A notype       BeginFunction | .bf
    line# 01ba end 00000000
0FC 00000007 SECT3A notype       .bf or.ef    | .lf
0FD 0000002F SECT3A notype       EndFunction  | .ef
    line# 01c6
0FF 00000000 SECT3B notype       Static       | .debug$S
    Section length   97, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x3A)
101 00000000 SECT3C notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x3A)
103 00000000 SECT3D notype       Static       | XGRPH
    Section length   1F, #relocs    0, #linenums    5, checksum 1B5E7D11, selection    1 (pick no duplicates)
105 00000000 SECT3D notype ()    External     | _XGSetFixupHeader@12
    tag index 00000107 size 0000001F lines 00003DD8 next function 00000000
107 00000000 SECT3D notype       BeginFunction | .bf
    line# 01ce end 00000000
109 00000005 SECT3D notype       .bf or.ef    | .lf
10A 0000001F SECT3D notype       EndFunction  | .ef
    line# 01d3
10C 00000000 SECT3E notype       Static       | .debug$S
    Section length   71, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x3D)
10E 00000000 SECT3F notype       Static       | .debug$F
    Section length   10, #relocs    1, #linenums    0, checksum        0, selection    5 (pick associative Section 0x3D)
110 00000000 SECT40 notype       Static       | .debug$T
    Section length EFFC, #relocs    0, #linenums    0, checksum        0
112 00000000 SECT41 notype       Static       | .debug$S
    Section length   28, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x8)
114 00000000 SECT42 notype       Static       | .debug$S
    Section length   29, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x7)
116 00000000 SECT43 notype       Static       | .debug$S
    Section length   25, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x6)
118 00000000 SECT44 notype       Static       | .debug$S
    Section length   26, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x5)
11A 00000000 SECT45 notype       Static       | .debug$S
    Section length   27, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x4)
11C 00000000 SECT46 notype       Static       | .debug$S
    Section length   23, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x9)
11E 00000000 SECT47 notype       Static       | .debug$S
    Section length   29, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x3)

String Table Size = 0x345 bytes

Archive member name at 39EBE: /69             obj\i386\debug.obj
3CBBA79A time/date Mon Apr 15 21:24:58 2002
         uid
         gid
  100666 mode
   1115F size
correct header end

FILE HEADER VALUES
             14C machine (x86)
               F number of sections
        3CBBA798 time date stamp Mon Apr 15 21:24:56 2002
           10E05 file pointer to symbol table
              27 number of symbols
               0 size of optional header
               0 characteristics

SECTION HEADER #1
.drectve name
       0 physical address
       0 virtual address
      5E size of raw data
     26C file pointer to raw data (0000026C to 000002C9)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
  100A00 flags
         Info
         Remove
         1 byte align

RAW DATA #1
  00000000: 2F 6D 65 72 67 65 3A 58 47 52 50 48 5F 52 44 3D  /merge:XGRPH_RD=
  00000010: 58 47 52 50 48 20 2F 6D 65 72 67 65 3A 58 47 52  XGRPH /merge:XGR
  00000020: 50 48 5F 52 57 3D 58 47 52 50 48 20 2F 73 65 63  PH_RW=XGRPH /sec
  00000030: 74 69 6F 6E 3A 58 47 52 50 48 2C 45 52 57 20 2F  tion:XGRPH,ERW /
  00000040: 69 6E 63 6C 75 64 65 3A 5F 58 47 72 61 70 68 69  include:_XGraphi
  00000050: 63 73 42 75 69 6C 64 4E 75 6D 62 65 72 20        csBuildNumber 

   Linker Directives
   -----------------
   /merge:XGRPH_RD=XGRPH
   /merge:XGRPH_RW=XGRPH
   /section:XGRPH,ERW
   /include:_XGraphicsBuildNumber

SECTION HEADER #2
.debug$S name
       0 physical address
       0 virtual address
    19FD size of raw data
     2CA file pointer to raw data (000002CA to 00001CC6)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42100040 flags
         Initialized Data
         Discardable
         1 byte align
         Read Only

RAW DATA #2
  00000000: 02 00 00 00 51 00 09 00 00 00 00 00 4A 44 3A 5C  ....Q.......JD:\
  00000010: 78 62 6F 78 5C 70 72 69 76 61 74 65 5C 77 69 6E  xbox\private\win
  00000020: 64 6F 77 73 5C 64 69 72 65 63 74 78 5C 64 78 67  dows\directx\dxg
  00000030: 5C 78 67 72 61 70 68 69 63 73 5C 6D 69 73 63 5C  \xgraphics\misc\
  00000040: 78 62 6F 78 5C 6F 62 6A 5C 69 33 38 36 5C 64 65  xbox\obj\i386\de
  00000050: 62 75 67 2E 6F 62 6A 38 00 13 10 01 00 00 00 06  bug.obj8........
  00000060: 00 0D 00 00 00 26 24 0D 00 00 00 26 24 21 4D 69  .....&$....&$!Mi
  00000070: 63 72 6F 73 6F 66 74 20 28 52 29 20 4F 70 74 69  crosoft (R) Opti
  00000080: 6D 69 7A 69 6E 67 20 43 6F 6D 70 69 6C 65 72 00  mizing Compiler.
  00000090: 00 28 00 02 10 A1 14 00 00 A0 00 1F 50 53 5F 49  .(..........PS_I
  000000A0: 4E 50 55 54 4D 41 50 50 49 4E 47 5F 48 41 4C 46  NPUTMAPPING_HALF
  000000B0: 42 49 41 53 5F 4E 45 47 41 54 45 12 00 02 10 90  BIAS_NEGATE.....
  000000C0: 10 00 00 0A 00 09 44 33 44 54 53 5F 4D 41 58 1A  ......D3DTS_MAX.
  000000D0: 00 02 10 EE 14 00 00 F9 01 11 44 33 44 53 42 44  ..........D3DSBD
  000000E0: 5F 54 52 41 4E 53 46 4F 52 4D 53 19 00 02 10 B6  _TRANSFORMS.....
  000000F0: 10 00 00 52 00 10 44 33 44 52 53 5F 53 49 4D 50  ...R..D3DRS_SIMP
  00000100: 4C 45 5F 4D 41 58 1B 00 02 10 B6 10 00 00 75 00  LE_MAX........u.
  00000110: 12 44 33 44 52 53 5F 44 45 46 45 52 52 45 44 5F  .D3DRS_DEFERRED_
  00000120: 4D 41 58 1D 00 02 10 B6 10 00 00 75 00 14 44 33  MAX........u..D3
  00000130: 44 52 53 5F 50 53 54 45 58 54 55 52 45 4D 4F 44  DRS_PSTEXTUREMOD
  00000140: 45 53 1A 00 02 10 B6 10 00 00 76 00 11 44 33 44  ES........v..D3D
  00000150: 52 53 5F 56 45 52 54 45 58 42 4C 45 4E 44 17 00  RS_VERTEXBLEND..
  00000160: 02 10 B6 10 00 00 77 00 0E 44 33 44 52 53 5F 46  ......w..D3DRS_F
  00000170: 4F 47 43 4F 4C 4F 52 17 00 02 10 B6 10 00 00 78  OGCOLOR........x
  00000180: 00 0E 44 33 44 52 53 5F 46 49 4C 4C 4D 4F 44 45  ..D3DRS_FILLMODE
  00000190: 1B 00 02 10 B6 10 00 00 79 00 12 44 33 44 52 53  ........y..D3DRS
  000001A0: 5F 42 41 43 4B 46 49 4C 4C 4D 4F 44 45 1F 00 02  _BACKFILLMODE...
  000001B0: 10 B6 10 00 00 7A 00 16 44 33 44 52 53 5F 54 57  .....z..D3DRS_TW
  000001C0: 4F 53 49 44 45 44 4C 49 47 48 54 49 4E 47 1F 00  OSIDEDLIGHTING..
  000001D0: 02 10 B6 10 00 00 7B 00 16 44 33 44 52 53 5F 4E  ......{..D3DRS_N
  000001E0: 4F 52 4D 41 4C 49 5A 45 4E 4F 52 4D 41 4C 53 16  ORMALIZENORMALS.
  000001F0: 00 02 10 B6 10 00 00 7C 00 0D 44 33 44 52 53 5F  .......|..D3DRS_
  00000200: 5A 45 4E 41 42 4C 45 1C 00 02 10 B6 10 00 00 7D  ZENABLE........}
  00000210: 00 13 44 33 44 52 53 5F 53 54 45 4E 43 49 4C 45  ..D3DRS_STENCILE
  00000220: 4E 41 42 4C 45 1A 00 02 10 B6 10 00 00 7E 00 11  NABLE........~..
  00000230: 44 33 44 52 53 5F 53 54 45 4E 43 49 4C 46 41 49  D3DRS_STENCILFAI
  00000240: 4C 18 00 02 10 B6 10 00 00 7F 00 0F 44 33 44 52  L...........D3DR
  00000250: 53 5F 46 52 4F 4E 54 46 41 43 45 17 00 02 10 B6  S_FRONTFACE.....
  00000260: 10 00 00 80 00 0E 44 33 44 52 53 5F 43 55 4C 4C  ......D3DRS_CULL
  00000270: 4D 4F 44 45 1C 00 02 10 B6 10 00 00 81 00 13 44  MODE...........D
  00000280: 33 44 52 53 5F 54 45 58 54 55 52 45 46 41 43 54  3DRS_TEXTUREFACT
  00000290: 4F 52 14 00 02 10 B6 10 00 00 82 00 0B 44 33 44  OR...........D3D
  000002A0: 52 53 5F 5A 42 49 41 53 16 00 02 10 B6 10 00 00  RS_ZBIAS........
  000002B0: 83 00 0D 44 33 44 52 53 5F 4C 4F 47 49 43 4F 50  ...D3DRS_LOGICOP
  000002C0: 1C 00 02 10 B6 10 00 00 84 00 13 44 33 44 52 53  ...........D3DRS
  000002D0: 5F 45 44 47 45 41 4E 54 49 41 4C 49 41 53 23 00  _EDGEANTIALIAS#.
  000002E0: 02 10 B6 10 00 00 85 00 1A 44 33 44 52 53 5F 4D  .........D3DRS_M
  000002F0: 55 4C 54 49 53 41 4D 50 4C 45 41 4E 54 49 41 4C  ULTISAMPLEANTIAL
  00000300: 49 41 53 1E 00 02 10 B6 10 00 00 86 00 15 44 33  IAS...........D3
  00000310: 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 4D  DRS_MULTISAMPLEM
  00000320: 41 53 4B 1E 00 02 10 B6 10 00 00 87 00 15 44 33  ASK...........D3
  00000330: 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 4D  DRS_MULTISAMPLEM
  00000340: 4F 44 45 2A 00 02 10 B6 10 00 00 88 00 21 44 33  ODE*.........!D3
  00000350: 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 52  DRS_MULTISAMPLER
  00000360: 45 4E 44 45 52 54 41 52 47 45 54 4D 4F 44 45 19  ENDERTARGETMODE.
  00000370: 00 02 10 B6 10 00 00 89 00 10 44 33 44 52 53 5F  ..........D3DRS_
  00000380: 53 48 41 44 4F 57 46 55 4E 43 18 00 02 10 B6 10  SHADOWFUNC......
  00000390: 00 00 8A 00 0F 44 33 44 52 53 5F 4C 49 4E 45 57  .....D3DRS_LINEW
  000003A0: 49 44 54 48 1E 00 02 10 B6 10 00 00 8B 00 15 44  IDTH...........D
  000003B0: 33 44 52 53 5F 44 58 54 31 4E 4F 49 53 45 45 4E  3DRS_DXT1NOISEEN
  000003C0: 41 42 4C 45 18 00 02 10 B6 10 00 00 8C 00 0F 44  ABLE...........D
  000003D0: 33 44 52 53 5F 59 55 56 45 4E 41 42 4C 45 22 00  3DRS_YUVENABLE".
  000003E0: 02 10 B6 10 00 00 8D 00 19 44 33 44 52 53 5F 4F  .........D3DRS_O
  000003F0: 43 43 4C 55 53 49 4F 4E 43 55 4C 4C 45 4E 41 42  CCLUSIONCULLENAB
  00000400: 4C 45 20 00 02 10 B6 10 00 00 8E 00 17 44 33 44  LE ..........D3D
  00000410: 52 53 5F 53 54 45 4E 43 49 4C 43 55 4C 4C 45 4E  RS_STENCILCULLEN
  00000420: 41 42 4C 45 20 00 02 10 B6 10 00 00 8F 00 17 44  ABLE ..........D
  00000430: 33 44 52 53 5F 52 4F 50 5A 43 4D 50 41 4C 57 41  3DRS_ROPZCMPALWA
  00000440: 59 53 52 45 41 44 17 00 02 10 B6 10 00 00 90 00  YSREAD..........
  00000450: 0E 44 33 44 52 53 5F 52 4F 50 5A 52 45 41 44 24  .D3DRS_ROPZREAD$
  00000460: 00 02 10 B6 10 00 00 91 00 1B 44 33 44 52 53 5F  ..........D3DRS_
  00000470: 44 4F 4E 4F 54 43 55 4C 4C 55 4E 43 4F 4D 50 52  DONOTCULLUNCOMPR
  00000480: 45 53 53 45 44 12 00 02 10 B6 10 00 00 92 00 09  ESSED...........
  00000490: 44 33 44 52 53 5F 4D 41 58 2A 00 02 10 C9 10 00  D3DRS_MAX*......
  000004A0: 00 0C 00 21 44 33 44 54 53 53 5F 44 45 46 45 52  ...!D3DTSS_DEFER
  000004B0: 52 45 44 5F 54 45 58 54 55 52 45 5F 53 54 41 54  RED_TEXTURE_STAT
  000004C0: 45 5F 4D 41 58 17 00 02 10 C9 10 00 00 0C 00 0E  E_MAX...........
  000004D0: 44 33 44 54 53 53 5F 43 4F 4C 4F 52 4F 50 1C 00  D3DTSS_COLOROP..
  000004E0: 02 10 C9 10 00 00 16 00 13 44 33 44 54 53 53 5F  .........D3DTSS_
  000004F0: 44 45 46 45 52 52 45 44 5F 4D 41 58 1C 00 02 10  DEFERRED_MAX....
  00000500: C9 10 00 00 16 00 13 44 33 44 54 53 53 5F 42 55  .......D3DTSS_BU
  00000510: 4D 50 45 4E 56 4D 41 54 30 30 1E 00 02 10 C9 10  MPENVMAT00......
  00000520: 00 00 1B 00 15 44 33 44 54 53 53 5F 42 55 4D 50  .....D3DTSS_BUMP
  00000530: 45 4E 56 4C 4F 46 46 53 45 54 1D 00 02 10 C9 10  ENVLOFFSET......
  00000540: 00 00 1C 00 14 44 33 44 54 53 53 5F 54 45 58 43  .....D3DTSS_TEXC
  00000550: 4F 4F 52 44 49 4E 44 45 58 1B 00 02 10 C9 10 00  OORDINDEX.......
  00000560: 00 1D 00 12 44 33 44 54 53 53 5F 42 4F 52 44 45  ....D3DTSS_BORDE
  00000570: 52 43 4F 4C 4F 52 1D 00 02 10 C9 10 00 00 1E 00  RCOLOR..........
  00000580: 14 44 33 44 54 53 53 5F 43 4F 4C 4F 52 4B 45 59  .D3DTSS_COLORKEY
  00000590: 43 4F 4C 4F 52 13 00 02 10 C9 10 00 00 20 00 0A  COLOR........ ..
  000005A0: 44 33 44 54 53 53 5F 4D 41 58 1A 00 02 10 AF 14  D3DTSS_MAX......
  000005B0: 00 00 19 00 11 44 33 44 54 4F 50 5F 42 55 4D 50  .....D3DTOP_BUMP
  000005C0: 45 4E 56 4D 41 50 28 00 02 10 A1 14 00 00 20 00  ENVMAP(....... .
  000005D0: 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47  .PS_INPUTMAPPING
  000005E0: 5F 55 4E 53 49 47 4E 45 44 5F 49 4E 56 45 52 54  _UNSIGNED_INVERT
  000005F0: 26 00 02 10 A1 14 00 00 40 00 1D 50 53 5F 49 4E  &.......@..PS_IN
  00000600: 50 55 54 4D 41 50 50 49 4E 47 5F 45 58 50 41 4E  PUTMAPPING_EXPAN
  00000610: 44 5F 4E 4F 52 4D 41 4C 28 00 02 10 A1 14 00 00  D_NORMAL(.......
  00000620: 80 00 1F 50 53 5F 49 4E 50 55 54 4D 41 50 50 49  ...PS_INPUTMAPPI
  00000630: 4E 47 5F 48 41 4C 46 42 49 41 53 5F 4E 4F 52 4D  NG_HALFBIAS_NORM
  00000640: 41 4C 0C 00 03 10 22 00 00 00 05 55 4C 4F 4E 47  AL...."....ULONG
  00000650: 17 00 03 10 D3 13 00 00 10 44 53 45 46 46 45 43  .........DSEFFEC
  00000660: 54 49 4D 41 47 45 4C 4F 43 12 00 03 10 F3 14 00  TIMAGELOC.......
  00000670: 00 0B 50 53 5F 52 45 47 49 53 54 45 52 10 00 03  ..PS_REGISTER...
  00000680: 10 52 13 00 00 09 44 33 44 58 43 4F 4C 4F 52 0A  .R....D3DXCOLOR.
  00000690: 00 03 10 05 10 00 00 03 49 49 44 0F 00 03 10 13  ........IID.....
  000006A0: 00 00 00 08 4C 4F 4E 47 4C 4F 4E 47 10 00 03 10  ....LONGLONG....
  000006B0: 1B 10 00 00 09 44 33 44 46 4F 52 4D 41 54 12 00  .....D3DFORMAT..
  000006C0: 03 10 CB 12 00 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  000006D0: 52 33 10 00 03 10 29 12 00 00 09 44 33 44 4C 49  R3....)....D3DLI
  000006E0: 47 48 54 38 17 00 03 10 7E 12 00 00 10 5F 44 33  GHT8....~...._D3
  000006F0: 44 53 55 52 46 41 43 45 5F 44 45 53 43 1B 00 03  DSURFACE_DESC...
  00000700: 10 DE 14 00 00 14 44 33 44 56 45 52 54 45 58 53  ......D3DVERTEXS
  00000710: 48 41 44 45 52 49 4E 50 55 54 15 00 03 10 80 12  HADERINPUT......
  00000720: 00 00 0E 44 33 44 4C 4F 43 4B 45 44 5F 52 45 43  ...D3DLOCKED_REC
  00000730: 54 1F 00 03 10 F1 14 00 00 18 4C 50 46 4E 58 4D  T.........LPFNXM
  00000740: 45 44 49 41 4F 42 4A 45 43 54 43 41 4C 4C 42 41  EDIAOBJECTCALLBA
  00000750: 43 4B 15 00 03 10 2D 12 00 00 0E 44 33 44 42 61  CK....-....D3DBa
  00000760: 73 65 54 65 78 74 75 72 65 1A 00 03 10 F0 14 00  seTexture.......
  00000770: 00 13 4C 50 44 53 45 46 46 45 43 54 49 4D 41 47  ..LPDSEFFECTIMAG
  00000780: 45 44 45 53 43 0D 00 03 10 03 04 00 00 06 4C 50  EDESC.........LP
  00000790: 56 4F 49 44 1C 00 03 10 B0 11 00 00 15 44 33 44  VOID.........D3D
  000007A0: 50 52 45 53 45 4E 54 5F 50 41 52 41 4D 45 54 45  PRESENT_PARAMETE
  000007B0: 52 53 14 00 03 10 EF 14 00 00 0D 4C 50 43 44 53  RS.........LPCDS
  000007C0: 33 44 42 55 46 46 45 52 16 00 03 10 1F 10 00 00  3DBUFFER........
  000007D0: 0F 44 33 44 52 45 53 4F 55 52 43 45 54 59 50 45  .D3DRESOURCETYPE
  000007E0: 1F 00 03 10 EE 14 00 00 18 5F 44 33 44 53 54 41  ........._D3DSTA
  000007F0: 54 45 42 4C 4F 43 4B 44 49 52 54 59 49 4E 44 45  TEBLOCKDIRTYINDE
  00000800: 58 19 00 03 10 EC 14 00 00 12 5F 4D 41 58 5F 46  X........._MAX_F
  00000810: 56 46 5F 44 45 43 4C 5F 53 49 5A 45 20 00 03 10  VF_DECL_SIZE ...
  00000820: 31 12 00 00 19 5F 44 33 44 56 45 52 54 45 58 41  1...._D3DVERTEXA
  00000830: 54 54 52 49 42 55 54 45 46 4F 52 4D 41 54 10 00  TTRIBUTEFORMAT..
  00000840: 03 10 1F 12 00 00 09 44 33 44 4D 41 54 52 49 58  .......D3DMATRIX
  00000850: 19 00 03 10 22 00 00 00 12 44 33 44 42 41 43 4B  ...."....D3DBACK
  00000860: 42 55 46 46 45 52 5F 54 59 50 45 1B 00 03 10 13  BUFFER_TYPE.....
  00000870: 12 00 00 14 5F 44 33 44 43 4F 50 59 52 45 43 54  ...._D3DCOPYRECT
  00000880: 52 4F 50 53 54 41 54 45 0E 00 03 10 66 12 00 00  ROPSTATE....f...
  00000890: 07 44 33 44 54 49 4C 45 15 00 03 10 8F 12 00 00  .D3DTILE........
  000008A0: 0E 5F 44 33 44 4C 4F 43 4B 45 44 5F 42 4F 58 1A  ._D3DLOCKED_BOX.
  000008B0: 00 03 10 EA 14 00 00 13 4C 50 44 49 52 45 43 54  ........LPDIRECT
  000008C0: 53 4F 55 4E 44 53 54 52 45 41 4D 18 00 03 10 19  SOUNDSTREAM.....
  000008D0: 12 00 00 11 5F 44 33 44 43 4F 50 59 52 45 43 54  ...._D3DCOPYRECT
  000008E0: 53 54 41 54 45 1B 00 03 10 91 12 00 00 14 44 33  STATE.........D3
  000008F0: 44 56 45 52 54 45 58 42 55 46 46 45 52 5F 44 45  DVERTEXBUFFER_DE
  00000900: 53 43 12 00 03 10 AF 12 00 00 0B 44 33 44 58 56  SC.........D3DXV
  00000910: 45 43 54 4F 52 32 13 00 03 10 E9 14 00 00 0C 4C  ECTOR2.........L
  00000920: 50 43 44 53 4C 46 4F 44 45 53 43 10 00 03 10 23  PCDSLFODESC....#
  00000930: 00 00 00 09 55 4C 4F 4E 47 4C 4F 4E 47 16 00 03  ....ULONGLONG...
  00000940: 10 64 12 00 00 0F 44 33 44 53 54 52 45 41 4D 5F  .d....D3DSTREAM_
  00000950: 49 4E 50 55 54 15 00 03 10 07 12 00 00 0E 44 33  INPUT.........D3
  00000960: 44 49 6E 64 65 78 42 75 66 66 65 72 0F 00 03 10  DIndexBuffer....
  00000970: BF 13 00 00 08 49 55 6E 6B 6E 6F 77 6E 18 00 03  .....IUnknown...
  00000980: 10 BE 10 00 00 11 44 33 44 53 54 41 54 45 42 4C  ......D3DSTATEBL
  00000990: 4F 43 4B 54 59 50 45 19 00 03 10 AC 14 00 00 12  OCKTYPE.........
  000009A0: 44 53 49 33 44 4C 32 4F 42 53 54 52 55 43 54 49  DSI3DL2OBSTRUCTI
  000009B0: 4F 4E 14 00 03 10 34 14 00 00 0D 44 53 49 33 44  ON....4....DSI3D
  000009C0: 4C 32 42 55 46 46 45 52 18 00 03 10 3C 12 00 00  L2BUFFER....<...
  000009D0: 11 5F 44 33 44 54 52 49 50 41 54 43 48 5F 49 4E  ._D3DTRIPATCH_IN
  000009E0: 46 4F 16 00 03 10 DB 13 00 00 0F 5F 44 53 4F 55  FO........._DSOU
  000009F0: 54 50 55 54 4C 45 56 45 4C 53 10 00 03 10 8B 12  TPUTLEVELS......
  00000A00: 00 00 09 44 33 44 56 6F 6C 75 6D 65 1F 00 03 10  ...D3DVolume....
  00000A10: C9 10 00 00 18 44 33 44 54 45 58 54 55 52 45 53  .....D3DTEXTURES
  00000A20: 54 41 47 45 53 54 41 54 45 54 59 50 45 17 00 03  TAGESTATETYPE...
  00000A30: 10 B4 14 00 00 10 44 53 49 33 44 4C 32 4F 43 43  ......DSI3DL2OCC
  00000A40: 4C 55 53 49 4F 4E 0E 00 03 10 22 04 00 00 07 4C  LUSION...."....L
  00000A50: 50 44 57 4F 52 44 1C 00 03 10 E6 14 00 00 15 4C  PDWORD.........L
  00000A60: 50 43 44 53 4D 49 58 42 49 4E 56 4F 4C 55 4D 45  PCDSMIXBINVOLUME
  00000A70: 50 41 49 52 14 00 03 10 21 12 00 00 0D 5F 44 33  PAIR....!...._D3
  00000A80: 44 56 49 45 57 50 4F 52 54 38 20 00 03 10 C9 10  DVIEWPORT8 .....
  00000A90: 00 00 19 5F 44 33 44 54 45 58 54 55 52 45 53 54  ..._D3DTEXTUREST
  00000AA0: 41 47 45 53 54 41 54 45 54 59 50 45 15 00 03 10  AGESTATETYPE....
  00000AB0: 82 12 00 00 0E 44 33 44 56 4F 4C 55 4D 45 5F 44  .....D3DVOLUME_D
  00000AC0: 45 53 43 13 00 03 10 20 14 00 00 0C 57 41 56 45  ESC.... ....WAVE
  00000AD0: 46 4F 52 4D 41 54 45 58 1C 00 03 10 90 10 00 00  FORMATEX........
  00000AE0: 15 44 33 44 54 52 41 4E 53 46 4F 52 4D 53 54 41  .D3DTRANSFORMSTA
  00000AF0: 54 45 54 59 50 45 1A 00 03 10 E5 14 00 00 13 4C  TETYPE.........L
  00000B00: 50 44 49 52 45 43 54 53 4F 55 4E 44 42 55 46 46  PDIRECTSOUNDBUFF
  00000B10: 45 52 11 00 03 10 30 14 00 00 0A 44 53 33 44 42  ER....0....DS3DB
  00000B20: 55 46 46 45 52 17 00 03 10 EA 11 00 00 10 44 33  UFFER.........D3
  00000B30: 44 43 55 42 45 4D 41 50 5F 46 41 43 45 53 0B 00  DCUBEMAP_FACES..
  00000B40: 03 10 74 00 00 00 04 42 4F 4F 4C 15 00 03 10 3A  ..t....BOOL....:
  00000B50: 10 00 00 0E 44 33 44 44 49 53 50 4C 41 59 4D 4F  ....D3DDISPLAYMO
  00000B60: 44 45 15 00 03 10 34 14 00 00 0E 5F 44 53 49 33  DE....4...._DSI3
  00000B70: 44 4C 32 42 55 46 46 45 52 12 00 03 10 7C 12 00  DL2BUFFER....|..
  00000B80: 00 0B 44 33 44 52 65 73 6F 75 72 63 65 14 00 03  ..D3DResource...
  00000B90: 10 CB 13 00 00 0D 5F 44 53 53 54 52 45 41 4D 44  ......_DSSTREAMD
  00000BA0: 45 53 43 0F 00 03 10 3C 10 00 00 08 44 33 44 43  ESC....<....D3DC
  00000BB0: 41 50 53 38 15 00 03 10 1E 13 00 00 0E 44 33 44  APS8.........D3D
  00000BC0: 58 51 55 41 54 45 52 4E 49 4F 4E 0F 00 03 10 22  XQUATERNION...."
  00000BD0: 00 00 00 08 44 33 44 43 4F 4C 4F 52 19 00 03 10  ....D3DCOLOR....
  00000BE0: A5 14 00 00 12 44 53 4D 49 58 42 49 4E 56 4F 4C  .....DSMIXBINVOL
  00000BF0: 55 4D 45 50 41 49 52 10 00 03 10 54 13 00 00 09  UMEPAIR....T....
  00000C00: 44 33 44 56 45 43 54 4F 52 0E 00 03 10 22 00 00  D3DVECTOR...."..
  00000C10: 00 07 44 33 44 50 4F 4F 4C 11 00 03 10 C3 11 00  ..D3DPOOL.......
  00000C20: 00 0A 44 33 44 53 75 72 66 61 63 65 13 00 03 10  ..D3DSurface....
  00000C30: 3E 12 00 00 0C 44 33 44 46 49 45 4C 44 54 59 50  >....D3DFIELDTYP
  00000C40: 45 13 00 03 10 B1 14 00 00 0C 5F 44 33 44 53 57  E........._D3DSW
  00000C50: 41 50 44 41 54 41 10 00 03 10 E3 14 00 00 09 4C  APDATA.........L
  00000C60: 50 55 4E 4B 4E 4F 57 4E 19 00 03 10 E2 14 00 00  PUNKNOWN........
  00000C70: 12 4C 50 43 44 53 49 33 44 4C 32 4C 49 53 54 45  .LPCDSI3DL2LISTE
  00000C80: 4E 45 52 12 00 03 10 E1 14 00 00 0B 44 33 44 43  NER.........D3DC
  00000C90: 41 4C 4C 42 41 43 4B 0D 00 03 10 CD 13 00 00 06  ALLBACK.........
  00000CA0: 48 57 4E 44 5F 5F 24 00 03 10 B2 11 00 00 1D 44  HWND__$........D
  00000CB0: 33 44 44 45 56 49 43 45 5F 43 52 45 41 54 49 4F  3DDEVICE_CREATIO
  00000CC0: 4E 5F 50 41 52 41 4D 45 54 45 52 53 15 00 03 10  N_PARAMETERS....
  00000CD0: D4 14 00 00 0E 5F 4C 41 52 47 45 5F 49 4E 54 45  ....._LARGE_INTE
  00000CE0: 47 45 52 19 00 03 10 D1 13 00 00 12 5F 44 53 45  GER........._DSE
  00000CF0: 46 46 45 43 54 49 4D 41 47 45 44 45 53 43 1D 00  FFECTIMAGEDESC..
  00000D00: 03 10 90 10 00 00 16 5F 44 33 44 54 52 41 4E 53  ......._D3DTRANS
  00000D10: 46 4F 52 4D 53 54 41 54 45 54 59 50 45 1C 00 03  FORMSTATETYPE...
  00000D20: 10 DE 14 00 00 15 5F 44 33 44 56 45 52 54 45 58  ......_D3DVERTEX
  00000D30: 53 48 41 44 45 52 49 4E 50 55 54 15 00 03 10 DB  SHADERINPUT.....
  00000D40: 13 00 00 0E 44 53 4F 55 54 50 55 54 4C 45 56 45  ....DSOUTPUTLEVE
  00000D50: 4C 53 11 00 03 10 1F 12 00 00 0A 5F 44 33 44 4D  LS........._D3DM
  00000D60: 41 54 52 49 58 13 00 03 10 D8 14 00 00 0C 4C 50  ATRIX.........LP
  00000D70: 43 44 53 4D 49 58 42 49 4E 53 11 00 03 10 19 10  CDSMIXBINS......
  00000D80: 00 00 0A 44 33 44 44 45 56 54 59 50 45 0C 00 03  ...D3DDEVTYPE...
  00000D90: 10 11 12 00 00 05 50 4F 49 4E 54 15 00 03 10 56  ......POINT....V
  00000DA0: 13 00 00 0E 5F 44 33 44 43 4F 4C 4F 52 56 41 4C  ...._D3DCOLORVAL
  00000DB0: 55 45 17 00 03 10 D9 13 00 00 10 5F 44 53 49 33  UE........._DSI3
  00000DC0: 44 4C 32 4C 49 53 54 45 4E 45 52 11 00 03 10 0F  DL2LISTENER.....
  00000DD0: 12 00 00 0A 44 33 44 50 61 6C 65 74 74 65 16 00  ....D3DPalette..
  00000DE0: 03 10 24 14 00 00 0F 5F 44 53 45 4E 56 45 4C 4F  ..$...._DSENVELO
  00000DF0: 50 45 44 45 53 43 14 00 03 10 C8 11 00 00 0D 5F  PEDESC........._
  00000E00: 44 33 44 47 41 4D 4D 41 52 41 4D 50 19 00 03 10  D3DGAMMARAMP....
  00000E10: B6 10 00 00 12 44 33 44 52 45 4E 44 45 52 53 54  .....D3DRENDERST
  00000E20: 41 54 45 54 59 50 45 11 00 03 10 29 12 00 00 0A  ATETYPE....)....
  00000E30: 5F 44 33 44 4C 49 47 48 54 38 19 00 03 10 5F 14  _D3DLIGHT8...._.
  00000E40: 00 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 53  ...IDirectSoundS
  00000E50: 74 72 65 61 6D 1B 00 03 10 D6 14 00 00 14 4C 50  tream.........LP
  00000E60: 43 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F 54 49  CDSBPOSITIONNOTI
  00000E70: 46 59 0E 00 03 10 8D 12 00 00 07 5F 44 33 44 42  FY........._D3DB
  00000E80: 4F 58 16 00 03 10 D5 14 00 00 0F 4C 50 43 44 53  OX.........LPCDS
  00000E90: 53 54 52 45 41 4D 44 45 53 43 17 00 03 10 E6 11  STREAMDESC......
  00000EA0: 00 00 10 44 33 44 56 6F 6C 75 6D 65 54 65 78 74  ...D3DVolumeText
  00000EB0: 75 72 65 19 00 03 10 36 14 00 00 12 5F 44 53 42  ure....6...._DSB
  00000EC0: 50 4F 53 49 54 49 4F 4E 4E 4F 54 49 46 59 0F 00  POSITIONNOTIFY..
  00000ED0: 03 10 6C 14 00 00 08 53 77 69 7A 7A 6C 65 72 15  ..l....Swizzler.
  00000EE0: 00 03 10 13 00 00 00 0E 52 45 46 45 52 45 4E 43  ........REFERENC
  00000EF0: 45 5F 54 49 4D 45 14 00 03 10 BE 14 00 00 0D 44  E_TIME.........D
  00000F00: 33 44 56 42 4C 41 4E 4B 44 41 54 41 13 00 03 10  3DVBLANKDATA....
  00000F10: 9C 14 00 00 0C 5F 44 53 45 46 46 45 43 54 4D 41  ....._DSEFFECTMA
  00000F20: 50 14 00 03 10 D4 14 00 00 0D 4C 41 52 47 45 5F  P.........LARGE_
  00000F30: 49 4E 54 45 47 45 52 15 00 03 10 F2 11 00 00 0E  INTEGER.........
  00000F40: 44 33 44 43 75 62 65 54 65 78 74 75 72 65 13 00  D3DCubeTexture..
  00000F50: 03 10 D0 14 00 00 0C 58 4D 65 64 69 61 4F 62 6A  .......XMediaObj
  00000F60: 65 63 74 18 00 03 10 C5 11 00 00 11 5F 44 33 44  ect........._D3D
  00000F70: 52 41 53 54 45 52 5F 53 54 41 54 55 53 14 00 03  RASTER_STATUS...
  00000F80: 10 AB 11 00 00 0D 44 33 44 53 57 41 50 45 46 46  ......D3DSWAPEFF
  00000F90: 45 43 54 16 00 03 10 D9 13 00 00 0F 44 53 49 33  ECT.........DSI3
  00000FA0: 44 4C 32 4C 49 53 54 45 4E 45 52 0C 00 03 10 03  DL2LISTENER.....
  00000FB0: 04 00 00 05 50 56 4F 49 44 15 00 03 10 BE 14 00  ....PVOID.......
  00000FC0: 00 0E 5F 44 33 44 56 42 4C 41 4E 4B 44 41 54 41  .._D3DVBLANKDATA
  00000FD0: 15 00 03 10 23 11 00 00 0E 44 33 44 50 41 4C 45  ....#....D3DPALE
  00000FE0: 54 54 45 53 49 5A 45 14 00 03 10 24 12 00 00 0D  TTESIZE....$....
  00000FF0: 5F 44 33 44 4D 41 54 45 52 49 41 4C 38 15 00 03  _D3DMATERIAL8...
  00001000: 10 24 14 00 00 0E 44 53 45 4E 56 45 4C 4F 50 45  .$....DSENVELOPE
  00001010: 44 45 53 43 0E 00 03 10 22 00 00 00 07 53 57 49  DESC...."....SWI
  00001020: 5A 4E 55 4D 17 00 03 10 64 12 00 00 10 5F 44 33  ZNUM....d...._D3
  00001030: 44 53 54 52 45 41 4D 5F 49 4E 50 55 54 13 00 03  DSTREAM_INPUT...
  00001040: 10 36 12 00 00 0C 44 33 44 42 41 53 49 53 54 59  .6....D3DBASISTY
  00001050: 50 45 16 00 03 10 40 12 00 00 0F 44 33 44 46 49  PE....@....D3DFI
  00001060: 45 4C 44 5F 53 54 41 54 55 53 16 00 03 10 82 12  ELD_STATUS......
  00001070: 00 00 0F 5F 44 33 44 56 4F 4C 55 4D 45 5F 44 45  ..._D3DVOLUME_DE
  00001080: 53 43 1D 00 03 10 15 12 00 00 16 44 33 44 43 4F  SC.........D3DCO
  00001090: 50 59 52 45 43 54 43 4F 4C 4F 52 46 4F 52 4D 41  PYRECTCOLORFORMA
  000010A0: 54 17 00 03 10 19 12 00 00 10 44 33 44 43 4F 50  T.........D3DCOP
  000010B0: 59 52 45 43 54 53 54 41 54 45 16 00 03 10 BC 14  YRECTSTATE......
  000010C0: 00 00 0F 44 33 44 53 57 41 50 43 41 4C 4C 42 41  ...D3DSWAPCALLBA
  000010D0: 43 4B 1E 00 03 10 B0 11 00 00 17 5F 44 33 44 50  CK........._D3DP
  000010E0: 52 45 53 45 4E 54 5F 50 41 52 41 4D 45 54 45 52  RESENT_PARAMETER
  000010F0: 53 5F 19 00 03 10 3A 12 00 00 12 5F 44 33 44 52  S_....:...._D3DR
  00001100: 45 43 54 50 41 54 43 48 5F 49 4E 46 4F 0C 00 03  ECTPATCH_INFO...
  00001110: 10 22 00 00 00 05 44 57 4F 52 44 13 00 03 10 38  ."....DWORD....8
  00001120: 12 00 00 0C 44 33 44 4F 52 44 45 52 54 59 50 45  ....D3DORDERTYPE
  00001130: 18 00 03 10 3A 12 00 00 11 44 33 44 52 45 43 54  ....:....D3DRECT
  00001140: 50 41 54 43 48 5F 49 4E 46 4F 0D 00 03 10 03 04  PATCH_INFO......
  00001150: 00 00 06 48 41 4E 44 4C 45 12 00 03 10 E3 12 00  ...HANDLE.......
  00001160: 00 0B 44 33 44 58 56 45 43 54 4F 52 34 17 00 03  ..D3DXVECTOR4...
  00001170: 10 40 12 00 00 10 5F 44 33 44 46 49 45 4C 44 5F  .@...._D3DFIELD_
  00001180: 53 54 41 54 55 53 0B 00 03 10 21 00 00 00 04 57  STATUS....!....W
  00001190: 4F 52 44 13 00 03 10 21 12 00 00 0C 44 33 44 56  ORD....!....D3DV
  000011A0: 49 45 57 50 4F 52 54 38 0B 00 03 10 20 00 00 00  IEWPORT8.... ...
  000011B0: 04 42 59 54 45 12 00 03 10 30 14 00 00 0B 5F 44  .BYTE....0...._D
  000011C0: 53 33 44 42 55 46 46 45 52 16 00 03 10 8E 11 00  S3DBUFFER.......
  000011D0: 00 0F 44 33 44 43 41 4C 4C 42 41 43 4B 54 59 50  ..D3DCALLBACKTYP
  000011E0: 45 0E 00 03 10 D5 10 00 00 07 4C 50 43 56 4F 49  E.........LPCVOI
  000011F0: 44 0E 00 03 10 1B 12 00 00 07 44 33 44 52 45 43  D.........D3DREC
  00001200: 54 0F 00 03 10 BA 14 00 00 08 4C 50 44 53 43 41  T.........LPDSCA
  00001210: 50 53 12 00 03 10 B7 14 00 00 0B 5F 58 4D 45 44  PS........._XMED
  00001220: 49 41 49 4E 46 4F 17 00 03 10 C5 11 00 00 10 44  IAINFO.........D
  00001230: 33 44 52 41 53 54 45 52 5F 53 54 41 54 55 53 14  3DRASTER_STATUS.
  00001240: 00 03 10 20 14 00 00 0D 74 57 41 56 45 46 4F 52  ... ....tWAVEFOR
  00001250: 4D 41 54 45 58 0B 00 03 10 B9 14 00 00 04 48 57  MATEX.........HW
  00001260: 4E 44 18 00 03 10 36 14 00 00 11 44 53 42 50 4F  ND....6....DSBPO
  00001270: 53 49 54 49 4F 4E 4E 4F 54 49 46 59 10 00 03 10  SITIONNOTIFY....
  00001280: A9 11 00 00 09 44 33 44 44 65 76 69 63 65 16 00  .....D3DDevice..
  00001290: 03 10 B8 14 00 00 0F 4C 50 43 44 53 46 49 4C 54  .......LPCDSFILT
  000012A0: 45 52 44 45 53 43 13 00 03 10 B5 14 00 00 0C 4C  ERDESC.........L
  000012B0: 50 58 4D 45 44 49 41 49 4E 46 4F 1E 00 03 10 38  PXMEDIAINFO....8
  000012C0: 10 00 00 17 5F 44 33 44 41 44 41 50 54 45 52 5F  ...._D3DADAPTER_
  000012D0: 49 44 45 4E 54 49 46 49 45 52 38 0C 00 03 10 11  IDENTIFIER8.....
  000012E0: 00 00 00 05 53 48 4F 52 54 0B 00 03 10 12 00 00  ....SHORT.......
  000012F0: 00 04 4C 4F 4E 47 13 00 03 10 24 12 00 00 0C 44  ..LONG....$....D
  00001300: 33 44 4D 41 54 45 52 49 41 4C 38 10 00 03 10 22  3DMATERIAL8...."
  00001310: 14 00 00 09 44 53 4C 46 4F 44 45 53 43 0C 00 03  ....DSLFODESC...
  00001320: 10 40 00 00 00 05 46 4C 4F 41 54 1B 00 03 10 93  .@....FLOAT.....
  00001330: 12 00 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46  ...._D3DINDEXBUF
  00001340: 46 45 52 5F 44 45 53 43 18 00 03 10 B4 14 00 00  FER_DESC........
  00001350: 11 5F 44 53 49 33 44 4C 32 4F 43 43 4C 55 53 49  ._DSI3DL2OCCLUSI
  00001360: 4F 4E 1B 00 03 10 17 12 00 00 14 44 33 44 43 4F  ON.........D3DCO
  00001370: 50 59 52 45 43 54 4F 50 45 52 41 54 49 4F 4E 11  PYRECTOPERATION.
  00001380: 00 03 10 05 13 00 00 0A 44 33 44 58 4D 41 54 52  ........D3DXMATR
  00001390: 49 58 14 00 03 10 8F 12 00 00 0D 44 33 44 4C 4F  IX.........D3DLO
  000013A0: 43 4B 45 44 5F 42 4F 58 0F 00 03 10 1B 12 00 00  CKED_BOX........
  000013B0: 08 5F 44 33 44 52 45 43 54 18 00 03 10 B2 14 00  ._D3DRECT.......
  000013C0: 00 11 44 33 44 56 42 4C 41 4E 4B 43 41 4C 4C 42  ..D3DVBLANKCALLB
  000013D0: 41 43 4B 13 00 03 10 D7 13 00 00 0C 44 53 33 44  ACK.........DS3D
  000013E0: 4C 49 53 54 45 4E 45 52 1C 00 03 10 22 00 00 00  LISTENER...."...
  000013F0: 15 44 33 44 53 48 41 44 45 52 43 4F 4E 53 54 41  .D3DSHADERCONSTA
  00001400: 4E 54 4D 4F 44 45 16 00 03 10 13 04 00 00 0F 50  NTMODE.........P
  00001410: 52 45 46 45 52 45 4E 43 45 5F 54 49 4D 45 12 00  REFERENCE_TIME..
  00001420: 03 10 B1 14 00 00 0B 44 33 44 53 57 41 50 44 41  .......D3DSWAPDA
  00001430: 54 41 0D 00 03 10 8D 12 00 00 06 44 33 44 42 4F  TA.........D3DBO
  00001440: 58 14 00 03 10 AF 14 00 00 0D 5F 44 33 44 54 45  X........._D3DTE
  00001450: 58 54 55 52 45 4F 50 0B 00 03 10 B4 11 00 00 04  XTUREOP.........
  00001460: 52 45 43 54 18 00 03 10 34 12 00 00 11 44 33 44  RECT....4....D3D
  00001470: 50 49 58 45 4C 53 48 41 44 45 52 44 45 46 13 00  PIXELSHADERDEF..
  00001480: 03 10 CB 13 00 00 0C 44 53 53 54 52 45 41 4D 44  .......DSSTREAMD
  00001490: 45 53 43 17 00 03 10 AD 14 00 00 10 4C 50 43 44  ESC.........LPCD
  000014A0: 53 49 33 44 4C 32 42 55 46 46 45 52 16 00 03 10  SI3DL2BUFFER....
  000014B0: 80 12 00 00 0F 5F 44 33 44 4C 4F 43 4B 45 44 5F  ....._D3DLOCKED_
  000014C0: 52 45 43 54 19 00 03 10 34 12 00 00 12 5F 44 33  RECT....4...._D3
  000014D0: 44 50 69 78 65 6C 53 68 61 64 65 72 44 65 66 1A  DPixelShaderDef.
  000014E0: 00 03 10 AC 14 00 00 13 5F 44 53 49 33 44 4C 32  ........_DSI3DL2
  000014F0: 4F 42 53 54 52 55 43 54 49 4F 4E 0E 00 03 10 AF  OBSTRUCTION.....
  00001500: 13 00 00 07 5F 44 53 43 41 50 53 16 00 03 10 AA  ...._DSCAPS.....
  00001510: 14 00 00 0F 4C 50 43 58 4D 45 44 49 41 50 41 43  ....LPCXMEDIAPAC
  00001520: 4B 45 54 13 00 03 10 AD 13 00 00 0C 49 44 69 72  KET.........IDir
  00001530: 65 63 74 53 6F 75 6E 64 0C 00 03 10 05 10 00 00  ectSound........
  00001540: 05 5F 47 55 49 44 0F 00 03 10 66 12 00 00 08 5F  ._GUID....f...._
  00001550: 44 33 44 54 49 4C 45 0E 00 03 10 B4 11 00 00 07  D3DTILE.........
  00001560: 74 61 67 52 45 43 54 17 00 03 10 3C 12 00 00 10  tagRECT....<....
  00001570: 44 33 44 54 52 49 50 41 54 43 48 5F 49 4E 46 4F  D3DTRIPATCH_INFO
  00001580: 10 00 03 10 68 12 00 00 09 44 33 44 4D 45 4D 4F  ....h....D3DMEMO
  00001590: 52 59 11 00 03 10 54 13 00 00 0A 5F 44 33 44 56  RY....T...._D3DV
  000015A0: 45 43 54 4F 52 18 00 03 10 D3 13 00 00 11 5F 44  ECTOR........._D
  000015B0: 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43 13  SEFFECTIMAGELOC.
  000015C0: 00 03 10 C6 13 00 00 0C 44 53 42 55 46 46 45 52  ........DSBUFFER
  000015D0: 44 45 53 43 14 00 03 10 27 14 00 00 0D 5F 44 53  DESC....'...._DS
  000015E0: 46 49 4C 54 45 52 44 45 53 43 16 00 03 10 7E 12  FILTERDESC....~.
  000015F0: 00 00 0F 44 33 44 53 55 52 46 41 43 45 5F 44 45  ...D3DSURFACE_DE
  00001600: 53 43 16 00 03 10 A7 14 00 00 0F 4C 50 43 44 53  SC.........LPCDS
  00001610: 33 44 4C 49 53 54 45 4E 45 52 13 00 03 10 27 14  3DLISTENER....'.
  00001620: 00 00 0C 44 53 46 49 4C 54 45 52 44 45 53 43 13  ...DSFILTERDESC.
  00001630: 00 03 10 94 14 00 00 0C 58 4D 45 44 49 41 50 41  ........XMEDIAPA
  00001640: 43 4B 45 54 19 00 03 10 1E 14 00 00 12 49 44 69  CKET.........IDi
  00001650: 72 65 63 74 53 6F 75 6E 64 42 75 66 66 65 72 11  rectSoundBuffer.
  00001660: 00 03 10 2C 14 00 00 0A 5F 44 53 4D 49 58 42 49  ...,...._DSMIXBI
  00001670: 4E 53 10 00 03 10 3C 10 00 00 09 5F 44 33 44 43  NS....<...._D3DC
  00001680: 41 50 53 38 13 00 03 10 26 12 00 00 0C 44 33 44  APS8....&....D3D
  00001690: 4C 49 47 48 54 54 59 50 45 16 00 03 10 FE 11 00  LIGHTTYPE.......
  000016A0: 00 0F 44 33 44 56 65 72 74 65 78 42 75 66 66 65  ..D3DVertexBuffe
  000016B0: 72 1C 00 03 10 91 12 00 00 15 5F 44 33 44 56 45  r........._D3DVE
  000016C0: 52 54 45 58 42 55 46 46 45 52 5F 44 45 53 43 1A  RTEXBUFFER_DESC.
  000016D0: 00 03 10 93 12 00 00 13 44 33 44 49 4E 44 45 58  ........D3DINDEX
  000016E0: 42 55 46 46 45 52 5F 44 45 53 43 1A 00 03 10 22  BUFFER_DESC...."
  000016F0: 00 00 00 13 44 33 44 4D 55 4C 54 49 53 41 4D 50  ....D3DMULTISAMP
  00001700: 4C 45 5F 54 59 50 45 10 00 03 10 2E 13 00 00 09  LE_TYPE.........
  00001710: 44 33 44 58 50 4C 41 4E 45 0A 00 03 10 74 00 00  D3DXPLANE....t..
  00001720: 00 03 49 4E 54 16 00 03 10 3A 10 00 00 0F 5F 44  ..INT....:...._D
  00001730: 33 44 44 49 53 50 4C 41 59 4D 4F 44 45 0F 00 03  3DDISPLAYMODE...
  00001740: 10 34 10 00 00 08 44 69 72 65 63 74 33 44 16 00  .4....Direct3D..
  00001750: 03 10 A6 14 00 00 0F 4C 50 43 44 53 42 55 46 46  .......LPCDSBUFF
  00001760: 45 52 44 45 53 43 1F 00 03 10 31 12 00 00 18 44  ERDESC....1....D
  00001770: 33 44 56 45 52 54 45 58 41 54 54 52 49 42 55 54  3DVERTEXATTRIBUT
  00001780: 45 46 4F 52 4D 41 54 1A 00 03 10 A5 14 00 00 13  EFORMAT.........
  00001790: 5F 44 53 4D 49 58 42 49 4E 56 4F 4C 55 4D 45 50  _DSMIXBINVOLUMEP
  000017A0: 41 49 52 0B 00 03 10 05 10 00 00 04 47 55 49 44  AIR.........GUID
  000017B0: 14 00 03 10 62 12 00 00 0D 44 33 44 50 75 73 68  ....b....D3DPush
  000017C0: 42 75 66 66 65 72 1A 00 03 10 13 12 00 00 13 44  Buffer.........D
  000017D0: 33 44 43 4F 50 59 52 45 43 54 52 4F 50 53 54 41  3DCOPYRECTROPSTA
  000017E0: 54 45 10 00 03 10 2C 14 00 00 09 44 53 4D 49 58  TE....,....DSMIX
  000017F0: 42 49 4E 53 0F 00 03 10 73 14 00 00 08 58 47 42  BINS....s....XGB
  00001800: 75 66 66 65 72 18 00 03 10 A3 14 00 00 11 44 33  uffer.........D3
  00001810: 44 50 69 78 65 6C 43 6F 6E 74 61 69 6E 65 72 14  DPixelContainer.
  00001820: 00 03 10 D7 13 00 00 0D 5F 44 53 33 44 4C 49 53  ........_DS3DLIS
  00001830: 54 45 4E 45 52 13 00 03 10 C8 11 00 00 0C 44 33  TENER.........D3
  00001840: 44 47 41 4D 4D 41 52 41 4D 50 25 00 03 10 B2 11  DGAMMARAMP%.....
  00001850: 00 00 1E 5F 44 33 44 44 45 56 49 43 45 5F 43 52  ..._D3DDEVICE_CR
  00001860: 45 41 54 49 4F 4E 5F 50 41 52 41 4D 45 54 45 52  EATION_PARAMETER
  00001870: 53 16 00 03 10 A1 14 00 00 0F 50 53 5F 49 4E 50  S.........PS_INP
  00001880: 55 54 4D 41 50 50 49 4E 47 15 00 03 10 9F 14 00  UTMAPPING.......
  00001890: 00 0E 4C 50 57 41 56 45 46 4F 52 4D 41 54 45 58  ..LPWAVEFORMATEX
  000018A0: 1D 00 03 10 38 10 00 00 16 44 33 44 41 44 41 50  ....8....D3DADAP
  000018B0: 54 45 52 5F 49 44 45 4E 54 49 46 49 45 52 38 1A  TER_IDENTIFIER8.
  000018C0: 00 03 10 B6 10 00 00 13 5F 44 33 44 52 45 4E 44  ........_D3DREND
  000018D0: 45 52 53 54 41 54 45 54 59 50 45 11 00 03 10 22  ERSTATETYPE...."
  000018E0: 14 00 00 0A 5F 44 53 4C 46 4F 44 45 53 43 16 00  ...._DSLFODESC..
  000018F0: 03 10 9E 14 00 00 0F 4C 50 43 57 41 56 45 46 4F  .......LPCWAVEFO
  00001900: 52 4D 41 54 45 58 14 00 03 10 56 13 00 00 0D 44  RMATEX....V....D
  00001910: 33 44 43 4F 4C 4F 52 56 41 4C 55 45 0F 00 03 10  3DCOLORVALUE....
  00001920: 11 12 00 00 08 74 61 67 50 4F 49 4E 54 1A 00 03  .....tagPOINT...
  00001930: 10 9D 14 00 00 13 4C 50 43 44 53 45 46 46 45 43  ......LPCDSEFFEC
  00001940: 54 49 4D 41 47 45 4C 4F 43 0E 00 03 10 12 00 00  TIMAGELOC.......
  00001950: 00 07 48 52 45 53 55 4C 54 12 00 03 10 9C 14 00  ..HRESULT.......
  00001960: 00 0B 44 53 45 46 46 45 43 54 4D 41 50 0B 00 03  ..DSEFFECTMAP...
  00001970: 10 75 00 00 00 04 55 49 4E 54 14 00 03 10 C6 13  .u....UINT......
  00001980: 00 00 0D 5F 44 53 42 55 46 46 45 52 44 45 53 43  ..._DSBUFFERDESC
  00001990: 18 00 03 10 9A 14 00 00 11 4C 50 43 44 53 45 4E  .........LPCDSEN
  000019A0: 56 45 4C 4F 50 45 44 45 53 43 11 00 03 10 D2 11  VELOPEDESC......
  000019B0: 00 00 0A 44 33 44 54 65 78 74 75 72 65 0F 00 03  ...D3DTexture...
  000019C0: 10 45 12 00 00 08 44 33 44 46 69 78 75 70 14 00  .E....D3DFixup..
  000019D0: 03 10 94 14 00 00 0D 5F 58 4D 45 44 49 41 50 41  ......._XMEDIAPA
  000019E0: 43 4B 45 54 17 00 03 10 CF 10 00 00 10 44 33 44  CKET.........D3D
  000019F0: 50 52 49 4D 49 54 49 56 45 54 59 50 45           PRIMITIVETYPE

SECTION HEADER #3
XGRPH_RD name
       0 physical address
       0 virtual address
      58 size of raw data
    1CC7 file pointer to raw data (00001CC7 to 00001D1E)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DDIRTYFROMTEXTURESTATE
         8 byte align
         Read Only

RAW DATA #3
  00000000: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000010: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000020: 0F 00 00 00 0F 00 00 00 0F 00 00 00 0F 00 00 00  ................
  00000030: 0F 48 00 00 00 08 00 00 00 08 00 00 00 08 00 00  .H..............
  00000040: 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00  ................
  00000050: 00 08 00 00 00 04 00 00                          ........

SECTION HEADER #4
XGRPH_RD name
       0 physical address
       0 virtual address
      8C size of raw data
    1D1F file pointer to raw data (00001D1F to 00001DAA)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DDIRTYFROMRENDERSTATE
         8 byte align
         Read Only

RAW DATA #4
  00000000: 00 20 00 00 00 20 00 00 00 20 00 00 00 20 00 00  . ... ... ... ..
  00000010: 00 20 00 00 00 20 00 00 0F 00 00 00 0F 00 00 00  . ... ..........
  00000020: 0F 00 00 00 0F 00 00 00 00 12 00 00 00 30 00 00  .............0..
  00000030: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000040: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000050: 00 10 00 00 00 10 00 00 00 10 00 00 00 10 00 00  ................
  00000060: 00 01 00 00 00 01 00 00 00 09 00 00 00 01 00 00  ................
  00000070: 00 01 00 00 00 01 00 00 00 01 00 00 00 01 00 00  ................
  00000080: 00 00 00 00 00 00 00 00 00 00 00 00              ............

SECTION HEADER #5
XGRPH_RD name
       0 physical address
       0 virtual address
      10 size of raw data
    1DAB file pointer to raw data (00001DAB to 00001DBA)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40301040 flags
         Initialized Data
         COMDAT; sym= _D3DTEXTUREDIRECTENCODE
         4 byte align
         Read Only

RAW DATA #5
  00000000: 00 1B 08 00 40 1B 08 00 80 1B 08 00 C0 1B 08 00  ....@...........

SECTION HEADER #6
XGRPH_RD name
       0 physical address
       0 virtual address
     148 size of raw data
    1DBB file pointer to raw data (00001DBB to 00001F02)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DSIMPLERENDERSTATEENCODE
         8 byte align
         Read Only

RAW DATA #6
  00000000: 60 02 04 00 64 02 04 00 68 02 04 00 6C 02 04 00  `...d...h...l...
  00000010: 70 02 04 00 74 02 04 00 78 02 04 00 7C 02 04 00  p...t...x...|...
  00000020: 88 02 04 00 8C 02 04 00 60 0A 04 00 64 0A 04 00  ........`...d...
  00000030: 68 0A 04 00 6C 0A 04 00 70 0A 04 00 74 0A 04 00  h...l...p...t...
  00000040: 78 0A 04 00 7C 0A 04 00 80 0A 04 00 84 0A 04 00  x...|...........
  00000050: 88 0A 04 00 8C 0A 04 00 90 0A 04 00 94 0A 04 00  ................
  00000060: 98 0A 04 00 9C 0A 04 00 A0 0A 04 00 A4 0A 04 00  ................
  00000070: A8 0A 04 00 AC 0A 04 00 B0 0A 04 00 B4 0A 04 00  ................
  00000080: B8 0A 04 00 BC 0A 04 00 C0 0A 04 00 C4 0A 04 00  ................
  00000090: C8 0A 04 00 CC 0A 04 00 D0 0A 04 00 D4 0A 04 00  ................
  000000A0: D8 0A 04 00 DC 0A 04 00 F8 17 04 00 20 1E 04 00  ............ ...
  000000B0: 24 1E 04 00 40 1E 04 00 44 1E 04 00 48 1E 04 00  $...@...D...H...
  000000C0: 4C 1E 04 00 50 1E 04 00 54 1E 04 00 58 1E 04 00  L...P...T...X...
  000000D0: 5C 1E 04 00 60 1E 04 00 90 1D 04 00 74 1E 04 00  \...`.......t...
  000000E0: 78 1E 04 00 54 03 04 00 3C 03 04 00 04 03 04 00  x...T...<.......
  000000F0: 00 03 04 00 40 03 04 00 44 03 04 00 48 03 04 00  ....@...D...H...
  00000100: 5C 03 04 00 10 03 04 00 7C 03 04 00 58 03 04 00  \.......|...X...
  00000110: 74 03 04 00 78 03 04 00 64 03 04 00 68 03 04 00  t...x...d...h...
  00000120: 6C 03 04 00 60 03 04 00 50 03 04 00 4C 03 04 00  l...`...P...L...
  00000130: F8 09 04 00 84 03 04 00 88 03 04 00 30 03 04 00  ............0...
  00000140: 34 03 04 00 38 03 04 00                          4...8...

SECTION HEADER #7
XGRPH_RD name
       0 physical address
       0 virtual address
      58 size of raw data
    1F03 file pointer to raw data (00001F03 to 00001F5A)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
40401040 flags
         Initialized Data
         COMDAT; sym= _D3DPRIMITIVETOVERTEXCOUNT
         8 byte align
         Read Only

RAW DATA #7
  00000000: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
  00000010: 02 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00  ................
  00000020: 01 00 00 00 01 00 00 00 03 00 00 00 00 00 00 00  ................
  00000030: 01 00 00 00 02 00 00 00 01 00 00 00 02 00 00 00  ................
  00000040: 04 00 00 00 00 00 00 00 02 00 00 00 02 00 00 00  ................
  00000050: 00 00 00 00 00 00 00 00                          ........

SECTION HEADER #8
 .XBLD$V name
       0 physical address
       0 virtual address
      10 size of raw data
    1F5B file pointer to raw data (00001F5B to 00001F6A)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
C0301040 flags
         Initialized Data
         COMDAT; sym= _XGraphicsBuildNumber
         4 byte align
         Read Write

RAW DATA #8
  00000000: 58 47 52 41 50 48 43 00 01 00 00 00 30 11 01 40  XGRAPHC.....0..@

SECTION HEADER #9
.debug$T name
       0 physical address
       0 virtual address
    ED3C size of raw data
    1F6B file pointer to raw data (00001F6B to 00010CA6)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42100040 flags
         Initialized Data
         Discardable
         1 byte align
         Read Only

RAW DATA #9
  00000000: 02 00 00 00 1A 00 05 10 00 00 80 00 00 00 00 00  ................
  00000010: 00 00 00 00 00 00 00 00 00 00 05 5F 47 55 49 44  ..........._GUID
  00000020: 0A 00 01 10 00 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00000030: 01 10 00 00 2A 00 00 00 0E 00 03 10 20 00 00 00  ....*....... ...
  00000040: 11 00 00 00 08 00 00 F1 42 00 03 12 05 14 03 00  ........B.......
  00000050: 22 00 00 00 00 00 05 44 61 74 61 31 05 14 03 00  "......Data1....
  00000060: 21 00 00 00 04 00 05 44 61 74 61 32 05 14 03 00  !......Data2....
  00000070: 21 00 00 00 06 00 05 44 61 74 61 33 05 14 03 00  !......Data3....
  00000080: 03 10 00 00 08 00 05 44 61 74 61 34 1A 00 05 10  .......Data4....
  00000090: 04 00 00 00 04 10 00 00 00 00 00 00 00 00 00 00  ................
  000000A0: 10 00 05 5F 47 55 49 44 0A 00 02 10 03 04 00 00  ..._GUID........
  000000B0: 0A 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  000000C0: 00 00 00 00 00 00 00 00 00 00 08 44 69 72 65 63  ...........Direc
  000000D0: 74 33 44 F1 0A 00 02 10 07 10 00 00 0A 00 00 00  t3D.............
  000000E0: 06 00 01 12 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  000000F0: 07 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ................
  00000100: 00 00 00 00 1A 00 09 10 75 00 00 00 07 10 00 00  ........u.......
  00000110: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00000120: 2E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00000130: 00 00 00 00 00 00 17 5F 44 33 44 41 44 41 50 54  ......._D3DADAPT
  00000140: 45 52 5F 49 44 45 4E 54 49 46 49 45 52 38 F2 F1  ER_IDENTIFIER8..
  00000150: 0A 00 02 10 0C 10 00 00 0A 00 00 00 12 00 01 12  ................
  00000160: 03 00 00 00 75 00 00 00 22 00 00 00 0D 10 00 00  ....u...".......
  00000170: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000180: 07 00 03 00 0E 10 00 00 00 00 00 00 0A 00 01 12  ................
  00000190: 01 00 00 00 75 00 00 00 1A 00 09 10 75 00 00 00  ....u.......u...
  000001A0: 07 10 00 00 00 00 00 00 07 00 01 00 10 10 00 00  ................
  000001B0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000001C0: 00 00 00 00 00 00 00 00 00 00 0F 5F 44 33 44 44  ..........._D3DD
  000001D0: 49 53 50 4C 41 59 4D 4F 44 45 F2 F1 0A 00 02 10  ISPLAYMODE......
  000001E0: 12 10 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  000001F0: 75 00 00 00 75 00 00 00 13 10 00 00 1A 00 09 10  u...u...........
  00000200: 12 00 00 00 07 10 00 00 00 00 00 00 07 00 03 00  ................
  00000210: 14 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00000220: 75 00 00 00 13 10 00 00 1A 00 09 10 12 00 00 00  u...............
  00000230: 07 10 00 00 00 00 00 00 07 00 02 00 16 10 00 00  ................
  00000240: 00 00 00 00 6A 00 03 12 03 04 03 00 01 00 0E 44  ....j..........D
  00000250: 33 44 44 45 56 54 59 50 45 5F 48 41 4C F3 F2 F1  3DDEVTYPE_HAL...
  00000260: 03 04 03 00 02 00 0E 44 33 44 44 45 56 54 59 50  .......D3DDEVTYP
  00000270: 45 5F 52 45 46 F3 F2 F1 03 04 03 00 03 00 0D 44  E_REF..........D
  00000280: 33 44 44 45 56 54 59 50 45 5F 53 57 03 04 03 00  3DDEVTYPE_SW....
  00000290: 04 80 FF FF FF 7F 16 44 33 44 44 45 56 54 59 50  .......D3DDEVTYP
  000002A0: 45 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  E_FORCE_DWORD...
  000002B0: 1A 00 07 10 04 00 00 00 74 00 00 00 18 10 00 00  ........t.......
  000002C0: 0B 5F 44 33 44 44 45 56 54 59 50 45 42 06 03 12  ._D3DDEVTYPEB...
  000002D0: 03 04 03 00 00 80 FF 0E 44 33 44 46 4D 54 5F 55  ........D3DFMT_U
  000002E0: 4E 4B 4E 4F 57 4E F2 F1 03 04 03 00 06 00 0F 44  NKNOWN.........D
  000002F0: 33 44 46 4D 54 5F 41 38 52 38 47 38 42 38 F2 F1  3DFMT_A8R8G8B8..
  00000300: 03 04 03 00 07 00 0F 44 33 44 46 4D 54 5F 58 38  .......D3DFMT_X8
  00000310: 52 38 47 38 42 38 F2 F1 03 04 03 00 05 00 0D 44  R8G8B8.........D
  00000320: 33 44 46 4D 54 5F 52 35 47 36 42 35 03 04 03 00  3DFMT_R5G6B5....
  00000330: 27 00 0D 44 33 44 46 4D 54 5F 52 36 47 35 42 35  '..D3DFMT_R6G5B5
  00000340: 03 04 03 00 03 00 0F 44 33 44 46 4D 54 5F 58 31  .......D3DFMT_X1
  00000350: 52 35 47 35 42 35 F2 F1 03 04 03 00 02 00 0F 44  R5G5B5.........D
  00000360: 33 44 46 4D 54 5F 41 31 52 35 47 35 42 35 F2 F1  3DFMT_A1R5G5B5..
  00000370: 03 04 03 00 04 00 0F 44 33 44 46 4D 54 5F 41 34  .......D3DFMT_A4
  00000380: 52 34 47 34 42 34 F2 F1 03 04 03 00 19 00 09 44  R4G4B4.........D
  00000390: 33 44 46 4D 54 5F 41 38 03 04 03 00 3A 00 0F 44  3DFMT_A8....:..D
  000003A0: 33 44 46 4D 54 5F 41 38 42 38 47 38 52 38 F2 F1  3DFMT_A8B8G8R8..
  000003B0: 03 04 03 00 3B 00 0F 44 33 44 46 4D 54 5F 42 38  ....;..D3DFMT_B8
  000003C0: 47 38 52 38 41 38 F2 F1 03 04 03 00 39 00 0F 44  G8R8A8......9..D
  000003D0: 33 44 46 4D 54 5F 52 34 47 34 42 34 41 34 F2 F1  3DFMT_R4G4B4A4..
  000003E0: 03 04 03 00 38 00 0F 44 33 44 46 4D 54 5F 52 35  ....8..D3DFMT_R5
  000003F0: 47 35 42 35 41 31 F2 F1 03 04 03 00 3C 00 0F 44  G5B5A1......<..D
  00000400: 33 44 46 4D 54 5F 52 38 47 38 42 38 41 38 F2 F1  3DFMT_R8G8B8A8..
  00000410: 03 04 03 00 29 00 0B 44 33 44 46 4D 54 5F 52 38  ....)..D3DFMT_R8
  00000420: 42 38 F2 F1 03 04 03 00 28 00 0B 44 33 44 46 4D  B8......(..D3DFM
  00000430: 54 5F 47 38 42 38 F2 F1 03 04 03 00 0B 00 09 44  T_G8B8.........D
  00000440: 33 44 46 4D 54 5F 50 38 03 04 03 00 00 00 09 44  3DFMT_P8.......D
  00000450: 33 44 46 4D 54 5F 4C 38 03 04 03 00 1A 00 0B 44  3DFMT_L8.......D
  00000460: 33 44 46 4D 54 5F 41 38 4C 38 F2 F1 03 04 03 00  3DFMT_A8L8......
  00000470: 01 00 0A 44 33 44 46 4D 54 5F 41 4C 38 F3 F2 F1  ...D3DFMT_AL8...
  00000480: 03 04 03 00 32 00 0A 44 33 44 46 4D 54 5F 4C 31  ....2..D3DFMT_L1
  00000490: 36 F3 F2 F1 03 04 03 00 28 00 0B 44 33 44 46 4D  6.......(..D3DFM
  000004A0: 54 5F 56 38 55 38 F2 F1 03 04 03 00 27 00 0D 44  T_V8U8......'..D
  000004B0: 33 44 46 4D 54 5F 4C 36 56 35 55 35 03 04 03 00  3DFMT_L6V5U5....
  000004C0: 07 00 0F 44 33 44 46 4D 54 5F 58 38 4C 38 56 38  ...D3DFMT_X8L8V8
  000004D0: 55 38 F2 F1 03 04 03 00 3A 00 0F 44 33 44 46 4D  U8......:..D3DFM
  000004E0: 54 5F 51 38 57 38 56 38 55 38 F2 F1 03 04 03 00  T_Q8W8V8U8......
  000004F0: 33 00 0D 44 33 44 46 4D 54 5F 56 31 36 55 31 36  3..D3DFMT_V16U16
  00000500: 03 04 03 00 2C 00 13 44 33 44 46 4D 54 5F 44 31  ....,..D3DFMT_D1
  00000510: 36 5F 4C 4F 43 4B 41 42 4C 45 F2 F1 03 04 03 00  6_LOCKABLE......
  00000520: 2C 00 0A 44 33 44 46 4D 54 5F 44 31 36 F3 F2 F1  ,..D3DFMT_D16...
  00000530: 03 04 03 00 2A 00 0C 44 33 44 46 4D 54 5F 44 32  ....*..D3DFMT_D2
  00000540: 34 53 38 F1 03 04 03 00 2D 00 0A 44 33 44 46 4D  4S8.....-..D3DFM
  00000550: 54 5F 46 31 36 F3 F2 F1 03 04 03 00 2B 00 0C 44  T_F16.......+..D
  00000560: 33 44 46 4D 54 5F 46 32 34 53 38 F1 03 04 03 00  3DFMT_F24S8.....
  00000570: 24 00 0B 44 33 44 46 4D 54 5F 59 55 59 32 F2 F1  $..D3DFMT_YUY2..
  00000580: 03 04 03 00 25 00 0B 44 33 44 46 4D 54 5F 55 59  ....%..D3DFMT_UY
  00000590: 56 59 F2 F1 03 04 03 00 0C 00 0B 44 33 44 46 4D  VY.........D3DFM
  000005A0: 54 5F 44 58 54 31 F2 F1 03 04 03 00 0E 00 0B 44  T_DXT1.........D
  000005B0: 33 44 46 4D 54 5F 44 58 54 32 F2 F1 03 04 03 00  3DFMT_DXT2......
  000005C0: 0E 00 0B 44 33 44 46 4D 54 5F 44 58 54 33 F2 F1  ...D3DFMT_DXT3..
  000005D0: 03 04 03 00 0F 00 0B 44 33 44 46 4D 54 5F 44 58  .......D3DFMT_DX
  000005E0: 54 34 F2 F1 03 04 03 00 0F 00 0B 44 33 44 46 4D  T4.........D3DFM
  000005F0: 54 5F 44 58 54 35 F2 F1 03 04 03 00 10 00 13 44  T_DXT5.........D
  00000600: 33 44 46 4D 54 5F 4C 49 4E 5F 41 31 52 35 47 35  3DFMT_LIN_A1R5G5
  00000610: 42 35 F2 F1 03 04 03 00 1D 00 13 44 33 44 46 4D  B5.........D3DFM
  00000620: 54 5F 4C 49 4E 5F 41 34 52 34 47 34 42 34 F2 F1  T_LIN_A4R4G4B4..
  00000630: 03 04 03 00 1F 00 0D 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000640: 4E 5F 41 38 03 04 03 00 3F 00 13 44 33 44 46 4D  N_A8....?..D3DFM
  00000650: 54 5F 4C 49 4E 5F 41 38 42 38 47 38 52 38 F2 F1  T_LIN_A8B8G8R8..
  00000660: 03 04 03 00 12 00 13 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000670: 4E 5F 41 38 52 38 47 38 42 38 F2 F1 03 04 03 00  N_A8R8G8B8......
  00000680: 40 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 42 38  @..D3DFMT_LIN_B8
  00000690: 47 38 52 38 41 38 F2 F1 03 04 03 00 17 00 0F 44  G8R8A8.........D
  000006A0: 33 44 46 4D 54 5F 4C 49 4E 5F 47 38 42 38 F2 F1  3DFMT_LIN_G8B8..
  000006B0: 03 04 03 00 3E 00 13 44 33 44 46 4D 54 5F 4C 49  ....>..D3DFMT_LI
  000006C0: 4E 5F 52 34 47 34 42 34 41 34 F2 F1 03 04 03 00  N_R4G4B4A4......
  000006D0: 3D 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 52 35  =..D3DFMT_LIN_R5
  000006E0: 47 35 42 35 41 31 F2 F1 03 04 03 00 11 00 11 44  G5B5A1.........D
  000006F0: 33 44 46 4D 54 5F 4C 49 4E 5F 52 35 47 36 42 35  3DFMT_LIN_R5G6B5
  00000700: 03 04 03 00 37 00 11 44 33 44 46 4D 54 5F 4C 49  ....7..D3DFMT_LI
  00000710: 4E 5F 52 36 47 35 42 35 03 04 03 00 16 00 0F 44  N_R6G5B5.......D
  00000720: 33 44 46 4D 54 5F 4C 49 4E 5F 52 38 42 38 F2 F1  3DFMT_LIN_R8B8..
  00000730: 03 04 03 00 41 00 13 44 33 44 46 4D 54 5F 4C 49  ....A..D3DFMT_LI
  00000740: 4E 5F 52 38 47 38 42 38 41 38 F2 F1 03 04 03 00  N_R8G8B8A8......
  00000750: 1C 00 13 44 33 44 46 4D 54 5F 4C 49 4E 5F 58 31  ...D3DFMT_LIN_X1
  00000760: 52 35 47 35 42 35 F2 F1 03 04 03 00 1E 00 13 44  R5G5B5.........D
  00000770: 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 52 38 47 38  3DFMT_LIN_X8R8G8
  00000780: 42 38 F2 F1 03 04 03 00 20 00 0F 44 33 44 46 4D  B8...... ..D3DFM
  00000790: 54 5F 4C 49 4E 5F 41 38 4C 38 F2 F1 03 04 03 00  T_LIN_A8L8......
  000007A0: 1B 00 0E 44 33 44 46 4D 54 5F 4C 49 4E 5F 41 4C  ...D3DFMT_LIN_AL
  000007B0: 38 F3 F2 F1 03 04 03 00 35 00 0E 44 33 44 46 4D  8.......5..D3DFM
  000007C0: 54 5F 4C 49 4E 5F 4C 31 36 F3 F2 F1 03 04 03 00  T_LIN_L16.......
  000007D0: 13 00 0D 44 33 44 46 4D 54 5F 4C 49 4E 5F 4C 38  ...D3DFMT_LIN_L8
  000007E0: 03 04 03 00 36 00 11 44 33 44 46 4D 54 5F 4C 49  ....6..D3DFMT_LI
  000007F0: 4E 5F 56 31 36 55 31 36 03 04 03 00 17 00 0F 44  N_V16U16.......D
  00000800: 33 44 46 4D 54 5F 4C 49 4E 5F 56 38 55 38 F2 F1  3DFMT_LIN_V8U8..
  00000810: 03 04 03 00 37 00 11 44 33 44 46 4D 54 5F 4C 49  ....7..D3DFMT_LI
  00000820: 4E 5F 4C 36 56 35 55 35 03 04 03 00 1E 00 13 44  N_L6V5U5.......D
  00000830: 33 44 46 4D 54 5F 4C 49 4E 5F 58 38 4C 38 56 38  3DFMT_LIN_X8L8V8
  00000840: 55 38 F2 F1 03 04 03 00 12 00 13 44 33 44 46 4D  U8.........D3DFM
  00000850: 54 5F 4C 49 4E 5F 51 38 57 38 56 38 55 38 F2 F1  T_LIN_Q8W8V8U8..
  00000860: 03 04 03 00 2E 00 10 44 33 44 46 4D 54 5F 4C 49  .......D3DFMT_LI
  00000870: 4E 5F 44 32 34 53 38 F1 03 04 03 00 2F 00 10 44  N_D24S8...../..D
  00000880: 33 44 46 4D 54 5F 4C 49 4E 5F 46 32 34 53 38 F1  3DFMT_LIN_F24S8.
  00000890: 03 04 03 00 30 00 0E 44 33 44 46 4D 54 5F 4C 49  ....0..D3DFMT_LI
  000008A0: 4E 5F 44 31 36 F3 F2 F1 03 04 03 00 31 00 0E 44  N_D16.......1..D
  000008B0: 33 44 46 4D 54 5F 4C 49 4E 5F 46 31 36 F3 F2 F1  3DFMT_LIN_F16...
  000008C0: 03 04 03 00 64 00 11 44 33 44 46 4D 54 5F 56 45  ....d..D3DFMT_VE
  000008D0: 52 54 45 58 44 41 54 41 03 04 03 00 65 00 0E 44  RTEXDATA....e..D
  000008E0: 33 44 46 4D 54 5F 49 4E 44 45 58 31 36 F3 F2 F1  3DFMT_INDEX16...
  000008F0: 03 04 03 00 04 80 FF FF FF 7F 12 44 33 44 46 4D  ...........D3DFM
  00000900: 54 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  T_FORCE_DWORD...
  00000910: 1A 00 07 10 45 00 00 00 74 00 00 00 1A 10 00 00  ....E...t.......
  00000920: 0A 5F 44 33 44 46 4F 52 4D 41 54 F1 1A 00 01 12  ._D3DFORMAT.....
  00000930: 05 00 00 00 75 00 00 00 19 10 00 00 1B 10 00 00  ....u...........
  00000940: 1B 10 00 00 74 00 00 00 1A 00 09 10 12 00 00 00  ....t...........
  00000950: 07 10 00 00 00 00 00 00 07 00 05 00 1C 10 00 00  ................
  00000960: 00 00 00 00 3E 01 03 12 03 04 03 00 00 00 0D 44  ....>..........D
  00000970: 33 44 52 54 59 50 45 5F 4E 4F 4E 45 03 04 03 00  3DRTYPE_NONE....
  00000980: 01 00 10 44 33 44 52 54 59 50 45 5F 53 55 52 46  ...D3DRTYPE_SURF
  00000990: 41 43 45 F1 03 04 03 00 02 00 0F 44 33 44 52 54  ACE........D3DRT
  000009A0: 59 50 45 5F 56 4F 4C 55 4D 45 F2 F1 03 04 03 00  YPE_VOLUME......
  000009B0: 03 00 10 44 33 44 52 54 59 50 45 5F 54 45 58 54  ...D3DRTYPE_TEXT
  000009C0: 55 52 45 F1 03 04 03 00 04 00 16 44 33 44 52 54  URE........D3DRT
  000009D0: 59 50 45 5F 56 4F 4C 55 4D 45 54 45 58 54 55 52  YPE_VOLUMETEXTUR
  000009E0: 45 F3 F2 F1 03 04 03 00 05 00 14 44 33 44 52 54  E..........D3DRT
  000009F0: 59 50 45 5F 43 55 42 45 54 45 58 54 55 52 45 F1  YPE_CUBETEXTURE.
  00000A00: 03 04 03 00 06 00 15 44 33 44 52 54 59 50 45 5F  .......D3DRTYPE_
  00000A10: 56 45 52 54 45 58 42 55 46 46 45 52 03 04 03 00  VERTEXBUFFER....
  00000A20: 07 00 14 44 33 44 52 54 59 50 45 5F 49 4E 44 45  ...D3DRTYPE_INDE
  00000A30: 58 42 55 46 46 45 52 F1 03 04 03 00 08 00 13 44  XBUFFER........D
  00000A40: 33 44 52 54 59 50 45 5F 50 55 53 48 42 55 46 46  3DRTYPE_PUSHBUFF
  00000A50: 45 52 F2 F1 03 04 03 00 09 00 10 44 33 44 52 54  ER.........D3DRT
  00000A60: 59 50 45 5F 50 41 4C 45 54 54 45 F1 03 04 03 00  YPE_PALETTE.....
  00000A70: 0A 00 0E 44 33 44 52 54 59 50 45 5F 46 49 58 55  ...D3DRTYPE_FIXU
  00000A80: 50 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 14 44  P..............D
  00000A90: 33 44 52 54 59 50 45 5F 46 4F 52 43 45 5F 44 57  3DRTYPE_FORCE_DW
  00000AA0: 4F 52 44 F1 22 00 07 10 0C 00 00 00 74 00 00 00  ORD.".......t...
  00000AB0: 1E 10 00 00 10 5F 44 33 44 52 45 53 4F 55 52 43  ....._D3DRESOURC
  00000AC0: 45 54 59 50 45 F3 F2 F1 1E 00 01 12 06 00 00 00  ETYPE...........
  00000AD0: 75 00 00 00 19 10 00 00 1B 10 00 00 22 00 00 00  u..........."...
  00000AE0: 1F 10 00 00 1B 10 00 00 1A 00 09 10 12 00 00 00  ................
  00000AF0: 07 10 00 00 00 00 00 00 07 00 06 00 20 10 00 00  ............ ...
  00000B00: 00 00 00 00 1A 00 01 12 05 00 00 00 75 00 00 00  ............u...
  00000B10: 19 10 00 00 1B 10 00 00 74 00 00 00 22 00 00 00  ........t..."...
  00000B20: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000B30: 07 00 05 00 22 10 00 00 00 00 00 00 1A 00 01 12  ...."...........
  00000B40: 05 00 00 00 75 00 00 00 19 10 00 00 1B 10 00 00  ....u...........
  00000B50: 1B 10 00 00 1B 10 00 00 1A 00 09 10 12 00 00 00  ................
  00000B60: 07 10 00 00 00 00 00 00 07 00 05 00 24 10 00 00  ............$...
  00000B70: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00000B80: 00 00 00 00 00 00 00 00 00 00 09 5F 44 33 44 43  ..........._D3DC
  00000B90: 41 50 53 38 0A 00 02 10 26 10 00 00 0A 00 00 00  APS8....&.......
  00000BA0: 12 00 01 12 03 00 00 00 75 00 00 00 19 10 00 00  ........u.......
  00000BB0: 27 10 00 00 1A 00 09 10 12 00 00 00 07 10 00 00  '...............
  00000BC0: 00 00 00 00 07 00 03 00 28 10 00 00 00 00 00 00  ........(.......
  00000BD0: 2E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00000BE0: 00 00 00 00 00 00 17 5F 44 33 44 50 52 45 53 45  ......._D3DPRESE
  00000BF0: 4E 54 5F 50 41 52 41 4D 45 54 45 52 53 5F F2 F1  NT_PARAMETERS_..
  00000C00: 0A 00 02 10 2A 10 00 00 0A 00 00 00 1E 00 05 10  ....*...........
  00000C10: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00000C20: 00 00 09 44 33 44 44 65 76 69 63 65 0A 00 02 10  ...D3DDevice....
  00000C30: 2C 10 00 00 0A 00 00 00 0A 00 02 10 2D 10 00 00  ,...........-...
  00000C40: 0A 00 00 00 1E 00 01 12 06 00 00 00 75 00 00 00  ............u...
  00000C50: 19 10 00 00 03 04 00 00 22 00 00 00 2B 10 00 00  ........"...+...
  00000C60: 2E 10 00 00 1A 00 09 10 12 00 00 00 07 10 00 00  ................
  00000C70: 00 00 00 00 07 00 06 00 2F 10 00 00 00 00 00 00  ......../.......
  00000C80: 0E 00 01 12 02 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00000C90: 1A 00 09 10 12 00 00 00 07 10 00 00 00 00 00 00  ................
  00000CA0: 07 00 02 00 31 10 00 00 00 00 00 00 76 01 03 12  ....1.......v...
  00000CB0: 0B 14 0B 00 0A 10 00 00 06 41 64 64 52 65 66 F1  .........AddRef.
  00000CC0: 0B 14 0B 00 0A 10 00 00 07 52 65 6C 65 61 73 65  .........Release
  00000CD0: 0B 14 0B 00 0B 10 00 00 0F 47 65 74 41 64 61 70  .........GetAdap
  00000CE0: 74 65 72 43 6F 75 6E 74 0B 14 0B 00 0F 10 00 00  terCount........
  00000CF0: 14 47 65 74 41 64 61 70 74 65 72 49 64 65 6E 74  .GetAdapterIdent
  00000D00: 69 66 69 65 72 F3 F2 F1 0B 14 0B 00 11 10 00 00  ifier...........
  00000D10: 13 47 65 74 41 64 61 70 74 65 72 4D 6F 64 65 43  .GetAdapterModeC
  00000D20: 6F 75 6E 74 0B 14 0B 00 15 10 00 00 10 45 6E 75  ount.........Enu
  00000D30: 6D 41 64 61 70 74 65 72 4D 6F 64 65 73 F3 F2 F1  mAdapterModes...
  00000D40: 0B 14 0B 00 17 10 00 00 15 47 65 74 41 64 61 70  .........GetAdap
  00000D50: 74 65 72 44 69 73 70 6C 61 79 4D 6F 64 65 F2 F1  terDisplayMode..
  00000D60: 0B 14 0B 00 1D 10 00 00 0F 43 68 65 63 6B 44 65  .........CheckDe
  00000D70: 76 69 63 65 54 79 70 65 0B 14 0B 00 21 10 00 00  viceType....!...
  00000D80: 11 43 68 65 63 6B 44 65 76 69 63 65 46 6F 72 6D  .CheckDeviceForm
  00000D90: 61 74 F2 F1 0B 14 0B 00 23 10 00 00 1A 43 68 65  at......#....Che
  00000DA0: 63 6B 44 65 76 69 63 65 4D 75 6C 74 69 53 61 6D  ckDeviceMultiSam
  00000DB0: 70 6C 65 54 79 70 65 F1 0B 14 0B 00 25 10 00 00  pleType.....%...
  00000DC0: 16 43 68 65 63 6B 44 65 70 74 68 53 74 65 6E 63  .CheckDepthStenc
  00000DD0: 69 6C 4D 61 74 63 68 F1 0B 14 0B 00 29 10 00 00  ilMatch.....)...
  00000DE0: 0D 47 65 74 44 65 76 69 63 65 43 61 70 73 F2 F1  .GetDeviceCaps..
  00000DF0: 0B 14 0B 00 30 10 00 00 0C 43 72 65 61 74 65 44  ....0....CreateD
  00000E00: 65 76 69 63 65 F3 F2 F1 0B 14 0B 00 32 10 00 00  evice.......2...
  00000E10: 11 53 65 74 50 75 73 68 42 75 66 66 65 72 53 69  .SetPushBufferSi
  00000E20: 7A 65 F2 F1 1E 00 05 10 0E 00 00 00 33 10 00 00  ze..........3...
  00000E30: 00 00 00 00 00 00 00 00 01 00 08 44 69 72 65 63  ...........Direc
  00000E40: 74 33 44 F1 0E 00 03 10 70 00 00 00 11 00 00 00  t3D.....p.......
  00000E50: 00 02 00 F1 1E 00 06 10 00 00 80 00 00 00 00 00  ................
  00000E60: 00 00 0E 5F 4C 41 52 47 45 5F 49 4E 54 45 47 45  ..._LARGE_INTEGE
  00000E70: 52 F3 F2 F1 C6 00 03 12 05 14 03 00 35 10 00 00  R...........5...
  00000E80: 00 00 06 44 72 69 76 65 72 F3 F2 F1 05 14 03 00  ...Driver.......
  00000E90: 35 10 00 00 00 02 0B 44 65 73 63 72 69 70 74 69  5......Descripti
  00000EA0: 6F 6E F2 F1 05 14 03 00 36 10 00 00 00 04 0D 44  on......6......D
  00000EB0: 72 69 76 65 72 56 65 72 73 69 6F 6E 05 14 03 00  riverVersion....
  00000EC0: 22 00 00 00 08 04 08 56 65 6E 64 6F 72 49 64 F1  "......VendorId.
  00000ED0: 05 14 03 00 22 00 00 00 0C 04 08 44 65 76 69 63  ...."......Devic
  00000EE0: 65 49 64 F1 05 14 03 00 22 00 00 00 10 04 08 53  eId....."......S
  00000EF0: 75 62 53 79 73 49 64 F1 05 14 03 00 22 00 00 00  ubSysId....."...
  00000F00: 14 04 08 52 65 76 69 73 69 6F 6E F1 05 14 03 00  ...Revision.....
  00000F10: 00 10 00 00 18 04 10 44 65 76 69 63 65 49 64 65  .......DeviceIde
  00000F20: 6E 74 69 66 69 65 72 F1 05 14 03 00 22 00 00 00  ntifier....."...
  00000F30: 28 04 09 57 48 51 4C 4C 65 76 65 6C 2E 00 05 10  (..WHQLLevel....
  00000F40: 09 00 00 00 37 10 00 00 00 00 00 00 00 00 00 00  ....7...........
  00000F50: 2C 04 17 5F 44 33 44 41 44 41 50 54 45 52 5F 49  ,.._D3DADAPTER_I
  00000F60: 44 45 4E 54 49 46 49 45 52 38 F2 F1 62 00 03 12  DENTIFIER8..b...
  00000F70: 05 14 03 00 75 00 00 00 00 00 05 57 69 64 74 68  ....u......Width
  00000F80: 05 14 03 00 75 00 00 00 04 00 06 48 65 69 67 68  ....u......Heigh
  00000F90: 74 F3 F2 F1 05 14 03 00 75 00 00 00 08 00 0B 52  t.......u......R
  00000FA0: 65 66 72 65 73 68 52 61 74 65 F2 F1 05 14 03 00  efreshRate......
  00000FB0: 22 00 00 00 0C 00 05 46 6C 61 67 73 05 14 03 00  "......Flags....
  00000FC0: 1B 10 00 00 10 00 06 46 6F 72 6D 61 74 F3 F2 F1  .......Format...
  00000FD0: 26 00 05 10 05 00 00 00 39 10 00 00 00 00 00 00  &.......9.......
  00000FE0: 00 00 00 00 14 00 0F 5F 44 33 44 44 49 53 50 4C  ......._D3DDISPL
  00000FF0: 41 59 4D 4F 44 45 F2 F1 92 05 03 12 05 14 03 00  AYMODE..........
  00001000: 19 10 00 00 00 00 0A 44 65 76 69 63 65 54 79 70  .......DeviceTyp
  00001010: 65 F3 F2 F1 05 14 03 00 75 00 00 00 04 00 0E 41  e.......u......A
  00001020: 64 61 70 74 65 72 4F 72 64 69 6E 61 6C F3 F2 F1  dapterOrdinal...
  00001030: 05 14 03 00 22 00 00 00 08 00 04 43 61 70 73 F1  ...."......Caps.
  00001040: 05 14 03 00 22 00 00 00 0C 00 05 43 61 70 73 32  ...."......Caps2
  00001050: 05 14 03 00 22 00 00 00 10 00 05 43 61 70 73 33  ...."......Caps3
  00001060: 05 14 03 00 22 00 00 00 14 00 15 50 72 65 73 65  ...."......Prese
  00001070: 6E 74 61 74 69 6F 6E 49 6E 74 65 72 76 61 6C 73  ntationIntervals
  00001080: 05 14 03 00 22 00 00 00 18 00 0A 43 75 72 73 6F  ...."......Curso
  00001090: 72 43 61 70 73 F3 F2 F1 05 14 03 00 22 00 00 00  rCaps......."...
  000010A0: 1C 00 07 44 65 76 43 61 70 73 F2 F1 05 14 03 00  ...DevCaps......
  000010B0: 22 00 00 00 20 00 11 50 72 69 6D 69 74 69 76 65  "... ..Primitive
  000010C0: 4D 69 73 63 43 61 70 73 05 14 03 00 22 00 00 00  MiscCaps...."...
  000010D0: 24 00 0A 52 61 73 74 65 72 43 61 70 73 F3 F2 F1  $..RasterCaps...
  000010E0: 05 14 03 00 22 00 00 00 28 00 08 5A 43 6D 70 43  ...."...(..ZCmpC
  000010F0: 61 70 73 F1 05 14 03 00 22 00 00 00 2C 00 0C 53  aps....."...,..S
  00001100: 72 63 42 6C 65 6E 64 43 61 70 73 F1 05 14 03 00  rcBlendCaps.....
  00001110: 22 00 00 00 30 00 0D 44 65 73 74 42 6C 65 6E 64  "...0..DestBlend
  00001120: 43 61 70 73 05 14 03 00 22 00 00 00 34 00 0C 41  Caps...."...4..A
  00001130: 6C 70 68 61 43 6D 70 43 61 70 73 F1 05 14 03 00  lphaCmpCaps.....
  00001140: 22 00 00 00 38 00 09 53 68 61 64 65 43 61 70 73  "...8..ShadeCaps
  00001150: 05 14 03 00 22 00 00 00 3C 00 0B 54 65 78 74 75  ...."...<..Textu
  00001160: 72 65 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  reCaps......"...
  00001170: 40 00 11 54 65 78 74 75 72 65 46 69 6C 74 65 72  @..TextureFilter
  00001180: 43 61 70 73 05 14 03 00 22 00 00 00 44 00 15 43  Caps...."...D..C
  00001190: 75 62 65 54 65 78 74 75 72 65 46 69 6C 74 65 72  ubeTextureFilter
  000011A0: 43 61 70 73 05 14 03 00 22 00 00 00 48 00 17 56  Caps...."...H..V
  000011B0: 6F 6C 75 6D 65 54 65 78 74 75 72 65 46 69 6C 74  olumeTextureFilt
  000011C0: 65 72 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  erCaps......"...
  000011D0: 4C 00 12 54 65 78 74 75 72 65 41 64 64 72 65 73  L..TextureAddres
  000011E0: 73 43 61 70 73 F3 F2 F1 05 14 03 00 22 00 00 00  sCaps......."...
  000011F0: 50 00 18 56 6F 6C 75 6D 65 54 65 78 74 75 72 65  P..VolumeTexture
  00001200: 41 64 64 72 65 73 73 43 61 70 73 F1 05 14 03 00  AddressCaps.....
  00001210: 22 00 00 00 54 00 08 4C 69 6E 65 43 61 70 73 F1  "...T..LineCaps.
  00001220: 05 14 03 00 22 00 00 00 58 00 0F 4D 61 78 54 65  ...."...X..MaxTe
  00001230: 78 74 75 72 65 57 69 64 74 68 F2 F1 05 14 03 00  xtureWidth......
  00001240: 22 00 00 00 5C 00 10 4D 61 78 54 65 78 74 75 72  "...\..MaxTextur
  00001250: 65 48 65 69 67 68 74 F1 05 14 03 00 22 00 00 00  eHeight....."...
  00001260: 60 00 0F 4D 61 78 56 6F 6C 75 6D 65 45 78 74 65  `..MaxVolumeExte
  00001270: 6E 74 F2 F1 05 14 03 00 22 00 00 00 64 00 10 4D  nt......"...d..M
  00001280: 61 78 54 65 78 74 75 72 65 52 65 70 65 61 74 F1  axTextureRepeat.
  00001290: 05 14 03 00 22 00 00 00 68 00 15 4D 61 78 54 65  ...."...h..MaxTe
  000012A0: 78 74 75 72 65 41 73 70 65 63 74 52 61 74 69 6F  xtureAspectRatio
  000012B0: 05 14 03 00 22 00 00 00 6C 00 0D 4D 61 78 41 6E  ...."...l..MaxAn
  000012C0: 69 73 6F 74 72 6F 70 79 05 14 03 00 40 00 00 00  isotropy....@...
  000012D0: 70 00 0A 4D 61 78 56 65 72 74 65 78 57 F3 F2 F1  p..MaxVertexW...
  000012E0: 05 14 03 00 40 00 00 00 74 00 0D 47 75 61 72 64  ....@...t..Guard
  000012F0: 42 61 6E 64 4C 65 66 74 05 14 03 00 40 00 00 00  BandLeft....@...
  00001300: 78 00 0C 47 75 61 72 64 42 61 6E 64 54 6F 70 F1  x..GuardBandTop.
  00001310: 05 14 03 00 40 00 00 00 7C 00 0E 47 75 61 72 64  ....@...|..Guard
  00001320: 42 61 6E 64 52 69 67 68 74 F3 F2 F1 05 14 03 00  BandRight.......
  00001330: 40 00 00 00 80 00 0F 47 75 61 72 64 42 61 6E 64  @......GuardBand
  00001340: 42 6F 74 74 6F 6D F2 F1 05 14 03 00 40 00 00 00  Bottom......@...
  00001350: 84 00 0D 45 78 74 65 6E 74 73 41 64 6A 75 73 74  ...ExtentsAdjust
  00001360: 05 14 03 00 22 00 00 00 88 00 0B 53 74 65 6E 63  ...."......Stenc
  00001370: 69 6C 43 61 70 73 F2 F1 05 14 03 00 22 00 00 00  ilCaps......"...
  00001380: 8C 00 07 46 56 46 43 61 70 73 F2 F1 05 14 03 00  ...FVFCaps......
  00001390: 22 00 00 00 90 00 0D 54 65 78 74 75 72 65 4F 70  "......TextureOp
  000013A0: 43 61 70 73 05 14 03 00 22 00 00 00 94 00 15 4D  Caps...."......M
  000013B0: 61 78 54 65 78 74 75 72 65 42 6C 65 6E 64 53 74  axTextureBlendSt
  000013C0: 61 67 65 73 05 14 03 00 22 00 00 00 98 00 17 4D  ages...."......M
  000013D0: 61 78 53 69 6D 75 6C 74 61 6E 65 6F 75 73 54 65  axSimultaneousTe
  000013E0: 78 74 75 72 65 73 F2 F1 05 14 03 00 22 00 00 00  xtures......"...
  000013F0: 9C 00 14 56 65 72 74 65 78 50 72 6F 63 65 73 73  ...VertexProcess
  00001400: 69 6E 67 43 61 70 73 F1 05 14 03 00 22 00 00 00  ingCaps....."...
  00001410: A0 00 0F 4D 61 78 41 63 74 69 76 65 4C 69 67 68  ...MaxActiveLigh
  00001420: 74 73 F2 F1 05 14 03 00 22 00 00 00 A4 00 11 4D  ts......"......M
  00001430: 61 78 55 73 65 72 43 6C 69 70 50 6C 61 6E 65 73  axUserClipPlanes
  00001440: 05 14 03 00 22 00 00 00 A8 00 16 4D 61 78 56 65  ...."......MaxVe
  00001450: 72 74 65 78 42 6C 65 6E 64 4D 61 74 72 69 63 65  rtexBlendMatrice
  00001460: 73 F3 F2 F1 05 14 03 00 22 00 00 00 AC 00 19 4D  s......."......M
  00001470: 61 78 56 65 72 74 65 78 42 6C 65 6E 64 4D 61 74  axVertexBlendMat
  00001480: 72 69 78 49 6E 64 65 78 05 14 03 00 40 00 00 00  rixIndex....@...
  00001490: B0 00 0C 4D 61 78 50 6F 69 6E 74 53 69 7A 65 F1  ...MaxPointSize.
  000014A0: 05 14 03 00 22 00 00 00 B4 00 11 4D 61 78 50 72  ...."......MaxPr
  000014B0: 69 6D 69 74 69 76 65 43 6F 75 6E 74 05 14 03 00  imitiveCount....
  000014C0: 22 00 00 00 B8 00 0E 4D 61 78 56 65 72 74 65 78  "......MaxVertex
  000014D0: 49 6E 64 65 78 F3 F2 F1 05 14 03 00 22 00 00 00  Index......."...
  000014E0: BC 00 0A 4D 61 78 53 74 72 65 61 6D 73 F3 F2 F1  ...MaxStreams...
  000014F0: 05 14 03 00 22 00 00 00 C0 00 0F 4D 61 78 53 74  ...."......MaxSt
  00001500: 72 65 61 6D 53 74 72 69 64 65 F2 F1 05 14 03 00  reamStride......
  00001510: 22 00 00 00 C4 00 13 56 65 72 74 65 78 53 68 61  "......VertexSha
  00001520: 64 65 72 56 65 72 73 69 6F 6E F2 F1 05 14 03 00  derVersion......
  00001530: 22 00 00 00 C8 00 14 4D 61 78 56 65 72 74 65 78  "......MaxVertex
  00001540: 53 68 61 64 65 72 43 6F 6E 73 74 F1 05 14 03 00  ShaderConst.....
  00001550: 22 00 00 00 CC 00 12 50 69 78 65 6C 53 68 61 64  "......PixelShad
  00001560: 65 72 56 65 72 73 69 6F 6E F3 F2 F1 05 14 03 00  erVersion.......
  00001570: 40 00 00 00 D0 00 13 4D 61 78 50 69 78 65 6C 53  @......MaxPixelS
  00001580: 68 61 64 65 72 56 61 6C 75 65 F2 F1 1E 00 05 10  haderValue......
  00001590: 35 00 00 00 3B 10 00 00 00 00 00 00 00 00 00 00  5...;...........
  000015A0: D4 00 09 5F 44 33 44 43 41 50 53 38 1A 00 09 10  ..._D3DCAPS8....
  000015B0: 22 00 00 00 2C 10 00 00 00 00 00 00 07 00 00 00  "...,...........
  000015C0: 09 10 00 00 00 00 00 00 0A 00 02 10 08 10 00 00  ................
  000015D0: 0A 00 00 00 0A 00 01 12 01 00 00 00 3E 10 00 00  ............>...
  000015E0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000015F0: 07 00 01 00 3F 10 00 00 00 00 00 00 0A 00 01 12  ....?...........
  00001600: 01 00 00 00 27 10 00 00 1A 00 09 10 12 00 00 00  ....'...........
  00001610: 2C 10 00 00 00 00 00 00 07 00 01 00 41 10 00 00  ,...........A...
  00001620: 00 00 00 00 0A 00 01 12 01 00 00 00 13 10 00 00  ................
  00001630: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001640: 07 00 01 00 43 10 00 00 00 00 00 00 36 00 05 10  ....C.......6...
  00001650: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001660: 00 00 1E 5F 44 33 44 44 45 56 49 43 45 5F 43 52  ..._D3DDEVICE_CR
  00001670: 45 41 54 49 4F 4E 5F 50 41 52 41 4D 45 54 45 52  EATION_PARAMETER
  00001680: 53 F3 F2 F1 0A 00 02 10 45 10 00 00 0A 00 00 00  S.......E.......
  00001690: 0A 00 01 12 01 00 00 00 46 10 00 00 1A 00 09 10  ........F.......
  000016A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  000016B0: 47 10 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  G...............
  000016C0: 2B 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  +...........,...
  000016D0: 00 00 00 00 07 00 01 00 49 10 00 00 00 00 00 00  ........I.......
  000016E0: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  000016F0: 00 00 00 00 00 00 07 74 61 67 52 45 43 54 F2 F1  .......tagRECT..
  00001700: 0A 00 01 10 4B 10 00 00 01 00 F2 F1 0A 00 02 10  ....K...........
  00001710: 4C 10 00 00 0A 00 00 00 16 00 01 12 04 00 00 00  L...............
  00001720: 4D 10 00 00 4D 10 00 00 03 04 00 00 03 04 00 00  M...M...........
  00001730: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001740: 07 00 04 00 4E 10 00 00 00 00 00 00 22 00 05 10  ....N......."...
  00001750: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001760: 00 00 0A 44 33 44 53 75 72 66 61 63 65 F3 F2 F1  ...D3DSurface...
  00001770: 0A 00 02 10 50 10 00 00 0A 00 00 00 0A 00 02 10  ....P...........
  00001780: 51 10 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  Q...............
  00001790: 74 00 00 00 22 00 00 00 52 10 00 00 1A 00 09 10  t..."...R.......
  000017A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000017B0: 53 10 00 00 00 00 00 00 26 00 05 10 00 00 80 00  S.......&.......
  000017C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5F  ..............._
  000017D0: 44 33 44 52 41 53 54 45 52 5F 53 54 41 54 55 53  D3DRASTER_STATUS
  000017E0: 0A 00 02 10 55 10 00 00 0A 00 00 00 0A 00 01 12  ....U...........
  000017F0: 01 00 00 00 56 10 00 00 1A 00 09 10 12 00 00 00  ....V...........
  00001800: 2C 10 00 00 00 00 00 00 07 00 01 00 57 10 00 00  ,...........W...
  00001810: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  00001820: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 33 44 47  ..........._D3DG
  00001830: 41 4D 4D 41 52 41 4D 50 0A 00 01 10 59 10 00 00  AMMARAMP....Y...
  00001840: 01 00 F2 F1 0A 00 02 10 5A 10 00 00 0A 00 00 00  ........Z.......
  00001850: 0E 00 01 12 02 00 00 00 22 00 00 00 5B 10 00 00  ........"...[...
  00001860: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001870: 07 00 02 00 5C 10 00 00 00 00 00 00 0A 00 02 10  ....\...........
  00001880: 59 10 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  Y...............
  00001890: 5E 10 00 00 1A 00 09 10 03 00 00 00 2C 10 00 00  ^...........,...
  000018A0: 00 00 00 00 07 00 01 00 5F 10 00 00 00 00 00 00  ........_.......
  000018B0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  000018C0: 00 00 00 00 00 00 0A 44 33 44 54 65 78 74 75 72  .......D3DTextur
  000018D0: 65 F3 F2 F1 0A 00 02 10 61 10 00 00 0A 00 00 00  e.......a.......
  000018E0: 0A 00 02 10 62 10 00 00 0A 00 00 00 22 00 01 12  ....b......."...
  000018F0: 07 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  ....u...u...u...
  00001900: 22 00 00 00 1B 10 00 00 22 00 00 00 63 10 00 00  "......."...c...
  00001910: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001920: 07 00 07 00 64 10 00 00 00 00 00 00 26 00 05 10  ....d.......&...
  00001930: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001940: 00 00 10 44 33 44 56 6F 6C 75 6D 65 54 65 78 74  ...D3DVolumeText
  00001950: 75 72 65 F1 0A 00 02 10 66 10 00 00 0A 00 00 00  ure.....f.......
  00001960: 0A 00 02 10 67 10 00 00 0A 00 00 00 26 00 01 12  ....g.......&...
  00001970: 08 00 00 00 75 00 00 00 75 00 00 00 75 00 00 00  ....u...u...u...
  00001980: 75 00 00 00 22 00 00 00 1B 10 00 00 22 00 00 00  u..."......."...
  00001990: 68 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  h...........,...
  000019A0: 00 00 00 00 07 00 08 00 69 10 00 00 00 00 00 00  ........i.......
  000019B0: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  000019C0: 00 00 00 00 00 00 0E 44 33 44 43 75 62 65 54 65  .......D3DCubeTe
  000019D0: 78 74 75 72 65 F3 F2 F1 0A 00 02 10 6B 10 00 00  xture.......k...
  000019E0: 0A 00 00 00 0A 00 02 10 6C 10 00 00 0A 00 00 00  ........l.......
  000019F0: 1E 00 01 12 06 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  00001A00: 22 00 00 00 1B 10 00 00 22 00 00 00 6D 10 00 00  "......."...m...
  00001A10: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001A20: 07 00 06 00 6E 10 00 00 00 00 00 00 26 00 05 10  ....n.......&...
  00001A30: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001A40: 00 00 0F 44 33 44 56 65 72 74 65 78 42 75 66 66  ...D3DVertexBuff
  00001A50: 65 72 F2 F1 0A 00 02 10 70 10 00 00 0A 00 00 00  er......p.......
  00001A60: 0A 00 02 10 71 10 00 00 0A 00 00 00 1A 00 01 12  ....q...........
  00001A70: 05 00 00 00 75 00 00 00 22 00 00 00 22 00 00 00  ....u..."..."...
  00001A80: 22 00 00 00 72 10 00 00 1A 00 09 10 12 00 00 00  "...r...........
  00001A90: 2C 10 00 00 00 00 00 00 07 00 05 00 73 10 00 00  ,...........s...
  00001AA0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00001AB0: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 49 6E  ...........D3DIn
  00001AC0: 64 65 78 42 75 66 66 65 72 F3 F2 F1 0A 00 02 10  dexBuffer.......
  00001AD0: 75 10 00 00 0A 00 00 00 0A 00 02 10 76 10 00 00  u...........v...
  00001AE0: 0A 00 00 00 1A 00 01 12 05 00 00 00 75 00 00 00  ............u...
  00001AF0: 22 00 00 00 1B 10 00 00 22 00 00 00 77 10 00 00  "......."...w...
  00001B00: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001B10: 07 00 05 00 78 10 00 00 00 00 00 00 1E 00 01 12  ....x...........
  00001B20: 06 00 00 00 75 00 00 00 75 00 00 00 1B 10 00 00  ....u...u.......
  00001B30: 22 00 00 00 74 00 00 00 52 10 00 00 1A 00 09 10  "...t...R.......
  00001B40: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 06 00  ....,...........
  00001B50: 7A 10 00 00 00 00 00 00 1A 00 01 12 05 00 00 00  z...............
  00001B60: 75 00 00 00 75 00 00 00 1B 10 00 00 22 00 00 00  u...u......."...
  00001B70: 52 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  R...........,...
  00001B80: 00 00 00 00 07 00 05 00 7C 10 00 00 00 00 00 00  ........|.......
  00001B90: 16 00 01 12 04 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  00001BA0: 1B 10 00 00 52 10 00 00 1A 00 09 10 12 00 00 00  ....R...........
  00001BB0: 2C 10 00 00 00 00 00 00 07 00 04 00 7E 10 00 00  ,...........~...
  00001BC0: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00001BD0: 00 00 00 00 00 00 00 00 00 00 08 74 61 67 50 4F  ...........tagPO
  00001BE0: 49 4E 54 F1 0A 00 01 10 80 10 00 00 01 00 F2 F1  INT.............
  00001BF0: 0A 00 02 10 81 10 00 00 0A 00 00 00 1A 00 01 12  ................
  00001C00: 05 00 00 00 51 10 00 00 4D 10 00 00 75 00 00 00  ....Q...M...u...
  00001C10: 51 10 00 00 82 10 00 00 1A 00 09 10 12 00 00 00  Q...............
  00001C20: 2C 10 00 00 00 00 00 00 07 00 05 00 83 10 00 00  ,...............
  00001C30: 00 00 00 00 0E 00 01 12 02 00 00 00 51 10 00 00  ............Q...
  00001C40: 51 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  Q...........,...
  00001C50: 00 00 00 00 07 00 02 00 85 10 00 00 00 00 00 00  ................
  00001C60: 0A 00 01 12 01 00 00 00 52 10 00 00 1A 00 09 10  ........R.......
  00001C70: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00001C80: 87 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  00001C90: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  00001CA0: 00 00 00 00 1E 00 05 10 00 00 80 00 00 00 00 00  ................
  00001CB0: 00 00 00 00 00 00 00 00 00 00 08 5F 44 33 44 52  ..........._D3DR
  00001CC0: 45 43 54 F1 0A 00 01 10 8A 10 00 00 01 00 F2 F1  ECT.............
  00001CD0: 0A 00 02 10 8B 10 00 00 0A 00 00 00 1E 00 01 12  ................
  00001CE0: 06 00 00 00 22 00 00 00 8C 10 00 00 22 00 00 00  ...."......."...
  00001CF0: 22 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  "...@...".......
  00001D00: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 06 00  ....,...........
  00001D10: 8D 10 00 00 00 00 00 00 0A 01 03 12 03 04 03 00  ................
  00001D20: 00 00 0A 44 33 44 54 53 5F 56 49 45 57 F3 F2 F1  ...D3DTS_VIEW...
  00001D30: 03 04 03 00 01 00 10 44 33 44 54 53 5F 50 52 4F  .......D3DTS_PRO
  00001D40: 4A 45 43 54 49 4F 4E F1 03 04 03 00 02 00 0E 44  JECTION........D
  00001D50: 33 44 54 53 5F 54 45 58 54 55 52 45 30 F3 F2 F1  3DTS_TEXTURE0...
  00001D60: 03 04 03 00 03 00 0E 44 33 44 54 53 5F 54 45 58  .......D3DTS_TEX
  00001D70: 54 55 52 45 31 F3 F2 F1 03 04 03 00 04 00 0E 44  TURE1..........D
  00001D80: 33 44 54 53 5F 54 45 58 54 55 52 45 32 F3 F2 F1  3DTS_TEXTURE2...
  00001D90: 03 04 03 00 05 00 0E 44 33 44 54 53 5F 54 45 58  .......D3DTS_TEX
  00001DA0: 54 55 52 45 33 F3 F2 F1 03 04 03 00 06 00 0B 44  TURE3..........D
  00001DB0: 33 44 54 53 5F 57 4F 52 4C 44 F2 F1 03 04 03 00  3DTS_WORLD......
  00001DC0: 07 00 0C 44 33 44 54 53 5F 57 4F 52 4C 44 31 F1  ...D3DTS_WORLD1.
  00001DD0: 03 04 03 00 08 00 0C 44 33 44 54 53 5F 57 4F 52  .......D3DTS_WOR
  00001DE0: 4C 44 32 F1 03 04 03 00 09 00 0C 44 33 44 54 53  LD2........D3DTS
  00001DF0: 5F 57 4F 52 4C 44 33 F1 03 04 03 00 0A 00 09 44  _WORLD3........D
  00001E00: 33 44 54 53 5F 4D 41 58 03 04 03 00 04 80 FF FF  3DTS_MAX........
  00001E10: FF 7F 11 44 33 44 54 53 5F 46 4F 52 43 45 5F 44  ...D3DTS_FORCE_D
  00001E20: 57 4F 52 44 26 00 07 10 0C 00 00 00 74 00 00 00  WORD&.......t...
  00001E30: 8F 10 00 00 16 5F 44 33 44 54 52 41 4E 53 46 4F  ....._D3DTRANSFO
  00001E40: 52 4D 53 54 41 54 45 54 59 50 45 F1 22 00 05 10  RMSTATETYPE."...
  00001E50: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001E60: 00 00 0A 5F 44 33 44 4D 41 54 52 49 58 F3 F2 F1  ..._D3DMATRIX...
  00001E70: 0A 00 01 10 91 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00001E80: 92 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00001E90: 90 10 00 00 93 10 00 00 1A 00 09 10 12 00 00 00  ................
  00001EA0: 2C 10 00 00 00 00 00 00 07 00 02 00 94 10 00 00  ,...............
  00001EB0: 00 00 00 00 0A 00 02 10 91 10 00 00 0A 00 00 00  ................
  00001EC0: 0E 00 01 12 02 00 00 00 90 10 00 00 96 10 00 00  ................
  00001ED0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00001EE0: 07 00 02 00 97 10 00 00 00 00 00 00 22 00 05 10  ............"...
  00001EF0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00001F00: 00 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38  ..._D3DVIEWPORT8
  00001F10: 0A 00 01 10 99 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00001F20: 9A 10 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00001F30: 9B 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00001F40: 00 00 00 00 07 00 01 00 9C 10 00 00 00 00 00 00  ................
  00001F50: 0A 00 02 10 99 10 00 00 0A 00 00 00 0A 00 01 12  ................
  00001F60: 01 00 00 00 9E 10 00 00 1A 00 09 10 12 00 00 00  ................
  00001F70: 2C 10 00 00 00 00 00 00 07 00 01 00 9F 10 00 00  ,...............
  00001F80: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  00001F90: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 33 44 4D  ..........._D3DM
  00001FA0: 41 54 45 52 49 41 4C 38 0A 00 01 10 A1 10 00 00  ATERIAL8........
  00001FB0: 01 00 F2 F1 0A 00 02 10 A2 10 00 00 0A 00 00 00  ................
  00001FC0: 0A 00 01 12 01 00 00 00 A3 10 00 00 1A 00 09 10  ................
  00001FD0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00001FE0: A4 10 00 00 00 00 00 00 0A 00 02 10 A1 10 00 00  ................
  00001FF0: 0A 00 00 00 0A 00 01 12 01 00 00 00 A6 10 00 00  ................
  00002000: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00002010: 07 00 01 00 A7 10 00 00 00 00 00 00 22 00 05 10  ............"...
  00002020: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00002030: 00 00 0A 5F 44 33 44 4C 49 47 48 54 38 F3 F2 F1  ..._D3DLIGHT8...
  00002040: 0A 00 01 10 A9 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00002050: AA 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00002060: 22 00 00 00 AB 10 00 00 1A 00 09 10 12 00 00 00  "...............
  00002070: 2C 10 00 00 00 00 00 00 07 00 02 00 AC 10 00 00  ,...............
  00002080: 00 00 00 00 0A 00 02 10 A9 10 00 00 0A 00 00 00  ................
  00002090: 0E 00 01 12 02 00 00 00 22 00 00 00 AE 10 00 00  ........".......
  000020A0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000020B0: 07 00 02 00 AF 10 00 00 00 00 00 00 0E 00 01 12  ................
  000020C0: 02 00 00 00 22 00 00 00 74 00 00 00 1A 00 09 10  ...."...t.......
  000020D0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  000020E0: B1 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  000020F0: 22 00 00 00 74 04 00 00 1A 00 09 10 12 00 00 00  "...t...........
  00002100: 2C 10 00 00 00 00 00 00 07 00 02 00 B3 10 00 00  ,...............
  00002110: 00 00 00 00 7E 10 03 12 03 04 03 00 00 00 0C 44  ....~..........D
  00002120: 33 44 52 53 5F 50 53 5F 4D 49 4E F1 03 04 03 00  3DRS_PS_MIN.....
  00002130: 00 00 14 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  00002140: 49 4E 50 55 54 53 30 F1 03 04 03 00 01 00 14 44  INPUTS0........D
  00002150: 33 44 52 53 5F 50 53 41 4C 50 48 41 49 4E 50 55  3DRS_PSALPHAINPU
  00002160: 54 53 31 F1 03 04 03 00 02 00 14 44 33 44 52 53  TS1........D3DRS
  00002170: 5F 50 53 41 4C 50 48 41 49 4E 50 55 54 53 32 F1  _PSALPHAINPUTS2.
  00002180: 03 04 03 00 03 00 14 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002190: 4C 50 48 41 49 4E 50 55 54 53 33 F1 03 04 03 00  LPHAINPUTS3.....
  000021A0: 04 00 14 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  000021B0: 49 4E 50 55 54 53 34 F1 03 04 03 00 05 00 14 44  INPUTS4........D
  000021C0: 33 44 52 53 5F 50 53 41 4C 50 48 41 49 4E 50 55  3DRS_PSALPHAINPU
  000021D0: 54 53 35 F1 03 04 03 00 06 00 14 44 33 44 52 53  TS5........D3DRS
  000021E0: 5F 50 53 41 4C 50 48 41 49 4E 50 55 54 53 36 F1  _PSALPHAINPUTS6.
  000021F0: 03 04 03 00 07 00 14 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002200: 4C 50 48 41 49 4E 50 55 54 53 37 F1 03 04 03 00  LPHAINPUTS7.....
  00002210: 08 00 1F 44 33 44 52 53 5F 50 53 46 49 4E 41 4C  ...D3DRS_PSFINAL
  00002220: 43 4F 4D 42 49 4E 45 52 49 4E 50 55 54 53 41 42  COMBINERINPUTSAB
  00002230: 43 44 F2 F1 03 04 03 00 09 00 1E 44 33 44 52 53  CD.........D3DRS
  00002240: 5F 50 53 46 49 4E 41 4C 43 4F 4D 42 49 4E 45 52  _PSFINALCOMBINER
  00002250: 49 4E 50 55 54 53 45 46 47 F3 F2 F1 03 04 03 00  INPUTSEFG.......
  00002260: 0A 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  00002270: 41 4E 54 30 5F 30 F2 F1 03 04 03 00 0B 00 13 44  ANT0_0.........D
  00002280: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 30  3DRS_PSCONSTANT0
  00002290: 5F 31 F2 F1 03 04 03 00 0C 00 13 44 33 44 52 53  _1.........D3DRS
  000022A0: 5F 50 53 43 4F 4E 53 54 41 4E 54 30 5F 32 F2 F1  _PSCONSTANT0_2..
  000022B0: 03 04 03 00 0D 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  000022C0: 4F 4E 53 54 41 4E 54 30 5F 33 F2 F1 03 04 03 00  ONSTANT0_3......
  000022D0: 0E 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  000022E0: 41 4E 54 30 5F 34 F2 F1 03 04 03 00 0F 00 13 44  ANT0_4.........D
  000022F0: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 30  3DRS_PSCONSTANT0
  00002300: 5F 35 F2 F1 03 04 03 00 10 00 13 44 33 44 52 53  _5.........D3DRS
  00002310: 5F 50 53 43 4F 4E 53 54 41 4E 54 30 5F 36 F2 F1  _PSCONSTANT0_6..
  00002320: 03 04 03 00 11 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  00002330: 4F 4E 53 54 41 4E 54 30 5F 37 F2 F1 03 04 03 00  ONSTANT0_7......
  00002340: 12 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  00002350: 41 4E 54 31 5F 30 F2 F1 03 04 03 00 13 00 13 44  ANT1_0.........D
  00002360: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 31  3DRS_PSCONSTANT1
  00002370: 5F 31 F2 F1 03 04 03 00 14 00 13 44 33 44 52 53  _1.........D3DRS
  00002380: 5F 50 53 43 4F 4E 53 54 41 4E 54 31 5F 32 F2 F1  _PSCONSTANT1_2..
  00002390: 03 04 03 00 15 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  000023A0: 4F 4E 53 54 41 4E 54 31 5F 33 F2 F1 03 04 03 00  ONSTANT1_3......
  000023B0: 16 00 13 44 33 44 52 53 5F 50 53 43 4F 4E 53 54  ...D3DRS_PSCONST
  000023C0: 41 4E 54 31 5F 34 F2 F1 03 04 03 00 17 00 13 44  ANT1_4.........D
  000023D0: 33 44 52 53 5F 50 53 43 4F 4E 53 54 41 4E 54 31  3DRS_PSCONSTANT1
  000023E0: 5F 35 F2 F1 03 04 03 00 18 00 13 44 33 44 52 53  _5.........D3DRS
  000023F0: 5F 50 53 43 4F 4E 53 54 41 4E 54 31 5F 36 F2 F1  _PSCONSTANT1_6..
  00002400: 03 04 03 00 19 00 13 44 33 44 52 53 5F 50 53 43  .......D3DRS_PSC
  00002410: 4F 4E 53 54 41 4E 54 31 5F 37 F2 F1 03 04 03 00  ONSTANT1_7......
  00002420: 1A 00 15 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  00002430: 4F 55 54 50 55 54 53 30 03 04 03 00 1B 00 15 44  OUTPUTS0.......D
  00002440: 33 44 52 53 5F 50 53 41 4C 50 48 41 4F 55 54 50  3DRS_PSALPHAOUTP
  00002450: 55 54 53 31 03 04 03 00 1C 00 15 44 33 44 52 53  UTS1.......D3DRS
  00002460: 5F 50 53 41 4C 50 48 41 4F 55 54 50 55 54 53 32  _PSALPHAOUTPUTS2
  00002470: 03 04 03 00 1D 00 15 44 33 44 52 53 5F 50 53 41  .......D3DRS_PSA
  00002480: 4C 50 48 41 4F 55 54 50 55 54 53 33 03 04 03 00  LPHAOUTPUTS3....
  00002490: 1E 00 15 44 33 44 52 53 5F 50 53 41 4C 50 48 41  ...D3DRS_PSALPHA
  000024A0: 4F 55 54 50 55 54 53 34 03 04 03 00 1F 00 15 44  OUTPUTS4.......D
  000024B0: 33 44 52 53 5F 50 53 41 4C 50 48 41 4F 55 54 50  3DRS_PSALPHAOUTP
  000024C0: 55 54 53 35 03 04 03 00 20 00 15 44 33 44 52 53  UTS5.... ..D3DRS
  000024D0: 5F 50 53 41 4C 50 48 41 4F 55 54 50 55 54 53 36  _PSALPHAOUTPUTS6
  000024E0: 03 04 03 00 21 00 15 44 33 44 52 53 5F 50 53 41  ....!..D3DRS_PSA
  000024F0: 4C 50 48 41 4F 55 54 50 55 54 53 37 03 04 03 00  LPHAOUTPUTS7....
  00002500: 22 00 12 44 33 44 52 53 5F 50 53 52 47 42 49 4E  "..D3DRS_PSRGBIN
  00002510: 50 55 54 53 30 F3 F2 F1 03 04 03 00 23 00 12 44  PUTS0.......#..D
  00002520: 33 44 52 53 5F 50 53 52 47 42 49 4E 50 55 54 53  3DRS_PSRGBINPUTS
  00002530: 31 F3 F2 F1 03 04 03 00 24 00 12 44 33 44 52 53  1.......$..D3DRS
  00002540: 5F 50 53 52 47 42 49 4E 50 55 54 53 32 F3 F2 F1  _PSRGBINPUTS2...
  00002550: 03 04 03 00 25 00 12 44 33 44 52 53 5F 50 53 52  ....%..D3DRS_PSR
  00002560: 47 42 49 4E 50 55 54 53 33 F3 F2 F1 03 04 03 00  GBINPUTS3.......
  00002570: 26 00 12 44 33 44 52 53 5F 50 53 52 47 42 49 4E  &..D3DRS_PSRGBIN
  00002580: 50 55 54 53 34 F3 F2 F1 03 04 03 00 27 00 12 44  PUTS4.......'..D
  00002590: 33 44 52 53 5F 50 53 52 47 42 49 4E 50 55 54 53  3DRS_PSRGBINPUTS
  000025A0: 35 F3 F2 F1 03 04 03 00 28 00 12 44 33 44 52 53  5.......(..D3DRS
  000025B0: 5F 50 53 52 47 42 49 4E 50 55 54 53 36 F3 F2 F1  _PSRGBINPUTS6...
  000025C0: 03 04 03 00 29 00 12 44 33 44 52 53 5F 50 53 52  ....)..D3DRS_PSR
  000025D0: 47 42 49 4E 50 55 54 53 37 F3 F2 F1 03 04 03 00  GBINPUTS7.......
  000025E0: 2A 00 13 44 33 44 52 53 5F 50 53 43 4F 4D 50 41  *..D3DRS_PSCOMPA
  000025F0: 52 45 4D 4F 44 45 F2 F1 03 04 03 00 2B 00 1E 44  REMODE......+..D
  00002600: 33 44 52 53 5F 50 53 46 49 4E 41 4C 43 4F 4D 42  3DRS_PSFINALCOMB
  00002610: 49 4E 45 52 43 4F 4E 53 54 41 4E 54 30 F3 F2 F1  INERCONSTANT0...
  00002620: 03 04 03 00 2C 00 1E 44 33 44 52 53 5F 50 53 46  ....,..D3DRS_PSF
  00002630: 49 4E 41 4C 43 4F 4D 42 49 4E 45 52 43 4F 4E 53  INALCOMBINERCONS
  00002640: 54 41 4E 54 31 F3 F2 F1 03 04 03 00 2D 00 13 44  TANT1.......-..D
  00002650: 33 44 52 53 5F 50 53 52 47 42 4F 55 54 50 55 54  3DRS_PSRGBOUTPUT
  00002660: 53 30 F2 F1 03 04 03 00 2E 00 13 44 33 44 52 53  S0.........D3DRS
  00002670: 5F 50 53 52 47 42 4F 55 54 50 55 54 53 31 F2 F1  _PSRGBOUTPUTS1..
  00002680: 03 04 03 00 2F 00 13 44 33 44 52 53 5F 50 53 52  ..../..D3DRS_PSR
  00002690: 47 42 4F 55 54 50 55 54 53 32 F2 F1 03 04 03 00  GBOUTPUTS2......
  000026A0: 30 00 13 44 33 44 52 53 5F 50 53 52 47 42 4F 55  0..D3DRS_PSRGBOU
  000026B0: 54 50 55 54 53 33 F2 F1 03 04 03 00 31 00 13 44  TPUTS3......1..D
  000026C0: 33 44 52 53 5F 50 53 52 47 42 4F 55 54 50 55 54  3DRS_PSRGBOUTPUT
  000026D0: 53 34 F2 F1 03 04 03 00 32 00 13 44 33 44 52 53  S4......2..D3DRS
  000026E0: 5F 50 53 52 47 42 4F 55 54 50 55 54 53 35 F2 F1  _PSRGBOUTPUTS5..
  000026F0: 03 04 03 00 33 00 13 44 33 44 52 53 5F 50 53 52  ....3..D3DRS_PSR
  00002700: 47 42 4F 55 54 50 55 54 53 36 F2 F1 03 04 03 00  GBOUTPUTS6......
  00002710: 34 00 13 44 33 44 52 53 5F 50 53 52 47 42 4F 55  4..D3DRS_PSRGBOU
  00002720: 54 50 55 54 53 37 F2 F1 03 04 03 00 35 00 15 44  TPUTS7......5..D
  00002730: 33 44 52 53 5F 50 53 43 4F 4D 42 49 4E 45 52 43  3DRS_PSCOMBINERC
  00002740: 4F 55 4E 54 03 04 03 00 37 00 12 44 33 44 52 53  OUNT....7..D3DRS
  00002750: 5F 50 53 44 4F 54 4D 41 50 50 49 4E 47 F3 F2 F1  _PSDOTMAPPING...
  00002760: 03 04 03 00 38 00 14 44 33 44 52 53 5F 50 53 49  ....8..D3DRS_PSI
  00002770: 4E 50 55 54 54 45 58 54 55 52 45 F1 03 04 03 00  NPUTTEXTURE.....
  00002780: 39 00 0C 44 33 44 52 53 5F 50 53 5F 4D 41 58 F1  9..D3DRS_PS_MAX.
  00002790: 03 04 03 00 39 00 0B 44 33 44 52 53 5F 5A 46 55  ....9..D3DRS_ZFU
  000027A0: 4E 43 F2 F1 03 04 03 00 3A 00 0F 44 33 44 52 53  NC......:..D3DRS
  000027B0: 5F 41 4C 50 48 41 46 55 4E 43 F2 F1 03 04 03 00  _ALPHAFUNC......
  000027C0: 3B 00 16 44 33 44 52 53 5F 41 4C 50 48 41 42 4C  ;..D3DRS_ALPHABL
  000027D0: 45 4E 44 45 4E 41 42 4C 45 F3 F2 F1 03 04 03 00  ENDENABLE.......
  000027E0: 3C 00 15 44 33 44 52 53 5F 41 4C 50 48 41 54 45  <..D3DRS_ALPHATE
  000027F0: 53 54 45 4E 41 42 4C 45 03 04 03 00 3D 00 0E 44  STENABLE....=..D
  00002800: 33 44 52 53 5F 41 4C 50 48 41 52 45 46 F3 F2 F1  3DRS_ALPHAREF...
  00002810: 03 04 03 00 3E 00 0E 44 33 44 52 53 5F 53 52 43  ....>..D3DRS_SRC
  00002820: 42 4C 45 4E 44 F3 F2 F1 03 04 03 00 3F 00 0F 44  BLEND.......?..D
  00002830: 33 44 52 53 5F 44 45 53 54 42 4C 45 4E 44 F2 F1  3DRS_DESTBLEND..
  00002840: 03 04 03 00 40 00 12 44 33 44 52 53 5F 5A 57 52  ....@..D3DRS_ZWR
  00002850: 49 54 45 45 4E 41 42 4C 45 F3 F2 F1 03 04 03 00  ITEENABLE.......
  00002860: 41 00 12 44 33 44 52 53 5F 44 49 54 48 45 52 45  A..D3DRS_DITHERE
  00002870: 4E 41 42 4C 45 F3 F2 F1 03 04 03 00 42 00 0F 44  NABLE.......B..D
  00002880: 33 44 52 53 5F 53 48 41 44 45 4D 4F 44 45 F2 F1  3DRS_SHADEMODE..
  00002890: 03 04 03 00 43 00 16 44 33 44 52 53 5F 43 4F 4C  ....C..D3DRS_COL
  000028A0: 4F 52 57 52 49 54 45 45 4E 41 42 4C 45 F3 F2 F1  ORWRITEENABLE...
  000028B0: 03 04 03 00 44 00 12 44 33 44 52 53 5F 53 54 45  ....D..D3DRS_STE
  000028C0: 4E 43 49 4C 5A 46 41 49 4C F3 F2 F1 03 04 03 00  NCILZFAIL.......
  000028D0: 45 00 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  E..D3DRS_STENCIL
  000028E0: 50 41 53 53 03 04 03 00 46 00 11 44 33 44 52 53  PASS....F..D3DRS
  000028F0: 5F 53 54 45 4E 43 49 4C 46 55 4E 43 03 04 03 00  _STENCILFUNC....
  00002900: 47 00 10 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  G..D3DRS_STENCIL
  00002910: 52 45 46 F1 03 04 03 00 48 00 11 44 33 44 52 53  REF.....H..D3DRS
  00002920: 5F 53 54 45 4E 43 49 4C 4D 41 53 4B 03 04 03 00  _STENCILMASK....
  00002930: 49 00 16 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  I..D3DRS_STENCIL
  00002940: 57 52 49 54 45 4D 41 53 4B F3 F2 F1 03 04 03 00  WRITEMASK.......
  00002950: 4A 00 0D 44 33 44 52 53 5F 42 4C 45 4E 44 4F 50  J..D3DRS_BLENDOP
  00002960: 03 04 03 00 4B 00 10 44 33 44 52 53 5F 42 4C 45  ....K..D3DRS_BLE
  00002970: 4E 44 43 4F 4C 4F 52 F1 03 04 03 00 4C 00 10 44  NDCOLOR.....L..D
  00002980: 33 44 52 53 5F 53 57 41 54 48 57 49 44 54 48 F1  3DRS_SWATHWIDTH.
  00002990: 03 04 03 00 4D 00 1E 44 33 44 52 53 5F 50 4F 4C  ....M..D3DRS_POL
  000029A0: 59 47 4F 4E 4F 46 46 53 45 54 5A 53 4C 4F 50 45  YGONOFFSETZSLOPE
  000029B0: 53 43 41 4C 45 F3 F2 F1 03 04 03 00 4E 00 1A 44  SCALE.......N..D
  000029C0: 33 44 52 53 5F 50 4F 4C 59 47 4F 4E 4F 46 46 53  3DRS_POLYGONOFFS
  000029D0: 45 54 5A 4F 46 46 53 45 54 F3 F2 F1 03 04 03 00  ETZOFFSET.......
  000029E0: 4F 00 17 44 33 44 52 53 5F 50 4F 49 4E 54 4F 46  O..D3DRS_POINTOF
  000029F0: 46 53 45 54 45 4E 41 42 4C 45 F2 F1 03 04 03 00  FSETENABLE......
  00002A00: 50 00 1B 44 33 44 52 53 5F 57 49 52 45 46 52 41  P..D3DRS_WIREFRA
  00002A10: 4D 45 4F 46 46 53 45 54 45 4E 41 42 4C 45 F2 F1  MEOFFSETENABLE..
  00002A20: 03 04 03 00 51 00 17 44 33 44 52 53 5F 53 4F 4C  ....Q..D3DRS_SOL
  00002A30: 49 44 4F 46 46 53 45 54 45 4E 41 42 4C 45 F2 F1  IDOFFSETENABLE..
  00002A40: 03 04 03 00 52 00 10 44 33 44 52 53 5F 53 49 4D  ....R..D3DRS_SIM
  00002A50: 50 4C 45 5F 4D 41 58 F1 03 04 03 00 52 00 0F 44  PLE_MAX.....R..D
  00002A60: 33 44 52 53 5F 46 4F 47 45 4E 41 42 4C 45 F2 F1  3DRS_FOGENABLE..
  00002A70: 03 04 03 00 53 00 12 44 33 44 52 53 5F 46 4F 47  ....S..D3DRS_FOG
  00002A80: 54 41 42 4C 45 4D 4F 44 45 F3 F2 F1 03 04 03 00  TABLEMODE.......
  00002A90: 54 00 0E 44 33 44 52 53 5F 46 4F 47 53 54 41 52  T..D3DRS_FOGSTAR
  00002AA0: 54 F3 F2 F1 03 04 03 00 55 00 0C 44 33 44 52 53  T.......U..D3DRS
  00002AB0: 5F 46 4F 47 45 4E 44 F1 03 04 03 00 56 00 10 44  _FOGEND.....V..D
  00002AC0: 33 44 52 53 5F 46 4F 47 44 45 4E 53 49 54 59 F1  3DRS_FOGDENSITY.
  00002AD0: 03 04 03 00 57 00 14 44 33 44 52 53 5F 52 41 4E  ....W..D3DRS_RAN
  00002AE0: 47 45 46 4F 47 45 4E 41 42 4C 45 F1 03 04 03 00  GEFOGENABLE.....
  00002AF0: 58 00 0B 44 33 44 52 53 5F 57 52 41 50 30 F2 F1  X..D3DRS_WRAP0..
  00002B00: 03 04 03 00 59 00 0B 44 33 44 52 53 5F 57 52 41  ....Y..D3DRS_WRA
  00002B10: 50 31 F2 F1 03 04 03 00 5A 00 0B 44 33 44 52 53  P1......Z..D3DRS
  00002B20: 5F 57 52 41 50 32 F2 F1 03 04 03 00 5B 00 0B 44  _WRAP2......[..D
  00002B30: 33 44 52 53 5F 57 52 41 50 33 F2 F1 03 04 03 00  3DRS_WRAP3......
  00002B40: 5C 00 0E 44 33 44 52 53 5F 4C 49 47 48 54 49 4E  \..D3DRS_LIGHTIN
  00002B50: 47 F3 F2 F1 03 04 03 00 5D 00 14 44 33 44 52 53  G.......]..D3DRS
  00002B60: 5F 53 50 45 43 55 4C 41 52 45 4E 41 42 4C 45 F1  _SPECULARENABLE.
  00002B70: 03 04 03 00 5E 00 11 44 33 44 52 53 5F 4C 4F 43  ....^..D3DRS_LOC
  00002B80: 41 4C 56 49 45 57 45 52 03 04 03 00 5F 00 11 44  ALVIEWER...._..D
  00002B90: 33 44 52 53 5F 43 4F 4C 4F 52 56 45 52 54 45 58  3DRS_COLORVERTEX
  00002BA0: 03 04 03 00 60 00 20 44 33 44 52 53 5F 42 41 43  ....`. D3DRS_BAC
  00002BB0: 4B 53 50 45 43 55 4C 41 52 4D 41 54 45 52 49 41  KSPECULARMATERIA
  00002BC0: 4C 53 4F 55 52 43 45 F1 03 04 03 00 61 00 1F 44  LSOURCE.....a..D
  00002BD0: 33 44 52 53 5F 42 41 43 4B 44 49 46 46 55 53 45  3DRS_BACKDIFFUSE
  00002BE0: 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F2 F1  MATERIALSOURCE..
  00002BF0: 03 04 03 00 62 00 1F 44 33 44 52 53 5F 42 41 43  ....b..D3DRS_BAC
  00002C00: 4B 41 4D 42 49 45 4E 54 4D 41 54 45 52 49 41 4C  KAMBIENTMATERIAL
  00002C10: 53 4F 55 52 43 45 F2 F1 03 04 03 00 63 00 20 44  SOURCE......c. D
  00002C20: 33 44 52 53 5F 42 41 43 4B 45 4D 49 53 53 49 56  3DRS_BACKEMISSIV
  00002C30: 45 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F1  EMATERIALSOURCE.
  00002C40: 03 04 03 00 64 00 1C 44 33 44 52 53 5F 53 50 45  ....d..D3DRS_SPE
  00002C50: 43 55 4C 41 52 4D 41 54 45 52 49 41 4C 53 4F 55  CULARMATERIALSOU
  00002C60: 52 43 45 F1 03 04 03 00 65 00 1B 44 33 44 52 53  RCE.....e..D3DRS
  00002C70: 5F 44 49 46 46 55 53 45 4D 41 54 45 52 49 41 4C  _DIFFUSEMATERIAL
  00002C80: 53 4F 55 52 43 45 F2 F1 03 04 03 00 66 00 1B 44  SOURCE......f..D
  00002C90: 33 44 52 53 5F 41 4D 42 49 45 4E 54 4D 41 54 45  3DRS_AMBIENTMATE
  00002CA0: 52 49 41 4C 53 4F 55 52 43 45 F2 F1 03 04 03 00  RIALSOURCE......
  00002CB0: 67 00 1C 44 33 44 52 53 5F 45 4D 49 53 53 49 56  g..D3DRS_EMISSIV
  00002CC0: 45 4D 41 54 45 52 49 41 4C 53 4F 55 52 43 45 F1  EMATERIALSOURCE.
  00002CD0: 03 04 03 00 68 00 11 44 33 44 52 53 5F 42 41 43  ....h..D3DRS_BAC
  00002CE0: 4B 41 4D 42 49 45 4E 54 03 04 03 00 69 00 0D 44  KAMBIENT....i..D
  00002CF0: 33 44 52 53 5F 41 4D 42 49 45 4E 54 03 04 03 00  3DRS_AMBIENT....
  00002D00: 6A 00 0F 44 33 44 52 53 5F 50 4F 49 4E 54 53 49  j..D3DRS_POINTSI
  00002D10: 5A 45 F2 F1 03 04 03 00 6B 00 13 44 33 44 52 53  ZE......k..D3DRS
  00002D20: 5F 50 4F 49 4E 54 53 49 5A 45 5F 4D 49 4E F2 F1  _POINTSIZE_MIN..
  00002D30: 03 04 03 00 6C 00 17 44 33 44 52 53 5F 50 4F 49  ....l..D3DRS_POI
  00002D40: 4E 54 53 50 52 49 54 45 45 4E 41 42 4C 45 F2 F1  NTSPRITEENABLE..
  00002D50: 03 04 03 00 6D 00 16 44 33 44 52 53 5F 50 4F 49  ....m..D3DRS_POI
  00002D60: 4E 54 53 43 41 4C 45 45 4E 41 42 4C 45 F3 F2 F1  NTSCALEENABLE...
  00002D70: 03 04 03 00 6E 00 12 44 33 44 52 53 5F 50 4F 49  ....n..D3DRS_POI
  00002D80: 4E 54 53 43 41 4C 45 5F 41 F3 F2 F1 03 04 03 00  NTSCALE_A.......
  00002D90: 6F 00 12 44 33 44 52 53 5F 50 4F 49 4E 54 53 43  o..D3DRS_POINTSC
  00002DA0: 41 4C 45 5F 42 F3 F2 F1 03 04 03 00 70 00 12 44  ALE_B.......p..D
  00002DB0: 33 44 52 53 5F 50 4F 49 4E 54 53 43 41 4C 45 5F  3DRS_POINTSCALE_
  00002DC0: 43 F3 F2 F1 03 04 03 00 71 00 13 44 33 44 52 53  C.......q..D3DRS
  00002DD0: 5F 50 4F 49 4E 54 53 49 5A 45 5F 4D 41 58 F2 F1  _POINTSIZE_MAX..
  00002DE0: 03 04 03 00 72 00 14 44 33 44 52 53 5F 50 41 54  ....r..D3DRS_PAT
  00002DF0: 43 48 45 44 47 45 53 54 59 4C 45 F1 03 04 03 00  CHEDGESTYLE.....
  00002E00: 73 00 13 44 33 44 52 53 5F 50 41 54 43 48 53 45  s..D3DRS_PATCHSE
  00002E10: 47 4D 45 4E 54 53 F2 F1 03 04 03 00 74 00 10 44  GMENTS......t..D
  00002E20: 33 44 52 53 5F 53 57 41 50 46 49 4C 54 45 52 F1  3DRS_SWAPFILTER.
  00002E30: 03 04 03 00 75 00 12 44 33 44 52 53 5F 44 45 46  ....u..D3DRS_DEF
  00002E40: 45 52 52 45 44 5F 4D 41 58 F3 F2 F1 03 04 03 00  ERRED_MAX.......
  00002E50: 75 00 14 44 33 44 52 53 5F 50 53 54 45 58 54 55  u..D3DRS_PSTEXTU
  00002E60: 52 45 4D 4F 44 45 53 F1 03 04 03 00 76 00 11 44  REMODES.....v..D
  00002E70: 33 44 52 53 5F 56 45 52 54 45 58 42 4C 45 4E 44  3DRS_VERTEXBLEND
  00002E80: 03 04 03 00 77 00 0E 44 33 44 52 53 5F 46 4F 47  ....w..D3DRS_FOG
  00002E90: 43 4F 4C 4F 52 F3 F2 F1 03 04 03 00 78 00 0E 44  COLOR.......x..D
  00002EA0: 33 44 52 53 5F 46 49 4C 4C 4D 4F 44 45 F3 F2 F1  3DRS_FILLMODE...
  00002EB0: 03 04 03 00 79 00 12 44 33 44 52 53 5F 42 41 43  ....y..D3DRS_BAC
  00002EC0: 4B 46 49 4C 4C 4D 4F 44 45 F3 F2 F1 03 04 03 00  KFILLMODE.......
  00002ED0: 7A 00 16 44 33 44 52 53 5F 54 57 4F 53 49 44 45  z..D3DRS_TWOSIDE
  00002EE0: 44 4C 49 47 48 54 49 4E 47 F3 F2 F1 03 04 03 00  DLIGHTING.......
  00002EF0: 7B 00 16 44 33 44 52 53 5F 4E 4F 52 4D 41 4C 49  {..D3DRS_NORMALI
  00002F00: 5A 45 4E 4F 52 4D 41 4C 53 F3 F2 F1 03 04 03 00  ZENORMALS.......
  00002F10: 7C 00 0D 44 33 44 52 53 5F 5A 45 4E 41 42 4C 45  |..D3DRS_ZENABLE
  00002F20: 03 04 03 00 7D 00 13 44 33 44 52 53 5F 53 54 45  ....}..D3DRS_STE
  00002F30: 4E 43 49 4C 45 4E 41 42 4C 45 F2 F1 03 04 03 00  NCILENABLE......
  00002F40: 7E 00 11 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  ~..D3DRS_STENCIL
  00002F50: 46 41 49 4C 03 04 03 00 7F 00 0F 44 33 44 52 53  FAIL.......D3DRS
  00002F60: 5F 46 52 4F 4E 54 46 41 43 45 F2 F1 03 04 03 00  _FRONTFACE......
  00002F70: 80 00 0E 44 33 44 52 53 5F 43 55 4C 4C 4D 4F 44  ...D3DRS_CULLMOD
  00002F80: 45 F3 F2 F1 03 04 03 00 81 00 13 44 33 44 52 53  E..........D3DRS
  00002F90: 5F 54 45 58 54 55 52 45 46 41 43 54 4F 52 F2 F1  _TEXTUREFACTOR..
  00002FA0: 03 04 03 00 82 00 0B 44 33 44 52 53 5F 5A 42 49  .......D3DRS_ZBI
  00002FB0: 41 53 F2 F1 03 04 03 00 83 00 0D 44 33 44 52 53  AS.........D3DRS
  00002FC0: 5F 4C 4F 47 49 43 4F 50 03 04 03 00 84 00 13 44  _LOGICOP.......D
  00002FD0: 33 44 52 53 5F 45 44 47 45 41 4E 54 49 41 4C 49  3DRS_EDGEANTIALI
  00002FE0: 41 53 F2 F1 03 04 03 00 85 00 1A 44 33 44 52 53  AS.........D3DRS
  00002FF0: 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 41 4E 54 49  _MULTISAMPLEANTI
  00003000: 41 4C 49 41 53 F3 F2 F1 03 04 03 00 86 00 15 44  ALIAS..........D
  00003010: 33 44 52 53 5F 4D 55 4C 54 49 53 41 4D 50 4C 45  3DRS_MULTISAMPLE
  00003020: 4D 41 53 4B 03 04 03 00 87 00 15 44 33 44 52 53  MASK.......D3DRS
  00003030: 5F 4D 55 4C 54 49 53 41 4D 50 4C 45 4D 4F 44 45  _MULTISAMPLEMODE
  00003040: 03 04 03 00 88 00 21 44 33 44 52 53 5F 4D 55 4C  ......!D3DRS_MUL
  00003050: 54 49 53 41 4D 50 4C 45 52 45 4E 44 45 52 54 41  TISAMPLERENDERTA
  00003060: 52 47 45 54 4D 4F 44 45 03 04 03 00 89 00 10 44  RGETMODE.......D
  00003070: 33 44 52 53 5F 53 48 41 44 4F 57 46 55 4E 43 F1  3DRS_SHADOWFUNC.
  00003080: 03 04 03 00 8A 00 0F 44 33 44 52 53 5F 4C 49 4E  .......D3DRS_LIN
  00003090: 45 57 49 44 54 48 F2 F1 03 04 03 00 8B 00 15 44  EWIDTH.........D
  000030A0: 33 44 52 53 5F 44 58 54 31 4E 4F 49 53 45 45 4E  3DRS_DXT1NOISEEN
  000030B0: 41 42 4C 45 03 04 03 00 8C 00 0F 44 33 44 52 53  ABLE.......D3DRS
  000030C0: 5F 59 55 56 45 4E 41 42 4C 45 F2 F1 03 04 03 00  _YUVENABLE......
  000030D0: 8D 00 19 44 33 44 52 53 5F 4F 43 43 4C 55 53 49  ...D3DRS_OCCLUSI
  000030E0: 4F 4E 43 55 4C 4C 45 4E 41 42 4C 45 03 04 03 00  ONCULLENABLE....
  000030F0: 8E 00 17 44 33 44 52 53 5F 53 54 45 4E 43 49 4C  ...D3DRS_STENCIL
  00003100: 43 55 4C 4C 45 4E 41 42 4C 45 F2 F1 03 04 03 00  CULLENABLE......
  00003110: 8F 00 17 44 33 44 52 53 5F 52 4F 50 5A 43 4D 50  ...D3DRS_ROPZCMP
  00003120: 41 4C 57 41 59 53 52 45 41 44 F2 F1 03 04 03 00  ALWAYSREAD......
  00003130: 90 00 0E 44 33 44 52 53 5F 52 4F 50 5A 52 45 41  ...D3DRS_ROPZREA
  00003140: 44 F3 F2 F1 03 04 03 00 91 00 1B 44 33 44 52 53  D..........D3DRS
  00003150: 5F 44 4F 4E 4F 54 43 55 4C 4C 55 4E 43 4F 4D 50  _DONOTCULLUNCOMP
  00003160: 52 45 53 53 45 44 F2 F1 03 04 03 00 92 00 09 44  RESSED.........D
  00003170: 33 44 52 53 5F 4D 41 58 03 04 03 00 04 80 FF FF  3DRS_MAX........
  00003180: FF 7F 11 44 33 44 52 53 5F 46 4F 52 43 45 5F 44  ...D3DRS_FORCE_D
  00003190: 57 4F 52 44 22 00 07 10 97 00 00 00 74 00 00 00  WORD".......t...
  000031A0: B5 10 00 00 13 5F 44 33 44 52 45 4E 44 45 52 53  ....._D3DRENDERS
  000031B0: 54 41 54 45 54 59 50 45 0E 00 01 12 02 00 00 00  TATETYPE........
  000031C0: B6 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000031D0: 2C 10 00 00 00 00 00 00 07 00 02 00 B7 10 00 00  ,...............
  000031E0: 00 00 00 00 0E 00 01 12 02 00 00 00 B6 10 00 00  ................
  000031F0: 22 04 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  00003200: 00 00 00 00 07 00 02 00 B9 10 00 00 00 00 00 00  ................
  00003210: 0A 00 01 12 01 00 00 00 22 00 00 00 1A 00 09 10  ........".......
  00003220: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00003230: BB 10 00 00 00 00 00 00 6A 00 03 12 03 04 03 00  ........j.......
  00003240: 01 00 0A 44 33 44 53 42 54 5F 41 4C 4C F3 F2 F1  ...D3DSBT_ALL...
  00003250: 03 04 03 00 02 00 11 44 33 44 53 42 54 5F 50 49  .......D3DSBT_PI
  00003260: 58 45 4C 53 54 41 54 45 03 04 03 00 03 00 12 44  XELSTATE.......D
  00003270: 33 44 53 42 54 5F 56 45 52 54 45 58 53 54 41 54  3DSBT_VERTEXSTAT
  00003280: 45 F3 F2 F1 03 04 03 00 04 80 FF FF FF 7F 12 44  E..............D
  00003290: 33 44 53 42 54 5F 46 4F 52 43 45 5F 44 57 4F 52  3DSBT_FORCE_DWOR
  000032A0: 44 F3 F2 F1 22 00 07 10 04 00 00 00 74 00 00 00  D...".......t...
  000032B0: BD 10 00 00 12 5F 44 33 44 53 54 41 54 45 42 4C  ....._D3DSTATEBL
  000032C0: 4F 43 4B 54 59 50 45 F1 0E 00 01 12 02 00 00 00  OCKTYPE.........
  000032D0: BE 10 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000032E0: 2C 10 00 00 00 00 00 00 07 00 02 00 BF 10 00 00  ,...............
  000032F0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00003300: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 42 61  ...........D3DBa
  00003310: 73 65 54 65 78 74 75 72 65 F3 F2 F1 0A 00 02 10  seTexture.......
  00003320: C1 10 00 00 0A 00 00 00 0A 00 02 10 C2 10 00 00  ................
  00003330: 0A 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  00003340: C3 10 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003350: 00 00 00 00 07 00 02 00 C4 10 00 00 00 00 00 00  ................
  00003360: 0E 00 01 12 02 00 00 00 22 00 00 00 C2 10 00 00  ........".......
  00003370: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003380: 07 00 02 00 C6 10 00 00 00 00 00 00 9E 03 03 12  ................
  00003390: 03 04 03 00 00 00 0F 44 33 44 54 53 53 5F 41 44  .......D3DTSS_AD
  000033A0: 44 52 45 53 53 55 F2 F1 03 04 03 00 01 00 0F 44  DRESSU.........D
  000033B0: 33 44 54 53 53 5F 41 44 44 52 45 53 53 56 F2 F1  3DTSS_ADDRESSV..
  000033C0: 03 04 03 00 02 00 0F 44 33 44 54 53 53 5F 41 44  .......D3DTSS_AD
  000033D0: 44 52 45 53 53 57 F2 F1 03 04 03 00 03 00 10 44  DRESSW.........D
  000033E0: 33 44 54 53 53 5F 4D 41 47 46 49 4C 54 45 52 F1  3DTSS_MAGFILTER.
  000033F0: 03 04 03 00 04 00 10 44 33 44 54 53 53 5F 4D 49  .......D3DTSS_MI
  00003400: 4E 46 49 4C 54 45 52 F1 03 04 03 00 05 00 10 44  NFILTER........D
  00003410: 33 44 54 53 53 5F 4D 49 50 46 49 4C 54 45 52 F1  3DTSS_MIPFILTER.
  00003420: 03 04 03 00 06 00 14 44 33 44 54 53 53 5F 4D 49  .......D3DTSS_MI
  00003430: 50 4D 41 50 4C 4F 44 42 49 41 53 F1 03 04 03 00  PMAPLODBIAS.....
  00003440: 07 00 12 44 33 44 54 53 53 5F 4D 41 58 4D 49 50  ...D3DTSS_MAXMIP
  00003450: 4C 45 56 45 4C F3 F2 F1 03 04 03 00 08 00 14 44  LEVEL..........D
  00003460: 33 44 54 53 53 5F 4D 41 58 41 4E 49 53 4F 54 52  3DTSS_MAXANISOTR
  00003470: 4F 50 59 F1 03 04 03 00 09 00 11 44 33 44 54 53  OPY........D3DTS
  00003480: 53 5F 43 4F 4C 4F 52 4B 45 59 4F 50 03 04 03 00  S_COLORKEYOP....
  00003490: 0A 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 53  ...D3DTSS_COLORS
  000034A0: 49 47 4E F1 03 04 03 00 0B 00 10 44 33 44 54 53  IGN........D3DTS
  000034B0: 53 5F 41 4C 50 48 41 4B 49 4C 4C F1 03 04 03 00  S_ALPHAKILL.....
  000034C0: 0C 00 21 44 33 44 54 53 53 5F 44 45 46 45 52 52  ..!D3DTSS_DEFERR
  000034D0: 45 44 5F 54 45 58 54 55 52 45 5F 53 54 41 54 45  ED_TEXTURE_STATE
  000034E0: 5F 4D 41 58 03 04 03 00 0C 00 0E 44 33 44 54 53  _MAX.......D3DTS
  000034F0: 53 5F 43 4F 4C 4F 52 4F 50 F3 F2 F1 03 04 03 00  S_COLOROP.......
  00003500: 0D 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 41  ...D3DTSS_COLORA
  00003510: 52 47 30 F1 03 04 03 00 0E 00 10 44 33 44 54 53  RG0........D3DTS
  00003520: 53 5F 43 4F 4C 4F 52 41 52 47 31 F1 03 04 03 00  S_COLORARG1.....
  00003530: 0F 00 10 44 33 44 54 53 53 5F 43 4F 4C 4F 52 41  ...D3DTSS_COLORA
  00003540: 52 47 32 F1 03 04 03 00 10 00 0E 44 33 44 54 53  RG2........D3DTS
  00003550: 53 5F 41 4C 50 48 41 4F 50 F3 F2 F1 03 04 03 00  S_ALPHAOP.......
  00003560: 11 00 10 44 33 44 54 53 53 5F 41 4C 50 48 41 41  ...D3DTSS_ALPHAA
  00003570: 52 47 30 F1 03 04 03 00 12 00 10 44 33 44 54 53  RG0........D3DTS
  00003580: 53 5F 41 4C 50 48 41 41 52 47 31 F1 03 04 03 00  S_ALPHAARG1.....
  00003590: 13 00 10 44 33 44 54 53 53 5F 41 4C 50 48 41 41  ...D3DTSS_ALPHAA
  000035A0: 52 47 32 F1 03 04 03 00 14 00 10 44 33 44 54 53  RG2........D3DTS
  000035B0: 53 5F 52 45 53 55 4C 54 41 52 47 F1 03 04 03 00  S_RESULTARG.....
  000035C0: 15 00 1C 44 33 44 54 53 53 5F 54 45 58 54 55 52  ...D3DTSS_TEXTUR
  000035D0: 45 54 52 41 4E 53 46 4F 52 4D 46 4C 41 47 53 F1  ETRANSFORMFLAGS.
  000035E0: 03 04 03 00 16 00 13 44 33 44 54 53 53 5F 44 45  .......D3DTSS_DE
  000035F0: 46 45 52 52 45 44 5F 4D 41 58 F2 F1 03 04 03 00  FERRED_MAX......
  00003600: 16 00 13 44 33 44 54 53 53 5F 42 55 4D 50 45 4E  ...D3DTSS_BUMPEN
  00003610: 56 4D 41 54 30 30 F2 F1 03 04 03 00 17 00 13 44  VMAT00.........D
  00003620: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4D 41 54  3DTSS_BUMPENVMAT
  00003630: 30 31 F2 F1 03 04 03 00 18 00 13 44 33 44 54 53  01.........D3DTS
  00003640: 53 5F 42 55 4D 50 45 4E 56 4D 41 54 31 31 F2 F1  S_BUMPENVMAT11..
  00003650: 03 04 03 00 19 00 13 44 33 44 54 53 53 5F 42 55  .......D3DTSS_BU
  00003660: 4D 50 45 4E 56 4D 41 54 31 30 F2 F1 03 04 03 00  MPENVMAT10......
  00003670: 1A 00 14 44 33 44 54 53 53 5F 42 55 4D 50 45 4E  ...D3DTSS_BUMPEN
  00003680: 56 4C 53 43 41 4C 45 F1 03 04 03 00 1B 00 15 44  VLSCALE........D
  00003690: 33 44 54 53 53 5F 42 55 4D 50 45 4E 56 4C 4F 46  3DTSS_BUMPENVLOF
  000036A0: 46 53 45 54 03 04 03 00 1C 00 14 44 33 44 54 53  FSET.......D3DTS
  000036B0: 53 5F 54 45 58 43 4F 4F 52 44 49 4E 44 45 58 F1  S_TEXCOORDINDEX.
  000036C0: 03 04 03 00 1D 00 12 44 33 44 54 53 53 5F 42 4F  .......D3DTSS_BO
  000036D0: 52 44 45 52 43 4F 4C 4F 52 F3 F2 F1 03 04 03 00  RDERCOLOR.......
  000036E0: 1E 00 14 44 33 44 54 53 53 5F 43 4F 4C 4F 52 4B  ...D3DTSS_COLORK
  000036F0: 45 59 43 4F 4C 4F 52 F1 03 04 03 00 20 00 0A 44  EYCOLOR..... ..D
  00003700: 33 44 54 53 53 5F 4D 41 58 F3 F2 F1 03 04 03 00  3DTSS_MAX.......
  00003710: 04 80 FF FF FF 7F 12 44 33 44 54 53 53 5F 46 4F  .......D3DTSS_FO
  00003720: 52 43 45 5F 44 57 4F 52 44 F3 F2 F1 2A 00 07 10  RCE_DWORD...*...
  00003730: 23 00 00 00 74 00 00 00 C8 10 00 00 19 5F 44 33  #...t........_D3
  00003740: 44 54 45 58 54 55 52 45 53 54 41 47 45 53 54 41  DTEXTURESTAGESTA
  00003750: 54 45 54 59 50 45 F2 F1 12 00 01 12 03 00 00 00  TETYPE..........
  00003760: 22 00 00 00 C9 10 00 00 22 04 00 00 1A 00 09 10  ".......".......
  00003770: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00003780: CA 10 00 00 00 00 00 00 12 00 01 12 03 00 00 00  ................
  00003790: 22 00 00 00 C9 10 00 00 22 00 00 00 1A 00 09 10  ".......".......
  000037A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000037B0: CC 10 00 00 00 00 00 00 22 01 03 12 03 04 03 00  ........".......
  000037C0: 01 00 0F 44 33 44 50 54 5F 50 4F 49 4E 54 4C 49  ...D3DPT_POINTLI
  000037D0: 53 54 F2 F1 03 04 03 00 02 00 0E 44 33 44 50 54  ST.........D3DPT
  000037E0: 5F 4C 49 4E 45 4C 49 53 54 F3 F2 F1 03 04 03 00  _LINELIST.......
  000037F0: 03 00 0E 44 33 44 50 54 5F 4C 49 4E 45 4C 4F 4F  ...D3DPT_LINELOO
  00003800: 50 F3 F2 F1 03 04 03 00 04 00 0F 44 33 44 50 54  P..........D3DPT
  00003810: 5F 4C 49 4E 45 53 54 52 49 50 F2 F1 03 04 03 00  _LINESTRIP......
  00003820: 05 00 12 44 33 44 50 54 5F 54 52 49 41 4E 47 4C  ...D3DPT_TRIANGL
  00003830: 45 4C 49 53 54 F3 F2 F1 03 04 03 00 06 00 13 44  ELIST..........D
  00003840: 33 44 50 54 5F 54 52 49 41 4E 47 4C 45 53 54 52  3DPT_TRIANGLESTR
  00003850: 49 50 F2 F1 03 04 03 00 07 00 11 44 33 44 50 54  IP.........D3DPT
  00003860: 5F 54 52 49 41 4E 47 4C 45 46 41 4E 03 04 03 00  _TRIANGLEFAN....
  00003870: 08 00 0E 44 33 44 50 54 5F 51 55 41 44 4C 49 53  ...D3DPT_QUADLIS
  00003880: 54 F3 F2 F1 03 04 03 00 09 00 0F 44 33 44 50 54  T..........D3DPT
  00003890: 5F 51 55 41 44 53 54 52 49 50 F2 F1 03 04 03 00  _QUADSTRIP......
  000038A0: 0A 00 0D 44 33 44 50 54 5F 50 4F 4C 59 47 4F 4E  ...D3DPT_POLYGON
  000038B0: 03 04 03 00 0B 00 09 44 33 44 50 54 5F 4D 41 58  .......D3DPT_MAX
  000038C0: 03 04 03 00 04 80 FF FF FF 7F 11 44 33 44 50 54  ...........D3DPT
  000038D0: 5F 46 4F 52 43 45 5F 44 57 4F 52 44 22 00 07 10  _FORCE_DWORD"...
  000038E0: 0C 00 00 00 74 00 00 00 CE 10 00 00 11 5F 44 33  ....t........_D3
  000038F0: 44 50 52 49 4D 49 54 49 56 45 54 59 50 45 F2 F1  DPRIMITIVETYPE..
  00003900: 12 00 01 12 03 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003910: 75 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  u...........,...
  00003920: 00 00 00 00 07 00 03 00 D0 10 00 00 00 00 00 00  ................
  00003930: 1A 00 01 12 05 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003940: 75 00 00 00 75 00 00 00 75 00 00 00 1A 00 09 10  u...u...u.......
  00003950: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 05 00  ....,...........
  00003960: D2 10 00 00 00 00 00 00 0A 00 01 10 03 00 00 00  ................
  00003970: 01 00 F2 F1 0A 00 02 10 D4 10 00 00 0A 00 00 00  ................
  00003980: 16 00 01 12 04 00 00 00 CF 10 00 00 75 00 00 00  ............u...
  00003990: D5 10 00 00 75 00 00 00 1A 00 09 10 12 00 00 00  ....u...........
  000039A0: 2C 10 00 00 00 00 00 00 07 00 04 00 D6 10 00 00  ,...............
  000039B0: 00 00 00 00 26 00 01 12 08 00 00 00 CF 10 00 00  ....&...........
  000039C0: 75 00 00 00 75 00 00 00 75 00 00 00 D5 10 00 00  u...u...u.......
  000039D0: 1B 10 00 00 D5 10 00 00 75 00 00 00 1A 00 09 10  ........u.......
  000039E0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 08 00  ....,...........
  000039F0: D8 10 00 00 00 00 00 00 0A 00 01 10 22 00 00 00  ............"...
  00003A00: 01 00 F2 F1 0A 00 02 10 DA 10 00 00 0A 00 00 00  ................
  00003A10: 16 00 01 12 04 00 00 00 DB 10 00 00 DB 10 00 00  ................
  00003A20: 22 04 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  00003A30: 2C 10 00 00 00 00 00 00 07 00 04 00 DC 10 00 00  ,...............
  00003A40: 00 00 00 00 0A 00 01 12 01 00 00 00 22 04 00 00  ............"...
  00003A50: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003A60: 07 00 01 00 DE 10 00 00 00 00 00 00 12 00 01 12  ................
  00003A70: 03 00 00 00 74 00 00 00 D5 10 00 00 22 00 00 00  ....t......."...
  00003A80: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003A90: 07 00 03 00 E0 10 00 00 00 00 00 00 12 00 01 12  ................
  00003AA0: 03 00 00 00 74 00 00 00 03 04 00 00 22 00 00 00  ....t......."...
  00003AB0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003AC0: 07 00 03 00 E2 10 00 00 00 00 00 00 12 00 01 12  ................
  00003AD0: 03 00 00 00 22 00 00 00 03 04 00 00 22 04 00 00  ...."......."...
  00003AE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003AF0: 07 00 03 00 E4 10 00 00 00 00 00 00 12 00 01 12  ................
  00003B00: 03 00 00 00 75 00 00 00 71 10 00 00 75 00 00 00  ....u...q...u...
  00003B10: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003B20: 07 00 03 00 E6 10 00 00 00 00 00 00 12 00 01 12  ................
  00003B30: 03 00 00 00 75 00 00 00 72 10 00 00 75 04 00 00  ....u...r...u...
  00003B40: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003B50: 07 00 03 00 E8 10 00 00 00 00 00 00 0E 00 01 12  ................
  00003B60: 02 00 00 00 76 10 00 00 75 00 00 00 1A 00 09 10  ....v...u.......
  00003B70: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003B80: EA 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003B90: 77 10 00 00 75 04 00 00 1A 00 09 10 12 00 00 00  w...u...........
  00003BA0: 2C 10 00 00 00 00 00 00 07 00 02 00 EC 10 00 00  ,...............
  00003BB0: 00 00 00 00 2A 00 05 10 00 00 80 00 00 00 00 00  ....*...........
  00003BC0: 00 00 00 00 00 00 00 00 00 00 12 5F 44 33 44 50  ..........._D3DP
  00003BD0: 69 78 65 6C 53 68 61 64 65 72 44 65 66 F3 F2 F1  ixelShaderDef...
  00003BE0: 0A 00 01 10 EE 10 00 00 01 00 F2 F1 0A 00 02 10  ................
  00003BF0: EF 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003C00: F0 10 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003C10: 2C 10 00 00 00 00 00 00 07 00 02 00 F1 10 00 00  ,...............
  00003C20: 00 00 00 00 0A 00 01 12 01 00 00 00 F0 10 00 00  ................
  00003C30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003C40: 07 00 01 00 F3 10 00 00 00 00 00 00 12 00 01 12  ................
  00003C50: 03 00 00 00 22 00 00 00 D5 10 00 00 22 00 00 00  ...."......."...
  00003C60: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003C70: 07 00 03 00 F5 10 00 00 00 00 00 00 12 00 01 12  ................
  00003C80: 03 00 00 00 22 00 00 00 03 04 00 00 22 00 00 00  ...."......."...
  00003C90: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003CA0: 07 00 03 00 F7 10 00 00 00 00 00 00 0A 00 02 10  ................
  00003CB0: EE 10 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003CC0: 22 00 00 00 F9 10 00 00 1A 00 09 10 12 00 00 00  "...............
  00003CD0: 2C 10 00 00 00 00 00 00 07 00 02 00 FA 10 00 00  ,...............
  00003CE0: 00 00 00 00 0A 00 01 10 40 00 00 00 01 00 F2 F1  ........@.......
  00003CF0: 0A 00 02 10 FC 10 00 00 0A 00 00 00 2A 00 05 10  ............*...
  00003D00: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00003D10: 00 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00003D20: 5F 49 4E 46 4F F3 F2 F1 0A 00 01 10 FE 10 00 00  _INFO...........
  00003D30: 01 00 F2 F1 0A 00 02 10 FF 10 00 00 0A 00 00 00  ................
  00003D40: 12 00 01 12 03 00 00 00 75 00 00 00 FD 10 00 00  ........u.......
  00003D50: 00 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003D60: 00 00 00 00 07 00 03 00 01 11 00 00 00 00 00 00  ................
  00003D70: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00003D80: 00 00 00 00 00 00 11 5F 44 33 44 54 52 49 50 41  ......._D3DTRIPA
  00003D90: 54 43 48 5F 49 4E 46 4F 0A 00 01 10 03 11 00 00  TCH_INFO........
  00003DA0: 01 00 F2 F1 0A 00 02 10 04 11 00 00 0A 00 00 00  ................
  00003DB0: 12 00 01 12 03 00 00 00 75 00 00 00 FD 10 00 00  ........u.......
  00003DC0: 05 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  ............,...
  00003DD0: 00 00 00 00 07 00 03 00 06 11 00 00 00 00 00 00  ................
  00003DE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003DF0: 07 00 01 00 10 10 00 00 00 00 00 00 0A 00 01 12  ................
  00003E00: 01 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003E10: 2C 10 00 00 00 00 00 00 07 00 01 00 09 11 00 00  ,...............
  00003E20: 00 00 00 00 0A 00 01 12 01 00 00 00 22 04 00 00  ............"...
  00003E30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003E40: 07 00 01 00 0B 11 00 00 00 00 00 00 1A 00 09 10  ................
  00003E50: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003E60: 31 10 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  1...............
  00003E70: DB 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00003E80: 2C 10 00 00 00 00 00 00 07 00 02 00 0E 11 00 00  ,...............
  00003E90: 00 00 00 00 2E 00 05 10 00 00 80 00 00 00 00 00  ................
  00003EA0: 00 00 00 00 00 00 00 00 00 00 19 5F 44 33 44 56  ..........._D3DV
  00003EB0: 45 52 54 45 58 41 54 54 52 49 42 55 54 45 46 4F  ERTEXATTRIBUTEFO
  00003EC0: 52 4D 41 54 0A 00 02 10 10 11 00 00 0A 00 00 00  RMAT............
  00003ED0: 0E 00 01 12 02 00 00 00 11 11 00 00 22 00 00 00  ............"...
  00003EE0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00003EF0: 07 00 02 00 12 11 00 00 00 00 00 00 0E 00 01 12  ................
  00003F00: 02 00 00 00 22 00 00 00 FD 10 00 00 1A 00 09 10  ...."...........
  00003F10: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00003F20: 14 11 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  ................
  00003F30: 22 00 00 00 75 04 00 00 1A 00 09 10 12 00 00 00  "...u...........
  00003F40: 2C 10 00 00 00 00 00 00 07 00 02 00 16 11 00 00  ,...............
  00003F50: 00 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  00003F60: 22 04 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  00003F70: 00 00 00 00 07 00 02 00 18 11 00 00 00 00 00 00  ................
  00003F80: 0A 00 01 10 21 00 00 00 01 00 F2 F1 0A 00 02 10  ....!...........
  00003F90: 1A 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  00003FA0: CF 10 00 00 75 00 00 00 1B 11 00 00 1A 00 09 10  ....u...........
  00003FB0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00003FC0: 1C 11 00 00 00 00 00 00 1A 00 01 12 05 00 00 00  ................
  00003FD0: CF 10 00 00 75 00 00 00 D5 10 00 00 D5 10 00 00  ....u...........
  00003FE0: 75 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  u...........,...
  00003FF0: 00 00 00 00 07 00 05 00 1E 11 00 00 00 00 00 00  ................
  00004000: 0E 00 01 12 02 00 00 00 75 00 00 00 1B 11 00 00  ........u.......
  00004010: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004020: 07 00 02 00 20 11 00 00 00 00 00 00 96 00 03 12  .... ...........
  00004030: 03 04 03 00 00 00 0E 44 33 44 50 41 4C 45 54 54  .......D3DPALETT
  00004040: 45 5F 32 35 36 F3 F2 F1 03 04 03 00 01 00 0E 44  E_256..........D
  00004050: 33 44 50 41 4C 45 54 54 45 5F 31 32 38 F3 F2 F1  3DPALETTE_128...
  00004060: 03 04 03 00 02 00 0D 44 33 44 50 41 4C 45 54 54  .......D3DPALETT
  00004070: 45 5F 36 34 03 04 03 00 03 00 0D 44 33 44 50 41  E_64.......D3DPA
  00004080: 4C 45 54 54 45 5F 33 32 03 04 03 00 04 00 0E 44  LETTE_32.......D
  00004090: 33 44 50 41 4C 45 54 54 45 5F 4D 41 58 F3 F2 F1  3DPALETTE_MAX...
  000040A0: 03 04 03 00 04 80 FF FF FF 7F 16 44 33 44 50 41  ...........D3DPA
  000040B0: 4C 45 54 54 45 5F 46 4F 52 43 45 5F 44 57 4F 52  LETTE_FORCE_DWOR
  000040C0: 44 F3 F2 F1 1E 00 07 10 06 00 00 00 74 00 00 00  D...........t...
  000040D0: 22 11 00 00 0F 5F 44 33 44 50 41 4C 45 54 54 45  "...._D3DPALETTE
  000040E0: 53 49 5A 45 22 00 05 10 00 00 80 00 00 00 00 00  SIZE"...........
  000040F0: 00 00 00 00 00 00 00 00 00 00 0A 44 33 44 50 61  ...........D3DPa
  00004100: 6C 65 74 74 65 F3 F2 F1 0A 00 02 10 24 11 00 00  lette.......$...
  00004110: 0A 00 00 00 0A 00 02 10 25 11 00 00 0A 00 00 00  ........%.......
  00004120: 0E 00 01 12 02 00 00 00 23 11 00 00 26 11 00 00  ........#...&...
  00004130: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004140: 07 00 02 00 27 11 00 00 00 00 00 00 0E 00 01 12  ....'...........
  00004150: 02 00 00 00 22 00 00 00 26 11 00 00 1A 00 09 10  ...."...&.......
  00004160: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004170: 29 11 00 00 00 00 00 00 0E 00 01 12 02 00 00 00  )...............
  00004180: 22 00 00 00 25 11 00 00 1A 00 09 10 12 00 00 00  "...%...........
  00004190: 2C 10 00 00 00 00 00 00 07 00 02 00 2B 11 00 00  ,...........+...
  000041A0: 00 00 00 00 1A 00 01 12 05 00 00 00 51 10 00 00  ............Q...
  000041B0: 4D 10 00 00 4D 10 00 00 74 00 00 00 22 00 00 00  M...M...t..."...
  000041C0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000041D0: 07 00 05 00 2D 11 00 00 00 00 00 00 0A 00 01 12  ....-...........
  000041E0: 01 00 00 00 74 00 00 00 1A 00 09 10 12 00 00 00  ....t...........
  000041F0: 2C 10 00 00 00 00 00 00 07 00 01 00 2F 11 00 00  ,.........../...
  00004200: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  00004210: 75 04 00 00 23 04 00 00 1A 00 09 10 12 00 00 00  u...#...........
  00004220: 2C 10 00 00 00 00 00 00 07 00 03 00 31 11 00 00  ,...........1...
  00004230: 00 00 00 00 1A 00 09 10 74 00 00 00 2C 10 00 00  ........t...,...
  00004240: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00004250: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00004260: 00 00 00 00 00 00 10 5F 44 33 44 46 49 45 4C 44  ......._D3DFIELD
  00004270: 5F 53 54 41 54 55 53 F1 0A 00 02 10 34 11 00 00  _STATUS.....4...
  00004280: 0A 00 00 00 0A 00 01 12 01 00 00 00 35 11 00 00  ............5...
  00004290: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000042A0: 07 00 01 00 36 11 00 00 00 00 00 00 12 00 01 12  ....6...........
  000042B0: 03 00 00 00 74 00 00 00 40 00 00 00 40 00 00 00  ....t...@...@...
  000042C0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000042D0: 07 00 03 00 38 11 00 00 00 00 00 00 1A 00 01 12  ....8...........
  000042E0: 05 00 00 00 74 00 00 00 40 00 00 00 40 00 00 00  ....t...@...@...
  000042F0: 40 00 00 00 40 00 00 00 1A 00 09 10 12 00 00 00  @...@...........
  00004300: 2C 10 00 00 00 00 00 00 07 00 05 00 3A 11 00 00  ,...........:...
  00004310: 00 00 00 00 12 00 01 12 03 00 00 00 74 00 00 00  ............t...
  00004320: 11 00 00 00 11 00 00 00 1A 00 09 10 12 00 00 00  ................
  00004330: 2C 10 00 00 00 00 00 00 07 00 03 00 3C 11 00 00  ,...........<...
  00004340: 00 00 00 00 1A 00 01 12 05 00 00 00 74 00 00 00  ............t...
  00004350: 11 00 00 00 11 00 00 00 11 00 00 00 11 00 00 00  ................
  00004360: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004370: 07 00 05 00 3E 11 00 00 00 00 00 00 1A 00 01 12  ....>...........
  00004380: 05 00 00 00 74 00 00 00 20 00 00 00 20 00 00 00  ....t... ... ...
  00004390: 20 00 00 00 20 00 00 00 1A 00 09 10 12 00 00 00   ... ...........
  000043A0: 2C 10 00 00 00 00 00 00 07 00 05 00 40 11 00 00  ,...........@...
  000043B0: 00 00 00 00 0E 00 01 12 02 00 00 00 74 00 00 00  ............t...
  000043C0: 22 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  "...........,...
  000043D0: 00 00 00 00 07 00 02 00 42 11 00 00 00 00 00 00  ........B.......
  000043E0: 0A 00 01 12 01 00 00 00 CF 10 00 00 1A 00 09 10  ................
  000043F0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00004400: 44 11 00 00 00 00 00 00 1E 00 05 10 00 00 80 00  D...............
  00004410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 44  ...............D
  00004420: 33 44 46 69 78 75 70 F1 0A 00 02 10 46 11 00 00  3DFixup.....F...
  00004430: 0A 00 00 00 0A 00 02 10 47 11 00 00 0A 00 00 00  ........G.......
  00004440: 0E 00 01 12 02 00 00 00 75 00 00 00 48 11 00 00  ........u...H...
  00004450: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004460: 07 00 02 00 49 11 00 00 00 00 00 00 22 00 05 10  ....I......."...
  00004470: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00004480: 00 00 0D 44 33 44 50 75 73 68 42 75 66 66 65 72  ...D3DPushBuffer
  00004490: 0A 00 02 10 4B 11 00 00 0A 00 00 00 0A 00 02 10  ....K...........
  000044A0: 4C 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  L...............
  000044B0: 75 00 00 00 74 00 00 00 4D 11 00 00 1A 00 09 10  u...t...M.......
  000044C0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000044D0: 4E 11 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  N...............
  000044E0: 4C 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  L...........,...
  000044F0: 00 00 00 00 07 00 01 00 50 11 00 00 00 00 00 00  ........P.......
  00004500: 0E 00 01 12 02 00 00 00 4C 11 00 00 47 11 00 00  ........L...G...
  00004510: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004520: 07 00 02 00 52 11 00 00 00 00 00 00 0A 00 01 12  ....R...........
  00004530: 01 00 00 00 96 10 00 00 1A 00 09 10 12 00 00 00  ................
  00004540: 2C 10 00 00 00 00 00 00 07 00 01 00 54 11 00 00  ,...........T...
  00004550: 00 00 00 00 12 00 01 12 03 00 00 00 93 10 00 00  ................
  00004560: 93 10 00 00 93 10 00 00 1A 00 09 10 12 00 00 00  ................
  00004570: 2C 10 00 00 00 00 00 00 07 00 03 00 56 11 00 00  ,...........V...
  00004580: 00 00 00 00 16 00 01 12 04 00 00 00 75 00 00 00  ............u...
  00004590: 93 10 00 00 93 10 00 00 93 10 00 00 1A 00 09 10  ................
  000045A0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 04 00  ....,...........
  000045B0: 58 11 00 00 00 00 00 00 12 00 01 12 03 00 00 00  X...............
  000045C0: 75 00 00 00 96 10 00 00 96 10 00 00 1A 00 09 10  u...............
  000045D0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  000045E0: 5A 11 00 00 00 00 00 00 26 00 05 10 00 00 80 00  Z.......&.......
  000045F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 5F  ..............._
  00004600: 44 33 44 53 54 52 45 41 4D 5F 49 4E 50 55 54 F1  D3DSTREAM_INPUT.
  00004610: 0A 00 01 10 5C 11 00 00 01 00 F2 F1 0A 00 02 10  ....\...........
  00004620: 5D 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ]...............
  00004630: 22 00 00 00 75 00 00 00 5E 11 00 00 1A 00 09 10  "...u...^.......
  00004640: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004650: 5F 11 00 00 00 00 00 00 12 00 01 12 03 00 00 00  _...............
  00004660: 11 11 00 00 75 00 00 00 5E 11 00 00 1A 00 09 10  ....u...^.......
  00004670: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004680: 61 11 00 00 00 00 00 00 0A 00 02 10 5C 11 00 00  a...........\...
  00004690: 0A 00 00 00 12 00 01 12 03 00 00 00 22 04 00 00  ............"...
  000046A0: 75 04 00 00 63 11 00 00 1A 00 09 10 12 00 00 00  u...c...........
  000046B0: 2C 10 00 00 00 00 00 00 07 00 03 00 64 11 00 00  ,...........d...
  000046C0: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  000046D0: 74 00 00 00 8C 10 00 00 1A 00 09 10 12 00 00 00  t...............
  000046E0: 2C 10 00 00 00 00 00 00 07 00 03 00 66 11 00 00  ,...........f...
  000046F0: 00 00 00 00 0A 00 02 10 8A 10 00 00 0A 00 00 00  ................
  00004700: 12 00 01 12 03 00 00 00 22 04 00 00 74 04 00 00  ........"...t...
  00004710: 68 11 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  h...........,...
  00004720: 00 00 00 00 07 00 03 00 69 11 00 00 00 00 00 00  ........i.......
  00004730: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00004740: 00 00 00 00 00 00 08 5F 44 33 44 54 49 4C 45 F1  ......._D3DTILE.
  00004750: 0A 00 01 10 6B 11 00 00 01 00 F2 F1 0A 00 02 10  ....k...........
  00004760: 6C 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  l...............
  00004770: 22 00 00 00 6D 11 00 00 1A 00 09 10 12 00 00 00  "...m...........
  00004780: 2C 10 00 00 00 00 00 00 07 00 02 00 6E 11 00 00  ,...........n...
  00004790: 00 00 00 00 0A 00 02 10 6B 11 00 00 0A 00 00 00  ........k.......
  000047A0: 0E 00 01 12 02 00 00 00 22 00 00 00 70 11 00 00  ........"...p...
  000047B0: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000047C0: 07 00 02 00 71 11 00 00 00 00 00 00 1A 00 09 10  ....q...........
  000047D0: 22 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  "...,...........
  000047E0: 31 10 00 00 00 00 00 00 16 00 01 12 04 00 00 00  1...............
  000047F0: 22 00 00 00 22 00 00 00 DB 10 00 00 22 00 00 00  "..."......."...
  00004800: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004810: 07 00 04 00 74 11 00 00 00 00 00 00 16 00 01 12  ....t...........
  00004820: 04 00 00 00 22 00 00 00 22 00 00 00 22 04 00 00  ...."..."..."...
  00004830: 22 00 00 00 1A 00 09 10 03 00 00 00 2C 10 00 00  "...........,...
  00004840: 00 00 00 00 07 00 04 00 76 11 00 00 00 00 00 00  ........v.......
  00004850: 0A 00 02 10 22 04 00 00 0A 00 00 00 0E 00 01 12  ...."...........
  00004860: 02 00 00 00 22 00 00 00 78 11 00 00 1A 00 09 10  ...."...x.......
  00004870: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004880: 79 11 00 00 00 00 00 00 1A 00 09 10 03 00 00 00  y...............
  00004890: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  000048A0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000048B0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 33 44 56  ..........._D3DV
  000048C0: 42 4C 41 4E 4B 44 41 54 41 F3 F2 F1 0A 00 02 10  BLANKDATA.......
  000048D0: 7C 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  |...............
  000048E0: 7D 11 00 00 0E 00 08 10 03 00 00 00 00 00 01 00  }...............
  000048F0: 7E 11 00 00 0A 00 02 10 7F 11 00 00 0A 00 00 00  ~...............
  00004900: 0A 00 01 12 01 00 00 00 80 11 00 00 1A 00 09 10  ................
  00004910: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  00004920: 81 11 00 00 00 00 00 00 22 00 05 10 00 00 80 00  ........".......
  00004930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0C 5F  ..............._
  00004940: 44 33 44 53 57 41 50 44 41 54 41 F1 0A 00 02 10  D3DSWAPDATA.....
  00004950: 83 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00004960: 84 11 00 00 0E 00 08 10 03 00 00 00 00 00 01 00  ................
  00004970: 85 11 00 00 0A 00 02 10 86 11 00 00 0A 00 00 00  ................
  00004980: 0A 00 01 12 01 00 00 00 87 11 00 00 1A 00 09 10  ................
  00004990: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 01 00  ....,...........
  000049A0: 88 11 00 00 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  000049B0: 2C 10 00 00 00 00 00 00 07 00 00 00 09 10 00 00  ,...............
  000049C0: 00 00 00 00 1A 00 09 10 74 00 00 00 2C 10 00 00  ........t...,...
  000049D0: 00 00 00 00 07 00 01 00 BB 10 00 00 00 00 00 00  ................
  000049E0: 1A 00 09 10 03 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  000049F0: 07 00 01 00 BB 10 00 00 00 00 00 00 5A 00 03 12  ............Z...
  00004A00: 03 04 03 00 00 00 10 44 33 44 43 41 4C 4C 42 41  .......D3DCALLBA
  00004A10: 43 4B 5F 52 45 41 44 F1 03 04 03 00 01 00 11 44  CK_READ........D
  00004A20: 33 44 43 41 4C 4C 42 41 43 4B 5F 57 52 49 54 45  3DCALLBACK_WRITE
  00004A30: 03 04 03 00 04 80 FF FF FF 7F 1B 44 33 44 43 41  ...........D3DCA
  00004A40: 4C 4C 42 41 43 4B 54 59 50 45 5F 46 4F 52 43 45  LLBACKTYPE_FORCE
  00004A50: 5F 44 57 4F 52 44 F2 F1 22 00 07 10 03 00 00 00  _DWORD..".......
  00004A60: 74 00 00 00 8D 11 00 00 10 5F 44 33 44 43 41 4C  t........_D3DCAL
  00004A70: 4C 42 41 43 4B 54 59 50 45 F3 F2 F1 0E 00 08 10  LBACKTYPE.......
  00004A80: 03 00 00 00 00 00 01 00 BB 10 00 00 0A 00 02 10  ................
  00004A90: 8F 11 00 00 0A 00 00 00 12 00 01 12 03 00 00 00  ................
  00004AA0: 8E 11 00 00 90 11 00 00 22 00 00 00 1A 00 09 10  ........".......
  00004AB0: 03 00 00 00 2C 10 00 00 00 00 00 00 07 00 03 00  ....,...........
  00004AC0: 91 11 00 00 00 00 00 00 1A 00 09 10 03 00 00 00  ................
  00004AD0: 2C 10 00 00 00 00 00 00 07 00 01 00 2F 11 00 00  ,.........../...
  00004AE0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00004AF0: 00 00 00 00 00 00 00 00 00 00 11 5F 44 33 44 43  ..........._D3DC
  00004B00: 4F 50 59 52 45 43 54 53 54 41 54 45 0A 00 01 10  OPYRECTSTATE....
  00004B10: 94 11 00 00 01 00 F2 F1 0A 00 02 10 95 11 00 00  ................
  00004B20: 0A 00 00 00 2A 00 05 10 00 00 80 00 00 00 00 00  ....*...........
  00004B30: 00 00 00 00 00 00 00 00 00 00 14 5F 44 33 44 43  ..........._D3DC
  00004B40: 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45 F1  OPYRECTROPSTATE.
  00004B50: 0A 00 01 10 97 11 00 00 01 00 F2 F1 0A 00 02 10  ................
  00004B60: 98 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00004B70: 96 11 00 00 99 11 00 00 1A 00 09 10 12 00 00 00  ................
  00004B80: 2C 10 00 00 00 00 00 00 07 00 02 00 9A 11 00 00  ,...............
  00004B90: 00 00 00 00 0A 00 02 10 94 11 00 00 0A 00 00 00  ................
  00004BA0: 0A 00 02 10 97 11 00 00 0A 00 00 00 0E 00 01 12  ................
  00004BB0: 02 00 00 00 9C 11 00 00 9D 11 00 00 1A 00 09 10  ................
  00004BC0: 12 00 00 00 2C 10 00 00 00 00 00 00 07 00 02 00  ....,...........
  00004BD0: 9E 11 00 00 00 00 00 00 1A 00 09 10 22 00 00 00  ............"...
  00004BE0: 2C 10 00 00 00 00 00 00 07 00 01 00 BB 10 00 00  ,...............
  00004BF0: 00 00 00 00 0E 00 01 12 02 00 00 00 40 00 00 00  ............@...
  00004C00: 40 00 00 00 1A 00 09 10 12 00 00 00 2C 10 00 00  @...........,...
  00004C10: 00 00 00 00 07 00 02 00 A1 11 00 00 00 00 00 00  ................
  00004C20: 0E 00 01 12 02 00 00 00 40 04 00 00 40 04 00 00  ........@...@...
  00004C30: 1A 00 09 10 12 00 00 00 2C 10 00 00 00 00 00 00  ........,.......
  00004C40: 07 00 02 00 A3 11 00 00 00 00 00 00 0A 00 01 12  ................
  00004C50: 01 00 00 00 22 00 00 00 1A 00 09 10 03 00 00 00  ...."...........
  00004C60: 2C 10 00 00 00 00 00 00 07 00 01 00 A5 11 00 00  ,...............
  00004C70: 00 00 00 00 1A 00 09 10 22 00 00 00 2C 10 00 00  ........"...,...
  00004C80: 00 00 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00004C90: 7A 10 03 12 0B 14 0B 00 3D 10 00 00 06 41 64 64  z.......=....Add
  00004CA0: 52 65 66 F1 0B 14 0B 00 3D 10 00 00 07 52 65 6C  Ref.....=....Rel
  00004CB0: 65 61 73 65 0B 14 0B 00 40 10 00 00 0B 47 65 74  ease....@....Get
  00004CC0: 44 69 72 65 63 74 33 44 0B 14 0B 00 42 10 00 00  Direct3D....B...
  00004CD0: 0D 47 65 74 44 65 76 69 63 65 43 61 70 73 F2 F1  .GetDeviceCaps..
  00004CE0: 0B 14 0B 00 44 10 00 00 0E 47 65 74 44 69 73 70  ....D....GetDisp
  00004CF0: 6C 61 79 4D 6F 64 65 F1 0B 14 0B 00 48 10 00 00  layMode.....H...
  00004D00: 15 47 65 74 43 72 65 61 74 69 6F 6E 50 61 72 61  .GetCreationPara
  00004D10: 6D 65 74 65 72 73 F2 F1 0B 14 0B 00 4A 10 00 00  meters......J...
  00004D20: 05 52 65 73 65 74 F2 F1 0B 14 0B 00 4F 10 00 00  .Reset......O...
  00004D30: 07 50 72 65 73 65 6E 74 0B 14 0B 00 54 10 00 00  .Present....T...
  00004D40: 0D 47 65 74 42 61 63 6B 42 75 66 66 65 72 F2 F1  .GetBackBuffer..
  00004D50: 0B 14 0B 00 58 10 00 00 0F 47 65 74 52 61 73 74  ....X....GetRast
  00004D60: 65 72 53 74 61 74 75 73 0B 14 0B 00 5D 10 00 00  erStatus....]...
  00004D70: 0C 53 65 74 47 61 6D 6D 61 52 61 6D 70 F3 F2 F1  .SetGammaRamp...
  00004D80: 0B 14 0B 00 60 10 00 00 0C 47 65 74 47 61 6D 6D  ....`....GetGamm
  00004D90: 61 52 61 6D 70 F3 F2 F1 0B 14 0B 00 65 10 00 00  aRamp.......e...
  00004DA0: 0D 43 72 65 61 74 65 54 65 78 74 75 72 65 F2 F1  .CreateTexture..
  00004DB0: 0B 14 0B 00 6A 10 00 00 13 43 72 65 61 74 65 56  ....j....CreateV
  00004DC0: 6F 6C 75 6D 65 54 65 78 74 75 72 65 0B 14 0B 00  olumeTexture....
  00004DD0: 6F 10 00 00 11 43 72 65 61 74 65 43 75 62 65 54  o....CreateCubeT
  00004DE0: 65 78 74 75 72 65 F2 F1 0B 14 0B 00 74 10 00 00  exture......t...
  00004DF0: 12 43 72 65 61 74 65 56 65 72 74 65 78 42 75 66  .CreateVertexBuf
  00004E00: 66 65 72 F1 0B 14 0B 00 79 10 00 00 11 43 72 65  fer.....y....Cre
  00004E10: 61 74 65 49 6E 64 65 78 42 75 66 66 65 72 F2 F1  ateIndexBuffer..
  00004E20: 0B 14 0B 00 7B 10 00 00 12 43 72 65 61 74 65 52  ....{....CreateR
  00004E30: 65 6E 64 65 72 54 61 72 67 65 74 F1 0B 14 0B 00  enderTarget.....
  00004E40: 7D 10 00 00 19 43 72 65 61 74 65 44 65 70 74 68  }....CreateDepth
  00004E50: 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F2 F1  StencilSurface..
  00004E60: 0B 14 0B 00 7F 10 00 00 12 43 72 65 61 74 65 49  .........CreateI
  00004E70: 6D 61 67 65 53 75 72 66 61 63 65 F1 0B 14 0B 00  mageSurface.....
  00004E80: 84 10 00 00 09 43 6F 70 79 52 65 63 74 73 F2 F1  .....CopyRects..
  00004E90: 0B 14 0B 00 86 10 00 00 0F 53 65 74 52 65 6E 64  .........SetRend
  00004EA0: 65 72 54 61 72 67 65 74 0B 14 0B 00 88 10 00 00  erTarget........
  00004EB0: 0F 47 65 74 52 65 6E 64 65 72 54 61 72 67 65 74  .GetRenderTarget
  00004EC0: 0B 14 0B 00 88 10 00 00 16 47 65 74 44 65 70 74  .........GetDept
  00004ED0: 68 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F1  hStencilSurface.
  00004EE0: 0B 14 0B 00 89 10 00 00 0A 42 65 67 69 6E 53 63  .........BeginSc
  00004EF0: 65 6E 65 F1 0B 14 0B 00 89 10 00 00 08 45 6E 64  ene..........End
  00004F00: 53 63 65 6E 65 F3 F2 F1 0B 14 0B 00 8E 10 00 00  Scene...........
  00004F10: 05 43 6C 65 61 72 F2 F1 0B 14 0B 00 95 10 00 00  .Clear..........
  00004F20: 0C 53 65 74 54 72 61 6E 73 66 6F 72 6D F3 F2 F1  .SetTransform...
  00004F30: 0B 14 0B 00 98 10 00 00 0C 47 65 74 54 72 61 6E  .........GetTran
  00004F40: 73 66 6F 72 6D F3 F2 F1 0B 14 0B 00 95 10 00 00  sform...........
  00004F50: 11 4D 75 6C 74 69 70 6C 79 54 72 61 6E 73 66 6F  .MultiplyTransfo
  00004F60: 72 6D F2 F1 0B 14 0B 00 9D 10 00 00 0B 53 65 74  rm...........Set
  00004F70: 56 69 65 77 70 6F 72 74 0B 14 0B 00 A0 10 00 00  Viewport........
  00004F80: 0B 47 65 74 56 69 65 77 70 6F 72 74 0B 14 0B 00  .GetViewport....
  00004F90: A5 10 00 00 0B 53 65 74 4D 61 74 65 72 69 61 6C  .....SetMaterial
  00004FA0: 0B 14 0B 00 A8 10 00 00 0B 47 65 74 4D 61 74 65  .........GetMate
  00004FB0: 72 69 61 6C 0B 14 0B 00 AD 10 00 00 08 53 65 74  rial.........Set
  00004FC0: 4C 69 67 68 74 F3 F2 F1 0B 14 0B 00 B0 10 00 00  Light...........
  00004FD0: 08 47 65 74 4C 69 67 68 74 F3 F2 F1 0B 14 0B 00  .GetLight.......
  00004FE0: B2 10 00 00 0B 4C 69 67 68 74 45 6E 61 62 6C 65  .....LightEnable
  00004FF0: 0B 14 0B 00 B4 10 00 00 0E 47 65 74 4C 69 67 68  .........GetLigh
  00005000: 74 45 6E 61 62 6C 65 F1 0B 14 0B 00 B8 10 00 00  tEnable.........
  00005010: 0E 53 65 74 52 65 6E 64 65 72 53 74 61 74 65 F1  .SetRenderState.
  00005020: 0B 14 0B 00 BA 10 00 00 0E 47 65 74 52 65 6E 64  .........GetRend
  00005030: 65 72 53 74 61 74 65 F1 0B 14 0B 00 BC 10 00 00  erState.........
  00005040: 0F 41 70 70 6C 79 53 74 61 74 65 42 6C 6F 63 6B  .ApplyStateBlock
  00005050: 0B 14 0B 00 BC 10 00 00 11 43 61 70 74 75 72 65  .........Capture
  00005060: 53 74 61 74 65 42 6C 6F 63 6B F2 F1 0B 14 0B 00  StateBlock......
  00005070: BC 10 00 00 10 44 65 6C 65 74 65 53 74 61 74 65  .....DeleteState
  00005080: 42 6C 6F 63 6B F3 F2 F1 0B 14 0B 00 C0 10 00 00  Block...........
  00005090: 10 43 72 65 61 74 65 53 74 61 74 65 42 6C 6F 63  .CreateStateBloc
  000050A0: 6B F3 F2 F1 0B 14 0B 00 C5 10 00 00 0A 47 65 74  k............Get
  000050B0: 54 65 78 74 75 72 65 F1 0B 14 0B 00 C7 10 00 00  Texture.........
  000050C0: 0A 53 65 74 54 65 78 74 75 72 65 F1 0B 14 0B 00  .SetTexture.....
  000050D0: CB 10 00 00 14 47 65 74 54 65 78 74 75 72 65 53  .....GetTextureS
  000050E0: 74 61 67 65 53 74 61 74 65 F3 F2 F1 0B 14 0B 00  tageState.......
  000050F0: CD 10 00 00 14 53 65 74 54 65 78 74 75 72 65 53  .....SetTextureS
  00005100: 74 61 67 65 53 74 61 74 65 F3 F2 F1 0B 14 0B 00  tageState.......
  00005110: D1 10 00 00 0D 44 72 61 77 50 72 69 6D 69 74 69  .....DrawPrimiti
  00005120: 76 65 F2 F1 0B 14 0B 00 D3 10 00 00 14 44 72 61  ve...........Dra
  00005130: 77 49 6E 64 65 78 65 64 50 72 69 6D 69 74 69 76  wIndexedPrimitiv
  00005140: 65 F3 F2 F1 0B 14 0B 00 D7 10 00 00 0F 44 72 61  e............Dra
  00005150: 77 50 72 69 6D 69 74 69 76 65 55 50 0B 14 0B 00  wPrimitiveUP....
  00005160: D9 10 00 00 16 44 72 61 77 49 6E 64 65 78 65 64  .....DrawIndexed
  00005170: 50 72 69 6D 69 74 69 76 65 55 50 F1 0B 14 0B 00  PrimitiveUP.....
  00005180: DD 10 00 00 12 43 72 65 61 74 65 56 65 72 74 65  .....CreateVerte
  00005190: 78 53 68 61 64 65 72 F1 0B 14 0B 00 BC 10 00 00  xShader.........
  000051A0: 0F 53 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .SetVertexShader
  000051B0: 0B 14 0B 00 DF 10 00 00 0F 47 65 74 56 65 72 74  .........GetVert
  000051C0: 65 78 53 68 61 64 65 72 0B 14 0B 00 BC 10 00 00  exShader........
  000051D0: 12 44 65 6C 65 74 65 56 65 72 74 65 78 53 68 61  .DeleteVertexSha
  000051E0: 64 65 72 F1 0B 14 0B 00 E1 10 00 00 17 53 65 74  der..........Set
  000051F0: 56 65 72 74 65 78 53 68 61 64 65 72 43 6F 6E 73  VertexShaderCons
  00005200: 74 61 6E 74 0B 14 0B 00 E3 10 00 00 17 47 65 74  tant.........Get
  00005210: 56 65 72 74 65 78 53 68 61 64 65 72 43 6F 6E 73  VertexShaderCons
  00005220: 74 61 6E 74 0B 14 0B 00 E5 10 00 00 1A 47 65 74  tant.........Get
  00005230: 56 65 72 74 65 78 53 68 61 64 65 72 44 65 63 6C  VertexShaderDecl
  00005240: 61 72 61 74 69 6F 6E F1 0B 14 0B 00 E5 10 00 00  aration.........
  00005250: 17 47 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .GetVertexShader
  00005260: 46 75 6E 63 74 69 6F 6E 0B 14 0B 00 E7 10 00 00  Function........
  00005270: 0F 53 65 74 53 74 72 65 61 6D 53 6F 75 72 63 65  .SetStreamSource
  00005280: 0B 14 0B 00 E9 10 00 00 0F 47 65 74 53 74 72 65  .........GetStre
  00005290: 61 6D 53 6F 75 72 63 65 0B 14 0B 00 EB 10 00 00  amSource........
  000052A0: 0A 53 65 74 49 6E 64 69 63 65 73 F1 0B 14 0B 00  .SetIndices.....
  000052B0: ED 10 00 00 0A 47 65 74 49 6E 64 69 63 65 73 F1  .....GetIndices.
  000052C0: 0B 14 0B 00 F2 10 00 00 11 43 72 65 61 74 65 50  .........CreateP
  000052D0: 69 78 65 6C 53 68 61 64 65 72 F2 F1 0B 14 0B 00  ixelShader......
  000052E0: BC 10 00 00 0E 53 65 74 50 69 78 65 6C 53 68 61  .....SetPixelSha
  000052F0: 64 65 72 F1 0B 14 0B 00 F4 10 00 00 15 53 65 74  der..........Set
  00005300: 50 69 78 65 6C 53 68 61 64 65 72 50 72 6F 67 72  PixelShaderProgr
  00005310: 61 6D F2 F1 0B 14 0B 00 DF 10 00 00 0E 47 65 74  am...........Get
  00005320: 50 69 78 65 6C 53 68 61 64 65 72 F1 0B 14 0B 00  PixelShader.....
  00005330: BC 10 00 00 11 44 65 6C 65 74 65 50 69 78 65 6C  .....DeletePixel
  00005340: 53 68 61 64 65 72 F2 F1 0B 14 0B 00 F6 10 00 00  Shader..........
  00005350: 16 53 65 74 50 69 78 65 6C 53 68 61 64 65 72 43  .SetPixelShaderC
  00005360: 6F 6E 73 74 61 6E 74 F1 0B 14 0B 00 F8 10 00 00  onstant.........
  00005370: 16 47 65 74 50 69 78 65 6C 53 68 61 64 65 72 43  .GetPixelShaderC
  00005380: 6F 6E 73 74 61 6E 74 F1 0B 14 0B 00 FB 10 00 00  onstant.........
  00005390: 16 47 65 74 50 69 78 65 6C 53 68 61 64 65 72 46  .GetPixelShaderF
  000053A0: 75 6E 63 74 69 6F 6E F1 0B 14 0B 00 02 11 00 00  unction.........
  000053B0: 0D 44 72 61 77 52 65 63 74 50 61 74 63 68 F2 F1  .DrawRectPatch..
  000053C0: 0B 14 0B 00 07 11 00 00 0C 44 72 61 77 54 72 69  .........DrawTri
  000053D0: 50 61 74 63 68 F3 F2 F1 0B 14 0B 00 08 11 00 00  Patch...........
  000053E0: 0B 44 65 6C 65 74 65 50 61 74 63 68 0B 14 0B 00  .DeletePatch....
  000053F0: 0A 11 00 00 15 53 65 74 53 68 61 64 65 72 43 6F  .....SetShaderCo
  00005400: 6E 73 74 61 6E 74 4D 6F 64 65 F2 F1 0B 14 0B 00  nstantMode......
  00005410: 0C 11 00 00 15 47 65 74 53 68 61 64 65 72 43 6F  .....GetShaderCo
  00005420: 6E 73 74 61 6E 74 4D 6F 64 65 F2 F1 0B 14 0B 00  nstantMode......
  00005430: 0D 11 00 00 10 4C 6F 61 64 56 65 72 74 65 78 53  .....LoadVertexS
  00005440: 68 61 64 65 72 F3 F2 F1 0B 14 0B 00 0F 11 00 00  hader...........
  00005450: 17 4C 6F 61 64 56 65 72 74 65 78 53 68 61 64 65  .LoadVertexShade
  00005460: 72 50 72 6F 67 72 61 6D 0B 14 0B 00 0D 11 00 00  rProgram........
  00005470: 12 53 65 6C 65 63 74 56 65 72 74 65 78 53 68 61  .SelectVertexSha
  00005480: 64 65 72 F1 0B 14 0B 00 13 11 00 00 18 53 65 6C  der..........Sel
  00005490: 65 63 74 56 65 72 74 65 78 53 68 61 64 65 72 44  ectVertexShaderD
  000054A0: 69 72 65 63 74 F3 F2 F1 0B 14 0B 00 15 11 00 00  irect...........
  000054B0: 14 52 75 6E 56 65 72 74 65 78 53 74 61 74 65 53  .RunVertexStateS
  000054C0: 68 61 64 65 72 F3 F2 F1 0B 14 0B 00 17 11 00 00  hader...........
  000054D0: 13 47 65 74 56 65 72 74 65 78 53 68 61 64 65 72  .GetVertexShader
  000054E0: 53 69 7A 65 0B 14 0B 00 19 11 00 00 13 47 65 74  Size.........Get
  000054F0: 56 65 72 74 65 78 53 68 61 64 65 72 54 79 70 65  VertexShaderType
  00005500: 0B 14 0B 00 D1 10 00 00 0C 44 72 61 77 56 65 72  .........DrawVer
  00005510: 74 69 63 65 73 F3 F2 F1 0B 14 0B 00 1D 11 00 00  tices...........
  00005520: 13 44 72 61 77 49 6E 64 65 78 65 64 56 65 72 74  .DrawIndexedVert
  00005530: 69 63 65 73 0B 14 0B 00 D7 10 00 00 0E 44 72 61  ices.........Dra
  00005540: 77 56 65 72 74 69 63 65 73 55 50 F1 0B 14 0B 00  wVerticesUP.....
  00005550: 1F 11 00 00 15 44 72 61 77 49 6E 64 65 78 65 64  .....DrawIndexed
  00005560: 56 65 72 74 69 63 65 73 55 50 F2 F1 0B 14 0B 00  VerticesUP......
  00005570: 21 11 00 00 10 50 72 69 6D 65 56 65 72 74 65 78  !....PrimeVertex
  00005580: 43 61 63 68 65 F3 F2 F1 0B 14 0B 00 28 11 00 00  Cache.......(...
  00005590: 0D 43 72 65 61 74 65 50 61 6C 65 74 74 65 F2 F1  .CreatePalette..
  000055A0: 0B 14 0B 00 2A 11 00 00 0A 47 65 74 50 61 6C 65  ....*....GetPale
  000055B0: 74 74 65 F1 0B 14 0B 00 2C 11 00 00 0A 53 65 74  tte.....,....Set
  000055C0: 50 61 6C 65 74 74 65 F1 0B 14 0B 00 CD 10 00 00  Palette.........
  000055D0: 1D 53 65 74 54 65 78 74 75 72 65 53 74 61 67 65  .SetTextureStage
  000055E0: 53 74 61 74 65 4E 6F 74 49 6E 6C 69 6E 65 F2 F1  StateNotInline..
  000055F0: 0B 14 0B 00 B8 10 00 00 17 53 65 74 52 65 6E 64  .........SetRend
  00005600: 65 72 53 74 61 74 65 4E 6F 74 49 6E 6C 69 6E 65  erStateNotInline
  00005610: 0B 14 0B 00 A5 10 00 00 0F 53 65 74 42 61 63 6B  .........SetBack
  00005620: 4D 61 74 65 72 69 61 6C 0B 14 0B 00 A8 10 00 00  Material........
  00005630: 0F 47 65 74 42 61 63 6B 4D 61 74 65 72 69 61 6C  .GetBackMaterial
  00005640: 0B 14 0B 00 2E 11 00 00 0D 55 70 64 61 74 65 4F  .........UpdateO
  00005650: 76 65 72 6C 61 79 F2 F1 0B 14 0B 00 30 11 00 00  verlay......0...
  00005660: 0D 45 6E 61 62 6C 65 4F 76 65 72 6C 61 79 F2 F1  .EnableOverlay..
  00005670: 0B 14 0B 00 89 10 00 00 13 42 65 67 69 6E 56 69  .........BeginVi
  00005680: 73 69 62 69 6C 69 74 79 54 65 73 74 0B 14 0B 00  sibilityTest....
  00005690: BC 10 00 00 11 45 6E 64 56 69 73 69 62 69 6C 69  .....EndVisibili
  000056A0: 74 79 54 65 73 74 F2 F1 0B 14 0B 00 32 11 00 00  tyTest......2...
  000056B0: 17 47 65 74 56 69 73 69 62 69 6C 69 74 79 54 65  .GetVisibilityTe
  000056C0: 73 74 52 65 73 75 6C 74 0B 14 0B 00 33 11 00 00  stResult....3...
  000056D0: 16 47 65 74 4F 76 65 72 6C 61 79 55 70 64 61 74  .GetOverlayUpdat
  000056E0: 65 53 74 61 74 75 73 F1 0B 14 0B 00 37 11 00 00  eStatus.....7...
  000056F0: 15 47 65 74 44 69 73 70 6C 61 79 46 69 65 6C 64  .GetDisplayField
  00005700: 53 74 61 74 75 73 F2 F1 0B 14 0B 00 39 11 00 00  Status......9...
  00005710: 0F 53 65 74 56 65 72 74 65 78 44 61 74 61 32 66  .SetVertexData2f
  00005720: 0B 14 0B 00 3B 11 00 00 0F 53 65 74 56 65 72 74  ....;....SetVert
  00005730: 65 78 44 61 74 61 34 66 0B 14 0B 00 3D 11 00 00  exData4f....=...
  00005740: 0F 53 65 74 56 65 72 74 65 78 44 61 74 61 32 73  .SetVertexData2s
  00005750: 0B 14 0B 00 3F 11 00 00 0F 53 65 74 56 65 72 74  ....?....SetVert
  00005760: 65 78 44 61 74 61 34 73 0B 14 0B 00 41 11 00 00  exData4s....A...
  00005770: 10 53 65 74 56 65 72 74 65 78 44 61 74 61 34 75  .SetVertexData4u
  00005780: 62 F3 F2 F1 0B 14 0B 00 43 11 00 00 12 53 65 74  b.......C....Set
  00005790: 56 65 72 74 65 78 44 61 74 61 43 6F 6C 6F 72 F1  VertexDataColor.
  000057A0: 0B 14 0B 00 45 11 00 00 05 42 65 67 69 6E F2 F1  ....E....Begin..
  000057B0: 0B 14 0B 00 89 10 00 00 03 45 6E 64 0B 14 0B 00  .........End....
  000057C0: 4A 11 00 00 0B 43 72 65 61 74 65 46 69 78 75 70  J....CreateFixup
  000057D0: 0B 14 0B 00 4F 11 00 00 10 43 72 65 61 74 65 50  ....O....CreateP
  000057E0: 75 73 68 42 75 66 66 65 72 F3 F2 F1 0B 14 0B 00  ushBuffer.......
  000057F0: 51 11 00 00 0F 42 65 67 69 6E 50 75 73 68 42 75  Q....BeginPushBu
  00005800: 66 66 65 72 0B 14 0B 00 89 10 00 00 0D 45 6E 64  ffer.........End
  00005810: 50 75 73 68 42 75 66 66 65 72 F2 F1 0B 14 0B 00  PushBuffer......
  00005820: 53 11 00 00 0D 52 75 6E 50 75 73 68 42 75 66 66  S....RunPushBuff
  00005830: 65 72 F2 F1 0B 14 0B 00 DF 10 00 00 13 47 65 74  er...........Get
  00005840: 50 75 73 68 42 75 66 66 65 72 4F 66 66 73 65 74  PushBufferOffset
  00005850: 0B 14 0B 00 89 10 00 00 03 4E 6F 70 0B 14 0B 00  .........Nop....
  00005860: 55 11 00 00 1B 47 65 74 50 72 6F 6A 65 63 74 69  U....GetProjecti
  00005870: 6F 6E 56 69 65 77 70 6F 72 74 4D 61 74 72 69 78  onViewportMatrix
  00005880: 0B 14 0B 00 57 11 00 00 0C 53 65 74 4D 6F 64 65  ....W....SetMode
  00005890: 6C 56 69 65 77 F3 F2 F1 0B 14 0B 00 55 11 00 00  lView.......U...
  000058A0: 0C 47 65 74 4D 6F 64 65 6C 56 69 65 77 F3 F2 F1  .GetModelView...
  000058B0: 0B 14 0B 00 59 11 00 00 17 53 65 74 56 65 72 74  ....Y....SetVert
  000058C0: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  000058D0: 0B 14 0B 00 5B 11 00 00 17 47 65 74 56 65 72 74  ....[....GetVert
  000058E0: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  000058F0: 0B 14 0B 00 60 11 00 00 14 53 65 74 56 65 72 74  ....`....SetVert
  00005900: 65 78 53 68 61 64 65 72 49 6E 70 75 74 F3 F2 F1  exShaderInput...
  00005910: 0B 14 0B 00 62 11 00 00 1A 53 65 74 56 65 72 74  ....b....SetVert
  00005920: 65 78 53 68 61 64 65 72 49 6E 70 75 74 44 69 72  exShaderInputDir
  00005930: 65 63 74 F1 0B 14 0B 00 65 11 00 00 14 47 65 74  ect.....e....Get
  00005940: 56 65 72 74 65 78 53 68 61 64 65 72 49 6E 70 75  VertexShaderInpu
  00005950: 74 F3 F2 F1 0B 14 0B 00 C7 10 00 00 0D 53 77 69  t............Swi
  00005960: 74 63 68 54 65 78 74 75 72 65 F2 F1 0B 14 0B 00  tchTexture......
  00005970: 89 10 00 00 07 53 75 73 70 65 6E 64 0B 14 0B 00  .....Suspend....
  00005980: 30 11 00 00 06 52 65 73 75 6D 65 F1 0B 14 0B 00  0....Resume.....
  00005990: 67 11 00 00 0B 53 65 74 53 63 69 73 73 6F 72 73  g....SetScissors
  000059A0: 0B 14 0B 00 6A 11 00 00 0B 47 65 74 53 63 69 73  ....j....GetScis
  000059B0: 73 6F 72 73 0B 14 0B 00 6F 11 00 00 07 53 65 74  sors....o....Set
  000059C0: 54 69 6C 65 0B 14 0B 00 72 11 00 00 07 47 65 74  Tile....r....Get
  000059D0: 54 69 6C 65 0B 14 0B 00 73 11 00 00 16 47 65 74  Tile....s....Get
  000059E0: 54 69 6C 65 43 6F 6D 70 72 65 73 73 69 6F 6E 54  TileCompressionT
  000059F0: 61 67 73 F1 0B 14 0B 00 75 11 00 00 19 53 65 74  ags.....u....Set
  00005A00: 54 69 6C 65 43 6F 6D 70 72 65 73 73 69 6F 6E 54  TileCompressionT
  00005A10: 61 67 42 69 74 73 F2 F1 0B 14 0B 00 77 11 00 00  agBits......w...
  00005A20: 19 47 65 74 54 69 6C 65 43 6F 6D 70 72 65 73 73  .GetTileCompress
  00005A30: 69 6F 6E 54 61 67 42 69 74 73 F2 F1 0B 14 0B 00  ionTagBits......
  00005A40: 7A 11 00 00 09 42 65 67 69 6E 50 75 73 68 F2 F1  z....BeginPush..
  00005A50: 0B 14 0B 00 DF 10 00 00 07 45 6E 64 50 75 73 68  .........EndPush
  00005A60: 0B 14 0B 00 33 11 00 00 06 49 73 42 75 73 79 F1  ....3....IsBusy.
  00005A70: 0B 14 0B 00 7B 11 00 00 0E 42 6C 6F 63 6B 55 6E  ....{....BlockUn
  00005A80: 74 69 6C 49 64 6C 65 F1 0B 14 0B 00 7B 11 00 00  tilIdle.....{...
  00005A90: 0E 4B 69 63 6B 50 75 73 68 42 75 66 66 65 72 F1  .KickPushBuffer.
  00005AA0: 0B 14 0B 00 82 11 00 00 18 53 65 74 56 65 72 74  .........SetVert
  00005AB0: 69 63 61 6C 42 6C 61 6E 6B 43 61 6C 6C 62 61 63  icalBlankCallbac
  00005AC0: 6B F3 F2 F1 0B 14 0B 00 89 11 00 00 0F 53 65 74  k............Set
  00005AD0: 53 77 61 70 43 61 6C 6C 62 61 63 6B 0B 14 0B 00  SwapCallback....
  00005AE0: 7B 11 00 00 17 42 6C 6F 63 6B 55 6E 74 69 6C 56  {....BlockUntilV
  00005AF0: 65 72 74 69 63 61 6C 42 6C 61 6E 6B 0B 14 0B 00  erticalBlank....
  00005B00: 8A 11 00 00 0B 49 6E 73 65 72 74 46 65 6E 63 65  .....InsertFence
  00005B10: 0B 14 0B 00 8B 11 00 00 0E 49 73 46 65 6E 63 65  .........IsFence
  00005B20: 50 65 6E 64 69 6E 67 F1 0B 14 0B 00 8C 11 00 00  Pending.........
  00005B30: 0C 42 6C 6F 63 6B 4F 6E 46 65 6E 63 65 F3 F2 F1  .BlockOnFence...
  00005B40: 0B 14 0B 00 92 11 00 00 0E 49 6E 73 65 72 74 43  .........InsertC
  00005B50: 61 6C 6C 62 61 63 6B F1 0B 14 0B 00 7B 11 00 00  allback.....{...
  00005B60: 10 46 6C 75 73 68 56 65 72 74 65 78 43 61 63 68  .FlushVertexCach
  00005B70: 65 F3 F2 F1 0B 14 0B 00 8C 11 00 00 10 53 65 74  e............Set
  00005B80: 46 6C 69 63 6B 65 72 46 69 6C 74 65 72 F3 F2 F1  FlickerFilter...
  00005B90: 0B 14 0B 00 93 11 00 00 14 53 65 74 53 6F 66 74  .........SetSoft
  00005BA0: 44 69 73 70 6C 61 79 46 69 6C 74 65 72 F3 F2 F1  DisplayFilter...
  00005BB0: 0B 14 0B 00 9B 11 00 00 11 53 65 74 43 6F 70 79  .........SetCopy
  00005BC0: 52 65 63 74 73 53 74 61 74 65 F2 F1 0B 14 0B 00  RectsState......
  00005BD0: 9F 11 00 00 11 47 65 74 43 6F 70 79 52 65 63 74  .....GetCopyRect
  00005BE0: 73 53 74 61 74 65 F2 F1 0B 14 0B 00 89 10 00 00  sState..........
  00005BF0: 0E 50 65 72 73 69 73 74 44 69 73 70 6C 61 79 F1  .PersistDisplay.
  00005C00: 0B 14 0B 00 88 10 00 00 13 47 65 74 50 65 72 73  .........GetPers
  00005C10: 69 73 74 65 64 53 75 72 66 61 63 65 0B 14 0B 00  istedSurface....
  00005C20: A0 11 00 00 04 53 77 61 70 F3 F2 F1 0B 14 0B 00  .....Swap.......
  00005C30: A2 11 00 00 12 53 65 74 42 61 63 6B 42 75 66 66  .....SetBackBuff
  00005C40: 65 72 53 63 61 6C 65 F1 0B 14 0B 00 A4 11 00 00  erScale.........
  00005C50: 12 47 65 74 42 61 63 6B 42 75 66 66 65 72 53 63  .GetBackBufferSc
  00005C60: 61 6C 65 F1 0B 14 0B 00 A2 11 00 00 14 53 65 74  ale..........Set
  00005C70: 53 63 72 65 65 6E 53 70 61 63 65 4F 66 66 73 65  ScreenSpaceOffse
  00005C80: 74 F3 F2 F1 0B 14 0B 00 A4 11 00 00 14 47 65 74  t............Get
  00005C90: 53 63 72 65 65 6E 53 70 61 63 65 4F 66 66 73 65  ScreenSpaceOffse
  00005CA0: 74 F3 F2 F1 0B 14 0B 00 A6 11 00 00 10 53 65 74  t............Set
  00005CB0: 4F 76 65 72 73 63 61 6E 43 6F 6C 6F 72 F3 F2 F1  OverscanColor...
  00005CC0: 0B 14 0B 00 A7 11 00 00 10 47 65 74 4F 76 65 72  .........GetOver
  00005CD0: 73 63 61 6E 43 6F 6C 6F 72 F3 F2 F1 0B 14 0B 00  scanColor.......
  00005CE0: A0 11 00 00 0E 53 65 74 44 65 62 75 67 4D 61 72  .....SetDebugMar
  00005CF0: 6B 65 72 F1 0B 14 0B 00 8A 11 00 00 0E 47 65 74  ker..........Get
  00005D00: 44 65 62 75 67 4D 61 72 6B 65 72 F1 1E 00 05 10  DebugMarker.....
  00005D10: A4 00 00 00 A8 11 00 00 00 00 00 00 00 00 00 00  ................
  00005D20: 01 00 09 44 33 44 44 65 76 69 63 65 9A 00 03 12  ...D3DDevice....
  00005D30: 03 04 03 00 01 00 15 44 33 44 53 57 41 50 45 46  .......D3DSWAPEF
  00005D40: 46 45 43 54 5F 44 49 53 43 41 52 44 03 04 03 00  FECT_DISCARD....
  00005D50: 02 00 12 44 33 44 53 57 41 50 45 46 46 45 43 54  ...D3DSWAPEFFECT
  00005D60: 5F 46 4C 49 50 F3 F2 F1 03 04 03 00 03 00 12 44  _FLIP..........D
  00005D70: 33 44 53 57 41 50 45 46 46 45 43 54 5F 43 4F 50  3DSWAPEFFECT_COP
  00005D80: 59 F3 F2 F1 03 04 03 00 04 00 18 44 33 44 53 57  Y..........D3DSW
  00005D90: 41 50 45 46 46 45 43 54 5F 43 4F 50 59 5F 56 53  APEFFECT_COPY_VS
  00005DA0: 59 4E 43 F1 03 04 03 00 04 80 FF FF FF 7F 19 44  YNC............D
  00005DB0: 33 44 53 57 41 50 45 46 46 45 43 54 5F 46 4F 52  3DSWAPEFFECT_FOR
  00005DC0: 43 45 5F 44 57 4F 52 44 1E 00 07 10 05 00 00 00  CE_DWORD........
  00005DD0: 74 00 00 00 AA 11 00 00 0E 5F 44 33 44 53 57 41  t........_D3DSWA
  00005DE0: 50 45 46 46 45 43 54 F1 1E 00 05 10 00 00 80 00  PEFFECT.........
  00005DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 48  ...............H
  00005E00: 57 4E 44 5F 5F F3 F2 F1 0A 00 02 10 AC 11 00 00  WND__...........
  00005E10: 0A 00 00 00 0E 00 03 10 51 10 00 00 11 00 00 00  ........Q.......
  00005E20: 0C 00 00 F1 BA 01 03 12 05 14 03 00 75 00 00 00  ............u...
  00005E30: 00 00 0F 42 61 63 6B 42 75 66 66 65 72 57 69 64  ...BackBufferWid
  00005E40: 74 68 F2 F1 05 14 03 00 75 00 00 00 04 00 10 42  th......u......B
  00005E50: 61 63 6B 42 75 66 66 65 72 48 65 69 67 68 74 F1  ackBufferHeight.
  00005E60: 05 14 03 00 1B 10 00 00 08 00 10 42 61 63 6B 42  ...........BackB
  00005E70: 75 66 66 65 72 46 6F 72 6D 61 74 F1 05 14 03 00  ufferFormat.....
  00005E80: 75 00 00 00 0C 00 0F 42 61 63 6B 42 75 66 66 65  u......BackBuffe
  00005E90: 72 43 6F 75 6E 74 F2 F1 05 14 03 00 22 00 00 00  rCount......"...
  00005EA0: 10 00 0F 4D 75 6C 74 69 53 61 6D 70 6C 65 54 79  ...MultiSampleTy
  00005EB0: 70 65 F2 F1 05 14 03 00 AB 11 00 00 14 00 0A 53  pe.............S
  00005EC0: 77 61 70 45 66 66 65 63 74 F3 F2 F1 05 14 03 00  wapEffect.......
  00005ED0: AD 11 00 00 18 00 0D 68 44 65 76 69 63 65 57 69  .......hDeviceWi
  00005EE0: 6E 64 6F 77 05 14 03 00 74 00 00 00 1C 00 08 57  ndow....t......W
  00005EF0: 69 6E 64 6F 77 65 64 F1 05 14 03 00 74 00 00 00  indowed.....t...
  00005F00: 20 00 16 45 6E 61 62 6C 65 41 75 74 6F 44 65 70   ..EnableAutoDep
  00005F10: 74 68 53 74 65 6E 63 69 6C F3 F2 F1 05 14 03 00  thStencil.......
  00005F20: 1B 10 00 00 24 00 16 41 75 74 6F 44 65 70 74 68  ....$..AutoDepth
  00005F30: 53 74 65 6E 63 69 6C 46 6F 72 6D 61 74 F3 F2 F1  StencilFormat...
  00005F40: 05 14 03 00 22 00 00 00 28 00 05 46 6C 61 67 73  ...."...(..Flags
  00005F50: 05 14 03 00 75 00 00 00 2C 00 1A 46 75 6C 6C 53  ....u...,..FullS
  00005F60: 63 72 65 65 6E 5F 52 65 66 72 65 73 68 52 61 74  creen_RefreshRat
  00005F70: 65 49 6E 48 7A F3 F2 F1 05 14 03 00 75 00 00 00  eInHz.......u...
  00005F80: 30 00 1F 46 75 6C 6C 53 63 72 65 65 6E 5F 50 72  0..FullScreen_Pr
  00005F90: 65 73 65 6E 74 61 74 69 6F 6E 49 6E 74 65 72 76  esentationInterv
  00005FA0: 61 6C F2 F1 05 14 03 00 AE 11 00 00 34 00 0E 42  al..........4..B
  00005FB0: 75 66 66 65 72 53 75 72 66 61 63 65 73 F3 F2 F1  ufferSurfaces...
  00005FC0: 05 14 03 00 51 10 00 00 40 00 13 44 65 70 74 68  ....Q...@..Depth
  00005FD0: 53 74 65 6E 63 69 6C 53 75 72 66 61 63 65 F2 F1  StencilSurface..
  00005FE0: 2E 00 05 10 0F 00 00 00 AF 11 00 00 00 00 00 00  ................
  00005FF0: 00 00 00 00 44 00 17 5F 44 33 44 50 52 45 53 45  ....D.._D3DPRESE
  00006000: 4E 54 5F 50 41 52 41 4D 45 54 45 52 53 5F F2 F1  NT_PARAMETERS_..
  00006010: 66 00 03 12 05 14 03 00 75 00 00 00 00 00 0E 41  f.......u......A
  00006020: 64 61 70 74 65 72 4F 72 64 69 6E 61 6C F3 F2 F1  dapterOrdinal...
  00006030: 05 14 03 00 19 10 00 00 04 00 0A 44 65 76 69 63  ...........Devic
  00006040: 65 54 79 70 65 F3 F2 F1 05 14 03 00 AD 11 00 00  eType...........
  00006050: 08 00 0C 68 46 6F 63 75 73 57 69 6E 64 6F 77 F1  ...hFocusWindow.
  00006060: 05 14 03 00 22 00 00 00 0C 00 0D 42 65 68 61 76  ...."......Behav
  00006070: 69 6F 72 46 6C 61 67 73 36 00 05 10 04 00 00 00  iorFlags6.......
  00006080: B1 11 00 00 00 00 00 00 00 00 00 00 10 00 1E 5F  ..............._
  00006090: 44 33 44 44 45 56 49 43 45 5F 43 52 45 41 54 49  D3DDEVICE_CREATI
  000060A0: 4F 4E 5F 50 41 52 41 4D 45 54 45 52 53 F3 F2 F1  ON_PARAMETERS...
  000060B0: 46 00 03 12 05 14 03 00 12 00 00 00 00 00 04 6C  F..............l
  000060C0: 65 66 74 F1 05 14 03 00 12 00 00 00 04 00 03 74  eft............t
  000060D0: 6F 70 F2 F1 05 14 03 00 12 00 00 00 08 00 05 72  op.............r
  000060E0: 69 67 68 74 05 14 03 00 12 00 00 00 0C 00 06 62  ight...........b
  000060F0: 6F 74 74 6F 6D F3 F2 F1 1E 00 05 10 04 00 00 00  ottom...........
  00006100: B3 11 00 00 00 00 00 00 00 00 00 00 10 00 07 74  ...............t
  00006110: 61 67 52 45 43 54 F2 F1 26 00 05 10 00 00 80 00  agRECT..&.......
  00006120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 44  ...............D
  00006130: 33 44 50 69 78 65 6C 43 6F 6E 74 61 69 6E 65 72  3DPixelContainer
  00006140: 0A 00 01 12 01 00 00 00 C3 10 00 00 0A 00 02 10  ................
  00006150: 50 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  P...............
  00006160: 50 10 00 00 B7 11 00 00 07 00 01 00 B6 11 00 00  P...............
  00006170: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  00006180: 00 00 00 00 00 00 00 00 00 00 10 5F 44 33 44 53  ..........._D3DS
  00006190: 55 52 46 41 43 45 5F 44 45 53 43 F1 0A 00 02 10  URFACE_DESC.....
  000061A0: B9 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  000061B0: BA 11 00 00 1A 00 09 10 12 00 00 00 50 10 00 00  ............P...
  000061C0: B7 11 00 00 07 00 01 00 BB 11 00 00 00 00 00 00  ................
  000061D0: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  000061E0: 00 00 00 00 00 00 0F 5F 44 33 44 4C 4F 43 4B 45  ......._D3DLOCKE
  000061F0: 44 5F 52 45 43 54 F2 F1 0A 00 02 10 BD 11 00 00  D_RECT..........
  00006200: 0A 00 00 00 12 00 01 12 03 00 00 00 BE 11 00 00  ................
  00006210: 4D 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  M..."...........
  00006220: 50 10 00 00 B7 11 00 00 07 00 03 00 BF 11 00 00  P...............
  00006230: 00 00 00 00 1A 00 09 10 12 00 00 00 50 10 00 00  ............P...
  00006240: B7 11 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006250: 72 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  r...............
  00006260: 0B 14 03 00 B8 11 00 00 0C 47 65 74 43 6F 6E 74  .........GetCont
  00006270: 61 69 6E 65 72 F3 F2 F1 0B 14 03 00 BC 11 00 00  ainer...........
  00006280: 07 47 65 74 44 65 73 63 0B 14 03 00 C0 11 00 00  .GetDesc........
  00006290: 08 4C 6F 63 6B 52 65 63 74 F3 F2 F1 0B 14 03 00  .LockRect.......
  000062A0: C1 11 00 00 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1  .....UnlockRect.
  000062B0: 05 14 03 00 C2 10 00 00 14 00 06 50 61 72 65 6E  ...........Paren
  000062C0: 74 F3 F2 F1 22 00 05 10 06 00 00 00 C2 11 00 00  t..."...........
  000062D0: 00 00 00 00 00 00 00 00 18 00 0A 44 33 44 53 75  ...........D3DSu
  000062E0: 72 66 61 63 65 F3 F2 F1 2A 00 03 12 05 14 03 00  rface...*.......
  000062F0: 74 00 00 00 00 00 08 49 6E 56 42 6C 61 6E 6B F1  t......InVBlank.
  00006300: 05 14 03 00 75 00 00 00 04 00 08 53 63 61 6E 4C  ....u......ScanL
  00006310: 69 6E 65 F1 26 00 05 10 02 00 00 00 C4 11 00 00  ine.&...........
  00006320: 00 00 00 00 00 00 00 00 08 00 11 5F 44 33 44 52  ..........._D3DR
  00006330: 41 53 54 45 52 5F 53 54 41 54 55 53 0E 00 03 10  ASTER_STATUS....
  00006340: 20 00 00 00 11 00 00 00 00 01 00 F1 32 00 03 12   ...........2...
  00006350: 05 14 03 00 C6 11 00 00 00 00 03 72 65 64 F2 F1  ...........red..
  00006360: 05 14 03 00 C6 11 00 00 00 01 05 67 72 65 65 6E  ...........green
  00006370: 05 14 03 00 C6 11 00 00 00 02 04 62 6C 75 65 F1  ...........blue.
  00006380: 22 00 05 10 03 00 00 00 C7 11 00 00 00 00 00 00  "...............
  00006390: 00 00 00 00 00 03 0D 5F 44 33 44 47 41 4D 4D 41  ......._D3DGAMMA
  000063A0: 52 41 4D 50 0E 00 01 12 02 00 00 00 75 00 00 00  RAMP........u...
  000063B0: BA 11 00 00 0A 00 02 10 61 10 00 00 0A 04 00 00  ........a.......
  000063C0: 1A 00 09 10 12 00 00 00 61 10 00 00 CA 11 00 00  ........a.......
  000063D0: 07 00 02 00 C9 11 00 00 00 00 00 00 0E 00 01 12  ................
  000063E0: 02 00 00 00 75 00 00 00 52 10 00 00 1A 00 09 10  ....u...R.......
  000063F0: 12 00 00 00 61 10 00 00 CA 11 00 00 07 00 02 00  ....a...........
  00006400: CC 11 00 00 00 00 00 00 16 00 01 12 04 00 00 00  ................
  00006410: 75 00 00 00 BE 11 00 00 4D 10 00 00 22 00 00 00  u.......M..."...
  00006420: 1A 00 09 10 12 00 00 00 61 10 00 00 CA 11 00 00  ........a.......
  00006430: 07 00 04 00 CE 11 00 00 00 00 00 00 1A 00 09 10  ................
  00006440: 12 00 00 00 61 10 00 00 CA 11 00 00 07 00 01 00  ....a...........
  00006450: 10 10 00 00 00 00 00 00 66 00 03 12 00 14 03 00  ........f.......
  00006460: C1 10 00 00 00 00 F2 F1 0B 14 03 00 CB 11 00 00  ................
  00006470: 0C 47 65 74 4C 65 76 65 6C 44 65 73 63 F3 F2 F1  .GetLevelDesc...
  00006480: 0B 14 03 00 CD 11 00 00 0F 47 65 74 53 75 72 66  .........GetSurf
  00006490: 61 63 65 4C 65 76 65 6C 0B 14 03 00 CF 11 00 00  aceLevel........
  000064A0: 08 4C 6F 63 6B 52 65 63 74 F3 F2 F1 0B 14 03 00  .LockRect.......
  000064B0: D0 11 00 00 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1  .....UnlockRect.
  000064C0: 22 00 05 10 05 00 00 00 D1 11 00 00 00 00 00 00  "...............
  000064D0: 00 00 00 00 14 00 0A 44 33 44 54 65 78 74 75 72  .......D3DTextur
  000064E0: 65 F3 F2 F1 26 00 05 10 00 00 80 00 00 00 00 00  e...&...........
  000064F0: 00 00 00 00 00 00 00 00 00 00 0F 5F 44 33 44 56  ..........._D3DV
  00006500: 4F 4C 55 4D 45 5F 44 45 53 43 F2 F1 0A 00 02 10  OLUME_DESC......
  00006510: D3 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00006520: 75 00 00 00 D4 11 00 00 0A 00 02 10 66 10 00 00  u...........f...
  00006530: 0A 04 00 00 1A 00 09 10 12 00 00 00 66 10 00 00  ............f...
  00006540: D6 11 00 00 07 00 02 00 D5 11 00 00 00 00 00 00  ................
  00006550: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  00006560: 00 00 00 00 00 00 09 44 33 44 56 6F 6C 75 6D 65  .......D3DVolume
  00006570: 0A 00 02 10 D8 11 00 00 0A 00 00 00 0A 00 02 10  ................
  00006580: D9 11 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  00006590: 75 00 00 00 DA 11 00 00 1A 00 09 10 12 00 00 00  u...............
  000065A0: 66 10 00 00 D6 11 00 00 07 00 02 00 DB 11 00 00  f...............
  000065B0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  000065C0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 33 44 4C  ..........._D3DL
  000065D0: 4F 43 4B 45 44 5F 42 4F 58 F3 F2 F1 0A 00 02 10  OCKED_BOX.......
  000065E0: DD 11 00 00 0A 00 00 00 1E 00 05 10 00 00 80 00  ................
  000065F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07 5F  ..............._
  00006600: 44 33 44 42 4F 58 F2 F1 0A 00 01 10 DF 11 00 00  D3DBOX..........
  00006610: 01 00 F2 F1 0A 00 02 10 E0 11 00 00 0A 00 00 00  ................
  00006620: 16 00 01 12 04 00 00 00 75 00 00 00 DE 11 00 00  ........u.......
  00006630: E1 11 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  00006640: 66 10 00 00 D6 11 00 00 07 00 04 00 E2 11 00 00  f...............
  00006650: 00 00 00 00 1A 00 09 10 12 00 00 00 66 10 00 00  ............f...
  00006660: D6 11 00 00 07 00 01 00 10 10 00 00 00 00 00 00  ................
  00006670: 62 00 03 12 00 14 03 00 C1 10 00 00 00 00 F2 F1  b...............
  00006680: 0B 14 03 00 D7 11 00 00 0C 47 65 74 4C 65 76 65  .........GetLeve
  00006690: 6C 44 65 73 63 F3 F2 F1 0B 14 03 00 DC 11 00 00  lDesc...........
  000066A0: 0E 47 65 74 56 6F 6C 75 6D 65 4C 65 76 65 6C F1  .GetVolumeLevel.
  000066B0: 0B 14 03 00 E3 11 00 00 07 4C 6F 63 6B 42 6F 78  .........LockBox
  000066C0: 0B 14 03 00 E4 11 00 00 09 55 6E 6C 6F 63 6B 42  .........UnlockB
  000066D0: 6F 78 F2 F1 26 00 05 10 05 00 00 00 E5 11 00 00  ox..&...........
  000066E0: 00 00 00 00 00 00 00 00 14 00 10 44 33 44 56 6F  ...........D3DVo
  000066F0: 6C 75 6D 65 54 65 78 74 75 72 65 F1 0A 00 02 10  lumeTexture.....
  00006700: 6B 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  k...............
  00006710: 6B 10 00 00 E7 11 00 00 07 00 02 00 C9 11 00 00  k...............
  00006720: 00 00 00 00 02 01 03 12 03 04 03 00 00 00 1A 44  ...............D
  00006730: 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45 5F 50  3DCUBEMAP_FACE_P
  00006740: 4F 53 49 54 49 56 45 5F 58 F3 F2 F1 03 04 03 00  OSITIVE_X.......
  00006750: 01 00 1A 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  00006760: 43 45 5F 4E 45 47 41 54 49 56 45 5F 58 F3 F2 F1  CE_NEGATIVE_X...
  00006770: 03 04 03 00 02 00 1A 44 33 44 43 55 42 45 4D 41  .......D3DCUBEMA
  00006780: 50 5F 46 41 43 45 5F 50 4F 53 49 54 49 56 45 5F  P_FACE_POSITIVE_
  00006790: 59 F3 F2 F1 03 04 03 00 03 00 1A 44 33 44 43 55  Y..........D3DCU
  000067A0: 42 45 4D 41 50 5F 46 41 43 45 5F 4E 45 47 41 54  BEMAP_FACE_NEGAT
  000067B0: 49 56 45 5F 59 F3 F2 F1 03 04 03 00 04 00 1A 44  IVE_Y..........D
  000067C0: 33 44 43 55 42 45 4D 41 50 5F 46 41 43 45 5F 50  3DCUBEMAP_FACE_P
  000067D0: 4F 53 49 54 49 56 45 5F 5A F3 F2 F1 03 04 03 00  OSITIVE_Z.......
  000067E0: 05 00 1A 44 33 44 43 55 42 45 4D 41 50 5F 46 41  ...D3DCUBEMAP_FA
  000067F0: 43 45 5F 4E 45 47 41 54 49 56 45 5F 5A F3 F2 F1  CE_NEGATIVE_Z...
  00006800: 03 04 03 00 04 80 FF FF FF 7F 1B 44 33 44 43 55  ...........D3DCU
  00006810: 42 45 4D 41 50 5F 46 41 43 45 5F 46 4F 52 43 45  BEMAP_FACE_FORCE
  00006820: 5F 44 57 4F 52 44 F2 F1 22 00 07 10 07 00 00 00  _DWORD..".......
  00006830: 74 00 00 00 E9 11 00 00 11 5F 44 33 44 43 55 42  t........_D3DCUB
  00006840: 45 4D 41 50 5F 46 41 43 45 53 F2 F1 12 00 01 12  EMAP_FACES......
  00006850: 03 00 00 00 EA 11 00 00 75 00 00 00 52 10 00 00  ........u...R...
  00006860: 1A 00 09 10 12 00 00 00 6B 10 00 00 E7 11 00 00  ........k.......
  00006870: 07 00 03 00 EB 11 00 00 00 00 00 00 1A 00 01 12  ................
  00006880: 05 00 00 00 EA 11 00 00 75 00 00 00 BE 11 00 00  ........u.......
  00006890: 4D 10 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  M..."...........
  000068A0: 6B 10 00 00 E7 11 00 00 07 00 05 00 ED 11 00 00  k...............
  000068B0: 00 00 00 00 0E 00 01 12 02 00 00 00 EA 11 00 00  ................
  000068C0: 75 00 00 00 1A 00 09 10 12 00 00 00 6B 10 00 00  u...........k...
  000068D0: E7 11 00 00 07 00 02 00 EF 11 00 00 00 00 00 00  ................
  000068E0: 6A 00 03 12 00 14 03 00 C1 10 00 00 00 00 F2 F1  j...............
  000068F0: 0B 14 03 00 E8 11 00 00 0C 47 65 74 4C 65 76 65  .........GetLeve
  00006900: 6C 44 65 73 63 F3 F2 F1 0B 14 03 00 EC 11 00 00  lDesc...........
  00006910: 11 47 65 74 43 75 62 65 4D 61 70 53 75 72 66 61  .GetCubeMapSurfa
  00006920: 63 65 F2 F1 0B 14 03 00 EE 11 00 00 08 4C 6F 63  ce...........Loc
  00006930: 6B 52 65 63 74 F3 F2 F1 0B 14 03 00 F0 11 00 00  kRect...........
  00006940: 0A 55 6E 6C 6F 63 6B 52 65 63 74 F1 26 00 05 10  .UnlockRect.&...
  00006950: 05 00 00 00 F1 11 00 00 00 00 00 00 00 00 00 00  ................
  00006960: 14 00 0E 44 33 44 43 75 62 65 54 65 78 74 75 72  ...D3DCubeTextur
  00006970: 65 F3 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  e..."...........
  00006980: 00 00 00 00 00 00 00 00 00 00 0B 44 33 44 52 65  ...........D3DRe
  00006990: 73 6F 75 72 63 65 F2 F1 0A 00 02 10 20 04 00 00  source...... ...
  000069A0: 0A 00 00 00 16 00 01 12 04 00 00 00 75 00 00 00  ............u...
  000069B0: 75 00 00 00 F4 11 00 00 22 00 00 00 0A 00 02 10  u.......".......
  000069C0: 70 10 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  p...............
  000069D0: 70 10 00 00 F6 11 00 00 07 00 04 00 F5 11 00 00  p...............
  000069E0: 00 00 00 00 1A 00 09 10 12 00 00 00 70 10 00 00  ............p...
  000069F0: F6 11 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006A00: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  00006A10: 00 00 00 00 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  00006A20: 58 42 55 46 46 45 52 5F 44 45 53 43 0A 00 02 10  XBUFFER_DESC....
  00006A30: F9 11 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  00006A40: FA 11 00 00 1A 00 09 10 12 00 00 00 70 10 00 00  ............p...
  00006A50: F6 11 00 00 07 00 01 00 FB 11 00 00 00 00 00 00  ................
  00006A60: 3E 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  >...............
  00006A70: 0B 14 03 00 F7 11 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  00006A80: 0B 14 03 00 F8 11 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  00006A90: 0B 14 03 00 FC 11 00 00 07 47 65 74 44 65 73 63  .........GetDesc
  00006AA0: 26 00 05 10 04 00 00 00 FD 11 00 00 00 00 00 00  &...............
  00006AB0: 00 00 00 00 0C 00 0F 44 33 44 56 65 72 74 65 78  .......D3DVertex
  00006AC0: 42 75 66 66 65 72 F2 F1 0A 00 02 10 75 10 00 00  Buffer......u...
  00006AD0: 0A 04 00 00 1A 00 09 10 12 00 00 00 75 10 00 00  ............u...
  00006AE0: FF 11 00 00 07 00 04 00 F5 11 00 00 00 00 00 00  ................
  00006AF0: 1A 00 09 10 12 00 00 00 75 10 00 00 FF 11 00 00  ........u.......
  00006B00: 07 00 00 00 09 10 00 00 00 00 00 00 2A 00 05 10  ............*...
  00006B10: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00006B20: 00 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46 46  ..._D3DINDEXBUFF
  00006B30: 45 52 5F 44 45 53 43 F1 0A 00 02 10 02 12 00 00  ER_DESC.........
  00006B40: 0A 00 00 00 0A 00 01 12 01 00 00 00 03 12 00 00  ................
  00006B50: 1A 00 09 10 12 00 00 00 75 10 00 00 FF 11 00 00  ........u.......
  00006B60: 07 00 01 00 04 12 00 00 00 00 00 00 3E 00 03 12  ............>...
  00006B70: 00 14 03 00 F3 11 00 00 00 00 F2 F1 0B 14 03 00  ................
  00006B80: 00 12 00 00 04 4C 6F 63 6B F3 F2 F1 0B 14 03 00  .....Lock.......
  00006B90: 01 12 00 00 06 55 6E 6C 6F 63 6B F1 0B 14 03 00  .....Unlock.....
  00006BA0: 05 12 00 00 07 47 65 74 44 65 73 63 26 00 05 10  .....GetDesc&...
  00006BB0: 04 00 00 00 06 12 00 00 00 00 00 00 00 00 00 00  ................
  00006BC0: 0C 00 0E 44 33 44 49 6E 64 65 78 42 75 66 66 65  ...D3DIndexBuffe
  00006BD0: 72 F3 F2 F1 0A 00 02 10 22 04 00 00 0A 00 00 00  r.......".......
  00006BE0: 0E 00 01 12 02 00 00 00 08 12 00 00 22 00 00 00  ............"...
  00006BF0: 0A 00 02 10 24 11 00 00 0A 04 00 00 1A 00 09 10  ....$...........
  00006C00: 12 00 00 00 24 11 00 00 0A 12 00 00 07 00 02 00  ....$...........
  00006C10: 09 12 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  00006C20: 24 11 00 00 0A 12 00 00 07 00 00 00 09 10 00 00  $...............
  00006C30: 00 00 00 00 1A 00 09 10 23 11 00 00 24 11 00 00  ........#...$...
  00006C40: 0A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00006C50: 3E 00 03 12 00 14 03 00 F3 11 00 00 00 00 F2 F1  >...............
  00006C60: 0B 14 03 00 0B 12 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  00006C70: 0B 14 03 00 0C 12 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  00006C80: 0B 14 03 00 0D 12 00 00 07 47 65 74 53 69 7A 65  .........GetSize
  00006C90: 22 00 05 10 04 00 00 00 0E 12 00 00 00 00 00 00  "...............
  00006CA0: 00 00 00 00 0C 00 0A 44 33 44 50 61 6C 65 74 74  .......D3DPalett
  00006CB0: 65 F3 F2 F1 1A 00 03 12 05 14 03 00 12 00 00 00  e...............
  00006CC0: 00 00 01 78 05 14 03 00 12 00 00 00 04 00 01 79  ...x...........y
  00006CD0: 1E 00 05 10 02 00 00 00 10 12 00 00 00 00 00 00  ................
  00006CE0: 00 00 00 00 08 00 08 74 61 67 50 4F 49 4E 54 F1  .......tagPOINT.
  00006CF0: B2 00 03 12 05 14 03 00 22 00 00 00 00 00 03 52  ........"......R
  00006D00: 6F 70 F2 F1 05 14 03 00 22 00 00 00 04 00 05 53  op......"......S
  00006D10: 68 61 70 65 05 14 03 00 22 00 00 00 08 00 0D 50  hape...."......P
  00006D20: 61 74 74 65 72 6E 53 65 6C 65 63 74 05 14 03 00  atternSelect....
  00006D30: 22 00 00 00 0C 00 0A 4D 6F 6E 6F 43 6F 6C 6F 72  "......MonoColor
  00006D40: 30 F3 F2 F1 05 14 03 00 22 00 00 00 10 00 0A 4D  0......."......M
  00006D50: 6F 6E 6F 43 6F 6C 6F 72 31 F3 F2 F1 05 14 03 00  onoColor1.......
  00006D60: 22 00 00 00 14 00 0C 4D 6F 6E 6F 50 61 74 74 65  "......MonoPatte
  00006D70: 72 6E 30 F1 05 14 03 00 22 00 00 00 18 00 0C 4D  rn0....."......M
  00006D80: 6F 6E 6F 50 61 74 74 65 72 6E 31 F1 05 14 03 00  onoPattern1.....
  00006D90: DB 10 00 00 1C 00 0C 43 6F 6C 6F 72 50 61 74 74  .......ColorPatt
  00006DA0: 65 72 6E F1 2A 00 05 10 08 00 00 00 12 12 00 00  ern.*...........
  00006DB0: 00 00 00 00 00 00 00 00 20 00 14 5F 44 33 44 43  ........ .._D3DC
  00006DC0: 4F 50 59 52 45 43 54 52 4F 50 53 54 41 54 45 F1  OPYRECTROPSTATE.
  00006DD0: 56 02 03 12 03 04 03 00 00 00 20 44 33 44 43 4F  V......... D3DCO
  00006DE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006DF0: 4D 41 54 5F 44 45 46 41 55 4C 54 F1 03 04 03 00  MAT_DEFAULT.....
  00006E00: 01 00 1B 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ...D3DCOPYRECT_C
  00006E10: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 59 38 F2 F1  OLOR_FORMAT_Y8..
  00006E20: 03 04 03 00 02 00 2A 44 33 44 43 4F 50 59 52 45  ......*D3DCOPYRE
  00006E30: 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F  CT_COLOR_FORMAT_
  00006E40: 58 31 52 35 47 35 42 35 5F 5A 31 52 35 47 35 42  X1R5G5B5_Z1R5G5B
  00006E50: 35 F3 F2 F1 03 04 03 00 03 00 2A 44 33 44 43 4F  5.........*D3DCO
  00006E60: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006E70: 4D 41 54 5F 58 31 52 35 47 35 42 35 5F 4F 31 52  MAT_X1R5G5B5_O1R
  00006E80: 35 47 35 42 35 F3 F2 F1 03 04 03 00 04 00 1F 44  5G5B5..........D
  00006E90: 33 44 43 4F 50 59 52 45 43 54 5F 43 4F 4C 4F 52  3DCOPYRECT_COLOR
  00006EA0: 5F 46 4F 52 4D 41 54 5F 52 35 47 36 42 35 F2 F1  _FORMAT_R5G6B5..
  00006EB0: 03 04 03 00 05 00 1C 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  00006EC0: 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F  CT_COLOR_FORMAT_
  00006ED0: 59 31 36 F1 03 04 03 00 06 00 2A 44 33 44 43 4F  Y16.......*D3DCO
  00006EE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006EF0: 4D 41 54 5F 58 38 52 38 47 38 42 38 5F 5A 38 52  MAT_X8R8G8B8_Z8R
  00006F00: 38 47 38 42 38 F3 F2 F1 03 04 03 00 07 00 2A 44  8G8B8.........*D
  00006F10: 33 44 43 4F 50 59 52 45 43 54 5F 43 4F 4C 4F 52  3DCOPYRECT_COLOR
  00006F20: 5F 46 4F 52 4D 41 54 5F 58 38 52 38 47 38 42 38  _FORMAT_X8R8G8B8
  00006F30: 5F 4F 38 52 38 47 38 42 38 F3 F2 F1 03 04 03 00  _O8R8G8B8.......
  00006F40: 08 00 2E 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ...D3DCOPYRECT_C
  00006F50: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 58 31 41 37  OLOR_FORMAT_X1A7
  00006F60: 52 38 47 38 42 38 5F 5A 31 41 37 52 38 47 38 42  R8G8B8_Z1A7R8G8B
  00006F70: 38 F3 F2 F1 03 04 03 00 09 00 2E 44 33 44 43 4F  8..........D3DCO
  00006F80: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006F90: 4D 41 54 5F 58 31 41 37 52 38 47 38 42 38 5F 4F  MAT_X1A7R8G8B8_O
  00006FA0: 31 41 37 52 38 47 38 42 38 F3 F2 F1 03 04 03 00  1A7R8G8B8.......
  00006FB0: 0A 00 21 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ..!D3DCOPYRECT_C
  00006FC0: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 41 38 52 38  OLOR_FORMAT_A8R8
  00006FD0: 47 38 42 38 03 04 03 00 0B 00 1C 44 33 44 43 4F  G8B8.......D3DCO
  00006FE0: 50 59 52 45 43 54 5F 43 4F 4C 4F 52 5F 46 4F 52  PYRECT_COLOR_FOR
  00006FF0: 4D 41 54 5F 59 33 32 F1 03 04 03 00 04 80 FF FF  MAT_Y32.........
  00007000: FF 7F 24 44 33 44 43 4F 50 59 52 45 43 54 5F 43  ..$D3DCOPYRECT_C
  00007010: 4F 4C 4F 52 5F 46 4F 52 4D 41 54 5F 46 4F 52 43  OLOR_FORMAT_FORC
  00007020: 45 5F 44 57 4F 52 44 F1 26 00 07 10 0D 00 00 00  E_DWORD.&.......
  00007030: 74 00 00 00 14 12 00 00 17 5F 44 33 44 43 4F 50  t........_D3DCOP
  00007040: 59 52 45 43 54 43 4F 4C 4F 52 46 4F 52 4D 41 54  YRECTCOLORFORMAT
  00007050: DE 00 03 12 03 04 03 00 00 00 17 44 33 44 43 4F  ...........D3DCO
  00007060: 50 59 52 45 43 54 5F 53 52 43 43 4F 50 59 5F 41  PYRECT_SRCCOPY_A
  00007070: 4E 44 F2 F1 03 04 03 00 01 00 13 44 33 44 43 4F  ND.........D3DCO
  00007080: 50 59 52 45 43 54 5F 52 4F 50 5F 41 4E 44 F2 F1  PYRECT_ROP_AND..
  00007090: 03 04 03 00 02 00 15 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  000070A0: 43 54 5F 42 4C 45 4E 44 5F 41 4E 44 03 04 03 00  CT_BLEND_AND....
  000070B0: 03 00 13 44 33 44 43 4F 50 59 52 45 43 54 5F 53  ...D3DCOPYRECT_S
  000070C0: 52 43 43 4F 50 59 F2 F1 03 04 03 00 04 00 1B 44  RCCOPY.........D
  000070D0: 33 44 43 4F 50 59 52 45 43 54 5F 53 52 43 43 4F  3DCOPYRECT_SRCCO
  000070E0: 50 59 5F 50 52 45 4D 55 4C 54 F2 F1 03 04 03 00  PY_PREMULT......
  000070F0: 05 00 19 44 33 44 43 4F 50 59 52 45 43 54 5F 42  ...D3DCOPYRECT_B
  00007100: 4C 45 4E 44 5F 50 52 45 4D 55 4C 54 03 04 03 00  LEND_PREMULT....
  00007110: 04 80 FF FF FF 7F 17 44 33 44 43 4F 50 59 52 45  .......D3DCOPYRE
  00007120: 43 54 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F2 F1  CT_FORCE_DWORD..
  00007130: 26 00 07 10 07 00 00 00 74 00 00 00 16 12 00 00  &.......t.......
  00007140: 15 5F 44 33 44 43 4F 50 59 52 45 43 54 4F 50 45  ._D3DCOPYRECTOPE
  00007150: 52 41 54 49 4F 4E F2 F1 C2 00 03 12 05 14 03 00  RATION..........
  00007160: 15 12 00 00 00 00 0B 43 6F 6C 6F 72 46 6F 72 6D  .......ColorForm
  00007170: 61 74 F2 F1 05 14 03 00 17 12 00 00 04 00 09 4F  at.............O
  00007180: 70 65 72 61 74 69 6F 6E 05 14 03 00 74 00 00 00  peration....t...
  00007190: 08 00 0E 43 6F 6C 6F 72 4B 65 79 45 6E 61 62 6C  ...ColorKeyEnabl
  000071A0: 65 F3 F2 F1 05 14 03 00 22 00 00 00 0C 00 0D 43  e......."......C
  000071B0: 6F 6C 6F 72 4B 65 79 56 61 6C 75 65 05 14 03 00  olorKeyValue....
  000071C0: 22 00 00 00 10 00 0A 42 6C 65 6E 64 41 6C 70 68  "......BlendAlph
  000071D0: 61 F3 F2 F1 05 14 03 00 22 00 00 00 14 00 0C 50  a......."......P
  000071E0: 72 65 6D 75 6C 74 41 6C 70 68 61 F1 05 14 03 00  remultAlpha.....
  000071F0: 22 00 00 00 18 00 0D 43 6C 69 70 70 69 6E 67 50  "......ClippingP
  00007200: 6F 69 6E 74 05 14 03 00 22 00 00 00 1C 00 0C 43  oint...."......C
  00007210: 6C 69 70 70 69 6E 67 53 69 7A 65 F1 26 00 05 10  lippingSize.&...
  00007220: 08 00 00 00 18 12 00 00 00 00 00 00 00 00 00 00  ................
  00007230: 20 00 11 5F 44 33 44 43 4F 50 59 52 45 43 54 53   .._D3DCOPYRECTS
  00007240: 54 41 54 45 42 00 03 12 05 14 03 00 12 00 00 00  TATEB...........
  00007250: 00 00 02 78 31 F3 F2 F1 05 14 03 00 12 00 00 00  ...x1...........
  00007260: 04 00 02 79 31 F3 F2 F1 05 14 03 00 12 00 00 00  ...y1...........
  00007270: 08 00 02 78 32 F3 F2 F1 05 14 03 00 12 00 00 00  ...x2...........
  00007280: 0C 00 02 79 32 F3 F2 F1 1E 00 05 10 04 00 00 00  ...y2...........
  00007290: 1A 12 00 00 00 00 00 00 00 00 00 00 10 00 08 5F  ..............._
  000072A0: 44 33 44 52 45 43 54 F1 0E 00 03 10 40 00 00 00  D3DRECT.....@...
  000072B0: 11 00 00 00 10 00 00 F1 0E 00 03 10 1C 12 00 00  ................
  000072C0: 11 00 00 00 40 00 00 F1 0E 01 03 12 05 14 03 00  ....@...........
  000072D0: 40 00 00 00 00 00 03 5F 31 31 F2 F1 05 14 03 00  @......_11......
  000072E0: 40 00 00 00 04 00 03 5F 31 32 F2 F1 05 14 03 00  @......_12......
  000072F0: 40 00 00 00 08 00 03 5F 31 33 F2 F1 05 14 03 00  @......_13......
  00007300: 40 00 00 00 0C 00 03 5F 31 34 F2 F1 05 14 03 00  @......_14......
  00007310: 40 00 00 00 10 00 03 5F 32 31 F2 F1 05 14 03 00  @......_21......
  00007320: 40 00 00 00 14 00 03 5F 32 32 F2 F1 05 14 03 00  @......_22......
  00007330: 40 00 00 00 18 00 03 5F 32 33 F2 F1 05 14 03 00  @......_23......
  00007340: 40 00 00 00 1C 00 03 5F 32 34 F2 F1 05 14 03 00  @......_24......
  00007350: 40 00 00 00 20 00 03 5F 33 31 F2 F1 05 14 03 00  @... .._31......
  00007360: 40 00 00 00 24 00 03 5F 33 32 F2 F1 05 14 03 00  @...$.._32......
  00007370: 40 00 00 00 28 00 03 5F 33 33 F2 F1 05 14 03 00  @...(.._33......
  00007380: 40 00 00 00 2C 00 03 5F 33 34 F2 F1 05 14 03 00  @...,.._34......
  00007390: 40 00 00 00 30 00 03 5F 34 31 F2 F1 05 14 03 00  @...0.._41......
  000073A0: 40 00 00 00 34 00 03 5F 34 32 F2 F1 05 14 03 00  @...4.._42......
  000073B0: 40 00 00 00 38 00 03 5F 34 33 F2 F1 05 14 03 00  @...8.._43......
  000073C0: 40 00 00 00 3C 00 03 5F 34 34 F2 F1 05 14 03 00  @...<.._44......
  000073D0: 1D 12 00 00 00 00 01 6D 22 00 05 10 11 00 00 00  .......m".......
  000073E0: 1E 12 00 00 00 00 00 00 00 00 00 00 40 00 0A 5F  ............@.._
  000073F0: 44 33 44 4D 41 54 52 49 58 F3 F2 F1 5E 00 03 12  D3DMATRIX...^...
  00007400: 05 14 03 00 22 00 00 00 00 00 01 58 05 14 03 00  ...."......X....
  00007410: 22 00 00 00 04 00 01 59 05 14 03 00 22 00 00 00  "......Y...."...
  00007420: 08 00 05 57 69 64 74 68 05 14 03 00 22 00 00 00  ...Width...."...
  00007430: 0C 00 06 48 65 69 67 68 74 F3 F2 F1 05 14 03 00  ...Height.......
  00007440: 40 00 00 00 10 00 04 4D 69 6E 5A F1 05 14 03 00  @......MinZ.....
  00007450: 40 00 00 00 14 00 04 4D 61 78 5A F1 22 00 05 10  @......MaxZ."...
  00007460: 06 00 00 00 20 12 00 00 00 00 00 00 00 00 00 00  .... ...........
  00007470: 18 00 0D 5F 44 33 44 56 49 45 57 50 4F 52 54 38  ..._D3DVIEWPORT8
  00007480: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  00007490: 00 00 00 00 00 00 0E 5F 44 33 44 43 4F 4C 4F 52  ......._D3DCOLOR
  000074A0: 56 41 4C 55 45 F3 F2 F1 62 00 03 12 05 14 03 00  VALUE...b.......
  000074B0: 22 12 00 00 00 00 07 44 69 66 66 75 73 65 F2 F1  "......Diffuse..
  000074C0: 05 14 03 00 22 12 00 00 10 00 07 41 6D 62 69 65  ...."......Ambie
  000074D0: 6E 74 F2 F1 05 14 03 00 22 12 00 00 20 00 08 53  nt......"... ..S
  000074E0: 70 65 63 75 6C 61 72 F1 05 14 03 00 22 12 00 00  pecular....."...
  000074F0: 30 00 08 45 6D 69 73 73 69 76 65 F1 05 14 03 00  0..Emissive.....
  00007500: 40 00 00 00 40 00 05 50 6F 77 65 72 22 00 05 10  @...@..Power"...
  00007510: 05 00 00 00 23 12 00 00 00 00 00 00 00 00 00 00  ....#...........
  00007520: 44 00 0D 5F 44 33 44 4D 41 54 45 52 49 41 4C 38  D.._D3DMATERIAL8
  00007530: 6A 00 03 12 03 04 03 00 01 00 0E 44 33 44 4C 49  j..........D3DLI
  00007540: 47 48 54 5F 50 4F 49 4E 54 F3 F2 F1 03 04 03 00  GHT_POINT.......
  00007550: 02 00 0D 44 33 44 4C 49 47 48 54 5F 53 50 4F 54  ...D3DLIGHT_SPOT
  00007560: 03 04 03 00 03 00 14 44 33 44 4C 49 47 48 54 5F  .......D3DLIGHT_
  00007570: 44 49 52 45 43 54 49 4F 4E 41 4C F1 03 04 03 00  DIRECTIONAL.....
  00007580: 04 80 FF FF FF 7F 14 44 33 44 4C 49 47 48 54 5F  .......D3DLIGHT_
  00007590: 46 4F 52 43 45 5F 44 57 4F 52 44 F1 1E 00 07 10  FORCE_DWORD.....
  000075A0: 04 00 00 00 74 00 00 00 25 12 00 00 0D 5F 44 33  ....t...%...._D3
  000075B0: 44 4C 49 47 48 54 54 59 50 45 F2 F1 22 00 05 10  DLIGHTTYPE.."...
  000075C0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  000075D0: 00 00 0A 5F 44 33 44 56 45 43 54 4F 52 F3 F2 F1  ..._D3DVECTOR...
  000075E0: 02 01 03 12 05 14 03 00 26 12 00 00 00 00 04 54  ........&......T
  000075F0: 79 70 65 F1 05 14 03 00 22 12 00 00 04 00 07 44  ype....."......D
  00007600: 69 66 66 75 73 65 F2 F1 05 14 03 00 22 12 00 00  iffuse......"...
  00007610: 14 00 08 53 70 65 63 75 6C 61 72 F1 05 14 03 00  ...Specular.....
  00007620: 22 12 00 00 24 00 07 41 6D 62 69 65 6E 74 F2 F1  "...$..Ambient..
  00007630: 05 14 03 00 27 12 00 00 34 00 08 50 6F 73 69 74  ....'...4..Posit
  00007640: 69 6F 6E F1 05 14 03 00 27 12 00 00 40 00 09 44  ion.....'...@..D
  00007650: 69 72 65 63 74 69 6F 6E 05 14 03 00 40 00 00 00  irection....@...
  00007660: 4C 00 05 52 61 6E 67 65 05 14 03 00 40 00 00 00  L..Range....@...
  00007670: 50 00 07 46 61 6C 6C 6F 66 66 F2 F1 05 14 03 00  P..Falloff......
  00007680: 40 00 00 00 54 00 0C 41 74 74 65 6E 75 61 74 69  @...T..Attenuati
  00007690: 6F 6E 30 F1 05 14 03 00 40 00 00 00 58 00 0C 41  on0.....@...X..A
  000076A0: 74 74 65 6E 75 61 74 69 6F 6E 31 F1 05 14 03 00  ttenuation1.....
  000076B0: 40 00 00 00 5C 00 0C 41 74 74 65 6E 75 61 74 69  @...\..Attenuati
  000076C0: 6F 6E 32 F1 05 14 03 00 40 00 00 00 60 00 05 54  on2.....@...`..T
  000076D0: 68 65 74 61 05 14 03 00 40 00 00 00 64 00 03 50  heta....@...d..P
  000076E0: 68 69 F2 F1 22 00 05 10 0D 00 00 00 28 12 00 00  hi..".......(...
  000076F0: 00 00 00 00 00 00 00 00 68 00 0A 5F 44 33 44 4C  ........h.._D3DL
  00007700: 49 47 48 54 38 F3 F2 F1 0A 00 02 10 C1 10 00 00  IGHT8...........
  00007710: 0A 04 00 00 1A 00 09 10 22 00 00 00 C1 10 00 00  ........".......
  00007720: 2A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  *...............
  00007730: 26 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  &...............
  00007740: 0B 14 03 00 2B 12 00 00 0D 47 65 74 4C 65 76 65  ....+....GetLeve
  00007750: 6C 43 6F 75 6E 74 F2 F1 26 00 05 10 02 00 00 00  lCount..&.......
  00007760: 2C 12 00 00 00 00 00 00 00 00 00 00 14 00 0E 44  ,..............D
  00007770: 33 44 42 61 73 65 54 65 78 74 75 72 65 F3 F2 F1  3DBaseTexture...
  00007780: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  00007790: 00 00 00 00 00 00 15 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  000077A0: 58 53 48 41 44 45 52 49 4E 50 55 54 0E 00 03 10  XSHADERINPUT....
  000077B0: 2E 12 00 00 11 00 00 00 00 01 00 F1 12 00 03 12  ................
  000077C0: 05 14 03 00 2F 12 00 00 00 00 05 49 6E 70 75 74  ..../......Input
  000077D0: 2E 00 05 10 01 00 00 00 30 12 00 00 00 00 00 00  ........0.......
  000077E0: 00 00 00 00 00 01 19 5F 44 33 44 56 45 52 54 45  ......._D3DVERTE
  000077F0: 58 41 54 54 52 49 42 55 54 45 46 4F 52 4D 41 54  XATTRIBUTEFORMAT
  00007800: 0E 00 03 10 22 00 00 00 11 00 00 00 20 00 00 F1  ...."....... ...
  00007810: FE 01 03 12 05 14 03 00 32 12 00 00 00 00 0D 50  ........2......P
  00007820: 53 41 6C 70 68 61 49 6E 70 75 74 73 05 14 03 00  SAlphaInputs....
  00007830: 22 00 00 00 20 00 19 50 53 46 69 6E 61 6C 43 6F  "... ..PSFinalCo
  00007840: 6D 62 69 6E 65 72 49 6E 70 75 74 73 41 42 43 44  mbinerInputsABCD
  00007850: 05 14 03 00 22 00 00 00 24 00 18 50 53 46 69 6E  ...."...$..PSFin
  00007860: 61 6C 43 6F 6D 62 69 6E 65 72 49 6E 70 75 74 73  alCombinerInputs
  00007870: 45 46 47 F1 05 14 03 00 32 12 00 00 28 00 0B 50  EFG.....2...(..P
  00007880: 53 43 6F 6E 73 74 61 6E 74 30 F2 F1 05 14 03 00  SConstant0......
  00007890: 32 12 00 00 48 00 0B 50 53 43 6F 6E 73 74 61 6E  2...H..PSConstan
  000078A0: 74 31 F2 F1 05 14 03 00 32 12 00 00 68 00 0E 50  t1......2...h..P
  000078B0: 53 41 6C 70 68 61 4F 75 74 70 75 74 73 F3 F2 F1  SAlphaOutputs...
  000078C0: 05 14 03 00 32 12 00 00 88 00 0B 50 53 52 47 42  ....2......PSRGB
  000078D0: 49 6E 70 75 74 73 F2 F1 05 14 03 00 22 00 00 00  Inputs......"...
  000078E0: A8 00 0D 50 53 43 6F 6D 70 61 72 65 4D 6F 64 65  ...PSCompareMode
  000078F0: 05 14 03 00 22 00 00 00 AC 00 18 50 53 46 69 6E  ...."......PSFin
  00007900: 61 6C 43 6F 6D 62 69 6E 65 72 43 6F 6E 73 74 61  alCombinerConsta
  00007910: 6E 74 30 F1 05 14 03 00 22 00 00 00 B0 00 18 50  nt0....."......P
  00007920: 53 46 69 6E 61 6C 43 6F 6D 62 69 6E 65 72 43 6F  SFinalCombinerCo
  00007930: 6E 73 74 61 6E 74 31 F1 05 14 03 00 32 12 00 00  nstant1.....2...
  00007940: B4 00 0C 50 53 52 47 42 4F 75 74 70 75 74 73 F1  ...PSRGBOutputs.
  00007950: 05 14 03 00 22 00 00 00 D4 00 0F 50 53 43 6F 6D  ...."......PSCom
  00007960: 62 69 6E 65 72 43 6F 75 6E 74 F2 F1 05 14 03 00  binerCount......
  00007970: 22 00 00 00 D8 00 0E 50 53 54 65 78 74 75 72 65  "......PSTexture
  00007980: 4D 6F 64 65 73 F3 F2 F1 05 14 03 00 22 00 00 00  Modes......."...
  00007990: DC 00 0C 50 53 44 6F 74 4D 61 70 70 69 6E 67 F1  ...PSDotMapping.
  000079A0: 05 14 03 00 22 00 00 00 E0 00 0E 50 53 49 6E 70  ...."......PSInp
  000079B0: 75 74 54 65 78 74 75 72 65 F3 F2 F1 05 14 03 00  utTexture.......
  000079C0: 22 00 00 00 E4 00 0B 50 53 43 30 4D 61 70 70 69  "......PSC0Mappi
  000079D0: 6E 67 F2 F1 05 14 03 00 22 00 00 00 E8 00 0B 50  ng......"......P
  000079E0: 53 43 31 4D 61 70 70 69 6E 67 F2 F1 05 14 03 00  SC1Mapping......
  000079F0: 22 00 00 00 EC 00 18 50 53 46 69 6E 61 6C 43 6F  "......PSFinalCo
  00007A00: 6D 62 69 6E 65 72 43 6F 6E 73 74 61 6E 74 73 F1  mbinerConstants.
  00007A10: 2A 00 05 10 12 00 00 00 33 12 00 00 00 00 00 00  *.......3.......
  00007A20: 00 00 00 00 F0 00 12 5F 44 33 44 50 69 78 65 6C  ......._D3DPixel
  00007A30: 53 68 61 64 65 72 44 65 66 F3 F2 F1 6E 00 03 12  ShaderDef...n...
  00007A40: 03 04 03 00 00 00 0F 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007A50: 42 45 5A 49 45 52 F2 F1 03 04 03 00 01 00 10 44  BEZIER.........D
  00007A60: 33 44 42 41 53 49 53 5F 42 53 50 4C 49 4E 45 F1  3DBASIS_BSPLINE.
  00007A70: 03 04 03 00 02 00 14 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007A80: 49 4E 54 45 52 50 4F 4C 41 54 45 F1 03 04 03 00  INTERPOLATE.....
  00007A90: 04 80 FF FF FF 7F 14 44 33 44 42 41 53 49 53 5F  .......D3DBASIS_
  00007AA0: 46 4F 52 43 45 5F 44 57 4F 52 44 F1 1E 00 07 10  FORCE_DWORD.....
  00007AB0: 04 00 00 00 74 00 00 00 35 12 00 00 0D 5F 44 33  ....t...5...._D3
  00007AC0: 44 42 41 53 49 53 54 59 50 45 F2 F1 6A 00 03 12  DBASISTYPE..j...
  00007AD0: 03 04 03 00 01 00 0F 44 33 44 4F 52 44 45 52 5F  .......D3DORDER_
  00007AE0: 4C 49 4E 45 41 52 F2 F1 03 04 03 00 03 00 0E 44  LINEAR.........D
  00007AF0: 33 44 4F 52 44 45 52 5F 43 55 42 49 43 F3 F2 F1  3DORDER_CUBIC...
  00007B00: 03 04 03 00 05 00 10 44 33 44 4F 52 44 45 52 5F  .......D3DORDER_
  00007B10: 51 55 49 4E 54 49 43 F1 03 04 03 00 04 80 FF FF  QUINTIC.........
  00007B20: FF 7F 14 44 33 44 4F 52 44 45 52 5F 46 4F 52 43  ...D3DORDER_FORC
  00007B30: 45 5F 44 57 4F 52 44 F1 1E 00 07 10 04 00 00 00  E_DWORD.........
  00007B40: 74 00 00 00 37 12 00 00 0D 5F 44 33 44 4F 52 44  t...7...._D3DORD
  00007B50: 45 52 54 59 50 45 F2 F1 A2 00 03 12 05 14 03 00  ERTYPE..........
  00007B60: 75 00 00 00 00 00 16 53 74 61 72 74 56 65 72 74  u......StartVert
  00007B70: 65 78 4F 66 66 73 65 74 57 69 64 74 68 F3 F2 F1  exOffsetWidth...
  00007B80: 05 14 03 00 75 00 00 00 04 00 17 53 74 61 72 74  ....u......Start
  00007B90: 56 65 72 74 65 78 4F 66 66 73 65 74 48 65 69 67  VertexOffsetHeig
  00007BA0: 68 74 F2 F1 05 14 03 00 75 00 00 00 08 00 05 57  ht......u......W
  00007BB0: 69 64 74 68 05 14 03 00 75 00 00 00 0C 00 06 48  idth....u......H
  00007BC0: 65 69 67 68 74 F3 F2 F1 05 14 03 00 75 00 00 00  eight.......u...
  00007BD0: 10 00 06 53 74 72 69 64 65 F3 F2 F1 05 14 03 00  ...Stride.......
  00007BE0: 36 12 00 00 14 00 05 42 61 73 69 73 05 14 03 00  6......Basis....
  00007BF0: 38 12 00 00 18 00 05 4F 72 64 65 72 2A 00 05 10  8......Order*...
  00007C00: 07 00 00 00 39 12 00 00 00 00 00 00 00 00 00 00  ....9...........
  00007C10: 1C 00 12 5F 44 33 44 52 45 43 54 50 41 54 43 48  ..._D3DRECTPATCH
  00007C20: 5F 49 4E 46 4F F3 F2 F1 56 00 03 12 05 14 03 00  _INFO...V.......
  00007C30: 75 00 00 00 00 00 11 53 74 61 72 74 56 65 72 74  u......StartVert
  00007C40: 65 78 4F 66 66 73 65 74 05 14 03 00 75 00 00 00  exOffset....u...
  00007C50: 04 00 0B 4E 75 6D 56 65 72 74 69 63 65 73 F2 F1  ...NumVertices..
  00007C60: 05 14 03 00 36 12 00 00 08 00 05 42 61 73 69 73  ....6......Basis
  00007C70: 05 14 03 00 38 12 00 00 0C 00 05 4F 72 64 65 72  ....8......Order
  00007C80: 26 00 05 10 04 00 00 00 3B 12 00 00 00 00 00 00  &.......;.......
  00007C90: 00 00 00 00 10 00 11 5F 44 33 44 54 52 49 50 41  ......._D3DTRIPA
  00007CA0: 54 43 48 5F 49 4E 46 4F 66 00 03 12 03 04 03 00  TCH_INFOf.......
  00007CB0: 01 00 0C 44 33 44 46 49 45 4C 44 5F 4F 44 44 F1  ...D3DFIELD_ODD.
  00007CC0: 03 04 03 00 02 00 0D 44 33 44 46 49 45 4C 44 5F  .......D3DFIELD_
  00007CD0: 45 56 45 4E 03 04 03 00 03 00 14 44 33 44 46 49  EVEN.......D3DFI
  00007CE0: 45 4C 44 5F 50 52 4F 47 52 45 53 53 49 56 45 F1  ELD_PROGRESSIVE.
  00007CF0: 03 04 03 00 04 80 FF FF FF 7F 14 44 33 44 46 49  ...........D3DFI
  00007D00: 45 4C 44 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F1  ELD_FORCE_DWORD.
  00007D10: 1E 00 07 10 04 00 00 00 74 00 00 00 3D 12 00 00  ........t...=...
  00007D20: 0D 5F 44 33 44 46 49 45 4C 44 54 59 50 45 F2 F1  ._D3DFIELDTYPE..
  00007D30: 2A 00 03 12 05 14 03 00 3E 12 00 00 00 00 05 46  *.......>......F
  00007D40: 69 65 6C 64 05 14 03 00 75 00 00 00 04 00 0B 56  ield....u......V
  00007D50: 42 6C 61 6E 6B 43 6F 75 6E 74 F2 F1 26 00 05 10  BlankCount..&...
  00007D60: 02 00 00 00 3F 12 00 00 00 00 00 00 00 00 00 00  ....?...........
  00007D70: 08 00 10 5F 44 33 44 46 49 45 4C 44 5F 53 54 41  ..._D3DFIELD_STA
  00007D80: 54 55 53 F1 0A 00 02 10 46 11 00 00 0A 04 00 00  TUS.....F.......
  00007D90: 1A 00 09 10 12 00 00 00 46 11 00 00 41 12 00 00  ........F...A...
  00007DA0: 07 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  00007DB0: 12 00 00 00 46 11 00 00 41 12 00 00 07 00 01 00  ....F...A.......
  00007DC0: DE 10 00 00 00 00 00 00 72 00 03 12 00 14 03 00  ........r.......
  00007DD0: F3 11 00 00 00 00 F2 F1 0B 14 03 00 42 12 00 00  ............B...
  00007DE0: 05 52 65 73 65 74 F2 F1 0B 14 03 00 43 12 00 00  .Reset......C...
  00007DF0: 07 47 65 74 53 69 7A 65 0B 14 03 00 43 12 00 00  .GetSize....C...
  00007E00: 08 47 65 74 53 70 61 63 65 F3 F2 F1 05 14 03 00  .GetSpace.......
  00007E10: 22 00 00 00 0C 00 03 52 75 6E F2 F1 05 14 03 00  "......Run......
  00007E20: 22 00 00 00 10 00 04 4E 65 78 74 F1 05 14 03 00  "......Next.....
  00007E30: 22 00 00 00 14 00 04 53 69 7A 65 F1 1E 00 05 10  "......Size.....
  00007E40: 07 00 00 00 44 12 00 00 00 00 00 00 00 00 00 00  ....D...........
  00007E50: 18 00 08 44 33 44 46 69 78 75 70 F1 0A 00 02 10  ...D3DFixup.....
  00007E60: 4B 11 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  K...............
  00007E70: 4B 11 00 00 46 12 00 00 07 00 01 00 2F 11 00 00  K...F......./...
  00007E80: 00 00 00 00 0E 00 01 12 02 00 00 00 47 11 00 00  ............G...
  00007E90: 74 00 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  t...........K...
  00007EA0: 46 12 00 00 07 00 02 00 48 12 00 00 00 00 00 00  F.......H.......
  00007EB0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007EC0: 07 00 00 00 09 10 00 00 00 00 00 00 12 00 01 12  ................
  00007ED0: 03 00 00 00 22 00 00 00 4C 11 00 00 47 11 00 00  ...."...L...G...
  00007EE0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007EF0: 07 00 03 00 4B 12 00 00 00 00 00 00 16 00 01 12  ....K...........
  00007F00: 04 00 00 00 22 00 00 00 93 10 00 00 93 10 00 00  ...."...........
  00007F10: 93 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ............K...
  00007F20: 46 12 00 00 07 00 04 00 4D 12 00 00 00 00 00 00  F.......M.......
  00007F30: 1A 00 01 12 05 00 00 00 22 00 00 00 75 00 00 00  ........"...u...
  00007F40: 93 10 00 00 93 10 00 00 93 10 00 00 1A 00 09 10  ................
  00007F50: 12 00 00 00 4B 11 00 00 46 12 00 00 07 00 05 00  ....K...F.......
  00007F60: 4F 12 00 00 00 00 00 00 16 00 01 12 04 00 00 00  O...............
  00007F70: 22 00 00 00 22 00 00 00 75 00 00 00 5E 11 00 00  "..."...u...^...
  00007F80: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00007F90: 07 00 04 00 51 12 00 00 00 00 00 00 16 00 01 12  ....Q...........
  00007FA0: 04 00 00 00 22 00 00 00 11 11 00 00 75 00 00 00  ....".......u...
  00007FB0: 5E 11 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ^...........K...
  00007FC0: 46 12 00 00 07 00 04 00 53 12 00 00 00 00 00 00  F.......S.......
  00007FD0: 12 00 01 12 03 00 00 00 22 00 00 00 51 10 00 00  ........"...Q...
  00007FE0: 51 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  Q...........K...
  00007FF0: 46 12 00 00 07 00 03 00 55 12 00 00 00 00 00 00  F.......U.......
  00008000: 12 00 01 12 03 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00008010: C2 10 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  ............K...
  00008020: 46 12 00 00 07 00 03 00 57 12 00 00 00 00 00 00  F.......W.......
  00008030: 12 00 01 12 03 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  00008040: 25 11 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  %...........K...
  00008050: 46 12 00 00 07 00 03 00 59 12 00 00 00 00 00 00  F.......Y.......
  00008060: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  00008070: 07 00 02 00 31 10 00 00 00 00 00 00 16 00 01 12  ....1...........
  00008080: 04 00 00 00 22 00 00 00 74 00 00 00 D5 10 00 00  ...."...t.......
  00008090: 22 00 00 00 1A 00 09 10 12 00 00 00 4B 11 00 00  "...........K...
  000080A0: 46 12 00 00 07 00 04 00 5C 12 00 00 00 00 00 00  F.......\.......
  000080B0: 0E 00 01 12 02 00 00 00 22 00 00 00 75 00 00 00  ........"...u...
  000080C0: 1A 00 09 10 12 00 00 00 4B 11 00 00 46 12 00 00  ........K...F...
  000080D0: 07 00 02 00 5E 12 00 00 00 00 00 00 1A 00 09 10  ....^...........
  000080E0: 12 00 00 00 4B 11 00 00 46 12 00 00 07 00 01 00  ....K...F.......
  000080F0: DE 10 00 00 00 00 00 00 A2 01 03 12 00 14 03 00  ................
  00008100: F3 11 00 00 00 00 F2 F1 0B 14 03 00 47 12 00 00  ............G...
  00008110: 06 56 65 72 69 66 79 F1 0B 14 03 00 49 12 00 00  .Verify.....I...
  00008120: 0A 42 65 67 69 6E 46 69 78 75 70 F1 0B 14 03 00  .BeginFixup.....
  00008130: 4A 12 00 00 08 45 6E 64 46 69 78 75 70 F3 F2 F1  J....EndFixup...
  00008140: 0B 14 03 00 4C 12 00 00 0D 52 75 6E 50 75 73 68  ....L....RunPush
  00008150: 42 75 66 66 65 72 F2 F1 0B 14 03 00 4E 12 00 00  Buffer......N...
  00008160: 0C 53 65 74 4D 6F 64 65 6C 56 69 65 77 F3 F2 F1  .SetModelView...
  00008170: 0B 14 03 00 50 12 00 00 17 53 65 74 56 65 72 74  ....P....SetVert
  00008180: 65 78 42 6C 65 6E 64 4D 6F 64 65 6C 56 69 65 77  exBlendModelView
  00008190: 0B 14 03 00 52 12 00 00 14 53 65 74 56 65 72 74  ....R....SetVert
  000081A0: 65 78 53 68 61 64 65 72 49 6E 70 75 74 F3 F2 F1  exShaderInput...
  000081B0: 0B 14 03 00 54 12 00 00 1A 53 65 74 56 65 72 74  ....T....SetVert
  000081C0: 65 78 53 68 61 64 65 72 49 6E 70 75 74 44 69 72  exShaderInputDir
  000081D0: 65 63 74 F1 0B 14 03 00 56 12 00 00 0F 53 65 74  ect.....V....Set
  000081E0: 52 65 6E 64 65 72 54 61 72 67 65 74 0B 14 03 00  RenderTarget....
  000081F0: 58 12 00 00 0A 53 65 74 54 65 78 74 75 72 65 F1  X....SetTexture.
  00008200: 0B 14 03 00 5A 12 00 00 0A 53 65 74 50 61 6C 65  ....Z....SetPale
  00008210: 74 74 65 F1 0B 14 03 00 5B 12 00 00 11 45 6E 64  tte.....[....End
  00008220: 56 69 73 69 62 69 6C 69 74 79 54 65 73 74 F2 F1  VisibilityTest..
  00008230: 0B 14 03 00 5D 12 00 00 17 53 65 74 56 65 72 74  ....]....SetVert
  00008240: 65 78 53 68 61 64 65 72 43 6F 6E 73 74 61 6E 74  exShaderConstant
  00008250: 0B 14 03 00 5F 12 00 00 04 4A 75 6D 70 F3 F2 F1  ...._....Jump...
  00008260: 0B 14 03 00 60 12 00 00 07 47 65 74 53 69 7A 65  ....`....GetSize
  00008270: 05 14 03 00 22 00 00 00 0C 00 04 53 69 7A 65 F1  ...."......Size.
  00008280: 05 14 03 00 22 00 00 00 10 00 0E 41 6C 6C 6F 63  ...."......Alloc
  00008290: 61 74 69 6F 6E 53 69 7A 65 F3 F2 F1 22 00 05 10  ationSize..."...
  000082A0: 12 00 00 00 61 12 00 00 00 00 00 00 00 00 00 00  ....a...........
  000082B0: 14 00 0D 44 33 44 50 75 73 68 42 75 66 66 65 72  ...D3DPushBuffer
  000082C0: 42 00 03 12 05 14 03 00 71 10 00 00 00 00 0C 56  B.......q......V
  000082D0: 65 72 74 65 78 42 75 66 66 65 72 F1 05 14 03 00  ertexBuffer.....
  000082E0: 75 00 00 00 04 00 06 53 74 72 69 64 65 F3 F2 F1  u......Stride...
  000082F0: 05 14 03 00 75 00 00 00 08 00 06 4F 66 66 73 65  ....u......Offse
  00008300: 74 F3 F2 F1 26 00 05 10 03 00 00 00 63 12 00 00  t...&.......c...
  00008310: 00 00 00 00 00 00 00 00 0C 00 10 5F 44 33 44 53  ..........._D3DS
  00008320: 54 52 45 41 4D 5F 49 4E 50 55 54 F1 6E 00 03 12  TREAM_INPUT.n...
  00008330: 05 14 03 00 22 00 00 00 00 00 05 46 6C 61 67 73  ...."......Flags
  00008340: 05 14 03 00 03 04 00 00 04 00 07 70 4D 65 6D 6F  ...........pMemo
  00008350: 72 79 F2 F1 05 14 03 00 22 00 00 00 08 00 04 53  ry......"......S
  00008360: 69 7A 65 F1 05 14 03 00 22 00 00 00 0C 00 05 50  ize....."......P
  00008370: 69 74 63 68 05 14 03 00 22 00 00 00 10 00 09 5A  itch...."......Z
  00008380: 53 74 61 72 74 54 61 67 05 14 03 00 22 00 00 00  StartTag...."...
  00008390: 14 00 07 5A 4F 66 66 73 65 74 F2 F1 1E 00 05 10  ...ZOffset......
  000083A0: 06 00 00 00 65 12 00 00 00 00 00 00 00 00 00 00  ....e...........
  000083B0: 18 00 08 5F 44 33 44 54 49 4C 45 F1 2A 00 03 12  ..._D3DTILE.*...
  000083C0: 03 04 03 00 00 00 0A 44 33 44 4D 45 4D 5F 41 47  .......D3DMEM_AG
  000083D0: 50 F3 F2 F1 03 04 03 00 01 00 0C 44 33 44 4D 45  P..........D3DME
  000083E0: 4D 5F 56 49 44 45 4F F1 1A 00 07 10 02 00 00 00  M_VIDEO.........
  000083F0: 74 00 00 00 67 12 00 00 0A 5F 44 33 44 4D 45 4D  t...g...._D3DMEM
  00008400: 4F 52 59 F1 0A 00 02 10 F3 11 00 00 0A 00 00 00  ORY.............
  00008410: 0A 00 02 10 F3 11 00 00 0A 04 00 00 1A 00 09 10  ................
  00008420: 22 00 00 00 F3 11 00 00 6A 12 00 00 07 00 00 00  ".......j.......
  00008430: 09 10 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  00008440: 2E 10 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  ................
  00008450: 6A 12 00 00 07 00 01 00 6C 12 00 00 00 00 00 00  j.......l.......
  00008460: 1A 00 09 10 1F 10 00 00 F3 11 00 00 6A 12 00 00  ............j...
  00008470: 07 00 00 00 09 10 00 00 00 00 00 00 16 00 01 12  ................
  00008480: 04 00 00 00 02 10 00 00 D5 10 00 00 22 00 00 00  ............"...
  00008490: 22 00 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  "...............
  000084A0: 6A 12 00 00 07 00 04 00 6F 12 00 00 00 00 00 00  j.......o.......
  000084B0: 12 00 01 12 03 00 00 00 02 10 00 00 03 04 00 00  ................
  000084C0: 22 04 00 00 1A 00 09 10 12 00 00 00 F3 11 00 00  "...............
  000084D0: 6A 12 00 00 07 00 03 00 71 12 00 00 00 00 00 00  j.......q.......
  000084E0: 0A 00 01 12 01 00 00 00 02 10 00 00 1A 00 09 10  ................
  000084F0: 12 00 00 00 F3 11 00 00 6A 12 00 00 07 00 01 00  ........j.......
  00008500: 73 12 00 00 00 00 00 00 1A 00 09 10 74 00 00 00  s...........t...
  00008510: F3 11 00 00 6A 12 00 00 07 00 00 00 09 10 00 00  ....j...........
  00008520: 00 00 00 00 1A 00 09 10 03 00 00 00 F3 11 00 00  ................
  00008530: 6A 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  j...............
  00008540: 0A 00 01 12 01 00 00 00 68 12 00 00 1A 00 09 10  ........h.......
  00008550: 03 00 00 00 F3 11 00 00 6A 12 00 00 07 00 01 00  ........j.......
  00008560: 77 12 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  w...............
  00008570: 03 04 00 00 1A 00 09 10 03 00 00 00 F3 11 00 00  ................
  00008580: 6A 12 00 00 07 00 01 00 79 12 00 00 00 00 00 00  j.......y.......
  00008590: 1E 01 03 12 0B 14 03 00 6B 12 00 00 06 41 64 64  ........k....Add
  000085A0: 52 65 66 F1 0B 14 03 00 6B 12 00 00 07 52 65 6C  Ref.....k....Rel
  000085B0: 65 61 73 65 0B 14 03 00 6D 12 00 00 09 47 65 74  ease....m....Get
  000085C0: 44 65 76 69 63 65 F2 F1 0B 14 03 00 6E 12 00 00  Device......n...
  000085D0: 07 47 65 74 54 79 70 65 0B 14 03 00 70 12 00 00  .GetType....p...
  000085E0: 0E 53 65 74 50 72 69 76 61 74 65 44 61 74 61 F1  .SetPrivateData.
  000085F0: 0B 14 03 00 72 12 00 00 0E 47 65 74 50 72 69 76  ....r....GetPriv
  00008600: 61 74 65 44 61 74 61 F1 0B 14 03 00 74 12 00 00  ateData.....t...
  00008610: 0F 46 72 65 65 50 72 69 76 61 74 65 44 61 74 61  .FreePrivateData
  00008620: 0B 14 03 00 75 12 00 00 06 49 73 42 75 73 79 F1  ....u....IsBusy.
  00008630: 0B 14 03 00 76 12 00 00 11 42 6C 6F 63 6B 55 6E  ....v....BlockUn
  00008640: 74 69 6C 4E 6F 74 42 75 73 79 F2 F1 0B 14 03 00  tilNotBusy......
  00008650: 78 12 00 00 12 4D 6F 76 65 52 65 73 6F 75 72 63  x....MoveResourc
  00008660: 65 4D 65 6D 6F 72 79 F1 0B 14 03 00 7A 12 00 00  eMemory.....z...
  00008670: 08 52 65 67 69 73 74 65 72 F3 F2 F1 05 14 03 00  .Register.......
  00008680: 22 00 00 00 00 00 06 43 6F 6D 6D 6F 6E F3 F2 F1  "......Common...
  00008690: 05 14 03 00 22 00 00 00 04 00 04 44 61 74 61 F1  ...."......Data.
  000086A0: 05 14 03 00 22 00 00 00 08 00 04 4C 6F 63 6B F1  ...."......Lock.
  000086B0: 22 00 05 10 0E 00 00 00 7B 12 00 00 00 00 00 00  ".......{.......
  000086C0: 00 00 00 00 0C 00 0B 44 33 44 52 65 73 6F 75 72  .......D3DResour
  000086D0: 63 65 F2 F1 86 00 03 12 05 14 03 00 1B 10 00 00  ce..............
  000086E0: 00 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  000086F0: 1F 10 00 00 04 00 04 54 79 70 65 F1 05 14 03 00  .......Type.....
  00008700: 22 00 00 00 08 00 05 55 73 61 67 65 05 14 03 00  "......Usage....
  00008710: 75 00 00 00 0C 00 04 53 69 7A 65 F1 05 14 03 00  u......Size.....
  00008720: 22 00 00 00 10 00 0F 4D 75 6C 74 69 53 61 6D 70  "......MultiSamp
  00008730: 6C 65 54 79 70 65 F2 F1 05 14 03 00 75 00 00 00  leType......u...
  00008740: 14 00 05 57 69 64 74 68 05 14 03 00 75 00 00 00  ...Width....u...
  00008750: 18 00 06 48 65 69 67 68 74 F3 F2 F1 26 00 05 10  ...Height...&...
  00008760: 07 00 00 00 7D 12 00 00 00 00 00 00 00 00 00 00  ....}...........
  00008770: 1C 00 10 5F 44 33 44 53 55 52 46 41 43 45 5F 44  ..._D3DSURFACE_D
  00008780: 45 53 43 F1 22 00 03 12 05 14 03 00 74 00 00 00  ESC.".......t...
  00008790: 00 00 05 50 69 74 63 68 05 14 03 00 03 04 00 00  ...Pitch........
  000087A0: 04 00 05 70 42 69 74 73 26 00 05 10 02 00 00 00  ...pBits&.......
  000087B0: 7F 12 00 00 00 00 00 00 00 00 00 00 08 00 0F 5F  ..............._
  000087C0: 44 33 44 4C 4F 43 4B 45 44 5F 52 45 43 54 F2 F1  D3DLOCKED_RECT..
  000087D0: 7A 00 03 12 05 14 03 00 1B 10 00 00 00 00 06 46  z..............F
  000087E0: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 1F 10 00 00  ormat...........
  000087F0: 04 00 04 54 79 70 65 F1 05 14 03 00 22 00 00 00  ...Type....."...
  00008800: 08 00 05 55 73 61 67 65 05 14 03 00 75 00 00 00  ...Usage....u...
  00008810: 0C 00 04 53 69 7A 65 F1 05 14 03 00 75 00 00 00  ...Size.....u...
  00008820: 10 00 05 57 69 64 74 68 05 14 03 00 75 00 00 00  ...Width....u...
  00008830: 14 00 06 48 65 69 67 68 74 F3 F2 F1 05 14 03 00  ...Height.......
  00008840: 75 00 00 00 18 00 05 44 65 70 74 68 26 00 05 10  u......Depth&...
  00008850: 07 00 00 00 81 12 00 00 00 00 00 00 00 00 00 00  ................
  00008860: 1C 00 0F 5F 44 33 44 56 4F 4C 55 4D 45 5F 44 45  ..._D3DVOLUME_DE
  00008870: 53 43 F2 F1 0A 00 02 10 D8 11 00 00 0A 04 00 00  SC..............
  00008880: 1A 00 09 10 12 00 00 00 D8 11 00 00 83 12 00 00  ................
  00008890: 07 00 01 00 B6 11 00 00 00 00 00 00 0A 00 01 12  ................
  000088A0: 01 00 00 00 D4 11 00 00 1A 00 09 10 12 00 00 00  ................
  000088B0: D8 11 00 00 83 12 00 00 07 00 01 00 85 12 00 00  ................
  000088C0: 00 00 00 00 12 00 01 12 03 00 00 00 DE 11 00 00  ................
  000088D0: E1 11 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  000088E0: D8 11 00 00 83 12 00 00 07 00 03 00 87 12 00 00  ................
  000088F0: 00 00 00 00 1A 00 09 10 12 00 00 00 D8 11 00 00  ................
  00008900: 83 12 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  00008910: 6E 00 03 12 00 14 03 00 B5 11 00 00 00 00 F2 F1  n...............
  00008920: 0B 14 03 00 84 12 00 00 0C 47 65 74 43 6F 6E 74  .........GetCont
  00008930: 61 69 6E 65 72 F3 F2 F1 0B 14 03 00 86 12 00 00  ainer...........
  00008940: 07 47 65 74 44 65 73 63 0B 14 03 00 88 12 00 00  .GetDesc........
  00008950: 07 4C 6F 63 6B 42 6F 78 0B 14 03 00 89 12 00 00  .LockBox........
  00008960: 09 55 6E 6C 6F 63 6B 42 6F 78 F2 F1 05 14 03 00  .UnlockBox......
  00008970: C2 10 00 00 14 00 06 50 61 72 65 6E 74 F3 F2 F1  .......Parent...
  00008980: 1E 00 05 10 06 00 00 00 8A 12 00 00 00 00 00 00  ................
  00008990: 00 00 00 00 18 00 09 44 33 44 56 6F 6C 75 6D 65  .......D3DVolume
  000089A0: 66 00 03 12 05 14 03 00 75 00 00 00 00 00 04 4C  f.......u......L
  000089B0: 65 66 74 F1 05 14 03 00 75 00 00 00 04 00 03 54  eft.....u......T
  000089C0: 6F 70 F2 F1 05 14 03 00 75 00 00 00 08 00 05 52  op......u......R
  000089D0: 69 67 68 74 05 14 03 00 75 00 00 00 0C 00 06 42  ight....u......B
  000089E0: 6F 74 74 6F 6D F3 F2 F1 05 14 03 00 75 00 00 00  ottom.......u...
  000089F0: 10 00 05 46 72 6F 6E 74 05 14 03 00 75 00 00 00  ...Front....u...
  00008A00: 14 00 04 42 61 63 6B F1 1E 00 05 10 06 00 00 00  ...Back.........
  00008A10: 8C 12 00 00 00 00 00 00 00 00 00 00 18 00 07 5F  ..............._
  00008A20: 44 33 44 42 4F 58 F2 F1 3E 00 03 12 05 14 03 00  D3DBOX..>.......
  00008A30: 74 00 00 00 00 00 08 52 6F 77 50 69 74 63 68 F1  t......RowPitch.
  00008A40: 05 14 03 00 74 00 00 00 04 00 0A 53 6C 69 63 65  ....t......Slice
  00008A50: 50 69 74 63 68 F3 F2 F1 05 14 03 00 03 04 00 00  Pitch...........
  00008A60: 08 00 05 70 42 69 74 73 26 00 05 10 03 00 00 00  ...pBits&.......
  00008A70: 8E 12 00 00 00 00 00 00 00 00 00 00 0C 00 0E 5F  ..............._
  00008A80: 44 33 44 4C 4F 43 4B 45 44 5F 42 4F 58 F3 F2 F1  D3DLOCKED_BOX...
  00008A90: 26 00 03 12 05 14 03 00 1B 10 00 00 00 00 06 46  &..............F
  00008AA0: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 1F 10 00 00  ormat...........
  00008AB0: 04 00 04 54 79 70 65 F1 2A 00 05 10 02 00 00 00  ...Type.*.......
  00008AC0: 90 12 00 00 00 00 00 00 00 00 00 00 08 00 15 5F  ..............._
  00008AD0: 44 33 44 56 45 52 54 45 58 42 55 46 46 45 52 5F  D3DVERTEXBUFFER_
  00008AE0: 44 45 53 43 26 00 03 12 05 14 03 00 1B 10 00 00  DESC&...........
  00008AF0: 00 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  00008B00: 1F 10 00 00 04 00 04 54 79 70 65 F1 2A 00 05 10  .......Type.*...
  00008B10: 02 00 00 00 92 12 00 00 00 00 00 00 00 00 00 00  ................
  00008B20: 08 00 14 5F 44 33 44 49 4E 44 45 58 42 55 46 46  ..._D3DINDEXBUFF
  00008B30: 45 52 5F 44 45 53 43 F1 22 00 05 10 00 00 80 00  ER_DESC.".......
  00008B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0B 44  ...............D
  00008B50: 33 44 58 56 45 43 54 4F 52 32 F2 F1 0A 00 02 10  3DXVECTOR2......
  00008B60: 94 12 00 00 0A 04 00 00 0E 00 01 12 02 00 00 00  ................
  00008B70: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00008B80: 94 12 00 00 95 12 00 00 0B 00 02 00 96 12 00 00  ................
  00008B90: 00 00 00 00 0A 00 01 10 40 00 00 00 01 00 F2 F1  ........@.......
  00008BA0: 0A 00 02 10 98 12 00 00 0A 00 00 00 0A 00 01 12  ................
  00008BB0: 01 00 00 00 99 12 00 00 1A 00 09 10 03 00 00 00  ................
  00008BC0: 94 12 00 00 95 12 00 00 0B 00 01 00 9A 12 00 00  ................
  00008BD0: 00 00 00 00 1A 00 09 10 03 00 00 00 94 12 00 00  ................
  00008BE0: 95 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00008BF0: 1A 00 06 12 03 00 00 00 97 12 00 00 03 00 00 00  ................
  00008C00: 9B 12 00 00 03 00 00 00 9C 12 00 00 1A 00 09 10  ................
  00008C10: 40 04 00 00 94 12 00 00 95 12 00 00 0B 00 00 00  @...............
  00008C20: 09 10 00 00 00 00 00 00 0A 00 01 10 94 12 00 00  ................
  00008C30: 01 00 F2 F1 0A 00 02 10 9F 12 00 00 0A 04 00 00  ................
  00008C40: 1A 00 09 10 99 12 00 00 94 12 00 00 A0 12 00 00  ................
  00008C50: 0B 00 00 00 09 10 00 00 00 00 00 00 0A 00 02 10  ................
  00008C60: 94 12 00 00 2A 00 00 00 0A 00 02 10 9F 12 00 00  ....*...........
  00008C70: 2A 00 00 00 0A 00 01 12 01 00 00 00 A3 12 00 00  *...............
  00008C80: 1A 00 09 10 A2 12 00 00 94 12 00 00 95 12 00 00  ................
  00008C90: 0B 00 01 00 A4 12 00 00 00 00 00 00 0A 00 01 12  ................
  00008CA0: 01 00 00 00 40 00 00 00 1A 00 09 10 A2 12 00 00  ....@...........
  00008CB0: 94 12 00 00 95 12 00 00 0B 00 01 00 A6 12 00 00  ................
  00008CC0: 00 00 00 00 1A 00 09 10 94 12 00 00 94 12 00 00  ................
  00008CD0: A0 12 00 00 0B 00 01 00 A4 12 00 00 00 00 00 00  ................
  00008CE0: 1A 00 09 10 94 12 00 00 94 12 00 00 A0 12 00 00  ................
  00008CF0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  00008D00: 03 00 00 00 A8 12 00 00 03 00 00 00 A9 12 00 00  ................
  00008D10: 12 00 06 12 03 00 00 00 A8 12 00 00 03 00 00 00  ................
  00008D20: A9 12 00 00 1A 00 09 10 94 12 00 00 94 12 00 00  ................
  00008D30: A0 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  00008D40: 1A 00 09 10 74 00 00 00 94 12 00 00 A0 12 00 00  ....t...........
  00008D50: 0B 00 01 00 A4 12 00 00 00 00 00 00 32 01 03 12  ............2...
  00008D60: 07 14 03 00 9D 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00008D70: 54 4F 52 32 0B 14 03 00 9E 12 00 00 10 6F 70 65  TOR2.........ope
  00008D80: 72 61 74 6F 72 20 66 6C 6F 61 74 20 2A F3 F2 F1  rator float *...
  00008D90: 0B 14 03 00 A1 12 00 00 16 6F 70 65 72 61 74 6F  .........operato
  00008DA0: 72 20 63 6F 6E 73 74 20 66 6C 6F 61 74 20 2A F1  r const float *.
  00008DB0: 0B 14 03 00 A5 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00008DC0: 72 2B 3D F1 0B 14 03 00 A5 12 00 00 0A 6F 70 65  r+=..........ope
  00008DD0: 72 61 74 6F 72 2D 3D F1 0B 14 03 00 A7 12 00 00  rator-=.........
  00008DE0: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  00008DF0: A7 12 00 00 0A 6F 70 65 72 61 74 6F 72 2F 3D F1  .....operator/=.
  00008E00: 07 14 02 00 AA 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  00008E10: 72 2B F2 F1 07 14 02 00 AB 12 00 00 09 6F 70 65  r+...........ope
  00008E20: 72 61 74 6F 72 2D F2 F1 0B 14 03 00 AC 12 00 00  rator-..........
  00008E30: 09 6F 70 65 72 61 74 6F 72 2A F2 F1 0B 14 03 00  .operator*......
  00008E40: AC 12 00 00 09 6F 70 65 72 61 74 6F 72 2F F2 F1  .....operator/..
  00008E50: 0B 14 03 00 AD 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00008E60: 72 3D 3D F1 0B 14 03 00 AD 12 00 00 0A 6F 70 65  r==..........ope
  00008E70: 72 61 74 6F 72 21 3D F1 05 14 03 00 40 00 00 00  rator!=.....@...
  00008E80: 00 00 01 78 05 14 03 00 40 00 00 00 04 00 01 79  ...x....@......y
  00008E90: 22 00 05 10 13 00 46 00 AE 12 00 00 00 00 00 00  ".....F.........
  00008EA0: 00 00 00 00 08 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  00008EB0: 52 32 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  R2.."...........
  00008EC0: 00 00 00 00 00 00 00 00 00 00 0B 44 33 44 58 56  ...........D3DXV
  00008ED0: 45 43 54 4F 52 33 F2 F1 0A 00 02 10 B0 12 00 00  ECTOR3..........
  00008EE0: 0A 04 00 00 12 00 01 12 03 00 00 00 40 00 00 00  ............@...
  00008EF0: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00008F00: B0 12 00 00 B1 12 00 00 0B 00 03 00 B2 12 00 00  ................
  00008F10: 00 00 00 00 0A 00 01 10 27 12 00 00 01 00 F2 F1  ........'.......
  00008F20: 0A 00 02 10 B4 12 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  00008F30: 01 00 00 00 B5 12 00 00 1A 00 09 10 03 00 00 00  ................
  00008F40: B0 12 00 00 B1 12 00 00 0B 00 01 00 B6 12 00 00  ................
  00008F50: 00 00 00 00 1A 00 09 10 03 00 00 00 B0 12 00 00  ................
  00008F60: B1 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00008F70: 1A 00 09 10 03 00 00 00 B0 12 00 00 B1 12 00 00  ................
  00008F80: 0B 00 00 00 09 10 00 00 00 00 00 00 22 00 06 12  ............"...
  00008F90: 03 00 00 00 B3 12 00 00 03 00 00 00 B7 12 00 00  ................
  00008FA0: 03 00 00 00 B8 12 00 00 03 00 00 00 B9 12 00 00  ................
  00008FB0: 1A 00 09 10 40 04 00 00 B0 12 00 00 B1 12 00 00  ....@...........
  00008FC0: 0B 00 00 00 09 10 00 00 00 00 00 00 0A 00 01 10  ................
  00008FD0: B0 12 00 00 01 00 F2 F1 0A 00 02 10 BC 12 00 00  ................
  00008FE0: 0A 04 00 00 1A 00 09 10 99 12 00 00 B0 12 00 00  ................
  00008FF0: BD 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009000: 0A 00 02 10 B0 12 00 00 2A 00 00 00 0A 00 02 10  ........*.......
  00009010: BC 12 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  00009020: C0 12 00 00 1A 00 09 10 BF 12 00 00 B0 12 00 00  ................
  00009030: B1 12 00 00 0B 00 01 00 C1 12 00 00 00 00 00 00  ................
  00009040: 1A 00 09 10 BF 12 00 00 B0 12 00 00 B1 12 00 00  ................
  00009050: 0B 00 01 00 A6 12 00 00 00 00 00 00 1A 00 09 10  ................
  00009060: B0 12 00 00 B0 12 00 00 BD 12 00 00 0B 00 01 00  ................
  00009070: C1 12 00 00 00 00 00 00 1A 00 09 10 B0 12 00 00  ................
  00009080: B0 12 00 00 BD 12 00 00 0B 00 00 00 09 10 00 00  ................
  00009090: 00 00 00 00 12 00 06 12 03 00 00 00 C4 12 00 00  ................
  000090A0: 03 00 00 00 C5 12 00 00 12 00 06 12 03 00 00 00  ................
  000090B0: C4 12 00 00 03 00 00 00 C5 12 00 00 1A 00 09 10  ................
  000090C0: B0 12 00 00 B0 12 00 00 BD 12 00 00 0B 00 01 00  ................
  000090D0: A6 12 00 00 00 00 00 00 1A 00 09 10 74 00 00 00  ............t...
  000090E0: B0 12 00 00 BD 12 00 00 0B 00 01 00 C1 12 00 00  ................
  000090F0: 00 00 00 00 26 01 03 12 00 14 03 00 27 12 00 00  ....&.......'...
  00009100: 00 00 F2 F1 07 14 04 00 BA 12 00 00 0B 44 33 44  .............D3D
  00009110: 58 56 45 43 54 4F 52 33 0B 14 03 00 BB 12 00 00  XVECTOR3........
  00009120: 10 6F 70 65 72 61 74 6F 72 20 66 6C 6F 61 74 20  .operator float 
  00009130: 2A F3 F2 F1 0B 14 03 00 BE 12 00 00 16 6F 70 65  *............ope
  00009140: 72 61 74 6F 72 20 63 6F 6E 73 74 20 66 6C 6F 61  rator const floa
  00009150: 74 20 2A F1 0B 14 03 00 C2 12 00 00 0A 6F 70 65  t *..........ope
  00009160: 72 61 74 6F 72 2B 3D F1 0B 14 03 00 C2 12 00 00  rator+=.........
  00009170: 0A 6F 70 65 72 61 74 6F 72 2D 3D F1 0B 14 03 00  .operator-=.....
  00009180: C3 12 00 00 0A 6F 70 65 72 61 74 6F 72 2A 3D F1  .....operator*=.
  00009190: 0B 14 03 00 C3 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  000091A0: 72 2F 3D F1 07 14 02 00 C6 12 00 00 09 6F 70 65  r/=..........ope
  000091B0: 72 61 74 6F 72 2B F2 F1 07 14 02 00 C7 12 00 00  rator+..........
  000091C0: 09 6F 70 65 72 61 74 6F 72 2D F2 F1 0B 14 03 00  .operator-......
  000091D0: C8 12 00 00 09 6F 70 65 72 61 74 6F 72 2A F2 F1  .....operator*..
  000091E0: 0B 14 03 00 C8 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000091F0: 72 2F F2 F1 0B 14 03 00 C9 12 00 00 0A 6F 70 65  r/...........ope
  00009200: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 C9 12 00 00  rator==.........
  00009210: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 22 00 05 10  .operator!=."...
  00009220: 13 00 46 00 CA 12 00 00 00 00 00 00 00 00 00 00  ..F.............
  00009230: 0C 00 0B 44 33 44 58 56 45 43 54 4F 52 33 F2 F1  ...D3DXVECTOR3..
  00009240: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  00009250: 00 00 00 00 00 00 0B 44 33 44 58 56 45 43 54 4F  .......D3DXVECTO
  00009260: 52 34 F2 F1 0A 00 02 10 CC 12 00 00 0A 04 00 00  R4..............
  00009270: 16 00 01 12 04 00 00 00 40 00 00 00 40 00 00 00  ........@...@...
  00009280: 40 00 00 00 40 00 00 00 1A 00 09 10 03 00 00 00  @...@...........
  00009290: CC 12 00 00 CD 12 00 00 0B 00 04 00 CE 12 00 00  ................
  000092A0: 00 00 00 00 1A 00 09 10 03 00 00 00 CC 12 00 00  ................
  000092B0: CD 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  000092C0: 1A 00 09 10 03 00 00 00 CC 12 00 00 CD 12 00 00  ................
  000092D0: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  000092E0: 03 00 00 00 CF 12 00 00 03 00 00 00 D0 12 00 00  ................
  000092F0: 03 00 00 00 D1 12 00 00 1A 00 09 10 40 04 00 00  ............@...
  00009300: CC 12 00 00 CD 12 00 00 0B 00 00 00 09 10 00 00  ................
  00009310: 00 00 00 00 0A 00 01 10 CC 12 00 00 01 00 F2 F1  ................
  00009320: 0A 00 02 10 D4 12 00 00 0A 04 00 00 1A 00 09 10  ................
  00009330: 99 12 00 00 CC 12 00 00 D5 12 00 00 0B 00 00 00  ................
  00009340: 09 10 00 00 00 00 00 00 0A 00 02 10 CC 12 00 00  ................
  00009350: 2A 00 00 00 0A 00 02 10 D4 12 00 00 2A 00 00 00  *...........*...
  00009360: 0A 00 01 12 01 00 00 00 D8 12 00 00 1A 00 09 10  ................
  00009370: D7 12 00 00 CC 12 00 00 CD 12 00 00 0B 00 01 00  ................
  00009380: D9 12 00 00 00 00 00 00 1A 00 09 10 D7 12 00 00  ................
  00009390: CC 12 00 00 CD 12 00 00 0B 00 01 00 A6 12 00 00  ................
  000093A0: 00 00 00 00 1A 00 09 10 CC 12 00 00 CC 12 00 00  ................
  000093B0: D5 12 00 00 0B 00 01 00 D9 12 00 00 00 00 00 00  ................
  000093C0: 1A 00 09 10 CC 12 00 00 CC 12 00 00 D5 12 00 00  ................
  000093D0: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  000093E0: 03 00 00 00 DC 12 00 00 03 00 00 00 DD 12 00 00  ................
  000093F0: 12 00 06 12 03 00 00 00 DC 12 00 00 03 00 00 00  ................
  00009400: DD 12 00 00 1A 00 09 10 CC 12 00 00 CC 12 00 00  ................
  00009410: D5 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  00009420: 1A 00 09 10 74 00 00 00 CC 12 00 00 D5 12 00 00  ....t...........
  00009430: 0B 00 01 00 D9 12 00 00 00 00 00 00 4A 01 03 12  ............J...
  00009440: 07 14 03 00 D2 12 00 00 0B 44 33 44 58 56 45 43  .........D3DXVEC
  00009450: 54 4F 52 34 0B 14 03 00 D3 12 00 00 10 6F 70 65  TOR4.........ope
  00009460: 72 61 74 6F 72 20 66 6C 6F 61 74 20 2A F3 F2 F1  rator float *...
  00009470: 0B 14 03 00 D6 12 00 00 16 6F 70 65 72 61 74 6F  .........operato
  00009480: 72 20 63 6F 6E 73 74 20 66 6C 6F 61 74 20 2A F1  r const float *.
  00009490: 0B 14 03 00 DA 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  000094A0: 72 2B 3D F1 0B 14 03 00 DA 12 00 00 0A 6F 70 65  r+=..........ope
  000094B0: 72 61 74 6F 72 2D 3D F1 0B 14 03 00 DB 12 00 00  rator-=.........
  000094C0: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  000094D0: DB 12 00 00 0A 6F 70 65 72 61 74 6F 72 2F 3D F1  .....operator/=.
  000094E0: 07 14 02 00 DE 12 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000094F0: 72 2B F2 F1 07 14 02 00 DF 12 00 00 09 6F 70 65  r+...........ope
  00009500: 72 61 74 6F 72 2D F2 F1 0B 14 03 00 E0 12 00 00  rator-..........
  00009510: 09 6F 70 65 72 61 74 6F 72 2A F2 F1 0B 14 03 00  .operator*......
  00009520: E0 12 00 00 09 6F 70 65 72 61 74 6F 72 2F F2 F1  .....operator/..
  00009530: 0B 14 03 00 E1 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009540: 72 3D 3D F1 0B 14 03 00 E1 12 00 00 0A 6F 70 65  r==..........ope
  00009550: 72 61 74 6F 72 21 3D F1 05 14 03 00 40 00 00 00  rator!=.....@...
  00009560: 00 00 01 78 05 14 03 00 40 00 00 00 04 00 01 79  ...x....@......y
  00009570: 05 14 03 00 40 00 00 00 08 00 01 7A 05 14 03 00  ....@......z....
  00009580: 40 00 00 00 0C 00 01 77 22 00 05 10 15 00 46 00  @......w".....F.
  00009590: E2 12 00 00 00 00 00 00 00 00 00 00 10 00 0B 44  ...............D
  000095A0: 33 44 58 56 45 43 54 4F 52 34 F2 F1 22 00 05 10  3DXVECTOR4.."...
  000095B0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  000095C0: 00 00 0A 44 33 44 58 4D 41 54 52 49 58 F3 F2 F1  ...D3DXMATRIX...
  000095D0: 0A 00 02 10 E4 12 00 00 0A 04 00 00 46 00 01 12  ............F...
  000095E0: 10 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  ....@...@...@...
  000095F0: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009600: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009610: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  00009620: 40 00 00 00 1A 00 09 10 03 00 00 00 E4 12 00 00  @...............
  00009630: E5 12 00 00 0B 00 10 00 E6 12 00 00 00 00 00 00  ................
  00009640: 0A 00 02 10 92 10 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  00009650: 01 00 00 00 E8 12 00 00 1A 00 09 10 03 00 00 00  ................
  00009660: E4 12 00 00 E5 12 00 00 0B 00 01 00 E9 12 00 00  ................
  00009670: 00 00 00 00 1A 00 09 10 03 00 00 00 E4 12 00 00  ................
  00009680: E5 12 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00009690: 1A 00 09 10 03 00 00 00 E4 12 00 00 E5 12 00 00  ................
  000096A0: 0B 00 00 00 09 10 00 00 00 00 00 00 22 00 06 12  ............"...
  000096B0: 03 00 00 00 E7 12 00 00 03 00 00 00 EA 12 00 00  ................
  000096C0: 03 00 00 00 EB 12 00 00 03 00 00 00 EC 12 00 00  ................
  000096D0: 0E 00 01 12 02 00 00 00 75 00 00 00 75 00 00 00  ........u...u...
  000096E0: 0A 00 01 10 E4 12 00 00 01 00 F2 F1 0A 00 02 10  ................
  000096F0: EF 12 00 00 0A 04 00 00 1A 00 09 10 40 00 00 00  ............@...
  00009700: E4 12 00 00 F0 12 00 00 0B 00 02 00 EE 12 00 00  ................
  00009710: 00 00 00 00 0A 00 02 10 40 00 00 00 2A 00 00 00  ........@...*...
  00009720: 1A 00 09 10 F2 12 00 00 E4 12 00 00 E5 12 00 00  ................
  00009730: 0B 00 02 00 EE 12 00 00 00 00 00 00 12 00 06 12  ................
  00009740: 03 00 00 00 F1 12 00 00 03 00 00 00 F3 12 00 00  ................
  00009750: 1A 00 09 10 40 04 00 00 E4 12 00 00 E5 12 00 00  ....@...........
  00009760: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 09 10  ................
  00009770: 99 12 00 00 E4 12 00 00 F0 12 00 00 0B 00 00 00  ................
  00009780: 09 10 00 00 00 00 00 00 0A 00 02 10 E4 12 00 00  ................
  00009790: 2A 00 00 00 1A 00 09 10 F7 12 00 00 E4 12 00 00  *...............
  000097A0: E5 12 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  ................
  000097B0: 0A 00 02 10 EF 12 00 00 2A 00 00 00 0A 00 01 12  ........*.......
  000097C0: 01 00 00 00 F9 12 00 00 1A 00 09 10 F7 12 00 00  ................
  000097D0: E4 12 00 00 E5 12 00 00 0B 00 01 00 FA 12 00 00  ................
  000097E0: 00 00 00 00 12 00 06 12 03 00 00 00 F8 12 00 00  ................
  000097F0: 03 00 00 00 FB 12 00 00 1A 00 09 10 E4 12 00 00  ................
  00009800: E4 12 00 00 F0 12 00 00 0B 00 01 00 FA 12 00 00  ................
  00009810: 00 00 00 00 1A 00 09 10 E4 12 00 00 E4 12 00 00  ................
  00009820: F0 12 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009830: 12 00 06 12 03 00 00 00 FD 12 00 00 03 00 00 00  ................
  00009840: FE 12 00 00 12 00 06 12 03 00 00 00 FD 12 00 00  ................
  00009850: 03 00 00 00 FE 12 00 00 1A 00 09 10 E4 12 00 00  ................
  00009860: E4 12 00 00 F0 12 00 00 0B 00 01 00 A6 12 00 00  ................
  00009870: 00 00 00 00 12 00 06 12 03 00 00 00 01 13 00 00  ................
  00009880: 03 00 00 00 FD 12 00 00 1A 00 09 10 74 00 00 00  ............t...
  00009890: E4 12 00 00 F0 12 00 00 0B 00 01 00 FA 12 00 00  ................
  000098A0: 00 00 00 00 3A 01 03 12 00 14 03 00 91 10 00 00  ....:...........
  000098B0: 00 00 F2 F1 07 14 04 00 ED 12 00 00 0A 44 33 44  .............D3D
  000098C0: 58 4D 41 54 52 49 58 F1 07 14 02 00 F4 12 00 00  XMATRIX.........
  000098D0: 0A 6F 70 65 72 61 74 6F 72 28 29 F1 0B 14 03 00  .operator().....
  000098E0: F5 12 00 00 10 6F 70 65 72 61 74 6F 72 20 66 6C  .....operator fl
  000098F0: 6F 61 74 20 2A F3 F2 F1 0B 14 03 00 F6 12 00 00  oat *...........
  00009900: 16 6F 70 65 72 61 74 6F 72 20 63 6F 6E 73 74 20  .operator const 
  00009910: 66 6C 6F 61 74 20 2A F1 07 14 02 00 FC 12 00 00  float *.........
  00009920: 0A 6F 70 65 72 61 74 6F 72 2A 3D F1 0B 14 03 00  .operator*=.....
  00009930: FB 12 00 00 0A 6F 70 65 72 61 74 6F 72 2B 3D F1  .....operator+=.
  00009940: 0B 14 03 00 FB 12 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009950: 72 2D 3D F1 0B 14 03 00 F8 12 00 00 0A 6F 70 65  r-=..........ope
  00009960: 72 61 74 6F 72 2F 3D F1 07 14 02 00 FF 12 00 00  rator/=.........
  00009970: 09 6F 70 65 72 61 74 6F 72 2B F2 F1 07 14 02 00  .operator+......
  00009980: 00 13 00 00 09 6F 70 65 72 61 74 6F 72 2D F2 F1  .....operator-..
  00009990: 07 14 02 00 02 13 00 00 09 6F 70 65 72 61 74 6F  .........operato
  000099A0: 72 2A F2 F1 0B 14 03 00 01 13 00 00 09 6F 70 65  r*...........ope
  000099B0: 72 61 74 6F 72 2F F2 F1 0B 14 03 00 03 13 00 00  rator/..........
  000099C0: 0A 6F 70 65 72 61 74 6F 72 3D 3D F1 0B 14 03 00  .operator==.....
  000099D0: 03 13 00 00 0A 6F 70 65 72 61 74 6F 72 21 3D F1  .....operator!=.
  000099E0: 22 00 05 10 17 00 46 00 04 13 00 00 00 00 00 00  ".....F.........
  000099F0: 00 00 00 00 40 00 0A 44 33 44 58 4D 41 54 52 49  ....@..D3DXMATRI
  00009A00: 58 F3 F2 F1 26 00 05 10 00 00 80 00 00 00 00 00  X...&...........
  00009A10: 00 00 00 00 00 00 00 00 00 00 0E 44 33 44 58 51  ...........D3DXQ
  00009A20: 55 41 54 45 52 4E 49 4F 4E F3 F2 F1 0A 00 02 10  UATERNION.......
  00009A30: 06 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  ................
  00009A40: 06 13 00 00 07 13 00 00 0B 00 04 00 CE 12 00 00  ................
  00009A50: 00 00 00 00 1A 00 09 10 03 00 00 00 06 13 00 00  ................
  00009A60: 07 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  ................
  00009A70: 1A 00 09 10 03 00 00 00 06 13 00 00 07 13 00 00  ................
  00009A80: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  00009A90: 03 00 00 00 08 13 00 00 03 00 00 00 09 13 00 00  ................
  00009AA0: 03 00 00 00 0A 13 00 00 1A 00 09 10 40 04 00 00  ............@...
  00009AB0: 06 13 00 00 07 13 00 00 0B 00 00 00 09 10 00 00  ................
  00009AC0: 00 00 00 00 0A 00 01 10 06 13 00 00 01 00 F2 F1  ................
  00009AD0: 0A 00 02 10 0D 13 00 00 0A 04 00 00 1A 00 09 10  ................
  00009AE0: 99 12 00 00 06 13 00 00 0E 13 00 00 0B 00 00 00  ................
  00009AF0: 09 10 00 00 00 00 00 00 0A 00 02 10 06 13 00 00  ................
  00009B00: 2A 00 00 00 0A 00 02 10 0D 13 00 00 2A 00 00 00  *...........*...
  00009B10: 0A 00 01 12 01 00 00 00 11 13 00 00 1A 00 09 10  ................
  00009B20: 10 13 00 00 06 13 00 00 07 13 00 00 0B 00 01 00  ................
  00009B30: 12 13 00 00 00 00 00 00 1A 00 09 10 10 13 00 00  ................
  00009B40: 06 13 00 00 07 13 00 00 0B 00 01 00 A6 12 00 00  ................
  00009B50: 00 00 00 00 12 00 06 12 03 00 00 00 14 13 00 00  ................
  00009B60: 03 00 00 00 13 13 00 00 1A 00 09 10 06 13 00 00  ................
  00009B70: 06 13 00 00 0E 13 00 00 0B 00 01 00 12 13 00 00  ................
  00009B80: 00 00 00 00 1A 00 09 10 06 13 00 00 06 13 00 00  ................
  00009B90: 0E 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ................
  00009BA0: 12 00 06 12 03 00 00 00 16 13 00 00 03 00 00 00  ................
  00009BB0: 17 13 00 00 12 00 06 12 03 00 00 00 16 13 00 00  ................
  00009BC0: 03 00 00 00 17 13 00 00 1A 00 09 10 06 13 00 00  ................
  00009BD0: 06 13 00 00 0E 13 00 00 0B 00 01 00 A6 12 00 00  ................
  00009BE0: 00 00 00 00 12 00 06 12 03 00 00 00 1A 13 00 00  ................
  00009BF0: 03 00 00 00 16 13 00 00 1A 00 09 10 74 00 00 00  ............t...
  00009C00: 06 13 00 00 0E 13 00 00 0B 00 01 00 12 13 00 00  ................
  00009C10: 00 00 00 00 4E 01 03 12 07 14 03 00 0B 13 00 00  ....N...........
  00009C20: 0E 44 33 44 58 51 55 41 54 45 52 4E 49 4F 4E F1  .D3DXQUATERNION.
  00009C30: 0B 14 03 00 0C 13 00 00 10 6F 70 65 72 61 74 6F  .........operato
  00009C40: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  00009C50: 0F 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  .....operator co
  00009C60: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  00009C70: 13 13 00 00 0A 6F 70 65 72 61 74 6F 72 2B 3D F1  .....operator+=.
  00009C80: 0B 14 03 00 13 13 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009C90: 72 2D 3D F1 07 14 02 00 15 13 00 00 0A 6F 70 65  r-=..........ope
  00009CA0: 72 61 74 6F 72 2A 3D F1 0B 14 03 00 14 13 00 00  rator*=.........
  00009CB0: 0A 6F 70 65 72 61 74 6F 72 2F 3D F1 07 14 02 00  .operator/=.....
  00009CC0: 18 13 00 00 09 6F 70 65 72 61 74 6F 72 2B F2 F1  .....operator+..
  00009CD0: 07 14 02 00 19 13 00 00 09 6F 70 65 72 61 74 6F  .........operato
  00009CE0: 72 2D F2 F1 07 14 02 00 1B 13 00 00 09 6F 70 65  r-...........ope
  00009CF0: 72 61 74 6F 72 2A F2 F1 0B 14 03 00 1A 13 00 00  rator*..........
  00009D00: 09 6F 70 65 72 61 74 6F 72 2F F2 F1 0B 14 03 00  .operator/......
  00009D10: 1C 13 00 00 0A 6F 70 65 72 61 74 6F 72 3D 3D F1  .....operator==.
  00009D20: 0B 14 03 00 1C 13 00 00 0A 6F 70 65 72 61 74 6F  .........operato
  00009D30: 72 21 3D F1 05 14 03 00 40 00 00 00 00 00 01 78  r!=.....@......x
  00009D40: 05 14 03 00 40 00 00 00 04 00 01 79 05 14 03 00  ....@......y....
  00009D50: 40 00 00 00 08 00 01 7A 05 14 03 00 40 00 00 00  @......z....@...
  00009D60: 0C 00 01 77 26 00 05 10 17 00 46 00 1D 13 00 00  ...w&.....F.....
  00009D70: 00 00 00 00 00 00 00 00 10 00 0E 44 33 44 58 51  ...........D3DXQ
  00009D80: 55 41 54 45 52 4E 49 4F 4E F3 F2 F1 1E 00 05 10  UATERNION.......
  00009D90: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00009DA0: 00 00 09 44 33 44 58 50 4C 41 4E 45 0A 00 02 10  ...D3DXPLANE....
  00009DB0: 1F 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  ................
  00009DC0: 1F 13 00 00 20 13 00 00 0B 00 04 00 CE 12 00 00  .... ...........
  00009DD0: 00 00 00 00 1A 00 09 10 03 00 00 00 1F 13 00 00  ................
  00009DE0: 20 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00   ...............
  00009DF0: 1A 00 09 10 03 00 00 00 1F 13 00 00 20 13 00 00  ............ ...
  00009E00: 0B 00 00 00 09 10 00 00 00 00 00 00 1A 00 06 12  ................
  00009E10: 03 00 00 00 21 13 00 00 03 00 00 00 22 13 00 00  ....!......."...
  00009E20: 03 00 00 00 23 13 00 00 1A 00 09 10 40 04 00 00  ....#.......@...
  00009E30: 1F 13 00 00 20 13 00 00 0B 00 00 00 09 10 00 00  .... ...........
  00009E40: 00 00 00 00 0A 00 01 10 1F 13 00 00 01 00 F2 F1  ................
  00009E50: 0A 00 02 10 26 13 00 00 0A 04 00 00 1A 00 09 10  ....&...........
  00009E60: 99 12 00 00 1F 13 00 00 27 13 00 00 0B 00 00 00  ........'.......
  00009E70: 09 10 00 00 00 00 00 00 1A 00 09 10 1F 13 00 00  ................
  00009E80: 1F 13 00 00 27 13 00 00 0B 00 00 00 09 10 00 00  ....'...........
  00009E90: 00 00 00 00 0A 00 02 10 26 13 00 00 2A 00 00 00  ........&...*...
  00009EA0: 0A 00 01 12 01 00 00 00 2A 13 00 00 1A 00 09 10  ........*.......
  00009EB0: 74 00 00 00 1F 13 00 00 27 13 00 00 0B 00 01 00  t.......'.......
  00009EC0: 2B 13 00 00 00 00 00 00 D2 00 03 12 07 14 03 00  +...............
  00009ED0: 24 13 00 00 09 44 33 44 58 50 4C 41 4E 45 F2 F1  $....D3DXPLANE..
  00009EE0: 0B 14 03 00 25 13 00 00 10 6F 70 65 72 61 74 6F  ....%....operato
  00009EF0: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  00009F00: 28 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  (....operator co
  00009F10: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  00009F20: 29 13 00 00 09 6F 70 65 72 61 74 6F 72 2B F2 F1  )....operator+..
  00009F30: 0B 14 03 00 29 13 00 00 09 6F 70 65 72 61 74 6F  ....)....operato
  00009F40: 72 2D F2 F1 0B 14 03 00 2C 13 00 00 0A 6F 70 65  r-......,....ope
  00009F50: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 2C 13 00 00  rator==.....,...
  00009F60: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 05 14 03 00  .operator!=.....
  00009F70: 40 00 00 00 00 00 01 61 05 14 03 00 40 00 00 00  @......a....@...
  00009F80: 04 00 01 62 05 14 03 00 40 00 00 00 08 00 01 63  ...b....@......c
  00009F90: 05 14 03 00 40 00 00 00 0C 00 01 64 1E 00 05 10  ....@......d....
  00009FA0: 0D 00 46 00 2D 13 00 00 00 00 00 00 00 00 00 00  ..F.-...........
  00009FB0: 10 00 09 44 33 44 58 50 4C 41 4E 45 1E 00 05 10  ...D3DXPLANE....
  00009FC0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  00009FD0: 00 00 09 44 33 44 58 43 4F 4C 4F 52 0A 00 02 10  ...D3DXCOLOR....
  00009FE0: 2F 13 00 00 0A 04 00 00 1A 00 09 10 03 00 00 00  /...............
  00009FF0: 2F 13 00 00 30 13 00 00 0B 00 04 00 CE 12 00 00  /...0...........
  0000A000: 00 00 00 00 0A 00 01 10 22 12 00 00 01 00 F2 F1  ........".......
  0000A010: 0A 00 02 10 32 13 00 00 2A 00 00 00 0A 00 01 12  ....2...*.......
  0000A020: 01 00 00 00 33 13 00 00 1A 00 09 10 03 00 00 00  ....3...........
  0000A030: 2F 13 00 00 30 13 00 00 0B 00 01 00 34 13 00 00  /...0.......4...
  0000A040: 00 00 00 00 1A 00 09 10 03 00 00 00 2F 13 00 00  ............/...
  0000A050: 30 13 00 00 0B 00 01 00 9A 12 00 00 00 00 00 00  0...............
  0000A060: 1A 00 09 10 03 00 00 00 2F 13 00 00 30 13 00 00  ......../...0...
  0000A070: 0B 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000A080: 03 00 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  ..../...0.......
  0000A090: 09 10 00 00 00 00 00 00 2A 00 06 12 03 00 00 00  ........*.......
  0000A0A0: 31 13 00 00 03 00 00 00 35 13 00 00 03 00 00 00  1.......5.......
  0000A0B0: 36 13 00 00 03 00 00 00 37 13 00 00 03 00 00 00  6.......7.......
  0000A0C0: 38 13 00 00 0A 00 01 10 2F 13 00 00 01 00 F2 F1  8......./.......
  0000A0D0: 0A 00 02 10 3A 13 00 00 0A 04 00 00 1A 00 09 10  ....:...........
  0000A0E0: 22 00 00 00 2F 13 00 00 3B 13 00 00 0B 00 00 00  ".../...;.......
  0000A0F0: 09 10 00 00 00 00 00 00 1A 00 09 10 40 04 00 00  ............@...
  0000A100: 2F 13 00 00 30 13 00 00 0B 00 00 00 09 10 00 00  /...0...........
  0000A110: 00 00 00 00 1A 00 09 10 99 12 00 00 2F 13 00 00  ............/...
  0000A120: 3B 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ;...............
  0000A130: 0A 00 02 10 22 12 00 00 0A 00 00 00 1A 00 09 10  ...."...........
  0000A140: 3F 13 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  ?.../...0.......
  0000A150: 09 10 00 00 00 00 00 00 0A 00 02 10 32 13 00 00  ............2...
  0000A160: 0A 00 00 00 1A 00 09 10 41 13 00 00 2F 13 00 00  ........A.../...
  0000A170: 3B 13 00 00 0B 00 00 00 09 10 00 00 00 00 00 00  ;...............
  0000A180: 0A 00 02 10 22 12 00 00 2A 00 00 00 1A 00 09 10  ...."...*.......
  0000A190: 43 13 00 00 2F 13 00 00 30 13 00 00 0B 00 00 00  C.../...0.......
  0000A1A0: 09 10 00 00 00 00 00 00 1A 00 09 10 33 13 00 00  ............3...
  0000A1B0: 2F 13 00 00 3B 13 00 00 0B 00 00 00 09 10 00 00  /...;...........
  0000A1C0: 00 00 00 00 0A 00 02 10 2F 13 00 00 2A 00 00 00  ......../...*...
  0000A1D0: 0A 00 02 10 3A 13 00 00 2A 00 00 00 0A 00 01 12  ....:...*.......
  0000A1E0: 01 00 00 00 47 13 00 00 1A 00 09 10 46 13 00 00  ....G.......F...
  0000A1F0: 2F 13 00 00 30 13 00 00 0B 00 01 00 48 13 00 00  /...0.......H...
  0000A200: 00 00 00 00 1A 00 09 10 46 13 00 00 2F 13 00 00  ........F.../...
  0000A210: 30 13 00 00 0B 00 01 00 A6 12 00 00 00 00 00 00  0...............
  0000A220: 1A 00 09 10 2F 13 00 00 2F 13 00 00 3B 13 00 00  ..../.../...;...
  0000A230: 0B 00 01 00 48 13 00 00 00 00 00 00 1A 00 09 10  ....H...........
  0000A240: 2F 13 00 00 2F 13 00 00 3B 13 00 00 0B 00 00 00  /.../...;.......
  0000A250: 09 10 00 00 00 00 00 00 12 00 06 12 03 00 00 00  ................
  0000A260: 4B 13 00 00 03 00 00 00 4C 13 00 00 12 00 06 12  K.......L.......
  0000A270: 03 00 00 00 4B 13 00 00 03 00 00 00 4C 13 00 00  ....K.......L...
  0000A280: 1A 00 09 10 2F 13 00 00 2F 13 00 00 3B 13 00 00  ..../.../...;...
  0000A290: 0B 00 01 00 A6 12 00 00 00 00 00 00 1A 00 09 10  ................
  0000A2A0: 74 00 00 00 2F 13 00 00 3B 13 00 00 0B 00 01 00  t.../...;.......
  0000A2B0: 48 13 00 00 00 00 00 00 22 02 03 12 07 14 05 00  H.......".......
  0000A2C0: 39 13 00 00 09 44 33 44 58 43 4F 4C 4F 52 F2 F1  9....D3DXCOLOR..
  0000A2D0: 0B 14 03 00 3C 13 00 00 16 6F 70 65 72 61 74 6F  ....<....operato
  0000A2E0: 72 20 75 6E 73 69 67 6E 65 64 20 6C 6F 6E 67 F1  r unsigned long.
  0000A2F0: 0B 14 03 00 3D 13 00 00 10 6F 70 65 72 61 74 6F  ....=....operato
  0000A300: 72 20 66 6C 6F 61 74 20 2A F3 F2 F1 0B 14 03 00  r float *.......
  0000A310: 3E 13 00 00 16 6F 70 65 72 61 74 6F 72 20 63 6F  >....operator co
  0000A320: 6E 73 74 20 66 6C 6F 61 74 20 2A F1 0B 14 03 00  nst float *.....
  0000A330: 40 13 00 00 20 6F 70 65 72 61 74 6F 72 20 73 74  @... operator st
  0000A340: 72 75 63 74 20 5F 44 33 44 43 4F 4C 4F 52 56 41  ruct _D3DCOLORVA
  0000A350: 4C 55 45 20 2A F3 F2 F1 0B 14 03 00 42 13 00 00  LUE *.......B...
  0000A360: 26 6F 70 65 72 61 74 6F 72 20 63 6F 6E 73 74 20  &operator const 
  0000A370: 73 74 72 75 63 74 20 5F 44 33 44 43 4F 4C 4F 52  struct _D3DCOLOR
  0000A380: 56 41 4C 55 45 20 2A F1 0B 14 03 00 44 13 00 00  VALUE *.....D...
  0000A390: 20 6F 70 65 72 61 74 6F 72 20 73 74 72 75 63 74   operator struct
  0000A3A0: 20 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55 45 20   _D3DCOLORVALUE 
  0000A3B0: 26 F3 F2 F1 0B 14 03 00 45 13 00 00 26 6F 70 65  &.......E...&ope
  0000A3C0: 72 61 74 6F 72 20 63 6F 6E 73 74 20 73 74 72 75  rator const stru
  0000A3D0: 63 74 20 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55  ct _D3DCOLORVALU
  0000A3E0: 45 20 26 F1 0B 14 03 00 49 13 00 00 0A 6F 70 65  E &.....I....ope
  0000A3F0: 72 61 74 6F 72 2B 3D F1 0B 14 03 00 49 13 00 00  rator+=.....I...
  0000A400: 0A 6F 70 65 72 61 74 6F 72 2D 3D F1 0B 14 03 00  .operator-=.....
  0000A410: 4A 13 00 00 0A 6F 70 65 72 61 74 6F 72 2A 3D F1  J....operator*=.
  0000A420: 0B 14 03 00 4A 13 00 00 0A 6F 70 65 72 61 74 6F  ....J....operato
  0000A430: 72 2F 3D F1 07 14 02 00 4D 13 00 00 09 6F 70 65  r/=.....M....ope
  0000A440: 72 61 74 6F 72 2B F2 F1 07 14 02 00 4E 13 00 00  rator+......N...
  0000A450: 09 6F 70 65 72 61 74 6F 72 2D F2 F1 0B 14 03 00  .operator-......
  0000A460: 4F 13 00 00 09 6F 70 65 72 61 74 6F 72 2A F2 F1  O....operator*..
  0000A470: 0B 14 03 00 4F 13 00 00 09 6F 70 65 72 61 74 6F  ....O....operato
  0000A480: 72 2F F2 F1 0B 14 03 00 50 13 00 00 0A 6F 70 65  r/......P....ope
  0000A490: 72 61 74 6F 72 3D 3D F1 0B 14 03 00 50 13 00 00  rator==.....P...
  0000A4A0: 0A 6F 70 65 72 61 74 6F 72 21 3D F1 05 14 03 00  .operator!=.....
  0000A4B0: 40 00 00 00 00 00 01 72 05 14 03 00 40 00 00 00  @......r....@...
  0000A4C0: 04 00 01 67 05 14 03 00 40 00 00 00 08 00 01 62  ...g....@......b
  0000A4D0: 05 14 03 00 40 00 00 00 0C 00 01 61 1E 00 05 10  ....@......a....
  0000A4E0: 1C 00 46 00 51 13 00 00 00 00 00 00 00 00 00 00  ..F.Q...........
  0000A4F0: 10 00 09 44 33 44 58 43 4F 4C 4F 52 26 00 03 12  ...D3DXCOLOR&...
  0000A500: 05 14 03 00 40 00 00 00 00 00 01 78 05 14 03 00  ....@......x....
  0000A510: 40 00 00 00 04 00 01 79 05 14 03 00 40 00 00 00  @......y....@...
  0000A520: 08 00 01 7A 22 00 05 10 03 00 00 00 53 13 00 00  ...z".......S...
  0000A530: 00 00 00 00 00 00 00 00 0C 00 0A 5F 44 33 44 56  ..........._D3DV
  0000A540: 45 43 54 4F 52 F3 F2 F1 32 00 03 12 05 14 03 00  ECTOR...2.......
  0000A550: 40 00 00 00 00 00 01 72 05 14 03 00 40 00 00 00  @......r....@...
  0000A560: 04 00 01 67 05 14 03 00 40 00 00 00 08 00 01 62  ...g....@......b
  0000A570: 05 14 03 00 40 00 00 00 0C 00 01 61 26 00 05 10  ....@......a&...
  0000A580: 04 00 00 00 55 13 00 00 00 00 00 00 00 00 00 00  ....U...........
  0000A590: 10 00 0E 5F 44 33 44 43 4F 4C 4F 52 56 41 4C 55  ..._D3DCOLORVALU
  0000A5A0: 45 F3 F2 F1 0A 00 02 10 9F 12 00 00 0A 00 00 00  E...............
  0000A5B0: 0A 00 02 10 94 12 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A5C0: BC 12 00 00 0A 00 00 00 0A 00 02 10 B0 12 00 00  ................
  0000A5D0: 0A 00 00 00 0A 00 02 10 D4 12 00 00 0A 00 00 00  ................
  0000A5E0: 0A 00 02 10 CC 12 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A5F0: E4 12 00 00 0A 00 00 00 0A 00 02 10 EF 12 00 00  ................
  0000A600: 0A 00 00 00 0A 00 02 10 0D 13 00 00 0A 00 00 00  ................
  0000A610: 0A 00 02 10 06 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000A620: 26 13 00 00 0A 00 00 00 0A 00 02 10 3A 13 00 00  &...........:...
  0000A630: 0A 00 00 00 0A 00 02 10 2F 13 00 00 0A 00 00 00  ......../.......
  0000A640: 0A 00 02 10 03 04 00 00 0A 00 00 00 0A 00 01 10  ................
  0000A650: 00 10 00 00 01 00 F2 F1 0A 00 02 10 65 13 00 00  ............e...
  0000A660: 2A 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  *..."...........
  0000A670: 00 00 00 00 00 00 00 00 00 00 0C 49 44 69 72 65  ...........IDire
  0000A680: 63 74 53 6F 75 6E 64 F1 0A 00 02 10 67 13 00 00  ctSound.....g...
  0000A690: 0A 04 00 00 0E 00 01 12 02 00 00 00 66 13 00 00  ............f...
  0000A6A0: 64 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  d...........g...
  0000A6B0: 68 13 00 00 07 00 02 00 69 13 00 00 00 00 00 00  h.......i.......
  0000A6C0: 1A 00 09 10 22 00 00 00 67 13 00 00 68 13 00 00  ...."...g...h...
  0000A6D0: 07 00 00 00 09 10 00 00 00 00 00 00 1E 00 05 10  ................
  0000A6E0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A6F0: 00 00 07 5F 44 53 43 41 50 53 F2 F1 0A 00 02 10  ..._DSCAPS......
  0000A700: 6C 13 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  l...............
  0000A710: 6D 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  m...........g...
  0000A720: 68 13 00 00 07 00 01 00 6E 13 00 00 00 00 00 00  h.......n.......
  0000A730: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000A740: 00 00 00 00 00 00 0D 5F 44 53 42 55 46 46 45 52  ......._DSBUFFER
  0000A750: 44 45 53 43 0A 00 01 10 70 13 00 00 01 00 F2 F1  DESC....p.......
  0000A760: 0A 00 02 10 71 13 00 00 0A 00 00 00 2A 00 05 10  ....q.......*...
  0000A770: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A780: 00 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 42  ...IDirectSoundB
  0000A790: 75 66 66 65 72 F3 F2 F1 0A 00 02 10 73 13 00 00  uffer.......s...
  0000A7A0: 0A 00 00 00 0A 00 02 10 74 13 00 00 0A 00 00 00  ........t.......
  0000A7B0: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  0000A7C0: 00 00 00 00 00 00 08 49 55 6E 6B 6E 6F 77 6E F1  .......IUnknown.
  0000A7D0: 0A 00 02 10 76 13 00 00 0A 00 00 00 12 00 01 12  ....v...........
  0000A7E0: 03 00 00 00 72 13 00 00 75 13 00 00 77 13 00 00  ....r...u...w...
  0000A7F0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A800: 07 00 03 00 78 13 00 00 00 00 00 00 22 00 05 10  ....x......."...
  0000A810: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000A820: 00 00 0D 5F 44 53 53 54 52 45 41 4D 44 45 53 43  ..._DSSTREAMDESC
  0000A830: 0A 00 01 10 7A 13 00 00 01 00 F2 F1 0A 00 02 10  ....z...........
  0000A840: 7B 13 00 00 0A 00 00 00 2A 00 05 10 00 00 80 00  {.......*.......
  0000A850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 49  ...............I
  0000A860: 44 69 72 65 63 74 53 6F 75 6E 64 53 74 72 65 61  DirectSoundStrea
  0000A870: 6D F3 F2 F1 0A 00 02 10 7D 13 00 00 0A 00 00 00  m.......}.......
  0000A880: 0A 00 02 10 7E 13 00 00 0A 00 00 00 12 00 01 12  ....~...........
  0000A890: 03 00 00 00 7C 13 00 00 7F 13 00 00 77 13 00 00  ....|.......w...
  0000A8A0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A8B0: 07 00 03 00 80 13 00 00 00 00 00 00 0A 00 01 12  ................
  0000A8C0: 01 00 00 00 22 04 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000A8D0: 67 13 00 00 68 13 00 00 07 00 01 00 82 13 00 00  g...h...........
  0000A8E0: 00 00 00 00 0E 00 01 12 02 00 00 00 AD 11 00 00  ................
  0000A8F0: 22 00 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  "...........g...
  0000A900: 68 13 00 00 07 00 02 00 84 13 00 00 00 00 00 00  h...............
  0000A910: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000A920: 07 00 00 00 09 10 00 00 00 00 00 00 0A 00 02 10  ................
  0000A930: D4 10 00 00 0A 00 00 00 26 00 05 10 00 00 80 00  ........&.......
  0000A940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5F  ..............._
  0000A950: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  0000A960: 0A 00 01 10 88 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000A970: 89 13 00 00 0A 00 00 00 2A 00 05 10 00 00 80 00  ........*.......
  0000A980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 5F  ..............._
  0000A990: 44 53 45 46 46 45 43 54 49 4D 41 47 45 44 45 53  DSEFFECTIMAGEDES
  0000A9A0: 43 F3 F2 F1 0A 00 02 10 8B 13 00 00 0A 00 00 00  C...............
  0000A9B0: 0A 00 02 10 8C 13 00 00 0A 00 00 00 16 00 01 12  ................
  0000A9C0: 04 00 00 00 87 13 00 00 22 00 00 00 8A 13 00 00  ........".......
  0000A9D0: 8D 13 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  ............g...
  0000A9E0: 68 13 00 00 07 00 04 00 8E 13 00 00 00 00 00 00  h...............
  0000A9F0: 16 00 01 12 04 00 00 00 22 00 00 00 22 00 00 00  ........"..."...
  0000AA00: 03 04 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000AA10: 67 13 00 00 68 13 00 00 07 00 04 00 90 13 00 00  g...h...........
  0000AA20: 00 00 00 00 1A 00 01 12 05 00 00 00 22 00 00 00  ............"...
  0000AA30: 22 00 00 00 87 13 00 00 22 00 00 00 22 00 00 00  "......."..."...
  0000AA40: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AA50: 07 00 05 00 92 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000AA60: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 01 00  ....g...h.......
  0000AA70: 2F 11 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  /...............
  0000AA80: 67 13 00 00 68 13 00 00 07 00 02 00 31 10 00 00  g...h.......1...
  0000AA90: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  0000AAA0: 00 00 00 00 00 00 00 00 00 00 0D 5F 44 53 33 44  ..........._DS3D
  0000AAB0: 4C 49 53 54 45 4E 45 52 0A 00 01 10 96 13 00 00  LISTENER........
  0000AAC0: 01 00 F2 F1 0A 00 02 10 97 13 00 00 0A 00 00 00  ................
  0000AAD0: 0E 00 01 12 02 00 00 00 98 13 00 00 22 00 00 00  ............"...
  0000AAE0: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AAF0: 07 00 02 00 99 13 00 00 00 00 00 00 0E 00 01 12  ................
  0000AB00: 02 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  ....@...".......
  0000AB10: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 02 00  ....g...h.......
  0000AB20: 9B 13 00 00 00 00 00 00 22 00 01 12 07 00 00 00  ........".......
  0000AB30: 40 00 00 00 40 00 00 00 40 00 00 00 40 00 00 00  @...@...@...@...
  0000AB40: 40 00 00 00 40 00 00 00 22 00 00 00 1A 00 09 10  @...@...".......
  0000AB50: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 07 00  ....g...h.......
  0000AB60: 9D 13 00 00 00 00 00 00 16 00 01 12 04 00 00 00  ................
  0000AB70: 40 00 00 00 40 00 00 00 40 00 00 00 22 00 00 00  @...@...@..."...
  0000AB80: 1A 00 09 10 12 00 00 00 67 13 00 00 68 13 00 00  ........g...h...
  0000AB90: 07 00 04 00 9F 13 00 00 00 00 00 00 26 00 05 10  ............&...
  0000ABA0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000ABB0: 00 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  ..._DSI3DL2LISTE
  0000ABC0: 4E 45 52 F1 0A 00 01 10 A1 13 00 00 01 00 F2 F1  NER.............
  0000ABD0: 0A 00 02 10 A2 13 00 00 0A 00 00 00 0E 00 01 12  ................
  0000ABE0: 02 00 00 00 A3 13 00 00 22 00 00 00 1A 00 09 10  ........".......
  0000ABF0: 12 00 00 00 67 13 00 00 68 13 00 00 07 00 02 00  ....g...h.......
  0000AC00: A4 13 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000AC10: 13 04 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  ............g...
  0000AC20: 68 13 00 00 07 00 01 00 A6 13 00 00 00 00 00 00  h...............
  0000AC30: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  0000AC40: 00 00 00 00 00 00 0F 5F 44 53 4F 55 54 50 55 54  ......._DSOUTPUT
  0000AC50: 4C 45 56 45 4C 53 F2 F1 0A 00 02 10 A8 13 00 00  LEVELS..........
  0000AC60: 0A 00 00 00 0E 00 01 12 02 00 00 00 A9 13 00 00  ................
  0000AC70: 74 00 00 00 1A 00 09 10 12 00 00 00 67 13 00 00  t...........g...
  0000AC80: 68 13 00 00 07 00 02 00 AA 13 00 00 00 00 00 00  h...............
  0000AC90: 82 02 03 12 0B 14 03 00 6A 13 00 00 0E 51 75 65  ........j....Que
  0000ACA0: 72 79 49 6E 74 65 72 66 61 63 65 F1 0B 14 03 00  ryInterface.....
  0000ACB0: 6B 13 00 00 06 41 64 64 52 65 66 F1 0B 14 03 00  k....AddRef.....
  0000ACC0: 6B 13 00 00 07 52 65 6C 65 61 73 65 0B 14 03 00  k....Release....
  0000ACD0: 6F 13 00 00 07 47 65 74 43 61 70 73 0B 14 03 00  o....GetCaps....
  0000ACE0: 79 13 00 00 11 43 72 65 61 74 65 53 6F 75 6E 64  y....CreateSound
  0000ACF0: 42 75 66 66 65 72 F2 F1 0B 14 03 00 81 13 00 00  Buffer..........
  0000AD00: 11 43 72 65 61 74 65 53 6F 75 6E 64 53 74 72 65  .CreateSoundStre
  0000AD10: 61 6D F2 F1 0B 14 03 00 83 13 00 00 10 47 65 74  am...........Get
  0000AD20: 53 70 65 61 6B 65 72 43 6F 6E 66 69 67 F3 F2 F1  SpeakerConfig...
  0000AD30: 0B 14 03 00 85 13 00 00 13 53 65 74 43 6F 6F 70  .........SetCoop
  0000AD40: 65 72 61 74 69 76 65 4C 65 76 65 6C 0B 14 03 00  erativeLevel....
  0000AD50: 86 13 00 00 07 43 6F 6D 70 61 63 74 0B 14 03 00  .....Compact....
  0000AD60: 8F 13 00 00 14 44 6F 77 6E 6C 6F 61 64 45 66 66  .....DownloadEff
  0000AD70: 65 63 74 73 49 6D 61 67 65 F3 F2 F1 0B 14 03 00  ectsImage.......
  0000AD80: 91 13 00 00 0D 47 65 74 45 66 66 65 63 74 44 61  .....GetEffectDa
  0000AD90: 74 61 F2 F1 0B 14 03 00 93 13 00 00 0D 53 65 74  ta...........Set
  0000ADA0: 45 66 66 65 63 74 44 61 74 61 F2 F1 0B 14 03 00  EffectData......
  0000ADB0: 86 13 00 00 10 43 6F 6D 6D 69 74 45 66 66 65 63  .....CommitEffec
  0000ADC0: 74 44 61 74 61 F3 F2 F1 0B 14 03 00 94 13 00 00  tData...........
  0000ADD0: 10 45 6E 61 62 6C 65 48 65 61 64 70 68 6F 6E 65  .EnableHeadphone
  0000ADE0: 73 F3 F2 F1 0B 14 03 00 95 13 00 00 11 53 65 74  s............Set
  0000ADF0: 4D 69 78 42 69 6E 48 65 61 64 72 6F 6F 6D F2 F1  MixBinHeadroom..
  0000AE00: 0B 14 03 00 9A 13 00 00 10 53 65 74 41 6C 6C 50  .........SetAllP
  0000AE10: 61 72 61 6D 65 74 65 72 73 F3 F2 F1 0B 14 03 00  arameters.......
  0000AE20: 9C 13 00 00 11 53 65 74 44 69 73 74 61 6E 63 65  .....SetDistance
  0000AE30: 46 61 63 74 6F 72 F2 F1 0B 14 03 00 9C 13 00 00  Factor..........
  0000AE40: 10 53 65 74 44 6F 70 70 6C 65 72 46 61 63 74 6F  .SetDopplerFacto
  0000AE50: 72 F3 F2 F1 0B 14 03 00 9E 13 00 00 0E 53 65 74  r............Set
  0000AE60: 4F 72 69 65 6E 74 61 74 69 6F 6E F1 0B 14 03 00  Orientation.....
  0000AE70: A0 13 00 00 0B 53 65 74 50 6F 73 69 74 69 6F 6E  .....SetPosition
  0000AE80: 0B 14 03 00 9C 13 00 00 10 53 65 74 52 6F 6C 6C  .........SetRoll
  0000AE90: 6F 66 66 46 61 63 74 6F 72 F3 F2 F1 0B 14 03 00  offFactor.......
  0000AEA0: A0 13 00 00 0B 53 65 74 56 65 6C 6F 63 69 74 79  .....SetVelocity
  0000AEB0: 0B 14 03 00 A5 13 00 00 10 53 65 74 49 33 44 4C  .........SetI3DL
  0000AEC0: 32 4C 69 73 74 65 6E 65 72 F3 F2 F1 0B 14 03 00  2Listener.......
  0000AED0: 86 13 00 00 16 43 6F 6D 6D 69 74 44 65 66 65 72  .....CommitDefer
  0000AEE0: 72 65 64 53 65 74 74 69 6E 67 73 F1 0B 14 03 00  redSettings.....
  0000AEF0: A7 13 00 00 07 47 65 74 54 69 6D 65 0B 14 03 00  .....GetTime....
  0000AF00: AB 13 00 00 0F 47 65 74 4F 75 74 70 75 74 4C 65  .....GetOutputLe
  0000AF10: 76 65 6C 73 22 00 05 10 1A 00 00 00 AC 13 00 00  vels"...........
  0000AF20: 00 00 00 00 00 00 00 00 01 00 0C 49 44 69 72 65  ...........IDire
  0000AF30: 63 74 53 6F 75 6E 64 F1 72 00 03 12 05 14 03 00  ctSound.r.......
  0000AF40: 22 00 00 00 00 00 0F 64 77 46 72 65 65 32 44 42  "......dwFree2DB
  0000AF50: 75 66 66 65 72 73 F2 F1 05 14 03 00 22 00 00 00  uffers......"...
  0000AF60: 04 00 0F 64 77 46 72 65 65 33 44 42 75 66 66 65  ...dwFree3DBuffe
  0000AF70: 72 73 F2 F1 05 14 03 00 22 00 00 00 08 00 10 64  rs......"......d
  0000AF80: 77 46 72 65 65 42 75 66 66 65 72 53 47 45 73 F1  wFreeBufferSGEs.
  0000AF90: 05 14 03 00 22 00 00 00 0C 00 11 64 77 4D 65 6D  ...."......dwMem
  0000AFA0: 6F 72 79 41 6C 6C 6F 63 61 74 65 64 1E 00 05 10  oryAllocated....
  0000AFB0: 04 00 00 00 AE 13 00 00 00 00 00 00 00 00 00 00  ................
  0000AFC0: 10 00 07 5F 44 53 43 41 50 53 F2 F1 06 00 0A 00  ..._DSCAPS......
  0000AFD0: 03 00 55 50 0A 00 02 10 B0 13 00 00 0A 00 00 00  ..UP............
  0000AFE0: 0A 00 02 10 03 04 00 00 0A 00 00 00 0E 00 01 12  ................
  0000AFF0: 02 00 00 00 66 13 00 00 B2 13 00 00 0A 00 02 10  ....f...........
  0000B000: 76 13 00 00 0A 04 00 00 1A 00 09 10 12 00 00 00  v...............
  0000B010: 76 13 00 00 B4 13 00 00 07 00 02 00 B3 13 00 00  v...............
  0000B020: 00 00 00 00 1A 00 09 10 22 00 00 00 76 13 00 00  ........"...v...
  0000B030: B4 13 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  0000B040: 0A 00 01 10 76 13 00 00 01 00 F2 F1 0A 00 02 10  ....v...........
  0000B050: B7 13 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  0000B060: B8 13 00 00 1A 00 09 10 03 00 00 00 76 13 00 00  ............v...
  0000B070: B4 13 00 00 0B 00 01 00 B9 13 00 00 00 00 00 00  ................
  0000B080: 1A 00 09 10 03 00 00 00 76 13 00 00 B4 13 00 00  ........v.......
  0000B090: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000B0A0: 03 01 00 00 BA 13 00 00 03 01 00 00 BB 13 00 00  ................
  0000B0B0: 62 00 03 12 09 14 00 00 B1 13 00 00 0B 14 1B 00  b...............
  0000B0C0: B5 13 00 00 00 00 00 00 0E 51 75 65 72 79 49 6E  .........QueryIn
  0000B0D0: 74 65 72 66 61 63 65 F1 0B 14 1B 00 B6 13 00 00  terface.........
  0000B0E0: 04 00 00 00 06 41 64 64 52 65 66 F1 0B 14 1B 00  .....AddRef.....
  0000B0F0: B6 13 00 00 08 00 00 00 07 52 65 6C 65 61 73 65  .........Release
  0000B100: 07 14 02 00 BC 13 00 00 08 49 55 6E 6B 6E 6F 77  .........IUnknow
  0000B110: 6E F3 F2 F1 06 00 0A 00 03 00 55 50 1E 00 05 10  n.........UP....
  0000B120: 06 00 02 00 BD 13 00 00 00 00 00 00 BE 13 00 00  ................
  0000B130: 04 00 08 49 55 6E 6B 6E 6F 77 6E F1 22 00 05 10  ...IUnknown."...
  0000B140: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000B150: 00 00 0D 74 57 41 56 45 46 4F 52 4D 41 54 45 58  ...tWAVEFORMATEX
  0000B160: 0A 00 02 10 C0 13 00 00 0A 00 00 00 22 00 05 10  ............"...
  0000B170: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000B180: 00 00 0A 5F 44 53 4D 49 58 42 49 4E 53 F3 F2 F1  ..._DSMIXBINS...
  0000B190: 0A 00 01 10 C2 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000B1A0: C3 13 00 00 0A 00 00 00 86 00 03 12 05 14 03 00  ................
  0000B1B0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000B1C0: 05 14 03 00 22 00 00 00 04 00 07 64 77 46 6C 61  ...."......dwFla
  0000B1D0: 67 73 F2 F1 05 14 03 00 22 00 00 00 08 00 0D 64  gs......"......d
  0000B1E0: 77 42 75 66 66 65 72 42 79 74 65 73 05 14 03 00  wBufferBytes....
  0000B1F0: C1 13 00 00 0C 00 0B 6C 70 77 66 78 46 6F 72 6D  .......lpwfxForm
  0000B200: 61 74 F2 F1 05 14 03 00 C4 13 00 00 10 00 09 6C  at.............l
  0000B210: 70 4D 69 78 42 69 6E 73 05 14 03 00 22 00 00 00  pMixBins...."...
  0000B220: 14 00 0D 64 77 49 6E 70 75 74 4D 69 78 42 69 6E  ...dwInputMixBin
  0000B230: 22 00 05 10 06 00 00 00 C5 13 00 00 00 00 00 00  "...............
  0000B240: 00 00 00 00 18 00 0D 5F 44 53 42 55 46 46 45 52  ......._DSBUFFER
  0000B250: 44 45 53 43 12 00 01 12 03 00 00 00 03 04 00 00  DESC............
  0000B260: 03 04 00 00 22 00 00 00 0E 00 08 10 03 00 00 00  ...."...........
  0000B270: 07 00 03 00 C7 13 00 00 0A 00 02 10 C8 13 00 00  ................
  0000B280: 0A 00 00 00 92 00 03 12 05 14 03 00 22 00 00 00  ............"...
  0000B290: 00 00 07 64 77 46 6C 61 67 73 F2 F1 05 14 03 00  ...dwFlags......
  0000B2A0: 22 00 00 00 04 00 14 64 77 4D 61 78 41 74 74 61  "......dwMaxAtta
  0000B2B0: 63 68 65 64 50 61 63 6B 65 74 73 F1 05 14 03 00  chedPackets.....
  0000B2C0: C1 13 00 00 08 00 0B 6C 70 77 66 78 46 6F 72 6D  .......lpwfxForm
  0000B2D0: 61 74 F2 F1 05 14 03 00 C9 13 00 00 0C 00 0C 6C  at.............l
  0000B2E0: 70 66 6E 43 61 6C 6C 62 61 63 6B F1 05 14 03 00  pfnCallback.....
  0000B2F0: 03 04 00 00 10 00 0A 6C 70 76 43 6F 6E 74 65 78  .......lpvContex
  0000B300: 74 F3 F2 F1 05 14 03 00 C4 13 00 00 14 00 09 6C  t..............l
  0000B310: 70 4D 69 78 42 69 6E 73 22 00 05 10 06 00 00 00  pMixBins".......
  0000B320: CA 13 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  ..............._
  0000B330: 44 53 53 54 52 45 41 4D 44 45 53 43 16 00 03 12  DSSTREAMDESC....
  0000B340: 05 14 03 00 74 00 00 00 00 00 06 75 6E 75 73 65  ....t......unuse
  0000B350: 64 F3 F2 F1 1E 00 05 10 01 00 00 00 CC 13 00 00  d...............
  0000B360: 00 00 00 00 00 00 00 00 04 00 06 48 57 4E 44 5F  ...........HWND_
  0000B370: 5F F3 F2 F1 22 00 05 10 00 00 80 00 00 00 00 00  _..."...........
  0000B380: 00 00 00 00 00 00 00 00 00 00 0C 5F 44 53 45 46  ..........._DSEF
  0000B390: 46 45 43 54 4D 41 50 F1 0E 00 03 10 CE 13 00 00  FECTMAP.........
  0000B3A0: 11 00 00 00 20 00 00 F1 52 00 03 12 05 14 03 00  .... ...R.......
  0000B3B0: 22 00 00 00 00 00 0D 64 77 45 66 66 65 63 74 43  "......dwEffectC
  0000B3C0: 6F 75 6E 74 05 14 03 00 22 00 00 00 04 00 12 64  ount...."......d
  0000B3D0: 77 54 6F 74 61 6C 53 63 72 61 74 63 68 53 69 7A  wTotalScratchSiz
  0000B3E0: 65 F3 F2 F1 05 14 03 00 CF 13 00 00 08 00 0B 61  e..............a
  0000B3F0: 45 66 66 65 63 74 4D 61 70 73 F2 F1 2A 00 05 10  EffectMaps..*...
  0000B400: 03 00 00 00 D0 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B410: 28 00 12 5F 44 53 45 46 46 45 43 54 49 4D 41 47  (.._DSEFFECTIMAG
  0000B420: 45 44 45 53 43 F3 F2 F1 3E 00 03 12 05 14 03 00  EDESC...>.......
  0000B430: 22 00 00 00 00 00 12 64 77 49 33 44 4C 32 52 65  "......dwI3DL2Re
  0000B440: 76 65 72 62 49 6E 64 65 78 F3 F2 F1 05 14 03 00  verbIndex.......
  0000B450: 22 00 00 00 04 00 10 64 77 43 72 6F 73 73 74 61  "......dwCrossta
  0000B460: 6C 6B 49 6E 64 65 78 F1 26 00 05 10 02 00 00 00  lkIndex.&.......
  0000B470: D2 13 00 00 00 00 00 00 00 00 00 00 08 00 11 5F  ..............._
  0000B480: 44 53 45 46 46 45 43 54 49 4D 41 47 45 4C 4F 43  DSEFFECTIMAGELOC
  0000B490: 0A 00 02 10 96 13 00 00 0A 04 00 00 1A 00 09 10  ................
  0000B4A0: 03 00 00 00 96 13 00 00 D4 13 00 00 0B 00 00 00  ................
  0000B4B0: 09 10 00 00 00 00 00 00 DA 00 03 12 05 14 03 00  ................
  0000B4C0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000B4D0: 05 14 03 00 B0 12 00 00 04 00 09 76 50 6F 73 69  ...........vPosi
  0000B4E0: 74 69 6F 6E 05 14 03 00 B0 12 00 00 10 00 09 76  tion...........v
  0000B4F0: 56 65 6C 6F 63 69 74 79 05 14 03 00 B0 12 00 00  Velocity........
  0000B500: 1C 00 0C 76 4F 72 69 65 6E 74 46 72 6F 6E 74 F1  ...vOrientFront.
  0000B510: 05 14 03 00 B0 12 00 00 28 00 0A 76 4F 72 69 65  ........(..vOrie
  0000B520: 6E 74 54 6F 70 F3 F2 F1 05 14 03 00 40 00 00 00  ntTop.......@...
  0000B530: 34 00 10 66 6C 44 69 73 74 61 6E 63 65 46 61 63  4..flDistanceFac
  0000B540: 74 6F 72 F1 05 14 03 00 40 00 00 00 38 00 0F 66  tor.....@...8..f
  0000B550: 6C 52 6F 6C 6C 6F 66 66 46 61 63 74 6F 72 F2 F1  lRolloffFactor..
  0000B560: 05 14 03 00 40 00 00 00 3C 00 0F 66 6C 44 6F 70  ....@...<..flDop
  0000B570: 70 6C 65 72 46 61 63 74 6F 72 F2 F1 0B 14 03 01  plerFactor......
  0000B580: D5 13 00 00 0D 5F 44 53 33 44 4C 49 53 54 45 4E  ....._DS3DLISTEN
  0000B590: 45 52 F2 F1 22 00 05 10 09 00 02 00 D6 13 00 00  ER.."...........
  0000B5A0: 00 00 00 00 00 00 00 00 40 00 0D 5F 44 53 33 44  ........@.._DS3D
  0000B5B0: 4C 49 53 54 45 4E 45 52 22 01 03 12 05 14 03 00  LISTENER".......
  0000B5C0: 12 00 00 00 00 00 05 6C 52 6F 6F 6D 05 14 03 00  .......lRoom....
  0000B5D0: 12 00 00 00 04 00 07 6C 52 6F 6F 6D 48 46 F2 F1  .......lRoomHF..
  0000B5E0: 05 14 03 00 40 00 00 00 08 00 13 66 6C 52 6F 6F  ....@......flRoo
  0000B5F0: 6D 52 6F 6C 6C 6F 66 66 46 61 63 74 6F 72 F2 F1  mRolloffFactor..
  0000B600: 05 14 03 00 40 00 00 00 0C 00 0B 66 6C 44 65 63  ....@......flDec
  0000B610: 61 79 54 69 6D 65 F2 F1 05 14 03 00 40 00 00 00  ayTime......@...
  0000B620: 10 00 0E 66 6C 44 65 63 61 79 48 46 52 61 74 69  ...flDecayHFRati
  0000B630: 6F F3 F2 F1 05 14 03 00 12 00 00 00 14 00 0C 6C  o..............l
  0000B640: 52 65 66 6C 65 63 74 69 6F 6E 73 F1 05 14 03 00  Reflections.....
  0000B650: 40 00 00 00 18 00 12 66 6C 52 65 66 6C 65 63 74  @......flReflect
  0000B660: 69 6F 6E 73 44 65 6C 61 79 F3 F2 F1 05 14 03 00  ionsDelay.......
  0000B670: 12 00 00 00 1C 00 07 6C 52 65 76 65 72 62 F2 F1  .......lReverb..
  0000B680: 05 14 03 00 40 00 00 00 20 00 0D 66 6C 52 65 76  ....@... ..flRev
  0000B690: 65 72 62 44 65 6C 61 79 05 14 03 00 40 00 00 00  erbDelay....@...
  0000B6A0: 24 00 0B 66 6C 44 69 66 66 75 73 69 6F 6E F2 F1  $..flDiffusion..
  0000B6B0: 05 14 03 00 40 00 00 00 28 00 09 66 6C 44 65 6E  ....@...(..flDen
  0000B6C0: 73 69 74 79 05 14 03 00 40 00 00 00 2C 00 0D 66  sity....@...,..f
  0000B6D0: 6C 48 46 52 65 66 65 72 65 6E 63 65 26 00 05 10  lHFReference&...
  0000B6E0: 0C 00 00 00 D8 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B6F0: 30 00 10 5F 44 53 49 33 44 4C 32 4C 49 53 54 45  0.._DSI3DL2LISTE
  0000B700: 4E 45 52 F1 26 02 03 12 05 14 03 00 22 00 00 00  NER.&......."...
  0000B710: 00 00 15 64 77 41 6E 61 6C 6F 67 4C 65 66 74 54  ...dwAnalogLeftT
  0000B720: 6F 74 61 6C 50 65 61 6B 05 14 03 00 22 00 00 00  otalPeak...."...
  0000B730: 04 00 16 64 77 41 6E 61 6C 6F 67 52 69 67 68 74  ...dwAnalogRight
  0000B740: 54 6F 74 61 6C 50 65 61 6B F3 F2 F1 05 14 03 00  TotalPeak.......
  0000B750: 22 00 00 00 08 00 14 64 77 41 6E 61 6C 6F 67 4C  "......dwAnalogL
  0000B760: 65 66 74 54 6F 74 61 6C 52 4D 53 F1 05 14 03 00  eftTotalRMS.....
  0000B770: 22 00 00 00 0C 00 15 64 77 41 6E 61 6C 6F 67 52  "......dwAnalogR
  0000B780: 69 67 68 74 54 6F 74 61 6C 52 4D 53 05 14 03 00  ightTotalRMS....
  0000B790: 22 00 00 00 10 00 16 64 77 44 69 67 69 74 61 6C  "......dwDigital
  0000B7A0: 46 72 6F 6E 74 4C 65 66 74 50 65 61 6B F3 F2 F1  FrontLeftPeak...
  0000B7B0: 05 14 03 00 22 00 00 00 14 00 18 64 77 44 69 67  ...."......dwDig
  0000B7C0: 69 74 61 6C 46 72 6F 6E 74 43 65 6E 74 65 72 50  italFrontCenterP
  0000B7D0: 65 61 6B F1 05 14 03 00 22 00 00 00 18 00 17 64  eak....."......d
  0000B7E0: 77 44 69 67 69 74 61 6C 46 72 6F 6E 74 52 69 67  wDigitalFrontRig
  0000B7F0: 68 74 50 65 61 6B F2 F1 05 14 03 00 22 00 00 00  htPeak......"...
  0000B800: 1C 00 15 64 77 44 69 67 69 74 61 6C 42 61 63 6B  ...dwDigitalBack
  0000B810: 4C 65 66 74 50 65 61 6B 05 14 03 00 22 00 00 00  LeftPeak...."...
  0000B820: 20 00 16 64 77 44 69 67 69 74 61 6C 42 61 63 6B   ..dwDigitalBack
  0000B830: 52 69 67 68 74 50 65 61 6B F3 F2 F1 05 14 03 00  RightPeak.......
  0000B840: 22 00 00 00 24 00 19 64 77 44 69 67 69 74 61 6C  "...$..dwDigital
  0000B850: 4C 6F 77 46 72 65 71 75 65 6E 63 79 50 65 61 6B  LowFrequencyPeak
  0000B860: 05 14 03 00 22 00 00 00 28 00 15 64 77 44 69 67  ...."...(..dwDig
  0000B870: 69 74 61 6C 46 72 6F 6E 74 4C 65 66 74 52 4D 53  italFrontLeftRMS
  0000B880: 05 14 03 00 22 00 00 00 2C 00 17 64 77 44 69 67  ...."...,..dwDig
  0000B890: 69 74 61 6C 46 72 6F 6E 74 43 65 6E 74 65 72 52  italFrontCenterR
  0000B8A0: 4D 53 F2 F1 05 14 03 00 22 00 00 00 30 00 16 64  MS......"...0..d
  0000B8B0: 77 44 69 67 69 74 61 6C 46 72 6F 6E 74 52 69 67  wDigitalFrontRig
  0000B8C0: 68 74 52 4D 53 F3 F2 F1 05 14 03 00 22 00 00 00  htRMS......."...
  0000B8D0: 34 00 14 64 77 44 69 67 69 74 61 6C 42 61 63 6B  4..dwDigitalBack
  0000B8E0: 4C 65 66 74 52 4D 53 F1 05 14 03 00 22 00 00 00  LeftRMS....."...
  0000B8F0: 38 00 15 64 77 44 69 67 69 74 61 6C 42 61 63 6B  8..dwDigitalBack
  0000B900: 52 69 67 68 74 52 4D 53 05 14 03 00 22 00 00 00  RightRMS...."...
  0000B910: 3C 00 18 64 77 44 69 67 69 74 61 6C 4C 6F 77 46  <..dwDigitalLowF
  0000B920: 72 65 71 75 65 6E 63 79 52 4D 53 F1 26 00 05 10  requencyRMS.&...
  0000B930: 10 00 00 00 DA 13 00 00 00 00 00 00 00 00 00 00  ................
  0000B940: 40 00 0F 5F 44 53 4F 55 54 50 55 54 4C 45 56 45  @.._DSOUTPUTLEVE
  0000B950: 4C 53 F2 F1 0A 00 02 10 73 13 00 00 0A 04 00 00  LS......s.......
  0000B960: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000B970: 07 00 02 00 69 13 00 00 00 00 00 00 1A 00 09 10  ....i...........
  0000B980: 22 00 00 00 73 13 00 00 DC 13 00 00 07 00 00 00  "...s...........
  0000B990: 09 10 00 00 00 00 00 00 0A 00 01 10 C0 13 00 00  ................
  0000B9A0: 01 00 F2 F1 0A 00 02 10 DF 13 00 00 0A 00 00 00  ................
  0000B9B0: 0A 00 01 12 01 00 00 00 E0 13 00 00 1A 00 09 10  ................
  0000B9C0: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 01 00  ....s...........
  0000B9D0: E1 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000B9E0: 73 13 00 00 DC 13 00 00 07 00 01 00 BB 10 00 00  s...............
  0000B9F0: 00 00 00 00 0A 00 01 12 01 00 00 00 12 00 00 00  ................
  0000BA00: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BA10: 07 00 01 00 E4 13 00 00 00 00 00 00 22 00 05 10  ............"...
  0000BA20: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000BA30: 00 00 0A 5F 44 53 4C 46 4F 44 45 53 43 F3 F2 F1  ..._DSLFODESC...
  0000BA40: 0A 00 01 10 E6 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000BA50: E7 13 00 00 0A 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000BA60: E8 13 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BA70: DC 13 00 00 07 00 01 00 E9 13 00 00 00 00 00 00  ................
  0000BA80: 26 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  &...............
  0000BA90: 00 00 00 00 00 00 0F 5F 44 53 45 4E 56 45 4C 4F  ......._DSENVELO
  0000BAA0: 50 45 44 45 53 43 F2 F1 0A 00 01 10 EB 13 00 00  PEDESC..........
  0000BAB0: 01 00 F2 F1 0A 00 02 10 EC 13 00 00 0A 00 00 00  ................
  0000BAC0: 0A 00 01 12 01 00 00 00 ED 13 00 00 1A 00 09 10  ................
  0000BAD0: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 01 00  ....s...........
  0000BAE0: EE 13 00 00 00 00 00 00 22 00 05 10 00 00 80 00  ........".......
  0000BAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 5F  ..............._
  0000BB00: 44 53 46 49 4C 54 45 52 44 45 53 43 0A 00 01 10  DSFILTERDESC....
  0000BB10: F0 13 00 00 01 00 F2 F1 0A 00 02 10 F1 13 00 00  ................
  0000BB20: 0A 00 00 00 0A 00 01 12 01 00 00 00 F2 13 00 00  ................
  0000BB30: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BB40: 07 00 01 00 F3 13 00 00 00 00 00 00 0A 00 01 12  ................
  0000BB50: 01 00 00 00 74 13 00 00 1A 00 09 10 12 00 00 00  ....t...........
  0000BB60: 73 13 00 00 DC 13 00 00 07 00 01 00 F5 13 00 00  s...............
  0000BB70: 00 00 00 00 0A 00 01 12 01 00 00 00 C4 13 00 00  ................
  0000BB80: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BB90: 07 00 01 00 F7 13 00 00 00 00 00 00 22 00 05 10  ............"...
  0000BBA0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000BBB0: 00 00 0B 5F 44 53 33 44 42 55 46 46 45 52 F2 F1  ..._DS3DBUFFER..
  0000BBC0: 0A 00 01 10 F9 13 00 00 01 00 F2 F1 0A 00 02 10  ................
  0000BBD0: FA 13 00 00 0A 00 00 00 0E 00 01 12 02 00 00 00  ................
  0000BBE0: FB 13 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  ...."...........
  0000BBF0: 73 13 00 00 DC 13 00 00 07 00 02 00 FC 13 00 00  s...............
  0000BC00: 00 00 00 00 12 00 01 12 03 00 00 00 22 00 00 00  ............"...
  0000BC10: 22 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  0000BC20: 73 13 00 00 DC 13 00 00 07 00 03 00 FE 13 00 00  s...............
  0000BC30: 00 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BC40: DC 13 00 00 07 00 04 00 9F 13 00 00 00 00 00 00  ................
  0000BC50: 0E 00 01 12 02 00 00 00 12 00 00 00 22 00 00 00  ............"...
  0000BC60: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BC70: 07 00 02 00 01 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000BC80: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 02 00  ....s...........
  0000BC90: 9B 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000BCA0: 73 13 00 00 DC 13 00 00 07 00 02 00 31 10 00 00  s...........1...
  0000BCB0: 00 00 00 00 12 00 01 12 03 00 00 00 99 12 00 00  ................
  0000BCC0: 22 00 00 00 22 00 00 00 1A 00 09 10 12 00 00 00  "..."...........
  0000BCD0: 73 13 00 00 DC 13 00 00 07 00 03 00 05 14 00 00  s...............
  0000BCE0: 00 00 00 00 26 00 05 10 00 00 80 00 00 00 00 00  ....&...........
  0000BCF0: 00 00 00 00 00 00 00 00 00 00 0E 5F 44 53 49 33  ..........._DSI3
  0000BD00: 44 4C 32 42 55 46 46 45 52 F3 F2 F1 0A 00 01 10  DL2BUFFER.......
  0000BD10: 07 14 00 00 01 00 F2 F1 0A 00 02 10 08 14 00 00  ................
  0000BD20: 0A 00 00 00 0E 00 01 12 02 00 00 00 09 14 00 00  ................
  0000BD30: 22 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BD40: DC 13 00 00 07 00 02 00 0A 14 00 00 00 00 00 00  ................
  0000BD50: 0E 00 01 12 02 00 00 00 13 00 00 00 22 00 00 00  ............"...
  0000BD60: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BD70: 07 00 02 00 0C 14 00 00 00 00 00 00 1A 00 09 10  ................
  0000BD80: 12 00 00 00 73 13 00 00 DC 13 00 00 07 00 00 00  ....s...........
  0000BD90: 09 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000BDA0: 73 13 00 00 DC 13 00 00 07 00 01 00 82 13 00 00  s...............
  0000BDB0: 00 00 00 00 0E 00 01 12 02 00 00 00 22 04 00 00  ............"...
  0000BDC0: 22 04 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BDD0: DC 13 00 00 07 00 02 00 10 14 00 00 00 00 00 00  ................
  0000BDE0: 0E 00 01 12 02 00 00 00 03 04 00 00 22 00 00 00  ............"...
  0000BDF0: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BE00: 07 00 02 00 12 14 00 00 00 00 00 00 22 00 01 12  ............"...
  0000BE10: 07 00 00 00 22 00 00 00 22 00 00 00 64 13 00 00  ...."..."...d...
  0000BE20: 22 04 00 00 64 13 00 00 22 04 00 00 22 00 00 00  "...d..."..."...
  0000BE30: 1A 00 09 10 12 00 00 00 73 13 00 00 DC 13 00 00  ........s.......
  0000BE40: 07 00 07 00 14 14 00 00 00 00 00 00 16 00 01 12  ................
  0000BE50: 04 00 00 00 03 04 00 00 22 00 00 00 03 04 00 00  ........".......
  0000BE60: 22 00 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  "...........s...
  0000BE70: DC 13 00 00 07 00 04 00 16 14 00 00 00 00 00 00  ................
  0000BE80: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  0000BE90: 00 00 00 00 00 00 12 5F 44 53 42 50 4F 53 49 54  ......._DSBPOSIT
  0000BEA0: 49 4F 4E 4E 4F 54 49 46 59 F3 F2 F1 0A 00 01 10  IONNOTIFY.......
  0000BEB0: 18 14 00 00 01 00 F2 F1 0A 00 02 10 19 14 00 00  ................
  0000BEC0: 0A 00 00 00 0E 00 01 12 02 00 00 00 22 00 00 00  ............"...
  0000BED0: 1A 14 00 00 1A 00 09 10 12 00 00 00 73 13 00 00  ............s...
  0000BEE0: DC 13 00 00 07 00 02 00 1B 14 00 00 00 00 00 00  ................
  0000BEF0: A2 03 03 12 0B 14 03 00 DD 13 00 00 0E 51 75 65  .............Que
  0000BF00: 72 79 49 6E 74 65 72 66 61 63 65 F1 0B 14 03 00  ryInterface.....
  0000BF10: DE 13 00 00 06 41 64 64 52 65 66 F1 0B 14 03 00  .....AddRef.....
  0000BF20: DE 13 00 00 07 52 65 6C 65 61 73 65 0B 14 03 00  .....Release....
  0000BF30: E2 13 00 00 09 53 65 74 46 6F 72 6D 61 74 F2 F1  .....SetFormat..
  0000BF40: 0B 14 03 00 E3 13 00 00 0C 53 65 74 46 72 65 71  .........SetFreq
  0000BF50: 75 65 6E 63 79 F3 F2 F1 0B 14 03 00 E5 13 00 00  uency...........
  0000BF60: 09 53 65 74 56 6F 6C 75 6D 65 F2 F1 0B 14 03 00  .SetVolume......
  0000BF70: E5 13 00 00 08 53 65 74 50 69 74 63 68 F3 F2 F1  .....SetPitch...
  0000BF80: 0B 14 03 00 EA 13 00 00 06 53 65 74 4C 46 4F F1  .........SetLFO.
  0000BF90: 0B 14 03 00 EF 13 00 00 05 53 65 74 45 47 F2 F1  .........SetEG..
  0000BFA0: 0B 14 03 00 F4 13 00 00 09 53 65 74 46 69 6C 74  .........SetFilt
  0000BFB0: 65 72 F2 F1 0B 14 03 00 E3 13 00 00 0B 53 65 74  er...........Set
  0000BFC0: 48 65 61 64 72 6F 6F 6D 0B 14 03 00 F6 13 00 00  Headroom........
  0000BFD0: 0F 53 65 74 4F 75 74 70 75 74 42 75 66 66 65 72  .SetOutputBuffer
  0000BFE0: 0B 14 03 00 F8 13 00 00 0A 53 65 74 4D 69 78 42  .........SetMixB
  0000BFF0: 69 6E 73 F1 0B 14 03 00 F8 13 00 00 10 53 65 74  ins..........Set
  0000C000: 4D 69 78 42 69 6E 56 6F 6C 75 6D 65 73 F3 F2 F1  MixBinVolumes...
  0000C010: 0B 14 03 00 FD 13 00 00 10 53 65 74 41 6C 6C 50  .........SetAllP
  0000C020: 61 72 61 6D 65 74 65 72 73 F3 F2 F1 0B 14 03 00  arameters.......
  0000C030: FF 13 00 00 0D 53 65 74 43 6F 6E 65 41 6E 67 6C  .....SetConeAngl
  0000C040: 65 73 F2 F1 0B 14 03 00 00 14 00 00 12 53 65 74  es...........Set
  0000C050: 43 6F 6E 65 4F 72 69 65 6E 74 61 74 69 6F 6E F1  ConeOrientation.
  0000C060: 0B 14 03 00 02 14 00 00 14 53 65 74 43 6F 6E 65  .........SetCone
  0000C070: 4F 75 74 73 69 64 65 56 6F 6C 75 6D 65 F3 F2 F1  OutsideVolume...
  0000C080: 0B 14 03 00 03 14 00 00 0E 53 65 74 4D 61 78 44  .........SetMaxD
  0000C090: 69 73 74 61 6E 63 65 F1 0B 14 03 00 03 14 00 00  istance.........
  0000C0A0: 0E 53 65 74 4D 69 6E 44 69 73 74 61 6E 63 65 F1  .SetMinDistance.
  0000C0B0: 0B 14 03 00 04 14 00 00 07 53 65 74 4D 6F 64 65  .........SetMode
  0000C0C0: 0B 14 03 00 00 14 00 00 0B 53 65 74 50 6F 73 69  .........SetPosi
  0000C0D0: 74 69 6F 6E 0B 14 03 00 00 14 00 00 0B 53 65 74  tion.........Set
  0000C0E0: 56 65 6C 6F 63 69 74 79 0B 14 03 00 03 14 00 00  Velocity........
  0000C0F0: 11 53 65 74 44 69 73 74 61 6E 63 65 46 61 63 74  .SetDistanceFact
  0000C100: 6F 72 F2 F1 0B 14 03 00 03 14 00 00 10 53 65 74  or...........Set
  0000C110: 44 6F 70 70 6C 65 72 46 61 63 74 6F 72 F3 F2 F1  DopplerFactor...
  0000C120: 0B 14 03 00 03 14 00 00 10 53 65 74 52 6F 6C 6C  .........SetRoll
  0000C130: 6F 66 66 46 61 63 74 6F 72 F3 F2 F1 0B 14 03 00  offFactor.......
  0000C140: 06 14 00 00 0F 53 65 74 52 6F 6C 6C 6F 66 66 43  .....SetRolloffC
  0000C150: 75 72 76 65 0B 14 03 00 0B 14 00 00 0E 53 65 74  urve.........Set
  0000C160: 49 33 44 4C 32 53 6F 75 72 63 65 F1 0B 14 03 00  I3DL2Source.....
  0000C170: FF 13 00 00 04 50 6C 61 79 F3 F2 F1 0B 14 03 00  .....Play.......
  0000C180: 0D 14 00 00 06 50 6C 61 79 45 78 F1 0B 14 03 00  .....PlayEx.....
  0000C190: 0E 14 00 00 04 53 74 6F 70 F3 F2 F1 0B 14 03 00  .....Stop.......
  0000C1A0: 0D 14 00 00 06 53 74 6F 70 45 78 F1 0B 14 03 00  .....StopEx.....
  0000C1B0: 04 14 00 00 0D 53 65 74 50 6C 61 79 52 65 67 69  .....SetPlayRegi
  0000C1C0: 6F 6E F2 F1 0B 14 03 00 04 14 00 00 0D 53 65 74  on...........Set
  0000C1D0: 4C 6F 6F 70 52 65 67 69 6F 6E F2 F1 0B 14 03 00  LoopRegion......
  0000C1E0: 0F 14 00 00 09 47 65 74 53 74 61 74 75 73 F2 F1  .....GetStatus..
  0000C1F0: 0B 14 03 00 11 14 00 00 12 47 65 74 43 75 72 72  .........GetCurr
  0000C200: 65 6E 74 50 6F 73 69 74 69 6F 6E F1 0B 14 03 00  entPosition.....
  0000C210: E3 13 00 00 12 53 65 74 43 75 72 72 65 6E 74 50  .....SetCurrentP
  0000C220: 6F 73 69 74 69 6F 6E F1 0B 14 03 00 13 14 00 00  osition.........
  0000C230: 0D 53 65 74 42 75 66 66 65 72 44 61 74 61 F2 F1  .SetBufferData..
  0000C240: 0B 14 03 00 15 14 00 00 04 4C 6F 63 6B F3 F2 F1  .........Lock...
  0000C250: 0B 14 03 00 17 14 00 00 06 55 6E 6C 6F 63 6B F1  .........Unlock.
  0000C260: 0B 14 03 00 0E 14 00 00 07 52 65 73 74 6F 72 65  .........Restore
  0000C270: 0B 14 03 00 1C 14 00 00 18 53 65 74 4E 6F 74 69  .........SetNoti
  0000C280: 66 69 63 61 74 69 6F 6E 50 6F 73 69 74 69 6F 6E  ficationPosition
  0000C290: 73 F3 F2 F1 2A 00 05 10 2A 00 00 00 1D 14 00 00  s...*...*.......
  0000C2A0: 00 00 00 00 00 00 00 00 01 00 12 49 44 69 72 65  ...........IDire
  0000C2B0: 63 74 53 6F 75 6E 64 42 75 66 66 65 72 F3 F2 F1  ctSoundBuffer...
  0000C2C0: AE 00 03 12 05 14 03 00 21 00 00 00 00 00 0A 77  ........!......w
  0000C2D0: 46 6F 72 6D 61 74 54 61 67 F3 F2 F1 05 14 03 00  FormatTag.......
  0000C2E0: 21 00 00 00 02 00 09 6E 43 68 61 6E 6E 65 6C 73  !......nChannels
  0000C2F0: 05 14 03 00 22 00 00 00 04 00 0E 6E 53 61 6D 70  ...."......nSamp
  0000C300: 6C 65 73 50 65 72 53 65 63 F3 F2 F1 05 14 03 00  lesPerSec.......
  0000C310: 22 00 00 00 08 00 0F 6E 41 76 67 42 79 74 65 73  "......nAvgBytes
  0000C320: 50 65 72 53 65 63 F2 F1 05 14 03 00 21 00 00 00  PerSec......!...
  0000C330: 0C 00 0B 6E 42 6C 6F 63 6B 41 6C 69 67 6E F2 F1  ...nBlockAlign..
  0000C340: 05 14 03 00 21 00 00 00 0E 00 0E 77 42 69 74 73  ....!......wBits
  0000C350: 50 65 72 53 61 6D 70 6C 65 F3 F2 F1 05 14 03 00  PerSample.......
  0000C360: 21 00 00 00 10 00 06 63 62 53 69 7A 65 F3 F2 F1  !......cbSize...
  0000C370: 22 00 05 10 07 00 00 00 1F 14 00 00 00 00 00 00  "...............
  0000C380: 00 00 00 00 12 00 0D 74 57 41 56 45 46 4F 52 4D  .......tWAVEFORM
  0000C390: 41 54 45 58 96 00 03 12 05 14 03 00 22 00 00 00  ATEX........"...
  0000C3A0: 00 00 05 64 77 4C 46 4F 05 14 03 00 22 00 00 00  ...dwLFO...."...
  0000C3B0: 04 00 07 64 77 44 65 6C 61 79 F2 F1 05 14 03 00  ...dwDelay......
  0000C3C0: 22 00 00 00 08 00 07 64 77 44 65 6C 74 61 F2 F1  "......dwDelta..
  0000C3D0: 05 14 03 00 12 00 00 00 0C 00 10 6C 50 69 74 63  ...........lPitc
  0000C3E0: 68 4D 6F 64 75 6C 61 74 69 6F 6E F1 05 14 03 00  hModulation.....
  0000C3F0: 12 00 00 00 10 00 12 6C 46 69 6C 74 65 72 43 75  .......lFilterCu
  0000C400: 74 4F 66 66 52 61 6E 67 65 F3 F2 F1 05 14 03 00  tOffRange.......
  0000C410: 12 00 00 00 14 00 14 6C 41 6D 70 6C 69 74 75 64  .......lAmplitud
  0000C420: 65 4D 6F 64 75 6C 61 74 69 6F 6E F1 22 00 05 10  eModulation."...
  0000C430: 06 00 00 00 21 14 00 00 00 00 00 00 00 00 00 00  ....!...........
  0000C440: 18 00 0A 5F 44 53 4C 46 4F 44 45 53 43 F3 F2 F1  ..._DSLFODESC...
  0000C450: CE 00 03 12 05 14 03 00 22 00 00 00 00 00 04 64  ........"......d
  0000C460: 77 45 47 F1 05 14 03 00 22 00 00 00 04 00 06 64  wEG....."......d
  0000C470: 77 4D 6F 64 65 F3 F2 F1 05 14 03 00 22 00 00 00  wMode......."...
  0000C480: 08 00 07 64 77 44 65 6C 61 79 F2 F1 05 14 03 00  ...dwDelay......
  0000C490: 22 00 00 00 0C 00 08 64 77 41 74 74 61 63 6B F1  "......dwAttack.
  0000C4A0: 05 14 03 00 22 00 00 00 10 00 06 64 77 48 6F 6C  ...."......dwHol
  0000C4B0: 64 F3 F2 F1 05 14 03 00 22 00 00 00 14 00 07 64  d......."......d
  0000C4C0: 77 44 65 63 61 79 F2 F1 05 14 03 00 22 00 00 00  wDecay......"...
  0000C4D0: 18 00 09 64 77 52 65 6C 65 61 73 65 05 14 03 00  ...dwRelease....
  0000C4E0: 22 00 00 00 1C 00 09 64 77 53 75 73 74 61 69 6E  "......dwSustain
  0000C4F0: 05 14 03 00 12 00 00 00 20 00 0B 6C 50 69 74 63  ........ ..lPitc
  0000C500: 68 53 63 61 6C 65 F2 F1 05 14 03 00 12 00 00 00  hScale..........
  0000C510: 24 00 0D 6C 46 69 6C 74 65 72 43 75 74 4F 66 66  $..lFilterCutOff
  0000C520: 26 00 05 10 0A 00 00 00 23 14 00 00 00 00 00 00  &.......#.......
  0000C530: 00 00 00 00 28 00 0F 5F 44 53 45 4E 56 45 4C 4F  ....(.._DSENVELO
  0000C540: 50 45 44 45 53 43 F2 F1 0E 00 03 10 22 00 00 00  PEDESC......"...
  0000C550: 11 00 00 00 10 00 00 F1 4E 00 03 12 05 14 03 00  ........N.......
  0000C560: 22 00 00 00 00 00 06 64 77 4D 6F 64 65 F3 F2 F1  "......dwMode...
  0000C570: 05 14 03 00 22 00 00 00 04 00 0E 64 77 51 43 6F  ...."......dwQCo
  0000C580: 65 66 66 69 63 69 65 6E 74 F3 F2 F1 05 14 03 00  efficient.......
  0000C590: 25 14 00 00 08 00 0F 61 64 77 43 6F 65 66 66 69  %......adwCoeffi
  0000C5A0: 63 69 65 6E 74 73 F2 F1 22 00 05 10 03 00 00 00  cients..".......
  0000C5B0: 26 14 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  &.............._
  0000C5C0: 44 53 46 49 4C 54 45 52 44 45 53 43 2A 00 05 10  DSFILTERDESC*...
  0000C5D0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000C5E0: 00 00 13 5F 44 53 4D 49 58 42 49 4E 56 4F 4C 55  ..._DSMIXBINVOLU
  0000C5F0: 4D 45 50 41 49 52 F2 F1 0A 00 01 10 28 14 00 00  MEPAIR......(...
  0000C600: 01 00 F2 F1 0A 00 02 10 29 14 00 00 0A 00 00 00  ........).......
  0000C610: 3A 00 03 12 05 14 03 00 22 00 00 00 00 00 0D 64  :......."......d
  0000C620: 77 4D 69 78 42 69 6E 43 6F 75 6E 74 05 14 03 00  wMixBinCount....
  0000C630: 2A 14 00 00 04 00 13 6C 70 4D 69 78 42 69 6E 56  *......lpMixBinV
  0000C640: 6F 6C 75 6D 65 50 61 69 72 73 F2 F1 22 00 05 10  olumePairs.."...
  0000C650: 02 00 00 00 2B 14 00 00 00 00 00 00 00 00 00 00  ....+...........
  0000C660: 08 00 0A 5F 44 53 4D 49 58 42 49 4E 53 F3 F2 F1  ..._DSMIXBINS...
  0000C670: 0A 00 02 10 F9 13 00 00 0A 04 00 00 1A 00 09 10  ................
  0000C680: 03 00 00 00 F9 13 00 00 2D 14 00 00 0B 00 00 00  ........-.......
  0000C690: 09 10 00 00 00 00 00 00 62 01 03 12 05 14 03 00  ........b.......
  0000C6A0: 22 00 00 00 00 00 06 64 77 53 69 7A 65 F3 F2 F1  "......dwSize...
  0000C6B0: 05 14 03 00 B0 12 00 00 04 00 09 76 50 6F 73 69  ...........vPosi
  0000C6C0: 74 69 6F 6E 05 14 03 00 B0 12 00 00 10 00 09 76  tion...........v
  0000C6D0: 56 65 6C 6F 63 69 74 79 05 14 03 00 22 00 00 00  Velocity...."...
  0000C6E0: 1C 00 11 64 77 49 6E 73 69 64 65 43 6F 6E 65 41  ...dwInsideConeA
  0000C6F0: 6E 67 6C 65 05 14 03 00 22 00 00 00 20 00 12 64  ngle...."... ..d
  0000C700: 77 4F 75 74 73 69 64 65 43 6F 6E 65 41 6E 67 6C  wOutsideConeAngl
  0000C710: 65 F3 F2 F1 05 14 03 00 B0 12 00 00 24 00 10 76  e...........$..v
  0000C720: 43 6F 6E 65 4F 72 69 65 6E 74 61 74 69 6F 6E F1  ConeOrientation.
  0000C730: 05 14 03 00 12 00 00 00 30 00 12 6C 43 6F 6E 65  ........0..lCone
  0000C740: 4F 75 74 73 69 64 65 56 6F 6C 75 6D 65 F3 F2 F1  OutsideVolume...
  0000C750: 05 14 03 00 40 00 00 00 34 00 0D 66 6C 4D 69 6E  ....@...4..flMin
  0000C760: 44 69 73 74 61 6E 63 65 05 14 03 00 40 00 00 00  Distance....@...
  0000C770: 38 00 0D 66 6C 4D 61 78 44 69 73 74 61 6E 63 65  8..flMaxDistance
  0000C780: 05 14 03 00 22 00 00 00 3C 00 06 64 77 4D 6F 64  ...."...<..dwMod
  0000C790: 65 F3 F2 F1 05 14 03 00 40 00 00 00 40 00 10 66  e.......@...@..f
  0000C7A0: 6C 44 69 73 74 61 6E 63 65 46 61 63 74 6F 72 F1  lDistanceFactor.
  0000C7B0: 05 14 03 00 40 00 00 00 44 00 0F 66 6C 52 6F 6C  ....@...D..flRol
  0000C7C0: 6C 6F 66 66 46 61 63 74 6F 72 F2 F1 05 14 03 00  loffFactor......
  0000C7D0: 40 00 00 00 48 00 0F 66 6C 44 6F 70 70 6C 65 72  @...H..flDoppler
  0000C7E0: 46 61 63 74 6F 72 F2 F1 0B 14 03 01 2E 14 00 00  Factor..........
  0000C7F0: 0B 5F 44 53 33 44 42 55 46 46 45 52 22 00 05 10  ._DS3DBUFFER"...
  0000C800: 0E 00 02 00 2F 14 00 00 00 00 00 00 00 00 00 00  ..../...........
  0000C810: 4C 00 0B 5F 44 53 33 44 42 55 46 46 45 52 F2 F1  L.._DS3DBUFFER..
  0000C820: 2A 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  *...............
  0000C830: 00 00 00 00 00 00 13 5F 44 53 49 33 44 4C 32 4F  ......._DSI3DL2O
  0000C840: 42 53 54 52 55 43 54 49 4F 4E F2 F1 26 00 05 10  BSTRUCTION..&...
  0000C850: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  0000C860: 00 00 11 5F 44 53 49 33 44 4C 32 4F 43 43 4C 55  ..._DSI3DL2OCCLU
  0000C870: 53 49 4F 4E 9A 00 03 12 05 14 03 00 12 00 00 00  SION............
  0000C880: 00 00 07 6C 44 69 72 65 63 74 F2 F1 05 14 03 00  ...lDirect......
  0000C890: 12 00 00 00 04 00 09 6C 44 69 72 65 63 74 48 46  .......lDirectHF
  0000C8A0: 05 14 03 00 12 00 00 00 08 00 05 6C 52 6F 6F 6D  ...........lRoom
  0000C8B0: 05 14 03 00 12 00 00 00 0C 00 07 6C 52 6F 6F 6D  ...........lRoom
  0000C8C0: 48 46 F2 F1 05 14 03 00 40 00 00 00 10 00 13 66  HF......@......f
  0000C8D0: 6C 52 6F 6F 6D 52 6F 6C 6C 6F 66 66 46 61 63 74  lRoomRolloffFact
  0000C8E0: 6F 72 F2 F1 05 14 03 00 31 14 00 00 14 00 0B 4F  or......1......O
  0000C8F0: 62 73 74 72 75 63 74 69 6F 6E F2 F1 05 14 03 00  bstruction......
  0000C900: 32 14 00 00 1C 00 09 4F 63 63 6C 75 73 69 6F 6E  2......Occlusion
  0000C910: 26 00 05 10 07 00 00 00 33 14 00 00 00 00 00 00  &.......3.......
  0000C920: 00 00 00 00 24 00 0E 5F 44 53 49 33 44 4C 32 42  ....$.._DSI3DL2B
  0000C930: 55 46 46 45 52 F3 F2 F1 2E 00 03 12 05 14 03 00  UFFER...........
  0000C940: 22 00 00 00 00 00 08 64 77 4F 66 66 73 65 74 F1  "......dwOffset.
  0000C950: 05 14 03 00 03 04 00 00 04 00 0C 68 45 76 65 6E  ...........hEven
  0000C960: 74 4E 6F 74 69 66 79 F1 2A 00 05 10 02 00 00 00  tNotify.*.......
  0000C970: 35 14 00 00 00 00 00 00 00 00 00 00 08 00 12 5F  5.............._
  0000C980: 44 53 42 50 4F 53 49 54 49 4F 4E 4E 4F 54 49 46  DSBPOSITIONNOTIF
  0000C990: 59 F3 F2 F1 0A 00 02 10 7D 13 00 00 0A 04 00 00  Y.......}.......
  0000C9A0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000C9B0: 00 00 00 00 00 00 0C 58 4D 65 64 69 61 4F 62 6A  .......XMediaObj
  0000C9C0: 65 63 74 F1 1A 00 09 10 22 00 00 00 7D 13 00 00  ect....."...}...
  0000C9D0: 37 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  7...............
  0000C9E0: 22 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  "...............
  0000C9F0: 00 00 00 00 00 00 0B 5F 58 4D 45 44 49 41 49 4E  ......._XMEDIAIN
  0000CA00: 46 4F F2 F1 0A 00 02 10 3A 14 00 00 0A 00 00 00  FO......:.......
  0000CA10: 0A 00 01 12 01 00 00 00 3B 14 00 00 1A 00 09 10  ........;.......
  0000CA20: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CA30: 3C 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  <...............
  0000CA40: 7D 13 00 00 37 14 00 00 07 00 01 00 82 13 00 00  }...7...........
  0000CA50: 00 00 00 00 22 00 05 10 00 00 80 00 00 00 00 00  ...."...........
  0000CA60: 00 00 00 00 00 00 00 00 00 00 0D 5F 58 4D 45 44  ..........._XMED
  0000CA70: 49 41 50 41 43 4B 45 54 0A 00 01 10 3F 14 00 00  IAPACKET....?...
  0000CA80: 01 00 F2 F1 0A 00 02 10 40 14 00 00 0A 00 00 00  ........@.......
  0000CA90: 0E 00 01 12 02 00 00 00 41 14 00 00 41 14 00 00  ........A...A...
  0000CAA0: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CAB0: 07 00 02 00 42 14 00 00 00 00 00 00 1A 00 09 10  ....B...........
  0000CAC0: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 00 00  ....}...7.......
  0000CAD0: 09 10 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CAE0: 7D 13 00 00 37 14 00 00 07 00 02 00 69 13 00 00  }...7.......i...
  0000CAF0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CB00: 37 14 00 00 07 00 01 00 E1 13 00 00 00 00 00 00  7...............
  0000CB10: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CB20: 07 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000CB30: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CB40: E4 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CB50: 7D 13 00 00 37 14 00 00 07 00 01 00 E9 13 00 00  }...7...........
  0000CB60: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CB70: 37 14 00 00 07 00 01 00 EE 13 00 00 00 00 00 00  7...............
  0000CB80: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CB90: 07 00 01 00 F3 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000CBA0: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 01 00  ....}...7.......
  0000CBB0: F5 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CBC0: 7D 13 00 00 37 14 00 00 07 00 01 00 F7 13 00 00  }...7...........
  0000CBD0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CBE0: 37 14 00 00 07 00 02 00 FC 13 00 00 00 00 00 00  7...............
  0000CBF0: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CC00: 07 00 03 00 FE 13 00 00 00 00 00 00 1A 00 09 10  ................
  0000CC10: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 04 00  ....}...7.......
  0000CC20: 9F 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CC30: 7D 13 00 00 37 14 00 00 07 00 02 00 01 14 00 00  }...7...........
  0000CC40: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CC50: 37 14 00 00 07 00 02 00 9B 13 00 00 00 00 00 00  7...............
  0000CC60: 1A 00 09 10 12 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CC70: 07 00 02 00 31 10 00 00 00 00 00 00 1A 00 09 10  ....1...........
  0000CC80: 12 00 00 00 7D 13 00 00 37 14 00 00 07 00 03 00  ....}...7.......
  0000CC90: 05 14 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000CCA0: 7D 13 00 00 37 14 00 00 07 00 02 00 0A 14 00 00  }...7...........
  0000CCB0: 00 00 00 00 1A 00 09 10 12 00 00 00 7D 13 00 00  ............}...
  0000CCC0: 37 14 00 00 07 00 02 00 0C 14 00 00 00 00 00 00  7...............
  0000CCD0: 0A 00 01 10 7D 13 00 00 01 00 F2 F1 0A 00 02 10  ....}...........
  0000CCE0: 57 14 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  W...*...........
  0000CCF0: 58 14 00 00 1A 00 09 10 03 00 00 00 7D 13 00 00  X...........}...
  0000CD00: 37 14 00 00 0B 00 01 00 59 14 00 00 00 00 00 00  7.......Y.......
  0000CD10: 1A 00 09 10 03 00 00 00 7D 13 00 00 37 14 00 00  ........}...7...
  0000CD20: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000CD30: 03 01 00 00 5A 14 00 00 03 01 00 00 5B 14 00 00  ....Z.......[...
  0000CD40: 2E 03 03 12 00 14 03 00 38 14 00 00 00 00 F2 F1  ........8.......
  0000CD50: 0B 14 17 00 39 14 00 00 06 41 64 64 52 65 66 F1  ....9....AddRef.
  0000CD60: 0B 14 17 00 39 14 00 00 07 52 65 6C 65 61 73 65  ....9....Release
  0000CD70: 0B 14 17 00 3D 14 00 00 07 47 65 74 49 6E 66 6F  ....=....GetInfo
  0000CD80: 0B 14 17 00 3E 14 00 00 09 47 65 74 53 74 61 74  ....>....GetStat
  0000CD90: 75 73 F2 F1 0B 14 17 00 43 14 00 00 07 50 72 6F  us......C....Pro
  0000CDA0: 63 65 73 73 0B 14 17 00 44 14 00 00 0D 44 69 73  cess....D....Dis
  0000CDB0: 63 6F 6E 74 69 6E 75 69 74 79 F2 F1 0B 14 17 00  continuity......
  0000CDC0: 44 14 00 00 05 46 6C 75 73 68 F2 F1 0B 14 03 00  D....Flush......
  0000CDD0: 45 14 00 00 0E 51 75 65 72 79 49 6E 74 65 72 66  E....QueryInterf
  0000CDE0: 61 63 65 F1 0B 14 03 00 46 14 00 00 09 53 65 74  ace.....F....Set
  0000CDF0: 46 6F 72 6D 61 74 F2 F1 0B 14 03 00 47 14 00 00  Format......G...
  0000CE00: 0C 53 65 74 46 72 65 71 75 65 6E 63 79 F3 F2 F1  .SetFrequency...
  0000CE10: 0B 14 03 00 48 14 00 00 09 53 65 74 56 6F 6C 75  ....H....SetVolu
  0000CE20: 6D 65 F2 F1 0B 14 03 00 48 14 00 00 08 53 65 74  me......H....Set
  0000CE30: 50 69 74 63 68 F3 F2 F1 0B 14 03 00 49 14 00 00  Pitch.......I...
  0000CE40: 06 53 65 74 4C 46 4F F1 0B 14 03 00 4A 14 00 00  .SetLFO.....J...
  0000CE50: 05 53 65 74 45 47 F2 F1 0B 14 03 00 4B 14 00 00  .SetEG......K...
  0000CE60: 09 53 65 74 46 69 6C 74 65 72 F2 F1 0B 14 03 00  .SetFilter......
  0000CE70: 47 14 00 00 0B 53 65 74 48 65 61 64 72 6F 6F 6D  G....SetHeadroom
  0000CE80: 0B 14 03 00 4C 14 00 00 0F 53 65 74 4F 75 74 70  ....L....SetOutp
  0000CE90: 75 74 42 75 66 66 65 72 0B 14 03 00 4D 14 00 00  utBuffer....M...
  0000CEA0: 0A 53 65 74 4D 69 78 42 69 6E 73 F1 0B 14 03 00  .SetMixBins.....
  0000CEB0: 4D 14 00 00 10 53 65 74 4D 69 78 42 69 6E 56 6F  M....SetMixBinVo
  0000CEC0: 6C 75 6D 65 73 F3 F2 F1 0B 14 03 00 4E 14 00 00  lumes.......N...
  0000CED0: 10 53 65 74 41 6C 6C 50 61 72 61 6D 65 74 65 72  .SetAllParameter
  0000CEE0: 73 F3 F2 F1 0B 14 03 00 4F 14 00 00 0D 53 65 74  s.......O....Set
  0000CEF0: 43 6F 6E 65 41 6E 67 6C 65 73 F2 F1 0B 14 03 00  ConeAngles......
  0000CF00: 50 14 00 00 12 53 65 74 43 6F 6E 65 4F 72 69 65  P....SetConeOrie
  0000CF10: 6E 74 61 74 69 6F 6E F1 0B 14 03 00 51 14 00 00  ntation.....Q...
  0000CF20: 14 53 65 74 43 6F 6E 65 4F 75 74 73 69 64 65 56  .SetConeOutsideV
  0000CF30: 6F 6C 75 6D 65 F3 F2 F1 0B 14 03 00 52 14 00 00  olume.......R...
  0000CF40: 0E 53 65 74 4D 61 78 44 69 73 74 61 6E 63 65 F1  .SetMaxDistance.
  0000CF50: 0B 14 03 00 52 14 00 00 0E 53 65 74 4D 69 6E 44  ....R....SetMinD
  0000CF60: 69 73 74 61 6E 63 65 F1 0B 14 03 00 53 14 00 00  istance.....S...
  0000CF70: 07 53 65 74 4D 6F 64 65 0B 14 03 00 50 14 00 00  .SetMode....P...
  0000CF80: 0B 53 65 74 50 6F 73 69 74 69 6F 6E 0B 14 03 00  .SetPosition....
  0000CF90: 50 14 00 00 0B 53 65 74 56 65 6C 6F 63 69 74 79  P....SetVelocity
  0000CFA0: 0B 14 03 00 52 14 00 00 11 53 65 74 44 69 73 74  ....R....SetDist
  0000CFB0: 61 6E 63 65 46 61 63 74 6F 72 F2 F1 0B 14 03 00  anceFactor......
  0000CFC0: 52 14 00 00 10 53 65 74 44 6F 70 70 6C 65 72 46  R....SetDopplerF
  0000CFD0: 61 63 74 6F 72 F3 F2 F1 0B 14 03 00 52 14 00 00  actor.......R...
  0000CFE0: 10 53 65 74 52 6F 6C 6C 6F 66 66 46 61 63 74 6F  .SetRolloffFacto
  0000CFF0: 72 F3 F2 F1 0B 14 03 00 54 14 00 00 0F 53 65 74  r.......T....Set
  0000D000: 52 6F 6C 6C 6F 66 66 43 75 72 76 65 0B 14 03 00  RolloffCurve....
  0000D010: 55 14 00 00 0E 53 65 74 49 33 44 4C 32 53 6F 75  U....SetI3DL2Sou
  0000D020: 72 63 65 F1 0B 14 03 00 47 14 00 00 05 50 61 75  rce.....G....Pau
  0000D030: 73 65 F2 F1 0B 14 03 00 56 14 00 00 07 50 61 75  se......V....Pau
  0000D040: 73 65 45 78 0B 14 03 00 56 14 00 00 07 46 6C 75  seEx....V....Flu
  0000D050: 73 68 45 78 07 14 02 00 5C 14 00 00 12 49 44 69  shEx....\....IDi
  0000D060: 72 65 63 74 53 6F 75 6E 64 53 74 72 65 61 6D F1  rectSoundStream.
  0000D070: 0A 00 0A 00 07 00 55 55 55 50 F2 F1 2A 00 05 10  ......UUUP..*...
  0000D080: 27 00 02 00 5D 14 00 00 00 00 00 00 5E 14 00 00  '...].......^...
  0000D090: 04 00 12 49 44 69 72 65 63 74 53 6F 75 6E 64 53  ...IDirectSoundS
  0000D0A0: 74 72 65 61 6D F3 F2 F1 1E 00 04 10 00 00 80 00  tream...........
  0000D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 53  ...............S
  0000D0C0: 77 69 7A 7A 6C 65 72 F1 0A 00 02 10 60 14 00 00  wizzler.....`...
  0000D0D0: 0A 04 00 00 1A 00 09 10 03 00 00 00 60 14 00 00  ............`...
  0000D0E0: 61 14 00 00 0B 00 03 00 FE 13 00 00 00 00 00 00  a...............
  0000D0F0: 1A 00 09 10 03 00 00 00 60 14 00 00 61 14 00 00  ........`...a...
  0000D100: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000D110: 03 00 00 00 62 14 00 00 03 00 00 00 63 14 00 00  ....b.......c...
  0000D120: 1A 00 09 10 22 00 00 00 60 14 00 00 61 14 00 00  ...."...`...a...
  0000D130: 0B 00 01 00 BB 10 00 00 00 00 00 00 1A 00 09 10  ................
  0000D140: 22 00 00 00 60 14 00 00 61 14 00 00 0B 00 03 00  "...`...a.......
  0000D150: FE 13 00 00 00 00 00 00 0A 00 01 12 01 00 00 00  ................
  0000D160: 22 00 00 00 1A 00 09 10 22 00 00 00 60 14 00 00  "......."...`...
  0000D170: 61 14 00 00 0B 00 01 00 67 14 00 00 00 00 00 00  a.......g.......
  0000D180: 1A 00 09 10 22 00 00 00 60 14 00 00 61 14 00 00  ...."...`...a...
  0000D190: 0B 00 01 00 67 14 00 00 00 00 00 00 1A 00 09 10  ....g...........
  0000D1A0: 22 00 00 00 60 14 00 00 61 14 00 00 0B 00 00 00  "...`...a.......
  0000D1B0: 09 10 00 00 00 00 00 00 66 02 03 12 05 14 03 00  ........f.......
  0000D1C0: 22 00 00 00 00 00 07 6D 5F 57 69 64 74 68 F2 F1  "......m_Width..
  0000D1D0: 05 14 03 00 22 00 00 00 04 00 08 6D 5F 48 65 69  ...."......m_Hei
  0000D1E0: 67 68 74 F1 05 14 03 00 22 00 00 00 08 00 07 6D  ght....."......m
  0000D1F0: 5F 44 65 70 74 68 F2 F1 05 14 03 00 22 00 00 00  _Depth......"...
  0000D200: 0C 00 07 6D 5F 4D 61 73 6B 55 F2 F1 05 14 03 00  ...m_MaskU......
  0000D210: 22 00 00 00 10 00 07 6D 5F 4D 61 73 6B 56 F2 F1  "......m_MaskV..
  0000D220: 05 14 03 00 22 00 00 00 14 00 07 6D 5F 4D 61 73  ...."......m_Mas
  0000D230: 6B 57 F2 F1 05 14 03 00 22 00 00 00 18 00 03 6D  kW......"......m
  0000D240: 5F 75 F2 F1 05 14 03 00 22 00 00 00 1C 00 03 6D  _u......"......m
  0000D250: 5F 76 F2 F1 05 14 03 00 22 00 00 00 20 00 03 6D  _v......"... ..m
  0000D260: 5F 77 F2 F1 07 14 02 00 64 14 00 00 08 53 77 69  _w......d....Swi
  0000D270: 7A 7A 6C 65 72 F3 F2 F1 0B 14 03 00 62 14 00 00  zzler.......b...
  0000D280: 04 49 6E 69 74 F3 F2 F1 0B 14 03 00 65 14 00 00  .Init.......e...
  0000D290: 08 53 77 69 7A 7A 6C 65 55 F3 F2 F1 0B 14 03 00  .SwizzleU.......
  0000D2A0: 65 14 00 00 08 53 77 69 7A 7A 6C 65 56 F3 F2 F1  e....SwizzleV...
  0000D2B0: 0B 14 03 00 65 14 00 00 08 53 77 69 7A 7A 6C 65  ....e....Swizzle
  0000D2C0: 57 F3 F2 F1 0B 14 03 00 66 14 00 00 07 53 77 69  W.......f....Swi
  0000D2D0: 7A 7A 6C 65 0B 14 03 00 68 14 00 00 0A 55 6E 73  zzle....h....Uns
  0000D2E0: 77 69 7A 7A 6C 65 55 F1 0B 14 03 00 68 14 00 00  wizzleU.....h...
  0000D2F0: 0A 55 6E 73 77 69 7A 7A 6C 65 56 F1 0B 14 03 00  .UnswizzleV.....
  0000D300: 68 14 00 00 0A 55 6E 73 77 69 7A 7A 6C 65 57 F1  h....UnswizzleW.
  0000D310: 0B 14 03 00 69 14 00 00 04 53 65 74 55 F3 F2 F1  ....i....SetU...
  0000D320: 0B 14 03 00 69 14 00 00 04 53 65 74 56 F3 F2 F1  ....i....SetV...
  0000D330: 0B 14 03 00 69 14 00 00 04 53 65 74 57 F3 F2 F1  ....i....SetW...
  0000D340: 0B 14 03 00 69 14 00 00 04 41 64 64 55 F3 F2 F1  ....i....AddU...
  0000D350: 0B 14 03 00 69 14 00 00 04 41 64 64 56 F3 F2 F1  ....i....AddV...
  0000D360: 0B 14 03 00 69 14 00 00 04 41 64 64 57 F3 F2 F1  ....i....AddW...
  0000D370: 0B 14 03 00 69 14 00 00 04 53 75 62 55 F3 F2 F1  ....i....SubU...
  0000D380: 0B 14 03 00 69 14 00 00 04 53 75 62 56 F3 F2 F1  ....i....SubV...
  0000D390: 0B 14 03 00 69 14 00 00 04 53 75 62 57 F3 F2 F1  ....i....SubW...
  0000D3A0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 55 F3 F2 F1  ....j....IncU...
  0000D3B0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 56 F3 F2 F1  ....j....IncV...
  0000D3C0: 0B 14 03 00 6A 14 00 00 04 49 6E 63 57 F3 F2 F1  ....j....IncW...
  0000D3D0: 0B 14 03 00 6A 14 00 00 04 44 65 63 55 F3 F2 F1  ....j....DecU...
  0000D3E0: 0B 14 03 00 6A 14 00 00 04 44 65 63 56 F3 F2 F1  ....j....DecV...
  0000D3F0: 0B 14 03 00 6A 14 00 00 04 44 65 63 57 F3 F2 F1  ....j....DecW...
  0000D400: 0B 14 03 00 6A 14 00 00 05 47 65 74 32 44 F2 F1  ....j....Get2D..
  0000D410: 0B 14 03 00 6A 14 00 00 05 47 65 74 33 44 F2 F1  ....j....Get3D..
  0000D420: 1E 00 04 10 24 00 02 00 6B 14 00 00 00 00 00 00  ....$...k.......
  0000D430: 00 00 00 00 24 00 08 53 77 69 7A 7A 6C 65 72 F1  ....$..Swizzler.
  0000D440: 1E 00 05 10 00 00 80 00 00 00 00 00 00 00 00 00  ................
  0000D450: 00 00 00 00 00 00 08 58 47 42 75 66 66 65 72 F1  .......XGBuffer.
  0000D460: 0A 00 02 10 6D 14 00 00 0A 04 00 00 1A 00 09 10  ....m...........
  0000D470: 22 00 00 00 6D 14 00 00 6E 14 00 00 07 00 00 00  "...m...n.......
  0000D480: 09 10 00 00 00 00 00 00 1A 00 09 10 03 04 00 00  ................
  0000D490: 6D 14 00 00 6E 14 00 00 07 00 00 00 09 10 00 00  m...n...........
  0000D4A0: 00 00 00 00 1A 00 09 10 22 00 00 00 6D 14 00 00  ........"...m...
  0000D4B0: 6E 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  n...............
  0000D4C0: 8A 00 03 12 05 14 03 00 22 00 00 00 00 00 08 72  ........"......r
  0000D4D0: 65 66 43 6F 75 6E 74 F1 05 14 03 00 03 04 00 00  efCount.........
  0000D4E0: 04 00 05 70 44 61 74 61 05 14 03 00 22 00 00 00  ...pData...."...
  0000D4F0: 08 00 04 73 69 7A 65 F1 0B 14 03 00 6F 14 00 00  ...size.....o...
  0000D500: 06 41 64 64 52 65 66 F1 0B 14 03 00 6F 14 00 00  .AddRef.....o...
  0000D510: 07 52 65 6C 65 61 73 65 0B 14 03 00 70 14 00 00  .Release....p...
  0000D520: 10 47 65 74 42 75 66 66 65 72 50 6F 69 6E 74 65  .GetBufferPointe
  0000D530: 72 F3 F2 F1 0B 14 03 00 71 14 00 00 0D 47 65 74  r.......q....Get
  0000D540: 42 75 66 66 65 72 53 69 7A 65 F2 F1 1E 00 05 10  BufferSize......
  0000D550: 07 00 00 00 72 14 00 00 00 00 00 00 00 00 00 00  ....r...........
  0000D560: 0C 00 08 58 47 42 75 66 66 65 72 F1 0E 00 01 12  ...XGBuffer.....
  0000D570: 02 00 00 00 02 10 00 00 02 10 00 00 0E 00 08 10  ................
  0000D580: 74 00 00 00 07 00 02 00 74 14 00 00 0E 00 08 10  t.......t.......
  0000D590: 22 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  "...............
  0000D5A0: 75 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  u...............
  0000D5B0: 03 00 00 00 07 00 00 00 09 10 00 00 0E 00 08 10  ................
  0000D5C0: 03 00 00 00 07 00 02 00 B9 10 00 00 0E 00 08 10  ................
  0000D5D0: 03 00 00 00 07 00 03 00 CA 10 00 00 0E 00 08 10  ................
  0000D5E0: 03 00 00 00 07 00 02 00 B7 10 00 00 0E 00 08 10  ................
  0000D5F0: 03 00 00 00 07 00 03 00 CC 10 00 00 0E 00 01 12  ................
  0000D600: 02 00 00 00 69 12 00 00 68 12 00 00 0E 00 08 10  ....i...h.......
  0000D610: 03 00 00 00 07 00 02 00 7D 14 00 00 0E 00 01 12  ........}.......
  0000D620: 02 00 00 00 62 10 00 00 75 00 00 00 0E 00 08 10  ....b...u.......
  0000D630: 03 00 00 00 07 00 02 00 7F 14 00 00 0E 00 01 12  ................
  0000D640: 02 00 00 00 67 10 00 00 75 00 00 00 0E 00 08 10  ....g...u.......
  0000D650: 03 00 00 00 07 00 02 00 81 14 00 00 12 00 01 12  ................
  0000D660: 03 00 00 00 6C 10 00 00 EA 11 00 00 75 00 00 00  ....l.......u...
  0000D670: 0E 00 08 10 03 00 00 00 07 00 03 00 83 14 00 00  ................
  0000D680: 0A 00 01 12 01 00 00 00 71 10 00 00 0E 00 08 10  ........q.......
  0000D690: 03 00 00 00 07 00 01 00 85 14 00 00 1A 00 01 12  ................
  0000D6A0: 05 00 00 00 76 10 00 00 75 00 00 00 75 00 00 00  ....v...u...u...
  0000D6B0: F4 11 00 00 22 00 00 00 0E 00 08 10 03 00 00 00  ...."...........
  0000D6C0: 07 00 05 00 87 14 00 00 0A 00 01 12 01 00 00 00  ................
  0000D6D0: 76 10 00 00 0E 00 08 10 03 00 00 00 07 00 01 00  v...............
  0000D6E0: 89 14 00 00 0A 00 01 12 01 00 00 00 25 11 00 00  ............%...
  0000D6F0: 0E 00 08 10 03 00 00 00 07 00 01 00 8B 14 00 00  ................
  0000D700: 0A 00 01 12 01 00 00 00 51 10 00 00 0E 00 08 10  ........Q.......
  0000D710: 03 00 00 00 07 00 01 00 8D 14 00 00 0A 00 01 12  ................
  0000D720: 01 00 00 00 D9 11 00 00 0E 00 08 10 03 00 00 00  ................
  0000D730: 07 00 01 00 8F 14 00 00 0A 00 01 12 01 00 00 00  ................
  0000D740: 40 00 00 00 0E 00 08 10 40 00 00 00 07 00 01 00  @.......@.......
  0000D750: 91 14 00 00 A2 00 03 12 05 14 03 00 03 04 00 00  ................
  0000D760: 00 00 08 70 76 42 75 66 66 65 72 F1 05 14 03 00  ...pvBuffer.....
  0000D770: 22 00 00 00 04 00 09 64 77 4D 61 78 53 69 7A 65  "......dwMaxSize
  0000D780: 05 14 03 00 22 04 00 00 08 00 10 70 64 77 43 6F  ...."......pdwCo
  0000D790: 6D 70 6C 65 74 65 64 53 69 7A 65 F1 05 14 03 00  mpletedSize.....
  0000D7A0: 22 04 00 00 0C 00 09 70 64 77 53 74 61 74 75 73  "......pdwStatus
  0000D7B0: 05 14 03 00 03 04 00 00 10 00 10 68 43 6F 6D 70  ...........hComp
  0000D7C0: 6C 65 74 69 6F 6E 45 76 65 6E 74 F1 05 14 03 00  letionEvent.....
  0000D7D0: 03 04 00 00 10 00 08 70 43 6F 6E 74 65 78 74 F1  .......pContext.
  0000D7E0: 05 14 03 00 13 04 00 00 14 00 0C 70 72 74 54 69  ...........prtTi
  0000D7F0: 6D 65 73 74 61 6D 70 F1 22 00 05 10 07 00 00 00  mestamp.".......
  0000D800: 93 14 00 00 00 00 00 00 00 00 00 00 18 00 0D 5F  ..............._
  0000D810: 58 4D 45 44 49 41 50 41 43 4B 45 54 32 00 03 12  XMEDIAPACKET2...
  0000D820: 05 14 03 00 03 04 00 00 00 00 10 68 43 6F 6D 70  ...........hComp
  0000D830: 6C 65 74 69 6F 6E 45 76 65 6E 74 F1 05 14 03 00  letionEvent.....
  0000D840: 03 04 00 00 00 00 08 70 43 6F 6E 74 65 78 74 F1  .......pContext.
  0000D850: 26 00 06 10 02 00 08 00 95 14 00 00 04 00 18 5F  &.............._
  0000D860: 58 4D 45 44 49 41 50 41 43 4B 45 54 3A 3A 5F 5F  XMEDIAPACKET::__
  0000D870: 75 6E 6E 61 6D 65 64 F1 0A 00 01 10 75 00 00 00  unnamed.....u...
  0000D880: 01 00 F2 F1 0E 00 03 10 97 14 00 00 11 00 00 00  ................
  0000D890: 08 00 00 F1 0E 00 03 10 98 14 00 00 11 00 00 00  ................
  0000D8A0: 58 00 00 F1 0A 00 02 10 EC 13 00 00 0A 00 00 00  X...............
  0000D8B0: D2 00 03 12 05 14 03 00 03 04 00 00 00 00 0E 6C  ...............l
  0000D8C0: 70 76 43 6F 64 65 53 65 67 6D 65 6E 74 F3 F2 F1  pvCodeSegment...
  0000D8D0: 05 14 03 00 22 00 00 00 04 00 0A 64 77 43 6F 64  ...."......dwCod
  0000D8E0: 65 53 69 7A 65 F3 F2 F1 05 14 03 00 03 04 00 00  eSize...........
  0000D8F0: 08 00 0F 6C 70 76 53 74 61 74 65 53 65 67 6D 65  ...lpvStateSegme
  0000D900: 6E 74 F2 F1 05 14 03 00 22 00 00 00 0C 00 0B 64  nt......"......d
  0000D910: 77 53 74 61 74 65 53 69 7A 65 F2 F1 05 14 03 00  wStateSize......
  0000D920: 03 04 00 00 10 00 11 6C 70 76 59 4D 65 6D 6F 72  .......lpvYMemor
  0000D930: 79 53 65 67 6D 65 6E 74 05 14 03 00 22 00 00 00  ySegment...."...
  0000D940: 14 00 0D 64 77 59 4D 65 6D 6F 72 79 53 69 7A 65  ...dwYMemorySize
  0000D950: 05 14 03 00 03 04 00 00 18 00 11 6C 70 76 53 63  ...........lpvSc
  0000D960: 72 61 74 63 68 53 65 67 6D 65 6E 74 05 14 03 00  ratchSegment....
  0000D970: 22 00 00 00 1C 00 0D 64 77 53 63 72 61 74 63 68  "......dwScratch
  0000D980: 53 69 7A 65 22 00 05 10 08 00 00 00 9B 14 00 00  Size"...........
  0000D990: 00 00 00 00 00 00 00 00 20 00 0C 5F 44 53 45 46  ........ .._DSEF
  0000D9A0: 46 45 43 54 4D 41 50 F1 0A 00 02 10 89 13 00 00  FECTMAP.........
  0000D9B0: 0A 00 00 00 0A 00 02 10 DF 13 00 00 0A 00 00 00  ................
  0000D9C0: 0A 00 02 10 C0 13 00 00 0A 00 00 00 36 01 03 12  ............6...
  0000D9D0: 03 04 03 00 00 00 21 50 53 5F 49 4E 50 55 54 4D  ......!PS_INPUTM
  0000D9E0: 41 50 50 49 4E 47 5F 55 4E 53 49 47 4E 45 44 5F  APPING_UNSIGNED_
  0000D9F0: 49 44 45 4E 54 49 54 59 03 04 03 00 20 00 1F 50  IDENTITY.... ..P
  0000DA00: 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 55  S_INPUTMAPPING_U
  0000DA10: 4E 53 49 47 4E 45 44 5F 49 4E 56 45 52 54 F2 F1  NSIGNED_INVERT..
  0000DA20: 03 04 03 00 40 00 1D 50 53 5F 49 4E 50 55 54 4D  ....@..PS_INPUTM
  0000DA30: 41 50 50 49 4E 47 5F 45 58 50 41 4E 44 5F 4E 4F  APPING_EXPAND_NO
  0000DA40: 52 4D 41 4C 03 04 03 00 60 00 1D 50 53 5F 49 4E  RMAL....`..PS_IN
  0000DA50: 50 55 54 4D 41 50 50 49 4E 47 5F 45 58 50 41 4E  PUTMAPPING_EXPAN
  0000DA60: 44 5F 4E 45 47 41 54 45 03 04 03 00 80 00 1F 50  D_NEGATE.......P
  0000DA70: 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 48  S_INPUTMAPPING_H
  0000DA80: 41 4C 46 42 49 41 53 5F 4E 4F 52 4D 41 4C F2 F1  ALFBIAS_NORMAL..
  0000DA90: 03 04 03 00 A0 00 1F 50 53 5F 49 4E 50 55 54 4D  .......PS_INPUTM
  0000DAA0: 41 50 50 49 4E 47 5F 48 41 4C 46 42 49 41 53 5F  APPING_HALFBIAS_
  0000DAB0: 4E 45 47 41 54 45 F2 F1 03 04 03 00 C0 00 1F 50  NEGATE.........P
  0000DAC0: 53 5F 49 4E 50 55 54 4D 41 50 50 49 4E 47 5F 53  S_INPUTMAPPING_S
  0000DAD0: 49 47 4E 45 44 5F 49 44 45 4E 54 49 54 59 F2 F1  IGNED_IDENTITY..
  0000DAE0: 03 04 03 00 E0 00 1D 50 53 5F 49 4E 50 55 54 4D  .......PS_INPUTM
  0000DAF0: 41 50 50 49 4E 47 5F 53 49 47 4E 45 44 5F 4E 45  APPING_SIGNED_NE
  0000DB00: 47 41 54 45 1E 00 07 10 08 00 00 00 74 00 00 00  GATE........t...
  0000DB10: A0 14 00 00 0F 50 53 5F 49 4E 50 55 54 4D 41 50  .....PS_INPUTMAP
  0000DB20: 50 49 4E 47 32 00 03 12 00 14 03 00 F3 11 00 00  PING2...........
  0000DB30: 00 00 F2 F1 05 14 03 00 22 00 00 00 0C 00 06 46  ........"......F
  0000DB40: 6F 72 6D 61 74 F3 F2 F1 05 14 03 00 22 00 00 00  ormat......."...
  0000DB50: 10 00 04 53 69 7A 65 F1 26 00 05 10 03 00 00 00  ...Size.&.......
  0000DB60: A2 14 00 00 00 00 00 00 00 00 00 00 14 00 11 44  ...............D
  0000DB70: 33 44 50 69 78 65 6C 43 6F 6E 74 61 69 6E 65 72  3DPixelContainer
  0000DB80: 2A 00 03 12 05 14 03 00 22 00 00 00 00 00 08 64  *......."......d
  0000DB90: 77 4D 69 78 42 69 6E F1 05 14 03 00 12 00 00 00  wMixBin.........
  0000DBA0: 04 00 07 6C 56 6F 6C 75 6D 65 F2 F1 2A 00 05 10  ...lVolume..*...
  0000DBB0: 02 00 00 00 A4 14 00 00 00 00 00 00 00 00 00 00  ................
  0000DBC0: 08 00 13 5F 44 53 4D 49 58 42 49 4E 56 4F 4C 55  ..._DSMIXBINVOLU
  0000DBD0: 4D 45 50 41 49 52 F2 F1 0A 00 02 10 71 13 00 00  MEPAIR......q...
  0000DBE0: 0A 00 00 00 0A 00 02 10 97 13 00 00 0A 00 00 00  ................
  0000DBF0: 0E 00 03 10 22 00 00 00 11 00 00 00 80 00 00 F1  ...."...........
  0000DC00: 0E 00 03 10 A8 14 00 00 11 00 00 00 00 02 00 F1  ................
  0000DC10: 0A 00 02 10 40 14 00 00 0A 00 00 00 2A 00 03 12  ....@.......*...
  0000DC20: 05 14 03 00 12 00 00 00 00 00 08 6C 48 46 4C 65  ...........lHFLe
  0000DC30: 76 65 6C F1 05 14 03 00 40 00 00 00 04 00 09 66  vel.....@......f
  0000DC40: 6C 4C 46 52 61 74 69 6F 2A 00 05 10 02 00 00 00  lLFRatio*.......
  0000DC50: AB 14 00 00 00 00 00 00 00 00 00 00 08 00 13 5F  ..............._
  0000DC60: 44 53 49 33 44 4C 32 4F 42 53 54 52 55 43 54 49  DSI3DL2OBSTRUCTI
  0000DC70: 4F 4E F2 F1 0A 00 02 10 08 14 00 00 0A 00 00 00  ON..............
  0000DC80: 1E 03 03 12 03 04 03 00 01 00 0E 44 33 44 54 4F  ...........D3DTO
  0000DC90: 50 5F 44 49 53 41 42 4C 45 F3 F2 F1 03 04 03 00  P_DISABLE.......
  0000DCA0: 02 00 11 44 33 44 54 4F 50 5F 53 45 4C 45 43 54  ...D3DTOP_SELECT
  0000DCB0: 41 52 47 31 03 04 03 00 03 00 11 44 33 44 54 4F  ARG1.......D3DTO
  0000DCC0: 50 5F 53 45 4C 45 43 54 41 52 47 32 03 04 03 00  P_SELECTARG2....
  0000DCD0: 04 00 0F 44 33 44 54 4F 50 5F 4D 4F 44 55 4C 41  ...D3DTOP_MODULA
  0000DCE0: 54 45 F2 F1 03 04 03 00 05 00 11 44 33 44 54 4F  TE.........D3DTO
  0000DCF0: 50 5F 4D 4F 44 55 4C 41 54 45 32 58 03 04 03 00  P_MODULATE2X....
  0000DD00: 06 00 11 44 33 44 54 4F 50 5F 4D 4F 44 55 4C 41  ...D3DTOP_MODULA
  0000DD10: 54 45 34 58 03 04 03 00 07 00 0A 44 33 44 54 4F  TE4X.......D3DTO
  0000DD20: 50 5F 41 44 44 F3 F2 F1 03 04 03 00 08 00 10 44  P_ADD..........D
  0000DD30: 33 44 54 4F 50 5F 41 44 44 53 49 47 4E 45 44 F1  3DTOP_ADDSIGNED.
  0000DD40: 03 04 03 00 09 00 12 44 33 44 54 4F 50 5F 41 44  .......D3DTOP_AD
  0000DD50: 44 53 49 47 4E 45 44 32 58 F3 F2 F1 03 04 03 00  DSIGNED2X.......
  0000DD60: 0A 00 0F 44 33 44 54 4F 50 5F 53 55 42 54 52 41  ...D3DTOP_SUBTRA
  0000DD70: 43 54 F2 F1 03 04 03 00 0B 00 10 44 33 44 54 4F  CT.........D3DTO
  0000DD80: 50 5F 41 44 44 53 4D 4F 4F 54 48 F1 03 04 03 00  P_ADDSMOOTH.....
  0000DD90: 0C 00 18 44 33 44 54 4F 50 5F 42 4C 45 4E 44 44  ...D3DTOP_BLENDD
  0000DDA0: 49 46 46 55 53 45 41 4C 50 48 41 F1 03 04 03 00  IFFUSEALPHA.....
  0000DDB0: 0E 00 18 44 33 44 54 4F 50 5F 42 4C 45 4E 44 54  ...D3DTOP_BLENDT
  0000DDC0: 45 58 54 55 52 45 41 4C 50 48 41 F1 03 04 03 00  EXTUREALPHA.....
  0000DDD0: 0F 00 17 44 33 44 54 4F 50 5F 42 4C 45 4E 44 46  ...D3DTOP_BLENDF
  0000DDE0: 41 43 54 4F 52 41 4C 50 48 41 F2 F1 03 04 03 00  ACTORALPHA......
  0000DDF0: 10 00 1A 44 33 44 54 4F 50 5F 42 4C 45 4E 44 54  ...D3DTOP_BLENDT
  0000DE00: 45 58 54 55 52 45 41 4C 50 48 41 50 4D F3 F2 F1  EXTUREALPHAPM...
  0000DE10: 03 04 03 00 0D 00 18 44 33 44 54 4F 50 5F 42 4C  .......D3DTOP_BL
  0000DE20: 45 4E 44 43 55 52 52 45 4E 54 41 4C 50 48 41 F1  ENDCURRENTALPHA.
  0000DE30: 03 04 03 00 11 00 12 44 33 44 54 4F 50 5F 50 52  .......D3DTOP_PR
  0000DE40: 45 4D 4F 44 55 4C 41 54 45 F3 F2 F1 03 04 03 00  EMODULATE.......
  0000DE50: 12 00 1D 44 33 44 54 4F 50 5F 4D 4F 44 55 4C 41  ...D3DTOP_MODULA
  0000DE60: 54 45 41 4C 50 48 41 5F 41 44 44 43 4F 4C 4F 52  TEALPHA_ADDCOLOR
  0000DE70: 03 04 03 00 13 00 1D 44 33 44 54 4F 50 5F 4D 4F  .......D3DTOP_MO
  0000DE80: 44 55 4C 41 54 45 43 4F 4C 4F 52 5F 41 44 44 41  DULATECOLOR_ADDA
  0000DE90: 4C 50 48 41 03 04 03 00 14 00 20 44 33 44 54 4F  LPHA...... D3DTO
  0000DEA0: 50 5F 4D 4F 44 55 4C 41 54 45 49 4E 56 41 4C 50  P_MODULATEINVALP
  0000DEB0: 48 41 5F 41 44 44 43 4F 4C 4F 52 F1 03 04 03 00  HA_ADDCOLOR.....
  0000DEC0: 15 00 20 44 33 44 54 4F 50 5F 4D 4F 44 55 4C 41  .. D3DTOP_MODULA
  0000DED0: 54 45 49 4E 56 43 4F 4C 4F 52 5F 41 44 44 41 4C  TEINVCOLOR_ADDAL
  0000DEE0: 50 48 41 F1 03 04 03 00 16 00 12 44 33 44 54 4F  PHA........D3DTO
  0000DEF0: 50 5F 44 4F 54 50 52 4F 44 55 43 54 33 F3 F2 F1  P_DOTPRODUCT3...
  0000DF00: 03 04 03 00 17 00 12 44 33 44 54 4F 50 5F 4D 55  .......D3DTOP_MU
  0000DF10: 4C 54 49 50 4C 59 41 44 44 F3 F2 F1 03 04 03 00  LTIPLYADD.......
  0000DF20: 18 00 0B 44 33 44 54 4F 50 5F 4C 45 52 50 F2 F1  ...D3DTOP_LERP..
  0000DF30: 03 04 03 00 19 00 11 44 33 44 54 4F 50 5F 42 55  .......D3DTOP_BU
  0000DF40: 4D 50 45 4E 56 4D 41 50 03 04 03 00 1A 00 1A 44  MPENVMAP.......D
  0000DF50: 33 44 54 4F 50 5F 42 55 4D 50 45 4E 56 4D 41 50  3DTOP_BUMPENVMAP
  0000DF60: 4C 55 4D 49 4E 41 4E 43 45 F3 F2 F1 03 04 03 00  LUMINANCE.......
  0000DF70: 1B 00 0A 44 33 44 54 4F 50 5F 4D 41 58 F3 F2 F1  ...D3DTOP_MAX...
  0000DF80: 03 04 03 00 04 80 FF FF FF 7F 12 44 33 44 54 4F  ...........D3DTO
  0000DF90: 50 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  P_FORCE_DWORD...
  0000DFA0: 1E 00 07 10 1C 00 00 00 74 00 00 00 AE 14 00 00  ........t.......
  0000DFB0: 0D 5F 44 33 44 54 45 58 54 55 52 45 4F 50 F2 F1  ._D3DTEXTUREOP..
  0000DFC0: 86 00 03 12 05 14 03 00 22 00 00 00 00 00 04 53  ........"......S
  0000DFD0: 77 61 70 F1 05 14 03 00 22 00 00 00 04 00 0A 53  wap....."......S
  0000DFE0: 77 61 70 56 42 6C 61 6E 6B F3 F2 F1 05 14 03 00  wapVBlank.......
  0000DFF0: 22 00 00 00 08 00 0D 4D 69 73 73 65 64 56 42 6C  "......MissedVBl
  0000E000: 61 6E 6B 73 05 14 03 00 22 00 00 00 0C 00 13 54  anks...."......T
  0000E010: 69 6D 65 55 6E 74 69 6C 53 77 61 70 56 42 6C 61  imeUntilSwapVBla
  0000E020: 6E 6B F2 F1 05 14 03 00 22 00 00 00 10 00 16 54  nk......"......T
  0000E030: 69 6D 65 42 65 74 77 65 65 6E 53 77 61 70 56 42  imeBetweenSwapVB
  0000E040: 6C 61 6E 6B 73 F3 F2 F1 22 00 05 10 05 00 00 00  lanks...".......
  0000E050: B0 14 00 00 00 00 00 00 00 00 00 00 14 00 0C 5F  ..............._
  0000E060: 44 33 44 53 57 41 50 44 41 54 41 F1 0A 00 02 10  D3DSWAPDATA.....
  0000E070: 7F 11 00 00 0A 00 00 00 2A 00 03 12 05 14 03 00  ........*.......
  0000E080: 12 00 00 00 00 00 08 6C 48 46 4C 65 76 65 6C F1  .......lHFLevel.
  0000E090: 05 14 03 00 40 00 00 00 04 00 09 66 6C 4C 46 52  ....@......flLFR
  0000E0A0: 61 74 69 6F 26 00 05 10 02 00 00 00 B3 14 00 00  atio&...........
  0000E0B0: 00 00 00 00 00 00 00 00 08 00 11 5F 44 53 49 33  ..........._DSI3
  0000E0C0: 44 4C 32 4F 43 43 4C 55 53 49 4F 4E 0A 00 02 10  DL2OCCLUSION....
  0000E0D0: 3A 14 00 00 0A 00 00 00 62 00 03 12 05 14 03 00  :.......b.......
  0000E0E0: 22 00 00 00 00 00 07 64 77 46 6C 61 67 73 F2 F1  "......dwFlags..
  0000E0F0: 05 14 03 00 22 00 00 00 04 00 0B 64 77 49 6E 70  ...."......dwInp
  0000E100: 75 74 53 69 7A 65 F2 F1 05 14 03 00 22 00 00 00  utSize......"...
  0000E110: 08 00 0C 64 77 4F 75 74 70 75 74 53 69 7A 65 F1  ...dwOutputSize.
  0000E120: 05 14 03 00 22 00 00 00 0C 00 0E 64 77 4D 61 78  ...."......dwMax
  0000E130: 4C 6F 6F 6B 61 68 65 61 64 F3 F2 F1 22 00 05 10  Lookahead..."...
  0000E140: 04 00 00 00 B6 14 00 00 00 00 00 00 00 00 00 00  ................
  0000E150: 10 00 0B 5F 58 4D 45 44 49 41 49 4E 46 4F F2 F1  ..._XMEDIAINFO..
  0000E160: 0A 00 02 10 F1 13 00 00 0A 00 00 00 0A 00 02 10  ................
  0000E170: AC 11 00 00 0A 00 00 00 0A 00 02 10 6C 13 00 00  ............l...
  0000E180: 0A 00 00 00 0E 00 03 10 DA 10 00 00 11 00 00 00  ................
  0000E190: 8C 00 00 F1 0A 00 02 10 86 11 00 00 0A 00 00 00  ................
  0000E1A0: 36 00 03 12 05 14 03 00 22 00 00 00 00 00 06 56  6......."......V
  0000E1B0: 42 6C 61 6E 6B F3 F2 F1 05 14 03 00 22 00 00 00  Blank......."...
  0000E1C0: 04 00 04 53 77 61 70 F1 05 14 03 00 22 00 00 00  ...Swap....."...
  0000E1D0: 08 00 05 46 6C 61 67 73 26 00 05 10 03 00 00 00  ...Flags&.......
  0000E1E0: BD 14 00 00 00 00 00 00 00 00 00 00 0C 00 0E 5F  ..............._
  0000E1F0: 44 33 44 56 42 4C 41 4E 4B 44 41 54 41 F3 F2 F1  D3DVBLANKDATA...
  0000E200: 0E 00 03 10 21 00 00 00 11 00 00 00 10 00 00 F1  ....!...........
  0000E210: 0A 00 0A 00 07 00 55 55 55 50 F2 F1 0A 00 02 10  ......UUUP......
  0000E220: C0 14 00 00 0A 00 00 00 0A 00 02 10 38 14 00 00  ............8...
  0000E230: 0A 04 00 00 1A 00 09 10 22 00 00 00 38 14 00 00  ........"...8...
  0000E240: C2 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  0000E250: 1A 00 09 10 12 00 00 00 38 14 00 00 C2 14 00 00  ........8.......
  0000E260: 07 00 01 00 3C 14 00 00 00 00 00 00 1A 00 09 10  ....<...........
  0000E270: 12 00 00 00 38 14 00 00 C2 14 00 00 07 00 01 00  ....8...........
  0000E280: 82 13 00 00 00 00 00 00 1A 00 09 10 12 00 00 00  ................
  0000E290: 38 14 00 00 C2 14 00 00 07 00 02 00 42 14 00 00  8...........B...
  0000E2A0: 00 00 00 00 1A 00 09 10 12 00 00 00 38 14 00 00  ............8...
  0000E2B0: C2 14 00 00 07 00 00 00 09 10 00 00 00 00 00 00  ................
  0000E2C0: 0A 00 01 10 38 14 00 00 01 00 F2 F1 0A 00 02 10  ....8...........
  0000E2D0: C8 14 00 00 2A 00 00 00 0A 00 01 12 01 00 00 00  ....*...........
  0000E2E0: C9 14 00 00 1A 00 09 10 03 00 00 00 38 14 00 00  ............8...
  0000E2F0: C2 14 00 00 0B 00 01 00 CA 14 00 00 00 00 00 00  ................
  0000E300: 1A 00 09 10 03 00 00 00 38 14 00 00 C2 14 00 00  ........8.......
  0000E310: 0B 00 00 00 09 10 00 00 00 00 00 00 12 00 06 12  ................
  0000E320: 03 01 00 00 CB 14 00 00 03 01 00 00 CC 14 00 00  ................
  0000E330: BA 00 03 12 09 14 00 00 C1 14 00 00 0B 14 1B 00  ................
  0000E340: C3 14 00 00 00 00 00 00 06 41 64 64 52 65 66 F1  .........AddRef.
  0000E350: 0B 14 1B 00 C3 14 00 00 04 00 00 00 07 52 65 6C  .............Rel
  0000E360: 65 61 73 65 0B 14 1B 00 C4 14 00 00 08 00 00 00  ease............
  0000E370: 07 47 65 74 49 6E 66 6F 0B 14 1B 00 C5 14 00 00  .GetInfo........
  0000E380: 0C 00 00 00 09 47 65 74 53 74 61 74 75 73 F2 F1  .....GetStatus..
  0000E390: 0B 14 1B 00 C6 14 00 00 10 00 00 00 07 50 72 6F  .............Pro
  0000E3A0: 63 65 73 73 0B 14 1B 00 C7 14 00 00 14 00 00 00  cess............
  0000E3B0: 0D 44 69 73 63 6F 6E 74 69 6E 75 69 74 79 F2 F1  .Discontinuity..
  0000E3C0: 0B 14 1B 00 C7 14 00 00 18 00 00 00 05 46 6C 75  .............Flu
  0000E3D0: 73 68 F2 F1 07 14 02 00 CD 14 00 00 0C 58 4D 65  sh...........XMe
  0000E3E0: 64 69 61 4F 62 6A 65 63 74 F3 F2 F1 0A 00 0A 00  diaObject.......
  0000E3F0: 07 00 55 55 55 50 F2 F1 22 00 05 10 0A 00 02 00  ..UUUP..".......
  0000E400: CE 14 00 00 00 00 00 00 CF 14 00 00 04 00 0C 58  ...............X
  0000E410: 4D 65 64 69 61 4F 62 6A 65 63 74 F1 2A 00 03 12  MediaObject.*...
  0000E420: 05 14 03 00 22 00 00 00 00 00 07 4C 6F 77 50 61  ...."......LowPa
  0000E430: 72 74 F2 F1 05 14 03 00 12 00 00 00 04 00 08 48  rt.............H
  0000E440: 69 67 68 50 61 72 74 F1 2E 00 05 10 02 00 08 00  ighPart.........
  0000E450: D1 14 00 00 00 00 00 00 00 00 00 00 08 00 19 5F  ..............._
  0000E460: 4C 41 52 47 45 5F 49 4E 54 45 47 45 52 3A 3A 5F  LARGE_INTEGER::_
  0000E470: 5F 75 6E 6E 61 6D 65 64 4A 00 03 12 05 14 03 00  _unnamedJ.......
  0000E480: 22 00 00 00 00 00 07 4C 6F 77 50 61 72 74 F2 F1  "......LowPart..
  0000E490: 05 14 03 00 12 00 00 00 04 00 08 48 69 67 68 50  ...........HighP
  0000E4A0: 61 72 74 F1 05 14 03 00 D2 14 00 00 00 00 01 75  art............u
  0000E4B0: 05 14 03 00 13 00 00 00 00 00 08 51 75 61 64 50  ...........QuadP
  0000E4C0: 61 72 74 F1 1E 00 06 10 04 00 00 00 D3 14 00 00  art.............
  0000E4D0: 08 00 0E 5F 4C 41 52 47 45 5F 49 4E 54 45 47 45  ..._LARGE_INTEGE
  0000E4E0: 52 F3 F2 F1 0A 00 02 10 7B 13 00 00 0A 00 00 00  R.......{.......
  0000E4F0: 0A 00 02 10 19 14 00 00 0A 00 00 00 0E 00 03 10  ................
  0000E500: DA 10 00 00 11 00 00 00 10 00 00 F1 0A 00 02 10  ................
  0000E510: C3 13 00 00 0A 00 00 00 0E 01 03 12 05 14 03 00  ................
  0000E520: 40 00 00 00 00 00 03 5F 31 31 F2 F1 05 14 03 00  @......_11......
  0000E530: 40 00 00 00 04 00 03 5F 31 32 F2 F1 05 14 03 00  @......_12......
  0000E540: 40 00 00 00 08 00 03 5F 31 33 F2 F1 05 14 03 00  @......_13......
  0000E550: 40 00 00 00 0C 00 03 5F 31 34 F2 F1 05 14 03 00  @......_14......
  0000E560: 40 00 00 00 10 00 03 5F 32 31 F2 F1 05 14 03 00  @......_21......
  0000E570: 40 00 00 00 14 00 03 5F 32 32 F2 F1 05 14 03 00  @......_22......
  0000E580: 40 00 00 00 18 00 03 5F 32 33 F2 F1 05 14 03 00  @......_23......
  0000E590: 40 00 00 00 1C 00 03 5F 32 34 F2 F1 05 14 03 00  @......_24......
  0000E5A0: 40 00 00 00 20 00 03 5F 33 31 F2 F1 05 14 03 00  @... .._31......
  0000E5B0: 40 00 00 00 24 00 03 5F 33 32 F2 F1 05 14 03 00  @...$.._32......
  0000E5C0: 40 00 00 00 28 00 03 5F 33 33 F2 F1 05 14 03 00  @...(.._33......
  0000E5D0: 40 00 00 00 2C 00 03 5F 33 34 F2 F1 05 14 03 00  @...,.._34......
  0000E5E0: 40 00 00 00 30 00 03 5F 34 31 F2 F1 05 14 03 00  @...0.._41......
  0000E5F0: 40 00 00 00 34 00 03 5F 34 32 F2 F1 05 14 03 00  @...4.._42......
  0000E600: 40 00 00 00 38 00 03 5F 34 33 F2 F1 05 14 03 00  @...8.._43......
  0000E610: 40 00 00 00 3C 00 03 5F 34 34 F2 F1 05 14 03 00  @...<.._44......
  0000E620: 1D 12 00 00 00 00 01 6D 22 00 06 10 11 00 08 00  .......m".......
  0000E630: D9 14 00 00 40 00 15 5F 44 33 44 4D 41 54 52 49  ....@.._D3DMATRI
  0000E640: 58 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 02 01 03 12  X::__unnamed....
  0000E650: 05 14 03 00 40 00 00 00 00 00 03 5F 31 31 F2 F1  ....@......_11..
  0000E660: 05 14 03 00 40 00 00 00 04 00 03 5F 31 32 F2 F1  ....@......_12..
  0000E670: 05 14 03 00 40 00 00 00 08 00 03 5F 31 33 F2 F1  ....@......_13..
  0000E680: 05 14 03 00 40 00 00 00 0C 00 03 5F 31 34 F2 F1  ....@......_14..
  0000E690: 05 14 03 00 40 00 00 00 10 00 03 5F 32 31 F2 F1  ....@......_21..
  0000E6A0: 05 14 03 00 40 00 00 00 14 00 03 5F 32 32 F2 F1  ....@......_22..
  0000E6B0: 05 14 03 00 40 00 00 00 18 00 03 5F 32 33 F2 F1  ....@......_23..
  0000E6C0: 05 14 03 00 40 00 00 00 1C 00 03 5F 32 34 F2 F1  ....@......_24..
  0000E6D0: 05 14 03 00 40 00 00 00 20 00 03 5F 33 31 F2 F1  ....@... .._31..
  0000E6E0: 05 14 03 00 40 00 00 00 24 00 03 5F 33 32 F2 F1  ....@...$.._32..
  0000E6F0: 05 14 03 00 40 00 00 00 28 00 03 5F 33 33 F2 F1  ....@...(.._33..
  0000E700: 05 14 03 00 40 00 00 00 2C 00 03 5F 33 34 F2 F1  ....@...,.._34..
  0000E710: 05 14 03 00 40 00 00 00 30 00 03 5F 34 31 F2 F1  ....@...0.._41..
  0000E720: 05 14 03 00 40 00 00 00 34 00 03 5F 34 32 F2 F1  ....@...4.._42..
  0000E730: 05 14 03 00 40 00 00 00 38 00 03 5F 34 33 F2 F1  ....@...8.._43..
  0000E740: 05 14 03 00 40 00 00 00 3C 00 03 5F 34 34 F2 F1  ....@...<.._44..
  0000E750: 36 00 05 10 10 00 08 00 DB 14 00 00 00 00 00 00  6...............
  0000E760: 00 00 00 00 40 00 20 5F 44 33 44 4D 41 54 52 49  ....@. _D3DMATRI
  0000E770: 58 3A 3A 5F 5F 75 6E 6E 61 6D 65 64 3A 3A 5F 5F  X::__unnamed::__
  0000E780: 75 6E 6E 61 6D 65 64 F1 6E 00 03 12 05 14 03 00  unnamed.n.......
  0000E790: 22 00 00 00 00 00 0B 53 74 72 65 61 6D 49 6E 64  "......StreamInd
  0000E7A0: 65 78 F2 F1 05 14 03 00 22 00 00 00 04 00 06 4F  ex......"......O
  0000E7B0: 66 66 73 65 74 F3 F2 F1 05 14 03 00 22 00 00 00  ffset......."...
  0000E7C0: 08 00 06 46 6F 72 6D 61 74 F3 F2 F1 05 14 03 00  ...Format.......
  0000E7D0: 20 00 00 00 0C 00 08 54 65 73 73 54 79 70 65 F1   ......TessType.
  0000E7E0: 05 14 03 00 20 00 00 00 0D 00 0A 54 65 73 73 53  .... ......TessS
  0000E7F0: 6F 75 72 63 65 F3 F2 F1 2A 00 05 10 05 00 00 00  ource...*.......
  0000E800: DD 14 00 00 00 00 00 00 00 00 00 00 10 00 15 5F  ..............._
  0000E810: 44 33 44 56 45 52 54 45 58 53 48 41 44 45 52 49  D3DVERTEXSHADERI
  0000E820: 4E 50 55 54 2A 00 03 12 05 14 03 00 22 00 00 00  NPUT*......."...
  0000E830: 00 00 07 4C 6F 77 50 61 72 74 F2 F1 05 14 03 00  ...LowPart......
  0000E840: 12 00 00 00 04 00 08 48 69 67 68 50 61 72 74 F1  .......HighPart.
  0000E850: 2E 00 05 10 02 00 08 00 DF 14 00 00 00 00 00 00  ................
  0000E860: 00 00 00 00 08 00 19 5F 4C 41 52 47 45 5F 49 4E  ......._LARGE_IN
  0000E870: 54 45 47 45 52 3A 3A 5F 5F 75 6E 6E 61 6D 65 64  TEGER::__unnamed
  0000E880: 0A 00 02 10 8F 11 00 00 0A 00 00 00 0A 00 02 10  ................
  0000E890: A2 13 00 00 0A 00 00 00 0A 00 02 10 76 13 00 00  ............v...
  0000E8A0: 0A 00 00 00 0E 00 03 10 DA 10 00 00 11 00 00 00  ................
  0000E8B0: 48 01 00 F1 0A 00 02 10 73 13 00 00 0A 00 00 00  H.......s.......
  0000E8C0: 0A 00 02 10 29 14 00 00 0A 00 00 00 0E 00 03 10  ....)...........
  0000E8D0: DA 10 00 00 11 00 00 00 58 00 00 F1 0E 00 03 10  ........X.......
  0000E8E0: 22 00 00 00 11 00 00 00 48 02 00 F1 0A 00 02 10  ".......H.......
  0000E8F0: E7 13 00 00 0A 00 00 00 0A 00 02 10 7D 13 00 00  ............}...
  0000E900: 0A 00 00 00 1A 00 03 12 03 04 03 00 14 00 11 4D  ...............M
  0000E910: 41 58 5F 46 56 46 5F 44 45 43 4C 5F 53 49 5A 45  AX_FVF_DECL_SIZE
  0000E920: 22 00 07 10 01 00 00 00 74 00 00 00 EB 14 00 00  ".......t.......
  0000E930: 12 5F 4D 41 58 5F 46 56 46 5F 44 45 43 4C 5F 53  ._MAX_FVF_DECL_S
  0000E940: 49 5A 45 F1 9A 01 03 12 03 04 03 00 00 00 0F 44  IZE............D
  0000E950: 33 44 53 42 44 5F 54 45 58 54 55 52 45 53 F2 F1  3DSBD_TEXTURES..
  0000E960: 03 04 03 00 04 00 12 44 33 44 53 42 44 5F 50 49  .......D3DSBD_PI
  0000E970: 58 45 4C 53 48 41 44 45 52 F3 F2 F1 03 04 03 00  XELSHADER.......
  0000E980: 05 00 13 44 33 44 53 42 44 5F 56 45 52 54 45 58  ...D3DSBD_VERTEX
  0000E990: 53 48 41 44 45 52 F2 F1 03 04 03 00 06 00 0E 44  SHADER.........D
  0000E9A0: 33 44 53 42 44 5F 49 4E 44 49 43 45 53 F3 F2 F1  3DSBD_INDICES...
  0000E9B0: 03 04 03 00 07 00 0E 44 33 44 53 42 44 5F 53 54  .......D3DSBD_ST
  0000E9C0: 52 45 41 4D 53 F3 F2 F1 03 04 03 00 17 00 1B 44  REAMS..........D
  0000E9D0: 33 44 53 42 44 5F 50 49 58 45 4C 53 48 41 44 45  3DSBD_PIXELSHADE
  0000E9E0: 52 43 4F 4E 53 54 41 4E 54 53 F2 F1 03 04 03 00  RCONSTANTS......
  0000E9F0: 27 00 1C 44 33 44 53 42 44 5F 56 45 52 54 45 58  '..D3DSBD_VERTEX
  0000EA00: 53 48 41 44 45 52 43 4F 4E 53 54 41 4E 54 53 F1  SHADERCONSTANTS.
  0000EA10: 03 04 03 00 E7 00 13 44 33 44 53 42 44 5F 52 45  .......D3DSBD_RE
  0000EA20: 4E 44 45 52 53 54 41 54 45 53 F2 F1 03 04 03 00  NDERSTATES......
  0000EA30: 79 01 14 44 33 44 53 42 44 5F 54 45 58 54 55 52  y..D3DSBD_TEXTUR
  0000EA40: 45 53 54 41 54 45 53 F1 03 04 03 00 F9 01 11 44  ESTATES........D
  0000EA50: 33 44 53 42 44 5F 54 52 41 4E 53 46 4F 52 4D 53  3DSBD_TRANSFORMS
  0000EA60: 03 04 03 00 03 02 0F 44 33 44 53 42 44 5F 56 49  .......D3DSBD_VI
  0000EA70: 45 57 50 4F 52 54 F2 F1 03 04 03 00 04 02 0F 44  EWPORT.........D
  0000EA80: 33 44 53 42 44 5F 4D 41 54 45 52 49 41 4C F2 F1  3DSBD_MATERIAL..
  0000EA90: 03 04 03 00 05 02 13 44 33 44 53 42 44 5F 42 41  .......D3DSBD_BA
  0000EAA0: 43 4B 4D 41 54 45 52 49 41 4C F2 F1 03 04 03 00  CKMATERIAL......
  0000EAB0: 06 02 0A 44 33 44 53 42 44 5F 4D 41 58 F3 F2 F1  ...D3DSBD_MAX...
  0000EAC0: 03 04 03 00 04 80 FF FF FF 7F 12 44 33 44 53 42  ...........D3DSB
  0000EAD0: 44 5F 46 4F 52 43 45 5F 44 57 4F 52 44 F3 F2 F1  D_FORCE_DWORD...
  0000EAE0: 2A 00 07 10 0F 00 00 00 74 00 00 00 ED 14 00 00  *.......t.......
  0000EAF0: 18 5F 44 33 44 53 54 41 54 45 42 4C 4F 43 4B 44  ._D3DSTATEBLOCKD
  0000EB00: 49 52 54 59 49 4E 44 45 58 F3 F2 F1 0A 00 02 10  IRTYINDEX.......
  0000EB10: FA 13 00 00 0A 00 00 00 0A 00 02 10 8B 13 00 00  ................
  0000EB20: 0A 00 00 00 0A 00 02 10 C8 13 00 00 0A 00 00 00  ................
  0000EB30: EE 01 03 12 03 04 03 00 00 00 10 50 53 5F 52 45  ...........PS_RE
  0000EB40: 47 49 53 54 45 52 5F 5A 45 52 4F F1 03 04 03 00  GISTER_ZERO.....
  0000EB50: 00 00 13 50 53 5F 52 45 47 49 53 54 45 52 5F 44  ...PS_REGISTER_D
  0000EB60: 49 53 43 41 52 44 F2 F1 03 04 03 00 01 00 0E 50  ISCARD.........P
  0000EB70: 53 5F 52 45 47 49 53 54 45 52 5F 43 30 F3 F2 F1  S_REGISTER_C0...
  0000EB80: 03 04 03 00 02 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EB90: 45 52 5F 43 31 F3 F2 F1 03 04 03 00 03 00 0F 50  ER_C1..........P
  0000EBA0: 53 5F 52 45 47 49 53 54 45 52 5F 46 4F 47 F2 F1  S_REGISTER_FOG..
  0000EBB0: 03 04 03 00 04 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EBC0: 45 52 5F 56 30 F3 F2 F1 03 04 03 00 05 00 0E 50  ER_V0..........P
  0000EBD0: 53 5F 52 45 47 49 53 54 45 52 5F 56 31 F3 F2 F1  S_REGISTER_V1...
  0000EBE0: 03 04 03 00 08 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EBF0: 45 52 5F 54 30 F3 F2 F1 03 04 03 00 09 00 0E 50  ER_T0..........P
  0000EC00: 53 5F 52 45 47 49 53 54 45 52 5F 54 31 F3 F2 F1  S_REGISTER_T1...
  0000EC10: 03 04 03 00 0A 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EC20: 45 52 5F 54 32 F3 F2 F1 03 04 03 00 0B 00 0E 50  ER_T2..........P
  0000EC30: 53 5F 52 45 47 49 53 54 45 52 5F 54 33 F3 F2 F1  S_REGISTER_T3...
  0000EC40: 03 04 03 00 0C 00 0E 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EC50: 45 52 5F 52 30 F3 F2 F1 03 04 03 00 0D 00 0E 50  ER_R0..........P
  0000EC60: 53 5F 52 45 47 49 53 54 45 52 5F 52 31 F3 F2 F1  S_REGISTER_R1...
  0000EC70: 03 04 03 00 0E 00 14 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000EC80: 45 52 5F 56 31 52 30 5F 53 55 4D F1 03 04 03 00  ER_V1R0_SUM.....
  0000EC90: 0F 00 13 50 53 5F 52 45 47 49 53 54 45 52 5F 45  ...PS_REGISTER_E
  0000ECA0: 46 5F 50 52 4F 44 F2 F1 03 04 03 00 20 00 0F 50  F_PROD...... ..P
  0000ECB0: 53 5F 52 45 47 49 53 54 45 52 5F 4F 4E 45 F2 F1  S_REGISTER_ONE..
  0000ECC0: 03 04 03 00 40 00 18 50 53 5F 52 45 47 49 53 54  ....@..PS_REGIST
  0000ECD0: 45 52 5F 4E 45 47 41 54 49 56 45 5F 4F 4E 45 F1  ER_NEGATIVE_ONE.
  0000ECE0: 03 04 03 00 A0 00 14 50 53 5F 52 45 47 49 53 54  .......PS_REGIST
  0000ECF0: 45 52 5F 4F 4E 45 5F 48 41 4C 46 F1 03 04 03 00  ER_ONE_HALF.....
  0000ED00: 80 00 1D 50 53 5F 52 45 47 49 53 54 45 52 5F 4E  ...PS_REGISTER_N
  0000ED10: 45 47 41 54 49 56 45 5F 4F 4E 45 5F 48 41 4C 46  EGATIVE_ONE_HALF
  0000ED20: 1A 00 07 10 13 00 00 00 74 00 00 00 F2 14 00 00  ........t.......
  0000ED30: 0B 50 53 5F 52 45 47 49 53 54 45 52              .PS_REGISTER

SECTION HEADER #A
.debug$S name
       0 physical address
       0 virtual address
      28 size of raw data
   10CA7 file pointer to raw data (00010CA7 to 00010CCE)
   10CCF file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #A
  00000000: 26 00 08 10 99 14 00 00 00 00 00 00 00 00 19 44  &..............D
  00000010: 33 44 50 52 49 4D 49 54 49 56 45 54 4F 56 45 52  3DPRIMITIVETOVER
  00000020: 54 45 58 43 4F 55 4E 54                          TEXCOUNT

RELOCATIONS #A
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        15  _D3DPRIMITIVETOVERTEXCOUNT
 0000000C  SECTION                        0000        15  _D3DPRIMITIVETOVERTEXCOUNT

SECTION HEADER #B
.debug$S name
       0 physical address
       0 virtual address
      29 size of raw data
   10CE3 file pointer to raw data (00010CE3 to 00010D0B)
   10D0C file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #B
  00000000: 27 00 08 10 E4 14 00 00 00 00 00 00 00 00 1A 44  '..............D
  00000010: 33 44 53 49 4D 50 4C 45 52 45 4E 44 45 52 53 54  3DSIMPLERENDERST
  00000020: 41 54 45 45 4E 43 4F 44 45                       ATEENCODE

RELOCATIONS #B
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        12  _D3DSIMPLERENDERSTATEENCODE
 0000000C  SECTION                        0000        12  _D3DSIMPLERENDERSTATEENCODE

SECTION HEADER #C
.debug$S name
       0 physical address
       0 virtual address
      25 size of raw data
   10D20 file pointer to raw data (00010D20 to 00010D44)
   10D45 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #C
  00000000: 23 00 08 10 D7 14 00 00 00 00 00 00 00 00 16 44  #..............D
  00000010: 33 44 54 45 58 54 55 52 45 44 49 52 45 43 54 45  3DTEXTUREDIRECTE
  00000020: 4E 43 4F 44 45                                   NCODE

RELOCATIONS #C
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         F  _D3DTEXTUREDIRECTENCODE
 0000000C  SECTION                        0000         F  _D3DTEXTUREDIRECTENCODE

SECTION HEADER #D
.debug$S name
       0 physical address
       0 virtual address
      26 size of raw data
   10D59 file pointer to raw data (00010D59 to 00010D7E)
   10D7F file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #D
  00000000: 24 00 08 10 BB 14 00 00 00 00 00 00 00 00 17 44  $..............D
  00000010: 33 44 44 49 52 54 59 46 52 4F 4D 52 45 4E 44 45  3DDIRTYFROMRENDE
  00000020: 52 53 54 41 54 45                                RSTATE

RELOCATIONS #D
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         C  _D3DDIRTYFROMRENDERSTATE
 0000000C  SECTION                        0000         C  _D3DDIRTYFROMRENDERSTATE

SECTION HEADER #E
.debug$S name
       0 physical address
       0 virtual address
      27 size of raw data
   10D93 file pointer to raw data (00010D93 to 00010DB9)
   10DBA file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #E
  00000000: 25 00 08 10 E7 14 00 00 00 00 00 00 00 00 18 44  %..............D
  00000010: 33 44 44 49 52 54 59 46 52 4F 4D 54 45 58 54 55  3DDIRTYFROMTEXTU
  00000020: 52 45 53 54 41 54 45                             RESTATE

RELOCATIONS #E
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000         9  _D3DDIRTYFROMTEXTURESTATE
 0000000C  SECTION                        0000         9  _D3DDIRTYFROMTEXTURESTATE

SECTION HEADER #F
.debug$S name
       0 physical address
       0 virtual address
      23 size of raw data
   10DCE file pointer to raw data (00010DCE to 00010DF0)
   10DF1 file pointer to relocation table
       0 file pointer to line numbers
       2 number of relocations
       0 number of line numbers
42101040 flags
         Initialized Data
         COMDAT (no symbol)
         Discardable
         1 byte align
         Read Only

RAW DATA #F
  00000000: 21 00 08 10 BF 14 00 00 00 00 00 00 00 00 14 58  !..............X
  00000010: 47 72 61 70 68 69 63 73 42 75 69 6C 64 4E 75 6D  GraphicsBuildNum
  00000020: 62 65 72                                         ber

RELOCATIONS #F
                                                Symbol    Symbol
 Offset    Type              Applied To         Index     Name
 --------  ----------------  -----------------  --------  ------
 00000008  SECREL                     00000000        18  _XGraphicsBuildNumber
 0000000C  SECTION                        0000        18  _XGraphicsBuildNumber

COFF SYMBOL TABLE
000 00000000 DEBUG  notype       Filename     | .file
    ..\debug.cpp
002 001D2426 ABS    notype       Static       | @comp.id
003 00000000 SECT1  notype       Static       | .drectve
    Section length   5E, #relocs    0, #linenums    0, checksum        0
005 00000000 SECT2  notype       Static       | .debug$S
    Section length 19FD, #relocs    0, #linenums    0, checksum        0
007 00000000 SECT3  notype       Static       | XGRPH_RD
    Section length   58, #relocs    0, #linenums    0, checksum C5165846, selection    2 (pick any)
009 00000000 SECT3  notype       External     | _D3DDIRTYFROMTEXTURESTATE
00A 00000000 SECT4  notype       Static       | XGRPH_RD
    Section length   8C, #relocs    0, #linenums    0, checksum C94CCAFD, selection    2 (pick any)
00C 00000000 SECT4  notype       External     | _D3DDIRTYFROMRENDERSTATE
00D 00000000 SECT5  notype       Static       | XGRPH_RD
    Section length   10, #relocs    0, #linenums    0, checksum 73FA7410, selection    2 (pick any)
00F 00000000 SECT5  notype       External     | _D3DTEXTUREDIRECTENCODE
010 00000000 SECT6  notype       Static       | XGRPH_RD
    Section length  148, #relocs    0, #linenums    0, checksum 2ED435D5, selection    2 (pick any)
012 00000000 SECT6  notype       External     | _D3DSIMPLERENDERSTATEENCODE
013 00000000 SECT7  notype       Static       | XGRPH_RD
    Section length   58, #relocs    0, #linenums    0, checksum 42D5A7C7, selection    2 (pick any)
015 00000000 SECT7  notype       External     | _D3DPRIMITIVETOVERTEXCOUNT
016 00000000 SECT8  notype       Static       | .XBLD$V
    Section length   10, #relocs    0, #linenums    0, checksum 27113BFE, selection    2 (pick any)
018 00000000 SECT8  notype       External     | _XGraphicsBuildNumber
019 00000000 SECT9  notype       Static       | .debug$T
    Section length ED3C, #relocs    0, #linenums    0, checksum        0
01B 00000000 SECTA  notype       Static       | .debug$S
    Section length   28, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x7)
01D 00000000 SECTB  notype       Static       | .debug$S
    Section length   29, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x6)
01F 00000000 SECTC  notype       Static       | .debug$S
    Section length   25, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x5)
021 00000000 SECTD  notype       Static       | .debug$S
    Section length   26, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x4)
023 00000000 SECTE  notype       Static       | .debug$S
    Section length   27, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x3)
025 00000000 SECTF  notype       Static       | .debug$S
    Section length   23, #relocs    2, #linenums    0, checksum        0, selection    5 (pick associative Section 0x8)

String Table Size = 0x9C bytes

  Summary

          30 .XBLD$V
         1B0 .debug$F
        7F52 .debug$S
       3BB70 .debug$T
         11A .drectve
         2FB .rdata
         2B9 .text
         6C6 XGRPH
         823 XGRPH_RD
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\xact\host\filegen\test.ini ===
[MAIN]
CUE_ENTRY_COUNT=1
SOUND_ENTRY_COUNT=1

[CUE0]
SOUND_INDEX=0
NAME=CUE0

[CUE1]
SOUND_INDEX=1
NAME=CUE1

[SOUND0]
FLAG_3D=1
LAYER=0
GROUP=0
TRACK_COUNT=1
WAVEBANK_COUNT=1

[SOUND1]
FLAG_3D=1
LAYER=0
GROUP=0
TRACK_COUNT=3
WAVEBANK_COUNT=2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Sound 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[SOUND0_WAVEBANK_TABLE]
WAVEBANK0=wavebank

[SOUND0_TRACK0]
EVENT_COUNT=9


[SOUND0_TRACK0_EVENT0]
TYPE=PLAY
WAVEBANK=wavebank
WAVE_INDEX=2
TIMESTAMP=0

[SOUND0_TRACK0_EVENT1]
TYPE=SETFREQUENCY
VALUE=11000
TIMESTAMP=20000

[SOUND0_TRACK0_EVENT2]
TYPE=SETVOLUME
TIMESTAMP=41000
VALUE=-600

[SOUND0_TRACK0_EVENT3]
TYPE=SETHEADROOM
TIMESTAMP=62000
VALUE=3

[SOUND0_TRACK0_EVENT4]
TYPE=SETLFO
TIMESTAMP=83000
VALUE=300

[SOUND0_TRACK0_EVENT5]
TYPE=SETEG
TIMESTAMP=114000

[SOUND0_TRACK0_EVENT6]
TYPE=SETFILTER
TIMESTAMP=151000

[SOUND0_TRACK0_EVENT7]
TYPE=SETEFFECTDATA
TIMESTAMP=186000

[SOUND0_TRACK0_EVENT8]
TYPE=STOP
TIMESTAMP=217000


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Sound 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[SOUND1_WAVEBANK_TABLE]
WAVEBANK0=wavebank
WAVEBANK1=wavebank1

[SOUND1_TRACK0]
EVENT_COUNT=1

[SOUND1_TRACK1]
EVENT_COUNT=2

[SOUND1_TRACK2]
EVENT_COUNT=3

[SOUND1_TRACK0_EVENT0]
TYPE=PLAY
WAVEBANK=wavebank
WAVE_INDEX=0
TIMESTAMP=40000

[SOUND1_TRACK1_EVENT0]
TYPE=PLAY
WAVEBANK=wavebank1
WAVE_INDEX=1
TIMESTAMP=20000

[SOUND1_TRACK1_EVENT1]
TYPE=PLAY
WAVEBANK=wavebank
WAVE_INDEX=2
TIMESTAMP=24000

[SOUND1_TRACK2_EVENT0]
TYPE=PLAY
WAVEBANK=wavebank1
WAVE_INDEX=1
TIMESTAMP=10000

[SOUND1_TRACK2_EVENT1]
TYPE=PLAY
WAVEBANK=wavebank1
WAVE_INDEX=0
TIMESTAMP=34000

[SOUND1_TRACK2_EVENT2]
TYPE=PLAY
WAVEBANK=wavebank1
WAVE_INDEX=2
TIMESTAMP=40000
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\windows\directx\xact\host\filegen\ReadMe.txt ===
========================================================================
       CONSOLE APPLICATION : filegen
========================================================================


AppWizard has created this filegen application for you.  

This file contains a summary of what you will find in each of the files that
make up your filegen application.

filegen.dsp
    This file (the project file) contains information at the project level and
    is used to build a single project or subproject. Other users can share the
    project (.dsp) file, but they should export the makefiles locally.

filegen.cpp
    This is the main application source file.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named filegen.pch and a precompiled types file named StdAfx.obj.


/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xbetools\installer\readme.txt ===
This tool is designed to help you create installable demos discs. To create an installable
demo CD, you need to place the files in this package as described below. Note: the CD-R or
DVD-R that you create must be in UDF format. The Xbox does not the support CDFS file system,
so CDFS CD's will not boot.

To create an install, place the default.xbe file in the root of a UDF cd image. Make sure
it is named "default.xbe". Place the media folder in the root directory as well.

Place all of your files and directories under a folder named "Files", that lives in the root
of the CD. Every file or folder in Files\<file> will be placed in on the Xbox hard drive at
E:\<file>. Consider the sample CD layout below:

CD IMAGE
========
default.xbe		(from this demo installer zip file)
\Media
	resource.xpr	(from this demo installer zip file)
	font.xpr	(from this demo installer zip file)

\Files			(everything below here is your files)
	\Samples
		\Explosion
			Explosion.xbe
			\Media
				resource.xpr
				font.xpr

Files added after installing on the Xbox hard drive
===================================================
XE:\
	\Samples
		\Explosion
			Explosion.xbe
			\Media
				resource.xpr
				font.xpr

You can run the demo installer multiple times and it will copy over existing files and
directories (allowing you to upgrade build over build).

Notes:
	- all files are copied without file attributes (that means no file will be
	  read-only, hidden, or system)

	- if an existing file is found at the install point, it is overwritten

	- if you don't have enough disk space for a clean install, you will be prompted
	  and warned but you can still install (thus allowing build-over-build upgrades)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Help\cafehlp.rtf ===
{\rtf1\ansi \deff0\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn{\*\falt Times New Roman};}{\f2\fswiss\fcharset0\fprq2 Helv{\*\falt Helvetica};}{\f8\froman\fcharset0\fprq2 Times;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar \fs20 \snext0 Normal;}{\s1\sb240\nowidctlpar \b\f2\ul \sbasedon0\snext0 heading 1;}{\s2\sb120\nowidctlpar \b\f2 \sbasedon0\snext0 heading 2;}{\s3\li360\nowidctlpar \b \sbasedon0\snext17 heading 3;}{\s4\li360\nowidctlpar \ul \sbasedon0\snext17 heading 4;}{\s5\li720\nowidctlpar \b\fs20 \sbasedon0\snext17 heading 5;}{\s6\li720\nowidctlpar \fs20\ul \sbasedon0\snext17 heading 6;}{\s7\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 7;}{\s8\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 8;}{\s9\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive\f0\fs16\up6\lang1033 \sbasedon10 footnote reference;}{\s16\nowidctlpar \fs20 \sbasedon0\snext16 footnote text;}{\s17\li720\nowidctlpar \fs20 \sbasedon0\snext17 Normal Indent;}{\s18\fi-240\li480\sb80\nowidctlpar\tx480 \f9 \sbasedon0\snext18 nscba;}{\s19\fi-240\li240\sa20\nowidctlpar \f9 \sbasedon0\snext19 j;}{\s20\li480\sa20\nowidctlpar \f9 \sbasedon0\snext20 ij;}{\s21\sb80\sa20\nowidctlpar \f9 \sbasedon0\snext21 btb;}{\s22\fi-240\li2400\sb20\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext22 ctcb;}{\s23\fi-240\li480\sa40\nowidctlpar\tx480 \f9 \sbasedon0\snext23 ns;}{\s24\sa120\nowidctlpar \f9\fs28 \sbasedon0\snext24 TT;}{\s25\fi-240\li2400\sa20\nowidctlpar \f9 \sbasedon0\snext25 crtj;}{\s26\fi-240\li480\nowidctlpar\tx480 \f9 \sbasedon0\snext26 nsca;}{\s27\sa20\nowidctlpar \f9 \sbasedon0\snext27 bt;}{\s28\li240\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext28 Hf;}{\s29\li240\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext29 Hs;}{\s30\li480\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext30 RT;}{\s31\fi-2160\li2160\sb240\sa80\nowidctlpar\tx2160 \f9 \sbasedon0\snext31 c;}{\s32\li2160\sa20\nowidctlpar \f9 \sbasedon0\snext32 ct;}{\s33\li240\sa20\nowidctlpar \f9 \sbasedon0\snext33 it;}{\s34\li480\nowidctlpar \f9\fs20 \sbasedon0\snext34 nsct;}{\s35\fi-160\li400\sb80\sa40\nowidctlpar \f9 \sbasedon0\snext35 nscb;}{\s36\fi-2640\li2880\sb120\sa40\nowidctlpar\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f9 \sbasedon0\snext36 HC2;}{\s37\fi-2640\li2880\sb120\sa20\nowidctlpar\tx2880 \f9 \sbasedon0\snext37 C2;}{\s38\fi-240\li2400\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext38 ctc;}{\s39\li2160\sb160\nowidctlpar \f9 \sbasedon0\snext39 crt;}{\s40\li480\sb20\sa40\nowidctlpar \f9 \sbasedon0\snext40 or;}{\s41\fi-259\li360\sb40\sa40\nowidctlpar\tx360 \f7\fs20 \sbasedon0\snext41 Ln1;}{\s42\li115\sb80\sa80\nowidctlpar \f7\fs20 \sbasedon0\snext0 *Intro;}{\s43\li115\sb80\sa80\keepn\nowidctlpar \b\f7 \sbasedon3\snext42 *Title;}{\s44\fi-245\li360\sb80\nowidctlpar \f7\fs20 \snext44 *Jl;}{\s45\li360\sb40\sa40\nowidctlpar \f7\fs20 \snext0 Lp1;}{\s46\fi-1800\li1915\sb60\sl-240\slmult0\nowidctlpar\tx1915 \f7\fs20 \sbasedon0\snext46 Tph;}{\s47\li115\sb120\sa80\nowidctlpar \b\f7\fs20 \snext41 Proch;}{\*\cs48 \additive\super \sbasedon10 endnote reference;}}{\info{\title AFXCORE}{\subject MFC Core RTF Help}{\author AFX}{\creatim\yr1992\mo10\dy7\hr11\min4}{\version1}{\edmins12}{\nofpages0}{\nofwords0}{\nofchars0}{\vern49221}}\widowctrl\ftnbj\aenddoc\makebackup\hyphcaps0 \fet0\sectd \linex576\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \sl240\slmult0\widctlpar \fs20  {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COClipboard_Empty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COClipboard; Empty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COClipboard::Empty}}{\f8\fs22  } {\f8\fs32 BOOL COClipboard::Empty(void)} {\f8\fs22 \par \par Clear the text on the system clipboard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coclip.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COClipboard_GetText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COClipboard; GetText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COClipboard::GetText}}{\f8\fs22  } {\f8\fs32 CString COClipboard::GetText(void)} {\f8\fs22 \par \par Get the text from the system clipboard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the text from the system clipboard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coclip.cpp, 54\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COClipboard_SetText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COClipboard; SetText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COClipboard::SetText}}{\f8\fs22  } {\f8\fs32 BOOL COClipboard::SetText(LPCSTR szTextIn)} {\f8\fs22 \par \par Set the text in the system clipboard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szTextIn} {\f8\fs22 : A pointer to a string containing the text to put in the clipboard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coclip.cpp, 91\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_Enable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; Enable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::Enable}}{\f8\fs22  } {\f8\fs32 BOOL CIME::Enable(BOOL bEnable /*=TRUE*/)} {\f8\fs22 \par \par Enable or disable the IME for input. The IME must be open to call this function (see CIME::Open).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bEnable} {\f8\fs22 : A Boolean value that specifies whether the enable the IME (TRUE) or disable it. (Default value is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 125\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_IsEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; IsEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::IsEnabled}}{\f8\fs22  } {\f8\fs32 BOOL CIME::IsEnabled(void)} {\f8\fs22 \par \par Determine if the IME is enabled.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the IME is enabled (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 154\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_Open} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; Open}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::Open}}{\f8\fs22  } {\f8\fs32 BOOL CIME::Open(BOOL bOpen /*=TRUE*/)} {\f8\fs22 \par \par Open or close the IME. The IME must be open before calling any other IME functions.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bOpen} {\f8\fs22 : A Boolean value that specifies whether to open the IME (TRUE) or close it. (Default value is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 177\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_IsOpen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; IsOpen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::IsOpen}}{\f8\fs22  } {\f8\fs32 int CIME::IsOpen(void)} {\f8\fs22 \par \par Determine if the IME is open.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. 0 if the IME's not open; -1 if the IME is open with no partial string entry; a positive value of the count of characters entered if the IME is open with a partial string entry.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 221\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_Flush} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; Flush}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::Flush}}{\f8\fs22  } {\f8\fs32 void CIME::Flush(HWND hwnd)} {\f8\fs22 \par \par Flush any remaining keystrokes to the IME. The IME must be open to call this function (see CIME::Open).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : The HWND of the window using the IME. This parameter is NYI.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 250\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_GetMode} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; GetMode}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::GetMode}}{\f8\fs22  } {\f8\fs32 UINT CIME::GetMode(void)} {\f8\fs22 \par \par Get the current mode of the IME. This value is the combination the current mode of each setting in the IME.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An unsigned integer that contains the current mode of the IME.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 272\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_SetMode} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; SetMode}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::SetMode}}{\f8\fs22  } {\f8\fs32 UINT CIME::SetMode(UINT flags)} {\f8\fs22 \par \par Set the mode of the IME by value. (See CIME::SetMode(EAlphabets, UINT, BOOL, BOOL) to set by enumeration.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An unsigned integer that contains the mode actually set in the IME.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 flags} {\f8\fs22 : An unsigned integer that specifies the mode to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 295\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_SetMode} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; SetMode}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::SetMode}}{\f8\fs22  } {\f8\fs32 UINT CIME::SetMode(EAlphabets eAlphabet /*=ALPHA*/, UINT nBytes /*=1*/, BOOL bRoman /*=TRUE*/, BOOL bCodeInput /*=FALSE*/)} {\f8\fs22 \par \par Set the mode of the IME by enumeration. (See CIME::SetMode(UINT) to set by value.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An unsigned integer that contains the mode actually set in the IME.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 eAlphabet} {\f8\fs22 : An EAlphabets value that specifies the type of alphabet to set in the IME: DONTCARE, ALPHA, KATAKANA, HIRAGANA. (Default value is ALPHA.)\par \par } {\i\f8\fs22 nBytes} {\f8\fs22 : An integer that specifies the number of bytes: SBCS (1) or DBCS (2). (Default value is 1.)\par \par } {\i\f8\fs22 bRoman} {\f8\fs22 : A Boolean value that specifies whether to set the IME to Roman mode (TRUE) or NoRoman mode. NoRoman mode has not been found to be useful. (Default value is TRUE.)\par \par } {\i\f8\fs22 bCodeInput} {\f8\fs22 : A Boolean value that specifies whether to set the IME to code input mode (TRUE) or no code input mode. Code input mode has not been found to be useful. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 335\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CIME_SendVKey} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CIME; SendVKey}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CIME::SendVKey}}{\f8\fs22  } {\f8\fs32 BOOL CIME::SendVKey(UINT vKey)} {\f8\fs22 \par \par Send the IME a virtual keystroke.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 vKey} {\f8\fs22 : An integer that specifies the virtual key to send to the IME.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 imewrap.cpp, 474\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WGetFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WGetFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WGetFocus}}{\f8\fs22  } {\f8\fs32 HWND CMSTest::WGetFocus(void)} {\f8\fs22 \par \par A wrapper for the MS-Test function WGetFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An HWND.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 90\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WStaticSetClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WStaticSetClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WStaticSetClass}}{\f8\fs22  } {\f8\fs32 void CMSTest::WStaticSetClass(LPSTR lpszClassName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WStaticSetClass. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpszClassName} {\f8\fs22 : A pointer to a string that contains the static window class name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 102\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WIsVisible} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WIsVisible}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WIsVisible}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WIsVisible(HWND hwnd)} {\f8\fs22 \par \par A wrapper for the MS-Test function WIsVisible. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 113\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WGetText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WGetText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WGetText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WGetText(HWND hwnd, CString& strBuffer)} {\f8\fs22 \par \par A wrapper for the MS-Test function WGetText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the window.\par \par } {\i\f8\fs22 strBuffer} {\f8\fs22 : A reference to a CString that will contain the text of the specified window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 125\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WFndWndWait} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WFndWndWait}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WFndWndWait}}{\f8\fs22  } {\f8\fs32 HWND CMSTest::WFndWndWait(LPCSTR lpcszCaption, UINT uFlags, UINT uSeconds)} {\f8\fs22 \par \par A wrapper for the MS-Test function WFndWndWait. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An HWND of the window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszCaption} {\f8\fs22 : A pointer to a string that contains the caption of the window.\par \par } {\i\f8\fs22 uFlags} {\f8\fs22 : A bitfield that specifies the type of window.\par \par } {\i\f8\fs22 uSeconds} {\f8\fs22 : An integer that specifies the number of seconds to wait for the window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 147\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WFndWndWaitC} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WFndWndWaitC}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WFndWndWaitC}}{\f8\fs22  } {\f8\fs32 HWND CMSTest::WFndWndWaitC(LPCSTR lpcszCaption, LPCSTR lpcszClass, UINT uFlags, UINT uSeconds)} {\f8\fs22 \par \par A wrapper for the MS-Test function WFndWndWaitC. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An HWND of the window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszCaption} {\f8\fs22 : A pointer to a string that contains the caption of the window.\par \par } {\i\f8\fs22 lpcszClass} {\f8\fs22 : A pointer to a string that contains the name of the window class of the window.\par \par } {\i\f8\fs22 uFlags} {\f8\fs22 : A bitfield that specifies the type of window.\par \par } {\i\f8\fs22 uSeconds} {\f8\fs22 : An integer that specifies the number of seconds to wait for the window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 159\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WFndWnd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WFndWnd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WFndWnd}}{\f8\fs22  } {\f8\fs32 HWND CMSTest::WFndWnd(LPCSTR lpcszCaption, UINT uFlags)} {\f8\fs22 \par \par A wrapper for the MS-Test function WFndWnd. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An HWND of the window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszCaption} {\f8\fs22 : A pointer to a string that contains the caption of the window.\par \par } {\i\f8\fs22 uFlags} {\f8\fs22 : A bitfield that specifies the type of window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 169\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WFndWndC} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WFndWndC}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WFndWndC}}{\f8\fs22  } {\f8\fs32 HWND CMSTest::WFndWndC(LPCSTR lpcszCaption, LPCSTR lpcszClass, UINT uFlags)} {\f8\fs22 \par \par A wrapper for the MS-Test function WFndWndC. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An HWND of the window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszCaption} {\f8\fs22 : A pointer to a string that contains the caption of the window.\par \par } {\i\f8\fs22 lpcszClass} {\f8\fs22 : A pointer to a string that contains the name of the window class of the window.\par \par } {\i\f8\fs22 uFlags} {\f8\fs22 : A bitfield that specifies the type of window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 180\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WSetWndSiz} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WSetWndSiz}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WSetWndSiz}}{\f8\fs22  } {\f8\fs32 void CMSTest::WSetWndSiz(HWND hwnd, int w,  int h)} {\f8\fs22 \par \par A wrapper for the MS-Test function WSetWndSiz. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : The HWND of the window.\par \par } {\i\f8\fs22 w} {\f8\fs22 : An integer that contains the width to set.\par \par } {\i\f8\fs22 h} {\f8\fs22 : An integer that contains the height to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 197\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WGetWndSiz} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WGetWndSiz}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WGetWndSiz}}{\f8\fs22  } {\f8\fs32 CSize CMSTest::WGetWndSiz(HWND hwnd)} {\f8\fs22 \par \par A wrapper for the MS-Test function WGetWndSiz. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CSize object that contains the size of the window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : The HWND of the window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 212\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WSetActWnd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WSetActWnd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WSetActWnd}}{\f8\fs22  } {\f8\fs32 void CMSTest::WSetActWnd(HWND hwnd)} {\f8\fs22 \par \par A wrapper for the MS-Test function WSetActWnd. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : The HWND of the window to make active.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 222\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WGetActWnd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WGetActWnd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WGetActWnd}}{\f8\fs22  } {\f8\fs32 HWND CMSTest::WGetActWnd(HWND hwnd)} {\f8\fs22 \par \par A wrapper for the MS-Test function WGetActWnd. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the active window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : The HWND of the window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 231\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WMenu} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WMenu}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WMenu}}{\f8\fs22  } {\f8\fs32 void CMSTest::WMenu(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WMenu. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the menu name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 247\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WMenuExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WMenuExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WMenuExists}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WMenuExists(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WMenuExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the menu exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the menu name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 258\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WMenuGrayed} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WMenuGrayed}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WMenuGrayed}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WMenuGrayed(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WMenuGrayed. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the menu is grayed.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the menu name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 267\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WMenuChecked} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WMenuChecked}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WMenuChecked}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WMenuChecked(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WMenuChecked. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the menu is checked.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the menu name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 276\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WMenuEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WMenuEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WMenuEnabled}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WMenuEnabled(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WMenuEnabled. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the menu is enabled.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the menu name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 285\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WMenuCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WMenuCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WMenuCount}}{\f8\fs22  } {\f8\fs32 int CMSTest::WMenuCount(void)} {\f8\fs22 \par \par A wrapper for the MS-Test function WMenuCount. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that specifies the number of items in the menu.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 293\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WMenuText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WMenuText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WMenuText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WMenuText(LPCSTR lpcszName, CString& strBuffer)} {\f8\fs22 \par \par A wrapper for the MS-Test function WMenuText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the menu name.\par \par } {\i\f8\fs22 strBuffer} {\f8\fs22 : A CString reference that will contain the name of the menu.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 303\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WMenuEnd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WMenuEnd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WMenuEnd}}{\f8\fs22  } {\f8\fs32 void CMSTest::WMenuEnd(void)} {\f8\fs22 \par \par A wrapper for the MS-Test function WMenuEnd. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 316\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WButtonExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WButtonExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WButtonExists}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WButtonExists(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WButtonExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the button exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 346\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WButtonEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WButtonEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WButtonEnabled}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WButtonEnabled(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WButtonEnabled. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the button is enabled.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 355\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WButtonFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WButtonFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WButtonFocus}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WButtonFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WButtonFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the button has focus.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 364\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WButtonClick} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WButtonClick}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WButtonClick}}{\f8\fs22  } {\f8\fs32 void CMSTest::WButtonClick(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WButtonClick. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 373\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WButtonSetFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WButtonSetFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WButtonSetFocus}}{\f8\fs22  } {\f8\fs32 void CMSTest::WButtonSetFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WButtonSetFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 390\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WCheckExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WCheckExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WCheckExists}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WCheckExists(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WCheckExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the check box exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the check box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 406\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WCheckEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WCheckEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WCheckEnabled}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WCheckEnabled(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WCheckEnabled. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the check box is enabled.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the check box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 415\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WCheckFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WCheckFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WCheckFocus}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WCheckFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WCheckFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the check box has focus.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the check box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 424\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WCheckState} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WCheckState}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WCheckState}}{\f8\fs22  } {\f8\fs32 int CMSTest::WCheckState(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WCheckState. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value that indicates the state of the check box.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the check box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 433\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WCheckClick} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WCheckClick}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WCheckClick}}{\f8\fs22  } {\f8\fs32 void CMSTest::WCheckClick(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WCheckClick. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the check box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 442\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WCheckCheck} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WCheckCheck}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WCheckCheck}}{\f8\fs22  } {\f8\fs32 void CMSTest::WCheckCheck(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WCheckCheck. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the check box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 457\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WCheckUnCheck} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WCheckUnCheck}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WCheckUnCheck}}{\f8\fs22  } {\f8\fs32 void CMSTest::WCheckUnCheck(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WCheckUnCheck. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the check box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 467\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WCheckSetFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WCheckSetFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WCheckSetFocus}}{\f8\fs22  } {\f8\fs32 void CMSTest::WCheckSetFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WCheckSetFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the check box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 477\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WOptionExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WOptionExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WOptionExists}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WOptionExists(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WOptionExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the radio button exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the radio button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 493\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WOptionEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WOptionEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WOptionEnabled}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WOptionEnabled(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WOptionEnabled. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the radio button is enabled.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the radio button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 502\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WOptionFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WOptionFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WOptionFocus}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WOptionFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WOptionFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the radio button has focus.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the radio button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 511\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WOptionState} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WOptionState}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WOptionState}}{\f8\fs22  } {\f8\fs32 int CMSTest::WOptionState(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WOptionState. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the state of the radio button.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the radio button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 520\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WOptionClick} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WOptionClick}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WOptionClick}}{\f8\fs22  } {\f8\fs32 void CMSTest::WOptionClick(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WOptionClick. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the radio button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 529\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WOptionSelect} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WOptionSelect}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WOptionSelect}}{\f8\fs22  } {\f8\fs32 void CMSTest::WOptionSelect(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WOptionSelect. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the radio button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 544\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WOptionSetFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WOptionSetFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WOptionSetFocus}}{\f8\fs22  } {\f8\fs32 void CMSTest::WOptionSetFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WOptionSetFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the radio button name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 554\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListExists}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WListExists(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the list box exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 570\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListCount}}{\f8\fs22  } {\f8\fs32 int CMSTest::WListCount(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListCount. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the number of items in the list.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 579\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListText(LPCSTR lpcszName, CString& strBuffer)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 strBuffer} {\f8\fs22 : A CString reference that will contain the text of the list box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 589\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListLen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListLen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListLen}}{\f8\fs22  } {\f8\fs32 int CMSTest::WListLen(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListLen. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that specifies the length of the list.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 599\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListIndex} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListIndex}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListIndex}}{\f8\fs22  } {\f8\fs32 int CMSTest::WListIndex(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListIndex. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that specifies the index.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 608\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemText(LPCSTR lpcszName, int iIndex, CString& strBuffer)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index into the list box.\par \par } {\i\f8\fs22 strBuffer} {\f8\fs22 : A CString reference that will contain the text of the list box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 621\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemLen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemLen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemLen}}{\f8\fs22  } {\f8\fs32 int CMSTest::WListItemLen(LPCSTR lpcszName, int iIndex)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemLen. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the length of the list box item.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specififes the 1-based index into the list box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 632\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemExists}}{\f8\fs22  } {\f8\fs32 int CMSTest::WListItemExists(LPCSTR lpcszName, LPCSTR lpcszItem)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates whether the list box item exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 lpcszItem} {\f8\fs22 : A pointer to a string that contains the name of the list box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 642\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemClk(LPCSTR lpcszName, int iIndex, int nOffset /*=0*/)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index of the list box item.\par \par } {\i\f8\fs22 nOffset} {\f8\fs22 : An integer that specifies the offset. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 653\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemClk(LPCSTR lpcszName, LPCSTR szItem, int nOffset /*=0*/)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 szItem} {\f8\fs22 : A pointer to a string taht contains the name of the list box item.\par \par } {\i\f8\fs22 nOffset} {\f8\fs22 : An integer that specifies the offset. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 667\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemCtrlClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemCtrlClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemCtrlClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemCtrlClk(LPCSTR lpcszName, int iIndex, int nOffset /*=0*/)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemCtrlClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index of the list box item.\par \par } {\i\f8\fs22 nOffset} {\f8\fs22 : An integer that specifies the offset. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 679\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemCtrlClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemCtrlClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemCtrlClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemCtrlClk(LPCSTR lpcszName, LPCSTR szItem, int nOffset /*=0*/)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemCtrlClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 szItem} {\f8\fs22 : A pointer to a string taht contains the name of the list box item.\par \par } {\i\f8\fs22 nOffset} {\f8\fs22 : An integer that specifies the offset. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 693\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemShftClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemShftClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemShftClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemShftClk(LPCSTR lpcszName, int iIndex, int nOffset /*=0*/)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemShftClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index of the list box item.\par \par } {\i\f8\fs22 nOffset} {\f8\fs22 : An integer that specifies the offset. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 705\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemShftClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemShftClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemShftClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemShftClk(LPCSTR lpcszName, LPCSTR szItem, int nOffset /*=0*/)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemShftClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 szItem} {\f8\fs22 : A pointer to a string taht contains the name of the list box item.\par \par } {\i\f8\fs22 nOffset} {\f8\fs22 : An integer that specifies the offset. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 719\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemDblClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemDblClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemDblClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemDblClk(LPCSTR lpcszName, int iIndex, int nOffset /*=0*/)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemDblClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index of the list box item.\par \par } {\i\f8\fs22 nOffset} {\f8\fs22 : An integer that specifies the offset. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 730\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListItemDblClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListItemDblClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListItemDblClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListItemDblClk(LPCSTR lpcszName, LPCSTR szItem, int nOffset /*=0*/)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListItemDblClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 szItem} {\f8\fs22 : A pointer to a string taht contains the name of the list box item.\par \par } {\i\f8\fs22 nOffset} {\f8\fs22 : An integer that specifies the offset. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 743\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListSelCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListSelCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListSelCount}}{\f8\fs22  } {\f8\fs32 int CMSTest::WListSelCount(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListSelCount. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the number of selected items in the list box.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 753\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListSelItems} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListSelItems}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListSelItems}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListSelItems(LPCSTR lpcszName, LPINT lpIntArray)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListSelItems. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\i\f8\fs22 lpIntArray} {\f8\fs22 : An array of integers that specifies the items to select in the list box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 763\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListEnabled}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WListEnabled(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListEnabled. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the list box is enabled.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 777\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WListSetFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WListSetFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WListSetFocus}}{\f8\fs22  } {\f8\fs32 void CMSTest::WListSetFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WListSetFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <void>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the list box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 786\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboExists}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WComboExists(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the combo box exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 803\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboCount}}{\f8\fs22  } {\f8\fs32 int CMSTest::WComboCount(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboCount. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the number of items in the combo box.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 812\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboText(LPCSTR lpcszName, CString& strBuff)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 strBuff} {\f8\fs22 : A CString reference that will contain the text of the combo box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 822\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboLen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboLen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboLen}}{\f8\fs22  } {\f8\fs32 int CMSTest::WComboLen(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboLen. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the length of the combo box.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 832\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboIndex} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboIndex}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboIndex}}{\f8\fs22  } {\f8\fs32 int CMSTest::WComboIndex(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboIndex. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the combo box index.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 841\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboSetText } K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboSetText }}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboSetText }}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboSetText (LPCSTR lpcszName, LPCSTR lpcszText)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboSetText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 lpcszText} {\f8\fs22 : A pointer to a string that contains the text to set in the combo box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 851\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboSelText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboSelText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboSelText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboSelText(LPCSTR lpcszName, CString& strBuff)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboSelText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 strBuff} {\f8\fs22 : A CString reference that will contain the selected text in the combo box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 866\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboSelLen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboSelLen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboSelLen}}{\f8\fs22  } {\f8\fs32 int CMSTest::WComboSelLen(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboSelLen. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the length of the selected text in the combo box.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 876\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboItemText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboItemText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboItemText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboItemText(LPCSTR lpcszName, int iIndex, CString& strBuff)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboItemText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index of the combo box item.\par \par } {\i\f8\fs22 strBuff} {\f8\fs22 : A CString reference that will contain the text of the combo box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 887\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboItemLen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboItemLen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboItemLen}}{\f8\fs22  } {\f8\fs32 int CMSTest::WComboItemLen(LPCSTR lpcszName, int iIndex)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboItemLen. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the length of the combo box item.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index of the combo box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 898\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboItemExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboItemExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboItemExists}}{\f8\fs22  } {\f8\fs32 int CMSTest::WComboItemExists(LPCSTR lpcszName, LPCSTR lpcszItem)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboItemExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates whether the combo box item exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 lpcszItem} {\f8\fs22 : A pointer to a string that contains the name of the combo box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 908\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboItemClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboItemClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboItemClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboItemClk(LPCSTR lpcszName, int iIndex)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboItemClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index of the combo box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 918\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboItemClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboItemClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboItemClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboItemClk(LPCSTR lpcszName, LPCSTR szItem)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboItemClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 szItem} {\f8\fs22 : A pointer to a string that contains the name of the combo box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 931\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboItemDblClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboItemDblClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboItemDblClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboItemDblClk(LPCSTR lpcszName, int iIndex)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboItemDblClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 iIndex} {\f8\fs22 : An integer that specifies the 1-based index of the combo box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 942\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboItemDblClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboItemDblClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboItemDblClk}}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboItemDblClk(LPCSTR lpcszName, LPCSTR szItem)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboItemDblClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\i\f8\fs22 szItem} {\f8\fs22 : A pointer to a string that contains the name of the combo box item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 954\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboEnabled}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WComboEnabled(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboEnabled. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the combo box is enabled.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 969\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WComboSetFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WComboSetFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WComboSetFocus}}{\f8\fs22  } {\f8\fs32 void CMSTest::WComboSetFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WComboSetFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the combo box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 978\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditExists}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WEditExists(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the edit box exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 994\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditLen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditLen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditLen}}{\f8\fs22  } {\f8\fs32 long CMSTest::WEditLen(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditLen. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A long that contains the length of the text in the edit box.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1003\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WEditText(LPCSTR lpcszName, CString& strBuff)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\i\f8\fs22 strBuff} {\f8\fs22 : A CString reference that will contain the text from the edit box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1013\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditSetText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditSetText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditSetText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WEditSetText(LPCSTR lpcszName, LPCSTR lpcszText)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditSetText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\i\f8\fs22 lpcszText} {\f8\fs22 : A pointer to a string that contains the text to set in the edit box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1024\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditSelText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditSelText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditSelText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WEditSelText(LPCSTR lpcszName, CString& strBuff)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditSelText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\i\f8\fs22 strBuff} {\f8\fs22 : A CString reference that will contain the selected text in the edit box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1035\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditSelLen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditSelLen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditSelLen}}{\f8\fs22  } {\f8\fs32 long CMSTest::WEditSelLen(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditSelLen. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A long that contains the length of the selected text in the edit box.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1045\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditClick} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditClick}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditClick}}{\f8\fs22  } {\f8\fs32 void CMSTest::WEditClick(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditClick. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1062\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditEnabled}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WEditEnabled(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditEnabled. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the edit box is enabled.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1072\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WEditSetFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WEditSetFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WEditSetFocus}}{\f8\fs22  } {\f8\fs32 void CMSTest::WEditSetFocus(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WEditSetFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the edit box name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1081\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WStaticExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WStaticExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WStaticExists}}{\f8\fs22  } {\f8\fs32 BOOL CMSTest::WStaticExists(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WStaticExists. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the static control exists.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the static control's name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1095\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WStaticLen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WStaticLen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WStaticLen}}{\f8\fs22  } {\f8\fs32 long CMSTest::WStaticLen(LPCSTR lpcszName)} {\f8\fs22 \par \par A wrapper for the MS-Test function WStaticLen. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A long that contains the length of the static control.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the static control's name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1104\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_WStaticText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; WStaticText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::WStaticText}}{\f8\fs22  } {\f8\fs32 void CMSTest::WStaticText(LPCSTR lpcszName, CString& strBuff)} {\f8\fs22 \par \par A wrapper for the MS-Test function WStaticText. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lpcszName} {\f8\fs22 : A pointer to a string that contains the static control's name.\par \par } {\i\f8\fs22 strBuff} {\f8\fs22 : A CString reference that will contain the text from the static control.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1114\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueKeys} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueKeys}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueKeys}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueKeys(LPCSTR sz)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueKeys. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string that contains the keys.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1138\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueKeyDn} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueKeyDn}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueKeyDn}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueKeyDn(LPCSTR sz)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueKeyDn. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string that contains the keys.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1147\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueKeyUp} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueKeyUp}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueKeyUp}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueKeyUp(LPCSTR sz)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueKeyUp. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string that contains the keys.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1156\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_DoKeys} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; DoKeys}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::DoKeys}}{\f8\fs22  } {\f8\fs32 int CMSTest::DoKeys(LPCSTR sz, BOOL bLiteral /*=FALSE*/, int nWaitForIdleTime = 5000)} {\f8\fs22 \par \par A wrapper for the MS-Test function DoKeys. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string that contains the keys.\par \par } {\i\f8\fs22 bLiteral} {\f8\fs22 : A Boolean value that indicates whether to translate the keys given in sz as DoKeys does (FALSE) or interpret them literally (TRUE).\par \par } {\i\f8\fs22 nWaitForIdleTime} {\f8\fs22 : - An amount of time to wait after generating keystrokes for the process to become idle\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1167\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_DoKeyshWnd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; DoKeyshWnd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::DoKeyshWnd}}{\f8\fs22  } {\f8\fs32 int CMSTest::DoKeyshWnd(HWND hwnd, LPCSTR sz)} {\f8\fs22 \par \par A wrapper for the MS-Test function DoKeyshWnd. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the window to send the keys to.\par \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string that contains the keys.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1212\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QuePause} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QuePause}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QuePause}}{\f8\fs22  } {\f8\fs32 void CMSTest::QuePause(DWORD dw)} {\f8\fs22 \par \par A wrapper for the MS-Test function QuePause. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 dw} {\f8\fs22 : A DWORD that specifies the number of milliseconds to pause.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1222\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueSetSpeed} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueSetSpeed}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueSetSpeed}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueSetSpeed(WORD w)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueSetSpeed. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 w} {\f8\fs22 : A WORD that specifies the queue speed.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1231\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueSetFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueSetFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueSetFocus}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueSetFocus(HWND hwnd)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueSetFocus. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the window to set focus to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1240\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueSetRelativeWindow} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueSetRelativeWindow}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueSetRelativeWindow}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueSetRelativeWindow(HWND hwnd)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueSetRelativeWindow. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the relative window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1249\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueMouseMove} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueMouseMove}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueMouseMove}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueMouseMove(POINT pt)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueMouseMove. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pt} {\f8\fs22 : A POINT value that specifies the point to move the mouse to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1258\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueMouseDn} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueMouseDn}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueMouseDn}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueMouseDn(int n, POINT pt)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueMouseDn. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 n} {\f8\fs22 : An integer that specifies the button to push.\par \par } {\i\f8\fs22 pt} {\f8\fs22 : A POINT value that specifies the point.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1268\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueMouseUp} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueMouseUp}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueMouseUp}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueMouseUp(int n, POINT pt)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueMouseUp. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 n} {\f8\fs22 : An integer that specifies the button to release.\par \par } {\i\f8\fs22 pt} {\f8\fs22 : A POINT value that specifies the point.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1278\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueMouseClick} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueMouseClick}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueMouseClick}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueMouseClick(int n, POINT pt)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueMouseClick. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 n} {\f8\fs22 : An integer that specifies the button to click.\par \par } {\i\f8\fs22 pt} {\f8\fs22 : A POINT value that specifies the point.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1288\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueMouseDblClk} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueMouseDblClk}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueMouseDblClk}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueMouseDblClk(int n, POINT pt)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueMouseDblClk. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 n} {\f8\fs22 : An integer that specifies the button to double click.\par \par } {\i\f8\fs22 pt} {\f8\fs22 : A POINT value that specifies the point.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1298\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueMouseDblDn} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueMouseDblDn}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueMouseDblDn}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueMouseDblDn(int n, POINT pt)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueMouseDblDn. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 n} {\f8\fs22 : An integer that specifies the button to push.\par \par } {\i\f8\fs22 pt} {\f8\fs22 : A POINT value that specifies the point.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1308\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CMSTest_QueFlush} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CMSTest; QueFlush}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CMSTest::QueFlush}}{\f8\fs22  } {\f8\fs32 int CMSTest::QueFlush(BOOL bRestoreKeyState)} {\f8\fs22 \par \par A wrapper for the MS-Test function QueFlush. See the MS-Test documentation for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bRestoreKeyState} {\f8\fs22 : A Boolean value that specifies whether to restore the key state (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 mstwrap.cpp, 1319\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__MilliSleep} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} MilliSleep}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} MilliSleep}}{\f8\fs22  } {\f8\fs32 void MilliSleep( DWORD milliseconds )} {\f8\fs22 \par \par Sleep for the number of milliseconds specified. This function is obsolete; use ::Sleep() instead.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 milliseconds} {\f8\fs22 : A DWORD that specifies the number of milliseconds to sleep.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 41\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__EmptyClip} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} EmptyClip}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} EmptyClip}}{\f8\fs22  } {\f8\fs32 BOOL EmptyClip(void) } {\f8\fs22 \par \par Clear the text on the system clipboard. This functions is obsolete; use COClip::Empty() instead.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 57\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__GetClipText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} GetClipText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} GetClipText}}{\f8\fs22  } {\f8\fs32 BOOL GetClipText( CString& rstrTextOut)} {\f8\fs22 \par \par Get the text from the system clipboard. This functions is obsolete; use COClip::GetText() instead.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 A} {\f8\fs22 : CString reference that will contain the text from the system clipboard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 82\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__SetClipText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} SetClipText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} SetClipText}}{\f8\fs22  } {\f8\fs32 BOOL SetClipText( LPCSTR szTextIn)} {\f8\fs22 \par \par Set the text in the system clipboard. This functions is obsolete; use COClip::SetText() instead.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szTextIn} {\f8\fs22 : A pointer to a string containing the text to put in the clipboard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 127\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__PasteKeys} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} PasteKeys}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} PasteKeys}}{\f8\fs22  } {\f8\fs32 void PasteKeys(LPCSTR szPasteText)} {\f8\fs22 \par \par Paste the given string into the control with the focus.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szPasteText} {\f8\fs22 : A pointer to a string that contains the text to paste.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 194\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__DoKeysSlow} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} DoKeysSlow}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} DoKeysSlow}}{\f8\fs22  } {\f8\fs32 void DoKeysSlow(LPCSTR szKeys, WORD wMilliseconds = 0, BOOL bLiteral = FALSE)} {\f8\fs22 \par \par Perform DoKeys at a slower rate.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szKeys} {\f8\fs22 : Pointer to a null-terminated string containing the DoKeys-formatted keystrokes.\par \par } {\i\f8\fs22 wMilliseconds} {\f8\fs22 : The number of milliseconds to wait between keystrokes. (Default value is 0.)\par \par } {\i\f8\fs22 bLiteral} {\f8\fs22 : TRUE to interpret the keystrokes literally; FALSE to interpret the keystrokes as DoKeys keystrokes. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 218\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__ClickMouse} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} ClickMouse}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} ClickMouse}}{\f8\fs22  } {\f8\fs32 void ClickMouse(int nButton, HWND hwnd, int cX,  int cY) } {\f8\fs22 \par \par Click the mouse at the given coordinates (relative to the window specified).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nButton} {\f8\fs22 : An integer that specifies the button to click: VK_LBUTTON, VK_MBUTTON, VK_RBUTTON.\par \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the window to click in.\par \par } {\i\f8\fs22 cX} {\f8\fs22 : An integer that specifies the x-coordinate of the click.\par \par } {\i\f8\fs22 cY} {\f8\fs22 : An integer that specifies the y-coordinate of the click.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 268\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__DragMouse} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} DragMouse}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} DragMouse}}{\f8\fs22  } {\f8\fs32 void DragMouse(int nButton, HWND hwnd1, int cX1, int cY1, HWND hwnd2, int cX2, int cY2)} {\f8\fs22 \par \par Drag the mouse from the given coordinates to the given coordinates (relative to the window specified).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nButton} {\f8\fs22 : An integer that specifies the button to click: VK_LBUTTON, VK_MBUTTON, VK_RBUTTON.\par \par } {\i\f8\fs22 hwnd1} {\f8\fs22 : An HWND that specifies the window to start dragging from.\par \par } {\i\f8\fs22 cX1} {\f8\fs22 : An integer that specifies the x-coordinate of the beginning drag position.\par \par } {\i\f8\fs22 cY1} {\f8\fs22 : An integer that specifies the y-coordinate of the beginning drag position.\par \par } {\i\f8\fs22 hwnd2} {\f8\fs22 : An HWND that specifies the window the end dragging in.\par \par } {\i\f8\fs22 cX2} {\f8\fs22 : An integer that specifies the x-coordinate of the ending drag position.\par \par } {\i\f8\fs22 cY2} {\f8\fs22 : An integer that specifies the y-coordinate of the ending drag position.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 300\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__ScreenToClient} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} ScreenToClient}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} ScreenToClient}}{\f8\fs22  } {\f8\fs32 BOOL ScreenToClient(HWND hwnd, CRect* pRect)} {\f8\fs22 \par \par Converts the coordinates in the given rectangle from screen coordinates to client coordinates for the specified window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if success; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the window to convert the screen coordinates to client coordinates.\par \par } {\i\f8\fs22 pRect} {\f8\fs22 : A pointer to a CRect that contains the rectangle to convert. The converted coordinates will be stored in this object when the function returns.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 334\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__ClientToScreen} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} ClientToScreen}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} ClientToScreen}}{\f8\fs22  } {\f8\fs32 BOOL ClientToScreen(HWND hwnd, CRect* pRect)} {\f8\fs22 \par \par Converts the coordinates in the given rectangle from client coordinates for the specified window to screen coordinates.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if success; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the window that contains the client coordinates.\par \par } {\i\f8\fs22 pRect} {\f8\fs22 : A pointer to a CRect that contains the rectangle to convert. The converted coordinates will be stored in this object when the function returns.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 347\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__CompareFiles} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CompareFiles}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CompareFiles}}{\f8\fs22  } {\f8\fs32 int CompareFiles(LPCSTR strSource, LPCSTR strTarget, int nStart)} {\f8\fs22 \par \par Compare the contents of two files.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A value that specifies the result of the comparison: CF_SAME, CF_DUPNAME, CF_CANTOPEN1, CF_CANTOPEN2, CF_DIFFSIZE, CF_NOTSAME.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 strSource} {\f8\fs22 : A pointer to a string that contains the path and filename of the first file to compare.\par \par } {\i\f8\fs22 strTarget} {\f8\fs22 : A pointer to a string that contains the path and filename of the second file to compare.\par \par } {\i\f8\fs22 nStart} {\f8\fs22 : An integer that contains the offset from the beginning of the files to start the comparison.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 366\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__KillFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} KillFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} KillFile}}{\f8\fs22  } {\f8\fs32 void KillFile(LPCSTR szPathName, LPCSTR szFileName = NULL, BOOL bIgnoreReadOnly = FALSE)} {\f8\fs22 \par \par Delete all files that match the pattern provided in szFileName.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szPathName} {\f8\fs22 : A string containing the path to the files.\par \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A string containing the filename to delete (wildcards are supported).\par \par } {\i\f8\fs22 bIgnoreReadOnly} {\f8\fs22 : TRUE to ignore the read-only bit; FALSE to honor the read-only bit.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 439\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__KillAllFiles} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} KillAllFiles}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} KillAllFiles}}{\f8\fs22  } {\f8\fs32 void KillAllFiles(LPCSTR szPathName, BOOL bRemoveDir = TRUE)} {\f8\fs22 \par \par Delete an entire directory, recursively.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szPathName} {\f8\fs22 : A pointer to a string that contains the path to the directory to be deleted.\par \par } {\i\f8\fs22 bRemoveDir} {\f8\fs22 : TRUE to remove the directory itself; FALSE to keep the directory but delete all the files in it.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 493\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__CopyTree} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CopyTree}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CopyTree}}{\f8\fs22  } {\f8\fs32 void CopyTree(LPCSTR szFrom, LPCSTR szTo)} {\f8\fs22 \par \par Copy a tree of directories and files from one tree to another.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFrom} {\f8\fs22 : A pointer to a string that contains the path to the source tree (the tree to copy from).\par \par } {\i\f8\fs22 szTo} {\f8\fs22 : A pointer to a string that contains the path to the destination tree (the tree to copy to).\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 569\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__FindStrInFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} FindStrInFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} FindStrInFile}}{\f8\fs22  } {\f8\fs32 int FindStrInFile(LPCSTR szFileName, LPCSTR szStr, int nStart /*=1*/)} {\f8\fs22 \par \par Search for the specified string in a file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the line number in the file that contains the string. 0 if the string was not found.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the path and filename of the file to search.\par \par } {\i\f8\fs22 szStr} {\f8\fs22 : A pointer to the string to find.\par \par } {\i\f8\fs22 nStart} {\f8\fs22 : An integer that contains the offset from the beginning of the file to start the search.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 624\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__GetText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} GetText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} GetText}}{\f8\fs22  } {\f8\fs32 LPCSTR GetText(HWND hwnd, LPSTR sz, int cMax)} {\f8\fs22 \par \par Get the text associated with the specified window by sending the WM_GETTEXT message to the window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to the buffer specified by sz that contains the text associated with the window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND of the window to get the text for.\par \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a buffer that will contain the text associated with the window.\par \par } {\i\f8\fs22 cMax} {\f8\fs22 : An integer that specifies the maximum size of the buffer sz.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 657\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__GetText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} GetText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} GetText}}{\f8\fs22  } {\f8\fs32 CString GetText(HWND hwnd)} {\f8\fs22 \par \par Get the text associated with the specified window by sending the WM_GETTEXT message to the window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a buffer that contains the text associated with the window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND of the window to get the text for.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 672\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__DoMenu} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} DoMenu}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} DoMenu}}{\f8\fs22  } {\f8\fs32 int DoMenu(LPCSTR szMenu1, LPCSTR szMenu2, LPCSTR szMenu3 /*=NULL*/, LPCSTR szMenu4 /*=NULL*/, LPCSTR szMenu5 /*=NULL*/, LPCSTR szMenu6 /*=NULL*/, LPCSTR szMenu7 /*=NULL*/, LPCSTR szMenu8 /*=NULL*/, LPCSTR szMenu9 /*=NULL*/)} {\f8\fs22 \par \par Open a series of menus. This function is obsolete; use CMSTest::DoMenu() instead.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. 0 if success; a positive value that contains the menu level that failed otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szMenu1} {\f8\fs22 : A pointer to a string that contains the name of the menu to open.\par \par } {\i\f8\fs22 szMenu2} {\f8\fs22 : A pointer to a string that contains the name of the menu to open.\par \par } {\i\f8\fs22 szMenu3} {\f8\fs22 : A pointer to a string that contains the name of the menu to open. (Default value is NULL.)\par \par } {\i\f8\fs22 szMenu4} {\f8\fs22 : A pointer to a string that contains the name of the menu to open. (Default value is NULL.)\par \par } {\i\f8\fs22 szMenu5} {\f8\fs22 : A pointer to a string that contains the name of the menu to open. (Default value is NULL.)\par \par } {\i\f8\fs22 szMenu6} {\f8\fs22 : A pointer to a string that contains the name of the menu to open. (Default value is NULL.)\par \par } {\i\f8\fs22 szMenu7} {\f8\fs22 : A pointer to a string that contains the name of the menu to open. (Default value is NULL.)\par \par } {\i\f8\fs22 szMenu8} {\f8\fs22 : A pointer to a string that contains the name of the menu to open. (Default value is NULL.)\par \par } {\i\f8\fs22 szMenu9} {\f8\fs22 : A pointer to a string that contains the name of the menu to open. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 700\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__DoMenu} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} DoMenu}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} DoMenu}}{\f8\fs22  } {\f8\fs32 int DoMenu(LPCSTR szMenu)} {\f8\fs22 \par \par Open a series of menus in a NULL-separated list. This function is obsolete; use CMSTest::DoMenu() instead.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. 0 if success; a positive value that contains the menu level that failed otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szMenu} {\f8\fs22 : A pointer to a string that contains the names of the menu to open. The list of menus is NULL-separated and NULL-terminated.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 740\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__DoSingleMenu} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} DoSingleMenu}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} DoSingleMenu}}{\f8\fs22  } {\f8\fs32 BOOL DoSingleMenu(LPCSTR szMenu)} {\f8\fs22 \par \par Open a menu. This function is obsolete; use CMSTest::DoMenu() instead.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szMenu} {\f8\fs22 : A pointer to a string that contains the name of the menu to open.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 769\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__IsWindowActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} IsWindowActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} IsWindowActive}}{\f8\fs22  } {\f8\fs32 BOOL IsWindowActive(LPCSTR szWndTitle)} {\f8\fs22 \par \par Determine if the specified window is the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the specified window is the active window (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szWndTitle} {\f8\fs22 : A pointer to a string that contains the title of the window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 818\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__WaitMsgBoxText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} WaitMsgBoxText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} WaitMsgBoxText}}{\f8\fs22  } {\f8\fs32 BOOL WaitMsgBoxText(LPCSTR szExpect, int nSeconds)} {\f8\fs22 \par \par Wait for a specific message to be active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szExpect} {\f8\fs22 : A pointer to a string that contains the partial text expected in the message box.\par \par } {\i\f8\fs22 nSeconds} {\f8\fs22 : An integer that specifies the number of seconds to wait for the message box to appear.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 836\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__GetLabel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} GetLabel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} GetLabel}}{\f8\fs22  } {\f8\fs32 LPCSTR GetLabel(UINT id, HWND hwnd /*=NULL*/, BOOL bOkNoExist /*=FALSE*/)} {\f8\fs22 \par \par Get the caption of a control given its ID. If the control is a list box, combo box, or edit box, the caption is the static control immediately preceeding the control. Only the immediate children of the given window are searched.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the caption of the control.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : An integer that specifies the ID of the control.\par \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the window that contains the control. NULL means use the currently active window. (Default value is NULL.)\par \par } {\i\f8\fs22 bOkNoExist} {\f8\fs22 : A Boolean value that specifies whether to log information if the control is not found (FALSE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 877\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__GetDlgControlClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} GetDlgControlClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} GetDlgControlClass}}{\f8\fs22  } {\f8\fs32 int GetDlgControlClass(HWND hCtl) } {\f8\fs22 \par \par Get the window class type of the specified control.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A value that indicates the window class type of the control: GL_NONE, GL_STATIC, GL_BUTTON, GL_EDIT, GL_LISTBOX, GL_COMBOBOX, GL_DIALOG, GL_CHECKBOX, GL_RADIOBUTTON.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hCtl} {\f8\fs22 : An HWND that specifies the control.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 964\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__ControlOnPropPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} ControlOnPropPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} ControlOnPropPage}}{\f8\fs22  } {\f8\fs32 HWND ControlOnPropPage(int iCtrlId)} {\f8\fs22 \par \par Find the parent window of the specified control in the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An HWND that specifies the parent window of the control.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1018\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__DayRandSeed} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} DayRandSeed}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} DayRandSeed}}{\f8\fs22  } {\f8\fs32 void DayRandSeed(void)} {\f8\fs22 \par \par Seed the random number generator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1064\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__DayRand} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} DayRand}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} DayRand}}{\f8\fs22  } {\f8\fs32 int DayRand(int nRange)} {\f8\fs22 \par \par Get a random number.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that is a random number in the given range.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nRange} {\f8\fs22 : An integer that specifies the upper end of the range (the range will be between 0 and nRange-1).\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1076\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__WaitForWndWithCtrl} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} WaitForWndWithCtrl}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} WaitForWndWithCtrl}}{\f8\fs22  } {\f8\fs32 BOOL WaitForWndWithCtrl(INT ID, DWORD dwMillSec /* = 3000*/)} {\f8\fs22 \par \par Wait for a window with the specified control to be active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ID} {\f8\fs22 : An integer that contains the ID of the control.\par \par } {\i\f8\fs22 dwMillSec} {\f8\fs22 : A DWORD that contains the number of milliseconds to wait for the window to appear. (Default value is 3000.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1112\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__GetSystem} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} GetSystem}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} GetSystem}}{\f8\fs22  } {\f8\fs32 DWORD GetSystem(void)} {\f8\fs22 \par \par Get the operating system currently in use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A DWORD bit field that specifies the system currently in use: SYSTEM_NT, SYSTEM_DAYTONA, SYSTEM_CHICAGO, SYSTEM_DBCS, SYSTEM_JAPAN.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1143\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__FindFirstChild} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} FindFirstChild}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} FindFirstChild}}{\f8\fs22  } {\f8\fs32 HWND FindFirstChild(HWND hWnd, int nID)} {\f8\fs22 \par \par This function performs a breadth first search of a window for a child window specified by the control ID given.  This function was created because ::GetDlgItem is not recursive, and CWnd::GetDescendantWindow does a breadth then depth first search, resulting in a different window being found than if a total breadth first search was done.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the window found, or NULL if none were found.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hWnd} {\f8\fs22 : - Window from which to start the search.\par \par } {\i\f8\fs22 nID} {\f8\fs22 : - Control ID of the child window for which to search\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1191\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__WaitForSingleControl} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} WaitForSingleControl}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} WaitForSingleControl}}{\f8\fs22  } {\f8\fs32 DWORD WaitForSingleControl(const DWORD dwProcessId, const int idControl, const DWORD dwTimeout)} {\f8\fs22 \par \par Wait for a control to be found in any of the specified process's windows. This function can be used to wait for a window to appear with the specified control. See WaitForMultipleControls(int, int*, DWORD) to wait for one of any number of controls.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A DWORD that specifies the result: WAIT_CONTROL_0, if successful; WAIT_TIMEOUT otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 dwProcessId} {\f8\fs22 : A DWORD that specifies the ID of the process.\par \par } {\i\f8\fs22 idControl} {\f8\fs22 : An integer that specifies the control to look for on the active window.\par \par } {\i\f8\fs22 dwTimeout} {\f8\fs22 : A DWORD that specifies the number of milliseconds to wait for the control.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1220\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__WaitForMultipleControls} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} WaitForMultipleControls}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} WaitForMultipleControls}}{\f8\fs22  } {\f8\fs32 DWORD WaitForMultipleControls(const DWORD dwProcessId, const int cControl, const int aControls[], const DWORD dwTimeout)} {\f8\fs22 \par \par Wait for any of the specified controls to be found in any of the specified process's windows. This function can be used to wait for a window to appear with any one of the the specified controls. See WaitForSingleControl(int, DWORD) to wait for a single control.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A DWORD that specifies the control found: WAIT_CONTROL_0 through WAIT_CONTROL_n, if successful; WAIT_TIMEOUT otherwise. Only WAIT_CONTROL_0 through WAIT_CONTROL_9 are defined; use WAIT_CONTROL_0 + n to test the return value when more than ten controls are being waited on.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 dwProcessId} {\f8\fs22 : A DWORD that specifies the ID of the process.\par \par } {\i\f8\fs22 cControl} {\f8\fs22 : An integer that specifies the number of controls in the aControls array.\par \par } {\i\f8\fs22 aControls} {\f8\fs22 : An integer array that contains the controls to look for on the active window.  The controls should be uniquely chosen for specific window detection and ordered such that the controls for the specific windows requiring detection are listed first.  ID's that specify very generic controls, such as MSG_OK and MSG_YES should not be used, or be listed last, so as to not cause specific window to be incorrectly detected as a general dialog.\par \par } {\i\f8\fs22 dwTimeout} {\f8\fs22 : A DWORD that specifies the number of milliseconds to wait for the control.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1260\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__TrimString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} TrimString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} TrimString}}{\f8\fs22  } {\f8\fs32 void TrimString(CString* pStr)} {\f8\fs22 \par \par This function trims leading and trailing spaces from a string.  It assumes that there are no trailing \n's or \r's on the string that should also be ignored.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pStr} {\f8\fs22 : - Pointer to the string to be modified.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 testutil.cpp, 1292\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_Open} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; Open}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::Open}}{\f8\fs22  } {\f8\fs32 BOOL UIDialog::Open(void)} {\f8\fs22 \par \par Open the dialog. This member function must be overridden in the derived class.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 40\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIDialog::IsValid(void) const} {\f8\fs22 \par \par Determine if the dialog is valid by verifying that the dialog is a valid window and by calling VerifyClass and VerifyUnique.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the dialog is valid (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 52\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_VerifyClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; VerifyClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::VerifyClass}}{\f8\fs22  } {\f8\fs32 BOOL UIDialog::VerifyClass(void) const} {\f8\fs22 \par \par Determine if the window class of the dialog is #32770.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window class is #32770 (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 65\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_VerifyUnique} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; VerifyUnique}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::VerifyUnique}}{\f8\fs22  } {\f8\fs32 BOOL UIDialog::VerifyUnique(void) const} {\f8\fs22 \par \par Verify that this dialog is unique.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the dialog is unique (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 77\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_ExpectedTitle} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; ExpectedTitle}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::ExpectedTitle}}{\f8\fs22  } {\f8\fs32 LPCSTR UIDialog::ExpectedTitle(void) const} {\f8\fs22 \par \par Get the title of the dialog (as expected by this object--not from the actual dialog).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the title of the dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 90\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_SetExpectedTitle} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; SetExpectedTitle}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::SetExpectedTitle}}{\f8\fs22  } {\f8\fs32 void UIDialog::SetExpectedTitle(LPCSTR szTitle)} {\f8\fs22 \par \par Set the expected title for this dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 <none>\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szTitle} {\f8\fs22 : A pointer to a string that contains the expected title of this dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 101\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_VerifyTitle} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; VerifyTitle}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::VerifyTitle}}{\f8\fs22  } {\f8\fs32 BOOL UIDialog::VerifyTitle(void) const} {\f8\fs22 \par \par Determine if the title of the dialog matches the expected title of the dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the title of the dialog matches the expected title (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 114\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_GetDlgItem} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; GetDlgItem}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::GetDlgItem}}{\f8\fs22  } {\f8\fs32 HWND UIDialog::GetDlgItem(UINT id) const} {\f8\fs22 \par \par Get the HWND of an item in the dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the specified item in the dialog.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : An integer that specifies the ID of the item in the dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 131\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_VerifyDlgItemClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; VerifyDlgItemClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::VerifyDlgItemClass}}{\f8\fs22  } {\f8\fs32 BOOL UIDialog::VerifyDlgItemClass(UINT id, int nClass) const} {\f8\fs22 \par \par Verify that the class of the specified dialog item matches the given class.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the class of the specified dialog item matches the given class (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : An integer that specifies the ID of the item in the dialog.\par \par } {\i\f8\fs22 nClass} {\f8\fs22 : An integer that specifies the class of the dialog item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 143\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_OK} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; OK}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::OK}}{\f8\fs22  } {\f8\fs32 HWND UIDialog::OK(void)} {\f8\fs22 \par \par Click the OK button in the dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if successful; the HWND of a message or dialog box that has focus otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 154\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_Cancel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; Cancel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::Cancel}}{\f8\fs22  } {\f8\fs32 HWND UIDialog::Cancel(void)} {\f8\fs22 \par \par Click the Cancel button in the dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if successful; the HWND of a message or dialog box that has focus otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 173\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::Close}}{\f8\fs22  } {\f8\fs32 HWND UIDialog::Close(void)} {\f8\fs22 \par \par Click the Close button in the dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if successful; the HWND of a message or dialog box that has focus otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 192\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDialog_Help} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDialog; Help}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDialog::Help}}{\f8\fs22  } {\f8\fs32 HWND UIDialog::Help(void)} {\f8\fs22 \par \par Click the Help button in the dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if successful; the HWND of a message or dialog box that has focus otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udialog.cpp, 214\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMessageBox_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMessageBox; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMessageBox::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIMessageBox::IsValid(void) const} {\f8\fs22 \par \par Determine if the message box is valid by checking that the window handle is valid and that the window class is #32770.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the message box is valid (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umsgbox.cpp, 47\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMessageBox_GetMessageText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMessageBox; GetMessageText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMessageBox::GetMessageText}}{\f8\fs22  } {\f8\fs32 CString UIMessageBox::GetMessageText(void)} {\f8\fs22 \par \par Get the message text from the message box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the text of the message in the message box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umsgbox.cpp, 62\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMessageBox_ButtonClick} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMessageBox; ButtonClick}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMessageBox::ButtonClick}}{\f8\fs22  } {\f8\fs32 BOOL UIMessageBox::ButtonClick(int btn /*=MSG_DEFAULT*/)} {\f8\fs22 \par \par Click the specified button in the message box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 btn} {\f8\fs22 : An integer that specifies the ID of the button to click: MSG_DEFAULT, MSG_OK, MSG_CANCEL, MSG_ABORT, MSG_RETRY, MSG_IGNORE, MSG_YES, MSG_NO. (Default value is MSG_DEFAULT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umsgbox.cpp, 75\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMessageBox_ButtonExists} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMessageBox; ButtonExists}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMessageBox::ButtonExists}}{\f8\fs22  } {\f8\fs32 BOOL UIMessageBox::ButtonExists(int btn)} {\f8\fs22 \par \par Determine whether the specified button exists on the message box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the button exists (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 btn} {\f8\fs22 : An integer that contains the ID of the button.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umsgbox.cpp, 92\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMessageBox_GetActiveButton} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMessageBox; GetActiveButton}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMessageBox::GetActiveButton}}{\f8\fs22  } {\f8\fs32 int UIMessageBox::GetActiveButton(void)} {\f8\fs22 \par \par Get the ID of the active button on the message box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that specifies the ID of the active button.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umsgbox.cpp, 102\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_operator=} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; operator=}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::operator=}}{\f8\fs22  } {\f8\fs32 HWND UIWindow::operator=(HWND hwnd)} {\f8\fs22 \par \par Assign this UIWindow object or HWND to another UIWindow object or HWND.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 HWND that specifies the UIWindow object.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : The HWND of the object to assign from.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 43\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_Attach} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; Attach}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::Attach}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::Attach(HWND hwnd)} {\f8\fs22 \par \par Attach to the window with the given handle.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : An HWND that specifies the handle of the window to attach to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 56\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_AttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; AttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::AttachActive}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::AttachActive(void)} {\f8\fs22 \par \par Attach to the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 68\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::Find}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::Find(void)} {\f8\fs22 \par \par Find the window and attach to it. This member function must be overridden by the derived class.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 84\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::IsValid(void) const} {\f8\fs22 \par \par Determine if the window is valid by verifying the validity of its HWND and that it's visible.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 113\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_GetText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; GetText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::GetText}}{\f8\fs22  } {\f8\fs32 LPCSTR UIWindow::GetText(LPSTR sz, int cMax) const} {\f8\fs22 \par \par Get the window text (by sending a WM_GETTEXT) message to the window. (See CString UIWindow::GetText(void) to get the text without allocating a buffer.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to the beginning of the buffer pointed to by the sz parameter.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string that will contain the text of the window.\par \par } {\i\f8\fs22 cMax} {\f8\fs22 : An integer that specifies the size of the sz buffer.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 130\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_GetText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; GetText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::GetText}}{\f8\fs22  } {\f8\fs32 CString UIWindow::GetText(void) const} {\f8\fs22 \par \par Get the window text (by sending a WM_GETTEXT) message to the window. (See LPCSTR UIWindow::GetText(LPSTR, int) to get the text in a user allocated buffer.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to the beginning of the buffer pointed to by the sz parameter.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 140\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::IsActive(void)} {\f8\fs22 \par \par Determine if the window is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 156\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::Activate(void)} {\f8\fs22 \par \par Make this window the active window. (See UIWindow::BlockingActivate() to make this window active and wait until it's active.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 171\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_BlockingActivate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; BlockingActivate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::BlockingActivate}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::BlockingActivate(void)} {\f8\fs22 \par \par Make this window the active window and wait until it is active. (See UIWindow::Activate() to make this window active without waiting.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 185\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_HasFocus} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; HasFocus}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::HasFocus}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::HasFocus(void) const} {\f8\fs22 \par \par Determine if this window has focus.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether this window has focus (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 198\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_WaitAttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; WaitAttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::WaitAttachActive}}{\f8\fs22  } {\f8\fs32 HWND UIWindow::WaitAttachActive(DWORD dwMilliseconds)} {\f8\fs22 \par \par Wait until active window is attached to successfully or the specified time-out is reached.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An HWND that specifies the window attached to.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 dwMilliseconds} {\f8\fs22 : A DWORD that specifies the number of milliseconds to wait.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 218\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWindow_WaitUntilGone} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWindow; WaitUntilGone}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWindow::WaitUntilGone}}{\f8\fs22  } {\f8\fs32 BOOL UIWindow::WaitUntilGone(DWORD dwMilliseconds)} {\f8\fs22 \par \par Wait until the window is no longer valid or the specified time-out is reached.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 dwMilliseconds} {\f8\fs22 : A DWORD that specifies the number of milliseconds to wait.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwindow.cpp, 244\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_CloseAllWindows} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; CloseAllWindows}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::CloseAllWindows}}{\f8\fs22  } {\f8\fs32 void COWorkSpace::CloseAllWindows(void)} {\f8\fs22 \par \par Close all open windows in the IDE.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 38\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_IsToolbarVisible} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; IsToolbarVisible}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::IsToolbarVisible}}{\f8\fs22  } {\f8\fs32 BOOL COWorkSpace::IsToolbarVisible(UINT id)} {\f8\fs22 \par \par Determine if the toolbar indicated by id is visible. (Use IsDockWindowVisible for dockable windows.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the toolbar is visible; FALSE if not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the toolbar: IDTB_SUSHI_STANDARD, IDTB_SUSHI_EDIT, IDTB_VRES_RESOURCE, IDTB_VCPP_DEBUG, IDTB_VCPP_BROWSE, IDTB_VRES_DIALOG, IDDW_CONTROLS, IDDW_GRAPHICS, IDDW_COLORS, IDDW_TEXTTOOL, IDTB_VPROJ_BUILD.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 49\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_IsDockWindowVisible} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; IsDockWindowVisible}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::IsDockWindowVisible}}{\f8\fs22  } {\f8\fs32 BOOL COWorkSpace::IsDockWindowVisible(UINT id)} {\f8\fs22 \par \par Determine if the dockable window indicated by id is visible. (Use IsToolbarVisible for toolbars.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the dockable window is visible; FALSE if not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the dockable window: IDDW_VCPP_ERROR_WIN, IDDW_VCPP_WATCH_WIN, IDDW_VCPP_LOCALS_WIN, IDDW_VCPP_CPU_WIN, IDDW_VCPP_MEMORY_WIN, IDDW_VCPP_CALLS_WIN, IDDW_VCPP_DISASSY_WIN.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 86\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_ShowToolbar} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; ShowToolbar}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::ShowToolbar}}{\f8\fs22  } {\f8\fs32 int COWorkSpace::ShowToolbar(UINT id, BOOL bShow /*=TRUE*/)} {\f8\fs22 \par \par Show or hide the toolbar indicated by id. (Use this function to show or hide dockable windows, also.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the toolbar is successfully shown (or hidden); FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the toolbar or dockable window: IDTB_SUSHI_STANDARD, IDTB_SUSHI_EDIT, IDTB_VRES_RESOURCE, IDTB_VCPP_DEBUG, IDTB_VCPP_BROWSE, IDTB_VRES_DIALOG, IDDW_CONTROLS, IDDW_GRAPHICS, IDDW_COLORS, IDDW_TEXTTOOL, IDTB_VPROJ_BUILD, IDDW_VCPP_ERROR_WIN, IDDW_VCPP_WATCH_WIN, IDDW_VCPP_LOCALS_WIN, IDDW_VCPP_CPU_WIN, IDDW_VCPP_MEMORY_WIN, IDDW_VCPP_CALLS_WIN, IDDW_VCPP_DISASSY_WIN.\par \par } {\i\f8\fs22 bShow} {\f8\fs22 : TRUE to show the toolbar or window; FALSE to hide it. (Default is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 99\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_IsWindowDocked} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; IsWindowDocked}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::IsWindowDocked}}{\f8\fs22  } {\f8\fs32 BOOL COWorkSpace::IsWindowDocked(UINT id, int nLocation)} {\f8\fs22 \par \par Determine if the dockable window indicated by id is docked. (Use IsToolbarDocked for toolbars.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the dockable window is docked; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the dockable window: IDDW_VCPP_ERROR_WIN, IDDW_VCPP_WATCH_WIN, IDDW_VCPP_LOCALS_WIN, IDDW_VCPP_CPU_WIN, IDDW_VCPP_MEMORY_WIN, IDDW_VCPP_CALLS_WIN, IDDW_VCPP_DISASSY_WIN.\par \par } {\i\f8\fs22 nLocation} {\f8\fs22 : The location of the dockable window: DW_TOP, DW_BOTTOM, DW_LEFT, DW_RIGHT.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 153\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_IsToolbarDocked} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; IsToolbarDocked}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::IsToolbarDocked}}{\f8\fs22  } {\f8\fs32 BOOL COWorkSpace::IsToolbarDocked(UINT id, int nLocation)} {\f8\fs22 \par \par Determine if the toolbar indicated by id is docked. (Use IsWindowDocked for dockable windows.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the toolbar is docked; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the toolbar: IDTB_SUSHI_STANDARD, IDTB_SUSHI_EDIT, IDTB_VRES_RESOURCE, IDTB_VCPP_DEBUG, IDTB_VCPP_BROWSE, IDTB_VRES_DIALOG, IDDW_CONTROLS, IDDW_GRAPHICS, IDDW_COLORS, IDDW_TEXTTOOL, IDTB_VPROJ_BUILD.\par \par } {\i\f8\fs22 nLocation} {\f8\fs22 : The location of the toolbar: DW_TOP, DW_BOTTOM, DW_LEFT, DW_RIGHT.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 167\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_ShowPropPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; ShowPropPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::ShowPropPage}}{\f8\fs22  } {\f8\fs32 BOOL COWorkSpace::ShowPropPage(BOOL bShow)} {\f8\fs22 \par \par Display or hide the property page for the currently active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the property page is successfully shown (or hidden); FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bShow} {\f8\fs22 : TRUE to show the property page; FALSE to hide it.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 205\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_GetStatusText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; GetStatusText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::GetStatusText}}{\f8\fs22  } {\f8\fs32 CString COWorkSpace::GetStatusText(void)} {\f8\fs22 \par \par Get the text from the IDE's status bar.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the text in the status bar.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 246\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_WaitForStatusText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; WaitForStatusText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::WaitForStatusText}}{\f8\fs22  } {\f8\fs32 BOOL COWorkSpace::WaitForStatusText(LPCSTR sz, DWORD dwMilliSeconds, BOOL bExact /*=TRUE*/)} {\f8\fs22 \par \par Wait for the given text (sz) to appear in the status bar. This function will wait until the text is displayed in the status bar or the number of milliseconds given in dwMilliSeconds have elapsed.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the text is found in the status bar before dwMilliSeconds elapses; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string containing the text to wait for in the status bar.\par \par } {\i\f8\fs22 dwMilliSeconds} {\f8\fs22 : The number of milliseconds to wait for the text to appear.\par \par } {\i\f8\fs22 bExact} {\f8\fs22 : TRUE if the text in status bar must match the text in sz exactly; FALSE for a partial patch.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 260\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_VerifyCaretPosition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; VerifyCaretPosition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::VerifyCaretPosition}}{\f8\fs22  } {\f8\fs32 BOOL COWorkSpace::VerifyCaretPosition( int nRow, int nCol, LPCSTR szErrTxt )} {\f8\fs22 \par \par Verify the caret position in the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the caret position matches the given row and column; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nRow} {\f8\fs22 : The expected row for the caret.\par \par } {\i\f8\fs22 nCol} {\f8\fs22 : The expected column for the caret.\par \par } {\i\f8\fs22 szErrTxt} {\f8\fs22 : A pointer to a string containing the text to emit to log if the caret position doesn't match the given row and column.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 297\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_AddTool} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; AddTool}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::AddTool}}{\f8\fs22  } {\f8\fs32 COWorkSpace::AddTool(CString strMenuText, CString strToolPath, CString strArguments, CString strInitDir, BOOL PromptArguments, BOOL RedirectOutput, BOOL CloseOnExit);} {\f8\fs22 \par \par Add a Tool to the Tools menu.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 strToolPath} {\f8\fs22 : The complete drive, path, and executable file name\par \par } {\i\f8\fs22 strArguments} {\f8\fs22 : Any arguments to be passed to the tool on startup\par \par } {\i\f8\fs22 strInitDir} {\f8\fs22 : Initial Directory\par \par } {\i\f8\fs22 strMenuText} {\f8\fs22 : Name and shortcut to appear on tools menu\par \par } {\i\f8\fs22 PromptArgument} {\f8\fs22 : Check Prompt for Arguments box\par \par } {\i\f8\fs22 RedirectOutput} {\f8\fs22 : Check Redirect to Output Window\par \par } {\i\f8\fs22 CloseOnExit} {\f8\fs22 : Check Close Window on Exit\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 342\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COWorkSpace_DeleteTool} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COWorkSpace; DeleteTool}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COWorkSpace::DeleteTool}}{\f8\fs22  } {\f8\fs32 COWorkSpace::DeleteTool(int Number)} {\f8\fs22 \par \par Delete a number of Tools from the Tools menu\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 int} {\f8\fs22 : Number Number of tools to delete\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cowrkspc.cpp, 379\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileDlg_SetName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileDlg; SetName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileDlg::SetName}}{\f8\fs22  } {\f8\fs32 void UIFileDlg::SetName(LPCSTR sz)} {\f8\fs22 \par \par Set the filename field in a file common dialog box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string containing the filename to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileDlg_GetName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileDlg; GetName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileDlg::GetName}}{\f8\fs22  } {\f8\fs32 CString UIFileDlg::GetName()} {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The filename specified in the filename field in a file common dialog box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 42\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileDlg_SetPath} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileDlg; SetPath}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileDlg::SetPath}}{\f8\fs22  } {\f8\fs32 void UIFileDlg::SetPath(LPCSTR sz)} {\f8\fs22 \par \par Set the path in a file common dialog box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string containing the path to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 58\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileDlg_OK} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileDlg; OK}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileDlg::OK}}{\f8\fs22  } {\f8\fs32 BOOL UIFileDlg::OK(BOOL bOverwrite)} {\f8\fs22 \par \par Click the OK button a file common dialog box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the button is clicked and the dialog is successfully dismissed; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bOverwrite} {\f8\fs22 : TRUE to overwrite the file if it already exists; FALSE to not overwrite the file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 71\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileDlg_GetDlgItem} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileDlg; GetDlgItem}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileDlg::GetDlgItem}}{\f8\fs22  } {\f8\fs32 HWND UIFileDlg::GetDlgItem(UINT id) const} {\f8\fs22 \par \par Get the HWND of a particular item (referred to by ID) in the dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the dialog item specified by the id parameter.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the item in the dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 83\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOpenDlg_GetLabel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOpenDlg; GetLabel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOpenDlg::GetLabel}}{\f8\fs22  } {\f8\fs32 HWND UIOpenDlg::GetLabel(UINT id) const} {\f8\fs22 \par \par Get the label associated with a control on the dialog (specified by id).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to the string of the control specified by id. The string returned is the string immediately preceeding the control in the dialog.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the item in the dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 108\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileDlg_GetExtensionDialog} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileDlg; GetExtensionDialog}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileDlg::GetExtensionDialog}}{\f8\fs22  } {\f8\fs32 HWND UIFileDlg::GetExtensionDialog(void)} {\f8\fs22 \par \par This function gets the HWND of the extension dialog associated with this common dialog. Extensions to common dialogs are implemented as child dialogs of the main dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 HWND of the extension dialog. NULL if it doesn't exist.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 127\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileSaveAsDlg_VerifyUnique} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileSaveAsDlg; VerifyUnique}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileSaveAsDlg::VerifyUnique}}{\f8\fs22  } {\f8\fs32 BOOL UIFileSaveAsDlg::VerifyUnique(void) const} {\f8\fs22 \par \par Verify the currently active dialog is the Save As dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the currently active dialog is the Save As dialog; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 158\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileOpenDlg_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileOpenDlg; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileOpenDlg::Display}}{\f8\fs22  } {\f8\fs32 HWND UIFileOpenDlg::Display(void)} {\f8\fs22 \par \par Bring up the File Open dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the File Open dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 174\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileOpenDlg_VerifyUnique} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileOpenDlg; VerifyUnique}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileOpenDlg::VerifyUnique}}{\f8\fs22  } {\f8\fs32 BOOL UIFileOpenDlg::VerifyUnique(void) const} {\f8\fs22 \par \par Verify the currently active dialog is the File Open dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the currently active dialog is the File Open dialog; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 190\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileOpenDlg_SetEditor} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileOpenDlg; SetEditor}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileOpenDlg::SetEditor}}{\f8\fs22  } {\f8\fs32 void UIFileOpenDlg::SetEditor(EOpenAs oa)} {\f8\fs22 \par \par Specify the type of editor that should be used in the File Open dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 oa} {\f8\fs22 : The type of editor to use; specified in the File Open dialog: OA_AUTO, OA_TEXT, OA_BINARY, OA_MAKEFILE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 204\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFileOpenDlg_SetReadOnly} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFileOpenDlg; SetReadOnly}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFileOpenDlg::SetReadOnly}}{\f8\fs22  } {\f8\fs32 void UIFileOpenDlg::SetReadOnly(BOOL b)} {\f8\fs22 \par \par Check or uncheck the Open File as Read Only check box in the File Open dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 b} {\f8\fs22 : TRUE to check the Open File as Read Only check box; FALSE to uncheck it.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 216\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFontDlg_VerifyUnique} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFontDlg; VerifyUnique}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFontDlg::VerifyUnique}}{\f8\fs22  } {\f8\fs32 BOOL UIFontDlg::VerifyUnique(void) const} {\f8\fs22 \par \par Determine whether the currently active dialog is the font dialog by verifying it contains a font name control, font style control, and font size control. This function is valid for the Font dialog used from the text tool in the image editors.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 234\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFontDlg_SetName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFontDlg; SetName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFontDlg::SetName}}{\f8\fs22  } {\f8\fs32 void UIFontDlg::SetName(LPCSTR szName)} {\f8\fs22 \par \par Set the font name in the Font dialog. This function is valid for the Font dialog used from the text tool in the image editors.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szName} {\f8\fs22 : A pointer to a string containing the font name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 247\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFontDlg_SetSize} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFontDlg; SetSize}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFontDlg::SetSize}}{\f8\fs22  } {\f8\fs32 void UIFontDlg::SetSize(int nSize)} {\f8\fs22 \par \par Set the font size in the Font dialog. This function is valid for the Font dialog used from the text tool in the image editors.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nSize} {\f8\fs22 : An integer containing the point size.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 258\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFontDlg_SetStyle} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFontDlg; SetStyle}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFontDlg::SetStyle}}{\f8\fs22  } {\f8\fs32 void UIFontDlg::SetStyle(int nStyle)} {\f8\fs22 \par \par Set the font style in the Font dialog. This function is valid for the Font dialog used from the text tool in the image editors.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nStyle} {\f8\fs22 : An integer containing a 1-based index into the list of styles for the selected font. This value is usually: 1 for regular style; 2 for italic style; 3 for bold style; and 4 for bold italic style.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucommdlg.cpp, 271\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICustomizeTabDlg_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICustomizeTabDlg; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICustomizeTabDlg::Display}}{\f8\fs22  } {\f8\fs32 HWND UICustomizeTabDlg::Display() } {\f8\fs22 \par \par Bring up the Customize tabbed dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the Customize dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucustdlg.cpp, 29\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICustomizeTabDlg_AddTBButton} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICustomizeTabDlg; AddTBButton}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICustomizeTabDlg::AddTBButton}}{\f8\fs22  } {\f8\fs32 int UICustomizeTabDlg::AddTBButton(int nButtonType, HWND hwndToolbar /* = NULL */)} {\f8\fs22 \par \par Add a toolbar button (nButtonType) to the toolbar indicated by hwndToolbar.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nButtonType} {\f8\fs22 : The button to add to the toolbar (this is NYI).\par \par } {\i\f8\fs22 hwndToolbar} {\f8\fs22 : The HWND of the toolbar to add the button to. NULL means create a new toolbar. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucustdlg.cpp, 48\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_AttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; AttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::AttachActive}}{\f8\fs22  } {\f8\fs32 BOOL UIDockWindow::AttachActive(void)} {\f8\fs22 \par \par Initialize this object by attaching to the active dockable window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successfully attached to the active dockable window; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::Find}}{\f8\fs22  } {\f8\fs32 BOOL UIDockWindow::Find(void)} {\f8\fs22 \par \par Find the dockable window indicated by this object. This function is useful only when used on object of a class derived from UIDockWindow.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the dockable window indicated by this object is found; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 61\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIDockWindow::IsValid(void) const} {\f8\fs22 \par \par Determine if the dockable window indicated by this object is valid.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the dockable window is valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 86\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIDockWindow::IsActive(void)} {\f8\fs22 \par \par Determine if the dockable window indicated by this object is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the dockable window is active; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 111\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_IsDockable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; IsDockable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::IsDockable}}{\f8\fs22  } {\f8\fs32 BOOL UIDockWindow::IsDockable(void)} {\f8\fs22 \par \par Determine if the dockable window is dockable or MDI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the dockable window is dockable (TRUE) or MDI.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 123\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::Close}}{\f8\fs22  } {\f8\fs32 BOOL UIDockWindow::Close(void)} {\f8\fs22 \par \par Close the dockable window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 135\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_GetID} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; GetID}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::GetID}}{\f8\fs22  } {\f8\fs32 UINT UIDockWindow::GetID(void) const} {\f8\fs22 \par \par Get the id of the dockable window indicated by this object. This function is only valid when used on object of a class derived from UIDockWindow.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The id of the dockable window, 0 if not associated with any dockable window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 157\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_ActivatePane} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; ActivatePane}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::ActivatePane}}{\f8\fs22  } {\f8\fs32 BOOL UIDockWindow::ActivatePane(LPCSTR)} {\f8\fs22 \par \par Activate a specified pane within this docked window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 167\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDockWindow_IsDocked} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDockWindow; IsDocked}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDockWindow::IsDocked}}{\f8\fs22  } {\f8\fs32 BOOL UIDockWindow::IsDocked(int nLocation = /* DW_DONT_CARE */)} {\f8\fs22 \par \par Determine if this docking window is currently docked in the position given by nLocation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the toolbar is docked; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 loc} {\f8\fs22 : The dock location of the toolbar: DW_DONT_CARE, DW_TOP, DW_BOTTOM, DW_RIGHT, DW_LEFT.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udockwnd.cpp, 209\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnection_Settings} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnection; Settings}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnection::Settings}}{\f8\fs22  } {\f8\fs32 HWND UIConnection::Settings(CString title) } {\f8\fs22 \par \par Open the Settings dialog from the Connection dialog by clicking the Settings button.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An HWND that specifies the Settings dialog.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 title} {\f8\fs22 : A CString that contains the expected title of the Settings dialog (this title changes based on the platform and connection type specified in the Connection dialog).\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconnec.cpp, 30\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnection_SetPlatform} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnection; SetPlatform}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnection::SetPlatform}}{\f8\fs22  } {\f8\fs32 int UIConnection::SetPlatform(LPCSTR platform)} {\f8\fs22 \par \par Set the platform in the Connection dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 platform} {\f8\fs22 : A pointer to a string that contains the platform to select in the Connection dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconnec.cpp, 53\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnection_SetConnection} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnection; SetConnection}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnection::SetConnection}}{\f8\fs22  } {\f8\fs32 int UIConnection::SetConnection(LPCSTR connection)} {\f8\fs22 \par \par Set the connection type in the Connection dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 connection} {\f8\fs22 : A pointer to a string that contains the connection to select in the Connection dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconnec.cpp, 77\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnection_GetPlatform} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnection; GetPlatform}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnection::GetPlatform}}{\f8\fs22  } {\f8\fs32 CString UIConnection::GetPlatform(void)} {\f8\fs22 \par \par Get the selected platform in the Connection dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the selected platform in the Connection dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconnec.cpp, 100\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnection_GetConnection} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnection; GetConnection}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnection::GetConnection}}{\f8\fs22  } {\f8\fs32 CString UIConnection::GetConnection(void)} {\f8\fs22 \par \par Get the selected connection in the Connection dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the selected connection in the Connection dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconnec.cpp, 113\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetZone} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetZone}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetZone}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetZone(LPCSTR zone) {\f8\fs22 \par \par Set the Appletalk zone in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 zone} {\f8\fs22 : A pointer to a string that contains the name of the Appletalk zone.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 28\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetMachineName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetMachineName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetMachineName}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetMachineName(LPCSTR machine_name)} {\f8\fs22 \par \par Set the machine name in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 machine_name} {\f8\fs22 : A pointer to a string that contains the machine name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 51\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetConnector} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetConnector}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetConnector}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetConnector(LPCSTR connector)} {\f8\fs22 \par \par Set the connector type in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 connector} {\f8\fs22 : A pointer to a string that contains the connector name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 74\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetBaudRate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetBaudRate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetBaudRate}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetBaudRate(LPCSTR baud_rate)} {\f8\fs22 \par \par Set the baud rate in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 baud_rate} {\f8\fs22 : A pointer to a string that contains the baud rate.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 97\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetDataBits} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetDataBits}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetDataBits}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetDataBits(LPCSTR data_bits)} {\f8\fs22 \par \par Set the number of data bits in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 data_bits} {\f8\fs22 : A pointer to a string that contains the number of data bits.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 120\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetParity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetParity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetParity}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetParity(LPCSTR parity)} {\f8\fs22 \par \par Set the parity in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 parity} {\f8\fs22 : A pointer to a string that contains the parity.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 143\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetStopBits} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetStopBits}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetStopBits}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetStopBits(LPCSTR stop_bits)} {\f8\fs22 \par \par Set the number of stop bits in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stop_bits} {\f8\fs22 : A pointer to a string that contains the stop bits.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 166\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetFlowControl} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetFlowControl}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetFlowControl}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetFlowControl(LPCSTR flow_control)} {\f8\fs22 \par \par Set the type of flow control in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 flow_control} {\f8\fs22 : A pointer to a string that contains the type of flow control.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 189\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetIPAddress} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetIPAddress}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetIPAddress}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetIPAddress(LPCSTR ip_address) {\f8\fs22 \par \par Set the IP address in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ip_address} {\f8\fs22 : A pointer to a string that contains the IP address.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 212\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_SetPassword} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; SetPassword}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::SetPassword}}{\f8\fs22  } {\f8\fs32 int UIConnectionSettings::SetPassword(LPCSTR password, CONNECTION_TYPE connection)} {\f8\fs22 \par \par Set the password in the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 password} {\f8\fs22 : A pointer to a string that contains the password.\par \par } {\i\f8\fs22 connection} {\f8\fs22 : A CONNECTION_TYPE value that specifies the type of connection: CONNECTION_APPLETALK, CONNECTION_TCP_IP.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 236\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIConnectionSettings_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIConnectionSettings; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIConnectionSettings::Close}}{\f8\fs22  } {\f8\fs32 HWND UIConnectionSettings::Close(void) {\f8\fs22 \par \par Close the Connection Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if successful; the HWND of any remaining message or dialog box otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiconset.cpp, 286\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOptionsTabDlg_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOptionsTabDlg; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOptionsTabDlg::Display}}{\f8\fs22  } {\f8\fs32 HWND UIOptionsTabDlg::Display() } {\f8\fs22 \par \par Bring up the Options tabbed dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the Options tabbed dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uioptdlg.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOptionsTabDlg_ChangeCompatility} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOptionsTabDlg; ChangeCompatility}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOptionsTabDlg::ChangeCompatility}}{\f8\fs22  } {\f8\fs32 HWND UIOptionsTabDlg::ChangeCompatility() } {\f8\fs22 \par \par Display the compatibility tab of the options dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 int\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uioptdlg.cpp, 48\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOptionsTabDlg_AddDirectory} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOptionsTabDlg; AddDirectory}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOptionsTabDlg::AddDirectory}}{\f8\fs22  } {\f8\fs32 int UIOptionsTabDlg::AddDirectory( LPCSTR szNewDir, int iDirType, int iPlatform)} {\f8\fs22 \par \par Add a directory to one of the environment variables editable on the Directories tab.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szNewDir} {\f8\fs22 : A pointer to a string containing the directory to add.\par \par } {\i\f8\fs22 iDirType} {\f8\fs22 : The environment variable to set: DIR_DIRTYPE_EXE, DIR_DIRTYPE_INC, DIR_DIRTYPE_LIB.\par \par } {\i\f8\fs22 iPlatform} {\f8\fs22 : The platform to set the environment variable for: DIR_PLATFORM_WIN32, DIR_PLATFORM_DUMMY\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uioptdlg.cpp, 85\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOptionsTabDlg_RestoreWnd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOptionsTabDlg; RestoreWnd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOptionsTabDlg::RestoreWnd}}{\f8\fs22  } {\f8\fs32 int UIOptionsTabDlg::RestoreWnd(BOOL state /* = TRUE */)} {\f8\fs22 \par \par Set the state of the 'Restore Window Layout When Opening Projects' option in the Workspace tab.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 state} {\f8\fs22 : A Boolean value that specifies the state of the option. TRUE to set it to restore the layout; FALSE to unset it. (Default value is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uioptdlg.cpp, 137\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOptionsTabDlg_SetFont} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOptionsTabDlg; SetFont}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOptionsTabDlg::SetFont}}{\f8\fs22  } {\f8\fs32 int UIOptionsTabDlg::SetFont(int FontIndex, int Size /* = 11 */, CString Category /* = NULL*/)} {\f8\fs22 \par \par Set the font in the Font tab by index. (See UIOptionsTabDlg::SetFont(LPCSTR, int, LPCSTR, LPCSTR) to set the font by name.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 FontIndex} {\f8\fs22 : An integer that specifies the 1-based index into the list of fonts.\par \par } {\i\f8\fs22 Size} {\f8\fs22 : An integer that specifies the point size of the font. This parameter is NYI. (Default value is 11.)\par \par } {\i\f8\fs22 Category} {\f8\fs22 : A CString that specifies the category to set the font for. This parameter is NYI.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uioptdlg.cpp, 159\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOptionsTabDlg_SetFont} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOptionsTabDlg; SetFont}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOptionsTabDlg::SetFont}}{\f8\fs22  } {\f8\fs32 int UIOptionsTabDlg::SetFont(LPCSTR pszFontName /*= NULL*/, int iFontSize /*= 0*/, LPCSTR pszFontStyle /*= NULL*/, LPCSTR pszCategory /*= NULL*/)} {\f8\fs22 \par \par Set the font in the Font tab by name. (See UIOptionsTabDlg::SetFont(int, int, CString) to set the font by index.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pszFontName} {\f8\fs22 : A pointer to a string that contains the name of the font. NULL means use the current font. (Default value is NULL.)\par \par } {\i\f8\fs22 iFontSize} {\f8\fs22 : An integer that specifies the point size of the font. 0 means use the current point size. (Default value is 0.)\par \par } {\i\f8\fs22 pszFontStyle} {\f8\fs22 : A pointer to a string that contains the name of the font style. NULL means use the current style. (Default value is NULL.)\par \par } {\i\f8\fs22 pszCategory} {\f8\fs22 : A pointer to a string that contains the name of the category to set the font for. NULL means use the current category. This parameter is NYI. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uioptdlg.cpp, 180\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOutput_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOutput; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOutput::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIOutput::Activate(void)} {\f8\fs22 \par \par Display the Output window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uioutput.cpp, 26\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_VerifyClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; VerifyClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::VerifyClass}}{\f8\fs22  } {\f8\fs32 BOOL UITabbedDialog::VerifyClass(void) const} {\f8\fs22 \par \par Verify that the window class of the tabbed dialog indicated by this object is correct.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the window class is correct; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 38\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_SetOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; SetOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::SetOption}}{\f8\fs22  } {\f8\fs32 INT UITabbedDialog::SetOption(INT iTab, UINT iCtrlId, UINT iNewValue) } {\f8\fs22 \par \par Set the control (iCtrlId) on tab (iTab) to the given value (iNewValue). This function is commonly called for objects of classes derived from UITabbedDialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iTab} {\f8\fs22 : The tab containing the control to set.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : The ID of the control to set.\par \par } {\i\f8\fs22 iNewValue} {\f8\fs22 : The value to set the control to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 54\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_SetOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; SetOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::SetOption}}{\f8\fs22  } {\f8\fs32 int UITabbedDialog::SetOption(INT iTab, UINT iCtrlId, LPCSTR szNewValue)} {\f8\fs22 \par \par Set the control (iCtrlId) on tab (iTab) to the given value (szNewValue). This function is commonly called for objects of classes derived from UITabbedDialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iTab} {\f8\fs22 : The tab containing the control to set.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : The ID of the control to set.\par \par } {\i\f8\fs22 szNewValue} {\f8\fs22 : A pointer to a string containing the value to set the control to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 122\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_GetOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; GetOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::GetOption}}{\f8\fs22  } {\f8\fs32 int UITabbedDialog::GetOption(INT iTab, UINT iCtrlId)} {\f8\fs22 \par \par Get the value of the control (iCtrlId) on tab (iTab). This function is commonly called for objects of classes derived from UITabbedDialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The value of the control, if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iTab} {\f8\fs22 : The tab containing the control to get.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : The ID of the control to get.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 173\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_GetOptionStr} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; GetOptionStr}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::GetOptionStr}}{\f8\fs22  } {\f8\fs32 LPCSTR UITabbedDialog::GetOptionStr(INT iTab, UINT iCtrlId)} {\f8\fs22 \par \par Get the value of the control (iCtrlId) on tab (iTab). This function is commonly called for objects of classes derived from UITabbedDialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string containing the value of the control, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iTab} {\f8\fs22 : The tab containing the control to get.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : The ID of the control to get.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 219\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_ShowPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; ShowPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::ShowPage}}{\f8\fs22  } {\f8\fs32 HWND UITabbedDialog::ShowPage(int iCtrlID, int iTabCnt)} {\f8\fs22 \par \par Activate the tab on a tabbed dialog that contains the control given by iCtrlID.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the tab on the tabbed dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlID} {\f8\fs22 : The ID of a control on the desired tab.\par \par } {\i\f8\fs22 iTabCnt} {\f8\fs22 : The position number of the tab.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 268\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_ShowPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; ShowPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::ShowPage}}{\f8\fs22  } {\f8\fs32 HWND UITabbedDialog::ShowPage(LPCSTR szTabCaption)} {\f8\fs22 \par \par Activate the tab on a tabbed dialog that has the caption specified by szTabCaption.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the tab on the tabbed dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szTabCaption} {\f8\fs22 : A pointer to a string that contains the caption of the tab.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 315\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_GetCurrentPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; GetCurrentPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::GetCurrentPage}}{\f8\fs22  } {\f8\fs32 HWND UITabbedDialog::GetCurrentPage() const} {\f8\fs22 \par \par Get the currently displayed tab on a tabbed dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the current tab on the tabbed dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 348\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_IsControlInCurrentPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; IsControlInCurrentPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::IsControlInCurrentPage}}{\f8\fs22  } {\f8\fs32 BOOL UITabbedDialog::IsControlInCurrentPage(UINT iCtrlId) const} {\f8\fs22 \par \par Determine if a control is on the currently displayed tab of a tabbed dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the control is on the current tab; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : The ID of the control to search for.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 392\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_GetLabel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; GetLabel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::GetLabel}}{\f8\fs22  } {\f8\fs32 LPCSTR UITabbedDialog::GetLabel(UINT nCtrlId) const} {\f8\fs22 \par \par Get the label for the control specified by nCtrlId. This function is overridden for tabbed dialogs because controls are often contained within subdialogs.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string containing the label of the control.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nCtrlId} {\f8\fs22 : The ID of the control to retrieve the label for.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 424\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_ActivateNextPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; ActivateNextPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::ActivateNextPage}}{\f8\fs22  } {\f8\fs32 HWND UITabbedDialog::ActivateNextPage( BOOL bRight /* TRUE */)} {\f8\fs22 \par \par Activate the next or previous tab in a tabbed dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the tab on the tabbed dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bRight} {\f8\fs22 : TRUE to activate the tab to the right (next); FALSE to activate the tab to the left (previous). (Default is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 452\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_ShowNextPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; ShowNextPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::ShowNextPage}}{\f8\fs22  } {\f8\fs32 HWND UITabbedDialog::ShowNextPage(int iCtrlID)} {\f8\fs22 \par \par Display the next tab in a tabbed dialog that contains the control specified by iCtrlID.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the tab on the tabbed dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlID} {\f8\fs22 : The ID of the control that identifies the tab.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 470\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITabbedDialog_GetDlgItem} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITabbedDialog; GetDlgItem}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITabbedDialog::GetDlgItem}}{\f8\fs22  } {\f8\fs32 HWND UITabbedDialog::GetDlgItem(UINT id) const} {\f8\fs22 \par \par Get the HWND of a window (control) on the currently active tab in a tabbed dialog. This function is overridden for tabbed dialogs because windows (controls) are often contained within subdialogs.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the window (control).\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The ID of the window (control) to find.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitabdlg.cpp, 499\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBDialog_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBDialog; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBDialog::Close}}{\f8\fs22  } {\f8\fs32 HWND UIWBDialog::Close(void)} {\f8\fs22 \par \par Close an IDE dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if the dialog closed successfully; the HWND of a message box otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiwbdlg.cpp, 33\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBDialog_Help} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBDialog; Help}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBDialog::Help}}{\f8\fs22  } {\f8\fs32 HWND UIWBDialog::Help(void)} {\f8\fs22 \par \par Bring up help from an IDE dialog. This function clicks the Help button on the dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the help window, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiwbdlg.cpp, 55\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBMessageBox_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBMessageBox; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBMessageBox::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIWBMessageBox::IsValid(void) const} {\f8\fs22 \par \par Determine if the active message box is a valid IDE message box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the message box is valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiwbmsg.cpp, 35\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMainFrm_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMainFrm; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMainFrm::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIMainFrm::IsValid(void) const} {\f8\fs22 \par \par Determine if the IDE's main frame window is a valid window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the main frame is valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umainfrm.cpp, 33\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMainFrm_DoCommand} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMainFrm; DoCommand}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMainFrm::DoCommand}}{\f8\fs22  } {\f8\fs32 BOOL UIMainFrm::DoCommand(UINT id, DC_METHOD method)} {\f8\fs22 \par \par Perform a command in the IDE. Most of the commands handled by this function are menu commands, which can be performed either by sending a message, selecting the menu items, using the menu mnemonics, or using the keyboard accelerator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the command was performed; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The ID of the command to perform. See cmdarrray.cpp for the set of valid commands.\par \par } {\i\f8\fs22 method} {\f8\fs22 : The method by which to perform the action: DC_MESSAGE, DC_MENU, DC_MNEMONIC, DC_ACCEL.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umainfrm.cpp, 45\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMainFrm_IsCommandEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMainFrm; IsCommandEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMainFrm::IsCommandEnabled}}{\f8\fs22  } {\f8\fs32 BOOL UIMainFrm::IsCommandEnabled(UINT id)} {\f8\fs22 \par \par Determine if the specified command is enabled in the IDE.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the command is enabled; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The ID of the command to check. See cmdarrray.cpp for the set of valid commands.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umainfrm.cpp, 133\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProperties_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProperties; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProperties::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIProperties::IsValid(void) const} {\f8\fs22 \par \par Determine if the property page is valid by checking the window handle and the title of the property page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the property page is valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 upropwnd.cpp, 30\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProperties_GetCurrentPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProperties; GetCurrentPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProperties::GetCurrentPage}}{\f8\fs22  } {\f8\fs32 HWND UIProperties::GetCurrentPage(void) const} {\f8\fs22 \par \par Get the HWND of the current page displayed in the property page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the currently displayed page in the property page.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 upropwnd.cpp, 44\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProperties_GetTitle} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProperties; GetTitle}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProperties::GetTitle}}{\f8\fs22  } {\f8\fs32 CString UIProperties::GetTitle(void) const} {\f8\fs22 \par \par Get the title of the property page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the title of the property page.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 upropwnd.cpp, 64\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProperties_GetPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProperties; GetPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProperties::GetPage}}{\f8\fs22  } {\f8\fs32 CString UIProperties::GetPage(void) const} {\f8\fs22 \par \par Get the title of the current page in the property page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the title of the current page in the property page.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 upropwnd.cpp, 76\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProperties_SetPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProperties; SetPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProperties::SetPage}}{\f8\fs22  } {\f8\fs32 BOOL UIProperties::SetPage(LPCSTR szPage)} {\f8\fs22 \par \par Activate the page specified by szPage in the property page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szPage} {\f8\fs22 : A pointer to a string containing the title of the page the activate.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 upropwnd.cpp, 88\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProperties_GetLabel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProperties; GetLabel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProperties::GetLabel}}{\f8\fs22  } {\f8\fs32 CString UIProperties::GetLabel(UINT id) const} {\f8\fs22 \par \par Get the label of a control in the property page. This function is overridden for property pages because a page within a property page is a child window of the property page and we need to search the child for the control.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the label for the control\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The ID of the control to get the label for.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 upropwnd.cpp, 110\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProperties_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProperties; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProperties::Close}}{\f8\fs22  } {\f8\fs32 BOOL UIProperties::Close(void)} {\f8\fs22 \par \par Close the property page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the property page is closed; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 upropwnd.cpp, 120\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UITBarDialog_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UITBarDialog; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UITBarDialog::Display}}{\f8\fs22  } {\f8\fs32 int UITBarDialog::Display(void)} {\f8\fs22 \par \par Bring up the Toolbars dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the Toolbars dialog is displayed; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 utbardlg.cpp, 27\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIToolbar_DisplayTBDlg} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIToolbar; DisplayTBDlg}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIToolbar::DisplayTBDlg}}{\f8\fs22  } {\f8\fs32 int UIToolbar::DisplayTBDlg(void)} {\f8\fs22 \par \par Bring up the Toolbars dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the Toolbars dialog is displayed; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 utoolbar.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIToolbar_ShowTB} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIToolbar; ShowTB}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIToolbar::ShowTB}}{\f8\fs22  } {\f8\fs32 int UIToolbar::ShowTB(int nTbId, BOOL bShow)} {\f8\fs22 \par \par Display or hide the toolbar specified by nTbId.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nTbId} {\f8\fs22 : The id of the toolbar: IDTB_SUSHI_STANDARD, IDTB_SUSHI_EDIT, IDTB_VRES_RESOURCE, IDTB_VCPP_DEBUG, IDTB_VCPP_BROWSE, IDTB_VRES_DIALOG, IDDW_CONTROLS, IDDW_GRAPHICS, IDDW_COLORS, IDDW_TEXTTOOL, IDTB_VPROJ_BUILD.\par \par } {\i\f8\fs22 bShow} {\f8\fs22 : TRUE to show the toolbar; FALSE to hide it.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 utoolbar.cpp, 46\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIToolbar_GetTBText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIToolbar; GetTBText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIToolbar::GetTBText}}{\f8\fs22  } {\f8\fs32 CString UIToolbar::GetTBText(int nTbId)} {\f8\fs22 \par \par Get the title of the toolbar.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the title of the toolbar.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nTbId} {\f8\fs22 : The id of the toolbar: IDTB_SUSHI_STANDARD, IDTB_SUSHI_EDIT, IDTB_VRES_RESOURCE, IDTB_VCPP_DEBUG, IDTB_VCPP_BROWSE, IDTB_VRES_DIALOG, IDDW_CONTROLS, IDDW_GRAPHICS, IDDW_COLORS, IDDW_TEXTTOOL, IDTB_VPROJ_BUILD.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 utoolbar.cpp, 111\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIToolbar_IsDocked} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIToolbar; IsDocked}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIToolbar::IsDocked}}{\f8\fs22  } {\f8\fs32 BOOL UIToolbar::IsDocked(HWND hWnd, int nLocation)} {\f8\fs22 \par \par Determine if the toolbar specified by the HWND is docked in the position given by nLocation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the toolbar is docked; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hWnd} {\f8\fs22 : The handle of the toolbar.\par \par } {\i\f8\fs22 nLocation} {\f8\fs22 : The dock location of the toolbar: DW_TOP, DW_BOTTOM, DW_RIGHT, DW_LEFT.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 utoolbar.cpp, 150\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::Find}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::Find(void)} {\f8\fs22 \par \par Find the IDE's frame window and attach to it, if found.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the IDE's frame window is successfully found; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 100\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::IsValid(void) const} {\f8\fs22 \par \par Determine if the IDE's frame window is valid by checking the window handle, the title of the window, and the window class.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the frame window is valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 121\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_IsDebug} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; IsDebug}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::IsDebug}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::IsDebug(void)} {\f8\fs22 \par \par Determine if the IDE is a debug build or retail build. (This function is NYI.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the IDE is a debug build; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 142\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::IsActive(void)} {\f8\fs22 \par \par Determine whether the IDE is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the IDE is active; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 152\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_IsAlert} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; IsAlert}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::IsAlert}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::IsAlert(void)} {\f8\fs22 \par \par Determine if an alert box (message or dialog) is being displayed by the IDE. (This function is NYI.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if an alert is displayed; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 166\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_CreateNewFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; CreateNewFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::CreateNewFile}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::CreateNewFile(LPCSTR szFileType)} {\f8\fs22 \par \par Create a new file in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the window that contains the new file.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileType} {\f8\fs22 : A pointer to a string containing the type of the new file to create. Valid file types are listed in the File New dialog in the IDE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 177\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_OpenFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; OpenFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::OpenFile}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::OpenFile(LPCSTR szFileName, LPCSTR szChDir /*=NULL*/)} {\f8\fs22 \par \par Open a file in the IDE.  NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the window that contains the opened file.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the filename of the file to open.\par \par } {\i\f8\fs22 szChDir} {\f8\fs22 : A pointer to a string that contains the path the file. NULL means the path is given with the filename or use the current working directory. (Default is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 216\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_SaveFileAs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; SaveFileAs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::SaveFileAs}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::SaveFileAs(LPCSTR szFileName, BOOL bOverwrite /*=TRUE*/)} {\f8\fs22 \par \par Save a file in the IDE with a new name.  NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the filename.\par \par } {\i\f8\fs22 bOverwrite} {\f8\fs22 : TRUE to overwrite an existing file (if one exists); FALSE to not overwrite. (Default is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 254\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_SaveAll} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; SaveAll}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::SaveAll}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::SaveAll(int intWaitInMilliSecs /* 0 */)} {\f8\fs22 \par \par selects the File.SaveAll menu item and waits for a specified number of milliseconds.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 294\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_CloseProject} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; CloseProject}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::CloseProject}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::CloseProject(void)} {\f8\fs22 \par \par Close a project window in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 308\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_CloseAllWindows} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; CloseAllWindows}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::CloseAllWindows}}{\f8\fs22  } {\f8\fs32 void UIWBFrame::CloseAllWindows(void)} {\f8\fs22 \par \par Close all open editor windows in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 331\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetActiveEditor} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetActiveEditor}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetActiveEditor}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::GetActiveEditor(void)} {\f8\fs22 \par \par Get the HWND of the active editor in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the active editor, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 356\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_SetActiveEditor} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; SetActiveEditor}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::SetActiveEditor}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::SetActiveEditor(HWND hwndEditor)} {\f8\fs22 \par \par Set the active editor in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwndEditor} {\f8\fs22 : The HWND of the window to make the active editor.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 375\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetToolbar} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetToolbar}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetToolbar}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::GetToolbar(int nTbId)} {\f8\fs22 \par \par Get the HWND of the specified toolbar. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the toolbar, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nTbId} {\f8\fs22 : The id of the toolbar: IDTB_SUSHI_STANDARD, IDTB_SUSHI_EDIT, IDTB_VRES_RESOURCE, IDTB_VCPP_DEBUG, IDTB_VCPP_BROWSE, IDTB_VRES_DIALOG, IDDW_CONTROLS, IDDW_GRAPHICS, IDDW_COLORS, IDDW_TEXTTOOL, IDTB_VPROJ_BUILD.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 387\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_ShowDockWindow} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; ShowDockWindow}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::ShowDockWindow}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::ShowDockWindow(UINT id, BOOL bShow /*=TRUE*/) // REVIEW (EnriqueP): Move to CWorkSpace} {\f8\fs22 \par \par Display or hide the specified dockable window. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the dockable window, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the dockable window: IDW_OUTPUT_WIN\par \par } {\i\f8\fs22 bShow} {\f8\fs22 : TRUE to show the window; FALSE to hide it. (Default is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 400\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_IsWindowDocked} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; IsWindowDocked}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::IsWindowDocked}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::IsWindowDocked(HWND hWnd, int nLocation)} {\f8\fs22 \par \par Determine if a dockable window is docked. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the window is docked; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hWnd} {\f8\fs22 : The HWND of the dockable window.\par \par } {\i\f8\fs22 nLocation} {\f8\fs22 : The location of the dockable window: DW_TOP, DW_BOTTOM, DW_LEFT, DW_RIGHT, DW_DONT_CARE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 459\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetEditorCurPos} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetEditorCurPos}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetEditorCurPos}}{\f8\fs22  } {\f8\fs32 int UIWBFrame::GetEditorCurPos( EGECP x, HWND hwndEditor /*=NULL*/ )} {\f8\fs22 \par \par Get the line or column position of the caret in the editor (depending on x). NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The line or column position of the caret in the window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 x} {\f8\fs22 : Value indicating whether to get the line position or column position: GECP_LINE, GECP_COLUMN.\par \par } {\i\f8\fs22 hwndEditor} {\f8\fs22 : The HWND of the window to get line or column position for. NULL specifies the active editor window. (Default is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 522\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_ExportResource} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; ExportResource}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::ExportResource}}{\f8\fs22  } {\f8\fs32 void UIWBFrame::ExportResource(LPCSTR szFileName, BOOL bOverwrite /*=FALSE*/)} {\f8\fs22 \par \par Export a resource from the IDE> NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the filename to save the exported resource under.\par \par } {\i\f8\fs22 bOverwrite} {\f8\fs22 : A value that indicates whether to overwrite an existing file or not. TRUE to overwrite; FALSE to not. (Default is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 539\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_ShowPropPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; ShowPropPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::ShowPropPage}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::ShowPropPage(BOOL bShow)} {\f8\fs22 \par \par Display or hide the property page for the active window. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the property page for the active window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bShow} {\f8\fs22 : A Boolean value that indicates whether to show or hide the property page. TRUE to show it; FALSE to hide it.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 573\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetProperty}}{\f8\fs22  } {\f8\fs32 CString UIWBFrame::GetProperty(int nProp)} {\f8\fs22 \par \par Get the property of the item specified by nProp. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the property of the item.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nProp} {\f8\fs22 : The id of the item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 598\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetProjPath} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetProjPath}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetProjPath}}{\f8\fs22  } {\f8\fs32 CString UIWBFrame::GetProjPath(void)} {\f8\fs22 \par \par Get the current project's path. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the path the current project.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 616\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_SelectProjItem} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; SelectProjItem}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::SelectProjItem}}{\f8\fs22  } {\f8\fs32 void UIWBFrame::SelectProjItem(int item, LPCSTR szName)} {\f8\fs22 \par \par Select the item specified. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 item} {\f8\fs22 : The item to select.\par \par } {\i\f8\fs22 szName} {\f8\fs22 : The name of the item to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 636\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetItemProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetItemProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetItemProperty}}{\f8\fs22  } {\f8\fs32 CString UIWBFrame::GetItemProperty(int nProp)} {\f8\fs22 \par \par Get the property of any item. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the property.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nProp} {\f8\fs22 : The id of the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 648\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_CanWeBuild} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; CanWeBuild}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::CanWeBuild}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::CanWeBuild(void )} {\f8\fs22 \par \par Determine whether the IDE is able to build a project or not. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the IDE is able to build or not. TRUE if the IDE can build; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 667\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetErrorCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetErrorCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetErrorCount}}{\f8\fs22  } {\f8\fs32 int UIWBFrame::GetErrorCount(void)} {\f8\fs22 \par \par Get the number of errors from the last build. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A count of the number of errors from the last build.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 679\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetWarningCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetWarningCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetWarningCount}}{\f8\fs22  } {\f8\fs32 int UIWBFrame::GetWarningCount(void)} {\f8\fs22 \par \par Get the number of warnings from the last build. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A count of the number of warnings from the last build.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 691\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_ClassWizard} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; ClassWizard}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::ClassWizard}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::ClassWizard(void)} {\f8\fs22 \par \par Display the ClassWizard dialog. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the ClassWizard dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 703\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_ProjectProperties} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; ProjectProperties}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::ProjectProperties}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::ProjectProperties(void)} {\f8\fs22 \par \par Display the project properties. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 717\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_Options} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; Options}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::Options}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::Options(void)} {\f8\fs22 \par \par Display the Options dialog in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the Options dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 730\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetStatusBar} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetStatusBar}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetStatusBar}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::GetStatusBar(void)} {\f8\fs22 \par \par Get the HWND of the IDE's status bar. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the status bar, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 743\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetStatusText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetStatusText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetStatusText}}{\f8\fs22  } {\f8\fs32 CString UIWBFrame::GetStatusText(void)} {\f8\fs22 \par \par Get the text from the IDE's status bar. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the text in the status bar.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 754\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_WaitForStatusText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; WaitForStatusText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::WaitForStatusText}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::WaitForStatusText(LPCSTR sz, DWORD dwMilliSeconds, BOOL bExact /*=TRUE*/)} {\f8\fs22 \par \par Wait for the given text (sz) to appear in the status bar. This function will wait until the text is displayed in the status bar or the number of milliseconds given in dwMilliSeconds have elapsed. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the text is found in the status bar before dwMilliSeconds elapses; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string containing the text to wait for in the status bar.\par \par } {\i\f8\fs22 dwMilliSeconds} {\f8\fs22 : The number of milliseconds to wait for the text to appear.\par \par } {\i\f8\fs22 bExact} {\f8\fs22 : TRUE if the text in status bar must match the text in sz exactly; FALSE for a partial patch.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 768\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_VerifyFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; VerifyFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::VerifyFile}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::VerifyFile(LPCSTR szfile)} {\f8\fs22 \par \par Determine whether the active editor has the given filename in its title. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the active editor has the given filename. TRUE if it does; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szfile} {\f8\fs22 : A pointer to a string containing the filename expected in the active editor.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 805\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_VerifyCaretPosition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; VerifyCaretPosition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::VerifyCaretPosition}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::VerifyCaretPosition( int nRow, int nCol, LPCSTR szErrTxt )} {\f8\fs22 \par \par Verify the caret position in the active window. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the caret position matches the given row and column; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nRow} {\f8\fs22 : The expected row for the caret.\par \par } {\i\f8\fs22 nCol} {\f8\fs22 : The expected column for the caret.\par \par } {\i\f8\fs22 szErrTxt} {\f8\fs22 : A pointer to a string containing the text to emit to log if the caret position doesn't match the given row and column.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 822\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_FVerifyClipboardText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; FVerifyClipboardText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::FVerifyClipboardText}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::FVerifyClipboardText( CString stMatch )} {\f8\fs22 \par \par Determine whether the text in the clipboard matches the given string. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the text in the clipboard matches the given string. TRUE if it does; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stMatch} {\f8\fs22 : A CString that contains the text expected in the clipboard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 848\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_FVerifySelection} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; FVerifySelection}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::FVerifySelection}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::FVerifySelection( CString stTest )} {\f8\fs22 \par \par Determine whether the selection in the active editor matches the given string. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the selection in the active editor matches the given string. TRUE if it does; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stTest} {\f8\fs22 : A CString that contains the text expected in the selection.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 868\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_FVerifyLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; FVerifyLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::FVerifyLine}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::FVerifyLine( CString stTest )} {\f8\fs22 \par \par Determine whether the current line in the active editor matches the given string. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current line in the active editor matches the given string. TRUE if it does; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stTest} {\f8\fs22 : A CString that contains the text expected in the current line.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 894\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_AddTBButton} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; AddTBButton}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::AddTBButton}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::AddTBButton(int nButtonType, HWND hwndToolbar /* = NULL */)} {\f8\fs22 \par \par Add a toolbar button (nButtonType) to the toolbar indicated by hwndToolbar. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nButtonType} {\f8\fs22 : The button to add to the toolbar (this is NYI).\par \par } {\i\f8\fs22 hwndToolbar} {\f8\fs22 : The HWND of the toolbar to add the button to. NULL means create a new toolbar. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 908\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_SetToolbarCombo} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; SetToolbarCombo}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::SetToolbarCombo}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::SetToolbarCombo(LPCSTR str /*NULL*/)} {\f8\fs22 \par \par Set the text in the standard toolbar's combo box. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 str} {\f8\fs22 : A pointer to a string that contains the text to put in the toolbar's combo box.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 935\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_Break} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; Break}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::Break}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::Break(int WAIT)} {\f8\fs22 \par \par Select Break mode while debugging in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : An integer indicating the amount of time to wait for Break state in the IDE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 949\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_Go} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; Go}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::Go}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::Go(int WAIT)} {\f8\fs22 \par \par Start debugging the current project or run from a breakpoint. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : An integer indicating the amount of time to wait for Run state in the IDE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 962\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_Restart} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; Restart}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::Restart}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::Restart(int WAIT)} {\f8\fs22 \par \par Restart the current debugging session in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : An integer indicating the amount of time to wait for Break state after restarting.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 989\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_StopDebugging} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; StopDebugging}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::StopDebugging}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::StopDebugging(int WAIT)} {\f8\fs22 \par \par Stop the current debugging session in the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : An integer indicating the amount of time to wait for the debugging session to end.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1016\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_StepInto} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; StepInto}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::StepInto}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::StepInto(int WAIT)} {\f8\fs22 \par \par Perform a step into in the current debugging session (or start debugging the current project, if not already). NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : An integer indicating the amount of time to wait for Break state in the IDE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1029\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_StepOver} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; StepOver}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::StepOver}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::StepOver(int WAIT)} {\f8\fs22 \par \par Perform a step over in the current debugging session (or start debugging the current project, if not already). NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : An integer indicating the amount of time to wait for Break state in the IDE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1056\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_StepOut} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; StepOut}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::StepOut}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::StepOut(int WAIT)} {\f8\fs22 \par \par Perform a step out in the current debugging session. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : An integer indicating the amount of time to wait for Break state in the IDE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1083\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_StepToCursor} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; StepToCursor}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::StepToCursor}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::StepToCursor(int WAIT)} {\f8\fs22 \par \par Perform a step to cursor in the current debugging session (or start debugging the current project, if not already). NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : An integer indicating the amount of time to wait for Break state in the IDE.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1102\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_ToggleBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; ToggleBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::ToggleBreakpoint}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::ToggleBreakpoint(void)} {\f8\fs22 \par \par Toggle a breakpoint at the current line in the active editor. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1139\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_SetNextStatement} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; SetNextStatement}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::SetNextStatement}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::SetNextStatement(void)} {\f8\fs22 \par \par Set the next statement to be executed in the debugger to the current line in the current editor. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1150\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetIDEState} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetIDEState}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetIDEState}}{\f8\fs22  } {\f8\fs32 UINT UIWBFrame::GetIDEState(void)} {\f8\fs22 \par \par Get the state of the IDE. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An bitfield representing the state of the IDE: ST_EXISTS | ST_ACTIVE | ST_MIN | ST_MAX | ST_RES | ST_NODEBUG | ST_DEBUGBREAK | ST_DEBUGRUN | ST_BUILDING.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1171\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_Wait} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; Wait}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::Wait}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::Wait(int option, BOOL bCheckDebuggeeWindow /*TRUE*/)} {\f8\fs22 \par \par Wait for the IDE debugger to be in a known state. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 option} {\f8\fs22 : An integer that indicates the type of wait: 0 (no wait), WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1227\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_WaitForBreak} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; WaitForBreak}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::WaitForBreak}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::WaitForBreak(void)} {\f8\fs22 \par \par Wait for the IDE to be in Break state. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1291\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_WaitForTermination} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; WaitForTermination}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::WaitForTermination}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::WaitForTermination(void)} {\f8\fs22 \par \par Wait for the IDE to terminate the current debugger session. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1421\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_WaitForRun} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; WaitForRun}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::WaitForRun}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::WaitForRun(void)} {\f8\fs22 \par \par Wait for the IDE to be in Run state. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1466\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_WaitForException} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; WaitForException}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::WaitForException}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::WaitForException(void)} {\f8\fs22 \par \par Wait for the IDE to catch an exception while debugging. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1502\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_WaitForCodedBreak} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; WaitForCodedBreak}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::WaitForCodedBreak}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::WaitForCodedBreak(void)} {\f8\fs22 \par \par This function waits for (up to 1 minute) and ok's a coded break notification msg box (ie. _int 3 for x86, Debugger() for mac)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 returns TRUE if the msg box comes up within 1 minute, FALSE if not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1521\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_BuildProject} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; BuildProject}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::BuildProject}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::BuildProject(void)} {\f8\fs22 \par \par Build the current project. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1539\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_DeleteProject} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; DeleteProject}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::DeleteProject}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::DeleteProject(LPCSTR szProjName, LPCSTR szDir)} {\f8\fs22 \par \par Delete the project with the name szProjName. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szProjName} {\f8\fs22 : A pointer to a string containing the name of the project to delete.\par \par } {\i\f8\fs22 szDir} {\f8\fs22 : A pointer to a string containing the project's directory. NULL means use the current directory.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1556\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_VerifyProjectRan} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; VerifyProjectRan}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::VerifyProjectRan}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::VerifyProjectRan(LPCSTR szProject)} {\f8\fs22 \par \par Determine if the current project ran by checking the active message box for the string "exit code 0." NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szProject} {\f8\fs22 : A pointer to a string containing the name of the project.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1583\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_VerifySubstringAtLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; VerifySubstringAtLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::VerifySubstringAtLine}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::VerifySubstringAtLine( LPCSTR stSubstring, BOOL nCase /* FALSE */)} {\f8\fs22 \par \par Determine if the given string (stSubString) is contained within the current line in the current editor. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stSubString} {\f8\fs22 : A pointer to a string that contains the substring to search for.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1602\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetMemoryWidth} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetMemoryWidth}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetMemoryWidth}}{\f8\fs22  } {\f8\fs32 int UIWBFrame::GetMemoryWidth(void)} {\f8\fs22 \par \par Get the width of the memory window. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer containing the width of the memory window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1655\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetMemoryFormat} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetMemoryFormat}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetMemoryFormat}}{\f8\fs22  } {\f8\fs32 MEM_FORMAT UIWBFrame::GetMemoryFormat(void)} {\f8\fs22 \par \par Get the format of the memory window. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A MEM_FORMAT value containing the format of the memory window: MEM_FORMAT_ASCII, MEM_FORMAT_WCHAR, MEM_FORMAT_BYTE, MEM_FORMAT_SHORT, MEM_FORMAT_SHORT_HEX, MEM_FORMAT_SHORT_UNSIGNED, MEM_FORMAT_LONG, MEM_FORMAT_LONG_HEX, MEM_FORMAT_LONG_UNSIGNED, MEM_FORMAT_REAL, MEM_FORMAT_REAL_LONG.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1667\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_SetMemoryWidth} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; SetMemoryWidth}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::SetMemoryWidth}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::SetMemoryWidth(int width)} {\f8\fs22 \par \par Set the width of the memory window. This function is NYI. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 width} {\f8\fs22 : An integer containing the width to set the memory window to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1679\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_SetMemoryFormat} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; SetMemoryFormat}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::SetMemoryFormat}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::SetMemoryFormat(MEM_FORMAT format) {\f8\fs22 \par \par Set the format of the memory window. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 format} {\f8\fs22 : A MEM_FORMAT value specifying the format of the memory window: MEM_FORMAT_ASCII, MEM_FORMAT_WCHAR, MEM_FORMAT_BYTE, MEM_FORMAT_SHORT, MEM_FORMAT_SHORT_HEX, MEM_FORMAT_SHORT_UNSIGNED, MEM_FORMAT_LONG, MEM_FORMAT_LONG_HEX, MEM_FORMAT_LONG_UNSIGNED, MEM_FORMAT_REAL, MEM_FORMAT_REAL_LONG.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1692\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_WaitOnWndWithCtrl} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; WaitOnWndWithCtrl}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::WaitOnWndWithCtrl}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::WaitOnWndWithCtrl(INT ID, DWORD dwMillSec )} {\f8\fs22 \par \par Wait for a window that has a control with the given ID on it. This function will wait up to dwMillSec milliseconds. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if the window was found within the specified time; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ID} {\f8\fs22 : The id of the control to wait for.\par \par } {\i\f8\fs22 dwMillSec} {\f8\fs22 : The number of milliseconds to wait for the window with the control.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1711\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_FileOpenDlg} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; FileOpenDlg}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::FileOpenDlg}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::FileOpenDlg(void)} {\f8\fs22 \par \par Open the File Open dialog. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the File Open dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1721\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_FileSaveAsDlg} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; FileSaveAsDlg}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::FileSaveAsDlg}}{\f8\fs22  } {\f8\fs32 HWND UIWBFrame::FileSaveAsDlg(void)} {\f8\fs22 \par \par Open the File Save As dialog. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the File Save As dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1734\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_GetPcodeSwitch} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; GetPcodeSwitch}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::GetPcodeSwitch}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::GetPcodeSwitch(void)} {\f8\fs22 \par \par Get the value of the CAFE PCode switch. NOTE: This function is obsolete; use an applicable function from the CO class that represents the editor you wish to use.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value: TRUE if the switch is set; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1747\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWBFrame_CheckForFindLocalModuleDlgs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWBFrame; CheckForFindLocalModuleDlgs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWBFrame::CheckForFindLocalModuleDlgs}}{\f8\fs22  } {\f8\fs32 BOOL UIWBFrame::CheckForFindLocalModuleDlgs(void)} {\f8\fs22 \par \par this function cancels any Find Local Module dlgs that come up after starting debugging (used only for win32s).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 void\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uwbframe.cpp, 1766\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__GetLocString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} GetLocString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} GetLocString}}{\f8\fs22  } {\f8\fs32 CString GetLocString(UINT id, int nLang /*=-1*/)} {\f8\fs22 \par \par Get a pointer to a localized string with the given id and language.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the localized string.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : An integer that contains the id of the string to retrieve. The list of valid ids is in wbus.rc.\par \par } {\i\f8\fs22 nLang} {\f8\fs22 : An integer that contains the language of the string. -1 for the current language; CAFE_LANG_ENGLISH for English; CAFE_LANG_JAPANESE for Japanese. (The default value is -1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 wbutil.cpp, 37\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__GetUserTargetPlatforms} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} GetUserTargetPlatforms}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} GetUserTargetPlatforms}}{\f8\fs22  } {\f8\fs32 int GetUserTargetPlatforms(void) {\f8\fs22 \par \par Get the current platform.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An value indicating the current platform: PLATFORM_WIN32_X86, PLATFORM_WIN32S_X86, PLATFORM_MAC_68K, PLATFORM_MAC_PPC, PLATFORM_WIN32_MIPS, PLATFORM_WIN32_ALPHA, PLATFORM_WIN32_PPC.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 wbutil.cpp, 73\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Create} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Create}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Create}}{\f8\fs22  } {\f8\fs32 int COFile::Create(UINT idsType, LPCSTR szSaveAs /*=NULL*/)} {\f8\fs22 \par \par Create a new file and corresponding editor in the IDE.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 idsType} {\f8\fs22 : The type of file and editor to create: IDSS_NEW_SOURCE, IDSS_NEW_PROJECT, IDSS_NEW_RC, IDSS_NEW_RCT, IDSS_NEW_BINARY, IDSS_NEW_BITMAP, IDSS_NEW_ICON.\par \par } {\i\f8\fs22 szSaveAs} {\f8\fs22 : A pointer to a string that contains the name to save the new file with. NULL indicates don't save (no name specified). (The default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 40\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Open} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Open}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Open}}{\f8\fs22  } {\f8\fs32 int COFile::Open(LPCSTR szFileName, LPCSTR szChDir /*=NULL*/, EOpenAs oa /*=OA_AUTO*/)} {\f8\fs22 \par \par Open a file and its corresponding editor in the IDE.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the name of the file to open.\par \par } {\i\f8\fs22 szChDir} {\f8\fs22 : A pointer to a string that contains the path to the file. NULL if szFileName includes a path or szFileName is in the current directory). (The default value is NULL.)\par \par } {\i\f8\fs22 oa} {\f8\fs22 : A value that indicates the editor to use when opening the file: OA_AUTO, OA_TEXT, OA_BINARY, OA_MAKEFILE. (The default value is OA_AUTO.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 82\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Save} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Save}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Save}}{\f8\fs22  } {\f8\fs32 int COFile::Save(void)} {\f8\fs22 \par \par Save the file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 146\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_SaveAs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; SaveAs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::SaveAs}}{\f8\fs22  } {\f8\fs32 int COFile::SaveAs(LPCSTR szFileName, BOOL bOverWrite /*=FALSE*/)} {\f8\fs22 \par \par Save the file with the name given in szFileName.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the filename to use.\par \par } {\i\f8\fs22 bOverWrite} {\f8\fs22 : A Boolean value that indicates whether to overwrite an existing file (TRUE) or not. (The default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 172\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Close}}{\f8\fs22  } {\f8\fs32 int COFile::Close(BOOL bSaveChanges /* = FALSE */)} {\f8\fs22 \par \par Close the file and its associated editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bSaveChanges} {\f8\fs22 : A Boolean value that indicates whether to save changes (TRUE) or not before closing the file. (The default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 227\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_GetFileName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; GetFileName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::GetFileName}}{\f8\fs22  } {\f8\fs32 LPCSTR COFile::GetFileName(void)} {\f8\fs22 \par \par Get the filename of this file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the filename of this file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 272\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Cut} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Cut}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Cut}}{\f8\fs22  } {\f8\fs32 LPCSTR COFile::Cut(CString* pstr /*=NULL*/)} {\f8\fs22 \par \par Perform a cut action in the editor associated with this file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the text placed in the clipboard as a result of the cut.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pstr} {\f8\fs22 : A pointer to a CString that will contain the text placed in the clipboard as a result of the cut operation. If this parameter is NULL, the return value will also be NULL. (The default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 283\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Copy} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Copy}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Copy}}{\f8\fs22  } {\f8\fs32 LPCSTR COFile::Copy(CString* pstr /*=NULL*/)} {\f8\fs22 \par \par Perform a copy operation in the editor associated with this file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the text placed in the clipboard as a result of the cut.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pstr} {\f8\fs22 : A pointer to a CString that will contain the text placed in the clipboard as a result of the cut operation. If this parameter is NULL, the return value will also be NULL. (The default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 298\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Paste} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Paste}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Paste}}{\f8\fs22  } {\f8\fs32 void COFile::Paste(void)} {\f8\fs22 \par \par Perform a paste operation in the editor associated with this file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 312\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Delete} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Delete}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Delete}}{\f8\fs22  } {\f8\fs32 void COFile::Delete(void)} {\f8\fs22 \par \par Perform a delete operation in the editor associated with this file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 322\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Undo} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Undo}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Undo}}{\f8\fs22  } {\f8\fs32 void COFile::Undo(void)} {\f8\fs22 \par \par Perform an undo operation in the editor associated with this file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 332\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COFile_Redo} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COFile; Redo}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COFile::Redo}}{\f8\fs22  } {\f8\fs32 void COFile::Redo(void)} {\f8\fs22 \par \par Peform a redo operation in the editor associated with this file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cofile.cpp, 342\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COResScript_Create} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COResScript; Create}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COResScript::Create}}{\f8\fs22  } {\f8\fs32 int COResScript::Create(LPCSTR szSaveAs /*=NULL*/)} {\f8\fs22 \par \par Create a new resource script in the IDE.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szSaveAs} {\f8\fs22 : A pointer to a string that contains the name to save the new file with. NULL indicates don't save (no name specified). (The default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coresscr.cpp, 39\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COResScript_Open} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COResScript; Open}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COResScript::Open}}{\f8\fs22  } {\f8\fs32 int COResScript::Open(LPCSTR szFileName, LPCSTR szChDir /*=NULL*/)} {\f8\fs22 \par \par Open a resource script file and its editor in the IDE.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the name of the file to open.\par \par } {\i\f8\fs22 szChDir} {\f8\fs22 : A pointer to a string that contains the path to the file. NULL if szFileName includes a path or szFileName is in the current directory). (The default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coresscr.cpp, 51\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COResScript_CreateResource} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COResScript; CreateResource}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COResScript::CreateResource}}{\f8\fs22  } {\f8\fs32 int COResScript::CreateResource(UINT idResType)} {\f8\fs22 \par \par Add a resource to this resource script.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 idResType} {\f8\fs22 : An value that contains the type of resource to add: IDSS_RT_ACCELERATOR, IDSS_RT_BINARY, IDSS_RT_BITMAP, IDSS_RT_CURSOR, IDSS_RT_DIALOG, IDSS_RT_ICON, IDSS_RT_MENU, IDSS_RT_STRING_TABLE, IDSS_RT_VERSION.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coresscr.cpp, 62\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COResScript_CreateResource} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COResScript; CreateResource}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COResScript::CreateResource}}{\f8\fs22  } {\f8\fs32 int COResScript::CreateResource( LPCSTR szResName )} {\f8\fs22 \par \par Add a resource to this resource script. This function, since it takes the name of the type of resource as a pointer to a string, is generally used for custom resource types.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szResName} {\f8\fs22 : A pointer to a string that contains the name of the resource to add.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coresscr.cpp, 125\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COResScript_CreateResource} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COResScript; CreateResource}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COResScript::CreateResource}}{\f8\fs22  } {\f8\fs32 int COResScript::CreateResource(UINT idResType, UIResEditor& resEditor)} {\f8\fs22 \par \par Add a resource to this resource script.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 idResType} {\f8\fs22 : An value that contains the type of resource to add: IDSS_RT_ACCELERATOR, IDSS_RT_BINARY, IDSS_RT_BITMAP, IDSS_RT_CURSOR, IDSS_RT_DIALOG, IDSS_RT_ICON, IDSS_RT_MENU, IDSS_RT_STRING_TABLE, IDSS_RT_VERSION.\par \par } {\i\f8\fs22 resEditor} {\f8\fs22 : A reference to a UIResEditor object that will contain the resource editor created.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coresscr.cpp, 155\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_Create} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; Create}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::Create}}{\f8\fs22  } {\f8\fs32 int COSource::Create(LPCSTR szSaveAs /*=NULL*/)} {\f8\fs22 \par \par Create a new editor window and file in the IDE.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szSaveAs} {\f8\fs22 : A pointer to a string that contains the name to save the new file with. NULL indicates don't save (no name specified). (The default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 56\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_Open} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; Open}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::Open}}{\f8\fs22  } {\f8\fs32 int COSource::Open(LPCSTR szFileName, LPCSTR szChDir /*=NULL*/, EOpenAs oa /*=OA_AUTO*/)} {\f8\fs22 \par \par Open a text file in the IDE.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the name of the file to open.\par \par } {\i\f8\fs22 szChDir} {\f8\fs22 : A pointer to a string that contains the path to the file. NULL if szFileName includes a path or szFileName is in the current directory). (The default value is NULL.)\par \par } {\i\f8\fs22 oa} {\f8\fs22 : A value that indicates the editor to use when opening the file: OA_AUTO, OA_TEXT, OA_BINARY, OA_MAKEFILE. (The default value is OA_AUTO.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 69\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_GetReadOnly} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; GetReadOnly}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::GetReadOnly}}{\f8\fs22  } {\f8\fs32 BOOL COSource::GetReadOnly(void)} {\f8\fs22 \par \par Determine the read only state of this file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates the read only state: TRUE if read only; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 79\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_GetCurrentLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; GetCurrentLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::GetCurrentLine}}{\f8\fs22  } {\f8\fs32 int COSource::GetCurrentLine(void)} {\f8\fs22 \par \par Get the current line in the text editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer containing the current line.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 89\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_GetCurrentColumn} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; GetCurrentColumn}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::GetCurrentColumn}}{\f8\fs22  } {\f8\fs32 int COSource::GetCurrentColumn(void)} {\f8\fs22 \par \par Get the current column in the text editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer containing the current column.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 99\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_GetSelectedText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; GetSelectedText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::GetSelectedText}}{\f8\fs22  } {\f8\fs32 CString COSource::GetSelectedText(void)} {\f8\fs22 \par \par Get the selected text in the editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the selected text.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 109\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_SelectText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; SelectText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::SelectText}}{\f8\fs22  } {\f8\fs32 void COSource::SelectText(int line1, int column1, int line2, int column2, BOOL bColumnSelect /*=SELECT_NORMAL*/)} {\f8\fs22 \par \par Select text in the source editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line1} {\f8\fs22 : An integer that contains the starting line for the selection.\par \par } {\i\f8\fs22 column1} {\f8\fs22 : An integer that contains the starting column for the selection.\par \par } {\i\f8\fs22 line2} {\f8\fs22 : An integer that contains the ending line for the selection.\par \par } {\i\f8\fs22 column2} {\f8\fs22 : An integer that contains the ending column for the selection.\par \par } {\i\f8\fs22 bColumnSelect} {\f8\fs22 : A integer that indicates the type of selection to perform: SELECT_NORMAL, SELECT_COLUMN, SELECT_BRIEF_COLUMN. (The default value is SELECT_NORMAL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 132\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_SetCursor} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; SetCursor}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::SetCursor}}{\f8\fs22  } {\f8\fs32 void COSource::SetCursor(int line, int column)} {\f8\fs22 \par \par Set the caret to the given line and column in the source editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer containing the line to set the caret to.\par \par } {\i\f8\fs22 column} {\f8\fs22 : An integer containing the column to set the caret to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 184\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_InsertText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; InsertText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::InsertText}}{\f8\fs22  } {\f8\fs32 void COSource::InsertText(LPCSTR szText, int line, int column, BOOL bLiteral /*=FALSE*/)} {\f8\fs22 \par \par Insert the given text at the given line and column in the source editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szText} {\f8\fs22 : A pointer to a string that contains the text to insert into the source editor.\par \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the line where the text should be inserted.\par \par } {\i\f8\fs22 column} {\f8\fs22 : An integer that contains the column where the text should be inserted.\par \par } {\i\f8\fs22 bLiteral} {\f8\fs22 : A Boolean value that indicates whether the string (szText) should be interpreted literally (TRUE) or following MS-Test's DoKeys intepretation. (The default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 223\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_TypeTextAtCursor} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; TypeTextAtCursor}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::TypeTextAtCursor}}{\f8\fs22  } {\f8\fs32 void COSource::TypeTextAtCursor(LPCSTR szText, BOOL bLiteral /*=FALSE*/)} {\f8\fs22 \par \par Type the given text at the current caret location in the source editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szText} {\f8\fs22 : A pointer to a string that contains the text to type at the caret location.\par \par } {\i\f8\fs22 bLiteral} {\f8\fs22 : A Boolean value that indicates whether the string (szText) should be interpreted literally (TRUE) or following MS-Test's DoKeys intepretation. (The default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 238\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_GoToLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; GoToLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::GoToLine}}{\f8\fs22  } {\f8\fs32 BOOL COSource::GoToLine(LPCSTR szLine)} {\f8\fs22 \par \par Go to the given line in the source editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szLine} {\f8\fs22 : A pointer to a string containing the line number to go to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 251\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_GoToLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; GoToLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::GoToLine}}{\f8\fs22  } {\f8\fs32 BOOL COSource::GoToLine(int nLine)} {\f8\fs22 \par \par Go to the given line in the source editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nLine} {\f8\fs22 : An integer containing the line number to go to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 276\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::Find}}{\f8\fs22  } {\f8\fs32 BOOL COSource::Find(LPCSTR szFind, BOOL bMatchWord, BOOL bMatchCase, BOOL bRegExpr, COSource::FindDirection fd)} {\f8\fs22 \par \par Find the given string (szFind) in this source editor window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFind} {\f8\fs22 : A pointer to a string containing the text to find in this window.\par \par } {\i\f8\fs22 bMatchWord} {\f8\fs22 : A Boolean value that indicates how to match words: TRUE to only find whole words; FALSE to find partial words. (Default value is FALSE.)\par \par } {\i\f8\fs22 bMatchCase} {\f8\fs22 : A Boolean value that indicates how to match case: TRUE to match the case exactly; FALSE to ignore case. (Default value is FALSE.)\par \par } {\i\f8\fs22 bRegExpr} {\f8\fs22 : A Boolean value that indicates whether the find string is a regular expression (TRUE) or not. (Default value is FALSE.)\par \par } {\i\f8\fs22 fd} {\f8\fs22 : A value that indicates the search direction: FD_DOWN to search toward the end of the file; FD_UP to search toward the top of the file. (Default value is FD_DOWN.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 293\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COSource_Replace} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COSource; Replace}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COSource::Replace}}{\f8\fs22  } {\f8\fs32 int COSource::Replace(LPCSTR szFind, LPCSTR szReplace, BOOL bMatchWord, BOOL bMatchCase, BOOL bRegExpr, COSource::ReplaceScope rs, BOOL bAll /*= FALSE*/)} {\f8\fs22 \par \par Find (szFind) and replace (szReplace) in this source editor window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that specifies the number of occurences that were replaced by the operation.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFind} {\f8\fs22 : A pointer to a string containing the text to find in this window.\par \par } {\i\f8\fs22 szReplace} {\f8\fs22 : A pointer to a string containing the text to replace the found string within this window.\par \par } {\i\f8\fs22 bMatchWord} {\f8\fs22 : A Boolean value that indicates how to match words: TRUE to only find whole words; FALSE to find partial words. (Default value is FALSE.)\par \par } {\i\f8\fs22 bMatchCase} {\f8\fs22 : A Boolean value that indicates how to match case: TRUE to match the case exactly; FALSE to ignore case. (Default value is FALSE.)\par \par } {\i\f8\fs22 bRegExpr} {\f8\fs22 : A Boolean value that indicates whether the find string is a regular expression (TRUE) or not. (Default value is FALSE.)\par \par } {\i\f8\fs22 rs} {\f8\fs22 : A value that indicates the scope of the replace operation: COSource::RS_WHOLEFILE to search and replace across the entire file; COSource::RS_SELECTION to search and replace within the selection. (Default value is COSource::RS_WHOLEFILE.)\par \par } {\i\f8\fs22 bAll} {\f8\fs22 : A Boolean value that indicates whether to replace all occurences in the file/selection (TRUE) or just the first one. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 357\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__SelectEmulations} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} SelectEmulations}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} SelectEmulations}}{\f8\fs22  } {\f8\fs32 SelectEmulations(int EMULATE_EDITOR)} {\f8\fs22 \par \par Select Editor to emulate from Tools.Options.Compatibility\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 EMULATE_EDITOR} {\f8\fs22 : The editor to emulate from: EMULATE_VC3, EMULATE_VC2, EMULATE_BRIEF, EMULATE_EPSILON, EMULATE_CUSTOM \par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cosource.cpp, 405\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAccEdit_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAccEdit; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAccEdit::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIAccEdit::IsValid(void) const} {\f8\fs22 \par \par Determine whether the accelerator editor is valid by determining if the window is valid, visible, the Resource Symbols menu item is enabled, and the title is correct.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uaccedit.cpp, 33\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAccEdit_AddAccel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAccEdit; AddAccel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAccEdit::AddAccel}}{\f8\fs22  } {\f8\fs32 int UIAccEdit::AddAccel(LPCSTR szChar, LPCSTR  szId /*=NULL*/, DWORD dwKeyMods /*=0x0*/, BOOL bNextKeyType /*=FALSE*/)} {\f8\fs22 \par \par Add an accelerator to the accelerator editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer value that contains the line number in the editor of the new accelerator.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szChar} {\f8\fs22 : A pointer to a string that contains the accelerator key to add.\par \par } {\i\f8\fs22 szId} {\f8\fs22 : A pointer to a string that contains the name of the ID for this accelerator. NULL indicates use the default name. (The default is NULL.)\par \par } {\i\f8\fs22 dwKeyMods} {\f8\fs22 : A bit field that indicates the modifier keys to apply to this accelerator: ACC_CONTROL, ACC_NO_CONTROL, ACC_ALT, ACC_NO_ALT, ACC_SHIFT, ACC_NO_SHIFT, ACC_ASCII, ACC_VIRTKEY. (The default is 0.)\par \par } {\i\f8\fs22 bNextKey} {\f8\fs22 : A Boolean value that indicates whether to use the next key typed (TRUE) or not. This parameter is NYI. (The default is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uaccedit.cpp, 47\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAccEdit_EditAccel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAccEdit; EditAccel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAccEdit::EditAccel}}{\f8\fs22  } {\f8\fs32 void UIAccEdit::EditAccel(LPCSTR szChar /*=NULL*/, LPCSTR  szId /*=NULL*/, DWORD dwKeyMods /*=0x0*/)} {\f8\fs22 \par \par Edit the currently selected accelerator in the accelerator editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szChar} {\f8\fs22 : A pointer to a string that contains the new accelerator key for the selected accelerator.\par \par } {\i\f8\fs22 szId} {\f8\fs22 : A pointer to a string that contains the new name of the ID for this accelerator. NULL indicates use the current name. (The default is NULL.)\par \par } {\i\f8\fs22 dwKeyMods} {\f8\fs22 : A bit field that indicates the modifier keys to apply to this accelerator: ACC_CONTROL, ACC_NO_CONTROL, ACC_ALT, ACC_NO_ALT, ACC_SHIFT, ACC_NO_SHIFT, ACC_ASCII, ACC_VIRTKEY. (The default is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uaccedit.cpp, 86\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAccEdit_FindAccel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAccEdit; FindAccel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAccEdit::FindAccel}}{\f8\fs22  } {\f8\fs32 BOOL UIAccEdit::FindAccel(LPCSTR sz /*=NULL*/, LPCSTR szId /*=0*/)} {\f8\fs22 \par \par Determine if the given accelerator is defined. This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success; TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uaccedit.cpp, 118\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAccEdit_GetKey} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAccEdit; GetKey}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAccEdit::GetKey}}{\f8\fs22  } {\f8\fs32 CString UIAccEdit::GetKey(int line /*=-1*/)} {\f8\fs22 \par \par Get the accelerator key associated with the accelerator on the specified line (line).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the key associated with the accelerator on the specified line.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer containing the line to get the accelerator key for. -1 means use the current line. (The default is -1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uaccedit.cpp, 130\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAccEdit_GetKeyMods} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAccEdit; GetKeyMods}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAccEdit::GetKeyMods}}{\f8\fs22  } {\f8\fs32 DWORD UIAccEdit::GetKeyMods(int line /*=-1*/)} {\f8\fs22 \par \par Get the accelerator key modifiers for the accelerator on the specified line (line).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A bit field that indicates the modifier keys to apply to this accelerator: ACC_CONTROL, ACC_NO_CONTROL, ACC_ALT, ACC_NO_ALT, ACC_SHIFT, ACC_NO_SHIFT, ACC_ASCII, ACC_VIRTKEY.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer containing the line to get the accelerator modifier keys for. -1 means use the current line. (The default is -1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uaccedit.cpp, 143\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDlgEdit_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDlgEdit; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDlgEdit::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIDlgEdit::IsValid(void) const} {\f8\fs22 \par \par Determine whether the dialog editor is valid by determining if the window is valid, visible, the Resource Symbols menu item is enabled, and the title is correct.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udlgedit.cpp, 30\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDlgEdit_DropControl} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDlgEdit; DropControl}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDlgEdit::DropControl}}{\f8\fs22  } {\f8\fs32 BOOL UIDlgEdit::DropControl(int nControl, int cX, int cY )} {\f8\fs22 \par \par Drop the specified control in the dialog editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nControl} {\f8\fs22 : An integer containing the number of the control, which is a zero-based index into the control palette.\par \par } {\i\f8\fs22 cX} {\f8\fs22 : An integer containing the X (horizontal) position where the control should be dropped relative to the upper left corner of the dialog editor.\par \par } {\i\f8\fs22 cY} {\f8\fs22 : An integer containing the Y (vertical) position where the control should be dropped relative to the upper left corner of the dialog editor.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 udlgedit.cpp, 62\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEditor_AttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEditor; AttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEditor::AttachActive}}{\f8\fs22  } {\f8\fs32 BOOL UIEditor::AttachActive(void)} {\f8\fs22 \par \par Initialize this object by attaching to the active editor window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successfully attached to the active editor window; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ueditor.cpp, 28\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEditor_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEditor; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEditor::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIEditor::IsActive(void)} {\f8\fs22 \par \par Determine if this editor window is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if the editor window is active; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ueditor.cpp, 38\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEditor_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEditor; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEditor::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIEditor::Activate(void)} {\f8\fs22 \par \par Activate this editor window by giving the window the focus.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ueditor.cpp, 48\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEditor_GetTitle} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEditor; GetTitle}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEditor::GetTitle}}{\f8\fs22  } {\f8\fs32 CString UIEditor::GetTitle(void) const} {\f8\fs22 \par \par Get the title of this editor window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the title of this window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ueditor.cpp, 58\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEditor_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEditor; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEditor::Close}}{\f8\fs22  } {\f8\fs32 BOOL UIEditor::Close(BOOL bLoseChanges /*=TRUE*/)} {\f8\fs22 \par \par Close this editor window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bLoseChanges} {\f8\fs22 : A Boolean value that indicates whether to lose changes (TRUE) or save them (FALSE). (The default value is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ueditor.cpp, 81\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindInFilesDlg_AddFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindInFilesDlg; AddFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindInFilesDlg::AddFile}}{\f8\fs22  } {\f8\fs32 void UIFindInFilesDlg::AddFile(LPCSTR szFile)} {\f8\fs22 \par \par Add a file to the list of selected files to search in the Selected Files list box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFile} {\f8\fs22 : A pointer to a string that contains the filename of the file to add to the list of files to search. This is usually a full path to the file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindinf.cpp, 34\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindInFilesDlg_FindWhat} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindInFilesDlg; FindWhat}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindInFilesDlg::FindWhat}}{\f8\fs22  } {\f8\fs32 void UIFindInFilesDlg::FindWhat(LPCSTR szFind)} {\f8\fs22 \par \par Set the text to search for in the list of files in the Find What edit box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFind} {\f8\fs22 : A pointer to a string containing the text to search for in the list of files.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindinf.cpp, 47\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindInFilesDlg_DoFind} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindInFilesDlg; DoFind}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindInFilesDlg::DoFind}}{\f8\fs22  } {\f8\fs32 void UIFindInFilesDlg::DoFind(void)} {\f8\fs22 \par \par Perform the find in files. Call this function after setting the list of files with UIFindInFilesDlg::AddFile and the text to search for with UIFindInFilesDlg::FindWhat.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindinf.cpp, 58\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIFindDlg::Activate(void)} {\f8\fs22 \par \par Open the Find dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 39\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::Close}}{\f8\fs22  } {\f8\fs32 HWND UIFindDlg::Close(void)} {\f8\fs22 \par \par Close the Find dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL, if successful; the HWND of the Find dialog, if it failed to close.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 53\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_SetFindString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; SetFindString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::SetFindString}}{\f8\fs22  } {\f8\fs32 BOOL UIFindDlg::SetFindString(LPCSTR szFind)} {\f8\fs22 \par \par Set the text given in szFind in the Find What edit box in the Find dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFind} {\f8\fs22 : A pointer to a string containing the text to enter in the Find What edit box in the Find dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 64\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_SetMatchWord} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; SetMatchWord}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::SetMatchWord}}{\f8\fs22  } {\f8\fs32 BOOL UIFindDlg::SetMatchWord(BOOL bMatchWord)} {\f8\fs22 \par \par Check or uncheck the Match Whole Word Only checkbox based on the value of bMatchWord.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bMatchWord} {\f8\fs22 : A Boolean value that, if TRUE means check the Match Whole Word Only checkbox, and if FALSE means uncheck it. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 76\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_SetMatchCase} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; SetMatchCase}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::SetMatchCase}}{\f8\fs22  } {\f8\fs32 BOOL UIFindDlg::SetMatchCase(BOOL bMatchCase)} {\f8\fs22 \par \par Check or uncheck the Match Case checkbox based on the value of bMatchCase.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bMatchCase} {\f8\fs22 : A Boolean value that, if TRUE means check the Match Case checkbox, and if FALSE means uncheck it. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 93\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_SetRegularExpression} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; SetRegularExpression}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::SetRegularExpression}}{\f8\fs22  } {\f8\fs32 BOOL UIFindDlg::SetRegularExpression(BOOL bRegExpr)} {\f8\fs22 \par \par Check or uncheck the Regular Expression checkbox based on the value of bRegExpr.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bRegExpr} {\f8\fs22 : A Boolean value that, if TRUE means check the Regular Expression checkbox, and if FALSE means uncheck it. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 110\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_SetDirection} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; SetDirection}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::SetDirection}}{\f8\fs22  } {\f8\fs32 BOOL UIFindDlg::SetDirection(UIFindDlg::FindDirection fd)} {\f8\fs22 \par \par Set the find direction in the Find dialog box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates succees. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 fd} {\f8\fs22 : A value that indicates the find direction. FD_UP to set the find direction to up; FD_DOWN to set the find direction to down. (Default value is FD_DOWN.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 127\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_FindNext} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; FindNext}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::FindNext}}{\f8\fs22  } {\f8\fs32 BOOL UIFindDlg::FindNext(void)} {\f8\fs22 \par \par Perform the find operation by clicking the Find Next button in the Find dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 150\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIFindDlg_SetBookmarks} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIFindDlg; SetBookmarks}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIFindDlg::SetBookmarks}}{\f8\fs22  } {\f8\fs32 BOOL UIFindDlg::SetBookmarks(void)} {\f8\fs22 \par \par Perform the set bookmarks operation by clicking on the Set Bookmarks on All button in the Find dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 162\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::Activate(void)} {\f8\fs22 \par \par Open the Replace dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL, if successful; the HWND of the Replace dialog, if it failed to close.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 183\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::Close}}{\f8\fs22  } {\f8\fs32 HWND UIReplaceDlg::Close(void)} {\f8\fs22 \par \par Close the Replace dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 197\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_SetFindString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; SetFindString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::SetFindString}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::SetFindString(LPCSTR szFind)} {\f8\fs22 \par \par Enter the text given in szFind in the Find What edit box in the Replace dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFind} {\f8\fs22 : A pointer to a string that contains the text to enter in the Find What edit box in the Replace dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 208\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_SetReplaceString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; SetReplaceString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::SetReplaceString}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::SetReplaceString(LPCSTR szReplace)} {\f8\fs22 \par \par Enter the text given in szReplace in the Replace With edit box in the Replace dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szReplace} {\f8\fs22 : A pointer to a string that contains the text to enter in the Replace With edit box in the Replace dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 220\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_SetMatchWord} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; SetMatchWord}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::SetMatchWord}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::SetMatchWord(BOOL bMatchWord)} {\f8\fs22 \par \par Check or uncheck the Match Whole Word Only checkbox based on the value of bMatchWord.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bMatchWord} {\f8\fs22 : A Boolean value that, if TRUE means check the Match Whole Word Only checkbox, and if FALSE means uncheck it. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 232\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_SetMatchCase} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; SetMatchCase}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::SetMatchCase}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::SetMatchCase(BOOL bMatchCase)} {\f8\fs22 \par \par Check or uncheck the Match Case checkbox based on the value of bMatchCase.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bMatchCase} {\f8\fs22 : A Boolean value that, if TRUE means check the Match Case checkbox, and if FALSE means uncheck it. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 249\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_SetRegularExpression} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; SetRegularExpression}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::SetRegularExpression}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::SetRegularExpression(BOOL bRegExpr)} {\f8\fs22 \par \par Check or uncheck the Regular Expression checkbox based on the value of bRegExpr.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bRegExpr} {\f8\fs22 : A Boolean value that, if TRUE means check the Regular Expression checkbox, and if FALSE means uncheck it. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 266\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_SetReplaceScope} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; SetReplaceScope}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::SetReplaceScope}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::SetReplaceScope(UIReplaceDlg::ReplaceScope rs)} {\f8\fs22 \par \par Set the replace scope in the Replace dialog box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 fd} {\f8\fs22 : A value that indicates the scope of the find and replace operation: RS_WHOLEFILE to set the replace scope to the whole file; RS_SELECTION to set the replace scope to the selection. (Default value is RS_WHOLEFILE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 283\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_FindNext} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; FindNext}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::FindNext}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::FindNext(void)} {\f8\fs22 \par \par Perform the find operation by clicking the Find Next button in the Replace dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 306\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_Replace} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; Replace}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::Replace}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::Replace(void)} {\f8\fs22 \par \par Perform the replace operation by clicking the Replace button in the Replace dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 321\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIReplaceDlg_ReplaceAll} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIReplaceDlg; ReplaceAll}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIReplaceDlg::ReplaceAll}}{\f8\fs22  } {\f8\fs32 BOOL UIReplaceDlg::ReplaceAll(void)} {\f8\fs22 \par \par Perform the replace all operation by clicking the Replace All button in the Replace dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ufindrep.cpp, 336\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIImgEdit::IsValid(void) const} {\f8\fs22 \par \par Determine whether the image editor is valid by determining if the window is valid, visible, and the Image menu is enabled.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 34\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_ClickImgTool } K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; ClickImgTool }}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::ClickImgTool }}{\f8\fs22  } {\f8\fs32 void UIImgEdit::ClickImgTool ( int nImgTool )} {\f8\fs22 \par \par Select an image editing tool from the Graphics palette.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nImgTool} {\f8\fs22 : A value that indicates the tool to select: GT_SELECT, GT_LASSO, GT_PICKER, GT_ERASER, GT_FILL, GT_ZOOM, GT_PENCIL, GT_BRUSH, GT_SPRAY, GT_LINE, GT_CURVE, GT_TEXT, GT_RECT, GT_COMBORECT, GT_FILLRECT, GT_ROUND, GT_COMBOROUND, GT_FILLROUND, GT_ELLIPSE, GT_COMBOELLIPSE, GT_FILLELLIPSE, GT_POLY, GT_COMBOPOLY, GT_FILLPOLY.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 62\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_SetColor} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; SetColor}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::SetColor}}{\f8\fs22  } {\f8\fs32 void UIImgEdit::SetColor(int nColor, int nButton /* VK_LBUTTON */)} {\f8\fs22 \par \par Set the foreground (left mouse button) or background (right mouse button) color in the image editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nColor} {\f8\fs22 : An integer that represents the position of the color on the color palette. This value is 1-based value, starting with black as 1. For cursors and icons: -1 means use the inverse color; 0 means use the screen or transparent color.\par \par } {\i\f8\fs22 nButton} {\f8\fs22 : The mouse button to assign the color to: VK_LBUTTON, VK_RBUTTON. (Default value is VK_LBUTTON.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 143\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_GetPane} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; GetPane}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::GetPane}}{\f8\fs22  } {\f8\fs32 HWND UIImgEdit::GetPane(int nPane)} {\f8\fs22 \par \par Get the HWND of one of the panes in the image editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the requested pane. NULL if the requested pane does not exist.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nPane} {\f8\fs22 : A value that indicates the pane to get the HWND for: PANE_LEFT, PANE_RIGHT.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 166\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_ClickMouse} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; ClickMouse}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::ClickMouse}}{\f8\fs22  } {\f8\fs32 void UIImgEdit::ClickMouse(int nButton, int nPane, int cX, int cY, int nMag /*=1*/)} {\f8\fs22 \par \par Click the mouse at the given coordinates in the given pane in the image editor. The coordinates are relative to the upper left corner of the pane.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nButton} {\f8\fs22 : A value that indicates which button to click in the image editor: VK_LBUTTON, VK_MBUTTON, VK_RBUTTON.\par \par } {\i\f8\fs22 nPane} {\f8\fs22 : A value that indicates which pane of the image editor to click in: PANE_LEFT, PANE_RIGHT.\par \par } {\i\f8\fs22 cX} {\f8\fs22 : An integer that contains the X (horizontal) position to click. This position is relative to the upper left corner of the pane.\par \par } {\i\f8\fs22 cY} {\f8\fs22 : An integer that contains the Y (vertical) position to click. This position is relative to the upper left corner of the pane.\par \par } {\i\f8\fs22 nMag} {\f8\fs22 : An integer that contains the magnification in the image editor. This value is used to click a particular "bit" in the image editor by multiplying the X and Y coordinates by nMag. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 221\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_DragMouse} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; DragMouse}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::DragMouse}}{\f8\fs22  } {\f8\fs32 void UIImgEdit::DragMouse(int nButton, int nPane, int cX1, int cY1, int cX2, int cY2, int nMag /*=1*/)} {\f8\fs22 \par \par Drag the mouse from the beginning coordinates to the ending coordinates in the given pane in the image editor. The coordinates are relative to the upper left corner of the pane.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nButton} {\f8\fs22 : A value that indicates which button to click and hold while dragging in the image editor: VK_LBUTTON, VK_MBUTTON, VK_RBUTTON.\par \par } {\i\f8\fs22 nPane} {\f8\fs22 : A value that indicates which pane of the image editor to drag in: PANE_LEFT, PANE_RIGHT.\par \par } {\i\f8\fs22 cX1} {\f8\fs22 : An integer that contains the X (horizontal) position to start the drag. This position is relative to the upper left corner of the pane.\par \par } {\i\f8\fs22 cY1} {\f8\fs22 : An integer that contains the Y (vertical) position to start the drag. This position is relative to the upper left corner of the pane.\par \par } {\i\f8\fs22 cX1} {\f8\fs22 : An integer that contains the X (horizontal) position to end the drag. This position is relative to the upper left corner of the pane.\par \par } {\i\f8\fs22 cY1} {\f8\fs22 : An integer that contains the Y (vertical) position to end the drag. This position is relative to the upper left corner of the pane.\par \par } {\i\f8\fs22 nMag} {\f8\fs22 : An integer that contains the magnification in the image editor. This value is used to click and drag across particular "bits" in the image editor by multiplying the X and Y coordinates by nMag. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 242\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_SetFont} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; SetFont}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::SetFont}}{\f8\fs22  } {\f8\fs32 void UIImgEdit::SetFont(LPCSTR szFontName /*=NULL*/, int nSize /*=-1*/, int nStyle /*=-1*/)} {\f8\fs22 \par \par Set the font to be used by the text tool in the image editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFontName} {\f8\fs22 : A pointer to a string that contains the name of the font. NULL means use the current font. (Default value is NULL.)\par \par } {\i\f8\fs22 nSize} {\f8\fs22 : An integer that contains the point size of the font. -1 means use the current point size. (Default value is -1.)\par \par } {\i\f8\fs22 nStyle} {\f8\fs22 : An index into the list of font styles. -1 means use the current style. This value is usually: 1 for regular style; 2 for italic style; 3 for bold style; and 4 for bold italic style.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 279\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_IsStandalone} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; IsStandalone}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::IsStandalone}}{\f8\fs22  } {\f8\fs32 BOOL UIImgEdit::IsStandalone(void)} {\f8\fs22 \par \par Determine if the image editor is stand alone or part of a resource script. (If a resource script window is open, this function assumes this image editor belongs to that script.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the image editor is stand alone. TRUE if it's stand alone; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 299\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIImgEdit_GetEditorType} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIImgEdit; GetEditorType}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIImgEdit::GetEditorType}}{\f8\fs22  } {\f8\fs32 int UIImgEdit::GetEditorType(void)} {\f8\fs22 \par \par Get the specific type of image editor. This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A value indicating the type of image editor: ED_CURSOR, ED_ICON, ED_BITMAP.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimgedit.cpp, 309\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMenEdit_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMenEdit; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMenEdit::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIMenEdit::IsValid(void) const} {\f8\fs22 \par \par Determine whether the menu editor is valid by determining if the window is valid, visible, the Resource Symbols menu item is enabled, and the title is correct.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umenedit.cpp, 24\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMenEdit_GetMenuBar} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMenEdit; GetMenuBar}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMenEdit::GetMenuBar}}{\f8\fs22  } {\f8\fs32 HWND UIMenEdit::GetMenuBar(void)} {\f8\fs22 \par \par Get the HWND to the menu bar in the menu bar editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the menu bar in the menu bar editor.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 umenedit.cpp, 34\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResBrowser_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResBrowser; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResBrowser::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIResBrowser::IsValid(void) const} {\f8\fs22 \par \par Determine whether the resource browser is valid by determining if the window is valid, visible, the window contains a list box, and it's not a string table editor or accelerator editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresbrws.cpp, 27\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResBrowser_SelectFolder} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResBrowser; SelectFolder}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResBrowser::SelectFolder}}{\f8\fs22  } {\f8\fs32 int UIResBrowser::SelectFolder(int nFolder)} {\f8\fs22 \par \par Select a folder in the resource browser by folder type (see also SelectFolder(LPCSTR)).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the line of the selected folder in the resource browser.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nFolder} {\f8\fs22 : A value that contains the folder to select in the resource browser: ED_DIALOG, ED_MENU, ED_CURSOR, ED_ICON, ED_BITMAP, ED_STRING, ED_ACCEL, ED_VERSION, ED_BINARY.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresbrws.cpp, 42\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResBrowser_SelectFolder} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResBrowser; SelectFolder}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResBrowser::SelectFolder}}{\f8\fs22  } {\f8\fs32 int UIResBrowser::SelectFolder(LPCSTR szFolder)} {\f8\fs22 \par \par Select a folder in the resource browser by name (see also SelectFolder(int)).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the line of the selected folder in the resource browser.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFolder} {\f8\fs22 : A pointer to a string that contains the name of the folder to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresbrws.cpp, 56\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResBrowser_OpenFolder} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResBrowser; OpenFolder}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResBrowser::OpenFolder}}{\f8\fs22  } {\f8\fs32 int UIResBrowser::OpenFolder(int nOpen)} {\f8\fs22 \par \par Open or close the selected folder in the resource editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer containing the number of items in the folder. Positive if the folder is opened; negative if the folder is closed.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nOpen} {\f8\fs22 : A value that indicates the action to perform on the folder: CLOSE_FOLDER, OPEN_FOLDER, OPEN_FOLDER_ALL.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresbrws.cpp, 83\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResBrowser_FindResource} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResBrowser; FindResource}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResBrowser::FindResource}}{\f8\fs22  } {\f8\fs32 int UIResBrowser::FindResource(LPCSTR szId, int nFolder)} {\f8\fs22 \par \par Select an item within a folder (by folder type) in the resource browser (see also FindResource (LPCSTR, LPCSTR)).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the line of the selected item in the resource browser.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szId} {\f8\fs22 : A pointer to a string that contains the name of the item to select within the given folder.\par \par } {\i\f8\fs22 nFolder} {\f8\fs22 : A value that contains the folder to select in the resource browser: ED_DIALOG, ED_MENU, ED_CURSOR, ED_ICON, ED_BITMAP, ED_STRING, ED_ACCEL, ED_VERSION, ED_BINARY.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresbrws.cpp, 107\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResBrowser_FindResource} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResBrowser; FindResource}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResBrowser::FindResource}}{\f8\fs22  } {\f8\fs32 int UIResBrowser::FindResource(LPCSTR szId, LPCSTR szFolder /*=NULL*/)} {\f8\fs22 \par \par Select an item within a folder (by folder name) in the resource browser (see also FindResource (LPCSTR, int)).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the line of the selected item in the resource browser.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szId} {\f8\fs22 : A pointer to a string that contains the name of the item to select within the given folder.\par \par } {\i\f8\fs22 szFolder} {\f8\fs22 : A pointer to a string that contains the name of the folder to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresbrws.cpp, 122\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResEditor_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResEditor; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResEditor::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIResEditor::IsValid(void) const} {\f8\fs22 \par \par Determine whether the resource editor is valid by determining if the window is valid, visible, and the Resource Symbols menu item is enabled.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresedit.cpp, 26\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResEditor_IsValidType} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResEditor; IsValidType}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResEditor::IsValidType}}{\f8\fs22  } {\f8\fs32 BOOL UIResEditor::IsValidType(LPCSTR szType) const} {\f8\fs22 \par \par Determine whether the resource editor is the type specified.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the resource editor is the type specified. TRUE if it is; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szType} {\f8\fs22 : A pointer to a string that contains the type of resource editor expected.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresedit.cpp, 40\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResEditor_ExportResource} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResEditor; ExportResource}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResEditor::ExportResource}}{\f8\fs22  } {\f8\fs32 BOOL UIResEditor::ExportResource(LPCSTR szFileName)} {\f8\fs22 \par \par Export a resource.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the filename to export the resource to. This parameter usually contains a full path to the file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uresedit.cpp, 62\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResTableEditor_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResTableEditor; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResTableEditor::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIResTableEditor::IsValid(void) const} {\f8\fs22 \par \par Determine whether the resource table editor is valid by determining if the window is valid, visible, the Resource Symbols menu item is enabled, and the only child window is a list box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 urestabl.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResTableEditor_SelectLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResTableEditor; SelectLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResTableEditor::SelectLine}}{\f8\fs22  } {\f8\fs32 BOOL UIResTableEditor::SelectLine(int line, BOOL bMulti /*=FALSE*/)} {\f8\fs22 \par \par Select a line in the resource table editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the 1-based line to select.\par \par } {\i\f8\fs22 bMulti} {\f8\fs22 : A Boolean value that indicates whether to select muliple lines (hold down the control key while selecting the line) (TRUE) or not. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 urestabl.cpp, 66\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResTableEditor_GetCaption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResTableEditor; GetCaption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResTableEditor::GetCaption}}{\f8\fs22  } {\f8\fs32 CString UIResTableEditor::GetCaption(int line /*=-1*/)} {\f8\fs22 \par \par Get the caption of the resource table editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the caption of the resource table editor.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the line to select in the resource editor. Why is this parameter here? -1 means don't select any line. (Default value is -1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 urestabl.cpp, 89\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResTableEditor_GetId} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResTableEditor; GetId}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResTableEditor::GetId}}{\f8\fs22  } {\f8\fs32 CString UIResTableEditor::GetId(int line /*=-1*/)} {\f8\fs22 \par \par Get the ID of the resource table editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the ID of the resource table editor.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the line to select in the resource editor. Why is this parameter here? -1 means don't select any line. (Default value is -1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 urestabl.cpp, 102\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResTableEditor_GetCurLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResTableEditor; GetCurLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResTableEditor::GetCurLine}}{\f8\fs22  } {\f8\fs32 int UIResTableEditor::GetCurLine(void)} {\f8\fs22 \par \par Get the current line in the resource table editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the line currently selected in the table editor.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 urestabl.cpp, 114\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIResTableEditor_GetLineCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIResTableEditor; GetLineCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIResTableEditor::GetLineCount}}{\f8\fs22  } {\f8\fs32 int UIResTableEditor::GetLineCount(void)} {\f8\fs22 \par \par Get the number of lines in the resource table editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer containing the number of lines in the table editor.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 urestabl.cpp, 125\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStrEdit_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStrEdit; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStrEdit::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIStrEdit::IsValid(void) const} {\f8\fs22 \par \par Determine whether the string editor is valid by determining if the window is valid, visible, the Resource Symbols menu item is enabled, and the title is correct.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ustredit.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStrEdit_AddString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStrEdit; AddString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStrEdit::AddString}}{\f8\fs22  } {\f8\fs32 int UIStrEdit::AddString(LPCSTR szCaption, LPCSTR szId /*=NULL*/, BOOL bIdFirst /*=FALSE*/)} {\f8\fs22 \par \par Add a string to the string editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the 1-based line number where the string was added.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szCaption} {\f8\fs22 : A pointer to a string that contains the text of the string to add.\par \par } {\i\f8\fs22 szId} {\f8\fs22 : A pointer to a string that contains the name of the ID to assign to this string. NULL means use the default ID name. (Default value is NULL.)\par \par } {\i\f8\fs22 bIdFirst} {\f8\fs22 : A Boolean value that indicates whether to set the ID first (TRUE) or the text of the string first (FALSE). (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ustredit.cpp, 44\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStrEdit_EditString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStrEdit; EditString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStrEdit::EditString}}{\f8\fs22  } {\f8\fs32 void UIStrEdit::EditString(LPCSTR szCaption /*=NULL*/, LPCSTR szId /*=NULL*/)} {\f8\fs22 \par \par Edit the selected string in the string editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szCaption} {\f8\fs22 : A pointer to a string that contains the new text for the selected string. NULL means use the existing text. (Default value is NULL.)\par \par } {\i\f8\fs22 szId} {\f8\fs22 : A pointer to a string that contains the name of the new ID for the selected string. NULL means use the existing ID name. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ustredit.cpp, 73\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStrEdit_FindString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStrEdit; FindString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStrEdit::FindString}}{\f8\fs22  } {\f8\fs32 BOOL UIStrEdit::FindString(LPCSTR szCaption /*=NULL*/, LPCSTR szId /*=0*/)} {\f8\fs22 \par \par Select a string in the string editor. This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szCaption} {\f8\fs22 : A pointer to a string that contains the text of the string to select.\par \par } {\i\f8\fs22 szId} {\f8\fs22 : A pointer to a string that contains the name of the ID of the string to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ustredit.cpp, 90\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStrEdit_GetString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStrEdit; GetString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStrEdit::GetString}}{\f8\fs22  } {\f8\fs32 CString UIStrEdit::GetString(int line /*=-1*/)} {\f8\fs22 \par \par Get the text of the string at the given line in the string editor.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the text of the string.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the 1-based line to retrieve the text for.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ustredit.cpp, 102\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISymbolBrowser_CountSymbols} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISymbolBrowser; CountSymbols}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISymbolBrowser::CountSymbols}}{\f8\fs22  } {\f8\fs32 int UISymbolBrowser::CountSymbols(BOOL bReadOnly)} {\f8\fs22 \par \par Get the number of symbols displayed in the symbol browser dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the number symbols displayed in the symbol browser dialog.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bReadOnly} {\f8\fs22 : A Boolean value that indicates whether to include read only symbols (TRUE) in the count or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 usymdlg.cpp, 30\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIVerEdit_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIVerEdit; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIVerEdit::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIVerEdit::IsValid(void) const} {\f8\fs22 \par \par Determine whether the version editor is valid by determining if the window is valid, visible, the Resource Symbols menu item is enabled, and the title is correct.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the window is valid: TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uveredit.cpp, 24\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SelectDependenciesGroup} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SelectDependenciesGroup}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SelectDependenciesGroup}}{\f8\fs22  } {\f8\fs32 int COProject::SelectDependenciesGroup(CString Group /* = ""*/)} {\f8\fs22 \par \par Select the dependencies folder for a particular group in the project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Group} {\f8\fs22 : A CString that contains the name of the group to select the dependencies folder for. An empty string means use the current group.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 129\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SelectDependentFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SelectDependentFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SelectDependentFile}}{\f8\fs22  } {\f8\fs32 int COProject::SelectDependentFile(CString File,CString Group /* = ""*/)} {\f8\fs22 \par \par Select a file in the dependencies folder for a particular group in the project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 File} {\f8\fs22 : A CString that contains the name of the file to select.\par \par } {\i\f8\fs22 Group} {\f8\fs22 : A CString that contains the name of the group that contains the dependencies folder. An empty string means use the current group.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 165\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_NewGroup} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; NewGroup}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::NewGroup}}{\f8\fs22  } {\f8\fs32 int COProject::NewGroup(CString Name)} {\f8\fs22 \par \par Add a new group to the current project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name of the new group.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 195\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_ActivateProjWnd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; ActivateProjWnd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::ActivateProjWnd}}{\f8\fs22  } {\f8\fs32 BOOL COProject::ActivateProjWnd()} {\f8\fs22 \par \par Activate the project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 UIMainFrame::DoCommand()\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 219\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_UpdateDependencies} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; UpdateDependencies}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::UpdateDependencies}}{\f8\fs22  } {\f8\fs32 int COProject::UpdateDependencies(int intWhichConfigs)} {\f8\fs22 \par \par Update all dependencies for one or more configurations.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 intWhichConfigs} {\f8\fs22 : an int value that indicates whether to update dependencies for the currently selected configuration (CURRENT_CONFIG) or all configurations (ALL_CONFIGS).\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 289\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_UpdateDependencies} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; UpdateDependencies}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::UpdateDependencies}}{\f8\fs22  } {\f8\fs32 int COProject::UpdateDependencies(ConfigStr &csConfig)} {\f8\fs22 \par \par Update all dependencies for a configuration.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 csConfig} {\f8\fs22 : a ConfigStr reference that indicates the configuration to update.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 346\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_UpdateDependencies} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; UpdateDependencies}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::UpdateDependencies}}{\f8\fs22  } {\f8\fs32 int COProject::UpdateDependencies(ConfigStrArray &csArrayConfigs)} {\f8\fs22 \par \par Update all dependencies for one or more configurations.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 csArrayConfigs} {\f8\fs22 : a ConfigStrArray reference specifying which configurations to update dependencies for.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 401\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::Close}}{\f8\fs22  } {\f8\fs32 int COProject::Close(int iSave)} {\f8\fs22 \par \par Close the project and project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iSave} {\f8\fs22 : A Boolean value that indicates whether to save the project before closing (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 460\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetErrorCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetErrorCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetErrorCount}}{\f8\fs22  } {\f8\fs32 int COProject::GetErrorCount()} {\f8\fs22 \par \par Get the number of errors reported by the last build of the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer containing the number of errors.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 509\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetWarningCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetWarningCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetWarningCount}}{\f8\fs22  } {\f8\fs32 int COProject::GetWarningCount()} {\f8\fs22 \par \par Get the number of warning reported by the last build of the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer containing the number of warnings.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 522\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_VerifyBuild} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; VerifyBuild}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::VerifyBuild}}{\f8\fs22  } {\f8\fs32 int COProject::VerifyBuild(BOOL LogErrors, int * iErr, int * iWarn,  BOOL WrnsAsErrs /*= FALSE*/)} {\f8\fs22 \par \par Determine whether the last build of the project was successful or not. An unsuccessful build contains errors (or warnings treated as errors).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 LogErrors} {\f8\fs22 : A Boolean value that indicates whether to record the results of the last build in the log (TRUE) or not.\par \par } {\i\f8\fs22 iErr} {\f8\fs22 : A pointer to an integer that will contain the number of errors reported by the last build.\par \par } {\i\f8\fs22 iWarn} {\f8\fs22 : A pointer to an integer that will contain the number of warnings reported by the last build.\par \par } {\i\f8\fs22 WrnsAsErrs} {\f8\fs22 : A Boolean value that indicates whether to treat warnings as errors (TRUE) or not. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 540\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_WaitUntilBuildDone} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; WaitUntilBuildDone}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::WaitUntilBuildDone}}{\f8\fs22  } {\f8\fs32 int COProject::WaitUntilBuildDone(int Min,DWORD dwSleep=1000)} {\f8\fs22 \par \par Wait until the current build is finished or the amount of time specified has elasped. \par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if the build completes within the time specified; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Min} {\f8\fs22 : An integer that contains the number of minutes to wait for the build to complete.\par \par } {\i\f8\fs22 dwSleep} {\f8\fs22 : An DWORD that contains the number of milliseconds to wait between checks to see if build is done\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 598\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_New} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; New}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::New}}{\f8\fs22  } {\f8\fs32 int COProject::New(PROJOPTIONS &ProjOpts)} {\f8\fs22 \par \par Create a new project and project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ProjOpts} {\f8\fs22 : A PROJOPTIONS structure that defines the project. szName is a pointer to a string that contains the name of the project. szDir is a pointer to a string that contains the directory for the project. iType is a value that indicates the type of project: UIAW_PT_APPWIZ, UIAW_PT_APPWIZ_DLL, UIAW_PT_APP, UIAW_PT_DLL, UIAW_PT_CONSOLE, UIAW_PT_STATIC_LIBRARY, UIAW_PT_DUMMY_EXEC, UIAW_PT_DUMMY_DLL. szNewSubDir is a pointer to a string that contains the new subdirectory for the project. ProjFileOp\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 623\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_New} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; New}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::New}}{\f8\fs22  } {\f8\fs32 int COProject::New(LPCSTR szProjName, int ProjType, LPCSTR szDir /* NULL */, LPCSTR szNewSubDir /* NULL */, int ProjFileOpt /* 0 */, LPCSTR szProjFilesPath /* NULL */, LPCSTR szRemotePath /* NULL */, LPCSTR szRemoteFile /* NULL */)} {\f8\fs22 \par \par Create a new project and project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szProjName} {\f8\fs22 : A pointer to a string that contains the name of the project.\par \par } {\i\f8\fs22 ProjType} {\f8\fs22 : is a value that indicates the type of project: UIAW_PT_APPWIZ, UIAW_PT_APPWIZ_DLL, UIAW_PT_APP, UIAW_PT_DLL, UIAW_PT_CONSOLE, UIAW_PT_STATIC_LIBRARY, UIAW_PT_DUMMY_EXEC, UIAW_PT_DUMMY_DLL.\par \par } {\i\f8\fs22 szDir} {\f8\fs22 : A pointer to a string that contains the directory for the project. (Default value is NULL.)\par \par } {\i\f8\fs22 szNewSubDir} {\f8\fs22 : A pointer to a string that contains the new subdirectory for the project.  This subdirectory will be based off szDir, so it cannot contain root, UNC, or drive specifiers. (Default value is NULL.)\par \par } {\i\f8\fs22 ProjFileOpt} {\f8\fs22 : A value that indicates which files to add: ADD_ALL_SOURCE, ADD_ALL_HEADERS, ADD_ALL_RES_SCRIPTS, ADD_ALL_DEF_FILES, ADD_ALL_ODL_FILES, ADD_ALL_LIBS, ADD_ALL_OBJ_FILES, ADD_ALL_FILES, ADD_FILE, ADD_FILES_MYSELF. (Default value is 0.)\par \par } {\i\f8\fs22 szProjFilesPath} {\f8\fs22 : A pointer to a string containing the path that contains the project files to be added. (Default value is NULL.)\par \par } {\i\f8\fs22 szRemotePath} {\f8\fs22 : A pointer to a string that contains the remote executable path for this project. (Default value is NULL.)\par \par } {\i\f8\fs22 szRemoteFile} {\f8\fs22 : A pointer to a string that contains the remote executable filename for this project. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 688\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_BuildNew} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; BuildNew}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::BuildNew}}{\f8\fs22  } {\f8\fs32 int COProject::BuildNew(LPCSTR szProjName, PROJTYPE ProjType, LPCSTR szDir /* NULL */, LPCSTR szNewSubDir /* NULL */, int ProjFileOpt /* 0 */, LPCSTR szProjFilesPath /* NULL */, LPCSTR szRemotePath /* NULL */, LPCSTR szRemoteFile /* NULL */)} {\f8\fs22 \par \par Create a new project and build it.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szProjName} {\f8\fs22 : A pointer to a string that contains the name of the project.\par \par } {\i\f8\fs22 ProjType} {\f8\fs22 : is a value that indicates the type of project: UIAW_PT_APPWIZ, UIAW_PT_APPWIZ_DLL, UIAW_PT_APP, UIAW_PT_DLL, UIAW_PT_CONSOLE, UIAW_PT_STATIC_LIBRARY, UIAW_PT_DUMMY_EXEC, UIAW_PT_DUMMY_DLL.\par \par } {\i\f8\fs22 szDir} {\f8\fs22 : A pointer to a string that contains the directory for the project. (Default value is NULL.)\par \par } {\i\f8\fs22 szNewSubDir} {\f8\fs22 : A pointer to a string that contains the new subdirectory for the project. (Default value is NULL.)\par \par } {\i\f8\fs22 ProjFileOpt} {\f8\fs22 : A value that indicates which files to add: ADD_ALL_SOURCE, ADD_ALL_HEADERS, ADD_ALL_RES_SCRIPTS, ADD_ALL_DEF_FILES, ADD_ALL_ODL_FILES, ADD_ALL_LIBS, ADD_ALL_OBJ_FILES, ADD_ALL_FILES, ADD_FILE, ADD_FILES_MYSELF. (Default value is 0.)\par \par } {\i\f8\fs22 szProjFilesPath} {\f8\fs22 : A pointer to a string containing the path that contains the project files to be added. (Default value is NULL.)\par \par } {\i\f8\fs22 szRemotePath} {\f8\fs22 : A pointer to a string that contains the remote executable path for this project. (Default value is NULL.)\par \par } {\i\f8\fs22 szRemoteFile} {\f8\fs22 : A pointer to a string that contains the remote executable filename for this project. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 749\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_NewProject} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; NewProject}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::NewProject}}{\f8\fs22  } {\f8\fs32 int COProject::NewProject(PROJTYPE ptProjType, LPCSTR szProjName, int intPlatforms, LPCSTR szLocation)} {\f8\fs22 \par \par Create a new project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szProjType} {\f8\fs22 : A PROJTYPE value that indicates the type of project to create.\par \par } {\i\f8\fs22 szProjName} {\f8\fs22 : A pointer to a string that contains the name of the project.\par \par } {\i\f8\fs22 intPlatforms} {\f8\fs22 : A combination of PLATFORM_TYPE values that indicates the platforms the project will target.\par \par } {\i\f8\fs22 szProjLocation} {\f8\fs22 : A pointer to a string that contains the location for the project.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 785\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_InsertProject} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; InsertProject}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::InsertProject}}{\f8\fs22  } {\f8\fs32 int COProject::InsertProject(PROJTYPE ptProjType, LPCSTR szProjName, int intPlatforms, PROJ_HIERARCHY phProjHier = TOP_LEVEL_PROJ, LPCSTR szTopLevelProj = NULL)} {\f8\fs22 \par \par Inserts a new project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szProjType} {\f8\fs22 : A PROJTYPE value that indicates the type of project to create.\par \par } {\i\f8\fs22 szProjName} {\f8\fs22 : A pointer to a string that contains the name of the project.\par \par } {\i\f8\fs22 intPlatforms} {\f8\fs22 : A combination of PLATFORM_TYPE values that indicates the platforms the project will target.\par \par } {\i\f8\fs22 phProjHier} {\f8\fs22 : A PROJECT_HIERARCHY value indicating a top-levl or subproject. The default is TOP_LEVEL_PROJ.\par \par } {\i\f8\fs22 szTopLevelProj} {\f8\fs22 : A pointer to a string that contains the name of the top-level project under which the new subproject is to be inserted.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 833\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_NewAppWiz} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; NewAppWiz}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::NewAppWiz}}{\f8\fs22  } {\f8\fs32 int COProject::NewAppWiz(LPCSTR projname, LPCSTR projdir, int platform, const APPWIZ_OPTIONS* pOptions)} {\f8\fs22 \par \par Create a new AppWizard project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 projname} {\f8\fs22 : A pointer to a string that contains the name of the AppWizard project.\par \par } {\i\f8\fs22 projdir} {\f8\fs22 : A pointer to a string that contains the path for the AppWizard project.\par \par } {\i\f8\fs22 platform} {\f8\fs22 : A value that indicates the platform to create the AppWizard project for: PLATFORM_WIN32_X86, PLATFORM_WIN32S_X86, PLATFORM_MAC_68K, PLATFORM_MAC_PPC, PLATFORM_WIN32_MIPS, PLATFORM_WIN32_ALPHA, PLATFORM_WIN32_PPC, PLATFORM_CURRENT, PLATFORM_USER, PLATFORM_NON_USER.\par \par } {\i\f8\fs22 pOptions} {\f8\fs22 : A structure containing appwizard options.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 950\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_Open} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; Open}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::Open}}{\f8\fs22  } {\f8\fs32 int COProject::Open(LPCSTR szProjName, int iMethod, BOOL LogWarning /* = TRUE */)} {\f8\fs22 \par \par Open a project and the project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szProjName} {\f8\fs22 : A pointer to a string containing the filename of the project to open. This is usually a full path to the project file.\par \par } {\i\f8\fs22 iMethod} {\f8\fs22 : Unused.\par \par } {\i\f8\fs22 LogWarning} {\f8\fs22 : A Boolean value that indicates whether to log any warnings that occur when opening a project (TRUE) or not. (Default value is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1027\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_Save} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; Save}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::Save}}{\f8\fs22  } {\f8\fs32 int COProject::Save(int wait == FALSE, LPCSTR file = NULL)} {\f8\fs22 \par \par Save the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 wait} {\f8\fs22 : A Boolean value that indicates whether to wait for the file to be completely written before returning (TRUE) or not. (Default value is FALSE.)\par \par } {\i\f8\fs22 file} {\f8\fs22 : A pointer to a string that contains the name of the project file. This parameter is only required if wait is set to TRUE. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1223\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_AddFiles} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; AddFiles}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::AddFiles}}{\f8\fs22  } {\f8\fs32 int COProject::AddFiles(LPCSTR szFileName, LPCSTR szGrpName)} {\f8\fs22 \par \par Add the files given by the filespec in szFileName to the specified group in the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the filespec describing the files to add. Wildcards (* and ?) are permitted.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group to add the files to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1269\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_RemoveFiles} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; RemoveFiles}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::RemoveFiles}}{\f8\fs22  } {\f8\fs32 int COProject::RemoveFiles(LPCSTR szFileNames, LPCSTR szGrpName )} {\f8\fs22 \par \par Remove the files named in szFileNames from the specified group in the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileNames} {\f8\fs22 : A pointer to a string that contains the list of files (separated by semicolons (;)) to remove from the group.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1347\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_RemoveAll} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; RemoveAll}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::RemoveAll}}{\f8\fs22  } {\f8\fs32 int COProject::RemoveAll(LPCSTR szGrpName)} {\f8\fs22 \par \par Remove all files from the specified group in the project. This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1421\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_DeleteMakeFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; DeleteMakeFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::DeleteMakeFile}}{\f8\fs22  } {\f8\fs32 int COProject::DeleteMakeFile()} {\f8\fs22 \par \par Delete the makefile associated with the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1438\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_DeleteFromProjectDir} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; DeleteFromProjectDir}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::DeleteFromProjectDir}}{\f8\fs22  } {\f8\fs32 int COProject::DeleteFromProjectDir(LPCSTR strDelTarget)} {\f8\fs22 \par \par Delete all files in the project directory.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 strDelTarget} {\f8\fs22 : A pointer to a string that contains a relative path to append to the project directory, or a full path if there is no project open. This parameter can be NULL.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1451\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_RemoveIntermediateDir} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; RemoveIntermediateDir}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::RemoveIntermediateDir}}{\f8\fs22  } {\f8\fs32 int COProject::RemoveIntermediateDir()} {\f8\fs22 \par \par Delete the directory that contains the intermediate files generated by building the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1474\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_RemoveTargetDir} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; RemoveTargetDir}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::RemoveTargetDir}}{\f8\fs22  } {\f8\fs32 int COProject::RemoveTargetDir()} {\f8\fs22 \par \par Delete the directory that contains the target files generated by building the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1486\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_AddTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; AddTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::AddTarget}}{\f8\fs22  } {\f8\fs32 int COProject::AddTarget(LPCSTR Name, int Type , BOOL Debug/* =FALSE*/)} {\f8\fs22 \par \par Add a new target to the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A pointer to a string that contains the name of the new target.\par \par } {\i\f8\fs22 Type} {\f8\fs22 : A value that indicates the type of target to add: TARGET_WIN32_X86_DEBUG, TARGET_WIN32_X86_RELEASE, TARGET_MAC_68K_DEBUG, TARGET_MAC_68K_RELEASE, TARGET_MAC_PPC_DEBUG, TARGET_MAC_PPC_RELEASE, TARGET_USER, TARGET_CURRENT.\par \par } {\i\f8\fs22 Debug} {\f8\fs22 : A Boolean value that indicates whether to make this target debug (TRUE) or not. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1502\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_AddTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; AddTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::AddTarget}}{\f8\fs22  } {\f8\fs32 int COProject::AddTarget(LPCSTR Name, LPCSTR CopyFrom)} {\f8\fs22 \par \par Add a new target to the project by deriving from an existing target.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A pointer to a string that contains the name of the new target.\par \par } {\i\f8\fs22 CopyFrom} {\f8\fs22 : A pointer to a string that contains the name of the target to derive this target from.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1526\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetTarget}}{\f8\fs22  } {\f8\fs32 int COProject::SetTarget(LPCSTR Target)} {\f8\fs22 \par \par Select one of the targets for this project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Target} {\f8\fs22 : A pointer to a string that contains the name of the target to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1550\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_DeleteTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; DeleteTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::DeleteTarget}}{\f8\fs22  } {\f8\fs32 int COProject::DeleteTarget(LPCSTR Target)} {\f8\fs22 \par \par Delete one of the targets for this project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Target} {\f8\fs22 : A pointer to a string that contains the name of the target to delete.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1598\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_RenameTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; RenameTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::RenameTarget}}{\f8\fs22  } {\f8\fs32 int COProject::RenameTarget(LPCSTR OldName, LPCSTR NewName)} {\f8\fs22 \par \par Change the name of one of the targets in this project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 OldName} {\f8\fs22 : A pointer to a string that contains the name of the target to change.\par \par } {\i\f8\fs22 NewName} {\f8\fs22 : A pointer to a string that contains the new name for the target.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1621\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetTarget}}{\f8\fs22  } {\f8\fs32 LPCSTR COProject::GetTarget(int Target /* = 0 Active target */)} {\f8\fs22 \par \par Get the name of the either the active target or the specified target.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the name of the target specified.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Target} {\f8\fs22 : An integer that contains a 1-based index into the list of targets. 0 will retrieve the name of the current target. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1644\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_Execute} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; Execute}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::Execute}}{\f8\fs22  } {\f8\fs32 COProject::Execute(int iRebuild)} {\f8\fs22 \par \par Execute the current project. This function does not execute the project under the debugger.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iRebuild} {\f8\fs22 : An Boolean value that indicates whether to rebuild the project before executing, if asked (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1668\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_Build} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; Build}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::Build}}{\f8\fs22  } {\f8\fs32 int COProject::Build(int iWait, DWORD interval /*1000*/)} {\f8\fs22 \par \par Build the current target in this project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iWait} {\f8\fs22 : An integer that contains the amount of time in minutes to wait for the build to complete.\par \par } {\i\f8\fs22 interval} {\f8\fs22 : An DWORD that contains the amount of time in milliseconds to wait between checks for build completion\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1707\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_RebuildAll} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; RebuildAll}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::RebuildAll}}{\f8\fs22  } {\f8\fs32 int COProject::RebuildAll(int iWait,DWORD interval /*1000*/)} {\f8\fs22 \par \par Perform a complete rebuild of the current target in this project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iWait} {\f8\fs22 : An integer that contains the amount of time in minutes to wait for the build to complete.\par \par } {\i\f8\fs22 interval} {\f8\fs22 : An DWORD that contains the amount of time in milliseconds to wait between checks for build completion\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1725\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_StopBuild} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; StopBuild}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::StopBuild}}{\f8\fs22  } {\f8\fs32 int COProject::StopBuild()} {\f8\fs22 \par \par Stop the current build.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1740\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetProjectItemProp} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetProjectItemProp}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetProjectItemProp}}{\f8\fs22  } {\f8\fs32 CString COProject::GetProjectItemProp(int P_PropID)} {\f8\fs22 \par \par Get the name of the item indicated by P_PropID.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the name of the item.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 P_PropID} {\f8\fs22 : An integer that contains the ID of the item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1756\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SelectFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SelectFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SelectFile}}{\f8\fs22  } {\f8\fs32 int COProject::SelectFile(LPCSTR szFile, LPCSTR szGrp)} {\f8\fs22 \par \par Select a file in the project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFile} {\f8\fs22 : A pointer to a string that contains the name of the file to select.\par \par } {\i\f8\fs22 szGrp} {\f8\fs22 : A pointer to a string that contains the name of the group that contains the file. The value can be an empty string, if the group is not known.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1788\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SelectGroup} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SelectGroup}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SelectGroup}}{\f8\fs22  } {\f8\fs32 int COProject::SelectGroup(LPCSTR szGrpName)} {\f8\fs22 \par \par Select a group in the project window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group to select in the project window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1855\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetProjProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetProjProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetProjProperty}}{\f8\fs22  } {\f8\fs32 int COProject::SetProjProperty(PROJ_PROP_CATEGORIES iCategory,UINT iCtrlId, UINT iNewValue )} {\f8\fs22 \par \par Set a value-based property of the project. (See SetProjProperty(PROJ_PROP_CATEGORIES, UINT, LPCSTR) to set text-based properties.) This function will set project properties such as general, debugger, compiler, linker, resource, and browser.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that modifies the property.\par \par } {\i\f8\fs22 iNewValue} {\f8\fs22 : An integer that contains the new value of the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1895\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetProjProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetProjProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetProjProperty}}{\f8\fs22  } {\f8\fs32 int COProject::SetProjProperty(PROJ_PROP_CATEGORIES iCategory,UINT iCtrlId, LPCSTR szNewValue )} {\f8\fs22 \par \par Set a text-based property of the project. (See SetProjProperty(PROJ_PROP_CATEGORIES, UINT, UINT) to set value-based properties.) This function will set project properties such as general, debugger, compiler, linker, resource, and browser.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that modifies the property.\par \par } {\i\f8\fs22 szNewValue} {\f8\fs22 : An pointer to a string that contains the new value of the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1936\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetProjProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetProjProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetProjProperty}}{\f8\fs22  } {\f8\fs32 int COProject::GetProjProperty(PROJ_PROP_CATEGORIES iCategory,UINT iCtrlId,CString szValue)} {\f8\fs22 \par \par Get the value of a property of this project. (See GetProjProperty(PROJ_PROP_CATEGORIES, UINT) to get text-based properties.) This function will get project properties such as general, debugger, compiler, linker, resource, and browser. This function in NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\i\f8\fs22 szNewValue} {\f8\fs22 : A CString that adds no value that I can see.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1976\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetProjProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetProjProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetProjProperty}}{\f8\fs22  } {\f8\fs32 CString COProject::GetProjProperty(PROJ_PROP_CATEGORIES iCategory,UINT iCtrlId)} {\f8\fs22 \par \par Get the text value of a property of this project. (See GetProjProperty(PROJ_PROP_CATEGORIES, UINT, CString) to get value-based properties.) This function will get project properties such as general, debugger, compiler, linker, resource, and browser. This function in NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 1992\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetGroupProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetGroupProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetGroupProperty}}{\f8\fs22  } {\f8\fs32 int COProject::GetGroupProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName, UINT iCtrlId)} {\f8\fs22 \par \par Get the value of a property for the given group. (See GetGroupProperty(PROJ_PROP_CATEGORIES, LPCSTR, UINT, CString) to get text-based properties.) This function in NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group to get properties for.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2011\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetGroupProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetGroupProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetGroupProperty}}{\f8\fs22  } {\f8\fs32 CString COProject::GetGroupProperty(PROJ_PROP_CATEGORIES  iCategory,LPCSTR szGrpName ,UINT iCtrlId,CString szValue)} {\f8\fs22 \par \par Get the text value of a property for the given group. (See GetGroupProperty(PROJ_PROP_CATEGORIES, LPCSTR, UINT) to get value-based properties.) This function in NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group to get properties for.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\i\f8\fs22 szValue} {\f8\fs22 : A CString that contains the value of the property for the group.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2029\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetGroupProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetGroupProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetGroupProperty}}{\f8\fs22  } {\f8\fs32 int COProject::SetGroupProperty(PROJ_PROP_CATEGORIES  iCategory,LPCSTR szGrpName ,UINT iCtrlId, UINT iNewValue )} {\f8\fs22 \par \par Set the value of a property for the given group. (See SetGroupProperty(PROJ_PROP_CATEGORIES, LPCSTR, UINT, LPCSTR) to set text-based properties.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group to get properties for.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\i\f8\fs22 iNewValue} {\f8\fs22 : An integer that contains the new value for the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2047\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetGroupProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetGroupProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetGroupProperty}}{\f8\fs22  } {\f8\fs32 int COProject::SetGroupProperty(PROJ_PROP_CATEGORIES  iCategory,LPCSTR szGrpName ,UINT iCtrlId, LPCSTR szNewValue )} {\f8\fs22 \par \par Set the text value of a property for the given group. (See SetGroupProperty(PROJ_PROP_CATEGORIES, LPCSTR, UINT, UINT) to set value-based properties.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group to get properties for.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\i\f8\fs22 szNewValue} {\f8\fs22 : A pointer to a string that contains the text value for the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2074\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetFileProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetFileProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetFileProperty}}{\f8\fs22  } {\f8\fs32 int COProject::GetFileProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName ,LPCSTR szFileName,UINT iCtrlId)} {\f8\fs22 \par \par Get the value of a property for the given file. (See GetFileProperty(PROJ_PROP_CATEGORIES, LPCSTR, LPCSTR, UINT, CString) to get text-based properties.) This function in NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group that contains the file.\par \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the file to get properties for.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2102\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetFileProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetFileProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetFileProperty}}{\f8\fs22  } {\f8\fs32 CString COProject::GetFileProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName ,LPCSTR szFileName,UINT iCtrlId,CString szValue)} {\f8\fs22 \par \par Get the text value of a property for the given file. (See GetFileProperty(PROJ_PROP_CATEGORIES, LPCSTR, LPCSTR, UINT) to get value-based properties.) This function in NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group that contains the file.\par \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the file to get properties for.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\i\f8\fs22 szValue} {\f8\fs22 : A CString that contains the text value of the property for the given file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2121\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetFileProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetFileProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetFileProperty}}{\f8\fs22  } {\f8\fs32 int COProject::SetFileProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName, LPCSTR szFileName ,UINT iCtrlId, UINT iNewValue )} {\f8\fs22 \par \par Set the value of a property for the given file. (See SetFileProperty(PROJ_PROP_CATEGORIES, LPCSTR, LPCSTR, UINT, LPCSTR) to set text-based properties.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group that contains the file.\par \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the file to set properties for.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\i\f8\fs22 iNewValue} {\f8\fs22 : An integer that contains the new value for the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2140\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetFileProperty} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetFileProperty}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetFileProperty}}{\f8\fs22  } {\f8\fs32 int COProject::SetFileProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName, LPCSTR szFileName ,UINT iCtrlId, LPCSTR szNewValue )} {\f8\fs22 \par \par Set the value of a property for the given file. (See SetFileProperty(PROJ_PROP_CATEGORIES, LPCSTR, LPCSTR, UINT, UINT) to set value-based properties.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : A value that indicates the category of the property: CT_GENERAL, CT_EXT_DBGOPTS, CT_MAKE_TYPE_LIB, CT_COMPILER, CT_RESOURCE, CT_BROWSER, CT_LINKER.\par \par } {\i\f8\fs22 szGrpName} {\f8\fs22 : A pointer to a string that contains the name of the group that contains the file.\par \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the file to set properties for.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the property.\par \par } {\i\f8\fs22 szNewValue} {\f8\fs22 : A pointer to a string that contains the text value for the property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2168\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetOption}}{\f8\fs22  } {\f8\fs32 int COProject::SetOption(INT iCategory,UINT iCtrlId, LPCSTR szNewValue)} {\f8\fs22 \par \par Set the text value of the project option specified by iCtrlId in the given category (iCategory). (See SetOption(UINT, UINT, UINT) to set value-based options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : An integer that contains the project category that contains the option to set. This is the ID of a control on the property page in the project options dialog.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the option to set.\par \par } {\i\f8\fs22 szNewValue} {\f8\fs22 : A pointer to a string that contains the value to set the option to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2194\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetOption}}{\f8\fs22  } {\f8\fs32 INT COProject::SetOption(INT iCategory, UINT iCtrlId, UINT iNewValue)} {\f8\fs22 \par \par Set the value of the project option specified by iCtrlId in the given category (iCategory). (See SetOption(UINT, UINT, LPCSTR) to set text-based options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCategory} {\f8\fs22 : An integer that contains the project category that contains the option to set. This is the ID of a control on the property page in the project options dialog.\par \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control that identifies the option to set.\par \par } {\i\f8\fs22 iNewValue} {\f8\fs22 : An integer that contains the value to set the option to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2316\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_MakeProjectExternal} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; MakeProjectExternal}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::MakeProjectExternal}}{\f8\fs22  } {\f8\fs32 int COProject::MakeProjectExternal(LPCSTR sName/* =NULL*/)} {\f8\fs22 \par \par Make the project an external project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 LPCSTR} {\f8\fs22 : A pointer to a string that contains the new name of the project, if desired. NULL means don't rename the project. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2476\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetPlatform} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetPlatform}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetPlatform}}{\f8\fs22  } {\f8\fs32 int COProject::SetPlatform(PLATFORM_TYPE platform)} {\f8\fs22 \par \par Set the current platform for the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 platform} {\f8\fs22 : A value that specifies the platform: PLATFORM_WIN32_X86, PLATFORM_WIN32S_X86, PLATFORM_WIN32_MIPS, PLATFORM_MAC_68K, PLATFORM_MAC_PPC.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2524\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetRemotePath} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetRemotePath}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetRemotePath}}{\f8\fs22  } {\f8\fs32 int COProject::SetRemotePath(LPCSTR remote_file, TARGET_TYPE target /*= TARGET_CURRENT*/, SRT_OPT srt_opt /*= PREPEND_REMOTE_PATH*/, PLATFORM_TYPE platform /*= PLATFORM_USER*/)} {\f8\fs22 \par \par Set the remote path for this project. This is used for remote transfer and remote debugging.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 remote_file} {\f8\fs22 : A pointer to a string that contains the remote file name.\par \par } {\i\f8\fs22 target} {\f8\fs22 : A value that indicates the target to set the remote path for: TARGET_WIN32_X86_DEBUG, TARGET_WIN32_X86_RELEASE, TARGET_MAC_68K_DEBUG, TARGET_MAC_68K_RELEASE, TARGET_MAC_PPC_DEBUG, TARGET_MAC_PPC_RELEASE, TARGET_USER, TARGET_CURRENT. (Default value is TARGET_CURRENT.)\par \par } {\i\f8\fs22 srt_opt} {\f8\fs22 : A value that indicates whether the full remote path is supplied or to prepend the given path to the existing remote path: PREPEND_REMOTE_PATH, FULL_PATH_SUPPLIED. (Default value is PREPEND_REMOTE_PATH.)\par \par } {\i\f8\fs22 platform} {\f8\fs22 : A value that specifies the platform: PLATFORM_WIN32_X86, PLATFORM_WIN32S_X86, PLATFORM_WIN32_MIPS, PLATFORM_MAC_68K, PLATFORM_MAC_PPC. (Default value is PLATFORM_USER.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2568\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetAdditionalDLLs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetAdditionalDLLs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetAdditionalDLLs}}{\f8\fs22  } {\f8\fs32 int COProject::SetAdditionalDLLs(LPCSTR szDLLs)} {\f8\fs22 \par \par Set additional DLLs to be loaded when debugging this project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 LPCSTR} {\f8\fs22 : A pointer to a string that contains the name of the additional DLL to add.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2615\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_GetRemoteTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; GetRemoteTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::GetRemoteTarget}}{\f8\fs22  } {\f8\fs32 CString COProject::GetRemoteTarget(void)} {\f8\fs22 \par \par Get the project's remote path.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the project's remote path.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2644\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetBuildCommand} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetBuildCommand}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetBuildCommand}}{\f8\fs22  } {\f8\fs32 int COProject::SetBuildCommand(LPCSTR command)} {\f8\fs22 \par \par Set the build command if this project is an external project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 LPCSTR} {\f8\fs22 : A pointer to a string that contains the build command.\par \par } {\i\f8\fs22 index} {\f8\fs22 : The 1 based index of the configuration to choose.  0 (default) selects all configurations.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2666\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_UpdateRemoteFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; UpdateRemoteFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::UpdateRemoteFile}}{\f8\fs22  } {\f8\fs32 int COProject::UpdateRemoteFile(LPCSTR local_file /*= NULL*/, TARGET_TYPE target /*= CURRENT_TARGET*/, PLATFORM_TYPE platform /*= PLATFORM_USER*/)} {\f8\fs22 \par \par Update the remote file from the host machine to the remote machine.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 local_file} {\f8\fs22 : A pointer to a string that contains the local filename of the file to transfer. This parameter is only used when PLATFORM_WIN32S_X86 is specified by the platform parameter. (Default value is NULL.)\par \par } {\i\f8\fs22 target} {\f8\fs22 : A value that indicates the target to set the remote path for: TARGET_WIN32_X86_DEBUG, TARGET_WIN32_X86_RELEASE, TARGET_MAC_68K_DEBUG, TARGET_MAC_68K_RELEASE, TARGET_MAC_PPC_DEBUG, TARGET_MAC_PPC_RELEASE, TARGET_USER, TARGET_CURRENT. (Default value is TARGET_CURRENT.)\par \par } {\i\f8\fs22 platform} {\f8\fs22 : A value that specifies the platform: PLATFORM_WIN32_X86, PLATFORM_WIN32S_X86, PLATFORM_WIN32_MIPS, PLATFORM_MAC_68K, PLATFORM_MAC_PPC. (Default value is PLATFORM_USER.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2725\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetLocalTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetLocalTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetLocalTarget}}{\f8\fs22  } {\f8\fs32 int COProject::SetLocalTarget(LPCSTR localfile)} {\f8\fs22 \par \par Set the name of the executable for debugging with this project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 LPCSTR} {\f8\fs22 : A pointer to a string that contains the name of the executable for debugging.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2793\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetOutputFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetOutputFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetOutputFile}}{\f8\fs22  } {\f8\fs32 int COProject::SetOutputFile(LPCSTR localfile)} {\f8\fs22 \par \par Set the location for the output executable.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 LPCSTR} {\f8\fs22 : A pointer to a string that contains the location of the output executable.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2854\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_ToggleBSCGeneration} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; ToggleBSCGeneration}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::ToggleBSCGeneration}}{\f8\fs22  } {\f8\fs32 int COProject::ToggleBSCGeneration(TOGGLE_TYPE t)} {\f8\fs22 \par \par Toggle automatic BSC Generation for the project (off by default).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 TOGGLE_TYPE} {\f8\fs22 : t specifies whether to turn automatic BSC off (TOGGLE_OFF) or on (TOGGLE_ON)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 2915\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetCustomBuildOptions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetCustomBuildOptions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetCustomBuildOptions}}{\f8\fs22  } {\f8\fs32 int COProject::SetCustomBuildOptions(LPCSTR szDescription, CStringArray &cstrArrayBuildCmds, CStringArray &cstrArrayOutputFiles, ConfigStrArray &csArrayConfigs)} {\f8\fs22 \par \par Set the custom build options (including description, build commands, and output files) for one or more projects or files.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szDescription} {\f8\fs22 : A pointer to a string that contains the custom build description.\par \par } {\i\f8\fs22 cstrArrayBuildCmds} {\f8\fs22 : A reference to a CStringArray that contains the list of custom build commands.\par \par } {\i\f8\fs22 cstrArrayOutputFiles} {\f8\fs22 : A reference to a CStringArray that contains the list of custom output files.\par \par } {\i\f8\fs22 csArrayConfigs} {\f8\fs22 : A reference to a ConfigStrArray  that contains a list of configurations in the project settings dlg. the specified custom options will be applied to those configurations. \par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 3028\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetCustomBuildOptions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetCustomBuildOptions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetCustomBuildOptions}}{\f8\fs22  } {\f8\fs32 int COProject::SetCustomBuildOptions(LPCSTR szDescription, CStringArray &cstrArrayBuildCmds, CStringArray &cstrArrayOutputFiles, ConfigStrArray &csArrayConfigs, CStringArray &cstrArrayFiles, int intConfigInclusion = INCLUDE_CONFIG_LEVEL)} {\f8\fs22 \par \par Set the custom build options (including description, build commands, and output files) for one or more projects or files.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szDescription} {\f8\fs22 : A pointer to a string that contains the custom build description.\par \par } {\i\f8\fs22 cstrArrayBuildCmds} {\f8\fs22 : A reference to a CStringArray that contains the list of custom build commands.\par \par } {\i\f8\fs22 cstrArrayOutputFiles} {\f8\fs22 : A reference to a CStringArray that contains the list of custom output files.\par \par } {\i\f8\fs22 csArrayConfigs} {\f8\fs22 : A reference to a ConfigStrArray  that contains a list of configurations in the project settings dlg. the specified custom options will be applied to those configurations. \par \par } {\i\f8\fs22 cstrArrayFiles} {\f8\fs22 : A reference to a CStringArray that contains a list of files inside configurtaions in the project settings dlg. the specified custom options will be applied to those files of the specified configurations.  \par \par } {\i\f8\fs22 intConfigInclusion} {\f8\fs22 : An int value indicating whether or not to apply the custom build settings at the configuration level as well as the file level (INCLUDE_CONFIG_LEVEL or EXCLUDE_CONFIG_LEVEL). the default is INCLUDE_CONFIG_LEVEL.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 3055\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetOutputTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetOutputTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetOutputTarget}}{\f8\fs22  } {\f8\fs32 int COProject::SetOutputTarget(LPCSTR outfile)} {\f8\fs22 \par \par Set the name of the output target when this project is an external project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 outfile} {\f8\fs22 : A pointer to a string that contains the name of the output filename.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 3305\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_AppWizard} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; AppWizard}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::AppWizard}}{\f8\fs22  } {\f8\fs32 HWND COProject::AppWizard(int bSaveChanges /*= FALSE*/)} {\f8\fs22 \par \par Bring up the AppWizard (New Project) dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the AppWizard (New Project) dialog.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bSaveChanges} {\f8\fs22 : A Boolean value that specifies whether to save the dirty files before closing them. (Default value is FALSE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 3325\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_CreateNewProject} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; CreateNewProject}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::CreateNewProject}}{\f8\fs22  } {\f8\fs32 HWND COProject::CreateNewProject(LPCSTR szProjName, PROJTYPE ProjType, LPCSTR szDir, LPCSTR szNewSubDir, int ProjFileOpt, LPCSTR szProjFilesPath, LPCSTR szRemotePath, LPCSTR szRemoteFile)} {\f8\fs22 \par \par This function creates a new project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the workspace window.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szProjName} {\f8\fs22 : - Name of project to create.\par \par } {\i\f8\fs22 ProjType} {\f8\fs22 : - Type of project.  UIAW_PT_APPWIZ, etc.\par \par } {\i\f8\fs22 szDir} {\f8\fs22 : - Directory in which to create the project.\par \par } {\i\f8\fs22 szNewSubDir} {\f8\fs22 : - Further subdirectory specifier for project.  Based off of szDir.\par \par } {\i\f8\fs22 ProjFileOpt} {\f8\fs22 : - Not currently used.\par \par } {\i\f8\fs22 szProjFilesPath} {\f8\fs22 : - Not currently used.\par \par } {\i\f8\fs22 szRemotePath} {\f8\fs22 : - Not currently used.\par \par } {\i\f8\fs22 szRemoteFile} {\f8\fs22 : - Not currently used.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 3407\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_VerifyClasses} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; VerifyClasses}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::VerifyClasses}}{\f8\fs22  } {\f8\fs32 HWND COProject::VerifyClasses(LPCSTR pszBaseLineFile)} {\f8\fs22 \par \par This function creates a\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pszBaseLineFile} {\f8\fs22 : - Name of file containing \par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 3542\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COProject_SetProgramArguments} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COProject; SetProgramArguments}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COProject::SetProgramArguments}}{\f8\fs22  } {\f8\fs32 int COProject::SetProgramArguments(LPCSTR progargs)} {\f8\fs22 \par \par Set program arguments for the exe (debuggee).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 LPCSTR} {\f8\fs22 : A pointer to a string that contains the program arguments.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coprject.cpp, 3942\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::Display}}{\f8\fs22  } {\f8\fs32 HWND UISqlDataSources::Display(void)} {\f8\fs22 \par \par Display the SQL Data Sources dialog. This dialog is used during AppWizard. This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the SQL Data Sources dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 28\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_SetODBCName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; SetODBCName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::SetODBCName}}{\f8\fs22  } {\f8\fs32 int UISqlDataSources::SetODBCName(CString ds) } {\f8\fs22 \par \par Set the name of the SQL data source in the SQL Data Sources dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ds} {\f8\fs22 : A CString that contains the name of the SQL data source.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 39\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_SetODBCName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; SetODBCName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::SetODBCName}}{\f8\fs22  } {\f8\fs32 int UISqlDataSources::SetODBCName(int ds) } {\f8\fs22 \par \par Set the name of the SQL data source in the SQL Data Sources dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ds} {\f8\fs22 : A CString that contains the name of the SQL data source.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 52\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_SetDAOName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; SetDAOName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::SetDAOName}}{\f8\fs22  } {\f8\fs32 int UISqlDataSources::SetDAOName(CString ds) } {\f8\fs22 \par \par Set the name of the SQL data source in the SQL Data Sources dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ds} {\f8\fs22 : A CString that contains the name of the SQL data source.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 66\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_DataSource} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; DataSource}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::DataSource}}{\f8\fs22  } {\f8\fs32 int UISqlDataSources::DataSource(Int Type)} {\f8\fs22 \par \par Selects the type of data source ODBC or DAO\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ds} {\f8\fs22 : A CString that contains the name of the SQL data source.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 82\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_RecordSetType} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; RecordSetType}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::RecordSetType}}{\f8\fs22  } {\f8\fs32 int UISqlDataSources::RecordSetType(REC_SET_TYPE Type)} {\f8\fs22 \par \par Selects record set type Snap shot, dynaset, tables.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ds} {\f8\fs22 : A CString that contains the name of the SQL data source.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 94\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_DetectDirtyCol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; DetectDirtyCol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::DetectDirtyCol}}{\f8\fs22  } {\f8\fs32 int UISqlDataSources::DetectDirtyCol(int Yes = 1) } {\f8\fs22 \par \par Check the Detect Dirty col option\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ds} {\f8\fs22 : A CString that contains the name of the SQL data source.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 106\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_BindAllCol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; BindAllCol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::BindAllCol}}{\f8\fs22  } {\f8\fs32 int UISqlDataSources::BindAllCol(int Yes = 1) } {\f8\fs22 \par \par Specify if you want to set the Bind All collumn option.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ds} {\f8\fs22 : A CString that contains the name of the SQL data source.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 122\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlDataSources_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlDataSources; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlDataSources::Close}}{\f8\fs22  } {\f8\fs32 int UISqlDataSources::Close(int OK /* = 1 */)} {\f8\fs22 \par \par Close the SQL Data Sources dialog by clicking on either OK or Cancel.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 OK} {\f8\fs22 : An integer that specifies which button to click on to dismiss the dialog. 1 to click on OK, 0 to click on Cancel. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 137\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlServerLogIn_ID} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlServerLogIn; ID}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlServerLogIn::ID}}{\f8\fs22  } {\f8\fs32 int UISqlServerLogIn::ID(CString ID)} {\f8\fs22 \par \par Set the ID in the SQL Server Log In dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ID} {\f8\fs22 : A CString that contains the ID.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 157\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlServerLogIn_Pw} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlServerLogIn; Pw}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlServerLogIn::Pw}}{\f8\fs22  } {\f8\fs32 int UISqlServerLogIn::Pw(CString pw)} {\f8\fs22 \par \par Set the password in the SQL Server Log In dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pw} {\f8\fs22 : A CString that contains the password.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 168\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISqlServerLogIn_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISqlServerLogIn; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISqlServerLogIn::Close}}{\f8\fs22  } {\f8\fs32 int UISqlServerLogIn::Close(int OK/* = 1 */)} {\f8\fs22 \par \par Close the SQL Server Log In dialog by clicking either the OK button or the Cancel button.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 OK} {\f8\fs22 : An integer that specifies which button to click on to dismiss the dialog. 1 to click on OK, 0 to click on Cancel. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 180\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISelectTables_Name} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISelectTables; Name}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISelectTables::Name}}{\f8\fs22  } {\f8\fs32 int UISelectTables::Name(CString tbName)} {\f8\fs22 \par \par Set the table name in the Select Tables dialog by name. (See Name(int) to set the name by index.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 tbName} {\f8\fs22 : A CString that contains the name of the table.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 200\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISelectTables_Name} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISelectTables; Name}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISelectTables::Name}}{\f8\fs22  } {\f8\fs32 int UISelectTables::Name(int index /*= 1*/)} {\f8\fs22 \par \par Set the table name in the Select Tables dialog by index. (See Name(CString) to set the name by name.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the index into the list of tables.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 213\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISelectTables_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISelectTables; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISelectTables::Close}}{\f8\fs22  } {\f8\fs32 int UISelectTables::Close(int OK /* = 1 */)} {\f8\fs22 \par \par Close the Select Tables dialog by clicking either the OK button or the Cancel button.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 OK} {\f8\fs22 : An integer that specifies which button to click on to dismiss the dialog. 1 to click on OK, 0 to click on Cancel. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 226\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UISelectRecordSet_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UISelectRecordSet; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UISelectRecordSet::Close}}{\f8\fs22  } {\f8\fs32 int UISelectRecordSet::Close(int OK /* = 1*/)} {\f8\fs22 \par \par Close the Select Record Set dialog by clicking either the OK button or the Cancel button.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 OK} {\f8\fs22 : An integer that specifies which button to click on to dismiss the dialog. 1 to click on OK, 0 to click on Cancel. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 248\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_*UISelectRecordSet_New} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} *UISelectRecordSet; New}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} *UISelectRecordSet::New}}{\f8\fs22  } {\f8\fs32 UIDataBaseDlgs *UISelectRecordSet::New() } {\f8\fs22 \par \par Bring up the Database dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a UIDataBaseDlgs object that represents the dialog opened.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 266\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDataBaseDlgs_WaitForSources} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDataBaseDlgs; WaitForSources}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDataBaseDlgs::WaitForSources}}{\f8\fs22  } {\f8\fs32 int UIDataBaseDlgs::WaitForSources() } {\f8\fs22 \par \par Wait for the SQL Data Sources dialog to exist.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 278\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDataBaseDlgs_WaitForLogin} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDataBaseDlgs; WaitForLogin}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDataBaseDlgs::WaitForLogin}}{\f8\fs22  } {\f8\fs32 int UIDataBaseDlgs::WaitForLogin() } {\f8\fs22 \par \par Wait for the Server Log In dialog to exist\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 289\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDataBaseDlgs_WaitForTables} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDataBaseDlgs; WaitForTables}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDataBaseDlgs::WaitForTables}}{\f8\fs22  } {\f8\fs32 int UIDataBaseDlgs::WaitForTables()} {\f8\fs22 \par \par Wait for the Select Tables dialog to exist.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 odbcdlgs.cpp, 301\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_GetPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; GetPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::GetPage}}{\f8\fs22  } {\f8\fs32 int UIAppWizard::GetPage(HWND hwnd /*=NULL*/)} {\f8\fs22 \par \par Get the current page in the AppWizard sequence.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A value that indicates the current AppWizard page: UIAW_INVALID, UIAW_NEWPROJ, UIAW_APPTYPE, UIAW_DLGOPTIONS, UIAW_DLGFEATURES, UIAW_DLGCLASSES, UIAW_DBOPTIONS, UIAW_OLEOPTIONS, UIAW_FEATURES, UIAW_PROJOPTIONS, UIAW_CLASSES, UIAW_CONFIRM, UIAW_PROGRESS, UIAW_DBSOURCES, UIAW_MESSAGEBOX.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 hwnd} {\f8\fs22 : The HWND of the AppWizard dialog. NULL means use the current dialog. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 59\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_ExpectPage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; ExpectPage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::ExpectPage}}{\f8\fs22  } {\f8\fs32 void UIAppWizard::ExpectPage(int nPage)} {\f8\fs22 \par \par Expect that the given page is currently active in the AppWizard sequence. An exception is thrown if nPage doesn't match the current page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nPage} {\f8\fs22 : A value that contains the expected AppWizard page: UIAW_INVALID, UIAW_NEWPROJ, UIAW_APPTYPE, UIAW_DLGOPTIONS, UIAW_DLGFEATURES, UIAW_DLGCLASSES, UIAW_DBOPTIONS, UIAW_OLEOPTIONS, UIAW_FEATURES, UIAW_PROJOPTIONS, UIAW_CLASSES, UIAW_CONFIRM, UIAW_PROGRESS, UIAW_DBSOURCES, UIAW_MESSAGEBOX.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 145\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_ExpectedTitle} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; ExpectedTitle}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::ExpectedTitle}}{\f8\fs22  } {\f8\fs32 LPCSTR UIAppWizard::ExpectedTitle(int nPage) const} {\f8\fs22 \par \par Get the title of the given AppWizard page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the title of the given AppWizard page.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nPage} {\f8\fs22 : A value that contains the AppWizard page to get the title for: UIAW_NEWPROJ, UIAW_APPTYPE, UIAW_DLGOPTIONS, UIAW_DLGFEATURES, UIAW_DLGCLASSES, UIAW_DBOPTIONS, UIAW_OLEOPTIONS, UIAW_FEATURES, UIAW_PROJOPTIONS, UIAW_CLASSES, UIAW_CONFIRM, UIAW_PROGRESS, UIAW_DBSOURCES.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 157\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_Create} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; Create}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::Create}}{\f8\fs22  } {\f8\fs32 HWND UIAppWizard::Create(void)} {\f8\fs22 \par \par Click the Create button on the New Project dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the dialog displayed after clicking the Create button (either the Add Files dialog or the first page of the AppWizard sequence).\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 228\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_SetAppType} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; SetAppType}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::SetAppType}}{\f8\fs22  } {\f8\fs32 void UIAppWizard::SetAppType(UINT id)} {\f8\fs22 \par \par Set the type of AppWizard application (SDI, MDI, or dialog based).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The ID of the control to click on that specifies the type of AppWizard application.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 274\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_SetDBOptions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; SetDBOptions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::SetDBOptions}}{\f8\fs22  } {\f8\fs32 void UIAppWizard::SetDBOptions(UINT id)} {\f8\fs22 \par \par Set the database option for the AppWizard application (none, header files, db view, or db view and file support).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : An integer containing the ID of the control to click on that specifies the database option.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 286\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_SetOLEOptions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; SetOLEOptions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::SetOLEOptions}}{\f8\fs22  } {\f8\fs32 void UIAppWizard::SetOLEOptions(UINT id)} {\f8\fs22 \par \par Set the OLE option for the AppWizard application (none, container, mini-server, full-server, container and server, support for OLE compound files, or support for OLE automation).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : An integer containing the ID of the control to click on that specifies the OLE option.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 298\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_SetProjOptions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; SetProjOptions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::SetProjOptions}}{\f8\fs22  } {\f8\fs32 void UIAppWizard::SetProjOptions(UINT id)} {\f8\fs22 \par \par Set project options for the AppWizard application (dockable toolbar, status bar, printing, help, 3d controls, MAPI, or WinSockets).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : An integer that contains the ID of the control to click on that specifies the project option.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 314\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_SelectClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; SelectClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::SelectClass}}{\f8\fs22  } {\f8\fs32 void UIAppWizard::SelectClass(int n)} {\f8\fs22 \par \par Select a class in the AppWizard class page by index.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 n} {\f8\fs22 : An integer containing the 1-based index of the class to select into the list of classes.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 326\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_SelectClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; SelectClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::SelectClass}}{\f8\fs22  } {\f8\fs32 void UIAppWizard::SelectClass(LPCSTR sz)} {\f8\fs22 \par \par Select a class in the AppWizard class page by name.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 sz} {\f8\fs22 : A pointer to a string containing the name of the class to select in the list of classes.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 337\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_GetClassName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; GetClassName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::GetClassName}}{\f8\fs22  } {\f8\fs32 CString UIAppWizard::GetClassName(void)} {\f8\fs22 \par \par Get the name of the selected class from the AppWizard class page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the name of the selected class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 347\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_GetBaseClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; GetBaseClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::GetBaseClass}}{\f8\fs22  } {\f8\fs32 CString UIAppWizard::GetBaseClass(void)} {\f8\fs22 \par \par Get the name of the selected class's base class from the AppWizard class page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the name of the base class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 359\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_GetSourceFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; GetSourceFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::GetSourceFile}}{\f8\fs22  } {\f8\fs32 CString UIAppWizard::GetSourceFile(void)} {\f8\fs22 \par \par Get the name of the source file for the selected class from the AppWizard class page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the name of the source file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 371\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAppWizard_GetHeaderFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAppWizard; GetHeaderFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAppWizard::GetHeaderFile}}{\f8\fs22  } {\f8\fs32 CString UIAppWizard::GetHeaderFile(void)} {\f8\fs22 \par \par Get the name of the header file for the selected class from the AppWizard class page.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the name of the header file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uappwiz.cpp, 383\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::Display}}{\f8\fs22  } {\f8\fs32 HWND UIClassWizard::Display() } {\f8\fs22 \par \par Display the ClassWizard dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the ClassWizard dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 35\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_DeleteFunction} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; DeleteFunction}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::DeleteFunction}}{\f8\fs22  } {\f8\fs32 HWND UIClassWizard::DeleteFunction(int ClassIndex, int FuncIndex, int ObjectIndex)} {\f8\fs22 \par \par Delete a message map member function from the class.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ClassIndex} {\f8\fs22 : An integer that contains the 1-based index into the list of classes in ClassWizard. This specifies the class that contains the function to delete.\par \par } {\i\f8\fs22 FuncIndex} {\f8\fs22 : An integer that contains the 1-based index into the list of messages. This specifies the member function to delete.\par \par } {\i\f8\fs22 ObjectIndex} {\f8\fs22 : An integer that contains the 1-based index into the list of objects for the selected class. This specifies the object that contains the function to delete.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 56\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::Close}}{\f8\fs22  } {\f8\fs32 HWND UIClassWizard::Close() } {\f8\fs22 \par \par Close the ClassWizard dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 95\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_ClassCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; ClassCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::ClassCount}}{\f8\fs22  } {\f8\fs32 int UIClassWizard::ClassCount()} {\f8\fs22 \par \par Gets the number of classes in the active project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates the class count.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 109\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_AddFunction} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; AddFunction}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::AddFunction}}{\f8\fs22  } {\f8\fs32 int UIClassWizard::AddFunction(int ClassIndex, int FuncIndex, int ObjectIndex)} {\f8\fs22 \par \par Add a message map member function to the class.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ClassIndex} {\f8\fs22 : An integer that contains the 1-based index into the list of classes in ClassWizard. This specifies the class that contains the function to add.\par \par } {\i\f8\fs22 FuncIndex} {\f8\fs22 : An integer that contains the 1-based index into the list of messages. This specifies the member function to add.\par \par } {\i\f8\fs22 ObjectIndex} {\f8\fs22 : An integer that contains the 1-based index into the list of objects for the selected class. This specifies the object that contains the function to add.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 124\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_AddClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; AddClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::AddClass}}{\f8\fs22  } {\f8\fs32 int UIClassWizard::AddClass(int TypeIndex,CString Name,  CString DotH, CString DotCPP) } {\f8\fs22 \par \par Add a new class the project via ClassWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 TypeIndex} {\f8\fs22 : An integer that contains the 1-based index into the list of base classes to derive this class from.\par \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name of the new class.\par \par } {\i\f8\fs22 DotH} {\f8\fs22 : A CString that contains the name of the header file for the new class.\par \par } {\i\f8\fs22 DotCPP} {\f8\fs22 : A CString that contains the name of the source file for the new class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 174\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_ImportClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; ImportClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::ImportClass}}{\f8\fs22  } {\f8\fs32 int UIClassWizard::ImportClass(CString Name, CString DotH, CString DotCPP) } {\f8\fs22 \par \par Import an existing class into the project via ClassWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString containing the name of the new class.\par \par } {\i\f8\fs22 DotH} {\f8\fs22 : A CString containing the name of the header file for the class.\par \par } {\i\f8\fs22 DotCPP} {\f8\fs22 : A CString containing the name of the source file for the class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 219\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_EditCode} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; EditCode}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::EditCode}}{\f8\fs22  } {\f8\fs32 int UIClassWizard::EditCode()} {\f8\fs22 \par \par Select the Edit Code button the Message Map tab in ClassWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 237\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_GetClassFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; GetClassFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::GetClassFile}}{\f8\fs22  } {\f8\fs32 CString UIClassWizard::GetClassFile()} {\f8\fs22 \par \par Get the name of the source file for the currently selected class in ClassWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString containing the name of the source file for the currently selected class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 252\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_SetDataSourceName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; SetDataSourceName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::SetDataSourceName}}{\f8\fs22  } {\f8\fs32 int UIClassWizard::SetDataSourceName()} {\f8\fs22 \par \par Set the datasource name to be used when creating Database classes.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 void. \par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 267\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIClassWizard_GetActiveClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIClassWizard; GetActiveClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIClassWizard::GetActiveClass}}{\f8\fs22  } {\f8\fs32 CString UIClassWizard::GetActiveClass()} {\f8\fs22 \par \par Get the name of the currently selected class in ClassWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the name of the currently selected class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 277\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_Show} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; Show}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::Show}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::Show()} {\f8\fs22 \par \par Display the Create New Class dialog from ClassWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 363\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_SetType} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; SetType}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::SetType}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::SetType(int Type) } {\f8\fs22 \par \par Set the the base class of the new class in the Create New Class dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Type} {\f8\fs22 : An integer that contains the 1-based index into the list of base classes.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 382\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_SetName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; SetName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::SetName}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::SetName(CString Name)} {\f8\fs22 \par \par Set the name of the class in the Create New Class dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString containing the name of the new class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 400\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_SetHeader} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; SetHeader}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::SetHeader}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::SetHeader(CString DotH)} {\f8\fs22 \par \par Set the name of the header file for the new class in the Create New Class dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 DotH} {\f8\fs22 : A CString that contains the name of the new header file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 415\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_SetCPP} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; SetCPP}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::SetCPP}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::SetCPP(CString DotCPP)} {\f8\fs22 \par \par Set the name of the source file for the new class in the Create New Class dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 DotCPP} {\f8\fs22 : A CString that contains the name of the new header file.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 428\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_SetDataSourceName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; SetDataSourceName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::SetDataSourceName}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::SetDataSourceName()} {\f8\fs22 \par \par Set the datasource name to be used when creating Database classes.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 void. \par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 440\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_Create} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; Create}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::Create}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::Create()} {\f8\fs22 \par \par Create the new class in the current project by clicking the Create button in the Create New Class dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 453\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_CheckOle} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; CheckOle}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::CheckOle}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::CheckOle()} {\f8\fs22 \par \par Select the OLE automation for the new class in the Create New Class dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 523\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_CheckOleCreateable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; CheckOleCreateable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::CheckOleCreateable}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::CheckOleCreateable(CString ExtName) } {\f8\fs22 \par \par Select OLE automation createable by name for the new class in the Create New Class dialog. This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ExtName} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 535\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_CheckAddToGallery} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; CheckAddToGallery}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::CheckAddToGallery}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::CheckAddToGallery(BOOL bCheck /*= TRUE */)} {\f8\fs22 \par \par Checks or unchecks the Add To Object Gallery check box.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS or ERROR_ERROR if it failed to do the operation.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 If} {\f8\fs22 : bCheck is TRUE it makes sure the check box is check. Otherwise it uncheck it if necessary.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 553\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_AttachDlgID} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; AttachDlgID}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::AttachDlgID}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::AttachDlgID(int index /*= 1 */)} {\f8\fs22 \par \par Select the dialog (by ID) that's to be associated with the new class in the Create New Class dialog. (See AttachDlgID(CString) to associate dialog by name.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index into the list of dialog templates used to specify the dialog associated with the new class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 574\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAddClassDlg_AttachDlgID} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAddClassDlg; AttachDlgID}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAddClassDlg::AttachDlgID}}{\f8\fs22  } {\f8\fs32 int UIAddClassDlg::AttachDlgID(CString Name) } {\f8\fs22 \par \par Select the dialog (by name) that's to be associated with the new class in the Create New Class dialog. (See AttachDlgID(int) to associate dialog by index.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name of the dialog template used to specify the dialog associated with the new class.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 595\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWizardBar_SelectClass} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWizardBar; SelectClass}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWizardBar::SelectClass}}{\f8\fs22  } {\f8\fs32 int UIWizardBar::SelectClass(int Index)} {\f8\fs22 \par \par Select the specified object from the WizardBar for the class in the currently active source file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Index} {\f8\fs22 : An integer that contains the 1-based index into the list of objects for the currently active source file to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 642\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWizardBar_HandleMessage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWizardBar; HandleMessage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWizardBar::HandleMessage}}{\f8\fs22  } {\f8\fs32 int UIWizardBar::HandleMessage(int Index)} {\f8\fs22 \par \par Select the member function from the WizardBar for the selected object for the class in the currently active source file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Index} {\f8\fs22 : An integer that contains the 1-based index into the list of functions to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 ucwzdlg.cpp, 656\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_Create} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; Create}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::Create}}{\f8\fs22  } {\f8\fs32 HWND UICtrlWizard::Create()} {\f8\fs22 \par \par Start the OLE ControlWizard sequence from the New Project dialog. The New Project dialog must be displayed before calling this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the first page of the OLE ControlWizard, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SetCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SetCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SetCount}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SetCount(int count)} {\f8\fs22 \par \par Set the number of controls in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of controls for this project.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 56\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SetLicenceOpt} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SetLicenceOpt}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SetLicenceOpt}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SetLicenceOpt(int iLic)} {\f8\fs22 \par \par Set whether or not to include a runtime license with the controls in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iLic} {\f8\fs22 : A Boolean value that indicates whether to include a runtime license (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 70\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SetCommentOpt} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SetCommentOpt}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SetCommentOpt}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SetCommentOpt(int icomm)} {\f8\fs22 \par \par Set whether to include source file comments or not in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 icomm} {\f8\fs22 : A Boolean value that indicates whether to include source file comments (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 85\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SetHelpOpt} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SetHelpOpt}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SetHelpOpt}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SetHelpOpt(int icomm)} {\f8\fs22 \par \par Set whether to include help file support or not in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 icomm} {\f8\fs22 : A Boolean value that indicates whether to include help file support (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 100\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SetActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SetActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SetActive}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SetActive(int index)} {\f8\fs22 \par \par Set the active control in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index into the list of controls to be generated by ControlWizard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 115\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_GetActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; GetActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::GetActive}}{\f8\fs22  } {\f8\fs32 CString UICtrlWizard::GetActive()} {\f8\fs22 \par \par Get the currently selected control in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the name of the currently selected control in ControlWizard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 129\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SummaryInfo} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SummaryInfo}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SummaryInfo}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SummaryInfo()} {\f8\fs22 \par \par Display the summary information for the currently selected control in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 141\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_ActiveIfVisible} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; ActiveIfVisible}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::ActiveIfVisible}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::ActiveIfVisible(int active)} {\f8\fs22 \par \par Set the "Activates when visible" property of the currently selected control.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 active} {\f8\fs22 : A Boolean value that indicates whether to check (TRUE) or uncheck the "Activates when visible" property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 154\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_Invisible} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; Invisible}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::Invisible}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::Invisible(int opt)} {\f8\fs22 \par \par Set the "Invisible at runtime" property of the currently selected control.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 opt} {\f8\fs22 : A Boolean value that indicates whether to check (TRUE) or uncheck the "Invisible at runtime" property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 169\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_InInsertDlg} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; InInsertDlg}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::InInsertDlg}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::InInsertDlg(int opt)} {\f8\fs22 \par \par Set the "Available in 'Insert Object' dialog" property of the currently selected control.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 opt} {\f8\fs22 : A Boolean value that indicates whether to check (TRUE) or uncheck the "Available in 'Insert Object' dialog" property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 184\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SimpleFrame} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SimpleFrame}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SimpleFrame}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SimpleFrame(int opt)} {\f8\fs22 \par \par Set the "Supports simple frame" property of the currently selected control.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 opt} {\f8\fs22 : A Boolean value that indicates whether to check (TRUE) or uncheck the "Supports simple frame" property.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 199\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SubClassCtrl} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SubClassCtrl}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SubClassCtrl}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SubClassCtrl(int index)} {\f8\fs22 \par \par Select the window class by index that the currently selected control should subclass from in ControlWizard. (See SubClassCtrl(CString) to select the window class by name.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index into the list of window classes to subclass from.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 214\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlWizard_SubClassCtrl} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlWizard; SubClassCtrl}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlWizard::SubClassCtrl}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlWizard::SubClassCtrl(CString strcls)} {\f8\fs22 \par \par Select the window class by name that the currently selected control should subclass from in ControlWizard. (See SubClassCtrl(int) to select the window class by index.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 strcls} {\f8\fs22 : A CString that contains the name of the window class to subclass from.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 228\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetShortName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetShortName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetShortName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetShortName(CString Name)} {\f8\fs22 \par \par Set the short name of the control in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 242\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetCrlClsName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetCrlClsName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetCrlClsName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetCrlClsName(CString Name)} {\f8\fs22 \par \par Set the class name of the control in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 254\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetCtrlHName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetCtrlHName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetCtrlHName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetCtrlHName(CString Name)} {\f8\fs22 \par \par Set the header filename of the control in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 266\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetCtrlCppName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetCtrlCppName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetCtrlCppName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetCtrlCppName(CString Name)} {\f8\fs22 \par \par Set the source filename of the control in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 278\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetCtrlUsrName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetCtrlUsrName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetCtrlUsrName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetCtrlUsrName(CString Name)} {\f8\fs22 \par \par Set the user type name of the control in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 290\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetCtrlIDName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetCtrlIDName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetCtrlIDName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetCtrlIDName(CString Name)} {\f8\fs22 \par \par Set the programmatic ID name of the control in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 302\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetPpgClsName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetPpgClsName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetPpgClsName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetPpgClsName(CString Name)} {\f8\fs22 \par \par Set the class name of the property page in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 316\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetPpgHName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetPpgHName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetPpgHName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetPpgHName(CString Name)} {\f8\fs22 \par \par Set the header filename of the property page in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 328\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetPpgCppName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetPpgCppName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetPpgCppName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetPpgCppName(CString Name)} {\f8\fs22 \par \par Set the source filename of the property page in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 340\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetPpgUsrName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetPpgUsrName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetPpgUsrName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetPpgUsrName(CString Name)} {\f8\fs22 \par \par Set the user type name of the property page in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 352\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_SetPpgIDName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; SetPpgIDName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::SetPpgIDName}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::SetPpgIDName(CString Name)} {\f8\fs22 \par \par Set the programmatic ID name of the property page in the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A CString that contains the name.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 364\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::Close}}{\f8\fs22  } {\f8\fs32 BOOL UICtrlSummaryDlg::Close(int how /*= 1*/)} {\f8\fs22 \par \par Close the Summary Info dialog in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 how} {\f8\fs22 : A Boolean value that indicates whether to click on the OK button (TRUE) or the Cancel button when closing the Summary Info dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 376\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICtrlSummaryDlg_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICtrlSummaryDlg; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICtrlSummaryDlg::Display}}{\f8\fs22  } {\f8\fs32 HWND UICtrlSummaryDlg::Display(void)} {\f8\fs22 \par \par Display the Summary Info dialog in ControlWizard. The page with the summary info button must be active in ControlWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the Summary Info dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uictrlwz.cpp, 390\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExtWizard_Create} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExtWizard; Create}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExtWizard::Create}}{\f8\fs22  } {\f8\fs32 BOOL UIExtWizard::Create()} {\f8\fs22 \par \par Start the Custom AppWizard sequence from the New Project dialog. The New Project dialog must be displayed before calling this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiextwiz.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExtWizard_SetExtType} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExtWizard; SetExtType}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExtWizard::SetExtType}}{\f8\fs22  } {\f8\fs32 BOOL UIExtWizard::SetExtType(int Type)} {\f8\fs22 \par \par Set the type of Custom AppWizard to create: from an existing project, standard AppWizard, or custom.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Type} {\f8\fs22 : An integer that contains the ID of the radio button that indicates the type of custom AppWizard to create.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiextwiz.cpp, 56\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExtWizard_SetNumPages} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExtWizard; SetNumPages}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExtWizard::SetNumPages}}{\f8\fs22  } {\f8\fs32 BOOL UIExtWizard::SetNumPages(int Pages)} {\f8\fs22 \par \par Set the number of steps (pages) that the custom AppWizard will contain.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Pages} {\f8\fs22 : An integer containing the number of steps (pages).\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiextwiz.cpp, 68\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExtWizard_SetBasePrjName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExtWizard; SetBasePrjName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExtWizard::SetBasePrjName}}{\f8\fs22  } {\f8\fs32 BOOL UIExtWizard::SetBasePrjName(CString PrjName)} {\f8\fs22 \par \par Set the name of the project that the custom AppWizard will be based from. This is only applicable if the custom AppWizard is being created from an existing project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 PrjName} {\f8\fs22 : A CString that contains the path and filename of the project to base this custom AppWizard from.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiextwiz.cpp, 82\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExtWizard_SetDllExeType} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExtWizard; SetDllExeType}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExtWizard::SetDllExeType}}{\f8\fs22  } {\f8\fs32 BOOL UIExtWizard::SetDllExeType(int Type)} {\f8\fs22 \par \par Set whether this custom AppWizard is for an EXE or a DLL. This is only applicable if the custom AppWizard is being based on a standard AppWizard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Type} {\f8\fs22 : An integer that contains the ID of the radio button that indicates whether to create an EXE Custom AppWizard or a DLL Custom AppWizard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiextwiz.cpp, 95\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExtWizard_SetLangs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExtWizard; SetLangs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExtWizard::SetLangs}}{\f8\fs22  } {\f8\fs32 BOOL UIExtWizard::SetLangs(int index)} {\f8\fs22 \par \par Set the language supported by this custom AppWizard by index. This is only applicable if the custom AppWizard is baesed on a standard AppWizard. (See SetLangs(CString) to set the language by name.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index into the list of languages to set for this custom AppWizard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiextwiz.cpp, 107\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExtWizard_SetLangs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExtWizard; SetLangs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExtWizard::SetLangs}}{\f8\fs22  } {\f8\fs32 BOOL UIExtWizard::SetLangs(CString LangStr)} {\f8\fs22 \par \par Set the language supported by this custom AppWizard by name. This is only applicable if the custom AppWizard is baesed on a standard AppWizard. (See SetLangs(int) to set the language by index.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 LangStr} {\f8\fs22 : A CString that contains the name of the language to set for this custom AppWizard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiextwiz.cpp, 121\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_New} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; New}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::New}}{\f8\fs22  } {\f8\fs32 int UIProjectTarget::New(LPCSTR Name, int Type, BOOL Debug)} {\f8\fs22 \par \par Create a new target for the current project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A pointer to a string that contains name of the new target.\par \par } {\i\f8\fs22 Type} {\f8\fs22 : An integer that contains the 1-based index into the list of target types for the new target.\par \par } {\i\f8\fs22 Debug} {\f8\fs22 : A Boolean value that indicates whether the new target is debug (true) or retail.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 33\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_New} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; New}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::New}}{\f8\fs22  } {\f8\fs32 int UIProjectTarget::New(LPCSTR Name, LPCSTR Target)} {\f8\fs22 \par \par Create a new target for the current project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Name} {\f8\fs22 : A pointer to a string that contains name of the new target.\par \par } {\i\f8\fs22 Target} {\f8\fs22 : A pointer to a string that contains the name of the target type for the new target.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 70\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_Delete} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; Delete}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::Delete}}{\f8\fs22  } {\f8\fs32 int UIProjectTarget::Delete(LPCSTR DelName) } {\f8\fs22 \par \par Delete a target from the current project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 DelName} {\f8\fs22 : A pointer to a string that contains the name of the target to delete.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 99\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_Rename} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; Rename}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::Rename}}{\f8\fs22  } {\f8\fs32 int UIProjectTarget::Rename(LPCSTR OldName, LPCSTR NewName)} {\f8\fs22 \par \par Change the name of one of the target's in the current project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 OldName} {\f8\fs22 : A pointer to a string that contains the old name of the target.\par \par } {\i\f8\fs22 NewName} {\f8\fs22 : A pointer to a string that contains the new name for the target.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 128\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_Select} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; Select}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::Select}}{\f8\fs22  } {\f8\fs32 int UIProjectTarget::Select(LPCSTR SelName, BOOL LogWarning/* = TRUE */) } {\f8\fs22 \par \par Selects a target in the current project (substrings supported).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 SelName} {\f8\fs22 : A pointer to a string that contains the name of the target to select.\par \par } {\i\f8\fs22 LogWarning} {\f8\fs22 : A Boolean value that indicates whether to log information if the target isn't in the current project (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 154\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_Show} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; Show}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::Show}}{\f8\fs22  } {\f8\fs32 HWND UIProjectTarget::Show()} {\f8\fs22 \par \par Display the Targets dialog for the current project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the Targets dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 191\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::Close}}{\f8\fs22  } {\f8\fs32 HWND UIProjectTarget::Close()} {\f8\fs22 \par \par Close the Targets dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 223\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_SetTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; SetTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::SetTarget}}{\f8\fs22  } {\f8\fs32 int UIProjectTarget::SetTarget(LPCSTR Target) } {\f8\fs22 \par \par Set the current target in the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Target} {\f8\fs22 : A pointer to a string that contains the name of the target to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 254\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectTarget_GetTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectTarget; GetTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectTarget::GetTarget}}{\f8\fs22  } {\f8\fs32 LPCSTR UIProjectTarget::GetTarget(int Index /* = 0*/) } {\f8\fs22 \par \par Get the name of the current target or a specified in the project.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the name of the selected target.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Index} {\f8\fs22 : An integer that contains a 1-based index into the list of targets. This value is used to specify the target to retrieve the name for. 0 means the currently selected target. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uitarget.cpp, 267\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::Display}}{\f8\fs22  } {\f8\fs32 HWND UIOGalleryDlg::Display() } {\f8\fs22 \par \par Bring up the Object Gallery dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the Object Gallery dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 30\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::Close}}{\f8\fs22  } {\f8\fs32 HWND UIOGalleryDlg::Close( void ) } {\f8\fs22 \par \par Closes the Object Gallery Main dialog and detaches the component list view.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the window that remains after closing the Gallery.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 69\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_Import} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; Import}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::Import}}{\f8\fs22  } {\f8\fs32 int UIOGalleryDlg::Import( CString& strOglet, BOOL bCopyToGallery /* = FALSE */)} {\f8\fs22 \par \par The description for this function is not available. Please see the appropriate component owner for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The return value description for this function is not available.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 85\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_Insert} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; Insert}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::Insert}}{\f8\fs22  } {\f8\fs32 HWND UIOGalleryDlg::Insert( CString& strOglet) } {\f8\fs22 \par \par The description for this function is not available. Please see the appropriate component owner for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The return value description for this function is not available.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 107\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_Insert} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; Insert}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::Insert}}{\f8\fs22  } {\f8\fs32 HWND UIOGalleryDlg::Insert( UINT nOglet) } {\f8\fs22 \par \par The description for this function is not available. Please see the appropriate component owner for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The return value description for this function is not available.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 130\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_SelectComponent} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; SelectComponent}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::SelectComponent}}{\f8\fs22  } {\f8\fs32 int UIOGalleryDlg::SelectComponent( CString& strOglet ) {\f8\fs22 \par \par The description for this function is not available. Please see the appropriate component owner for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The return value description for this function is not available.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 159\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_SelectComponent} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; SelectComponent}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::SelectComponent}}{\f8\fs22  } {\f8\fs32 int UIOGalleryDlg::SelectComponent( UINT nOglet ) {\f8\fs22 \par \par The description for this function is not available. Please see the appropriate component owner for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The return value description for this function is not available.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 200\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_GetSelectedComponentText} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; GetSelectedComponentText}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::GetSelectedComponentText}}{\f8\fs22  } {\f8\fs32 LPTSTR UIOGalleryDlg::GetSelectedComponentText(void)} {\f8\fs22 \par \par The description for this function is not available. Please see the appropriate component owner for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The return value description for this function is not available.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 259\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_ActivateCategory} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; ActivateCategory}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::ActivateCategory}}{\f8\fs22  } {\f8\fs32 int UIOGalleryDlg::ActivateCategory( CString& strCategory )} {\f8\fs22 \par \par Select a page in the Object Gallery dialog by name. (See SelectPage(UINT) to select a page by index.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the selected page, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szPageName} {\f8\fs22 : A pointer to a string that contains the name of the page.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 288\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_ActivateCategory} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; ActivateCategory}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::ActivateCategory}}{\f8\fs22  } {\f8\fs32 LPTSTR UIOGalleryDlg::ActivateCategory( UINT nPage ) } {\f8\fs22 \par \par Select a page in the Object Gallery dialog by index. (See SelectPage(LPCSTR) to select a page by name.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the selected page, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 nPage} {\f8\fs22 : An integer that contains the 1-based index of the page to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 328\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_CreateCategory} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; CreateCategory}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::CreateCategory}}{\f8\fs22  } {\f8\fs32 HWND UIOGalleryDlg::CreateCategory( CString& strCategory )} {\f8\fs22 \par \par Close the Object Gallery Customize dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the Object Gallery dialog, if successful; the HWND of the Object Gallery Customize dialog otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 346\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_DeleteOGDatabase} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; DeleteOGDatabase}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::DeleteOGDatabase}}{\f8\fs22  } {\f8\fs32 BOOL UIOGalleryDlg::DeleteOGDatabase(CString& strPath) } {\f8\fs22 \par \par Delete the Object Gallery database file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 strPath} {\f8\fs22 : A CString that contains the name of the path to the IDE\Template directory\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 452\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_RenameOGDatabase} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; RenameOGDatabase}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::RenameOGDatabase}}{\f8\fs22  } {\f8\fs32 BOOL UIOGalleryDlg::RenameOGDatabase(CString& strPath, CString& strNewName, ROGD_VAL nRenameVal /* = ROGD_REPLACE */) } {\f8\fs22 \par \par Delete the Object Gallery database file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 strPath} {\f8\fs22 : A CString that contains the name of the path to the IDE\Template directory\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 466\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_GetGalleryDir} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; GetGalleryDir}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::GetGalleryDir}}{\f8\fs22  } {\f8\fs32 LPTSTR UIOGalleryDlg::GetGalleryDir(CString& strPath) } {\f8\fs22 \par \par Delete the Object Gallery database file.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 strPath} {\f8\fs22 : A CString that contains the name of the path to the IDE\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 504\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIOGalleryDlg_VerifyFilesInDir} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIOGalleryDlg; VerifyFilesInDir}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIOGalleryDlg::VerifyFilesInDir}}{\f8\fs22  } {\f8\fs32 BOOL UIOGalleryDlg::VerifyFilesInDir(CStringList* pFileList, CString& strPath) } {\f8\fs22 \par \par The description for this function is not available. Please see the appropriate component owner for a description of this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The return value description for this function is not available.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 Param} {\f8\fs22 : The parameter description(s) for this function are not available.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uogaldlg.cpp, 528\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectFiles_AddFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectFiles; AddFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectFiles::AddFile}}{\f8\fs22  } {\f8\fs32 BOOL UIProjectFiles::AddFile(LPCSTR szFileName)} {\f8\fs22 \par \par Add a file to the current project via the Add Files dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFileName} {\f8\fs22 : A pointer to a string that contains the name of the file to add.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjfile.cpp, 27\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectFiles_AddAllFiles} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectFiles; AddAllFiles}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectFiles::AddAllFiles}}{\f8\fs22  } {\f8\fs32 BOOL UIProjectFiles::AddAllFiles(LPCSTR szType /* UIPF_FOT_SOURCE */, LPCSTR szProjFilesPath /* NULL */)   } {\f8\fs22 \par \par Add all files (filtered by the given filter) in the directory specified to the current project via the Add Files dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szType} {\f8\fs22 : A pointer to a string that contains the types of files to filter. This string is one of the strings found in the Files of Type combo box in the Add Files dialog.\par \par } {\i\f8\fs22 szProjFilesPath} {\f8\fs22 : A pointer to a string that contains the path to the directory that contains the files to be added.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjfile.cpp, 42\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjectFiles_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjectFiles; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjectFiles::Close}}{\f8\fs22  } {\f8\fs32 HWND UIProjectFiles::Close(void)} {\f8\fs22 \par \par Close the Add Files dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if successful; the HWND of the Add Files dialog otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjfile.cpp, 74\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_Display} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; Display}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::Display}}{\f8\fs22  } {\f8\fs32 HWND UIProjOptionsTabDlg::Display() } {\f8\fs22 \par \par Bring up the Project Settings tabbed dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the dialog, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_SelectFile } K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; SelectFile }}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::SelectFile }}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::SelectFile (CString szFile,CString szGrp, CString szTarget ) } {\f8\fs22 \par \par Select a file in the Project Settings dialog to work with.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFile} {\f8\fs22 : A CString that contains the name of the file to select.\par \par } {\i\f8\fs22 szGrp} {\f8\fs22 : A CString that contains the name of the group that contains the file to select.\par \par } {\i\f8\fs22 szTarget} {\f8\fs22 : A CString that contains the name of the target that contains the file to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 50\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_SelectGroup} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; SelectGroup}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::SelectGroup}}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::SelectGroup(CString szGrp, CString szTarget) } {\f8\fs22 \par \par Select a group in the Project Settings dialog to work with.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szGrp} {\f8\fs22 : A CString that contains the name of the group to select.\par \par } {\i\f8\fs22 szTarget} {\f8\fs22 : A CString that contains the name of the target that contains the group to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 66\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_SelectTarget} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; SelectTarget}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::SelectTarget}}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::SelectTarget(CString szTarget) } {\f8\fs22 \par \par Select a target in the Project Settings dialog to work with.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szTarget} {\f8\fs22 : A CString that contains the name of the target to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 80\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_SetCompilerOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; SetCompilerOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::SetCompilerOption}}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::SetCompilerOption(UINT iCtrlId, int iNewValue, PROJSET_TAB tabCompiler /* = TAB_CPLUSPLUS */)} {\f8\fs22 \par \par Set a value-based compiler option for the currently selected target, group, or file in the Project Settings dialog. (See SetCompilerOption(UINT, LPCSTR) to set text-based compiler options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control for the option to set.\par \par } {\i\f8\fs22 iNewValue} {\f8\fs22 : An integer that contains the new value of the option.\par \par } {\i\f8\fs22 tabCompiler} {\f8\fs22 : A TAB specifier for the compiler of which to set the option.  See UIProjOptionsTabDlg::ShowCompilerTab() for a list of valid compiler tabs.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 122\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_SetCompilerOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; SetCompilerOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::SetCompilerOption}}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::SetCompilerOption(UINT iCtrlId, LPCSTR szNewValue, PROJSET_TAB tabCompiler /* = TAB_CPLUSPLUS */)} {\f8\fs22 \par \par Set a text-based compiler option for the currently selected target, group, or file in the Project Settings dialog. (See SetCompilerOption(UINT, int) to set value-based compiler options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control for the option to set.\par \par } {\i\f8\fs22 szNewValue} {\f8\fs22 : A pointer to a string that contains the new value of the option.\par \par } {\i\f8\fs22 tabCompiler} {\f8\fs22 : A TAB specifier for the compiler of which to set the option.  See UIProjOptionsTabDlg::ShowCompilerTab() for a list of valid compiler tabs.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 137\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_GetCompilerOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; GetCompilerOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::GetCompilerOption}}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::GetCompilerOption( UINT iCtrlId, PROJSET_TAB tabCompiler /* = TAB_CPLUSPLUS */ )} {\f8\fs22 \par \par Get a value-based compiler option for the currently selected target, group, or file in the Project Settings dialog. (See GetCompilerOptionStr(UINT) to get text-based compiler options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the value of the compiler option.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control for the option to get.\par \par } {\i\f8\fs22 tabCompiler} {\f8\fs22 : A TAB specifier for the compiler of which to get the option.  See UIProjOptionsTabDlg::ShowCompilerTab() for a list of valid compiler tabs.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 152\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_GetCompilerOptionStr} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; GetCompilerOptionStr}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::GetCompilerOptionStr}}{\f8\fs22  } {\f8\fs32 LPCSTR UIProjOptionsTabDlg::GetCompilerOptionStr( UINT iCtrlId, PROJSET_TAB tabCompiler /* = TAB_CPLUSPLUS */ )} {\f8\fs22 \par \par Get a text-based compiler option for the currently selected target, group, or file in the Project Settings dialog. (See GetCompilerOption(UINT) to get value-based compiler options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the value of the compiler option.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control for the option to get.\par \par } {\i\f8\fs22 tabCompiler} {\f8\fs22 : A TAB specifier for the compiler of which to get the option.  See UIProjOptionsTabDlg::ShowCompilerTab() for a list of valid compiler tabs.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 166\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_ShowCompilerTab} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; ShowCompilerTab}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::ShowCompilerTab}}{\f8\fs22  } {\f8\fs32 HWND UIProjOptionsTabDlg::ShowCompilerTab(PROJSET_TAB tabCompiler /* = TAB_CPLUSPLUS */)} {\f8\fs22 \par \par Display the compiler options tab in the Project Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the compiler options tab, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 tabCompiler} {\f8\fs22 : A TAB specifier for the compiler to show.  Can be one of TAB_CPLUSPLUS or TAB_FORTRAN.  TAB_COMPILER can also be used and is equivalent to TAB_CPLUSPLUS for backwards compatibility.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 180\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_SetLinkerOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; SetLinkerOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::SetLinkerOption}}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::SetLinkerOption(UINT iCtrlId, int iNewValue)} {\f8\fs22 \par \par Set a value-based linker option for the currently selected target, group, or file in the Project Settings dialog. (See SetLinkerOption(UINT, LPCSTR) to set text-based linker options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control for the option to set.\par \par } {\i\f8\fs22 iNewValue} {\f8\fs22 : An integer that contains the new value of the option.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 223\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_SetLinkerOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; SetLinkerOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::SetLinkerOption}}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::SetLinkerOption(UINT iCtrlId, LPCSTR szNewValue)} {\f8\fs22 \par \par Set a text-based linker option for the currently selected target, group, or file in the Project Settings dialog. (See SetLinkerOption(UINT, int) to set value-based linker options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control for the option to set.\par \par } {\i\f8\fs22 szNewValue} {\f8\fs22 : A pointer to a string that contains the new value of the option.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 237\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_GetLinkerOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; GetLinkerOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::GetLinkerOption}}{\f8\fs22  } {\f8\fs32 int UIProjOptionsTabDlg::GetLinkerOption( UINT iCtrlId )} {\f8\fs22 \par \par Get a value-based linker option for the currently selected target, group, or file in the Project Settings dialog. (See GetLinkerOptionStr(UINT) to get text-based linker options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the value of the linker option.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control for the option to get.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 251\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_GetLinkerOptionStr} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; GetLinkerOptionStr}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::GetLinkerOptionStr}}{\f8\fs22  } {\f8\fs32 LPCSTR UIProjOptionsTabDlg::GetLinkerOptionStr( UINT iCtrlId )} {\f8\fs22 \par \par Get a text-based linker option for the currently selected target, group, or file in the Project Settings dialog. (See GetLinkerOptionStr(UINT) to get value-based linker options.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a string that contains the value of the linker option.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 iCtrlId} {\f8\fs22 : An integer that contains the ID of the control for the option to get.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 264\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIProjOptionsTabDlg_ShowLinkerTab} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIProjOptionsTabDlg; ShowLinkerTab}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIProjOptionsTabDlg::ShowLinkerTab}}{\f8\fs22  } {\f8\fs32 HWND UIProjOptionsTabDlg::ShowLinkerTab(void)} {\f8\fs22 \par \par Display the linker options tab in the Project Settings dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the linker options tab, if successful; NULL otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uprjtdlg.cpp, 277\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakpoint}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakpoint(int line, LPCSTR source, int passcount /* 0 */)} {\f8\fs22 \par \par Set a breakpoint on the given line in the specified source file with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the line to set the breakpoint on.\par \par } {\i\f8\fs22 source} {\f8\fs22 : A pointer to a string that contains the name of the source file to set the breakpoint in. NULL means use the current file.\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 29\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakpoint}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakpoint(LPCSTR function, LPCSTR source, int passcount /* 0 */)} {\f8\fs22 \par \par Set a breakpoint on the given function in the specified source file with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the name of the function to set the breakpoint on.\par \par } {\i\f8\fs22 source} {\f8\fs22 : A pointer to a string that contains the name of the source file to set the breakpoint in. NULL means use the current file.\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 48\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakpoint}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakpoint(int line, LPCSTR expression, int option, int length, int passcount /* 0 */)} {\f8\fs22 \par \par Set an expression breakpoint on the given line with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the line to set the breakpoint on.\par \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to use in the breakpoint. Expression is specified by the following form: {function name, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies the type of expression breakpoint to set: COBP_TYPE_IF_EXP_TRUE, COBP_TYPE_IF_EXP_CHANGED.\par \par } {\i\f8\fs22 length} {\f8\fs22 : An integer that contains the number of elements to watch.\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 68\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakpoint}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakpoint(int line, LPCSTR source, LPCSTR expression, int option, int length, int passcount /* 0 */)} {\f8\fs22 \par \par Set an expression breakpoint on the given line in the specified source file with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the line to set the breakpoint on.\par \par } {\i\f8\fs22 source} {\f8\fs22 : A pointer to a string that contains the name of the source file to set the breakpoint in. NULL means use the current file.\par \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to use in the breakpoint. Expression is specified by the following form: {function name, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies the type of expression breakpoint to set: COBP_TYPE_IF_EXP_TRUE, COBP_TYPE_IF_EXP_CHANGED.\par \par } {\i\f8\fs22 length} {\f8\fs22 : An integer that contains the number of elements to watch.\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 88\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakpoint}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakpoint(LPCSTR function, LPCSTR expression, int option, int length, int passcount /* 0 */)} {\f8\fs22 \par \par Set an expression breakpoint on the given function with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the name of the function to set the breakpoint on.\par \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to use in the breakpoint. Expression is specified by the following form: {function name, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies the type of expression breakpoint to set: COBP_TYPE_IF_EXP_TRUE, COBP_TYPE_IF_EXP_CHANGED.\par \par } {\i\f8\fs22 length} {\f8\fs22 : An integer that contains the number of elements to watch.\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 109\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakpoint}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakpoint(LPCSTR function, LPCSTR source, LPCSTR expression, int option, int length, int passcount /* 0 */)} {\f8\fs22 \par \par Set an expression breakpoint on the given function in the specified source file with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the name of the function to set the breakpoint on.\par \par } {\i\f8\fs22 source} {\f8\fs22 : A pointer to a string that contains the name of the source file to set the breakpoint in. NULL means use the current file.\par \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to use in the breakpoint. Expression is specified by the following form: {function name, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies the type of expression breakpoint to set: COBP_TYPE_IF_EXP_TRUE, COBP_TYPE_IF_EXP_CHANGED.\par \par } {\i\f8\fs22 length} {\f8\fs22 : An integer that contains the number of elements to watch.\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 126\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakpoint}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakpoint(LPCSTR expression, int option, int length, int passcount /* 0 */)} {\f8\fs22 \par \par Set an expression breakpoint with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to use in the breakpoint. Expression is specified by the following form: {function name, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies the type of expression breakpoint to set: COBP_TYPE_IF_EXP_TRUE, COBP_TYPE_IF_EXP_CHANGED.\par \par } {\i\f8\fs22 length} {\f8\fs22 : An integer that contains the number of elements to watch.\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 145\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakpoint}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakpoint(LPCSTR location /* NULL */, int passcount /* 0 */)} {\f8\fs22 \par \par Set breakpoint at the given location with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 location} {\f8\fs22 : A pointer to a string that specifies the location of the breakpoint. Location is specified by the following form: {function name, source file name, EXE filename} .line. NULL means set the breakpoint at the current source location. (Default value is NULL.)\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 157\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakOnExpr} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakOnExpr}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakOnExpr}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakOnExpr(LPCSTR location, LPCSTR expression, int expr_type, int length /* 1 */, int passcount /* 0 */)} {\f8\fs22 \par \par Set an expression breakpoint at the given location with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 location} {\f8\fs22 : A pointer to a string that specifies the location of the breakpoint. Location is specified by the following form: {function name, source filename, EXE filename} .line.\par \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to use in the breakpoint. Expression is specified by the following form: {function name, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 expr_type} {\f8\fs22 : A value that specifies the type of expression breakpoint to set: COBP_TYPE_IF_EXP_TRUE, COBP_TYPE_IF_EXP_CHANGED.\par \par } {\i\f8\fs22 length} {\f8\fs22 : An integer that contains the number of elements to watch. (Default value is 1.)\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 202\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakOnMsg} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakOnMsg}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakOnMsg}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakOnMsg(LPCSTR location, LPCSTR message, int msg_type, int passcount /* 0 */)} {\f8\fs22 \par \par Set a message breakpoint at the given location with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 location} {\f8\fs22 : A pointer to a string that specifies the location of the breakpoint. Location is specified by the following form: {function name, source filename, EXE filename} .line.\par \par } {\i\f8\fs22 message} {\f8\fs22 : A pointer to a string that contains the name of the message to break on.\par \par } {\i\f8\fs22 msg_type} {\f8\fs22 : An integer that specifies the type of message. This parameter is NYI.\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 242\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_SetBreakOnExpr} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; SetBreakOnExpr}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::SetBreakOnExpr}}{\f8\fs22  } {\f8\fs32 bp* COBreakpoints::SetBreakOnExpr(LPCSTR expression, int expr_type, int length /* 1 */, int passcount /* 0 */)} {\f8\fs22 \par \par Set an expression breakpoint with the given pass count.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A pointer to a bp object that is used as a handle to the breakpoint. Store this pointer to reference the breakpoint later.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to use in the breakpoint. Expression is specified by the following form: {function name, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 expr_type} {\f8\fs22 : A value that specifies the type of expression breakpoint to set: COBP_TYPE_IF_EXP_TRUE, COBP_TYPE_IF_EXP_CHANGED.\par \par } {\i\f8\fs22 length} {\f8\fs22 : An integer that contains the number of elements to watch. (Default value is 1.)\par \par } {\i\f8\fs22 passcount} {\f8\fs22 : An integer that contains the number of times to pass this breakpoint before breaking. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 267\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_EnableBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; EnableBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::EnableBreakpoint}}{\f8\fs22  } {\f8\fs32 BOOL COBreakpoints::EnableBreakpoint(bp* pbp)} {\f8\fs22 \par \par Enable the breakpoint specified by the bp object given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pbp} {\f8\fs22 : A pointer to a bp object that specifies the breakpoint to enable.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 301\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_EnableAllBreakpoints} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; EnableAllBreakpoints}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::EnableAllBreakpoints}}{\f8\fs22  } {\f8\fs32 BOOL COBreakpoints::EnableAllBreakpoints(void)} {\f8\fs22 \par \par Enable all breakpoints.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 322\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_DisableBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; DisableBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::DisableBreakpoint}}{\f8\fs22  } {\f8\fs32 BOOL COBreakpoints::DisableBreakpoint(bp* pbp)} {\f8\fs22 \par \par Disable the breakpoint specified by the bp object given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pbp} {\f8\fs22 : A pointer to a bp object that specifies the breakpoint to disable.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 350\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_DisableAllBreakpoints} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; DisableAllBreakpoints}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::DisableAllBreakpoints}}{\f8\fs22  } {\f8\fs32 BOOL COBreakpoints::DisableAllBreakpoints(void)} {\f8\fs22 \par \par Disable all breakpoints.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 371\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_RemoveBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; RemoveBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::RemoveBreakpoint}}{\f8\fs22  } {\f8\fs32 BOOL COBreakpoints::RemoveBreakpoint(bp* pbp)} {\f8\fs22 \par \par Remove the breakpoint specified by the bp object given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pbp} {\f8\fs22 : A pointer to a bp object that specifies the breakpoint to remove.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 400\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBreakpoints_ClearAllBreakpoints} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBreakpoints; ClearAllBreakpoints}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBreakpoints::ClearAllBreakpoints}}{\f8\fs22  } {\f8\fs32 BOOL COBreakpoints::ClearAllBreakpoints(void)} {\f8\fs22 \par \par Remove all breakpoints.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 426\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__VerifyBreakpointHit} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} VerifyBreakpointHit}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} VerifyBreakpointHit}}{\f8\fs22  } {\f8\fs32 BOOL VerifyBreakpointHit(void)} {\f8\fs22 \par \par Verify that a breakpoint was hit. This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobp.cpp, 449\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_GotoNthDefinition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; GotoNthDefinition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::GotoNthDefinition}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::GotoNthDefinition(int index, LPCSTR name, int ambiguity /*= NoAmbiguity*/)} {\f8\fs22 \par \par Go to the n-th definition of the given symbol.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that specifies the n-th definition to go to.\par \par } {\i\f8\fs22 name} {\f8\fs22 : A pointer to a string that contains the name of the symbol to go to.\par \par } {\i\f8\fs22 ambiguity} {\f8\fs22 : An integer that specifies the index of the symbol in the list of ambiguous symbols, if applicable. If ambiguity is not expected, set this value to NoAmbiguity. (Default value is NoAmbiguity.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 38\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_GotoNthReference} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; GotoNthReference}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::GotoNthReference}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::GotoNthReference(int index, LPCSTR name, int ambiguity /*= NoAmbiguity*/)} {\f8\fs22 \par \par Go to the n-th reference of the given symbol.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that specifies the n-th reference to go to.\par \par } {\i\f8\fs22 name} {\f8\fs22 : A pointer to a string that contains the name of the symbol to go to.\par \par } {\i\f8\fs22 ambiguity} {\f8\fs22 : An integer that specifies the index of the symbol in the list of ambiguous symbols, if applicable. If ambiguity is not expected, set this value to NoAmbiguity. (Default value is NoAmbiguity.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 80\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_NextDefinition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; NextDefinition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::NextDefinition}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::NextDefinition(void)} {\f8\fs22 \par \par Go to the next definition of the currently selected symbol.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 119\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_PrevDefinition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; PrevDefinition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::PrevDefinition}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::PrevDefinition(void)} {\f8\fs22 \par \par Go to the previous definition of the currently selected symbol.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 128\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_NextReference} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; NextReference}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::NextReference}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::NextReference(void)} {\f8\fs22 \par \par Go to the next reference of the currently selected symbol.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 138\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_PrevReference} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; PrevReference}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::PrevReference}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::PrevReference(void)} {\f8\fs22 \par \par Go to the previous reference of the currently selected symbol.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 147\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_PopContext} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; PopContext}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::PopContext}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::PopContext(void)} {\f8\fs22 \par \par Pop context to the previous cursor location/context.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 156\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_GetMatches} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; GetMatches}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::GetMatches}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::GetMatches( CStringArray& matches, CString name, QueryType type, int filter /*= NONE*/)} {\f8\fs22 \par \par Get the list of symbols that match the name specified when the specified query is performed.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 matches} {\f8\fs22 : A CStringArray reference that will contain the list of symbols that match the symbols specified by name.\par \par } {\i\f8\fs22 name} {\f8\fs22 : A CString that contains the name of the symbol.\par \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that specifies the type of query to perform: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\i\f8\fs22 filter} {\f8\fs22 : A bit field that specifies the type of filter to apply to the query: NONE, CLASSES, FUNCTIONS, DATA, MACROS, TYPES. (Default value is NONE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 176\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_GetDefinitions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; GetDefinitions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::GetDefinitions}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::GetDefinitions( CStringArray& definitions, CString name, QueryType type, int filter /*= NONE*/, int ambiguity /*= NoAmbiguity*/)} {\f8\fs22 \par \par Get the list of definitions for a given symbol when a specified query is performed.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 definitions} {\f8\fs22 : A CStringArray reference that will contain the list of definitions for the given symbol.\par \par } {\i\f8\fs22 name} {\f8\fs22 : A CString that contains the name of the symbol.\par \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that specifies the type of query to perform: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\i\f8\fs22 filter} {\f8\fs22 : A bit field that specifies the type of filter to apply to the query: NONE, CLASSES, FUNCTIONS, DATA, MACROS, TYPES. (Default value is NONE.)\par \par } {\i\f8\fs22 ambiguity} {\f8\fs22 : An integer that specifies the index of the symbol in the list of ambiguous symbols, if applicable. If ambiguity is not expected, set this value to NoAmbiguity. (Default value is NoAmbiguity.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 233\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_GetReferences} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; GetReferences}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::GetReferences}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::GetReferences( CStringArray& references, CString name, QueryType type, int filter /*= NONE*/, int ambiguity /*= NoAmbiguity*/)} {\f8\fs22 \par \par Get the list of references for a given symbol when a specified query is performed.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 references} {\f8\fs22 : A CStringArray reference that will contain the list of references for the given symbol.\par \par } {\i\f8\fs22 name} {\f8\fs22 : A CString that contains the name of the symbol.\par \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that specifies the type of query to perform: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\i\f8\fs22 filter} {\f8\fs22 : A bit field that specifies the type of filter to apply to the query: NONE, CLASSES, FUNCTIONS, DATA, MACROS, TYPES. (Default value is NONE.)\par \par } {\i\f8\fs22 ambiguity} {\f8\fs22 : An integer that specifies the index of the symbol in the list of ambiguous symbols, if applicable. If ambiguity is not expected, set this value to NoAmbiguity. (Default value is NoAmbiguity.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 277\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_GetLocations} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; GetLocations}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::GetLocations}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::GetLocations(CStringArray& defs, CStringArray& refs)} {\f8\fs22 \par \par Get the current list of definitnios and references and put them in separate lists.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 defs} {\f8\fs22 : A CStringArray reference that will contain the list of current definitions. may be NULL if refs isn't.\par \par } {\i\f8\fs22 refs} {\f8\fs22 : A CStringArray reference that will contain the list of current references. may be NULL if defs isn't.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 318\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_GetMembers} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; GetMembers}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::GetMembers}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::GetMembers( CStringArray& members, CString name, QueryType type, int filter /*= NONE*/, int ambiguity /*= NoAmbiguity*/)} {\f8\fs22 \par \par Get the list of members for a given symbol when a specified query is performed.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 members} {\f8\fs22 : A CStringArray reference that will contain the list of members for the given symbol.\par \par } {\i\f8\fs22 name} {\f8\fs22 : A CString that contains the name of the symbol.\par \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that specifies the type of query to perform: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\i\f8\fs22 filter} {\f8\fs22 : A bit field that specifies the type of filter to apply to the query: NONE, CLASSES, FUNCTIONS, DATA, MACROS, TYPES. (Default value is NONE.)\par \par } {\i\f8\fs22 ambiguity} {\f8\fs22 : An integer that specifies the index of the symbol in the list of ambiguous symbols, if applicable. If ambiguity is not expected, set this value to NoAmbiguity. (Default value is NoAmbiguity.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 365\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_GetFirstLevelBranches} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; GetFirstLevelBranches}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::GetFirstLevelBranches}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::GetFirstLevelBranches( CStringArray& branches, CString name, QueryType type, int filter /*= NONE*/, int ambiguity /*= NoAmbiguity*/)} {\f8\fs22 \par \par Get the list of first level branches for a given symbol when a specified query is performed.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 branches} {\f8\fs22 : A CStringArray reference that will contain the list of first level branches for the given symbol.\par \par } {\i\f8\fs22 name} {\f8\fs22 : A CString that contains the name of the symbol.\par \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that specifies the type of query to perform: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\i\f8\fs22 filter} {\f8\fs22 : A bit field that specifies the type of filter to apply to the query: NONE, CLASSES, FUNCTIONS, DATA, MACROS, TYPES. (Default value is NONE.)\par \par } {\i\f8\fs22 ambiguity} {\f8\fs22 : An integer that specifies the index of the symbol in the list of ambiguous symbols, if applicable. If ambiguity is not expected, set this value to NoAmbiguity. (Default value is NoAmbiguity.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 431\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_VerifyNavigation} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; VerifyNavigation}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::VerifyNavigation}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::VerifyNavigation(LPCSTR file_line)} {\f8\fs22 \par \par Verify browser navigation navigated to the correct file and line number.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 file_line} {\f8\fs22 : A pointer to a string that contains the file and line number to verify. The form of the string is: filename(line); example: f:\cafe\cafe\wb\cobrowse.h(33).\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 479\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COBrowse_VerifyMultDefRefMatches} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COBrowse; VerifyMultDefRefMatches}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COBrowse::VerifyMultDefRefMatches}}{\f8\fs22  } {\f8\fs32 BOOL COBrowse::VerifyMultDefRefMatches(SYM_DEFS_REFS *expected, LPCSTR name)} {\f8\fs22 \par \par Do def/ref query on name and verify all matches are listed along with correct defs/refs for each.  order is not verified.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expected} {\f8\fs22 : An array of SYM_DEFS_REFS objects containing all matches, defs, and refs expected in browser window.\par \par } {\i\f8\fs22 name} {\f8\fs22 : An LPCSTR that contains the name of the symbol to query (default is "").\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cobrowse.cpp, 512\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COCoProcessor_GetCPRegister} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COCoProcessor; GetCPRegister}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COCoProcessor::GetCPRegister}}{\f8\fs22  } {\f8\fs32 CString COCoProcessor::GetCPRegister(int reg)} {\f8\fs22 \par \par Get the value of one of the coprocessor's registers.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the value of the specified coprocessor's register.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of coprocessor registers.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cocp.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COCoProcessor_CPRegisterValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COCoProcessor; CPRegisterValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COCoProcessor::CPRegisterValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COCoProcessor::CPRegisterValueIs(int reg, LPCSTR value)} {\f8\fs22 \par \par Determine whether the given coprocessor register matches the given value.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the coprocessor's register matches the given value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of coprocessor registers.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the expected value of the specified register.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cocp.cpp, 46\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COCoProcessor_SetCPRegister} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COCoProcessor; SetCPRegister}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COCoProcessor::SetCPRegister}}{\f8\fs22  } {\f8\fs32 BOOL COCoProcessor::SetCPRegister(int reg, LPCSTR value)} {\f8\fs22 \par \par Set the value of one of the coprocessor's registers.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of coprocessor registers.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the value to set the specified register to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cocp.cpp, 66\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODAM_GotoSymbol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODAM; GotoSymbol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODAM::GotoSymbol}}{\f8\fs22  } {\f8\fs32 int CODAM::GotoSymbol(LPCSTR symbol)} {\f8\fs22 \par \par Navigate to a specified symbol in the disassembly code.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol to navigate to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codam.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODAM_GotoAddress} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODAM; GotoAddress}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODAM::GotoAddress}}{\f8\fs22  } {\f8\fs32 int CODAM::GotoAddress(int address)} {\f8\fs22 \par \par Navigate to an address in the disassembly code.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address to navigate to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codam.cpp, 44\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODAM_InstructionIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODAM; InstructionIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODAM::InstructionIs}}{\f8\fs22  } {\f8\fs32 BOOL CODAM::InstructionIs(LPCSTR inst)} {\f8\fs22 \par \par Determine whether the instruction at the current location in the diassasembly code matches the given instruction.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the instruction at the current location in the disassembly code matches the given instruction (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 inst} {\f8\fs22 : A pointer to a string that contains the instruction to compare to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codam.cpp, 57\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODAM_GetInstruction} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODAM; GetInstruction}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODAM::GetInstruction}}{\f8\fs22  } {\f8\fs32 CString CODAM::GetInstruction()} {\f8\fs22 \par \par Get the instruction at the current location in the disassembly code.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the instruction.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codam.cpp, 75\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_Exec} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; Exec}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::Exec}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::Exec(BOOL (UIWBFrame::*stepfcn)(int), int count /*= 1*/, LPCSTR symbol /*= NULL*/, LPCSTR line /*= NULL*/, LPCSTR function /*= NULL*/, int WAIT /*= WAIT_FOR_BREAK*/, int ModeVerify /*= TRUE*/)} {\f8\fs22 \par \par Execute a debugging operation and verify success.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stepfcn} {\f8\fs22 : A pointer to a function in UIWBFrame that takes an int. This parameter specifies the debugging operation to perform:  Go, Restart, StopDebugging, Break, StepInto, StepOver, StepOut, StepToCursor, ToggleBreakpoint.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of times to perform this debugging operation. (Default value is 1.)\par \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol to expect at the current line when the debugging operation is complete. NULL means don't verify based on symbol name. (Default value is NULL.)\par \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to expect at the current line when the debugging operation is complete. NULL means don't verify based on line text. (Default value is NULL.)\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to expect when the debugging operation is complete. NULL means don't verify based on function name. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\i\f8\fs22 ModeVerify} {\f8\fs22 : A Boolean value that is unused. This parameter is NYI. (Default value is TRUE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 51\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_ExecUntilLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; ExecUntilLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::ExecUntilLine}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::ExecUntilLine(BOOL (UIWBFrame::*stepfcn)(int), LPCSTR line, LPCSTR function /*= NULL*/, int WAIT /*= WAIT_FOR_BREAK*/)} {\f8\fs22 \par \par Execute a debugging operation until the specified line is hit.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stepfcn} {\f8\fs22 : A pointer to a function in UIWBFrame that takes an int. This parameter specifies the debugging operation to perform:  Go, Restart, StopDebugging, Break, StepInto, StepOver, StepOut, StepToCursor, ToggleBreakpoint.\par \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to be found that will end the debugging operation.\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name that contains the line to wait for. This parameter augments line. NULL means only look for the given line. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 92\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_ExecUntilFunc} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; ExecUntilFunc}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::ExecUntilFunc}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::ExecUntilFunc(BOOL (UIWBFrame::*stepfcn)(int), LPCSTR function, int WAIT /*= WAIT_FOR_BREAK*/)} {\f8\fs22 \par \par Execute a debugging operation until the specified function is entered.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stepfcn} {\f8\fs22 : A pointer to a function in UIWBFrame that takes an int. This parameter specifies the debugging operation to perform:  Go, Restart, StopDebugging, Break, StepInto, StepOver, StepOut, StepToCursor, ToggleBreakpoint.\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to be found that will end the debugging operation.\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 123\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_ExecUntilSymbol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; ExecUntilSymbol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::ExecUntilSymbol}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::ExecUntilSymbol(BOOL (UIWBFrame::*stepfcn)(int), LPCSTR symbol, int WAIT)} {\f8\fs22 \par \par Execute a debugging operation until the specified symbol is found at the current line.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stepfcn} {\f8\fs22 : A pointer to a function in UIWBFrame that takes an int. This parameter specifies the debugging operation to perform:  Go, Restart, StopDebugging, Break, StepInto, StepOver, StepOut, StepToCursor, ToggleBreakpoint.\par \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol name to be found that will end the debugging operation.\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 156\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_Go} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; Go}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::Go}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::Go(LPCSTR symbol, LPCSTR line /*= NULL*/, LPCSTR function /*= NULL*/, int WAIT /*= WAIT_FOR_BREAK*/)} {\f8\fs22 \par \par Perform the Go debugging operation and verify the correct line/function is entered when the operation is complete.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol to expect at the current line when the Go operation is complete.\par \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to expect at the current line when the Go operation is complete. NULL means don't verify based on line text. (Default value is NULL.)\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to expect when the Go operation is complete. NULL means don't verify based on function name. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 190\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_Restart} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; Restart}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::Restart}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::Restart(LPCSTR path /*= NULL*/)} {\f8\fs22 \par \par Perform the Restart debugging operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 path} {\f8\fs22 : A pointer to a string that contains the path to the source files. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 202\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StopDebugging} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StopDebugging}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StopDebugging}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StopDebugging(int WAIT /*= ASSUME_NORMAL_TERMINATION*/)} {\f8\fs22 \par \par Perform the Stop Debugging debugging operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is ASSUME_NORMAL_TERMINATION.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 232\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_Break} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; Break}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::Break}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::Break()} {\f8\fs22 \par \par Perform the Break debugging operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 254\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepInto} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepInto}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepInto}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepInto(int count /* 1 */, LPCSTR symbol /* NULL */, LPCSTR line /* NULL */, LPCSTR function /* NULL */, int WAIT)} {\f8\fs22 \par \par Perform the Step Into debugging operation and verify the correct line/function/symbol is entered when the operation is complete.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of times to perform this debugging operation. (Default value is 1.)\par \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol to expect at the current line when the Step Into operation is complete. NULL means don't verify based on symbol name. (Default value is NULL.)\par \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to expect at the current line when the Step Into operation is complete. NULL means don't verify based on line text. (Default value is NULL.)\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to expect when the Step Into operation is complete. NULL means don't verify based on function name. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 271\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepIntoUntilLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepIntoUntilLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepIntoUntilLine}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepIntoUntilLine(LPCSTR line, LPCSTR function /* NULL */, int WAIT /*= WAIT_FOR_BREAK*/)} {\f8\fs22 \par \par Perform the Step Into debugging operation until the specified line/function is entered.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to step into until reached.\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name that contains the line to wait for. This parameter augments line. NULL means only look for the given line. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 284\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepIntoUntilFunc} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepIntoUntilFunc}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepIntoUntilFunc}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepIntoUntilFunc(LPCSTR function /* NULL */, int WAIT /*= WAIT_FOR_BREAK*/)} {\f8\fs22 \par \par Perform the Step Into debugging operation until the specified function is entered.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to be found that will end the step into operation.\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 296\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepIntoUntilSymbol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepIntoUntilSymbol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepIntoUntilSymbol}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepIntoUntilSymbol(LPCSTR symbol, int WAIT /*= WAIT_FOR_BREAK*/)} {\f8\fs22 \par \par Perform the Step Into debugging operation until the specified symbol is reached.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol name to be found that will end the step into operation.\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 308\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepOver} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepOver}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepOver}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepOver(int count /* 1 */, LPCSTR symbol /* NULL */, LPCSTR line /* NULL */, LPCSTR function /* NULL */, int WAIT)} {\f8\fs22 \par \par Perform the Step Over debugging operation and verify the correct line/function/symbol is entered when the operation is complete.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of times to perform this debugging operation. (Default value is 1.)\par \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol to expect at the current line when the Step Over operation is complete. NULL means don't verify based on symbol name. (Default value is NULL.)\par \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to expect at the current line when the Step Over operation is complete. NULL means don't verify based on line text. (Default value is NULL.)\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to expect when the Step Over operation is complete. NULL means don't verify based on function name. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 324\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepOverUntilLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepOverUntilLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepOverUntilLine}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepOverUntilLine(LPCSTR line, LPCSTR function /* NULL */, int WAIT)} {\f8\fs22 \par \par Perform the Step Over debugging operation until the specified line/function is entered.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to be found that will end the step over operation.\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name that contains the line to wait for. This parameter augments line. NULL means only look for the given line. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 337\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepOverUntilFunc} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepOverUntilFunc}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepOverUntilFunc}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepOverUntilFunc(LPCSTR function /* NULL */, int WAIT)} {\f8\fs22 \par \par Perform the Step Over debugging operation until the specified function is entered.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to be found that will end the step over operation.\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 349\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepOverUntilSymbol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepOverUntilSymbol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepOverUntilSymbol}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepOverUntilSymbol(LPCSTR symbol, int WAIT)} {\f8\fs22 \par \par Perform the Step Over debugging operation until the specified symbol is reached.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol name to be found that will end the step over operation.\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 361\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepOut} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepOut}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepOut}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepOut(int count /* 1 */, LPCSTR symbol /* NULL */, LPCSTR line /* NULL */, LPCSTR function /* NULL */, int WAIT)} {\f8\fs22 \par \par Perform the Step Out debugging operation and verify the correct line/function/symbol is entered when the operation is complete.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of times to perform this debugging operation. (Default value is 1.)\par \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol to expect at the current line when the Step Out operation is complete. NULL means don't verify based on symbol name. (Default value is NULL.)\par \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to expect at the current line when the Step Out operation is complete. NULL means don't verify based on line text. (Default value is NULL.)\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to expect when the Step Out operation is complete. NULL means don't verify based on function name. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 377\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepOutUntilLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepOutUntilLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepOutUntilLine}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepOutUntilLine(LPCSTR line, LPCSTR function /* NULL */, int WAIT)} {\f8\fs22 \par \par Perform the Step Out debugging operation until the specified line/function is entered.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to be found that will end the step out operation.\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name that contains the line to wait for. This parameter augments line. NULL means only look for the given line. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 390\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepOutUntilFunc} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepOutUntilFunc}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepOutUntilFunc}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepOutUntilFunc(LPCSTR function /* NULL */, int WAIT)} {\f8\fs22 \par \par Perform the Step Out debugging operation until the specified function is entered.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to be found that will end the step out operation.\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 402\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepOutUntilSymbol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepOutUntilSymbol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepOutUntilSymbol}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepOutUntilSymbol(LPCSTR symbol, int WAIT)} {\f8\fs22 \par \par Perform the Step Out debugging operation until the specified symbol is reached.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol name to be found that will end the step out operation.\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 414\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_StepToCursor} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; StepToCursor}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::StepToCursor}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::StepToCursor(int linepos /* 0 */, LPCSTR symbol /* NULL */, LPCSTR line /* NULL */, LPCSTR function /* NULL */, int WAIT /*WAIT_FOR_BREAK*/)} {\f8\fs22 \par \par Perform the Step To Cursor debugging operation and verify the correct line/function/symbol is entered when the operation is complete.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 linepos} {\f8\fs22 : An integer that contains the line to position the cursor on before performing the Step To Cursor operation. 0 means use the current line. (Default is 0.)\par \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol to expect at the current line when the Step To Cursor operation is complete. NULL means don't verify based on symbol name. (Default value is NULL.)\par \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the text of the line to expect at the current line when the Step To Cursor operation is complete. NULL means don't verify based on line text. (Default value is NULL.)\par \par } {\i\f8\fs22 function} {\f8\fs22 : A pointer to a string that contains the function name to expect when the Step To Cursor operation is complete. NULL means don't verify based on function name. (Default value is NULL.)\par \par } {\i\f8\fs22 WAIT} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 430\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_SetNextStatement} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; SetNextStatement}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::SetNextStatement}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::SetNextStatement(int line /* 0 */)} {\f8\fs22 \par \par Set the next statement (IP) to the given line.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : An integer that contains the line to set the next statement to. 0 means use the current line. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 452\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_SetNextStatement} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; SetNextStatement}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::SetNextStatement}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::SetNextStatement(LPCSTR line)} {\f8\fs22 \par \par Set the next statement (IP) to the given line.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains the line to set the next statement to. NULL means use the current line. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 475\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_ShowNextStatement} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; ShowNextStatement}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::ShowNextStatement}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::ShowNextStatement(void)} {\f8\fs22 \par \par Go to the next statement to be executed by the debugger.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 504\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_GetDebugState} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; GetDebugState}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::GetDebugState}}{\f8\fs22  } {\f8\fs32 DebugState CODebug::GetDebugState(void)} {\f8\fs22 \par \par Get the state of the debugger.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A DebugState value that indicates the state of the debugger: ST_NODEBUG, ST_DEBUGBREAK, ST_DEBUGRUN.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 517\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_Wait} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; Wait}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::Wait}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::Wait(int option)} {\f8\fs22 \par \par Wait for the current debugging operation to complete.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies how to wait for the debugging operation to complete: NOWAIT, WAIT_FOR_RUN, WAIT_FOR_BREAK, WAIT_FOR_TERMINATION, ASSUME_NORMAL_TERMINATION, WAIT_FOR_EXCEPTION, WAIT_FOR_CODED_BREAK. (Default value is WAIT_FOR_BREAK.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 536\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_CurrentLineIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; CurrentLineIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::CurrentLineIs}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::CurrentLineIs(LPCSTR line) {\f8\fs22 \par \par Determine whether the current line in the debugger matches the line given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current line in the debugger matches the given line (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains either part of the text of the line expected or the line number specified by @line.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 548\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_VerifyCurrentLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; VerifyCurrentLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::VerifyCurrentLine}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::VerifyCurrentLine(LPCSTR line)} {\f8\fs22 \par \par Determine whether the current line in the debugger matches the line given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current line in the debugger matches the given line (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to a string that contains either part of the text of the line expected or the line number specified by @line.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 563\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_AtSymbol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; AtSymbol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::AtSymbol}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::AtSymbol(LPCSTR symbol)} {\f8\fs22 \par \par Determine whether the current debugging location (IP) is at the given symbol.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current debugging location (IP) is at the given symbol (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 598\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_VerifyAtSymbol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; VerifyAtSymbol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::VerifyAtSymbol}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::VerifyAtSymbol(LPCSTR symbol)} {\f8\fs22 \par \par Determine whether the current debugging location (IP) is at the given symbol.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current debugging location (IP) is at the given symbol (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the symbol.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 656\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_VerifyTermination} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; VerifyTermination}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::VerifyTermination}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::VerifyTermination(int exitcode)} {\f8\fs22 \par \par Determine whether the debuggee terminated with the specified exit code. (See VerifyTermination(void) to verify termination regardless of exit code.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the debuggee terminated with the specified exit code (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 exitcode} {\f8\fs22 : An integer that specifies the expected exit code.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 674\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_VerifyTermination} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; VerifyTermination}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::VerifyTermination}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::VerifyTermination(void)} {\f8\fs22 \par \par Determine whether the debuggee terminated. (See VerifyTermination(int) to verify termination with a specific exit code.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the debuggee terminated (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 687\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_SetSteppingMode} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; SetSteppingMode}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::SetSteppingMode}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::SetSteppingMode(StepMode mode)} {\f8\fs22 \par \par Set the stepping mode in the debugger.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 mode} {\f8\fs22 : A StepMode value that indicates the stepping mode: SRC, ASM.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 701\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_GetSteppingMode} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; GetSteppingMode}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::GetSteppingMode}}{\f8\fs22  } {\f8\fs32 StepMode CODebug::GetSteppingMode(void)} {\f8\fs22 \par \par Get the current stepping mode in the debugger.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A StepMode value that indicates the current stepping mode: SRC, ASM.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 736\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_ValidateSteppingMode} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; ValidateSteppingMode}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::ValidateSteppingMode}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::ValidateSteppingMode(StepMode mode)} {\f8\fs22 \par \par Determine whether the current stepping mode matches the given stepping mode.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current stepping mode matches the given stepping mode (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 mode} {\f8\fs22 : A StepMode value that contains the expected stepping mode: SRC, ASM.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 747\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_DoDebuggeeKeys} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; DoDebuggeeKeys}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::DoDebuggeeKeys}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::DoDebuggeeKeys(CString str)} {\f8\fs22 \par \par Perform the given keystrokes in the debuggee. This code is not portable and should be used with extreme caution.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 str} {\f8\fs22 : A CString that contains the title, class, and keystrokes to send to the debuggee. The form is: Title#Class#Keys.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 763\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_DoDebuggeeCmd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; DoDebuggeeCmd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::DoDebuggeeCmd}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::DoDebuggeeCmd(CString str)} {\f8\fs22 \par \par Perform the given command in the debuggee. This code is not portable and should be used with extreme caution.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 str} {\f8\fs22 : A CString that contains the title, class, and command to send to the debuggee. The form is: Title#Class#Command.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 795\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_VerifyNotification} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; VerifyNotification}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::VerifyNotification}}{\f8\fs22  } {\f8\fs32 BOOL CODebug::VerifyNotification(LPCSTR notification, int startLine /* 1 */, int numberOfLines /* 1 */)} {\f8\fs22 \par \par Verifies any debugger output (substring).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if the notification substring is found at line, FALSE - if not\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 notification} {\f8\fs22 : A pointer to a string that contains the substring to look for in the debugger output.\par \par } {\i\f8\fs22 startLine} {\f8\fs22 : An integer that specifies the 1-based line number in the Output window to start looking for the specified substring. (Default value is 1.)\par \par } {\i\f8\fs22 numberOfLines} {\f8\fs22 : An integer that specifies the number of lines to search (from startLine) for the substring. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 871\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_HandleMsg} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; HandleMsg}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::HandleMsg}}{\f8\fs22  } {\f8\fs32 int CODebug::HandleMsg(MSG_TYPE msg, LPCSTR pdata /* NULL */, int wait_time /* 10 */)} {\f8\fs22 \par \par Waits for a specific msg box to be displayed, supplies the data requested, and continues\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if the correct msg box comes up, the data is supplied, and the msg box is dismissed.  ERROR_ERROR if any of those operations fail.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 msg:} {\f8\fs22 : a symbol representing the particular msg box to be handled.  current legal values are MSG_REMOTE_EXE_NAME_REQUIRED and MSG_REMOTE_LOCAL_EXE_MISMATCH\par \par } {\i\f8\fs22 pdata:} {\f8\fs22 : a pointer to the data that needs to be supplied to handle the message. the type of data depends on the msg being handled.  currently only MSG_REMOTE_EXE_NAME_REQUIRED uses data, and that is a string pointing to the remote path of the target.  the default data pointer is NULL.\par \par } {\i\f8\fs22 wait_time:} {\f8\fs22 : time in seconds to wait for msg box to be displayed. default is 10 seconds.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 903\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_CancelMsg} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; CancelMsg}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::CancelMsg}}{\f8\fs22  } {\f8\fs32 int CODebug::CancelMsg(MSG_TYPE msg, int wait_time /* 10 */)} {\f8\fs22 \par \par Waits for a specific msg box to be displayed and cancels it\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if the correct msg box comes up and is canceled.  ERROR_ERROR if either of those operations fail.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 msg:} {\f8\fs22 : a symbol representing the particular msg box to be handled.  current legal values are MSG_REMOTE_EXE_NAME_REQUIRED and MSG_REMOTE_LOCAL_EXE_MISMATCH\par \par } {\i\f8\fs22 wait_time:} {\f8\fs22 : time in seconds to wait for msg box to be displayed. default is 10 seconds.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 945\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CODebug_CancelMsg} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CODebug; CancelMsg}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CODebug::CancelMsg}}{\f8\fs22  } {\f8\fs32 int CODebug::CancelMsg(MSG_TYPE msg, int wait_time /* 10 */)} {\f8\fs22 \par \par Waits for a specific msg box to be displayed and cancels it\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 ERROR_SUCCESS if the correct msg box comes up and is canceled.  ERROR_ERROR if either of those operations fail.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 msg:} {\f8\fs22 : a symbol representing the particular msg box to be handled.  current legal values are MSG_REMOTE_EXE_NAME_REQUIRED and MSG_REMOTE_LOCAL_EXE_MISMATCH\par \par } {\i\f8\fs22 wait_time:} {\f8\fs22 : time in seconds to wait for msg box to be displayed. default is 10 seconds.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 codebug.cpp, 1000\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_Enable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; Enable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::Enable}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::Enable()} {\f8\fs22 \par \par Enable the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 29\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_Disable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; Disable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::Disable}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::Disable()} {\f8\fs22 \par \par Disable the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 43\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, char *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a char that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 57\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, unsigned char *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to an unsigned char that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 77\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, short int *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a short integer that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 97\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, unsigned short int *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to an unsigned short integer that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 117\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, int *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to an integer that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 137\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, unsigned int *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to an unsigned integer that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 157\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, long int *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a long that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 177\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, unsigned long int *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to an unsigned long that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 197\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, float *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a float that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 217\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, double *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a double that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 237\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_GetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; GetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::GetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::GetExpressionValue(LPCSTR expression, long double *value)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a long double that will contain the result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 257\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExtractExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExtractExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExtractExpressionValue}}{\f8\fs22  } {\f8\fs32 CString COExpEval::ExtractExpressionValue(LPCSTR expression, BOOL bErrorExpected /* FALSE */)} {\f8\fs22 \par \par Get the result of the given expression from the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the result of the expression evaluation.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 bErrorExpected} {\f8\fs22 : A Boolean value that indicates whether to expect an error (TRUE) during evaluation or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 277\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, char value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A char that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 313\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, unsigned char value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An unsigned char that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 327\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, short int value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A short that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 341\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, unsigned short int value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An unsigned short that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 355\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, int value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An integer that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 369\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, unsigned int value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An unsigned integer that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 383\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, long int value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A long that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 397\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, unsigned long int value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An unsigned long that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 411\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, float value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A float that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 425\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, double value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A double that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 439\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, long double value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A long double that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 453\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_SetExpressionValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; SetExpressionValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::SetExpressionValue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::SetExpressionValue(LPCSTR expression, LPCSTR value)} {\f8\fs22 \par \par Set an expression's value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the value to set the expression to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 467\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, char value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A char that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 493\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, unsigned char value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An unsigned char that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 508\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, short int value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A short that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 523\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, unsigned short int value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An unsigned short that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 538\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, int value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An integer that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 553\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, unsigned int value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An unsigned integer that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 568\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, long int value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A long that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 583\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, unsigned long int value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An unsigned long that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 598\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, float value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A float that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 613\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, double value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A double that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 628\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, long double value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A long double that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 643\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIs(LPCSTR expression, LPCSTR value)} {\f8\fs22 \par \par Determine whether the expression evaluates to the given value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the specified value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the expected result of the expression evaluation.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 658\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIsTrue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIsTrue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIsTrue}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIsTrue(LPCSTR expression)} {\f8\fs22 \par \par Determine whether the given expression evaluates to TRUE in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to TRUE (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 700\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionValueIsFalse} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionValueIsFalse}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionValueIsFalse}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionValueIsFalse(LPCSTR expression)} {\f8\fs22 \par \par Determine whether the given expression evaluates to FALSE in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to FALSE (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 714\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExpEval_ExpressionErrorIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExpEval; ExpressionErrorIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExpEval::ExpressionErrorIs}}{\f8\fs22  } {\f8\fs32 BOOL COExpEval::ExpressionErrorIs(LPCSTR expression, LPCSTR value)} {\f8\fs22 \par \par Determine whether the given expression evaluates to the specified error value in the expression evaluator.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the given expression evaluates to the given error value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to evaluate.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the error expected.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coee.cpp, 728\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExceptions_VerifyExceptionHit} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExceptions; VerifyExceptionHit}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExceptions::VerifyExceptionHit}}{\f8\fs22  } {\f8\fs32 BOOL COExceptions::VerifyExceptionHit(void)} {\f8\fs22 \par \par Determine whether an exception was hit. (See VerifyExceptionHit(int) to verify a specific exception.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether an exception was hit (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coexcpt.cpp, 27\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExceptions_VerifyExceptionHit} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExceptions; VerifyExceptionHit}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExceptions::VerifyExceptionHit}}{\f8\fs22  } {\f8\fs32 BOOL COExceptions::VerifyExceptionHit(int code)} {\f8\fs22 \par \par Determine whether a specific exception was hit. (See VerifyException(void) to verify any exception.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the specified exception was hit (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 code} {\f8\fs22 : An integer that contains the exception code expected.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coexcpt.cpp, 43\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExceptions_SetException} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExceptions; SetException}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExceptions::SetException}}{\f8\fs22  } {\f8\fs32 BOOL COExceptions::SetException(int code, int option)} {\f8\fs22 \par \par Set or change an exception.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 code} {\f8\fs22 : An integer that contains the exception code.\par \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies the type of action to take when the exception is caught: STOP_ALWAYS, IF_NOT_HANDLED.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coexcpt.cpp, 61\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExceptions_GetException} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExceptions; GetException}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExceptions::GetException}}{\f8\fs22  } {\f8\fs32 CString COExceptions::GetException(int code)} {\f8\fs22 \par \par Get a string that describes the exception.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains a string describing the exception specified.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 code} {\f8\fs22 : An integer that contains the exception code.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coexcpt.cpp, 76\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COExceptions_RestoreDefualts} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COExceptions; RestoreDefualts}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COExceptions::RestoreDefualts}}{\f8\fs22  } {\f8\fs32 BOOL COExceptions::RestoreDefualts(void)} {\f8\fs22 \par \par Restore all default exceptions.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coexcpt.cpp, 89\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_Enable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; Enable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::Enable}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::Enable(void)} {\f8\fs22 \par \par Enable memory access in the debugger.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_Disable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; Disable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::Disable}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::Disable(void)} {\f8\fs22 \par \par Disable memory access in the debugger.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 43\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, char *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a char buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 58\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, unsigned char *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned char buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 88\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, short int *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a short integer buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 118\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, unsigned short int *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned short buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 141\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, int *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an integer buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 164\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, unsigned int *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned integer buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 187\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, long int *data, int count)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a long buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 210\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, unsigned long int *data, int count)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned long buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 233\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, float *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a float buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 256\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, double *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a double buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 279\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_GetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; GetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::GetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::GetMemoryData(int address, long double *data, int count /* 1 */)} {\f8\fs22 \par \par Get data from memory at the specified address.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to retrieve data from.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a long double buffer that will contain the data retrieved.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to retrieve from memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 302\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 int COMemory::SetMemoryData(LPCSTR symbol, char *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that specifies a symbol where memory is to be set. The address of the symbol is used to as the address where memory changes will occur.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a char buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 351\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, char *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a char buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 372\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, unsigned char *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned char buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 393\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, short int *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a short integer buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 414\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, unsigned short int *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned short integer buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 435\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 int COMemory::SetMemoryData(LPCSTR symbol, int *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that specifies a symbol where memory is to be set. The address of the symbol is used to as the address where memory changes will occur.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an integer buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 456\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, int *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an integer buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 477\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, unsigned int *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned integer buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 498\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, long int *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a long buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 519\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, unsigned long int *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned long buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 540\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, float *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a float buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 561\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, double *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a double buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 588\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, long double *data, int count /* 1 */)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a long double buffer that contains the data to set.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to set in memory. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 615\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 int COMemory::SetMemoryData(LPCSTR symbol, char data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that specifies a symbol where memory is to be set. The address of the symbol is used to as the address where memory changes will occur.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A char that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 641\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, char data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A char that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 654\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, unsigned char data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An unsigned char that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 667\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, short int data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A short that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 680\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, unsigned short int data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An unsigned short that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 693\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 int COMemory::SetMemoryData(LPCSTR symbol, int data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that specifies a symbol where memory is to be set. The address of the symbol is used to as the address where memory changes will occur.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An integer that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 706\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, int data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An integer that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 719\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, unsigned int data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An unsigned integer that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 732\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, long int data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A long that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 745\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, unsigned long int data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An unsigned long that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 758\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, float data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A float that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 771\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, double data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A double that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 784\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_SetMemoryData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; SetMemoryData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::SetMemoryData}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::SetMemoryData(int address, long double data)} {\f8\fs22 \par \par Set data at a specified memory location.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to start setting data.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A long double that contains the data to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 797\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, char *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a char buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 855\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, unsigned char *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned char buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 878\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, short int *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a short integer buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 901\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, unsigned short int *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned short integer buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 924\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, int *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an integer buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 947\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, unsigned int *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned integer buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 970\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, long int *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a long buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 993\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, unsigned long int *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to an unsigned long buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1016\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, float *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a float buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1039\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, double *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a double buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1062\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, long double *data, int count /* 1 */)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a long double buffer that contains the data to compare against.\par \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of elements of data to compare. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1085\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, char data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A char that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1107\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, unsigned char data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An unsigned char that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1120\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, short int data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A short that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1133\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, unsigned short int data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An unsigned short that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1146\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, int data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An integer that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1159\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, unsigned int data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An unsigned integer that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1172\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, long int data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A long that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1185\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, unsigned long int data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : An unsigned long that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1198\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, float data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A float that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1211\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, double data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A double that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1224\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COMemory_MemoryDataIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COMemory; MemoryDataIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COMemory::MemoryDataIs}}{\f8\fs22  } {\f8\fs32 BOOL COMemory::MemoryDataIs(int address, long double data)} {\f8\fs22 \par \par Determine if the data at the specified address is the same as the data given.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the data at the specified address is the same as the data given (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address in memory to compare with.\par \par } {\i\f8\fs22 data} {\f8\fs22 : A long double that contains the data to compare against.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 comem.cpp, 1237\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CORegisters_GetRegister} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CORegisters; GetRegister}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CORegisters::GetRegister}}{\f8\fs22  } {\f8\fs32 int CORegisters::GetRegister(int reg)} {\f8\fs22 \par \par Get the value of one of the registers.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the value of the specified register.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of registers.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coreg.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CORegisters_RegisterValueIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CORegisters; RegisterValueIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CORegisters::RegisterValueIs}}{\f8\fs22  } {\f8\fs32 BOOL CORegisters::RegisterValueIs(int reg, int value)} {\f8\fs22 \par \par Determine whether the given register's value matches the given value.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean that indicates whether the given register's value matches the given value (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of registers.\par \par } {\i\f8\fs22 value} {\f8\fs22 : An integer that contains the expected register value.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coreg.cpp, 46\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CORegisters_SetRegister} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CORegisters; SetRegister}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CORegisters::SetRegister}}{\f8\fs22  } {\f8\fs32 BOOL CORegisters::SetRegister(int reg, LPCSTR value)} {\f8\fs22 \par \par Set the value of the specified register.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of registers.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the value to set the specified register to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 coreg.cpp, 67\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_NavigateStack} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; NavigateStack}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::NavigateStack}}{\f8\fs22  } {\f8\fs32 BOOL COStack::NavigateStack( CString str )} {\f8\fs22 \par \par Navigate to the given call stack frame.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 str} {\f8\fs22 : A CString that contains the name of the call stack frame to navigate to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 41\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_Index} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; Index}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::Index}}{\f8\fs22  } {\f8\fs32 int COStack::Index( CString str )} {\f8\fs22 \par \par Get the index of the given call stack frame in the current call stack.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the index of the given call stack frame.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 str} {\f8\fs22 : A CString that contains the name of the call stack frame.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 52\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_CurrentFunctionIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; CurrentFunctionIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::CurrentFunctionIs}}{\f8\fs22  } {\f8\fs32 BOOL COStack::CurrentFunctionIs(LPCSTR str)} {\f8\fs22 \par \par Determine if the current function matches the given function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current function matches the given function (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 str} {\f8\fs22 : A pointer to a string that contains the name of the expected function.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 66\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_VerifyCurrentFunction} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; VerifyCurrentFunction}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::VerifyCurrentFunction}}{\f8\fs22  } {\f8\fs32 BOOL COStack::VerifyCurrentFunction(LPCSTR str)} {\f8\fs22 \par \par Determine if the current function matches the given function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current function matches the given function (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 str} {\f8\fs22 : A pointer to a string that contains the name of the expected function.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 76\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_GetFunction} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; GetFunction}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::GetFunction}}{\f8\fs22  } {\f8\fs32 CString COStack::GetFunction(int level /* 0 */)} {\f8\fs22 \par \par Get the call stack description string at the given call stack level (index).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the call stack description string from the given call stack level.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 level} {\f8\fs22 : An integer that contains the 0-based index into the call stack. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 86\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_GetAllFunctions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; GetAllFunctions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::GetAllFunctions}}{\f8\fs22  } {\f8\fs32 CString COStack::GetAllFunctions(void)} {\f8\fs22 \par \par Get all the call stack frame descriptions for all frames on the call stack.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains a newline-delimited list of call stack frames.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 135\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_NavigateStack} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; NavigateStack}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::NavigateStack}}{\f8\fs22  } {\f8\fs32 BOOL COStack::NavigateStack(int level /* 0 */)} {\f8\fs22 \par \par Navigate to the given call stack frame.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 level} {\f8\fs22 : An integer that contains the 0-based index into the call stack. This parameter specifies which call stack to navigate to. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 170\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_FunctionIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; FunctionIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::FunctionIs}}{\f8\fs22  } {\f8\fs32 BOOL COStack::FunctionIs(LPCSTR str, int level /* 0 */)} {\f8\fs22 \par \par Determine if the name of the function at the specified call stack level matches the given function name.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the function name at the specified call stack level matches the given function name.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 str} {\f8\fs22 : A pointer to a string that specifies the expected name of the function.\par \par } {\i\f8\fs22 level} {\f8\fs22 : An integer that contains the 0-based index into the call stack. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 193\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COStack_Compare} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COStack; Compare}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COStack::Compare}}{\f8\fs22  } {\f8\fs32 BOOL COStack::Compare( char const * const * stk, FrameList::Filter filter, int top, int bottom )} {\f8\fs22 \par \par Compare a portion of the call stack to a given portion of the call stack.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the specified portion of the call stack matches the given call stack (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 stk} {\f8\fs22 : A pointer to a portion of the call stack. This is commonly a pointer to part of the buffer retrieved by GetAllFunctions(void).\par \par } {\i\f8\fs22 filter} {\f8\fs22 : A value that specifies the type of filtering to do when comparing call stacks: FrameList::NoFilter, FrameList::NoAbsoluteAddresses. (Default value is FrameList::NoFilter.)\par \par } {\i\f8\fs22 top} {\f8\fs22 : An integer that specifies the 0-based index into the call stack to start comparison. (Default value is 0.)\par \par } {\i\f8\fs22 bottom} {\f8\fs22 : An integer that specifies the 0-based index into the call stack to end comparison. -1 means the bottom of the stack. (Default value is -1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 costack.cpp, 217\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COThreads_FreezeThread} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COThreads; FreezeThread}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COThreads::FreezeThread}}{\f8\fs22  } {\f8\fs32 BOOL COThreads::FreezeThread(int thread)} {\f8\fs22 \par \par Suspend the specified thread.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 thread} {\f8\fs22 : An integer that contains the thread ID of the thread to suspend.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cothread.cpp, 28\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COThreads_ThawThread} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COThreads; ThawThread}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COThreads::ThawThread}}{\f8\fs22  } {\f8\fs32 BOOL COThreads::ThawThread(int thread) {\f8\fs22 \par \par Resume the specified thread.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 thread} {\f8\fs22 : An integer that contains the thread ID of the thread to resume.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cothread.cpp, 43\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COThreads_SetCurrentThread} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COThreads; SetCurrentThread}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COThreads::SetCurrentThread}}{\f8\fs22  } {\f8\fs32 BOOL COThreads::SetCurrentThread(int thread)} {\f8\fs22 \par \par Set the specified thread to be the current thread.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 thread} {\f8\fs22 : An integer that contains the thread ID of the thread to activate.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cothread.cpp, 58\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COThreads_GetCurrentThread} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COThreads; GetCurrentThread}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COThreads::GetCurrentThread}}{\f8\fs22  } {\f8\fs32 INT COThreads::GetCurrentThread(void)} {\f8\fs22 \par \par Get the thread ID of the currently active thread.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that specifies the currently active thread.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cothread.cpp, 72\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_COThreads_CurrentThreadIs} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} COThreads; CurrentThreadIs}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} COThreads::CurrentThreadIs}}{\f8\fs22  } {\f8\fs32 BOOL COThreads::CurrentThreadIs(int thread)} {\f8\fs22 \par \par Determine if the current thread ID matches the given thread ID.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the current thread ID matches the given thread ID.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 thread} {\f8\fs22 : An integer that contains the thread ID of the thread.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 cothread.cpp, 86\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::Activate(void)} {\f8\fs22 \par \par Open the Breakpoints dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetLocation} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetLocation}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetLocation}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetLocation(LPCSTR location)} {\f8\fs22 \par \par Set the location for the breakpoint in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 location} {\f8\fs22 : A pointer to a string that specifies the location for the breakpoint. The location string is in the form: {function, source filename, EXE filename} .line.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 54\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetLocationExpression} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetLocationExpression}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetLocationExpression}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetLocationExpression(LPCSTR expression, int expr_type, BOOL fForceType /* TRUE */)} {\f8\fs22 \par \par Set the expression to break on for a location breakpoint in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to break on. The expression string is in the form: {function, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 expr_type} {\f8\fs22 : A value that specifies the type of expression. This parameter is NYI.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 74\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetDataExpression} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetDataExpression}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetDataExpression}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetDataExpression(LPCSTR expression, int expr_type)} {\f8\fs22 \par \par Set the expression to break on for a data breakpoint in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to break on. The expression string is in the form: {function, source filename, EXE filename} expression.\par \par } {\i\f8\fs22 expr_type} {\f8\fs22 : A value that specifies the type of expression. This parameter is NYI.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 94\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetExprLength} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetExprLength}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetExprLength}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetExprLength(LPCSTR length)} {\f8\fs22 \par \par Set the size of the data to watch for an expression in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 length} {\f8\fs22 : A pointer to a string that contains the size of the data to watch.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 116\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetLocationExprLength} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetLocationExprLength}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetLocationExprLength}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetLocationExprLength(LPCSTR length)} {\f8\fs22 \par \par Set the size of the data to watch for an expression in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 length} {\f8\fs22 : A pointer to a string that contains the size of the data to watch.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 133\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetPassCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetPassCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetPassCount}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetPassCount(LPCSTR passcount)} {\f8\fs22 \par \par Set the pass count for a breakpoint in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 passcount} {\f8\fs22 : A pointer to a string that contains the pass count.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 152\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetWndProc} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetWndProc}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetWndProc}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetWndProc(LPCSTR location)} {\f8\fs22 \par \par Set the window procedure for a message breakpoint in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 location} {\f8\fs22 : A pointer to a string that contains the window procedure.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 176\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetMessage} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetMessage}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetMessage}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetMessage(LPCSTR message, int type)} {\f8\fs22 \par \par Set the message to break when received in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 message} {\f8\fs22 : A pointer to a string that contains the name of the message.\par \par } {\i\f8\fs22 type} {\f8\fs22 : A value that specifies the type of message. This parameter is NYI.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 194\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_SetCurrentBreakpoint} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; SetCurrentBreakpoint}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::SetCurrentBreakpoint}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::SetCurrentBreakpoint(int bp /* 0 */)} {\f8\fs22 \par \par Select the breakpoint specified in the list of breakpoints in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bp} {\f8\fs22 : An integer that specifies the 0-based index into the list of breakpoints. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 211\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_Remove} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; Remove}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::Remove}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::Remove(int bp /* 0 */) {\f8\fs22 \par \par Remove the specified breakpoint from the list of breakpoints in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bp} {\f8\fs22 : An integer that specifies the 0-based index into the list of breakpoints for the breakpoint to remove. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 234\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_Enable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; Enable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::Enable}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::Enable(int bp /* 0 */)} {\f8\fs22 \par \par Enable the specified breakpoint in the list of breakpoints in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bp} {\f8\fs22 : An integer that specifies the 0-based index into the list of breakpoints for the breakpoint to remove. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 251\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_Disable} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; Disable}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::Disable}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::Disable(int bp /* 0 */)} {\f8\fs22 \par \par Disable the specified breakpoint in the list of breakpoints in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bp} {\f8\fs22 : An integer that specifies the 0-based index into the list of breakpoints for the breakpoint to remove. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 274\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_ClearAll} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; ClearAll}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::ClearAll}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::ClearAll()} {\f8\fs22 \par \par Remove all breakpoints from the list of breakpoints in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 296\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_BreakpointIsSet} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; BreakpointIsSet}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::BreakpointIsSet}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::BreakpointIsSet(LPCSTR expr, LPCSTR source /* NULL */)} {\f8\fs22 \par \par Determine if the breakpoint specified is set in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the breakpoint is set (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expr} {\f8\fs22 : A pointer to a string that contains all or part of the expected expression for the breakpoint.\par \par } {\i\f8\fs22 source} {\f8\fs22 : A pointer to a string that contains all or part of the expected source filename for the breakpoint. NULL means use expression only. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 324\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_BreakpointIsEnabled} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; BreakpointIsEnabled}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::BreakpointIsEnabled}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpoints::BreakpointIsEnabled(LPCSTR expr, LPCSTR source /* NULL */)} {\f8\fs22 \par \par Determine if the specified breakpoint is enabled in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the breakpoint is enabled (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expr} {\f8\fs22 : A pointer to a string that contains all or part of the expected expression for the breakpoint.\par \par } {\i\f8\fs22 source} {\f8\fs22 : A pointer to a string that contains all or part of the expected source filename for the breakpoint. NULL means use expression only. (Default value is NULL.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 350\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_GetCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; GetCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::GetCount}}{\f8\fs22  } {\f8\fs32 int UIBreakpoints::GetCount(void)} {\f8\fs22 \par \par Get the number of breakpoints set in the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that specifies the number of breakpoints set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 378\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_GetBreakpointStr} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; GetBreakpointStr}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::GetBreakpointStr}}{\f8\fs22  } {\f8\fs32 CString UIBreakpoints::GetBreakpointStr(int bp /* 0 */)} {\f8\fs22 \par \par Get a string that describes the specified breakpoint from the Breakpoints dialog. The Breakpoints dialog must be active when this function is called.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains a string describing the specified breakpoint.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bp} {\f8\fs22 : An integer that specifies the 0-based index into the list of breakpoints. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 391\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpoints_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpoints; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpoints::Close}}{\f8\fs22  } {\f8\fs32 HWND UIBreakpoints::Close(void)} {\f8\fs22 \par \par Close the Breakpoints dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if successful; the HWND of any remaining dialog or message box otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 409\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpointCondition_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpointCondition; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpointCondition::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpointCondition::Activate(void)} {\f8\fs22 \par \par Open the Breakpoint Condition dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 435\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpointCondition_SetExpression} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpointCondition; SetExpression}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpointCondition::SetExpression}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpointCondition::SetExpression(LPCSTR expression, int expr_type)} {\f8\fs22 \par \par Set the expression in the Breakpoint Condition dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expression} {\f8\fs22 : A pointer to a string that contains the expression to set.\par \par } {\i\f8\fs22 expr_type} {\f8\fs22 : A value that indicates the type of expression. This parameter is NYI.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 449\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpointCondition_SetPassCount} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpointCondition; SetPassCount}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpointCondition::SetPassCount}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpointCondition::SetPassCount(LPCSTR passcount)} {\f8\fs22 \par \par Set the pass count in the Breakpoint Condition dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 passcount} {\f8\fs22 : A pointer to a string that contains the pass count.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 463\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBreakpointCondition_SetLength} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBreakpointCondition; SetLength}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBreakpointCondition::SetLength}}{\f8\fs22  } {\f8\fs32 BOOL UIBreakpointCondition::SetLength(LPCSTR passcount)} {\f8\fs22 \par \par Set the Number of elements in the Breakpoint Condition dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 length} {\f8\fs22 : - A pointer to a string that contains the length.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibp.cpp, 478\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__FillStringArrayFromClipBrd} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} FillStringArrayFromClipBrd}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} FillStringArrayFromClipBrd}}{\f8\fs22  } {\f8\fs32 BOOL FillStringArrayFromClipBrd( CStringArray& lines )} {\f8\fs22 \par \par Fill the given CStringArray with lines from the clipboard.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 lines} {\f8\fs22 : A reference to a CStringArray that will contain the lines of text from the clipboard.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 50\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::IsValid(void) const} {\f8\fs22 \par \par Determine if the browser window is valid by verifying the push pin control exists.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the browser window is valid. TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 99\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::Find}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::Find(void)} {\f8\fs22 \par \par Find the browser window and attach to it.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 122\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::IsActive(void)} {\f8\fs22 \par \par Determine if the browser window is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the browser is active. TRUE if it's active; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 137\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_Query} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; Query}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::Query}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::Query(QueryType query, LPCSTR name /*NULL*/, int filters /*NONE*/)} {\f8\fs22 \par \par Perform a query via the Browse dialog that results in the browser window being active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 query} {\f8\fs22 : A QueryType value that indicates the type of query to perform: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\i\f8\fs22 name} {\f8\fs22 : A pointer to a string that contains the name of the symbol to query on. (Default value is NULL.)\par \par } {\i\f8\fs22 filter} {\f8\fs22 : A bit field that specifies the type of filter to apply to the query: NONE, CLASSES, FUNCTIONS, DATA, MACROS, TYPES. (Default value is NONE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 151\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SetFilters} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SetFilters}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SetFilters}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SetFilters(QueryType type, int filters)} {\f8\fs22 \par \par Set the filters for the given query\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that indicates the type of query to set the filters for: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\i\f8\fs22 filters} {\f8\fs22 : A bit field that specifies the type of filter to set: NONE, CLASSES, FUNCTIONS, DATA, MACROS, TYPES. (Default value is NONE.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 301\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GetFilters} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GetFilters}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GetFilters}}{\f8\fs22  } {\f8\fs32 int UIBrowse::GetFilters(QueryType type)} {\f8\fs22 \par \par Get the filters for the current query (of the type given).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A bit field that specifies the type of filter: NONE, CLASSES, FUNCTIONS, DATA, MACROS, TYPES.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that indicates the type of query: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 366\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_PopContext} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; PopContext}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::PopContext}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::PopContext(void)} {\f8\fs22 \par \par Perform the Pop Context browser operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 401\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_FirstDefinition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; FirstDefinition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::FirstDefinition}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::FirstDefinition(void)} {\f8\fs22 \par \par Perform the Go To Definition browser operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 413\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_NextDefinition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; NextDefinition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::NextDefinition}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::NextDefinition(void)} {\f8\fs22 \par \par Perform the Go To Next Definition browser operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 424\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_PrevDefinition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; PrevDefinition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::PrevDefinition}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::PrevDefinition(void)} {\f8\fs22 \par \par Perform the Go To Previous Definition browser operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 435\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_FirstReference} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; FirstReference}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::FirstReference}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::FirstReference(void)} {\f8\fs22 \par \par Perform the Go To Reference browser operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 446\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_NextReference} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; NextReference}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::NextReference}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::NextReference(void)} {\f8\fs22 \par \par Perform the Go To Next Reference browser operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 457\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_PrevReference} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; PrevReference}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::PrevReference}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::PrevReference(void)} {\f8\fs22 \par \par Perform the Go To Previous Reference browser operation.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 468\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GotoPane} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GotoPane}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GotoPane}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GotoPane(PaneType pane, QueryType type)} {\f8\fs22 \par \par Set focus to the specified pane in the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pane} {\f8\fs22 : A PaneType value that specifies which pane to set focus to: SYMBOL_PANE, MEMBER_PANE, DEFREF_PANE.\par \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that indicates the type of query: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 481\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GotoDefinitionsHeading} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GotoDefinitionsHeading}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GotoDefinitionsHeading}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GotoDefinitionsHeading(void)} {\f8\fs22 \par \par Go to the definitions heading in definitions/references pane in the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 507\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GotoReferencesHeading} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GotoReferencesHeading}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GotoReferencesHeading}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GotoReferencesHeading(void)} {\f8\fs22 \par \par Go to the references heading in the definitions/references pane in the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 522\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_ExpandCurrentItem} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; ExpandCurrentItem}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::ExpandCurrentItem}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::ExpandCurrentItem(void)} {\f8\fs22 \par \par Expand the selected item in the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 537\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GetCurrentItem} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GetCurrentItem}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GetCurrentItem}}{\f8\fs22  } {\f8\fs32 CString UIBrowse::GetCurrentItem(void)} {\f8\fs22 \par \par Get a string that describes the currently selected item in the browser window. This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the description of the currently selected item.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 548\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_Navigate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; Navigate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::Navigate}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::Navigate(void)} {\f8\fs22 \par \par Navigate from the currently selected item in the browser window to its location in the source code.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 559\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectNthItem} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectNthItem}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectNthItem}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectNthItem(QueryType type, int item)} {\f8\fs22 \par \par Select the n-th item in the current pane in the browser window. Expandable nodes will be expanded by this function.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 type} {\f8\fs22 : A QueryType value that indicates the type of query: DefRef, FileOutline, BaseClass, DerivedClass, CallGraph, CallerGraph.\par \par } {\i\f8\fs22 item} {\f8\fs22 : An integer that contains the 0-based index of the item to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 572\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_CrackFileLine} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; CrackFileLine}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::CrackFileLine}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::CrackFileLine(LPCSTR file_line,CHAR *file,int *line)} {\f8\fs22 \par \par Parse the notation returned from GetNthDefinition/Reference (i.e. f:\cafe\cafe\wb\cobrowse.h(33)).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 file_line} {\f8\fs22 : A pointer to a string that contains the file+line string to crack.\par \par } {\i\f8\fs22 file} {\f8\fs22 : A pointer to a character buffer that will contain the file part of the file_line string.\par \par } {\i\f8\fs22 line} {\f8\fs22 : A pointer to an integer buffer that will contain the line part of the file_line string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 596\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_ButtonDown} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; ButtonDown}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::ButtonDown}}{\f8\fs22  } {\f8\fs32 void UIBrowse::ButtonDown(const char *button)} {\f8\fs22 \par \par Set the specified button to its down state.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 button} {\f8\fs22 : A pointer to a string that contains the name of the button.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 625\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_ButtonUp} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; ButtonUp}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::ButtonUp}}{\f8\fs22  } {\f8\fs32 void UIBrowse::ButtonUp(const char *button)} {\f8\fs22 \par \par Set the specified button to its up state.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 none\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 button} {\f8\fs22 : A pointer to a string that contains the name of the button.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 636\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_IsButtonDown} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; IsButtonDown}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::IsButtonDown}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::IsButtonDown(const char *button)} {\f8\fs22 \par \par Determine if the specified button is in its down state.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the button is in its down state (TRUE) or not.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 button} {\f8\fs22 : A pointer to a string that contains the name of the button.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 647\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_CloseBrowser} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; CloseBrowser}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::CloseBrowser}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::CloseBrowser(void)} {\f8\fs22 \par \par Close the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 659\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GetMatches} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GetMatches}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GetMatches}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GetMatches( CStringArray& matches )} {\f8\fs22 \par \par Get the list of symbols that match the symbol name specified in the last query from the symbols pane (the left pane) in the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 matches} {\f8\fs22 : A CStringArray reference that will contain the list of symbols.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 679\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectMatch} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectMatch}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectMatch}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectMatch( CString name )} {\f8\fs22 \par \par Select the specified match by name in the symbols pane (the left pane) in the browser window. (See SelectMatch(int) to select a symbol by index.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 name} {\f8\fs22 : A CString that contains the name of the match to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 709\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectMatch} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectMatch}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectMatch}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectMatch( int index )} {\f8\fs22 \par \par Select the specified match by index in the symbols pane (the left pane) in the browser window. (See SelectMatch(CString) to select a symbol by name.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index into the list of symbols.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 735\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__FindMatch} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} FindMatch}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} FindMatch}}{\f8\fs22  } {\f8\fs32 int FindMatch(CStringArray& matches, CString name)} {\f8\fs22 \par \par returns the index of the specified match in the list of matches in the symbol pane of the browser wnd.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 the zero-based index of the match if successful, -1 if not successful.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 name} {\f8\fs22 : A CString that contains the name of the match to search for.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 747\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GetMembers} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GetMembers}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GetMembers}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GetMembers( CStringArray& members )} {\f8\fs22 \par \par Get the list of members for the last query performed in the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 members} {\f8\fs22 : A CStringArray reference that will contain the list of members.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 774\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectMember} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectMember}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectMember}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectMember( CString member )} {\f8\fs22 \par \par Select the specified member by name in the member pane (the upper right pane) in the browser window. (See SelectMember(int) to select a member by index.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 member} {\f8\fs22 : A CString that contains the name of the member to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 803\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectMember} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectMember}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectMember}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectMember( int index )} {\f8\fs22 \par \par Select the specified member by index in the member pane (the upper right pane) in the browser window. (See SelectMember(CString) to select a member by name.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index of the member to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 815\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GetLocations} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GetLocations}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GetLocations}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GetLocations( CStringArray& locations )} {\f8\fs22 \par \par Get the list of definitions and references for the selected symbol in last query performed in the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 locations} {\f8\fs22 : A CStringArray reference that will contain the list of defs/refs.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 827\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GetFirstLevelBranches} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GetFirstLevelBranches}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GetFirstLevelBranches}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GetFirstLevelBranches( CStringArray& branches )} {\f8\fs22 \par \par Get the list of first level branches for the last query performed in the browser window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 branches} {\f8\fs22 : A CStringArray reference that will contain the list of first level branches.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 858\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectDefinition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectDefinition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectDefinition}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectDefinition( CString definition )} {\f8\fs22 \par \par Select the specified definition by name in the definitions/references pane (the lower right pane) in the browser window. (See SelectDefinition(int) to select a definition by index.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 definition} {\f8\fs22 : A CString that contains the name of the definition to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 909\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectDefinition} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectDefinition}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectDefinition}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectDefinition( int index )} {\f8\fs22 \par \par Select the specified definition by index in the definitions/references pane (the lower right pane) in the browser window. (See SelectDefinition(CString) to select a definition by name.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index of the definition to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 921\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectReference} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectReference}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectReference}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectReference( CString reference )} {\f8\fs22 \par \par Select the specified reference by name in the definitions/references pane (the lower right pane) in the browser window. (See SelectReference(int) to select a reference by index.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reference} {\f8\fs22 : A CString that contains the name of the reference to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 933\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectReference} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectReference}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectReference}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectReference( int index )} {\f8\fs22 \par \par Select the specified reference by index in the definitions/references pane (the lower right pane) in the browser window. (See SelectReference(CString) to select a reference by name.) This function is NYI.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index of the reference to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 945\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GetAmbiguities} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GetAmbiguities}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GetAmbiguities}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GetAmbiguities( CStringArray& ambiguities )} {\f8\fs22 \par \par Get the list of ambiguities from the Resolve Ambiguities dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ambiguities} {\f8\fs22 : A reference to a CStringArray that will contain the list of ambiguities.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 960\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_GetCurrentAmbiguity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; GetCurrentAmbiguity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::GetCurrentAmbiguity}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::GetCurrentAmbiguity( CString& symbol )} {\f8\fs22 \par \par Get the currently selected ambiguity from the Resolve Ambiguities dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A reference to a CString that will contain the name of the currently selected ambiguity.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 977\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectAmbiguity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectAmbiguity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectAmbiguity}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectAmbiguity( CString symbol )} {\f8\fs22 \par \par Select the specified ambiguity by name in the Resolve Ambiguities dialog. (See SelectAmbiguity(int) to select an ambiguity by index.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A CString that contains the name of the ambiguity to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 994\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_SelectAmbiguity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; SelectAmbiguity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::SelectAmbiguity}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::SelectAmbiguity( int index )} {\f8\fs22 \par \par Select the specified ambiguity by index in the Resolve Ambiguities dialog. (See SelectAmbiguity(CString) to select an ambiguity by name.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index of the ambiguity to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 1022\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIBrowse_CancelAmbiguity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIBrowse; CancelAmbiguity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIBrowse::CancelAmbiguity}}{\f8\fs22  } {\f8\fs32 BOOL UIBrowse::CancelAmbiguity()} {\f8\fs22 \par \par Cancel the query by cancelling the Resolve Ambiguities dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 1048\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAmbiguiousSymbolDialog_GetAmbiguities} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAmbiguiousSymbolDialog; GetAmbiguities}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAmbiguiousSymbolDialog::GetAmbiguities}}{\f8\fs22  } {\f8\fs32 BOOL UIAmbiguiousSymbolDialog::GetAmbiguities( CStringArray& ambiguities )} {\f8\fs22 \par \par Get the list of ambiguities from the Resolve Ambiguities dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 ambiguities} {\f8\fs22 : A reference to a CStringArray that will contain the list of ambiguities.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 1071\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAmbiguiousSymbolDialog_GetCurrentAmbiguity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAmbiguiousSymbolDialog; GetCurrentAmbiguity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAmbiguiousSymbolDialog::GetCurrentAmbiguity}}{\f8\fs22  } {\f8\fs32 BOOL UIAmbiguiousSymbolDialog::GetCurrentAmbiguity( CString& symbol )} {\f8\fs22 \par \par Get the currently selected ambiguity from the Resolve Ambiguities dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A reference to a CString that will contain the name of the currently selected ambiguity.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 1105\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAmbiguiousSymbolDialog_SelectAmbiguity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAmbiguiousSymbolDialog; SelectAmbiguity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAmbiguiousSymbolDialog::SelectAmbiguity}}{\f8\fs22  } {\f8\fs32 BOOL UIAmbiguiousSymbolDialog::SelectAmbiguity( CString symbol )} {\f8\fs22 \par \par Select the specified ambiguity by name in the Resolve Ambiguities dialog. (See SelectAmbiguity(int) to select an ambiguity by index.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A CString that contains the name of the ambiguity to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 1118\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAmbiguiousSymbolDialog_SelectAmbiguity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAmbiguiousSymbolDialog; SelectAmbiguity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAmbiguiousSymbolDialog::SelectAmbiguity}}{\f8\fs22  } {\f8\fs32 BOOL UIAmbiguiousSymbolDialog::SelectAmbiguity( int index )} {\f8\fs22 \par \par Select the specified ambiguity by index in the Resolve Ambiguities dialog. (See SelectAmbiguity(CString) to select an ambiguity by name.)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 index} {\f8\fs22 : An integer that contains the 1-based index of the ambiguity to select.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 1131\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIAmbiguiousSymbolDialog_Cancel} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIAmbiguiousSymbolDialog; Cancel}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIAmbiguiousSymbolDialog::Cancel}}{\f8\fs22  } {\f8\fs32 HWND UIAmbiguiousSymbolDialog::Cancel(void)} {\f8\fs22 \par \par Close the Resolve Ambiguities dialog by clicking the Cancel button.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 NULL if successful; the HWND of any remaining messsage or dialog box otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 1144\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id__ToggleCaseSensitivity} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} ToggleCaseSensitivity}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} ToggleCaseSensitivity}}{\f8\fs22  } {\f8\fs32 BOOL ToggleCaseSensitivity(TOGGLE_TYPE t)} {\f8\fs22 \par \par Toggle the case-sensitivity of browser queries.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 t} {\f8\fs22 : an enum type with value TOGGLE_OFF or TOGGLE_ON.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uibrowse.cpp, 1162\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICoProcessor_GetCPRegister} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICoProcessor; GetCPRegister}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICoProcessor::GetCPRegister}}{\f8\fs22  } {\f8\fs32 CString UICoProcessor::GetCPRegister(int reg)} {\f8\fs22 \par \par Get the value of one of the coprocessor's registers.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the value of the specified coprocessor's register.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of coprocessor registers.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uicp.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICoProcessor_SetCPRegister} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICoProcessor; SetCPRegister}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICoProcessor::SetCPRegister}}{\f8\fs22  } {\f8\fs32 BOOL UICoProcessor::SetCPRegister(int reg, LPCSTR value)} {\f8\fs22 \par \par Set the value of one of the coprocessor's registers.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of coprocessor registers.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the value to set the specified register to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uicp.cpp, 51\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICoProcessor_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICoProcessor; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICoProcessor::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UICoProcessor::IsValid(void) const} {\f8\fs22 \par \par Determine if the register's window is valid by checking that the HWND is valid and is a toolbar HWND.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the register's window is valid. TRUE if it's valid; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uicp.cpp, 68\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICoProcessor_AttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICoProcessor; AttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICoProcessor::AttachActive}}{\f8\fs22  } {\f8\fs32 BOOL UICoProcessor::AttachActive(void)} {\f8\fs22 \par \par Attach to the registers window if it's the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uicp.cpp, 93\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICoProcessor_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICoProcessor; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICoProcessor::Find}}{\f8\fs22  } {\f8\fs32 BOOL UICoProcessor::Find(void)} {\f8\fs22 \par \par Find the registers window and attach to it\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uicp.cpp, 124\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UICoProcessor_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UICoProcessor; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UICoProcessor::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UICoProcessor::IsActive(void)} {\f8\fs22 \par \par Determine if the registers window is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the register's window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uicp.cpp, 140\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDAM_GotoSymbol} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDAM; GotoSymbol}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDAM::GotoSymbol}}{\f8\fs22  } {\f8\fs32 BOOL UIDAM::GotoSymbol(LPCSTR symbol)} {\f8\fs22 \par \par Go to the specified symbol in the disassembly window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the name of the symbol to go to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidam.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDAM_GotoAddress} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDAM; GotoAddress}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDAM::GotoAddress}}{\f8\fs22  } {\f8\fs32 BOOL UIDAM::GotoAddress(int address)} {\f8\fs22 \par \par Go to the specified address in the disassembly window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 address} {\f8\fs22 : An integer that contains the address to go to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidam.cpp, 46\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDAM_GetInstruction} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDAM; GetInstruction}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDAM::GetInstruction}}{\f8\fs22  } {\f8\fs32 CString UIDAM::GetInstruction(int offset /* 0 */, int range /* 1 */)} {\f8\fs22 \par \par Get the instruction(s) at the current location in the diassembly window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the instructions in the range specified.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 offset} {\f8\fs22 : An integer that contains the offset (in lines) from the current cursor position to start retrieving instructions from. This value is negative to move up in the window (down in memory). (Default value is 0.)\par \par } {\i\f8\fs22 range} {\f8\fs22 : An integer that contains the number of instructions to retrieve (also in lines). (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidam.cpp, 62\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDAM_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDAM; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDAM::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIDAM::IsValid(void) const} {\f8\fs22 \par \par Determine if the disassembly window is a valid window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean that indicates whether the diassembly window is valid (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidam.cpp, 90\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDAM_AttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDAM; AttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDAM::AttachActive}}{\f8\fs22  } {\f8\fs32 BOOL UIDAM::AttachActive(void)} {\f8\fs22 \par \par Attach to the disassembly window if it's the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidam.cpp, 100\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDAM_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDAM; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDAM::Find}}{\f8\fs22  } {\f8\fs32 BOOL UIDAM::Find(void)} {\f8\fs22 \par \par Find the disassembly window and attach to it\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidam.cpp, 116\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDAM_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDAM; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDAM::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIDAM::IsActive(void)} {\f8\fs22 \par \par Determine if the disassembly window is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the disassembly window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidam.cpp, 141\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDAM_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDAM; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDAM::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIDAM::Activate(void)} {\f8\fs22 \par \par Bring up the disassembly window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the disassembly window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidam.cpp, 152\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIDebug_ShowDockWindow} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIDebug; ShowDockWindow}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIDebug::ShowDockWindow}}{\f8\fs22  } {\f8\fs32 BOOL UIDebug::ShowDockWindow(UINT id, BOOL bShow /*=TRUE*/)} {\f8\fs22 \par \par Open the docking window with the given id.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 The HWND of the opened window. NULL if the function fails.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 id} {\f8\fs22 : The id of the docking window to open (IDW_OUTPUT_WIN, IDW_WATCH_WIN, IDW_LOCALS_WIN, IDW_CPU_WIN, IDW_MEMORY_WIN, IDW_CALLS_WIN, IDW_DISASSY_WIN).\par \par } {\i\f8\fs22 bShow} {\f8\fs22 : TRUE to show the window; FALSE to hide it (default is TRUE).\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uidebug.cpp, 35\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEEWindow_GetState} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEEWindow; GetState}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEEWindow::GetState}}{\f8\fs22  } {\f8\fs32 int UIEEWindow::GetState(int row /* ROW_CURRENT */)} {\f8\fs22 \par \par Get the state of the expression at the specified row in the expression evaluator window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A bit field that specifies the state of the expression: NOT_EXPANDABLE, EXPANDED, COLLAPSED.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the EE window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uieewnd.cpp, 26\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEEWindow_GetType} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEEWindow; GetType}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEEWindow::GetType}}{\f8\fs22  } {\f8\fs32 CString UIEEWindow::GetType(int row /* ROW_CURRENT */)} {\f8\fs22 \par \par Get the type of the expression at the specified row in the expression evaluator window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains a description of the type of the expression.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the EE window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uieewnd.cpp, 40\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEEWindow_GetName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEEWindow; GetName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEEWindow::GetName}}{\f8\fs22  } {\f8\fs32 CString UIEEWindow::GetName(int row /* ROW_CURRENT */)} {\f8\fs22 \par \par Get the name of the expression at the specified row in the expression evaluator window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the name of the expression.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the EE window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uieewnd.cpp, 54\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEEWindow_GetValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEEWindow; GetValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEEWindow::GetValue}}{\f8\fs22  } {\f8\fs32 CString UIEEWindow::GetValue(int row /* ROW_CURRENT */)} {\f8\fs22 \par \par Get the value of the expression at the specified row in the expression evaluator window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the value of the expression.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the EE window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uieewnd.cpp, 68\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEEWindow_SelectRows} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEEWindow; SelectRows}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEEWindow::SelectRows}}{\f8\fs22  } {\f8\fs32 int UIEEWindow::SelectRows(int start_row /* ROW_CURRENT */, int total_rows /*= 1*/)} {\f8\fs22 \par \par Select the specified rows in the EE window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 start_row} {\f8\fs22 : An integer that specifies the 1-based row of the EE window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\i\f8\fs22 total_rows} {\f8\fs22 : An integer that specifies the number of rows to select. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uieewnd.cpp, 83\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEEWindow_Expand} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEEWindow; Expand}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEEWindow::Expand}}{\f8\fs22  } {\f8\fs32 int UIEEWindow::Expand(int row /* ROW_CURRENT */)} {\f8\fs22 \par \par Expand the specified row in the EE window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the EE window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uieewnd.cpp, 138\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEEWindow_Collapse} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEEWindow; Collapse}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEEWindow::Collapse}}{\f8\fs22  } {\f8\fs32 int UIEEWindow::Collapse(int row /* ROW_CURRENT */)} {\f8\fs22 \par \par Collapse the specified row in the EE window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the EE window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uieewnd.cpp, 152\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIEEWindow_GetAllFields} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIEEWindow; GetAllFields}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIEEWindow::GetAllFields}}{\f8\fs22  } {\f8\fs32 int UIEEWindow::GetAllFields(EXPR_INFO* expr_info, int start_row /*= ROW_CURRENT*/, int total_rows /*= 1*/)} {\f8\fs22 \par \par Get information about the expression(s) in the given range of expressions in the expression evaluator window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 expr_info} {\f8\fs22 : A pointer to an EXPR_INFO object that will contain the information about the expression(s).\par \par } {\i\f8\fs22 start_row} {\f8\fs22 : An integer that specifies the 1-based row of the EE window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\i\f8\fs22 total_rows} {\f8\fs22 : An integer that specifies the number of rows to retrieve. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uieewnd.cpp, 168\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::Activate(void)} {\f8\fs22 \par \par Open the Exceptions dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 30\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_ExcptToString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; ExcptToString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::ExcptToString}}{\f8\fs22  } {\f8\fs32 CString UIExceptions::ExcptToString(int excpt)} {\f8\fs22 \par \par Convert an exception ID value to a string. For example, the exception value 0xc0000005 is converted to the string c0000005.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the exception value converted to a string.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 excpt} {\f8\fs22 : An integer that contains the exception value.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 45\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_SetNumber} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; SetNumber}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::SetNumber}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::SetNumber(int code)} {\f8\fs22 \par \par Set the exception number in the Exceptions dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 code} {\f8\fs22 : An integer that contains the exception ID to set.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 58\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_SetName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; SetName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::SetName}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::SetName(LPCSTR name)} {\f8\fs22 \par \par Set the exception name in the Exceptions dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 name} {\f8\fs22 : A pointer to a string that contains the name of the exception.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 71\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_SetOption} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; SetOption}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::SetOption}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::SetOption(int option)} {\f8\fs22 \par \par Set the exception action in the Exceptions dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies the action to take when the exception is detected: STOP_ALWAYS, IF_NOT_HANDLED.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 84\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_AddException} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; AddException}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::AddException}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::AddException(void)} {\f8\fs22 \par \par Click the Add button in the Exceptions dialog to add a new exception.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 102\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_ChangeException} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; ChangeException}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::ChangeException}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::ChangeException(void)} {\f8\fs22 \par \par Click the Change button in the Exceptions dialog to change the exception information.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 120\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_RestoreDefualts} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; RestoreDefualts}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::RestoreDefualts}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::RestoreDefualts(void)} {\f8\fs22 \par \par Click the Reset button in the Exceptions dialog to restore the default exceptions.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 139\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_SetException} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; SetException}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::SetException}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::SetException(int code, int option)} {\f8\fs22 \par \par Add or change an exception in the Exceptions dialog. The exception is added, if it doesn't exist; changed if it does exist.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 code} {\f8\fs22 : An integer that specifies the exception ID to add or change.\par \par } {\i\f8\fs22 option} {\f8\fs22 : A value that specifies the action to take when the exception is detected: STOP_ALWAYS, IF_NOT_HANDLED.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 154\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_DeleteException} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; DeleteException}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::DeleteException}}{\f8\fs22  } {\f8\fs32 BOOL UIExceptions::DeleteException(int code)} {\f8\fs22 \par \par Delete an exception from the Exceptions dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 code} {\f8\fs22 : An integer that specifies the exception ID to delete.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 169\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIExceptions_GetException} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIExceptions; GetException}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIExceptions::GetException}}{\f8\fs22  } {\f8\fs32 CString UIExceptions::GetException(int code)} {\f8\fs22 \par \par Get the description for the specified exception from the Exceptions dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the description of the specified exception.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 code} {\f8\fs22 : An integer that specifies the exception ID.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiexcpt.cpp, 193\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UILocals_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UILocals; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UILocals::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UILocals::Activate(void)} {\f8\fs22 \par \par Bring up the locals window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the register's window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uilocals.cpp, 27\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_AttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; AttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::AttachActive}}{\f8\fs22  } {\f8\fs32 BOOL UIMemory::AttachActive(void)} {\f8\fs22 \par \par Attach to the locals window if it's the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 35\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::Find}}{\f8\fs22  } {\f8\fs32 BOOL UIMemory::Find(void)} {\f8\fs22 \par \par Find the locals window and attach to it\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 51\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIMemory::IsValid(void) const} {\f8\fs22 \par \par Determine if the locals window is a valid window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean that indicates whether the locals window is valid (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 77\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIMemory::IsActive(void)} {\f8\fs22 \par \par Determine if the locals window is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the locals window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 88\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_GetCurrentAddress} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; GetCurrentAddress}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::GetCurrentAddress}}{\f8\fs22  } {\f8\fs32 CString UIMemory::GetCurrentAddress(void)} {\f8\fs22 \par \par Get the starting address of the current caret line in the memory window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the address.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 100\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_GetCurrentData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; GetCurrentData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::GetCurrentData}}{\f8\fs22  } {\f8\fs32 CString UIMemory::GetCurrentData(int count /* 1 */, int start /* 0 */)} {\f8\fs22 \par \par Get data from the current caret line in the memory window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the data.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of data elements to include when getting the data. (Default value is 1.)\par \par } {\i\f8\fs22 start} {\f8\fs22 : An integer that contains the number of data elements to skip from the beginning of the line. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 117\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_GetCurrentChars} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; GetCurrentChars}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::GetCurrentChars}}{\f8\fs22  } {\f8\fs32 CString UIMemory::GetCurrentChars(int count /* 1 */, int start /* 0 */)} {\f8\fs22 \par \par Get character data from the current caret line in the memory window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the characters.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 count} {\f8\fs22 : An integer that contains the number of characters to include when getting the data. (Default value is 1.)\par \par } {\i\f8\fs22 start} {\f8\fs22 : An integer that contains the number of Characters to skip from the beginning of the line. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 149\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_SetCurrentData} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; SetCurrentData}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::SetCurrentData}}{\f8\fs22  } {\f8\fs32 BOOL UIMemory::SetCurrentData(LPCSTR data, int start /* 0 */)} {\f8\fs22 \par \par Set data in the current caret line in the memory window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 data} {\f8\fs22 : A pointer to a string that contains the data to enter into the memory window.\par \par } {\i\f8\fs22 start} {\f8\fs22 : An integer that contains the number of data elements to skip from the beginning of the line before entering the data. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 176\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_SetCurrentChars} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; SetCurrentChars}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::SetCurrentChars}}{\f8\fs22  } {\f8\fs32 BOOL UIMemory::SetCurrentChars(LPCSTR chars, int start /* 0 */)} {\f8\fs22 \par \par Set character data in the current caret line in the memory window. (See also SetCurrentChars(char, int).)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 chars} {\f8\fs22 : A pointer to a string that contains the characters to enter into the memory window.\par \par } {\i\f8\fs22 start} {\f8\fs22 : An integer that contains the number of characters to skip from the beginning of the line before entering the data. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 197\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_SetCurrentChars} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; SetCurrentChars}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::SetCurrentChars}}{\f8\fs22  } {\f8\fs32 BOOL UIMemory::SetCurrentChars(char chr, int start /* 0 */)} {\f8\fs22 \par \par Set character data in the current caret line in the memory window. (See also SetCurrentChars(LPCSTR, int).)\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 chr} {\f8\fs22 : A char that contains the character to enter into the memory window.\par \par } {\i\f8\fs22 start} {\f8\fs22 : An integer that contains the number of characters to skip from the beginning of the line before entering the data. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 218\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_GetFormatWidth} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; GetFormatWidth}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::GetFormatWidth}}{\f8\fs22  } {\f8\fs32 int UIMemory::GetFormatWidth(int format /* 0 */)} {\f8\fs22 \par \par Get the width of a single data element in the specified memory window format.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the width of a single data element in the specified memory window format.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 format} {\f8\fs22 : A value that specifies the memory window format to get the width for: MEM_FORMAT_ASCII, MEM_FORMAT_WCHAR, MEM_FORMAT_BYTE, MEM_FORMAT_SHORT, MEM_FORMAT_SHORT_HEX, MEM_FORMAT_SHORT_UNSIGNED, MEM_FORMAT_LONG, MEM_FORMAT_LONG_HEX, MEM_FORMAT_LONG_UNSIGNED, MEM_FORMAT_REAL, MEM_FORMAT_REAL_LONG. 0 means get the width for the current format. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 239\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIMemory::Activate(void)} {\f8\fs22 \par \par Bring up the memory window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the memory window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 253\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIMemory_GoToAddress} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIMemory; GoToAddress}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIMemory::GoToAddress}}{\f8\fs22  } {\f8\fs32 int UIMemory::GoToAddress(LPCSTR symbol)} {\f8\fs22 \par \par Go to the specified address or symbol in the memory window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 symbol} {\f8\fs22 : A pointer to a string that contains the address or symbol to go to in the memory window.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uimem.cpp, 266\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIQuickWatch_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIQuickWatch; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIQuickWatch::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIQuickWatch::Activate(void)} {\f8\fs22 \par \par Open the QuickWatch dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiqw.cpp, 33\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIQuickWatch_GetCurrentValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIQuickWatch; GetCurrentValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIQuickWatch::GetCurrentValue}}{\f8\fs22  } {\f8\fs32 CString UIQuickWatch::GetCurrentValue(void) } {\f8\fs22 \par \par Returns the value of the current expression in the QuickWatch dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the current value.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiqw.cpp, 47\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIQuickWatch_GetExpression} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIQuickWatch; GetExpression}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIQuickWatch::GetExpression}}{\f8\fs22  } {\f8\fs32 CString UIQuickWatch::GetExpression(void) } {\f8\fs22 \par \par Returns the current expression\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the current expression.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiqw.cpp, 60\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIQuickWatch_SetExpression} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIQuickWatch; SetExpression}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIQuickWatch::SetExpression}}{\f8\fs22  } {\f8\fs32 BOOL UIQuickWatch::SetExpression(LPCSTR exp)} {\f8\fs22 \par \par Sets a new expression for the Quickwatch dialog. NOTE: does not do a "recalc."\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 exp} {\f8\fs22 : A pointer to a string that contains the expression to enter in the QuickWatch dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiqw.cpp, 75\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIQuickWatch_SetNewValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIQuickWatch; SetNewValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIQuickWatch::SetNewValue}}{\f8\fs22  } {\f8\fs32 BOOL UIQuickWatch::SetNewValue(LPCSTR value) } {\f8\fs22 \par \par Modifies the value for the current expression.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the new value to enter in the QuickWatch dialog.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiqw.cpp, 92\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIQuickWatch_Recalc} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIQuickWatch; Recalc}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIQuickWatch::Recalc}}{\f8\fs22  } {\f8\fs32 BOOL UIQuickWatch::Recalc(void)} {\f8\fs22 \par \par Recalcs the expression in the expression field.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiqw.cpp, 111\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIQuickWatch_AddWatch} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIQuickWatch; AddWatch}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIQuickWatch::AddWatch}}{\f8\fs22  } {\f8\fs32 BOOL UIQuickWatch::AddWatch(void)} {\f8\fs22 \par \par Adds the current expression in the Quick Watch Dialog to the Watch window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiqw.cpp, 124\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIQuickWatch_Close} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIQuickWatch; Close}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIQuickWatch::Close}}{\f8\fs22  } {\f8\fs32 HWND UIQuickWatch::Close(void)} {\f8\fs22 \par \par Close the QuickWatch Dailog\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 HWND: NULL means all went well, otherwise return HWND of active window (alert)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiqw.cpp, 136\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIRegisters_GetRegister} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIRegisters; GetRegister}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIRegisters::GetRegister}}{\f8\fs22  } {\f8\fs32 int UIRegisters::GetRegister(int reg)} {\f8\fs22 \par \par Get the value of one of the registers in the registers window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that contains the value of the specified register.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of registers.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uireg.cpp, 32\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIRegisters_SetRegister} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIRegisters; SetRegister}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIRegisters::SetRegister}}{\f8\fs22  } {\f8\fs32 BOOL UIRegisters::SetRegister(int reg, LPCSTR value)} {\f8\fs22 \par \par Set the value of the specified register in the registers window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 reg} {\f8\fs22 : An integer that specifies the 1-based index into the set of registers.\par \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the value to set the specified register to.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uireg.cpp, 51\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIRegisters_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIRegisters; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIRegisters::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIRegisters::IsValid(void) const} {\f8\fs22 \par \par Determine if the registers window is a valid window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean that indicates whether the registers window is valid (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uireg.cpp, 68\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIRegisters_AttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIRegisters; AttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIRegisters::AttachActive}}{\f8\fs22  } {\f8\fs32 BOOL UIRegisters::AttachActive(void)} {\f8\fs22 \par \par Attach to the registers window if it's the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uireg.cpp, 78\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIRegisters_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIRegisters; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIRegisters::Find}}{\f8\fs22  } {\f8\fs32 BOOL UIRegisters::Find(void)} {\f8\fs22 \par \par Find the registers window and attach to it\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uireg.cpp, 93\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIRegisters_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIRegisters; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIRegisters::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIRegisters::IsActive(void)} {\f8\fs22 \par \par Determine if the registers window is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the registers window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uireg.cpp, 118\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIRegisters_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIRegisters; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIRegisters::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIRegisters::Activate(void)} {\f8\fs22 \par \par Bring up the registers window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the registers window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uireg.cpp, 129\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStack_GetFunction} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStack; GetFunction}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStack::GetFunction}}{\f8\fs22  } {\f8\fs32 CString UIStack::GetFunction(int level /* 0 */)} {\f8\fs22 \par \par Get the call stack description string at the given call stack level (index).\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the call stack description string from the given call stack level.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 level} {\f8\fs22 : An integer that contains the 0-based index into the call stack. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uistack.cpp, 33\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStack_GetAllFunctions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStack; GetAllFunctions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStack::GetAllFunctions}}{\f8\fs22  } {\f8\fs32 CString UIStack::GetAllFunctions(void)} {\f8\fs22 \par \par Get all the call stack frame descriptions for all frames on the call stack.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains a newline-delimited list of call stack frames.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uistack.cpp, 49\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStack_NavigateStack} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStack; NavigateStack}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStack::NavigateStack}}{\f8\fs22  } {\f8\fs32 BOOL UIStack::NavigateStack(int level /* 0 */)} {\f8\fs22 \par \par Navigate to the specified call stack frame.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 level} {\f8\fs22 : An integer that contains the 0-based index into the call stack. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uistack.cpp, 68\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStack_IsValid} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStack; IsValid}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStack::IsValid}}{\f8\fs22  } {\f8\fs32 BOOL UIStack::IsValid(void) const} {\f8\fs22 \par \par Determine if the call stack window is a valid window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean that indicates whether the call stack window is valid (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uistack.cpp, 88\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStack_AttachActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStack; AttachActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStack::AttachActive}}{\f8\fs22  } {\f8\fs32 BOOL UIStack::AttachActive(void)} {\f8\fs22 \par \par Attach to the call stack window if it's the active window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uistack.cpp, 98\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStack_Find} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStack; Find}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStack::Find}}{\f8\fs22  } {\f8\fs32 BOOL UIStack::Find(void)} {\f8\fs22 \par \par Find the call stack window and attach to it\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uistack.cpp, 113\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStack_IsActive} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStack; IsActive}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStack::IsActive}}{\f8\fs22  } {\f8\fs32 BOOL UIStack::IsActive(void)} {\f8\fs22 \par \par Determine if the call stack window is active.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the call stack window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uistack.cpp, 138\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIStack_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIStack; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIStack::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIStack::Activate(void)} {\f8\fs22 \par \par Bring up the call stack window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the call stack window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uistack.cpp, 149\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIThreads_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIThreads; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIThreads::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIThreads::Activate(void)} {\f8\fs22 \par \par Open the Threads dialog.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uithread.cpp, 31\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIThreads_ThreadToString} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIThreads; ThreadToString}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIThreads::ThreadToString}}{\f8\fs22  } {\f8\fs32 CString UIThreads::ThreadToString(int thread)} {\f8\fs22 \par \par Convert a thread ID value to a string. For example, the thread value 0x95 is converted to the string 00000095.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the thread value converted to a string.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 thread} {\f8\fs22 : An integer that contains the thread value.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uithread.cpp, 46\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIThreads_FreezeThread} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIThreads; FreezeThread}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIThreads::FreezeThread}}{\f8\fs22  } {\f8\fs32 BOOL UIThreads::FreezeThread(int thread)} {\f8\fs22 \par \par Suspend the specified thread.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 thread} {\f8\fs22 : An integer that contains the thread ID of the thread to suspend.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uithread.cpp, 59\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIThreads_ThawThread} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIThreads; ThawThread}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIThreads::ThawThread}}{\f8\fs22  } {\f8\fs32 BOOL UIThreads::ThawThread(int thread)} {\f8\fs22 \par \par Resume the specified thread.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 thread} {\f8\fs22 : An integer that contains the thread ID of the thread to resume.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uithread.cpp, 83\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIThreads_SetCurrentThread} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIThreads; SetCurrentThread}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIThreads::SetCurrentThread}}{\f8\fs22  } {\f8\fs32 BOOL UIThreads::SetCurrentThread(int thread)} {\f8\fs22 \par \par Set the specified thread to be the current thread.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 thread} {\f8\fs22 : An integer that contains the thread ID of the thread to activate.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uithread.cpp, 107\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIThreads_GetCurrentThread} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIThreads; GetCurrentThread}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIThreads::GetCurrentThread}}{\f8\fs22  } {\f8\fs32 INT UIThreads::GetCurrentThread(void)} {\f8\fs22 \par \par Get the thread ID of the currently active thread.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that specifies the currently active thread.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uithread.cpp, 130\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIVariables_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIVariables; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIVariables::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIVariables::Activate(void)} {\f8\fs22 \par \par Bring up the variables window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the variables window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uivar.cpp, 25\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIVariables_SetValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIVariables; SetValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIVariables::SetValue}}{\f8\fs22  } {\f8\fs32 int UIVariables::SetValue(LPCSTR value, int row /* ROW_CURRENT */)} {\f8\fs22 \par \par Set the value for the expression at the row specified in the variables window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the value.\par \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the variables window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uivar.cpp, 45\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIVariables_SetPane} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIVariables; SetPane}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIVariables::SetPane}}{\f8\fs22  } {\f8\fs32 int UIVariables::SetPane(int pane)} {\f8\fs22 \par \par Set the current pane to the specified pane in the variables window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 pane} {\f8\fs22 : A value that specifies the pane to activate: PANE_THIS, PANE_AUTO, PANE_LOCALS.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uivar.cpp, 78\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIVariables_GetFunction} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIVariables; GetFunction}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIVariables::GetFunction}}{\f8\fs22  } {\f8\fs32 CString UIVariables::GetFunction(int level /* 0 */)} {\f8\fs22 \par \par Get the call stack description string at the given call stack level (index).  It assumes that the Variables window already has focus.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains the call stack description string from the given call stack level.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 level} {\f8\fs22 : An integer that contains the 0-based index into the call stack. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uivar.cpp, 141\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIVariables_GetAllFunctions} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIVariables; GetAllFunctions}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIVariables::GetAllFunctions}}{\f8\fs22  } {\f8\fs32 CString UIVariables::GetAllFunctions(void)} {\f8\fs22 \par \par Get all the call stack frame descriptions for all frames on the call stack.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A CString that contains a newline-delimited list of call stack frames.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uivar.cpp, 158\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIVariables_NavigateStack} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIVariables; NavigateStack}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIVariables::NavigateStack}}{\f8\fs22  } {\f8\fs32 BOOL UIVariables::NavigateStack(int level /* 0 */)} {\f8\fs22 \par \par Navigate to the specified call stack frame.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 level} {\f8\fs22 : An integer that contains the 0-based index into the call stack. (Default value is 0.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uivar.cpp, 182\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWatch_Activate} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWatch; Activate}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWatch::Activate}}{\f8\fs22  } {\f8\fs32 BOOL UIWatch::Activate(void)} {\f8\fs22 \par \par Bring up the watch window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates whether the watch window is active (TRUE) or not.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiwatch.cpp, 25\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWatch_SetName} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWatch; SetName}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWatch::SetName}}{\f8\fs22  } {\f8\fs32 int UIWatch::SetName(LPCSTR name, int row /* ROW_CURRENT */)} {\f8\fs22 \par \par Set the name of the expression at the specified row in the watch window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 name} {\f8\fs22 : A pointer to a string that specifies the name to set in the watch window.\par \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the watch window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiwatch.cpp, 45\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWatch_SetValue} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWatch; SetValue}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWatch::SetValue}}{\f8\fs22  } {\f8\fs32 int UIWatch::SetValue(LPCSTR value, int row /* ROW_CURRENT */,} {\f8\fs22 \par \par Set the value of the expression at the specified row in the watch window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 value} {\f8\fs22 : A pointer to a string that contains the value.\par \par } {\i\f8\fs22 row} {\f8\fs22 : An integer that specifies the 1-based row of the watch window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiwatch.cpp, 64\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_UIWatch_Delete} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} UIWatch; Delete}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} UIWatch::Delete}}{\f8\fs22  } {\f8\fs32 int UIWatch::Delete(int start_row /* ROW_CURRENT */, int total_rows /* 1 */)} {\f8\fs22 \par \par Delete an expression from the watch window.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 An integer that indicates success. ERROR_SUCCESS if successful; ERROR_ERROR otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 start_row} {\f8\fs22 : An integer that specifies the 1-based row of the watch window. Use ROW_CURRENT to specify the current row; ROW_BOTTOM to specify the last row; and ROW_ALL to specify all rows. (Default value is ROW_CURRENT.)\par \par } {\i\f8\fs22 total_rows} {\f8\fs22 : An integer that specifies the number of rows to delete. (Default value is 1.)\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 uiwatch.cpp, 90\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CLog_RecordSuccess} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CLog; RecordSuccess}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CLog::RecordSuccess}}{\f8\fs22  } {\f8\fs32 BOOL CLog::RecordSuccess(LPCSTR a_szFormat, ...)} {\f8\fs22 \par \par Record a success in the log for the current test. A call to this function causes the current test to log a success and increments the success count by 1.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 a_szFormat} {\f8\fs22 : A pointer to a string that contains the format-specifiers for the remaining variable number of arguments. This format-specifier string is the same format as the format-specifier string for printf.\par \par } {\i\f8\fs22 ...} {\f8\fs22 : A variable number of arguments that are expanded into a string as specified by the format-specifier string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 log.h, 81\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CLog_RecordFailure} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CLog; RecordFailure}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CLog::RecordFailure}}{\f8\fs22  } {\f8\fs32 BOOL CLog::RecordFailure(LPCSTR a_szFormat, ...)} {\f8\fs22 \par \par Record a failure in the log for the current test. A call to this function causes the current test to fail and increments the fail count by 1.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 a_szFormat} {\f8\fs22 : A pointer to a string that contains the format-specifiers for the remaining variable number of arguments. This format-specifier string is the same format as the format-specifier string for printf.\par \par } {\i\f8\fs22 ...} {\f8\fs22 : A variable number of arguments that are expanded into a string as specified by the format-specifier string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 log.h, 89\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CLog_RecordInfo} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CLog; RecordInfo}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CLog::RecordInfo}}{\f8\fs22  } {\f8\fs32 BOOL CLog::RecordInfo(LPCSTR a_szFormat, ...)} {\f8\fs22 \par \par Record an informational message in the log for the current test.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 a_szFormat} {\f8\fs22 : A pointer to a string that contains the format-specifiers for the remaining variable number of arguments. This format-specifier string is the same format as the format-specifier string for printf.\par \par } {\i\f8\fs22 ...} {\f8\fs22 : A variable number of arguments that are expanded into a string as specified by the format-specifier string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 log.h, 97\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CLog_RecordTestKeys} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CLog; RecordTestKeys}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CLog::RecordTestKeys}}{\f8\fs22  } {\f8\fs32 BOOL CLog::RecordTestKeys(LPCSTR szFile, LPCSTR a_szFormat, ...)} {\f8\fs22 \par \par Record the contents of a text file in the log for the current test.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFile} {\f8\fs22 : A pointer to a string that contains the name of the file to include in the log.\par \par } {\i\f8\fs22 a_szFormat} {\f8\fs22 : A pointer to a string that contains the format-specifiers for the remaining variable number of arguments. This format-specifier string is the same format as the format-specifier string for printf.\par \par } {\i\f8\fs22 ...} {\f8\fs22 : A variable number of arguments that are expanded into a string as specified by the format-specifier string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 log.h, 106\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CLog_RecordTextFile} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CLog; RecordTextFile}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CLog::RecordTextFile}}{\f8\fs22  } {\f8\fs32 BOOL CLog::RecordTextFile(LPCSTR szFile, LPCSTR a_szFormat, ...)} {\f8\fs22 \par \par Record the contents of a text file in the log for the current test.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 szFile} {\f8\fs22 : A pointer to a string that contains the name of the file to include in the log.\par \par } {\i\f8\fs22 a_szFormat} {\f8\fs22 : A pointer to a string that contains the format-specifiers for the remaining variable number of arguments. This format-specifier string is the same format as the format-specifier string for printf.\par \par } {\i\f8\fs22 ...} {\f8\fs22 : A variable number of arguments that are expanded into a string as specified by the format-specifier string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 log.h, 116\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CLog_RecordCriticalError} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CLog; RecordCriticalError}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CLog::RecordCriticalError}}{\f8\fs22  } {\f8\fs32 BOOL CLog::RecordCriticalError(LPCSTR a_szFormat, ...)} {\f8\fs22 \par \par Record a critical error in the log for the current test. Use this function when a unrecoverable error occurs while testing. A call to this function causes the current test to fail and increments the fail count by 1.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 a_szFormat} {\f8\fs22 : A pointer to a string that contains the format-specifiers for the remaining variable number of arguments. This format-specifier string is the same format as the format-specifier string for printf.\par \par } {\i\f8\fs22 ...} {\f8\fs22 : A variable number of arguments that are expanded into a string as specified by the format-specifier string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 log.h, 124\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CLog_RecordCompare} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CLog; RecordCompare}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CLog::RecordCompare}}{\f8\fs22  } {\f8\fs32 BOOL CLog::RecordCompare(BOOL bSuccess, LPCSTR a_szFormat, ...)} {\f8\fs22 \par \par Record information or a failure in the log for the current test.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates the result of bSuccess.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 bSuccess} {\f8\fs22 : A Boolean value that specifies whether to record information (TRUE) or a failure (FALSE).\par \par } {\i\f8\fs22 a_szFormat} {\f8\fs22 : A pointer to a string that contains the format-specifiers for the remaining variable number of arguments. This format-specifier string is the same format as the format-specifier string for printf.\par \par } {\i\f8\fs22 ...} {\f8\fs22 : A variable number of arguments that are expanded into a string as specified by the format-specifier string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 log.h, 134\par }{\f8\fs22 \par \page } {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} id_CLog_Comment} K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CLog; Comment}}{\f8\fs22  } {\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CLog::Comment}}{\f8\fs22  } {\f8\fs32 BOOL CLog::Comment(LPCSTR a_szFormat, ...)} {\f8\fs22 \par \par Record a comment in the log for the current test.\par \par } {\b\f8\fs22 Return value: \par }{\f8\fs22 \par }{\f8\fs22 A Boolean value that indicates success. TRUE if successful; FALSE otherwise.\par \par } {\b\f8\fs22 Parameters: \par }{\f8\fs22 \par } {\i\f8\fs22 a_szFormat} {\f8\fs22 : A pointer to a string that contains the format-specifiers for the remaining variable number of arguments. This format-specifier string is the same format as the format-specifier string for printf.\par \par } {\i\f8\fs22 ...} {\f8\fs22 : A variable number of arguments that are expanded into a string as specified by the format-specifier string.\par \par } {\b\f8\fs22 Reference: }{\f8\fs22 log.h, 143\par }{\f8\fs22 \par \page }
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Help\cafewel.rtf ===
{\rtf1\ansi \deff0\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn{\*\falt Times New Roman};}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv{\*\falt Arial};}{\f3\fmodern\fcharset0\fprq1 Courier;} {\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times{\*\falt Times New Roman};} {\f9\fswiss\fcharset0\fprq2 Helvetica{\*\falt Arial};}{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fmodern\fcharset0\fprq1 LinePrinter;} {\f15\froman\fcharset0\fprq2 CG Times;}{\f16\fswiss\fcharset0\fprq2 Univers;}{\f17\fswiss\fcharset0\fprq2 Univers Condensed;}{\f18\fswiss\fcharset0\fprq2 Antique Olive;}{\f19\froman\fcharset0\fprq2 Garamond;}{\f20\fswiss\fcharset0\fprq2 CG Omega;} {\f21\fswiss\fcharset0\fprq2 Albertus Medium;}{\f22\fswiss\fcharset0\fprq2 Albertus Extra Bold;}{\f23\froman\fcharset0\fprq2 Clarendon Condensed;}{\f24\fscript\fcharset0\fprq2 Coronet;}{\f25\fmodern\fcharset0\fprq1 Letter Gothic;} {\f26\fscript\fcharset0\fprq2 Marigold;}{\f27\fnil\fcharset2\fprq2 Wingdings;}{\f28\fnil\fcharset2\fprq2 Marlett;}{\f29\fswiss\fcharset0\fprq2 Arial Narrow;}{\f30\fswiss\fcharset0\fprq2 Arial Black;}{\f31\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;} {\f32\froman\fcharset0\fprq2 Book Antiqua;}{\f33\froman\fcharset0\fprq2 Bookman Old Style;}{\f34\fswiss\fcharset0\fprq2 Century Gothic;}{\f35\froman\fcharset0\fprq2 Century Schoolbook;}{\f36\fnil\fcharset2\fprq2 Monotype Sorts;} {\f37\froman\fcharset0\fprq2 Map Symbols;}{\f38\fswiss\fcharset0\fprq2 Haettenschweiler;}{\f39\fdecor\fcharset0\fprq2 Algerian;}{\f40\fdecor\fcharset0\fprq2 Braggadocio;}{\f41\fswiss\fcharset0\fprq2 Britannic Bold;} {\f42\fscript\fcharset0\fprq2 Brush Script MT;}{\f43\fdecor\fcharset0\fprq2 Colonna MT;}{\f44\fdecor\fcharset0\fprq2 Desdemona;}{\f45\froman\fcharset0\fprq2 Footlight MT Light;}{\f46\fswiss\fcharset0\fprq2 Impact;}{\f47\fdecor\fcharset0\fprq2 Kino MT;} {\f48\froman\fcharset0\fprq2 Wide Latin;}{\f49\fscript\fcharset0\fprq2 Matura MT Script Capitals;}{\f50\fdecor\fcharset0\fprq2 Playbill;}{\f51\fmodern\fcharset2\fprq1 MS LineDraw;}{\f52\fnil\fcharset0\fprq2 Microsoft Logo;} {\f53\fmodern\fcharset255\fprq2 Modern;}{\f54\fswiss\fcharset0\fprq1 MS Dialog;}{\f55\fmodern\fcharset0\fprq1 Lucida Console;}{\f56\fswiss\fcharset0\fprq2 News Gothic MT;}{\f57\fswiss\fcharset0\fprq2 Lucida Sans Unicode;} {\f58\fmodern\fcharset0\fprq1 OCR-A;}{\f59\fswiss\fcharset0\fprq2 Copperplate Gothic Bold;}{\f60\fswiss\fcharset0\fprq2 Copperplate Gothic Light;}{\f61\fscript\fcharset0\fprq2 Comic Sans MS;}{\f62\fscript\fcharset0\fprq2 Lucida Handwriting;} {\f63\fswiss\fcharset0\fprq2 Lucida Sans;}{\f64\fmodern\fcharset0\fprq1 OCR A Extended;}{\f65\froman\fcharset0\fprq2 Calisto MT;}{\f66\fswiss\fcharset0\fprq2 Abadi MT Condensed Light;}{\f67\froman\fcharset0\fprq2 Garamond MT;} {\f68\fswiss\fcharset0\fprq2 AvantGarde;}{\f69\froman\fcharset0\fprq2 Bookman;}{\f70\fswiss\fcharset0\fprq2 Helvetica-Narrow;}{\f71\froman\fcharset0\fprq2 NewCenturySchlbk;}{\f72\froman\fcharset0\fprq2 Palatino;}{\f73\froman\fcharset0\fprq2 ZapfChancery;} {\f74\fdecor\fcharset2\fprq2 ZapfDingbats;}{\f75\fmodern\fcharset0\fprq1 Fixedsys;}{\f76\fmodern\fcharset255\fprq1 Terminal;}{\f77\fswiss\fcharset0\fprq2 Small Fonts;}{\f78\fswiss\fcharset0\fprq2 MS Dialog Light;}{\f79\fswiss\fcharset0\fprq2 MS SystemEx;} }{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0; \red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar \fs20 \snext0 Normal;}{\s1\sb240\nowidctlpar \b\f2\ul \sbasedon0\snext0 heading 1;}{\s2\sb120\nowidctlpar  \b\f2 \sbasedon0\snext0 heading 2;}{\s3\li360\nowidctlpar \b \sbasedon0\snext17 heading 3;}{\s4\li360\nowidctlpar \ul \sbasedon0\snext17 heading 4;}{\s5\li720\nowidctlpar \b\fs20 \sbasedon0\snext17 heading 5;}{\s6\li720\nowidctlpar \fs20\ul  \sbasedon0\snext17 heading 6;}{\s7\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 7;}{\s8\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 8;}{\s9\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 9;}{\*\cs10 \additive  Default Paragraph Font;}{\*\cs15 \additive\f0\fs16\up6\lang1033 \sbasedon10 footnote reference;}{\s16\nowidctlpar \fs20 \sbasedon0\snext16 footnote text;}{\s17\li720\nowidctlpar \fs20 \sbasedon0\snext17 Normal Indent;}{ \s18\fi-240\li480\sb80\nowidctlpar\tx480 \f9 \sbasedon0\snext18 nscba;}{\s19\fi-240\li240\sa20\nowidctlpar \f9 \sbasedon0\snext19 j;}{\s20\li480\sa20\nowidctlpar \f9 \sbasedon0\snext20 ij;}{\s21\sb80\sa20\nowidctlpar \f9 \sbasedon0\snext21 btb;}{ \s22\fi-240\li2400\sb20\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext22 ctcb;}{\s23\fi-240\li480\sa40\nowidctlpar\tx480 \f9 \sbasedon0\snext23 ns;}{\s24\sa120\nowidctlpar \f9\fs28 \sbasedon0\snext24 TT;}{\s25\fi-240\li2400\sa20\nowidctlpar \f9  \sbasedon0\snext25 crtj;}{\s26\fi-240\li480\nowidctlpar\tx480 \f9 \sbasedon0\snext26 nsca;}{\s27\sa20\nowidctlpar \f9 \sbasedon0\snext27 bt;}{\s28\li240\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext28 Hf;}{\s29\li240\sb120\sa40\nowidctlpar \f9  \sbasedon0\snext29 Hs;}{\s30\li480\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext30 RT;}{\s31\fi-2160\li2160\sb240\sa80\nowidctlpar\tx2160 \f9 \sbasedon0\snext31 c;}{\s32\li2160\sa20\nowidctlpar \f9 \sbasedon0\snext32 ct;}{\s33\li240\sa20\nowidctlpar \f9  \sbasedon0\snext33 it;}{\s34\li480\nowidctlpar \f9\fs20 \sbasedon0\snext34 nsct;}{\s35\fi-160\li400\sb80\sa40\nowidctlpar \f9 \sbasedon0\snext35 nscb;}{\s36\fi-2640\li2880\sb120\sa40\nowidctlpar\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f9  \sbasedon0\snext36 HC2;}{\s37\fi-2640\li2880\sb120\sa20\nowidctlpar\tx2880 \f9 \sbasedon0\snext37 C2;}{\s38\fi-240\li2400\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext38 ctc;}{\s39\li2160\sb160\nowidctlpar \f9 \sbasedon0\snext39 crt;}{ \s40\li480\sb20\sa40\nowidctlpar \f9 \sbasedon0\snext40 or;}{\s41\fi-259\li360\sb40\sa40\nowidctlpar\tx360 \f7\fs20 \sbasedon0\snext41 Ln1;}{\s42\li115\sb80\sa80\nowidctlpar \f7\fs20 \sbasedon0\snext0 *Intro;}{\s43\li115\sb80\sa80\keepn\nowidctlpar \b\f7  \sbasedon3\snext42 *Title;}{\s44\fi-245\li360\sb80\nowidctlpar \f7\fs20 \snext44 *Jl;}{\s45\li360\sb40\sa40\nowidctlpar \f7\fs20 \snext0 Lp1;}{\s46\fi-1800\li1915\sb60\sl-240\slmult1\nowidctlpar\tx1915 \f7\fs20 \sbasedon0\snext46 Tph;}{ \s47\li115\sb120\sa80\nowidctlpar \b\f7\fs20 \snext41 Proch;}{\*\cs48 \additive\super \sbasedon10 endnote reference;}{\s49\nowidctlpar \fs20 \sbasedon0\snext49 endnote text;}{\s50\widctlpar\pvpara\posy0\dxfrtext187\dfrmtxtx187\dfrmtxty187 \b\f4\fs20  \sbasedon0\snext50 Maketable;}{\s51\li360\sa120\nowidctlpar \fs20 \sbasedon0\snext51 Body Text Indent;}}{\info{\title AFXCORE}{\subject MFC Core RTF Help}{\author AFX}{\operator .}{\creatim\yr1996\mo5\dy17\hr20\min37}{\revtim\yr1996\mo5\dy19\hr19\min7} {\version18}{\edmins43}{\nofpages30}{\nofwords4321}{\nofchars24631}{\*\company  }{\vern57431}}\margl720\margr720\margt720\margb720 \widowctrl\ftnbj\aenddoc\hyphcaps0 \fet0\sectd \linex576\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (} {\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9 \pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} CAFE_Welcome}${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} Contents}}{ \f2  }{\fs16\up6   }{\b\f2\fs32\up6 Welcome to CAFE}{\b\f2  \par }{\f9  \par }{\f2 CAFE (C++ Automation Framework & Engine) is a system designed for writing and running automated tests. Tests are written in C++ using a set of classes that mirror the real-world pieces of the application being tested. Tests are run vi a a GUI user interface. \par }{\b\f2  \par Overview and architecture: \par  \par }{\f2 \tab }{\f2\uldb CAF\'c9 design goals}{\v Design_goals}{\v\f2  }{\f2  \par \tab }{\uldb CAFE components:}{\v CAF\'c9_Components}{\f2  \par \tab }{\f2\uldb CAF\'c9 Class Library:}{\v CAF\'c9_CLASSES}{\f2  \par }{\b\f2  \par Getting started \par }{\f2  \par \tab }{\f2\uldb\cf11 Enlisting in the CAFE projects}{\v\f2 _how_enlist_CAFE}{\f2  \par \tab }{\f2\uldb\cf11 How to run the IDE sniff tests}{\v\f2 _how_run_sniffs}{\f2  \par \tab }{\f2\uldb\cf11 Getting help on component classes and functions}{\v\f2 _how_use_help}{\f2  \par  \par }{\b\f2 Running tests \par }{\f2  \par \tab }{\f2\uldb\cf11 How to run CAFE tests}{\v\f2 _how_run_tests}{\f2  \par \tab }{\f2\uldb\cf11 CAFE switches}{\v\f2 _CAFE_switches}{\f2  \par \tab }{\f2\uldb\cf11 Customizing the .STF file}{\v\f2 _how_customize_STF}{\f2  \par  \par }{\b\f2 Writing tests \par }{\f2 The preffered way of creating a CAF\'c9 test is by using the }{\f2\uldb\cf11 TestWizard}{\v\f2 _TestWizard }{\f2 CustomAppWizard. TESTWIZ.AWX is checked into the CAF\'c950\\x86\\bin directory. Copy the *.awx file into MSDEV\\ TEMPLATE directory to use it. If the checked in version can not be loaded by DevStudio, it may have been built with a different version of MFC than the version used to build MSDEV, just build yourself a copy from CAFE50\\HELP\\TOOLS\\TESTWIZ\\ SRC (TESTWIZ.MAK). The output will be automatically copied into CAFE50\\X86\\BIN \par  \par If you don\rquote t want to use TestWizard, you may just start out with any of the sniff tests located in CAFE50\\SNIFF\\ and modify them. Alternatively, you can just copy the }{\f2\uldb sample code}{\v\f2 FromSample}{\f2  generated by TestWizard. \par }{\b\f2 Building tests \par }{\f2  \par \tab }{\f2\uldb\cf11 How to build CAFE and the sniff tests}{\v\f2 _how_build_CAFE}{\f2  \par  \par }{\b\f2 Common questions \par }{\f2  \par \tab }{\f2\uldb\cf11 What is an .STF file?}{\v\f2 _q_STF}{\f2  \par \tab }{\f2\uldb\cf11 How do I run tests directly from the command line?}{\v\f2 _how_run_cmdline \par \tab  \par }{\f2 \tab If you have additional questions, please send them to the }{\b\f2 CAFEDEV}{\f2  alias. If you would like to be added to this alias, let us know. \par  \par }{\b\f2 Help \par }{\f2  \par \tab }{\f2\uldb\cf11 Using this help file}{\v\f2 _how_use_help}{\f2  \par \tab }{\f2\uldb\cf11 How to add topics to this help file}{\v\f2 _how_add_help}{\f2  \par  \par }{\b\f2 Bugs \par }{\f2  \par \tab }{\f2\uldb\cf11 How to report bugs}{\v\f2 _how_report_bugs}{\f2  \par }\pard\plain \s3\li360\nowidctlpar \b {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar \fs20 {\cs15\fs16\up6 #} CAF\'c9_Components}}{\f2  }CAFE components: \par \pard\plain \nowidctlpar \fs20 {\f4\fs24  CAFE is made up of a Driver, a Class library, a Logging system, and the individual tests. The driver is an MFC executable with several DLLs. The class library is a set of DLLs corresponding to each of the main components of DevStudio, and the tests are se parate DLLs which make calls into the class library. The logging system provides global functions which can be accessed from the Dr iver, the Class library, and the tests. Communication between the tests and DevStudio happens through Windows messages and SendKeys using the MSTest DLLs which are wrapped by the Class library. In other words, the Class library embraces and enhances the M STest API through C++ wrappers.  \par }\pard\plain \s3\li360\nowidctlpar \b Overview diagram: \par \pard\plain \nowidctlpar \fs20 {{\pict\wmetafile8\picw11690\pich8639\picwgoal6627\pichgoal4898 \picscalex179\picscaley107  0100090000033308000006002700000000001100000026060f001800ffffffff00001000e6f4ffff58ffffff41ffffffff0600000900000026060f000800ffffffff020000001000000026060f001600ffffffff04000e00544e5050070038513d50ed0586260a00000026060f000a00544e505000000200f0030900000026 060f000800ffffffff030000000f00000026060f001400544e505004000c00010000000100000000000000050000000b0258ffe6f4050000000c02a7075b0a09000000fa02050000000000ffffff002200040000002d01000007000000fc020100000000000000040000002d01010009000000fa0206000800000000000002 2200040000002d01020007000000fc020000618ffd020000040000002d010300050000000902618ffd020400000004010d00070000001b04b6020bf90c01d7f5050000000902618ffd02070000001b0421048ef67b0352f5050000000902618ffd02070000001b0421049bf97b0350f815000000fb0240ff00000000000090 01000000000000001254696d6573204e657720526f6d616e00c502040000002d010400040000002e011800050000000a02000000000500000009020000000205000000140200000000040000000201010010000000320a140211f6060000004472697665728b00400035006000550040000400000002010200050000000902 618ffd02070000001b0421040ef87b03d2f6050000000902618ffd02070000001b04a102b1fb2001f0fa050000000902618ffd02070000001b04010311fc800150fb050000000902618ffd02070000001b04a10201fd200140fc050000000902618ffd02070000001b04010331fd800170fc050000000902618ffd02070000 001b04110511ff900390fa050000000902618ffd02070000001b04f10641ff300690fa05000000090200000002040000002d010000040000002d01010004000000f001020004000000f001030010000000fb021400090000000000bc02000000000102022253797374656d006e040000002d01020004000000f00104000300 00001e000700000016040640f8fa01c06bf909000000fa02060008000000000000022200040000002d010300050000001402e001f2fa050000001302e00169f9040000002d010000040000002d01010004000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000 020c000000240304008af9ba017bf9e0018af9060210f9e00105000000090200000002040000002d010000040000002d01010004000000f0010300030000001e000700000016043c030640d00201c009000000fa02060008000000000000022200040000002d010300050000001402ce0240f6050000001302360340f60400 00002d010000040000002d01010004000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000020c000000240304001af6160340f6250366f6160340f6900305000000090200000002040000002d010000040000002d01010004000000f0010300030000001e0007 00000016043c030640d00201c009000000fa02060008000000000000022200040000002d010300050000001402ce02e0f80500000013023603e0f8040000002d010000040000002d01010004000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000020c000000 24030400baf81603e0f8250306f91603e0f8900305000000090200000002040000002d010000040000002d01010004000000f0010300030000001e000700000016043c030640d00201c009000000fa02060008000000000000022200040000002d010300050000001402ce0290f7050000001302360390f7040000002d0100 00040000002d01010004000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000020c000000240304006af7160390f72503b6f7160390f7900305000000090200000002040000002d010000040000002d01010004000000f0010300030000001e00070000001604 6c030640000301c009000000fa02060008000000000000022200040000002d010300050000001402fe02d0fc0500000013026603d0fc040000002d010000040000002d01010004000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000020c00000024030400aa fc4603d0fc5503f6fc4603d0fcc00305000000090200000002040000002d010000040000002d01010004000000f0010300030000001e000700000016046c030640000301c009000000fa02060008000000000000022200040000002d010300050000001402fe02b0fb0500000013026603b0fb040000002d01000004000000 2d01010004000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000020c000000240304008afb4603b0fb5503d6fb4603b0fbc00305000000090200000002040000002d010000040000002d01010004000000f0010300030000001e00070000001604dc05064010 0501c009000000fa02060008000000000000022200040000002d0103000500000014020e0580fb050000001302d60580fb040000002d010000040000002d01010004000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000020c000000240304005afbb60580fb c505a6fbb60580fb300605000000090200000002040000002d010000040000002d01010004000000f0010300030000001e00070000001604dc050640100501c009000000fa02060008000000000000022200040000002d0103000500000014020e05d0fc050000001302d605d0fc040000002d010000040000002d01010004 000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000020c00000024030400aafcb605d0fcc505f6fcb605d0fc300605000000090200000002040000002d010000040000002d01010004000000f0010300030000001e00070000001604dc050640100501c00900 0000fa02060008000000000000022200040000002d0103000500000014020e0550fe050000001302d60550fe040000002d010000040000002d01010004000000f0010300040000002701ffff07000000fc020000000000020000040000002d010300050000000902000000020c000000240304002afeb60550fec50576feb6 0550fe300615000000fb0290ff0000000000009001000000000000001254696d6573204e657720526f6d616e00c502040000002d010400040000002e011800050000000a020000000005000000090200000002050000001402d60550fe04000000020101001e000000320a500480fb0f000000537570706f727420636c6173 736573003e00380038003800380026001f001c003100200031002c002b0032002c00040000000201020015000000fb0290ff0000000000009001000000000000001254696d6573204e657720526f6d616e009102040000002d01050004000000f0010400040000002e011800050000000a0200000000050000000902000000 02050000001402ffff09d4040000000201010025000000320ad60480fb1400000070726a2e646c6c2c2073686c2e646c6c202e2e2e380025001f001c00380020001f001c001c002b0038001f001c0038001f0020001c001c001c001c00040000000201020015000000fb0290ff000000000000900100000000000000125469 6d6573204e657720526f6d616e003400040000002d01040004000000f0010500040000002e011800050000000a020000000005000000090200000002050000001402ffff09d4040000000201010019000000320ac00610fc0c0000004d735465737420446c6c732064002b00450031002c001f001c0051001f001f002c001c 00040000000201020015000000fb0290ff0000000000009001000000000000001254696d6573204e657720526f6d616e009102040000002d01050004000000f0010400040000002e011800050000000a020000000005000000090200000002050000001402ffff09d404000000020101000f000000320a10029afd05000000 536e696666003e0038001f0026002500040000000201020015000000fb0290ff0000000000009001000000000000001254696d6573204e657720526f6d616e003400040000002d01040004000000f0010500040000002e011800050000000a020000000005000000090200000002050000001402ffff09d404000000020101 000f000000320a96029afd05000000546573747300440032002c001f002b00040000000201020015000000fb0290ff0000000000009001000000000000001254696d6573204e657720526f6d616e009102040000002d01050004000000f0010400040000002e011800050000000a0200000000050000000902000000020500 00001402ffff09d4040000000201010027000000320ae00420f5150000004755492e444c4c2c204944452e444c4c2c202e2e2e005100510025001c005100440045001c001c002500510044001c005100450044001c001c001c001c001c00040000000201020015000000fb025fff0000000000009001000100000000001254 696d6573204e657720526f6d616e003400040000002d01040004000000f0010500040000002e011800050000000a020000000007000000fc020000618ffd020000040000002d01050004000000f0010300050000000902618ffd02070000001b048400c2fd88ff16f815000000fb025fff0000000000009001000100000000 001254696d6573204e657720526f6d616e009102040000002d01030004000000f0010400040000002e011800050000000a0200000000050000000902618ffd02050000001402ffff09d404000000020101001f000000320a350095f810000000434146452056657273696f6e20332e306b0073005900620028007400470035 003e002d00500050002800500028005000040000000201020007000000fc020000ffffff020000040000002d01040004000000f0010500050000000902ffffff02070000001b04540092fd58ffe6f715000000fb025fff0000000000009001000100000000001254696d6573204e657720526f6d616e003400040000002d01 050004000000f0010300040000002e011800050000000a020000000005000000090200000002050000001402ffff09d404000000020101001f000000320a050065f810000000434146452056657273696f6e20332e306b0073005900620028007400470035003e002d00500050002800500028005000040000000201020015 000000fb0290ff0000000000009001000000000000001254696d6573204e657720526f6d616e009102040000002d01030004000000f0010500040000002e011800050000000a020000000005000000090200000002050000001402ffff09d404000000020101001c000000320af00310f60e0000004341464520636f726520 444c4c734b0051003e0044001c0032003800250032001c005100440045002b0004000000020102000f00000026060f001400544e505004000c000000000000000000000000000900000026060f000800ffffffff01000000040000002d010000040000002d01010004000000f0010400040000002d01020004000000f00103 0003000000000000000000000000000000000000000000000000000000}}{\f4\fs24  \par  \par  \par CAFE Driver: \par }{\f4 The Driver is an MFC MDI application.  \par }{\f4\fs24  \par }{{\pict\wmetafile8\picw23089\pich12577\picwgoal13090\pichgoal7130 \picscalex94\picscaley93  010009000003fdcc0200070042c6020000001100000026060f001800ffffffff0000100047f5fffff0f7ffffbb090000140300000900000026060f000800ffffffff020000001000000026060f001600ffffffff04000e00544e5050070038513d50ed0586000a00000026060f000a00544e505000000200f0030900000026 060f000800ffffffff030000000f00000026060f001400544e505004000c00010000000100000000000000050000000b02f0f747f5050000000c02240b741409000000fa02050000000000ffffff002200040000002d01000007000000fc020100000000000000040000002d0101000400000004010d00040000002d010000 040000002d010100030000001e000700000016042700b104f0f747f509000000fa02060001000000000000022200040000002d010200030000001e00040000002e010000050000000a020000000005000000090200000000050000000102ffffff0007000000fc020000ffffff000000040000002d01030009000000fa0200 0000000000000000002200040000002d010400040000000701030042c60200430f2000cc000000b80138030000000037086a0ff0f747f52800000038030000b80100000100080000000000408805000000000000000000000100000000000000000000000080000080000000808000800000008000800080800000c0c0c000 c0dcc000f0caaf0fbff00a4a0a000808080000000ff0000ff000000ffff00ff000000ff00ff00ffff0000ffffff00ffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07ff07070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707f800ffffffffffffffff07fffff8f807fff8f807fff8f807070707f800ffffffffffffffff07fffff8f807 fff8f807fff8f8070707f800ffffffffffffffff07fffff8f807fff8f807fff8070707f800ffffffffffffffff07fffff8f807ff f8f807ff070707f800ffffffffffffffff07ff070707070707000707070707070007070007070707000707000707070700070700070707000007070700070007070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707fff8f807fff8f807070707f800ffffffffffffffff07fffff8f807fff8 f8070707f800ffffffffffffffff07ff070707070707000707070707070007070000000000000707000707070700070700070707070007070007070700070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707fff8f807fff8070707f800ffffffffffffffff07fffff8f807ff0707 07f800ffffffffffffffff07fffff8f807070707f800ffffffffffffffff07fffff8f8070707f800 ffffffffffffffff07fffff8070707f800ffffffffffffffff07ff07070707070700070707070700070707070707070707070707070707070707070707070707000707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707ff070707f800ffffff ffffffffff07fff800ffffffffffffffff07ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffff ffff07fff800ffffffffffffffff07fff800ffffffffffffffff07 fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07ff0707ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff070707ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0707f800ffffffffffffffff07ff0707f80707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707ff070707fff0707f800ffffffffffffffff07ff0707f800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff07ff07ff07ff07ff07000000000000000000000000000000000000000007ff07 0707f80000000000000000000000000000000000000000000000000000000000000000000000000000000000ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0000000000000000000000000000000000000000070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff07ff07ff07ff07ff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff070707f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f80007ff070707f8 0007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff0707070707 0707070707070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707 07070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f80007ff070707f80007ff 07070707070707070707070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff0707070707070707 0707070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707070707 07070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700070707070707070707f80007ff070707f80007ff070707 07070707070007070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff0707070707070700000707 0707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070700000707070707070707f80007ff070707f80007ff07070707070707000007070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707070707000007 07070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070700000007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700000007070707070707f80007ff070707f80007ff070707070707 00000007070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700000007070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff0707070707000000000707070707 0707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070700000000070707070707f80007ff070707f80007ff07070707070000000007070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707070707000000000707 07070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707000000000007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700000000000707070707f80007ff070707f80007ff070707070000000000 07070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700000000000707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070000000007070707070707f8 0007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070700000000070707070707f80007ff070707f80007ff07070707070000000007070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707070707000000000707070707 07f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070700000007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700000007070707070707f80007ff070707f80007ff070707070707000000070707 07070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700000007070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707000007070707070707f80007ff 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070700000707070707070707f80007ff070707f80007ff07070707070707000007070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070700000707070707070707f800 070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700070707070707070707f80007ff070707f80007ff070707070707070700070707070707 07f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707f80007ff07ff07ff07ff07ff07ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f800070707 070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f800 07ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707f80007ff07ff07ff07ff07ff07ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f800070707070707 070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007fffffffffffffffffffffffffffffffffff80007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800ff07ff07ff07ff07ff0707fffffffffffffffffffffffffffffffffff80007ff070707f80007fffffffffffffffffffffffffffffffffff80007ffff fffffffffffffffffffffffffffffff800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07fffffffffffffffffffffffffffffffffff800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007070707070707070707070707070707070707000707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070007ff07ff07ff07ff07ff070707070707070707070707070707070707070007ff070707f8000707070707070707070707070707070707070700070707070707070707070707070707070707070007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707070707070707070707070707070707070700070707070707070707 070707070707070707070707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707 070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707 f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707000707070707070707f80007 ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000 0000ffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffff000000ff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff00000000000000ffff0000ff000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ff000000ffffffffff00000000000000ffffffff00000000ffffffffffff00000000ffffffffffff00000000ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070700000007070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000ffffffff000000000000ffffff0000ffffff000000ffffff000000000000ffffffff00000000000000ffffff000000000000ffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffff0000000000000000ffff00000000000000ffffffff0000000000 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 00000000ffffff00000000000000ffffff0000000000000000ffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070000000000070707070707f80007ff0707 f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffff0000 00ffff000000ffff000000ffff0000ffff000000ffffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffff000000ffff000000ffff000000ffffffffffffff0000ffffffff0000ffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707000000000000000707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff0000ff000000ffffffff0000000000000000ffff0000ffffffff0000ffffffffffffff000000ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffff000000ff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 0000ffff0000ffffffff0000ffff0000ffffffff0000ffff0000ffffffffffffffff0000000000000000ffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070700000000000000000007070707f80007ff0707f800ff ffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff 0000ffffffff0000ffff0000000000ffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffff0000ffffffff0000ffff0000000000000000ffff0000ffffffffffffffff0000000000000000ffffff000000000000ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff00000000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff00000000000000ffff0000ffffffff0000ffff000000ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffffffffffff ff0000ffffffff0000ffffff00000000000000ffff0000ffffffffffffffff0000ffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffff ffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000 ffff000000ffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffffffffffffffff0000ffff000000ffff000000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffff000000000000ffffff00000000ffffffffffffff000000000000ffffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff000000000000ffffff00000000000000ffffffff000000000000ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffff0000 0000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffff ff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffffff00000000 ffffffff0000000000ffffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffff000000000000ffffffff0000000000ffffffff0000ff000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ff000000ffffffffff0000000000ffffffffffff00000000ffffffffffff00000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffff000000ffffffffffffffffffffffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff 0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000ffffffffffffffffffffffff ff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07fffffffffffffffffffffffffffffffffff80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffffff0000ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff0707f800ffffffffffffffff07ff0707f8 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07 ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707 07f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800 fffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9f9f9f9f9 fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9f9f9f9f9fffffff9f9f9f9 f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffffffff9f9f9f9fffffffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffff9f9fffffffff9f9ffffff fffff9f9f9f9fffffffffff9f9f9f9fffffffff9f9fffffffffffffffffffffffffffffffffffffffffff9f9f9f9fffffffff9f9f9f9f9f9f9fffff9f9fff9f9f9fffffffffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9ff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9fffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffffff9f9f9f9f9f9ffff fffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffff9f9fffffffff9f9fffffffff9f9f9f9f9fffffffff9f9f9f9f9f9fffffff9f9fffffffffffffffffffffffffffffffffffffffff9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9 f9fffffffff9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9ffffffffff f9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffff9f9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9ffffffffff fffffff9f9fffffffffffffffff9f9fffffff9f9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9f9fffff9f9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffff9f9 fffffffffffff9f9f9fffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9f9fffff9f9f9fffff9f9fffffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9ffffffff fffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffffffffff9 f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9fffffffff9f9ffffffff fff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffff9f9fffffffffffff9f9f9f9f9f9f9f9fffff9f9fffffffffffffffffffffffffffffffffffffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9fffffffff9f9ff fffffffffffff9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffff9f9ff fffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffff9f9ffffffffffffffff f9f9fffffffffffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffff9f9ffffff fffffff9f9f9f9f9f9f9f9fffff9f9fffffffffffffffffffffffffffffffffffffffff9f9fffffffffffff9f9f9f9f9f9f9f9fffff9f9fffffffff9f9fffffff9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffff9 f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffffffffffff9f9ffff fffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9f9f9f9f9fffffffffffffff9f9fffffffffff9f9fff9f9fff9f9fffffffffff9f9 fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9f9fffffffffffffffffffffffffffffffffffffff9f9fffffffffffffff9f9f9f9f9f9f9fffff9f9fffffffff9f9fffff9f9 f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9ffffffff fffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9f9 f9f9f9fffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9f9f9f9f9fffffffffffffff9f9fffffffffff9f9fff9f9fff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9f9fffff9f9f9fffffffff9f9ffffffffffff f9f9f9fffff9f9f9fffff9f9f9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffff9f9fffff9f9f9fffff9f9f9fffff9f9fffffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffffff9f9ff fff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffffffffff9f9ffffffffff fffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9fffffffff9f9fffffffffff9f9ffffff fffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9f9f9f9f9f9fffffffff9f9f9f9f9f9fffffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9fffffffff9f9f9f9 f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9ffffffffffffff fff9f9fffffffffffffffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9ffffffff fffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fff9f9f9fffffffffff9f9f9f9f9f9fffffffffff9 f9f9f9fffffffff9f9fff9f9f9f9f9fffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9f9f9f9fffffffff9f9fff9f9f9fffffffffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9ffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffff9f9fffff9f9fffffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffff9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9ffffffffffffffff fffffffffffffffffffffffffffffffff9f9fffffffffffffffffff9f9fffff9f9fffffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffff9f9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9f9fffff9f9f9fffffff9f9f9f9ffffffffffff fffffffffffffffffffff9f9f9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffff9f9ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffff9f9f9f9fffffffffff9f9f9f9f9f9fffffff9f9fffffffffffffffff9f9 f9f9f9f9f9f9fffff9f9f9f9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffff9f9f9f9fffffffffff9f9f9f9f9f9fffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9ff fff9f9f9f9f9f9f9fffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffffff9f9f9f9f9f9fffffffff9f9f9f9fffffffffffffffffffffffffffffffff9f9f9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffffffffffffffffffffff9f9ffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9f9f9ffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffffff9f9f9f9f9f9fffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9ffffffffffffffffffffff fffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffffff9f9f9f9f9f9fffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffffffff9f9f9f9fffffffffffffff9f9ffffffffffffffffff fffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffff9f9ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff0505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff05050505ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffff050505050505ffffff0505ffffffff0505ffffffff0505ffffffffffffffff05050505ffffffff0505ffffffffffffffff0505ff0505ff0505ffffff05050505050505ffffffffff05050505ffffffff050505050505 ffffffffff05050505ffffffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffff05050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffffffff05050505ffffffffffffff05050505ffffffffffffff ffffffffffffffff050505ff0505ffffffff05050505ffffffffffffff05050505ffffffffffffffffffffffffff0505ffffffff0505ffffff05050505050505ffff0505ffffffff0505ffffffff050505ff0505ffffff050505050505ffffffffff05050505ffffffffffffffffffffffffffffffffff05050505ffffffff ff05050505ffffffffffffffffffffffffffffffff05050505ffffffffff050505050505ffffffff050505050505ffffff0505ff050505ffffffff0505ff050505ffffffffffff05050505ffffffffff05050505050505ffff0505ffffffffffffffffffff050505ff0505ffffffffffffffffffffffffffffff05050505ff ffffffff05050505ffffffff0505ffffffff0505ffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffff050505050505ffffff0505ffffffff0505ffffffff0505ff ffffffffffff050505050505ffffff0505ffffffffffffffff0505ff0505ff0505ffff0505050505050505ffffffff0505050505ffffffff050505050505ffffffff050505050505ffffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05 0505050505ffffff0505050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffffff050505050505ffffffffff0505050505ffffffffffffffffffffffffffff05050505050505ffffff050505050505ffffffffff0505050505ffffffffffffffffffffffffff0505ffffffff0505ffff0505050505050505ff ff0505ffffffff0505ffffff05050505050505ffffff050505050505ffffffff050505050505ffffffffffffffffffffffffffffff0505050505ffffffff050505050505ffffffffffffffffffffffffffff050505050505ffffffff050505050505ffffffff050505050505ffffff05050505050505ffffff050505050505 05ffffffff050505050505ffffff0505050505050505ffff0505ffffffffffffffffff05050505050505ffffffffffffffffffffffffffff0505050505ffffffff050505050505ffffff050505ffff050505ffffffff0505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffffffff0505ffffffffffff050505ffff050505ffff0505ffffffffffffffff0505ff0505ff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffff0505ffffffffff 050505ffff050505ffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff050505ffff050505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff050505ffff050505ffffffff0505ffffffffffffffffffffffffff ffffff050505ffff050505ffff050505ffffffffffffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff050505ffff050505ffffffffff0505ffffffffff050505ffffffffffffffffffffffffffffffffffffff0505ffffffffffff050505ff ff050505ffffffffffffffffffffffff050505ffff050505ffffffffff0505ffffffffffffffff0505ffffffffff050505ffff050505ffff050505ffff050505ffff050505ffff050505ffff0505ffffffff0505ffff0505ffffffffffffffff050505ffff050505ffffffffffffffffffffffffffff0505ffffffffffff05 0505ffffffffffffffff050505050505ffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffffffff0505ffffffff ffff0505ffffffff0505ffff0505ffffffffffffffff0505ff0505ff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffff ffffffffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505050505050505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505ffffffff0505ffff0505 ffffffff0505ffff0505ffffffff0505ffffffffff0505ffffffffff0505050505050505ffffffffffffffffffffffffffff0505ffffffffffff0505ffffffff0505ffffffffffffffffffffffff0505ffffffffffffffffffffff0505ffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ff ff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffffffffffff0505ffffffff0505ffffffffffffffffffffffffffff0505ffffffffffff0505050505050505ffffffff05050505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffffffff0505ffffffffffff0505ffffffff0505ffff0505ffffffffffffffff0505ff0505ff0505ffff0505050505050505ffffffff0505ffffffffffffffffff0505ffffffffff0505ff ffffff0505ffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffff0505050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffffffffffffffffff 0505ffffffff0505ffff0505050505050505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffffffffff0505ffffffffff0505050505050505ffffffffffffffffffffffffffff0505ffffffffffff0505ffffffff05 05ffffffffffffffffffffffff0505ffffffffffffffffffffff0505ffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505050505050505ffff0505ffffffffffffffff0505ffffffff0505ffffffffffffffffffffffffffff0505ffffffffffff05050505 05050505ffffffffff0505ffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f8 00ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffffffff0505ffffffffffff05 05ffffffff0505ffff050505ffffffffffffff0505ff0505ff0505ffffff05050505050505ffffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffff ffffff05050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffffff05050505050505ffff0505ffffff ff0505ffff0505ffffffff0505ffffffffff0505ffffffffff0505ffffffff0505ffffffffffffffffffffffffffff0505ffffffffffff0505ffffffff0505ffffffffffffffffffffffff0505ffffffffffffffffffffff0505ffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ffff0505 ffffffff0505ffffff05050505050505ffff050505ffffffffffffff0505ffffffff0505ffffffffffffffffffffffffffff0505ffffffffffff0505ffffffff0505ffffffff05050505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff050505ffff050505ffff0505050505050505ffff050505ffff050505ffff05050505ffffffffffff0505ff0505ff0505ffffffffffffffff0505ffffffff0505ffffffffffffffffff0505ffffffffff050505ffff05 0505ffff050505ffff050505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffff0505ffff050505ffff050505ffff050505ffff050505ffff050505ffff050505ffffffff0505ffffffffffffffffffffffffffffffff050505 ffff050505ffff050505ffff050505ffffffff0505ffffffffffffffffffffffffffffffff050505ffff050505ffffffffffffffff0505ffff050505ffff050505ffff050505ffff050505ffffffffff0505ffffffffff050505ffff050505ffffffffffffffffffffffffffff0505ffffffffffff050505ffff050505ffff ffffffffffffffffffff050505ffff050505ffffffffff0505ffffffffffffffff0505ffffffffff050505ffff050505ffff050505ffff050505ffff050505ffff050505ffffffffffffffff0505ffff05050505ffffffffffff050505ffff050505ffffffffffffffffffffffffffff0505ffffffffffff050505ffff0505 05ffffff050505050505ffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffff ffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff05050505050505ffffff0505050505050505ffffff050505 050505ffffff0505050505050505ffff0505050505050505ffffff050505050505ffffffff050505050505ffffffff05050505ffffffffffff050505050505ffffff05050505050505ffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffff 050505050505ffffff05050505050505ffffff05050505050505ffffffff050505050505ffffffff050505050505ffffffffffffffffffffffffffff050505050505ffffffff050505050505ffffffff050505050505ffffffffffffffffffffffffff05050505050505ffffffff050505050505ffffff05050505050505ff ffffff05050505050505ffffffffff0505ffffffffffff050505050505ffffffffffffffffffffffffffff050505050505ffffffff050505050505ffffffffffffffffffffffffffff050505050505ffffffffffff0505ffffffffffff05050505ffffffffff05050505050505ffffff05050505050505ffffffff05050505 0505ffffffff050505050505ffffff0505050505050505ffffff05050505050505ffffffffffffffffffffffffff050505050505ffffffff050505050505ffffff050505ffff050505ffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff0505ff050505ffffffffffff0505ffffffffffffffff05050505ffffffff0505ff0505050505ffff0505ff0505ff05ffffffff0505050505ffffffffff050505050505ffffffff05050505ffffffffffffff05050505ffffff ff0505ff050505ffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffff0505050505ffffffff0505ff050505ffffffff0505ff050505ffffffffffff05050505ffffffffff050505050505ffffffffffffffffffffffffffffff05050505 ffffffffffff05050505ffffffffff050505050505ffffffffffffffffffffffffff0505ff050505ffffffffff0505050505ffffffff0505ff050505ffffffffffff050505ff0505ffffffffff0505ffffffffffffff05050505ffffffffffffffffffffffffffffff050505050505ffffffffff05050505ffffffffffffff ffffffffffffffffff05050505ffffffffffffff0505ffffffffffff05050505ffffffffff0505ff050505ffffffff0505ff050505ffffffffffff05050505ffffffffff0505050505ffffffff0505ff0505050505ffffffff050505ff0505ffffffffffffffffffffffffff050505050505ffffffffff05050505ffffffff 0505ffffffff0505ffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffff ffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff050505ffff050505ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff0505ffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffff07ff070707f800ffffff05050505ffffffffff050505050505ffffffffffffffffffffffffffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffff ffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff 07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff05050505ffffffffff050505050505ffffffffffffffffffffffffffffffff0505050505ffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff0505ffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffff0505ffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff07 07f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff 070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707 f800ffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ff ffff0202ffffffffffffffff02020202ffffffffffff02020202ffffffff0202ff0202ff0202ffff0202ff0202ff0202ffffffff02020202ffffffff0202ffffffff0202ffffffffff02020202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02020202ffffffffffff020202ff0202ffffffff02020202ff0202ffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffffffff02020202ffffffff0202ffff ffff0202ffffffff020202ff0202ffffffffffffffffffffffffffff020202ff0202ffffffff02020202ffffffffffff02020202ffffffffffff02020202ffffffff0202ffffffff0202ffffffffffffffffffffffffffffff02020202ffffffffffffffffffffffffffffff02020202ffffffff0202ffffffff0202ffffff 020202020202ffffffffff02020202ffffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffffff020202020202ffffffff020202020202ffffff0202ff0202ff0202ffff0202ff0202ff0202ffffff020202020202ffffff0202ffffff ff0202ffffffff0202020202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff020202020202ffffffff02020202020202ffffff02 020202020202ffffffff0202020202ffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffffff020202020202ffffff0202ffffffff0202ffffff02020202020202ffffffffffffffffffffffffff02020202020202ffffff020202020202ffffffff020202020202ffffffff020202020202ffff ff0202ffffffff0202ffffffffffffffffffffffffffff0202020202ffffffffffffffffffffffffffff020202020202ffffff020202ffff020202ffffff020202020202ffffffff020202020202ffffffffff0202020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff02 02ffffffffffff020202ffff020202ffff020202ffff020202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff020202ffffffffffffff0202ffffffff0202ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff020202ffff020202ffff020202ffff020202ffff0202ffffff0202ffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff020202ffffffffffffff0202ffffffff02 02ffff020202ffff020202ffffffffffffffffffffffff020202ffff020202ffff020202ffff020202ffff020202ffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff020202ffffffffffffffff020202020202ffffffffffff02 02ffffffffff0202ffffffff0202ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff0202020202020202ffff0202ffffffff0202 ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ffffff ff02ffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff0202020202020202ffff0202ffffffff0202ffff0202ffffffff0202ffffffffffffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffff0202020202020202ffffffffffffff020202ffff0202 ffffffff0202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff0202020202020202ffffffff02020202ffffffffffffff0202ffffffffffffffffffff020202ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffff ffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff0202020202020202ffff0202ffffffff0202ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff0202020202020202ffff0202ffffffff0202ffff 0202ffffffff0202ffffffffffffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffff0202020202020202ffffff020202020202ffffff0202ffffffff0202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff0202020202020202ffffffffff0202ffffffffffffffff0202ffff ffffffff020202020202ffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff0202ffffffff0202ffff0202ffffffff0202ffffff ff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffffff0202ffff020202 02ffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff0202ffffffff0202ffff0202ffffffff0202ffff0202ffffffff0202ffffffffffffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffff0202ffffffff0202ffff020202ffffffffffffff0202ffffff ff0202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff0202ffffffff0202ffffffff02020202ffffffffffffff0202ffffffffff020202ffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffff ff0202ffffffffffffffff020202ffff020202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff020202ffff020202ffff020202ffff020202ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffffffff0202ffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff020202ffff020202ffff020202ffff020202ffff0202ff ffffff0202ffffffffffffffffffffffff020202ffff020202ffff020202ffff020202ffff020202ffff020202ffff0202ffffffff0202ffff020202ffff020202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff020202ffff020202ffffff020202020202ffffffffffff0202ffffffffff 0202ffffffff0202ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffffff020202020202ffffff0202020202020202ffff0202020202020202ffffff020202020202ffffff02020202020202ffffffff020202 020202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffffffffff020202ffffffffff 020202020202ffffffffffffffffffffffffffffffffffffffffffffff0202020202020202ffffff020202020202ffffff02020202020202ffffff0202ffffffff0202ffffffffffffffffffffffffff02020202020202ffffff020202020202ffffffff020202020202ffffffff020202020202ffffff02020202020202ff ffffffffffffffffffffffffff020202020202ffffffffffffffffffffffffffff020202020202ffffff020202ffff020202ffffff02020202ffffffffffff020202020202ffffffff020202020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff0202 ffffffffffffffffffff02020202ffffffff0202ff0202ff02ffffff0202ff0202ff02ffffffffff02020202ffffffff0202ff020202ffffffffff020202020202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffffffff0202ff0202ffffffff020202020202ffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff02ffffffffff02020202ffffffff0202ff020202ffffffff0202ffffffff 0202ffffffffffffffffffffffffffff020202ff0202ffffffff02020202ffffffffffff02020202ffffffffffff02020202ffffffff0202ff020202ffffffffffffffffffffffffffffff020202020202ffffffffffffffffffffffffffffff02020202ffffffff0202ffffffff0202ffffff02020202ffffffffffffff02 020202ffffffffff020202020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff020202ffff020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffff ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffff020202ffff020202ffffffffffffffffffffffffff0202ffffff0202ffffffff0202 ffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff0202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ff000000000000000000000000000000000000000007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff02020202ffffffffff02020202 0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffff0202ffffffffffff020202020202ffffffffffffffffffffffffffffff0202ff0202ffffffffff0202ffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff02020202ffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffff ffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffff02020202ffffffffffffffffffffffffffffffffff020202ffffffffffff0202ffffff ffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02 02ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff 07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707 07070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707070707 07070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707070707070707 07070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707070707070707070707 07070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffff000000000000ffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffff000000ff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff00000000000000ffff0000ff000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ff000000ffffffffff00000000000000ffffffff00000000ffffffffffff00000000ffffffffffff00000000ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000ffffffff000000000000ffffff0000ffffff000000ffffff000000000000ffffffff00000000000000ffffff000000000000ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffff0000000000000000ffff00000000000000ffff ffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff000000000000ffffff00000000000000ffffff0000000000000000ffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707070707070707070707070707 07f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0000ffffff000000ffff000000ffff000000ffff0000ffff000000ffffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffff000000ffff000000ffff000000ffffffffffffff0000ffffffff0000ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff0000ff000000ffffffff0000000000000000ffff0000ffffffff0000ffffffffffffff000000ffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffff ffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffff000000ffff0000ffffffff0000ffff0000ffffffff0000ffff0000ffffffffffffffff0000000000000000ffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f800 07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ff ffffff0000ffff0000ffffffff0000ffff0000000000ffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffff0000ffffffff0000ffff0000000000000000ffff0000ffffffffffffffff0000000000000000ffffff000000000000ffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff00000000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff000000ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff00000000000000ffff0000ffffffff0000ffff000000ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 00ffffffffffffff0000ffffffff0000ffffff00000000000000ffff0000ffffffffffffffff0000ffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff07 07f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff 0000ffff000000ffff000000ffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffffffffffffffff0000ffff000000ffff000000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffff000000000000ffffff00000000ffffffffffffff000000000000ffffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff000000000000ffffff00000000000000ffffffff000000000000ff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000 0000ffffff00000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07fffffffffffffffffffffffffffffffffff80007ff0707f800 ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ff ffffff00000000ffffffff0000000000ffffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff0000000000ffffffff0000ff000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ff000000ffffffffff0000000000ffffffffffff00000000ffffffffffff00000000ffffffffffff00000000ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffff000000ffffffffffffffffffffffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffff ffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000ffffffffff ffffffffffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffffff0000ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffff ffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07 ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707 f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07 0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffff000000000000ffffffff000000000000 ffffffffff00000000ffffffff0000ffffffff0000ffffffffffffffffffffffff0000ff000000ffffffffffff000000ff0000ffffffffff00000000ffffffffffff00000000ffffffffff00000000ffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ffff ffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f8 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffff0000ffffff0000ffffffffffffffffffffffffff00000000000000ffffffff00000000000000ffffffff0000000000ffffffffff 0000000000ffffffff000000000000ffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffff0000ffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffff000000ffffffffff0000ffffffffffffffff0000ffffffffff 000000ffff000000ffff0000ffff0000ffffffffffffffffffffffffffff000000ffff000000ffff000000ffff000000ffffffff0000ffffffffffffffff0000ffffffffffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffff000000ffff000000ffff0000ffff000000 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff0000ffffffffffffffff0000000000ffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffff0000ffffffffffffffff0000ff ffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff0000ff ffffffffffffff000000ffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffff0000ffffffffffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000000000ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff0000ffffffffffffffff00000000ffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffff0000ffffffffffffffff0000ffffffff ffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff000000ffff00 0000ffff0000ff0000ffffffffffffffffffffffffffffff000000ffff000000ffff0000ffffffff0000ffffffff0000ffffffffffffffff0000ffffffffffff000000ffff000000ffff000000ffff000000ffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffff00000000ffffffffffff000000000000ffffff0000ffff0000ffffffffffffffffffffffffffff00000000000000ffffff0000ffffffff0000ffffff000000000000ffffffff000000000000ffffffff 000000000000ffffff00000000000000ffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffff00000000ffffffffffffff00000000ffffff ff0000ffffff0000ffffffffffffffffffffffffff0000ff000000ffffffff0000ffffffff0000ffffff000000000000ffffffff000000000000ffffffffff00000000ffffffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000000000ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff000000ffff000000ffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffff0000ffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffff000000ffff000000ffff0000ff000000ffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffff0000 ffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff000000000000ffffff0000ffff000000ffffffffffff0000ffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffff00000000ffffffffffffffff0000ffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffff0000ffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff00000000ffffffff0000ffffff0000ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff