"M:System.Drawing.Design.ToolboxService.CreateItemContainer(System.Windows.Forms.IDataObject)">
      <summary>Creates a new toolbox item container from a saved data object.</summary>
      <returns>A new toolbox item container.</returns>
      <param name="dataObject">A data object containing saved toolbox data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataObject" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.FilterChanged">
      <summary>Occurs when the toolbox service detects that the active designer’s toolbox item filter has changed.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetItemContainers">
      <summary>Returns an <see cref="T:System.Collections.IList" /> containing all items on the toolbox.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> containing all items on the toolbox.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetItemContainers(System.String)">
      <summary>Returns an <see cref="T:System.Collections.IList" /> containing all items in a given category.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> containing all items in the category specified by <paramref name="categoryName" />.</returns>
      <param name="categoryName">The category for which to retrieve the item container list.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItem(System.Type)">
      <summary>Returns a toolbox item for a given type.</summary>
      <returns>A toolbox item associated with the given type, or null if the type has no corresponding toolbox item.</returns>
      <param name="toolType">The type of component for which to retrieve the toolbox item.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolType" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItem(System.Type,System.Boolean)">
      <summary>Returns a toolbox item for a given type.</summary>
      <returns>A toolbox item associated with the given type, or null if the type has no corresponding toolbox item.</returns>
      <param name="toolType">The type of component for which to retrieve the toolbox item.</param>
      <param name="nonPublic">true to search for non-public constructors on the type; false to search for public constructors.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolType" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItems(System.Reflection.Assembly,System.String)">
      <summary>Returns an <see cref="T:System.Collections.ICollection" /> containing all the toolbox items in the given assembly.</summary>
      <returns>A collection containing all the toolbox items in the given assembly.</returns>
      <param name="a">The assembly to enumerate.</param>
      <param name="newCodeBase">A string that is the URL location of the assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="a" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItems(System.Reflection.Assembly,System.String,System.Boolean)">
      <summary>Returns an <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Drawing.Design.ToolboxItem" /> objects for the given assembly.</summary>
      <returns>A collection containing all the toolbox items in the assembly represented by the given assembly name.</returns>
      <param name="a">The assembly to enumerate.</param>
      <param name="newCodeBase">A string that is the URL location of the assembly.</param>
      <param name="throwOnError">true to throw an exception on error; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="a" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItems(System.Reflection.AssemblyName)">
      <summary>Returns an <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Drawing.Design.ToolboxItem" /> objects for the given assembly.</summary>
      <returns>A collection containing all the toolbox items in the assembly represented by the given assembly name.</returns>
      <param name="an">An assembly name from which to load an assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="an" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItems(System.Reflection.AssemblyName,System.Boolean)">
      <summary>Returns an <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Drawing.Design.ToolboxItem" /> objects for the given assembly.</summary>
      <returns>A collection containing all the toolbox items in the assembly represented by the given assembly name.</returns>
      <param name="an">An assembly name from which to load an assembly.</param>
      <param name="throwOnError">true to throw an exception on error; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="an" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.IsItemContainer(System.Windows.Forms.IDataObject,System.ComponentModel.Design.IDesignerHost)">
      <summary>Returns a value indicating whether the given data object represents an item container.</summary>
      <returns>true if the given data object represents an item container; otherwise, false.</returns>
      <param name="dataObject">The data object to examine for the presence of a toolbox item container.</param>
      <param name="host">An optional designer host. This parameter can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataObject" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.IsItemContainerSupported(System.Drawing.Design.ToolboxItemContainer,System.ComponentModel.Design.IDesignerHost)">
      <summary>Determines whether the toolbox item container is supported by the given designer host.</summary>
      <returns>true if the toolbox item container is supported by the given designer host; otherwise, false.</returns>
      <param name="container">The toolbox item container.</param>
      <param name="host">The given designer host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> or <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.Refresh">
      <summary>Refreshes the state of the toolbox items.</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.SelectedCategory">
      <summary>Gets or sets the name of the currently selected category.</summary>
      <returns>A string containing the name of the currently selected category.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.SelectedItemContainer">
      <summary>Gets or sets the currently selected item container.</summary>
      <returns>The item container for the currently selected toolbox item, or null if no item is selected.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.SelectedItemContainerUsed">
      <summary>Receives a call from the toolbox service when a user reports that a selected toolbox item has been used.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.SetCursor">
      <summary>Sets the current application's cursor to a cursor that represents the currently selected tool.</summary>
      <returns>true if there is an item selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#ComponentModel#Design#IComponentDiscoveryService#GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>Gets the list of available component types.</summary>
      <returns>The list of available component types.</returns>
      <param name="designerHost">The designer host providing design-time services.</param>
      <param name="baseType">The base type specifying the components to retrieve. Can be null.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)" /> method.</summary>
      <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> that can create a component when the toolbox item is invoked.</param>
      <param name="format">The data format that the creator handles.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)" /> method.</summary>
      <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> that can create a component when the toolbox item is invoked.</param>
      <param name="format">The data format that the creator handles.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that represents the designer host to associate with the creator.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)" /> method.</summary>
      <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)" />method.</summary>
      <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name="category">The toolbox item category to add the toolbox item to.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)" /> method.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)" /> method.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name="category">The toolbox item category to add the <see cref="T:System.Drawing.Design.ToolboxItem" /> to.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#CategoryNames">
      <summary>For a description of this member, see the <see cref="P:System.Drawing.Design.IToolboxService.CategoryNames" /> property.</summary>
      <returns>A <see cref="T:System.Drawing.Design.CategoryNameCollection" /> containing the tool categories.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#DeserializeToolboxItem(System.Object)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)" /> method.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> created from deserialization.</returns>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)" /> method.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> created from deserialization.</returns>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to associate with this <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetSelectedToolboxItem">
      <summary>For a description of this member, see the <see cref="Overload:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem" /> method.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> that is currently selected, or null if no toolbox item is currently selected.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)" /> method.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> that is currently selected, or null if no toolbox item is currently selected.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that the selected tool must be associated with for it to be returned.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetToolboxItems">
      <summary>Gets the entire collection of toolbox items from the toolbox.</summary>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.</summary>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items that are associated with the specified designer host.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the toolbox items to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetToolboxItems(System.String)">
      <summary>Gets a collection of toolbox items from the toolbox that match the specified category.</summary>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items that are associated with the specified category.</returns>
      <param name="category">The toolbox item category from which to retrieve all the toolbox items.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.</summary>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items that are associated with the specified category and designer host.</returns>
      <param name="category">The toolbox item category to retrieve the toolbox items from.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the toolbox items to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="category " />or <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#IsSupported(System.Object,System.Collections.ICollection)">
      <summary>Gets a value indicating whether the specified object, which represents a serialized toolbox item, matches the specified attributes.</summary>
      <returns>true if the object matches the specified attributes; otherwise, false.</returns>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name="filterAttributes">An <see cref="T:System.Collections.ICollection" /> that contains the attributes to test the serialized object for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializedObject" /> or <paramref name="filterAttributes" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a value indicating whether the specified object, which represents a serialized toolbox item, can be used by the specified designer host.</summary>
      <returns>true if the specified object is compatible with the specified designer host; otherwise, false.</returns>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to test for support for the <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializedObject" /> or <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#IsToolboxItem(System.Object)">
      <summary>Gets a value indicating whether the specified object is a serialized toolbox item.</summary>
      <returns>true if the object contains a toolbox item object; otherwise, false.</returns>
      <param name="serializedObject">The object to inspect.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a value indicating whether the specified object is a serialized toolbox item byusing the specified designer host.</summary>
      <returns>true if the object contains a toolbox item object; otherwise, false.</returns>
      <param name="serializedObject">The object to inspect.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is making this request.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#Refresh">
      <summary>Refreshes the state of the toolbox items.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#RemoveCreator(System.String)">
      <summary>Removes a previously added toolbox item creator of the specified data format.</summary>
      <param name="format">The data format of the creator to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.</summary>
      <param name="format">The data format of the creator to remove.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the creator to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Removes the specified toolbox item from the toolbox.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to remove from the toolbox.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolboxItem" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>Removes the specified toolbox item from the toolbox.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to remove from the toolbox.</param>
      <param name="category">The toolbox item category to remove the <see cref="T:System.Drawing.Design.ToolboxItem" /> from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolboxItem" /> or <paramref name="category" /> is null.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SelectedCategory">
      <summary>For a description of this member, see the <see cref="P:System.Drawing.Design.IToolboxService.SelectedCategory" /> property.</summary>
      <returns>The name of the currently selected category.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SelectedToolboxItemUsed">
      <summary>Notifies the toolbox service that the selected tool has been used.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Gets a serializable object that represents the specified toolbox item.</summary>
      <returns>An object that represents the specified <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolboxItem" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SetCursor">
      <summary>Sets the current application's cursor to a cursor that represents the currently selected tool.</summary>
      <returns>true if the cursor is set by the currently selected tool; false if there is no tool selected and the cursor is set to the standard Windows cursor.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Selects the specified toolbox item.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.UnloadToolboxItems">
      <summary>Unloads any assemblies that were locked as a result of calling the <see cref="Overload:System.Drawing.Design.ToolboxService.GetToolboxItems" /> method.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.DirectoryServices.Protocols.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.DirectoryServices.Protocols</name>
  </assembly>
  <members>
    <member name="T:System.DirectoryServices.Protocols.AddRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> class adds an entry to the directory.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AddRequest.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.AddRequest.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AddRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttribute[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.AddRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttribute[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> class using the specified distinguished name and attributes.</summary>
      <param name="distinguishedName">The <paramref name="distinguishedName" /> of the new object in the directory.</param>
      <param name="attributes">An array, of  <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> objects, that contains the attributes for this object. This parameter may be null.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AddRequest.#ctor(System.String,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.AddRequest.#ctor(System.String,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> class using the specified <paramref name="distinguishedName" /> and the object class.</summary>
      <param name="distinguishedName">The <paramref name="distinguishedName" /> of the new object in the directory.</param>
      <param name="objectClass">The object class for this object. If this parameter is null, an exception is thrown.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="objectClass" /> parameter contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.AddRequest.Attributes">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.AddRequest.Attributes" /> property contains a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> of attribute-value pairs for the object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> of attribute-value pairs for the object.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.AddRequest.DistinguishedName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.AddRequest.DistinguishedName" /> property contains the distinguished name of the object.</summary>
      <returns>The distinguished name of the object.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AddRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.AddRequest.ToXmlNode(System.Xml.XmlDocument)" /> method creates an XML node from the specified  <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The resulting <see cref="T:System.Xml.XmlElement" /> object.</returns>
      <param name="doc">A <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.AddResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.AddResponse" /> class is returned by <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> as a response to <see cref="T:System.DirectoryServices.Protocols.AddRequest" />.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.AsqRequestControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> class creates an attribute scoped query (ASQ) control. This control is used with a search request to force the query to be based on a specific DN-valued attribute.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AsqRequestControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.AsqRequestControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AsqRequestControl.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.AsqRequestControl.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> class using the specified attribute name.</summary>
      <param name="attributeName">The attribute name on which the query is based.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.AsqRequestControl.AttributeName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.AsqRequestControl.AttributeName" /> property gets or sets the attribute name on which the search query is based.</summary>
      <returns>The attribute name on which the search query is based.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AsqRequestControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.AsqRequestControl.GetValue" /> method returns the binary representation of the <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" />.</summary>
      <returns>The binary representation of the <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" />.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.AsqResponseControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.AsqResponseControl" /> class is returned in a <see cref="T:System.DirectoryServices.Protocols.SearchResponse" /> object as a response to a <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> query.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.AsqResponseControl.Result">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.AsqResponseControl.Result" /> property gets a <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> object with result data.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> object with result data.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.AuthType">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.AuthType" /> enumeration is used to specify the authentication method to use on a connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Anonymous">
      <summary>Indicates that the connection should be made without passing credentials. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Basic">
      <summary>Indicates that basic authentication should be used on the connection. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Negotiate">
      <summary>Indicates that Microsoft Negotiate authentication should be used on the connection. The value is equal to 2.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Ntlm">
      <summary>Indicates that Windows NT Challenge/Response (NTLM) authentication should be used on the connection. The value is equal to 3.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Digest">
      <summary>Indicates that the Digest Access Authentication should be used on the connection. The value is equal to 4.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Sicily">
      <summary>Indicates a negotiation mechanism (Sicily) will be used to choose MSN, DPA or NTLM.  This should be used for LDAPv2 servers only. The value is equal to 5.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Dpa">
      <summary>Indicates that Distributed Password Authentication (DPA) should be used on the connection. The value is equal to 6.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Msn">
      <summary>Indicates that it is authenticated by “Microsoft Network Authentication Service”. The value is equal to 7.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.External">
      <summary>Indicates an external method will be used to authenticate the connection. The value is equal to 8.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Kerberos">
      <summary>Indicates that Kerberos authentication should be used on the connection. The value is equal to 9.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.BerConversionException">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> class is an exception thrown when converting data using a <see cref="T:System.DirectoryServices.Protocols.BerConverter" /> object.          </summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConversionException.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.BerConversionException.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> class.          </summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> class using the specified serialization data and streaming contextual data.          </summary>
      <param name="info">The serialized object data about the exception thrown. </param>
      <param name="context">The contextual data about the source or destination. </param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> class using the specified message.          </summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> class using the specified message and inner exception.          </summary>
      <param name="message">The message displayed when the exception is thrown.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.BerConverter">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.BerConverter" /> class encodes and decodes structured data using basic encoding rules (BER).</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" /> method decodes a binary representation of the data, using BER, to retrieve structured data.</summary>
      <returns>The decoded data.</returns>
      <param name="format">The format string.</param>
      <param name="value">An array of BER data.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="format" /> parameter contains a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="format" /> parameter contains an undefined character.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.BerConversionException">The underlying decoding fails. The decoding rules include the following.CodeCorresponding Result'{' '}' '[' ']' 'n' 'x'No corresponding result'i' 'e'int'b'bool'a'string'O'byte[]'B'byte[] containing bit strings'v'string[]'V'byte[][]</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" /> method encodes structured data, using BER, to retrieve a binary representation of the data.</summary>
      <returns>An array of BER-encoded data.</returns>
      <param name="format">The format string.</param>
      <param name="value">An array of formatted data.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.CompareRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> class determines whether the directory object holds the specified value for the attribute.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> class.          </summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttribute)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> class using the specified distinguished name and attributes.          </summary>
      <param name="distinguishedName">The distinguished name of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object to compare.</param>
      <param name="assertion">A <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assertion" /> contains a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertion" /> must contain exactly one value.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.Byte[])" /> constructor creates an instance of <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> using the specified distinguished name, attribute, and attribute value.          </summary>
      <param name="distinguishedName">The distinguished name of the object                       to compare.</param>
      <param name="attributeName">The name of the attribute to compare.</param>
      <param name="value">The value to compare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeName" /> or <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> class using the specified distinguished name, attribute, and attribute value.          </summary>
      <param name="distinguishedName">The distinguished name of the object to compare.</param>
      <param name="attributeName">The name of the attribute to compare.</param>
      <param name="value">The value to compare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeName" /> or <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.Uri)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.Uri)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> class using the specified distinguished name, attribute, and attribute value.          </summary>
      <param name="distinguishedName">The distinguished name of the object                       to compare.</param>
      <param name="attributeName">The name of the attribute to compare.</param>
      <param name="value">The value to compare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeName" /> or <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.CompareRequest.Assertion">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.CompareRequest.Assertion" /> property gets the attribute/value pair used to compare.          </summary>
      <returns>The attribute/value pair used to compare.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.CompareRequest.DistinguishedName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.CompareRequest.DistinguishedName" /> property gets or sets the distinguished name of the object to compare.          </summary>
      <returns>The distinguished name of the object to compare.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CompareRequest.ToXmlNode(System.Xml.XmlDocument)" /> method creates an XML node from the specified <see cref="T:System.Xml.XmlDocument" /> object.          </summary>
      <returns>The resulting <see cref="T:System.Xml.XmlElement" /> object.</returns>
      <param name="doc">A <see cref="T:System.Xml.XmlDocument" /> object.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object must contain exactly one value.</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.CompareResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.CompareResponse" /> class is returned by <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> as a response to <see cref="T:System.DirectoryServices.Protocols.CompareRequest" />.          </summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.CrossDomainMoveControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" /> class is used with a <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> object to move an LDAP object from one domain to another.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" /> class using the specified target domain.</summary>
      <param name="targetDomainController">The DNS name of the destination domain controller.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue" /> method returns the binary representation of <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" />.</summary>
      <returns>The binary representation of <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" />.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController" /> property gets or sets the DNS name of the destination domain controller (DC).</summary>
      <returns>The DNS name of the destination DC.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DeleteRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> class deletes an entry from the directory.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DeleteRequest.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DeleteRequest.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DeleteRequest.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DeleteRequest.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> class using the specified distinguished name.</summary>
      <param name="distinguishedName">The distinguished name of the object to delete.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DeleteRequest.DistinguishedName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DeleteRequest.DistinguishedName" /> property gets or sets the distinguished name of object to delete.</summary>
      <returns>The distinguished name of object to delete.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DeleteRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DeleteRequest.ToXmlNode(System.Xml.XmlDocument)" /> method creates an XML node from the specified <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The resulting <see cref="T:System.Xml.XmlElement" /> object.</returns>
      <param name="doc">An <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DeleteResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DeleteResponse" /> class is returned by <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> as a response to <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" />.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DereferenceAlias">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DereferenceAlias" /> enumeration specifies the process by which aliases are dereferenced.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DereferenceAlias.Never">
      <summary>Does not dereference aliases. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DereferenceAlias.InSearching">
      <summary>Dereferences aliases when searching subordinates of the base object, but not when locating the base itself. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DereferenceAlias.FindingBaseObject">
      <summary>Dereferences aliases when locating the base object, but not when searching its subordinates. The value is equal to 2.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DereferenceAlias.Always">
      <summary>Dereferences aliases when both searching subordinates and locating the base object of the search. The value is equal to 3.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DereferenceConnectionCallback">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DereferenceConnectionCallback" /> delegate dereferences a connection that is no longer required. The connection was probably established through a successful call to the <see cref="T:System.DirectoryServices.Protocols.QueryForConnectionCallback" /> or <see cref="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback" /> delegate.</summary>
      <param name="primaryConnection">An <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the primary connection.</param>
      <param name="connectionToDereference">An <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the connection to dereference.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttribute">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> class enables access to the attribute values.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> class using the specified attribute name and value.</summary>
      <param name="name">The attribute name.</param>
      <param name="value">The attribute value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> class using the specified attribute name and values.</summary>
      <param name="name">The attribute name.</param>
      <param name="values">An array of values for the attribute.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="value" /> contains a null reference (<paramref name="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">An element of <paramref name="values" /> is not of type string, byte[], or Uri.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> class using the specified attribute name and value.</summary>
      <param name="name">The attribute name.</param>
      <param name="value">The attribute value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> class using the specified attribute name and value.</summary>
      <param name="name">The attribute name.</param>
      <param name="value">The attribute value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])" /> method adds the specified value to this attribute.</summary>
      <returns>The index at which the value has been added.</returns>
      <param name="value">The value to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)" /> method adds the specified value to this attribute.          </summary>
      <returns>The index at which the value has been added.</returns>
      <param name="value">The value to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)" /> method adds the specified value to this attribute.</summary>
      <returns>The index at which the value has been added.</returns>
      <param name="value">The value to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])" /> method adds an array of values to the attribute.</summary>
      <param name="values">The values to add.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> is not a  byte[][], string[], or Uri[].</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Values" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)" /> method determines if the attribute contains the specified value.          </summary>
      <returns>true if this attribute contains the value or false if it does not.</returns>
      <param name="value">The value for which to search.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</param>
      <param name="index">The zero-based index of <paramref name="array" /> where the copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> contains a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">This exception can occur under one of the following conditions:<paramref name="array" /> is multidimensional<paramref name="index" /> is equal to, or greater than, the length of <paramref name="array" />The number of elements in the source <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> is greater than the space available from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)" /> method returns all values of the specified type.</summary>
      <returns>An array of <see cref="T:System.Object" /> objects that contain the values.</returns>
      <param name="valuesType">A <see cref="T:System.Type" /> object that specifies the type of values to return.</param>
      <exception cref="T:System.NotSupportedException">A value cannot be converted to <paramref name="valuesType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="valuesType" /> must be either string or byte.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)" /> method returns the zero-based index of the first occurrence of the specified  <see cref="T:System.Object" /> in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> collection.          </summary>
      <returns>The index value of the specified <see cref="T:System.Object" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> for which the value is returned.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])" /> method inserts the specified <paramref name="value" /> into the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> collection at the specified <paramref name="index" />.</summary>
      <param name="index">The index in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> collection at which to insert the <paramref name="value" />.</param>
      <param name="value">The value to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or index is greater than the number of elements in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)" /> method inserts the specified <paramref name="value" /> into the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> collection at the specified <paramref name="index" />.          </summary>
      <param name="index">The index in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> collection at which to insert the <paramref name="value" />.</param>
      <param name="value">The value to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or <paramref name="index" /> is greater than  the number of elements in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)" /> method inserts the specified <paramref name="value" /> into the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> collection at the specified <paramref name="index" />.</summary>
      <param name="index">The index in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> collection at which to insert the <paramref name="value" />.</param>
      <param name="value">The value to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or <paramref name="index" /> is greater than the number of elements in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)" /> property gets or sets the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object at the specified index.</returns>
      <param name="index">The zero-based index value at which the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object is found.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> to set is an invalid type. The valid types are byte[], string, or URI.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttribute.Name">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryAttribute.Name" /> property contains the attribute name.</summary>
      <returns>The attribute name.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)" /> method verifies that <paramref name="value" /> is a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</summary>
      <param name="value">The <see cref="T:System.Object" /> to evaluate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> must be either a string, byte[], or URI.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)" /> method removes the first occurrence of the specified <paramref name="value" /> from the list of attributes.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> contains a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> class contains a collection of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Add(System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Add(System.DirectoryServices.Protocols.DirectoryAttribute)" /> method adds a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object to the collection.</summary>
      <returns>The zero-based index in the collection where the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> was added.</returns>
      <param name="attribute">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object to add.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="attribute" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttribute[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttribute[])" /> method adds an array of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> objects to the collection.</summary>
      <param name="attributes">An array of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributes" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">A member of <paramref name="attributes" /> is a null reference (Nothing in Visual Basic) or a member of <paramref name="attributes" /> specifies a modification operation other than Add.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeCollection)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeCollection)" /> method adds a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> object to the current collection.</summary>
      <param name="attributeCollection">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> object to add to this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeCollection" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Contains(System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Contains(System.DirectoryServices.Protocols.DirectoryAttribute)" /> method determines whether this <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> object contains a specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</summary>
      <returns>true if the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> is part of the collection; false otherwise.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object for which to search.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttribute[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttribute[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> object.</param>
      <param name="index">The zero-based index of <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryAttribute)" /> method returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object in the  <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" />.</summary>
      <returns>The index value of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object for which the index is returned.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryAttribute)" /> method inserts the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object into the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> at the specified <paramref name="index" />.</summary>
      <param name="index">The zero-based index point, in the collection, at which to insert the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</param>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object to be inserted into the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is a null reference (Nothing in Visual Basic) or <paramref name="value" /> specifies a modification operation other than Add.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or <paramref name="index" /> is greater than  the number of elements in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> object.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Item(System.Int32)" /> property contains the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object at the specified index.</returns>
      <param name="index">The index value of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.OnValidate(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.OnValidate(System.Object)" /> method verifies that <paramref name="value" /> is a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object or specifies an add operation.</summary>
      <param name="value">The object to evaluate.</param>
      <exception cref="T:System.ArgumentException">This exception can occur under one of the following conditions:<paramref name="value" /> is a null reference (Nothing in Visual Basic).<paramref name="value" /> is not a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Remove(System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Remove(System.DirectoryServices.Protocols.DirectoryAttribute)" /> method removes the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object to remove.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttributeModification">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> class enables modification of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> values.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModification.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModification.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> class.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttributeModification.Operation">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryAttributeModification.Operation" /> property specifies one of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation" /> modifications to perform.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation" /> modification to perform.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> class contains a collection of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Add(System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Add(System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> method adds a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object to the collection.</summary>
      <returns>The zero-based index in the collection where the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> was added.</returns>
      <param name="attribute">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> to add.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="attribute" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeModification[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeModification[])" /> method adds an array of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> objects to the collection.</summary>
      <param name="attributes">An array of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> objects to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributes" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">One of the members of <paramref name="attributes" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection)" /> method adds a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> object to the current collection.</summary>
      <param name="attributeCollection">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> collection to add to this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeCollection" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Contains(System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Contains(System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> method determines whether this <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> object contains a specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object.</summary>
      <returns>true if the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> is part of the collection; false otherwise.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object for which to search.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttributeModification[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttributeModification[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> object.</param>
      <param name="index">The zero-based index of <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> method returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" />.</summary>
      <returns>The index value of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> object for which the index is returned.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> method inserts a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object into the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> collection at the specified index.</summary>
      <param name="index">The zero-based index in the collection at which to insert the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object.</param>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object to insert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or <paramref name="index" /> is greater than the number of elements in the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> object.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Item(System.Int32)" /> property contains the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object at the specified <paramref name="index" />.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object at the specified <paramref name="index" />.</returns>
      <param name="index">The index value of the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.OnValidate(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.OnValidate(System.Object)" /> method verifies that <paramref name="value" /> is a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object.</summary>
      <param name="value">The object to evaluate.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Remove(System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Remove(System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> method removes the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> object to remove.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation" /> enumeration specifies the operation to perform on a directory attribute.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectoryAttributeOperation.Add">
      <summary>Add an attribute value. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectoryAttributeOperation.Delete">
      <summary>Delete an attribute value. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectoryAttributeOperation.Replace">
      <summary>Replace an attribute value. The value is equal to 2.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryConnection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> class is an abstract class and cannot be instantiated. Use the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> or <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> classes to connect to a directory server.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor" /> constructor initializes a new instance of a <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> class.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> property specifies one or more client certificates to send for authentication.</summary>
      <returns>One or more client certificates to send for authentication.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential" /> property specifies alternate credentials for the connection object.</summary>
      <returns>Alternate credentials for the connection object.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory" /> property specifies the domain or the server to which the connection should be made.</summary>
      <returns>The domain or the server to which the connection should be made.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> method sends a single directory operation to the server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object that contains the server response to the request operation. The returned response object may be different than the requested object if the server returns a different response. </returns>
      <param name="request">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object that contains the request.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout" /> property contains the length of time, in seconds, before the connection times out.</summary>
      <returns>The length of time, in seconds, before the connection times out.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> class specifies extension data for various LDAP operations.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControl.#ctor(System.String,System.Byte[],System.Boolean,System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControl.#ctor(System.String,System.Byte[],System.Boolean,System.Boolean)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> class using the specified   values for the type, value, criticality, and ServerSide properties.</summary>
      <param name="type">The control type.</param>
      <param name="value">The value associated with the control.</param>
      <param name="isCritical">Specifies if the control is critical. The default is true.</param>
      <param name="serverSide">Specifies if this is a server-side control.  The default is true. false specifies a client-side control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControl.GetValue" /> method returns the data associated with the control.</summary>
      <returns>The data associated with the control.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryControl.IsCritical">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryControl.IsCritical" /> property specifies whether the control is critical.</summary>
      <returns>true if the control is critical; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryControl.ServerSide">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryControl.ServerSide" /> property specifies whether this is a server-side control.</summary>
      <returns>true if the control is a server-side control. false specifies a client-side control.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryControl.Type">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryControl.Type" /> property contains the object identifier (OID) of the control.</summary>
      <returns>The OID of the control.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryControlCollection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> class manages a collection of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Add(System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Add(System.DirectoryServices.Protocols.DirectoryControl)" /> method adds a new <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object to the collection.</summary>
      <returns>The index of the <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> at which the <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object has been added.</returns>
      <param name="control">The <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.AddRange(System.DirectoryServices.Protocols.DirectoryControl[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.AddRange(System.DirectoryServices.Protocols.DirectoryControl[])" /> method adds an array of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects to the collection.</summary>
      <param name="controls">An array of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controls" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">A member of the array is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.AddRange(System.DirectoryServices.Protocols.DirectoryControlCollection)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.AddRange(System.DirectoryServices.Protocols.DirectoryControlCollection)" /> method adds a <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> object to the current collection.</summary>
      <param name="controlCollection">The <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> object to add to this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controlCollection" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Contains(System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Contains(System.DirectoryServices.Protocols.DirectoryControl)" /> method determines whether this <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> object contains a specified <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object.</summary>
      <returns>true if the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object is part of the collection; false, otherwise.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object for which to search.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryControl[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryControl[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> object.</param>
      <param name="index">The zero-based index of <paramref name="array" /> where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional-or-The number of elements in the source <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" />  cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryControl)" /> method returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object in the <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" />.</summary>
      <returns>The index value of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object for which the index is returned.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryControl)" /> method inserts the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object into the <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> at the specified index.</summary>
      <param name="index">The index in the collection at which to insert the <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object.</param>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object to be inserted into the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or <paramref name="index" /> is greater than the number of elements in the <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> object.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> is read-only, or <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryControlCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryControlCollection.Item(System.Int32)" /> property contains the <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object at the specified index.</summary>
      <returns>Contains the <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object at the specified index.</returns>
      <param name="index">The index value of the <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object. </param>
      <exception cref="T:System.ArgumentNullException">There was an attempt to set the property to null.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.OnValidate(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.OnValidate(System.Object)" /> method verifies that <paramref name="value" /> is a <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object.          </summary>
      <param name="value">The object to evaluate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Remove(System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Remove(System.DirectoryServices.Protocols.DirectoryControl)" /> method removes the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object to remove.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> is read-only, or <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> has a fixed size.</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryException">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> class is an abstract class used as the base class for all <see cref="N:System.DirectoryServices.Protocols" /> exceptions.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryException.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryException.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> class using the specified serialization information and streaming contextual information.</summary>
      <param name="info">The serialized object data about the exception being thrown. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> class using the specified parameter.</summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> class using the specified parameters.</summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryIdentifier">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryIdentifier" /> class is an abstract class that identifies the target to connect to.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryIdentifier.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryIdentifier.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryIdentifier" /> class.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryNotificationControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryNotificationControl" /> class is a directory control used with an extended LDAP asynchronous search function to register the client to be notified when changes are made to an object in the Active Directory Domain Services.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryNotificationControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryNotificationControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryNotificationControl" /> class.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryOperation">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryOperation" /> class is an abstract class used as a base for request and response elements.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperation.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperation.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryOperation" /> object.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryOperationException">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> class is an exception thrown by the <see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> method to indicate that the server returned a <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object with an error.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> class using the specified response object.</summary>
      <param name="response">The <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object returned by the server.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> object using the specified response object and message.</summary>
      <param name="response">The <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object returned by the server.</param>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> class using the specified response object, message, and inner exception. </summary>
      <param name="response">The <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object returned by the server.</param>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> class using the specified serialization information and streaming context.</summary>
      <param name="info">Data required to serialize the parameter.</param>
      <param name="context">The source and destination of the serialized stream associated with the parameter.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> class using the specified message.</summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> class using the specified message and inner exception.</summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data required to serialize the parameter.</summary>
      <param name="serializationInfo">Data required to serialize the parameter.</param>
      <param name="streamingContext">The source and destination of the serialized stream associated with the parameter.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryOperationException.Response">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryOperationException.Response" /> property specifies the <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object returned by the server that contains an error.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object returned by the server that contains an error.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> class is the base class for request related classes, like the <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> and <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> classes.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryRequest.Controls">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryRequest.Controls" /> property contains a <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryRequest.RequestId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryRequest.RequestId" /> property contains the <paramref name="requestID" /> specified in the request.</summary>
      <returns>The <paramref name="requestID" /> specified in the request.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirectoryRequest.ToXmlNode(System.Xml.XmlDocument)" /> method creates an XML node from the specified <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The created <see cref="T:System.Xml.XmlElement" />.</returns>
      <param name="doc">The <see cref="T:System.Xml.XmlDocument" /> to represent as an XML element.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> class is the base class for request response classes, like the <see cref="T:System.DirectoryServices.Protocols.SearchResponse" /> and <see cref="T:System.DirectoryServices.Protocols.AddResponse" /> classes.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.Controls">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.Controls" /> property contains an array of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects returned by the server.</summary>
      <returns>An array of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects returned by the server.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.ErrorMessage">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.ErrorMessage" /> property contains the error message, if any, for this operation.</summary>
      <returns>The error message, if any, for this operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.MatchedDN">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.MatchedDN" /> property contains the matched distinguished name returned by the server.</summary>
      <returns>The matched distinguished name returned by the server.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.Referral">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.Referral" /> property contains the server referrals.</summary>
      <returns>The server referrals.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.RequestId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.RequestId" /> property contains the Request Identifier.</summary>
      <returns>The Request Identifier.</returns>
      <exception cref="T:System.NotSupportedException">User attempted to set the property value.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.ResultCode">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.ResultCode" /> property contains the result code of the operation.</summary>
      <returns>The result code of the operation.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectorySynchronizationOptions">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirectorySynchronizationOptions" /> enumeration specifies the behavior of the search in a <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.None">
      <summary>No options used. The value equals 0 or 0x0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.ObjectSecurity">
      <summary>If this option is used, the caller requires no rights, but can only view objects and attributes that are accessible to the caller. If this option is not used, the caller must have the replicate changes right. The value equals 1 or 0x1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.ParentsFirst">
      <summary>Return parents before children, when parents would otherwise appear later in the replication stream. The value equals 2048 or 0x800.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.PublicDataOnly">
      <summary>Do not return private data in search results. The value equals 8192 or 0x2000.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.IncrementalValues">
      <summary>If this option is used, only changed values are returned. If this option is not used, all values, up to a server-specified limit, in a multi-valued attribute, are returned when a value changes. The value equals 2147483648 or 0x80000000.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirSyncRequestControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> class is a directory control that enables the application to search the directory for objects that have changed since a previous state.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> class using the specified parameter.</summary>
      <param name="cookie">An opaque structure used by the server. It is updated by the directory during each <see cref="T:System.DirectoryServices.Protocols.SearchRequest" />, which enables the control to incrementally read changes from the directory.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[],System.DirectoryServices.Protocols.DirectorySynchronizationOptions)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[],System.DirectoryServices.Protocols.DirectorySynchronizationOptions)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> class using the specified parameters.</summary>
      <param name="cookie">An opaque structure used by the server. It is updated by the directory during each <see cref="T:System.DirectoryServices.Protocols.SearchRequest" />, which enables the control to incrementally read changes from the directory.</param>
      <param name="option">Specifies the behavior of the search. This parameter can be zero or a combination of one or more of the values of <see cref="T:System.DirectoryServices.Protocols.DirectorySynchronizationOptions" />.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[],System.DirectoryServices.Protocols.DirectorySynchronizationOptions,System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[],System.DirectoryServices.Protocols.DirectorySynchronizationOptions,System.Int32)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> class using the specified parameters.</summary>
      <param name="cookie">An opaque structure used by the server. It is updated by the directory during each <see cref="T:System.DirectoryServices.Protocols.SearchRequest" />, which enables the control to incrementally read changes from the directory.</param>
      <param name="option">Specifies the behavior of the search. This parameter can be zero or a combination of one or more of the values of <see cref="T:System.DirectoryServices.Protocols.DirectorySynchronizationOptions" />. </param>
      <param name="attributeCount">The maximum number of attributes to return. The default is 1048576.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncRequestControl.AttributeCount">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirSyncRequestControl.AttributeCount" /> property specifies the maximum number of attributes to return.</summary>
      <returns>The maximum number of attributes to return.</returns>
      <exception cref="T:System.ArgumentException">There was an attempt to set a value less than zero.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncRequestControl.Cookie">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirSyncRequestControl.Cookie" /> property contains an opaque structure used by the server.</summary>
      <returns>An opaque structure used by the server.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.GetValue" /> method returns the data associated with this control.</summary>
      <returns>The data associated with this control.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncRequestControl.Option">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirSyncRequestControl.Option" /> property specifies the behavior of the search.</summary>
      <returns>The behavior of the search.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirSyncResponseControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DirSyncResponseControl" /> class is a directory control used to pass DirSyncRequest information from the server to the client.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncResponseControl.Cookie">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirSyncResponseControl.Cookie" /> property contains an opaque structure returned by the directory.</summary>
      <returns>An opaque structure returned by the directory.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncResponseControl.MoreData">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirSyncResponseControl.MoreData" /> property specifies whether there is more data to return.</summary>
      <returns>true if there is more data; false, otherwise.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncResponseControl.ResultSize">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DirSyncResponseControl.ResultSize" /> property specifies the size of the result.</summary>
      <returns>The size of the result.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DomainScopeControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DomainScopeControl" /> class is a directory control used to instruct the LDAP server not to generate referrals when completing a request.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DomainScopeControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DomainScopeControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DomainScopeControl" /> class.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlAuthRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlAuthRequest" /> class indicates that access control for the requests be interpreted as though the requests are performed by the security principal identified by the <see cref="P:System.DirectoryServices.Protocols.DsmlAuthRequest.Principal" /> property.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlAuthRequest.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlAuthRequest.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlAuthRequest" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlAuthRequest.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlAuthRequest.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlAuthRequest" /> class using the specified parameter.</summary>
      <param name="principal">The security principal.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlAuthRequest.Principal">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlAuthRequest.Principal" /> property contains the security principal.</summary>
      <returns>The security principal.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlAuthRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlAuthRequest.ToXmlNode(System.Xml.XmlDocument)" /> method transforms an <see cref="T:System.Xml.XmlDocument" /> object into its DSML v2 XML representation.</summary>
      <returns>The transformed <see cref="T:System.Xml.XmlElement" /> object.</returns>
      <param name="doc">An <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlAuthResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlAuthResponse" /> class is returned by <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> as a response to <see cref="T:System.DirectoryServices.Protocols.DsmlAuthRequest" />.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> class identifies an HTTP server.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier.#ctor(System.Uri)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier.#ctor(System.Uri)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> class using the specified parameter.</summary>
      <param name="serverUri">A server represented as a <see cref="T:System.Uri" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverUri" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serverUri" /> scheme is not http or https.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier.ServerUri">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier.ServerUri" /> property contains the <see cref="T:System.Uri" /> of the server this object identifies.</summary>
      <returns>The <see cref="T:System.Uri" /> of the server this object identifies.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlDocument">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> class is an abstract class to construct or manipulate a DSML document. It is the base class for both <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> and <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" />. <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> supports collections and indexes. Each item in its collection is an object derived from <see cref="T:System.DirectoryServices.Protocols.DirectoryOperation" />.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlDocument.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlDocument.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlDocument.ToXml">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlDocument.ToXml" /> method transforms this <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> object into a <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The transformed <see cref="T:System.Xml.XmlDocument" /> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing" /> enumeration specifies the processing method for a DSML document.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlDocumentProcessing.Sequential">
      <summary>Sequential.  Value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlDocumentProcessing.Parallel">
      <summary>Parallel.  Value is equal to 1.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlErrorProcessing">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlErrorProcessing" /> enumeration specifies how to proceed when an error occurs.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlErrorProcessing.Resume">
      <summary>Resume. Value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlErrorProcessing.Exit">
      <summary>Exit. Value is equal to 1.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlErrorResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> class is generated by the server when a severe error occurs.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Controls">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Controls" /> property is not applicable to a DSML &lt;errorResponse&gt;.</summary>
      <returns>Not applicable to a DSML &lt;errorResponse&gt;.</returns>
      <exception cref="T:System.NotSupportedException">This property is not valid for a DSML error response.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Detail">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Detail" /> property contains the contents of the &lt;detail&gt; element of the errorResponse, if any.</summary>
      <returns>The contents of the &lt;detail&gt; element of the errorResponse, if any.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.ErrorMessage">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.ErrorMessage" /> property is not applicable to a DSML &lt;errorResponse&gt;.</summary>
      <returns>not applicable to a DSML &lt;errorResponse&gt;.</returns>
      <exception cref="T:System.NotSupportedException">This property is not valid for a DSML error response.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.MatchedDN">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.MatchedDN" /> property is not applicable to a DSML &lt;errorResponse&gt;.</summary>
      <returns>Not applicable to a DSML &lt;errorResponse&gt;.</returns>
      <exception cref="T:System.NotSupportedException">This property is not valid for a DSML error response.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Message">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Message" /> property contains the text returned in the &lt;message&gt; element of the errorResponse, if any.</summary>
      <returns>The text returned in the &lt;message&gt; element of the errorResponse, if any.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Referral">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Referral" /> property is not applicable to a DSML &lt;errorResponse&gt;.</summary>
      <returns>Not applicable to a DSML &lt;errorResponse&gt;.</returns>
      <exception cref="T:System.NotSupportedException">This property is not valid for a DSML error response.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.ResultCode">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.ResultCode" /> property is not applicable to a DSML &lt;errorResponse&gt;.</summary>
      <returns>Not applicable to a DSML &lt;errorResponse&gt;.</returns>
      <exception cref="T:System.NotSupportedException">This property is not valid for a DSML error response.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Type">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Type" /> property contains a value of <see cref="T:System.DirectoryServices.Protocols.ErrorResponseCategory" /> that specifies the type of the error response returned by the server.</summary>
      <returns>A value of <see cref="T:System.DirectoryServices.Protocols.ErrorResponseCategory" /> that specifies the type of the error response returned by the server.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> class is an exception that occurs when a DSML Request or Response document is not well-formed XML or cannot be validated with DSMLv2 schema.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> class using the specified serialization data and streaming contextual data.</summary>
      <param name="info">The serialized object data about the exception thrown.</param>
      <param name="context">The contextual data about the source or destination.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> class using the specified parameter.</summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> class using the specified parameters.</summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlRequestDocument">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> class enables you to build a DSML request payload, such as <see cref="T:System.DirectoryServices.Protocols.AddRequest" />, <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" />, or <see cref="T:System.DirectoryServices.Protocols.SearchRequest" />.  It contains zero or more <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> derived objects. The user may add, delete, modify, and enumerate the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> before sending to the server. <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> can be used with any DSML Binding classes to transport the document, such as <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Add(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Add(System.DirectoryServices.Protocols.DirectoryRequest)" /> method adds a <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to the collection.</summary>
      <returns>The index of the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection at which the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object was added.</returns>
      <param name="request">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Clear">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Clear" /> method removes all items from this collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Contains(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Contains(System.DirectoryServices.Protocols.DirectoryRequest)" /> method determines whether this <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection contains the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</summary>
      <returns>true if the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object is part of the collection; false, otherwise.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object for which to search.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryRequest[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryRequest[],System.Int32)" /> method copies the entire <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="value">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> object.</param>
      <param name="i">The zero-based index of <paramref name="value" /> where copying begins.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Count">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Count" /> property contains the number of <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> objects in this collection.</summary>
      <returns>The number of <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> objects in this collection.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.DocumentProcessing">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.DocumentProcessing" /> property contains one of the values of <see cref="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing" /> that specifies how the elements of the collection are processed.</summary>
      <returns>One of the values of <see cref="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing" /> that specifies how the elements of the collection are processed.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> is an invalid enumeration value.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ErrorProcessing">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ErrorProcessing" /> property contains one of the values of <see cref="T:System.DirectoryServices.Protocols.DsmlErrorProcessing" /> that specifies how errors are processed.</summary>
      <returns>One of the values of <see cref="T:System.DirectoryServices.Protocols.DsmlErrorProcessing" /> that specifies how errors are processed.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> is an invalid enumeration value.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.GetEnumerator">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.GetEnumerator" /> method returns an enumerator for the entire <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> object for the entire collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.IndexOf(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.IndexOf(System.DirectoryServices.Protocols.DirectoryRequest)" /> method returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object in the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection.</summary>
      <returns>The index value of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object for which the index is returned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryRequest)" /> method inserts the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object into the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection at the specified index.</summary>
      <param name="index">The index in the collection at which to insert the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</param>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to be inserted into the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsFixedSize">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsFixedSize" /> property contains a value that indicates whether the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsReadOnly">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsReadOnly" /> property contains a value indicating whether the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is read only or not.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is read only; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsSynchronized">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsSynchronized" /> property contains a value that indicates whether access to the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is synchronized (thread-safe).</summary>
      <returns>true if access to the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Item(System.Int32)" /> property contains the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object at the specified index.</returns>
      <param name="index">The zero-based index value at which the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object is found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is set to a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Remove(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Remove(System.DirectoryServices.Protocols.DirectoryRequest)" /> method removes the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />
                is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.RemoveAt(System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.RemoveAt(System.Int32)" /> method removes the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object at the specified position.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to remove.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.RequestId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.RequestId" /> property contains the <paramref name="RequestID" /> associated with the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />.</summary>
      <returns>The <paramref name="RequestID" /> associated with the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ResponseOrder">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ResponseOrder" /> property contains one of the values of <see cref="T:System.DirectoryServices.Protocols.DsmlResponseOrder" /> that specifies the order of the response.</summary>
      <returns>One of the values of <see cref="T:System.DirectoryServices.Protocols.DsmlResponseOrder" /> that specifies the order of the response.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> is an invalid enumeration value.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot" /> property contains an object that can be used to synchronize access to the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> method copies the entire <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="value">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> object.</param>
      <param name="i">The zero-based index of <paramref name="value" /> where copying begins.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#Count">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.ICollection.Count" /> property gets the number of <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> objects in this collection.</summary>
      <returns>The number of <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> objects.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#IsSynchronized">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.ICollection.IsSynchronized" /> property gets a value that indicates whether access to the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is synchronized (thread-safe).</summary>
      <returns>true if access to the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#SyncRoot">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.ICollection.SyncRoot" /> property gets an object that can be used to synchronize access to the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />.</summary>
      <returns>An object that can be used to synchronize access to <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Add(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Add(System.Object)" /> method adds a <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to the collection.</summary>
      <returns>The index of the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection at which the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object was added.</returns>
      <param name="request">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="request" /> is not a  <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Clear">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Clear" /> method removes all items from the collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Contains(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Contains(System.Object)" /> method determines whether this <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection contains the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</summary>
      <returns>true if the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object is part of the collection; false, otherwise.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object for which to search.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IndexOf(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.IndexOf(System.Object)" /> method returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object in the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection.</summary>
      <returns>The index value of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object for which the index is returned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Insert(System.Int32,System.Object)" /> method inserts the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object into the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> collection at the specified index.</summary>
      <param name="index">The index in the collection at which to insert the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</param>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to be inserted into the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a  <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IsFixedSize">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.IsFixedSize" /> property gets a value that indicates whether the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IsReadOnly">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.IsReadOnly" /> property gets a value that indicates whether the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is read-only or not.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is read only; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Item(System.Int32)" /> property gets or sets the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object at the specified <paramref name="index" />.</returns>
      <param name="index">The zero-based index value at which the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object is found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is set to a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a  <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Remove(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Remove(System.Object)" /> method removes the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.RemoveAt(System.Int32)" /> method removes the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object at the specified position.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object to remove.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.ToXml">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.ToXml" /> method transforms each <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object in the collection into an <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The transformed <see cref="T:System.Xml.XmlDocument" /> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlResponseDocument">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> class is a read-only collection generated as a response to a <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> object that contains zero, or more, objects derived from <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" />.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlResponseDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryResponse[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlResponseDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryResponse[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="value">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> object.</param>
      <param name="i">The zero-based index of <paramref name="value" /> where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is multidimensional-or-The number of elements in the source <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> is greater than the available space from i to the end of the destination <paramref name="value" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> cannot be cast automatically to the type of the destination <paramref name="value" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.Count">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.Count" /> property contains the number of <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> objects in this collection.</summary>
      <returns>The number of <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> objects in this collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlResponseDocument.GetEnumerator">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlResponseDocument.GetEnumerator" /> method returns an enumerator for the entire <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object for the entire collection.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsErrorResponse">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsErrorResponse" /> property specifies whether an error response has occurred.</summary>
      <returns>This property is true if an error response has occurred; false, otherwise.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsOperationError">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsOperationError" /> property specifies whether an operation error response has occurred.</summary>
      <returns>This property is true if an operation error has occurred; false, otherwise.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsSynchronized">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsSynchronized" /> property contains a value that indicates whether access to the <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> is synchronized (thread-safe).</summary>
      <returns>true if access to the <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.Item(System.Int32)" /> property contains the <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object at the specified index.</returns>
      <param name="index">The zero-based index value at which the <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object is found.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.RequestId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.RequestId" /> property contains the RequestID associated with the document.</summary>
      <returns>The RequestID associated with the document.</returns>
      <exception cref="T:System.NotSupportedException">You attempted to set the property value.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.SyncRoot">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.SyncRoot" /> property contains an object that can be used to synchronize access to the <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" />.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlResponseDocument.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlResponseDocument.System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> method copies the entire <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="value">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> object.</param>
      <param name="i">The zero-based index of <paramref name="value" /> where copying begins.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System#Collections#ICollection#Count">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System.Collections.ICollection.Count" /> property gets the number of <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> objects in this collection.</summary>
      <returns>The number of <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> objects.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System#Collections#ICollection#IsSynchronized">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System.Collections.ICollection.IsSynchronized" /> property gets a value that indicates whether access to the <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> is synchronized (thread-safe).</summary>
      <returns>true if access to the <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System#Collections#ICollection#SyncRoot">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System.Collections.ICollection.SyncRoot" /> property gets an object that can be used to synchronize access to the <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" />.</summary>
      <returns>An object that can be used to synchronize access to <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" />.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlResponseDocument.ToXml">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlResponseDocument.ToXml" /> method transforms each <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object in the collection into an <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The transformed <see cref="T:System.Xml.XmlDocument" /> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlResponseOrder">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlResponseOrder" /> enumeration specifies the order in which responses are received.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlResponseOrder.Sequential">
      <summary>Sequential. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlResponseOrder.Unordered">
      <summary>Unordered. The value is equal to 1.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlSoapConnection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> class is an abstract class that cannot be instantiated. It enables stateless and stateful protocols to be handled similarly by providing session-oriented features.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" /> constructor initializes a new instance of a <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" /> method instructs the DSML server to start a new session.</summary>
      <exception cref="T:System.InvalidOperationException">Thrown when a session is already open on the connection.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Thrown when the XML returned from the Server in response to the BeginSession is not well-formed.</exception>
      <exception cref="T:System.Net.WebException">Thrown when there is a communications failure with the DSML server.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" /> method ends the session with the DSML server and clears the <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> property.</summary>
      <exception cref="T:System.Net.WebException">Thrown when a communications failure occurs with the DSML server.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when there is no open session.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> property contains the active session ID.</summary>
      <returns>The active session ID.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" /> property contains the SOAP Header attached to outgoing requests.</summary>
      <returns>The SOAP Header attached to outgoing requests.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> class represents a connection to a DSML Gateway using SOAP over HTTP.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)" /> constructor initializes a new instance of a <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> class.</summary>
      <param name="identifier">A <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> object that specifies server for the connection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> is null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)" /> constructor initializes a new instance of a <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> class.</summary>
      <param name="identifier">A <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> object that specifies server for the connection.</param>
      <param name="credential">A <see cref="T:System.Net.NetworkCredential" /> object that contains the network credentials.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> is null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> constructor creates and initializes a new instance of a <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> class using the specified identifier, network credentials, and authentication type.</summary>
      <param name="identifier">A <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> object that specifies the server for the connection.</param>
      <param name="credential">A <see cref="T:System.Net.NetworkCredential" /> object that contains the Network Credentials.</param>
      <param name="authType">The <see cref="T:System.DirectoryServices.Protocols.AuthType" /> value that specifies the authentication type to use for this connection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> value is not one of the DSML supported values. DSML only supports Anonymous, Ntlm, Basic, Negotiate and digest.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="authType" /> value is not one of the constants defined in the <see cref="T:System.DirectoryServices.Protocols.AuthType" /> enumeration.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)" /> constructor initializes a new instance of a <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> class.</summary>
      <param name="uri">A <see cref="T:System.Uri" /> object that specifies server for the connection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)" /> method cancels the asynchronous request.</summary>
      <param name="asyncResult">An object derived from <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by the corresponding call to <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" /> property contains one of the values of <see cref="T:System.DirectoryServices.Protocols.AuthType" /> enumeration that specifies the authentication type.</summary>
      <returns>One of the values of <see cref="T:System.DirectoryServices.Protocols.AuthType" /> enumeration that specifies the authentication type.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> method begins asynchronously sending the specified <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> object to the server.</summary>
      <returns>An object derived from <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="request">The <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> object to send.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> function.</param>
      <param name="state">An <see cref="T:System.Object" /> that contains the state data for this request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> method instructs the DSML server to start a new session.</summary>
      <exception cref="T:System.InvalidOperationException">Thrown when a session is already open on the connection.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Thrown when the XML returned from the Server in response to the <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> is not well-formed.</exception>
      <exception cref="T:System.Net.WebException">Thrown when there is a communications failure with the DSML server or when the server is out of available sessions.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)" /> method completes an asynchronous send request.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> object that contains the results of the request.</returns>
      <param name="asyncResult">An object derived from <see cref="T:System.IAsyncResult" /> that contains state data for this request.</param>
      <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.IO.IOException">The request did not complete. No stream is available.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Thrown when the response returned by server is not valid.</exception>
      <exception cref="T:System.Net.WebException">Thrown when abort was previously called or when an error occurred while processing the request.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession" /> method ends the session with the DSML server and clears the <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" /> property.</summary>
      <exception cref="T:System.Net.WebException">Thrown when there is a communications failure with the DSML server.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when there is no open session.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> method sends a single <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object that contains the results of the request.</returns>
      <param name="request">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object that contains the request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.DirectoryServices.Protocols.ErrorResponseException">The DSML server returned an error response.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">The operation returned a failure code.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)" /> method sends a <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> object to the DSML server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> object that contains the results of the request.</returns>
      <param name="request">A <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> object sent to the server.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is null (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" /> property contains the active session ID.</summary>
      <returns>The active session ID.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" /> property contains the SOAP Action Header sent with other HTTP headers.</summary>
      <returns>The SOAP Action Header sent with other HTTP headers.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" /> property contains the length of time, in seconds, before the <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> times out.</summary>
      <returns>The length of time, in seconds, before the <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> times out.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ErrorResponseCategory">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ErrorResponseCategory" /> enumeration contains possible DSML error responses.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.NotAttempted">
      <summary>The DSML provider did not attempt to execute a request element. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.CouldNotConnect">
      <summary>The DSML provider was unable to connect to a server. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.ConnectionClosed">
      <summary>The DSML provider connected to a server, but the server closed the connection without responding to the request. The value is equal to 2.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.MalformedRequest">
      <summary>The client failed to specify a request ID for each request. The value is equal to 3.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.GatewayInternalError">
      <summary>There is an internal gateway error. The value is equal to 4.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.AuthenticationFailed">
      <summary>Authentication failed. The value is equal to 5.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.UnresolvableUri">
      <summary>The client provider is unable to resolve the URI to a value that can transferred to the server. The value is equal to 6.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.Other">
      <summary>An unknown error occurred. The value is equal to 7.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ErrorResponseException">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> class is an exception that occurs when the server returns an &lt;errorResponse&gt;.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> class using the specified response object. The default message displayed to the client is "&lt;errorResponse&gt; returned".</summary>
      <param name="response">The <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> object returned by the server that corresponds to the &lt;errorResponse&gt;. </param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> class using the specified response object and message.</summary>
      <param name="response">The <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> object returned by the server that corresponds to the &lt;errorResponse&gt;. </param>
      <param name="message">The message displayed to the client when the exception occurs.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse,System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse,System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> class using the specified response object, message, and inner exception.</summary>
      <param name="response">The <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> object returned by the server that corresponds to the &lt;errorResponse&gt;. </param>
      <param name="message">The message displayed to the client when the exception occurs.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> class using the specified serialization data and streaming context.</summary>
      <param name="info">Data required to serialize the parameter.</param>
      <param name="context">The source and destination of the serialized stream associated with the parameter.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> class using the specified message.</summary>
      <param name="message">The message displayed to the client when the exception occurs.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> class using the specified message and inner exception.</summary>
      <param name="message">The message displayed to the client when the exception occurs.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data required to serialize the parameter.</summary>
      <param name="serializationInfo">Data required to serialize the parameter.</param>
      <param name="streamingContext">The source and destination of the serialized stream associated with the parameter.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ErrorResponseException.Response">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ErrorResponseException.Response" /> property contains the <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> object that corresponds to the &lt;errorResponse&gt;.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> object that corresponds to the &lt;errorResponse&gt;.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ExtendedDNControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ExtendedDNControl" /> class requests an extended form of the distinguished name of an Active Directory Domain Services object.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedDNControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ExtendedDNControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ExtendedDNControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedDNControl.#ctor(System.DirectoryServices.Protocols.ExtendedDNFlag)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ExtendedDNControl.#ctor(System.DirectoryServices.Protocols.ExtendedDNFlag)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ExtendedDNControl" /> class using the specified flag.</summary>
      <param name="flag">A value of the <see cref="T:System.DirectoryServices.Protocols.ExtendedDNFlag" /> enumeration that specifies the format of the extended distinguished name.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedDNControl.Flag">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ExtendedDNControl.Flag" /> property contains one of the values of <see cref="T:System.DirectoryServices.Protocols.ExtendedDNFlag" /> that specifies the format of the extended distinguished name.</summary>
      <returns>One of the values of <see cref="T:System.DirectoryServices.Protocols.ExtendedDNFlag" /> that specifies the format of the extended distinguished name.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedDNControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ExtendedDNControl.GetValue" /> method returns the format of the extended distinguished name.</summary>
      <returns>The format of the extended distinguished name.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ExtendedDNFlag">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ExtendedDNFlag" /> enumeration specifies the format of an extended distinguished name.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ExtendedDNFlag.HexString">
      <summary>Specifies that the GUID and SID values are returned in hexadecimal format. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ExtendedDNFlag.StandardString">
      <summary>Specifies that the GUID and SID values are returned in standard string format. The value is equal to 1.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ExtendedRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> class passes extended LDAP operations to the server.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> class using the specified name.</summary>
      <param name="requestName">The name of the request.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor(System.String,System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor(System.String,System.Byte[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> class using the specified name and value.</summary>
      <param name="requestName">The name of the request.</param>
      <param name="requestValue">The value of the request.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedRequest.RequestName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ExtendedRequest.RequestName" /> property contains the request name.</summary>
      <returns>The request name.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedRequest.RequestValue">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ExtendedRequest.RequestValue" /> property contains the value of the request.</summary>
      <returns>The value of the request.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ExtendedRequest.ToXmlNode(System.Xml.XmlDocument)" /> method creates an XML node from the specified <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The resulting <see cref="T:System.Xml.XmlElement" /> object.</returns>
      <param name="doc">An <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ExtendedResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ExtendedResponse" /> class is returned by <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> as a response to <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" />.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedResponse.ResponseName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ExtendedResponse.ResponseName" /> property contains the name of the response returned by the server.</summary>
      <returns>The name of the response returned by the server.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedResponse.ResponseValue">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ExtendedResponse.ResponseValue" /> property contains the optional response value returned by the server.</summary>
      <returns>The optional response value returned by the server.</returns>
      <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">The server returned an invalid value.</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LazyCommitControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.LazyCommitControl" /> class instructs the server to return the results of a DS modification command, such as add, delete, or replace, after it has been completed in memory, but before it has been committed to disk.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LazyCommitControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LazyCommitControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LazyCommitControl" /> class.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LdapConnection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> class creates a TCP/IP or UDP LDAP connection to Microsoft Active Directory Domain Services or an LDAP server. </summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> class using the specified directory identifier. The logon credentials and the Negotiate Authentication are used to connect to the LDAP server.</summary>
      <param name="identifier">An <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> object that specifies the server.</param>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">Thrown if it fails to create a connection block or fails to open a connection to server.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> class using the specified directory identifier and network credentials. Negotiate Authentication is used.</summary>
      <param name="identifier">An <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> object that specifies the server.</param>
      <param name="credential">A <see cref="T:System.Net.NetworkCredential" /> object that specifies the credentials to use.</param>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">Thrown if it fails to create a connection block or fails to open a connection to server.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> class using the specified directory identifier, network credentials, and authentication type.</summary>
      <param name="identifier">An <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> object that specifies the server.</param>
      <param name="credential">A <see cref="T:System.Net.NetworkCredential" /> object that specifies the credentials to use.</param>
      <param name="authType">A <see cref="T:System.DirectoryServices.Protocols.AuthType" /> values that specifies the type of authentication to use.</param>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">Thrown if it fails to create a connection block or fails to open a connection to server.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Thrown when <paramref name="authType" /> is out of range.</exception>
      <exception cref="T:System.ArgumentException">Thrown when <paramref name="authType" /> is specified as Anonymous but <paramref name="credential" /> specified credentials.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> class using the specified server.</summary>
      <param name="server">A string specifying the server  which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the right end of the string by a colon (:).</param>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">Thrown if it fails to create a connection block or fails to open a connection to server.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)" /> method cancels the asynchronous request.</summary>
      <param name="asyncResult">A <see cref="T:System.IAsyncResult" /> object that references the asynchronous request.</param>
      <exception cref="T:System.ObjectDisposedException">The object handle is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="asyncResult" /> was not returned by the corresponding call to <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /></exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.AuthType">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> property contains the supported authentication types.</summary>
      <returns>A supported authentication type.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Thrown when <paramref name="authType" /> is out of range.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind" /> property specifies whether an automatic bind is allowed.</summary>
      <returns>true if the automatic bind is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" /> method sends data asynchronously to the server.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</returns>
      <param name="request">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</param>
      <param name="partialMode">A value from <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> enumeration that specifies the level of partial result to return.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> function.</param>
      <param name="state">An <see cref="T:System.Object" /> that contains the state data for this request.</param>
      <exception cref="T:System.ObjectDisposedException">The object handle is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Partial results are not supported. </exception>
      <exception cref="T:System.ArgumentException">A callback function must be specified if <paramref name="partialMode" /> is equal to <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" />.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" /> method sends data asynchronously to the server.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</returns>
      <param name="request">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object.</param>
      <param name="requestTimeout">The time, in seconds, until the request times out.</param>
      <param name="partialMode">A value from <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> enumeration that specifies the level of partial result to return.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> function.</param>
      <param name="state">An <see cref="T:System.Object" /> that contains the state data for this request.</param>
      <exception cref="T:System.ObjectDisposedException">The object handle is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Partial results are not supported. </exception>
      <exception cref="T:System.ArgumentException">A callback function must be specified if <paramref name="partialMode" /> is equal to <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" />.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Bind">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind" /> method sends an LDAP bind using the current credentials.</summary>
      <exception cref="T:System.ObjectDisposedException">The object handle is not valid.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">The error code returned by LDAP does not map to one of the <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> enumeration error codes.</exception>
      <exception cref="T:System.InvalidOperationException">Either the <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> property specifies more than one client certificate to send for authentication, or the <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> property is Anonymous and one or more credentials are supplied.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)" /> method sends an LDAP bind using the specified <see cref="T:System.Net.NetworkCredential" />.</summary>
      <param name="newCredential">A <see cref="T:System.Net.NetworkCredential" /> object that specifies the credentials to use.</param>
      <exception cref="T:System.ObjectDisposedException">The object handle is not valid.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">The error code returned by LDAP does not map to a <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> enumeration error code.</exception>
      <exception cref="T:System.InvalidOperationException">Either the <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> property specifies more than one client certificate to send for authentication, or the <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> property is Anonymous and one or more credentials are supplied.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.Credential">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapConnection.Credential" /> property contains the network credentials for the object.</summary>
      <returns>The network credentials for the object.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Dispose">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose" /> method closes and releases the LDAP handle.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)" /> method closes the connection and optionally releases the LDAP handle.</summary>
      <param name="disposing">true if the handle is released when the connection is closed or false if the connection is closed without releasing the handle.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)" /> method completes an asynchronous request.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object that contains the results of the request.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that contains state data for this request.</param>
      <exception cref="T:System.ObjectDisposedException">Thrown if the object is already disposed.  The object handle is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> does not match the <paramref name="asyncResult" /> returned in the <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> call.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">The error code returned by LDAP does not map to a  <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> enumeration error code.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Thrown if the server returned a <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object with an error.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Finalize">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Finalize" /> method allows an <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object to attempt to free resources and perform other cleanup operations before the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)" /> method retrieves partial results of an asynchronous operation.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> object that contains the partial results.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that contains state data for this request.</param>
      <exception cref="T:System.ObjectDisposedException">The object is already disposed. The object handle is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> does not match the <paramref name="asyncResult" /> returned in the <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> call.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">The error code returned by LDAP does not map to a  <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> enumeration error code.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Thrown if the server returned a <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object with an error.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> method sends a single <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> as an LDAP v3 operation.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object that contains the response from the server.</returns>
      <param name="request">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object that contains the request.</param>
      <exception cref="T:System.ObjectDisposedException">The object is already disposed. The object handle is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Request is of type DsmlAuthRequest.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">The error code returned by LDAP does not map to a <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> enumeration error code.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Thrown if the server returned a <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object with an error.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)" /> method sends a single <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> as an LDAP v3 operation.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object that contains the response from the server.</returns>
      <param name="request">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object that contains the request.</param>
      <param name="requestTimeout">The length of time, in seconds, until the request times out.</param>
      <exception cref="T:System.ObjectDisposedException">The object is already disposed. The object handle is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Request is of type DsmlAuthRequest.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">The error code returned by LDAP does not map to a  the <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> enumeration error code.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Thrown if the server returned a <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object with an error.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions" /> property contains an <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> object that specifies the session options.</summary>
      <returns>An <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> object that specifies the session options.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.Timeout">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapConnection.Timeout" /> property contains the length of time, in seconds, before the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> times out.</summary>
      <returns>The length of time, in seconds, before the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> times out.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> class creates a directory identifier for one or more LDAP servers.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> class using the specified server.</summary>
      <param name="server"></param>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="server" /> has space.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.</summary>
      <param name="server"></param>
      <param name="fullyQualifiedDnsHostName">true if each element in servers is a fully-qualified DNS host name. If false, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.</param>
      <param name="connectionless"></param>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="server" /> contains only white space.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Integer)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.</summary>
      <param name="server"></param>
      <param name="portNumber">The port number to use when connecting to the server.</param>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="server" /> has space.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.</summary>
      <param name="server"></param>
      <param name="portNumber">The port number to be used when connecting to the server.</param>
      <param name="fullyQualifiedDnsHostName">true if each element in servers is a fully-qualified DNS host name. If false, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.</param>
      <param name="connectionless"></param>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="server" /> has space.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Boolean,System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.</summary>
      <param name="servers"></param>
      <param name="fullyQualifiedDnsHostName">true if each element in servers is a fully-qualified DNS host name. If false, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.</param>
      <param name="connectionless"></param>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="server" /> has space.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.</summary>
      <param name="servers"></param>
      <param name="portNumber">the port number to be used when connecting to a server.</param>
      <param name="fullyQualifiedDnsHostName">true if each element in servers is a fully-qualified DNS host name. If false, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.</param>
      <param name="connectionless"></param>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="server" /> has space.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless" /> property specifies that the connection is User Datagram Protocol (UDP). </summary>
      <returns>This property is true if the connection is UDP. This property is false if the LDAP connection is over TCP/IP.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName" /> property specifies that a server name is a fully-qualified DNS host name. </summary>
      <returns>This property is true if a server name is a fully-qualified DNS host name.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber" /> property contains the portnumber to be used to connect to the server.</summary>
      <returns>Returns an integer representing the port number.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers" /> property contains the set of servers this object identifies.</summary>
      <returns>The set of servers this object identifies.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LdapException">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class is an exception that occurs when LDAP returns an error code not included in <see cref="T:System.DirectoryServices.Protocols.ResultCode" />.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class using the specified error code. The default message displayed to the client is "Communications error with the LDAP server".</summary>
      <param name="errorCode">The error code returned by the LDAP implementation.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class using the specified error code and message.</summary>
      <param name="errorCode">The error code returned by the LDAP implementation.</param>
      <param name="message">The message displayed to the client when the exception occurs.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class using the specified error code, message, and inner exception.</summary>
      <param name="errorCode">The error code returned by the LDAP implementation.</param>
      <param name="message">The message displayed to the client when the exception occurs.</param>
      <param name="inner">The inner exception, if any, that threw the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class using the specified error code, message, and LDAP server error message.</summary>
      <param name="errorCode">The error code returned by the LDAP implementation.</param>
      <param name="message"></param>
      <param name="serverErrorMessage">The LDAP server error message.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class using the specified serialization data and streaming context.</summary>
      <param name="info">Data required to serialize the parameter.</param>
      <param name="context">The source and destination of the serialized stream associated with the parameter.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class using the specified message.</summary>
      <param name="message">The message displayed to the client when the exception occurs.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.LdapException" /> class using the specified message and inner exception.</summary>
      <param name="message">The message displayed to the client when the exception occurs.</param>
      <param name="inner">The inner exception, if any, that threw the exception.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapException.ErrorCode">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapException.ErrorCode" /> property contains the LDAP error code.</summary>
      <returns>The LDAP error code.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data required to serialize the parameter.</summary>
      <param name="serializationInfo">Data required to serialize the parameter.</param>
      <param name="streamingContext">The source and destination of the serialized stream associated with the parameter.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapException.PartialResults">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapException.PartialResults" /> property contains a <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> object that contains partial results.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> object that contains partial results.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapException.ServerErrorMessage">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapException.ServerErrorMessage" /> property contains a <see cref="T:System.String" /> that contains the LDAP server error message (if any exists).</summary>
      <returns>A <see cref="T:System.String" /> that contains the LDAP server error message (if any).</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LdapSessionOptions">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> class is used to get or set various LDAP session options.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.AutoReconnect">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.AutoReconnect" /> property specifies if auto-reconnect is enabled. </summary>
      <returns>This property is true if auto-reconnect is enabled or false if it is not.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.DomainName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.DomainName" /> property returns the domain to which this connection is bound.</summary>
      <returns>The domain to which this connection is bound.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapSessionOptions.FastConcurrentBind">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapSessionOptions.FastConcurrentBind" /> method enables support for fast concurrent binds.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This method does not work on the current platform.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">An LDAP error occurred.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.HostName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.HostName" /> property returns the name of the LDAP server associated with the connection.</summary>
      <returns>The name of the LDAP server associated with the connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.HostReachable">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.HostReachable" /> property specifies whether the host is reachable. </summary>
      <returns>This property is true if the host is reachable or false if it is not.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.LocatorFlag">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.LocatorFlag" /> property specifies one of the values of the <see cref="T:System.DirectoryServices.Protocols.LocatorFlags" /> enumeration that are used when locating a domain controller.</summary>
      <returns>One of the values of the <see cref="T:System.DirectoryServices.Protocols.LocatorFlags" /> enumeration that are used when locating a domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingKeepAliveTimeout">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingKeepAliveTimeout" /> property contains a <see cref="T:System.TimeSpan" /> object that specifies the minimum number of seconds the client waits, after the last response from the server, before sending a keep-alive ping.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that specifies the minimum number of seconds the client waits, after the last response from the server, before sending a keep-alive ping.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.ArgumentException">The specified time span is less than <see cref="F:System.TimeSpan.Zero" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingLimit">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingLimit" /> property contains the number of unanswered pings that the client sends before closing a connection.</summary>
      <returns>The number of unanswered pings that the client sends before closing a connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.ArgumentException">The specified value is less than zero.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingWaitTimeout">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingWaitTimeout" /> property contains a <see cref="T:System.TimeSpan" /> object that specifies the number of milliseconds that the client waits for the response to come back after sending a ping.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that specifies the number of milliseconds that the client waits for the response to come back after sending a ping.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.ArgumentException">The specified time span is less than <see cref="F:System.TimeSpan.Zero" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.ProtocolVersion">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.ProtocolVersion" /> property specifies the LDAP protocol version to use.</summary>
      <returns>The LDAP protocol version to use.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate" /> property contains a <see cref="T:System.DirectoryServices.Protocols.QueryClientCertificateCallback" /> object that specifies the default callback function used to specify client certificates when establishing an SSL connection.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.QueryClientCertificateCallback" /> object that specifies the default callback function used to specify client certificates when establishing an SSL connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralCallback">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralCallback" /> property contains a <see cref="T:System.DirectoryServices.Protocols.ReferralCallback" /> object that specifies the default callback function used when chasing referrals.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.ReferralCallback" /> object that specifies the default callback function used when chasing referrals.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralChasing">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralChasing" /> property contains a <see cref="T:System.DirectoryServices.ReferralChasingOption" /> object that specifies how the LDAP library follows referrals returned by LDAP servers.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ReferralChasingOption" /> object that specifies how the LDAP library follows referrals returned by LDAP servers.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not defined in <see cref="T:System.DirectoryServices.ReferralChasingOption" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralHopLimit">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralHopLimit" /> property specifies the number of hops allowed when chasing referrals.</summary>
      <returns>The number of hops allowed when chasing referrals.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.ArgumentException">The specified value is less than zero.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.RootDseCache">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.RootDseCache" /> property enables the internal RootDSE cache. </summary>
      <returns>This property is true if the cache is enabled or false if it is not.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SaslMethod">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SaslMethod" /> property specifies the preferred Simple Authentication and Security Layer (SASL) binding method.</summary>
      <returns>The preferred SASL binding method.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.Sealing">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.Sealing" /> property enables Kerberos encryption. </summary>
      <returns>This property is true if Kerberos encryption is enabled or false if it is not.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SecureSocketLayer">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SecureSocketLayer" /> property enables secure socket layer on connection. </summary>
      <returns>This property is true if secure socket layer is enabled or false if it is not.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SecurityContext">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SecurityContext" /> property specifies the security context associated with the current connection.</summary>
      <returns>The security context associated with the current connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SendTimeout">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SendTimeout" /> property contains a <see cref="T:System.TimeSpan" /> object that specifies the send time-out.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that specifies the send time-out.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.ArgumentException">The value specified is less than <see cref="F:System.TimeSpan.Zero" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.Signing">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.Signing" /> property enables Kerberos encryption. </summary>
      <returns>This property is true if Kerberos encryption is enabled or false if it is not.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SslInformation">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SslInformation" /> property contains a <see cref="T:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation" /> object that contains data about the current secure connection.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation" /> object that contains data about the current secure connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SspiFlag">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SspiFlag" /> property specifies the flags to pass to the Security Support Provider Interface (SSPI) InitializeSecurityContext function.  For more information about the InitializeSecurityContext function, see the InitializeSecurityContext function topic in the MSDN library at http://msdn.microsoft.com/library.</summary>
      <returns>The flags to pass to the SSPI InitializeSecurityContext function.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapSessionOptions.StartTransportLayerSecurity(System.DirectoryServices.Protocols.DirectoryControlCollection)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapSessionOptions.StartTransportLayerSecurity(System.DirectoryServices.Protocols.DirectoryControlCollection)" /> method starts transport layer security encryption.</summary>
      <param name="controls">A <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> object that contains the controls to use.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.TlsOperationException">The request failed.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">An LDAP error occurred.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapSessionOptions.StopTransportLayerSecurity">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.LdapSessionOptions.StopTransportLayerSecurity" /> method ends transport layer security encryption.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
      <exception cref="T:System.DirectoryServices.Protocols.TlsOperationException">The request failed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.TcpKeepAlive">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.TcpKeepAlive" /> property enables TCP keep-alive. </summary>
      <returns>This property is true if TCP keep-alive is enabled or false if it is not.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.VerifyServerCertificate">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.VerifyServerCertificate" /> property contains a <see cref="T:System.DirectoryServices.Protocols.VerifyServerCertificateCallback" /> object that specifies the default callback method to use to verify server certificates when an SSL connection is established.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.VerifyServerCertificateCallback" /> object that specifies the default callback method to use to verify server certificates when an SSL connection is established.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object is already disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LocatorFlags">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.LocatorFlags" /> enumeration specifies data required to locate a domain controller.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.None">
      <summary>No data required. The value is equal to 0 or 0x0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.ForceRediscovery">
      <summary>Forces the cached domain controller to be ignored. The value is equal to 1 or 0x1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.DirectoryServicesRequired">
      <summary>Requires that the returned domain controller support Windows 2000 or later. The value is equal to 16 or 0x10.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.DirectoryServicesPreferred">
      <summary>Attempts to find a domain controller that supports directory service functions (Windows 2000 or later). The value is equal to 32 or 0x20.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.GCRequired">
      <summary>Requires that the returned domain controller be a global catalog server for the forest of domains with this domain as the root. The value is equal to 64 or 0x40.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.PdcRequired">
      <summary>Requires that the returned domain controller be the primary domain controller for the domain. The value is equal to 128 or 0x80.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.IPRequired">
      <summary>Sets the Internet protocol address of the domain controller in the DomainControllerAddress member of DomainControllerInfo. The value is equal to 512 or 0x200.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.KdcRequired">
      <summary>Requires that the returned domain controller be currently running the Kerberos Key Distribution Center service. The value is equal to 1024 or 0x400.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.TimeServerRequired">
      <summary>Requires that the returned domain controller be currently running the Windows Time Service. The value is equal to 2048 or 0x800.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.WriteableRequired">
      <summary>Requires that the returned domain controller be writable. The value is equal to 4096 or 0x1000.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.GoodTimeServerPreferred">
      <summary>Attempts to find a domain controller that is a reliable time server. The value is equal to 8192 or 0x2000.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.AvoidSelf">
      <summary>Specifies that the domain controller returned should not be the current computer. The value is equal to 16384 or 0x4000.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.OnlyLdapNeeded">
      <summary>Specifies that the server returned is an LDAP server. The value is equal to 32768 or 0x8000.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.IsFlatName">
      <summary>Specifies that the DomainName parameter is a flat name. The value is equal to 65536 or 0x10000.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.IsDnsName">
      <summary>Specifies that the DomainName parameter is a DNS name. The value is equal to 131072 or 0x20000.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.ReturnDnsName">
      <summary>Specifies that the name returned should be a DNS name. The value is equal to 1073741824 or 0x40000000.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.ReturnFlatName">
      <summary>Specifies that the name should be a flat name. The value is equal to 2147483648 or 0x80000000.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ModifyDNRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> class modifies the distinguished name of an object. This class moves an object to a new parent and/or renames the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyDNRequest.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ModifyDNRequest.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyDNRequest.#ctor(System.String,System.String,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ModifyDNRequest.#ctor(System.String,System.String,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> object using the specified object name, parent name, and new object name.</summary>
      <param name="distinguishedName">The current distinguished name of the object.</param>
      <param name="newParentDistinguishedName">The distinguished name of the new parent of the object.</param>
      <param name="newName">The new distinguished name of the object.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyDNRequest.DeleteOldRdn">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ModifyDNRequest.DeleteOldRdn" /> property specifies whether to delete the old relative distinguished name (RDN) of the object. </summary>
      <returns>This property is true if the RDN should be deleted or false if it should not be deleted.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyDNRequest.DistinguishedName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ModifyDNRequest.DistinguishedName" /> property contains the distinguished name of the object.</summary>
      <returns>The distinguished name of the object.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyDNRequest.NewName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ModifyDNRequest.NewName" /> property contains the new object name.</summary>
      <returns>The new object name.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyDNRequest.NewParentDistinguishedName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ModifyDNRequest.NewParentDistinguishedName" /> property contains the distinguished name of the new parent of the object.</summary>
      <returns>The distinguished name of the new parent of the object.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyDNRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ModifyDNRequest.ToXmlNode(System.Xml.XmlDocument)" /> method creates an XML node from the specified <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The resulting <see cref="T:System.Xml.XmlElement" /> object.</returns>
      <param name="doc">A <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ModifyDNResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ModifyDNResponse" /> class is returned by <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> as a response to <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" />. </summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ModifyRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> class modifies the attributes of an existing directory entry.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> class. This constructor creates an empty request.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttributeModification[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttributeModification[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> class using the specified distinguished name and modifications.</summary>
      <param name="distinguishedName">The distinguished name of the object to modify.</param>
      <param name="modifications">An array of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> objects that specify the modifications.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttributeOperation,System.String,System.Object[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttributeOperation,System.String,System.Object[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> class using the specified distinguished name, modification, attribute name, and values.</summary>
      <param name="distinguishedName">The distinguished name of the object to be modified.</param>
      <param name="operation">A <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation" /> object that specifies the modification to perform.</param>
      <param name="attributeName">The name of the attribute to modify. This parameter cannot be null.</param>
      <param name="values">The new values for the attribute.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyRequest.DistinguishedName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ModifyRequest.DistinguishedName" /> property contains the distinguished name of the object to modify.</summary>
      <returns>The distinguished name of the object to modify.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyRequest.Modifications">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ModifyRequest.Modifications" /> property contains a <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> object that specifies a list of attribute modifications.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> object that specifies a list of attribute modifications.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ModifyRequest.ToXmlNode(System.Xml.XmlDocument)" /> method creates an XML node from the specified <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The resulting <see cref="T:System.Xml.XmlElement" /> object.</returns>
      <param name="doc">A <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ModifyResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ModifyResponse" /> class is returned by <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> as a response to <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" />.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback" /> delegate is called if a new connection was created while chasing a referral.</summary>
      <returns>true if the connection is to be cached.  false if not required to cache the connection.</returns>
      <param name="primaryConnection">A <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the primary connection.</param>
      <param name="referralFromConnection">A <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the connection which provided the referral.</param>
      <param name="newDistinguishedName">A <see cref="T:System.String" /> object that specifies the distinguished name of the desired entry in the referred server.</param>
      <param name="identifier">A <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> object that specifies the identifier the referred LDAP directory.</param>
      <param name="newConnection">A <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the new connection created in the course of chasing a referral.</param>
      <param name="credential">A <see cref="T:System.Net.NetworkCredential" /> object that specifies the credentials to pass to the referred server.</param>
      <param name="currentUserToken">The LUID of the current user.</param>
      <param name="errorCodeFromBind">A <see cref="T:System.Int32" /> object that specifies the error code from the bind operation.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PageResultRequestControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.PageResultRequestControl" /> class instructs the server to return the search result in the specified page size.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor" /> constructor creates a new instance of the <see cref="T:System.DirectoryServices.Protocols.PageResultRequestControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor(System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor(System.Byte[])" /> constructor creates a new instance of the <see cref="T:System.DirectoryServices.Protocols.PageResultRequestControl" /> class using the specified page search cookie.</summary>
      <param name="cookie">Specifies a cookie used for subsequent paged results search calls.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor(System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor(System.Int32)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.PageResultRequestControl" /> class using the requested page size.</summary>
      <param name="pageSize">The requested page size.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PageResultRequestControl.Cookie">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.PageResultRequestControl.Cookie" /> property specifies the page search cookie used for subsequent paged results search calls.</summary>
      <returns>The page search cookie used for subsequent paged results search calls.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PageResultRequestControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.PageResultRequestControl.GetValue" /> method returns the page size and cookie associated with this control.</summary>
      <returns>The page size and cookie associated with this control.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PageResultRequestControl.PageSize">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.PageResultRequestControl.PageSize" /> property specifies the requested page size.</summary>
      <returns>The requested page size.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PageResultResponseControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.PageResultResponseControl" /> class is a directory control used to pass page data from the server to the client.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PageResultResponseControl.Cookie">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.PageResultResponseControl.Cookie" /> property contains the page search cookie returned by the server.  </summary>
      <returns>The page search cookie returned by the server.  If the cookie is empty, then the paged search completed.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PageResultResponseControl.TotalCount">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.PageResultResponseControl.TotalCount" /> property contains the estimated result set size.</summary>
      <returns>The estimated value of the total count of the entries returned.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PartialResultProcessing">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> enumeration specifies the required type of partial results processing.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.PartialResultProcessing.NoPartialResultSupport">
      <summary>The application will not retrieve partial results. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResults">
      <summary>The application will retrieve partial results. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback">
      <summary>An application will retrieve partial results and use the callback mechanism. The value is equal to 2.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PartialResultsCollection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> class represents any partial results returned from a not-yet-completed asynchronous operation.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PartialResultsCollection.Contains(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.PartialResultsCollection.Contains(System.Object)" /> method determines whether this <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> object contains a specified <see cref="T:System.Object" />.</summary>
      <returns>true if the specified <see cref="T:System.Object" /> is part of the collection or false if it is not.</returns>
      <param name="value">The <see cref="T:System.Object" /> for which to search.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PartialResultsCollection.CopyTo(System.Object[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.PartialResultsCollection.CopyTo(System.Object[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="values">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> object.</param>
      <param name="index">The zero-based index of <paramref name="values" /> where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> is multidimensional-or-The number of elements in the source <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="values" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> cannot be cast automatically to the type of the destination <paramref name="values" />.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PartialResultsCollection.IndexOf(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.PartialResultsCollection.IndexOf(System.Object)" /> method returns the zero-based index of the first occurrence of the specified <see cref="T:System.Object" /> in the <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" />.</summary>
      <returns>The index value of the specified <see cref="T:System.Object" />, if found, or -1 if the specified object is not found.</returns>
      <param name="value">The <see cref="T:System.Object" /> for which the index is returned.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PartialResultsCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.PartialResultsCollection.Item(System.Int32)" /> property contains the <see cref="T:System.Object" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Object" /> at the specified index.</returns>
      <param name="index">The index value of the <see cref="T:System.Object" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or <paramref name="index" /> is equal to or greater than the number of items in the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PermissiveModifyControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.PermissiveModifyControl" /> class is used to modify the behavior of a <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PermissiveModifyControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.PermissiveModifyControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.PermissiveModifyControl" /> class.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.QueryClientCertificateCallback">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.QueryClientCertificateCallback" /> delegate gets or sets the default callback function used to specify the client certificates while establishing an SSL connection.</summary>
      <returns>The default callback function used to specify the client certificates while establishing an SSL connection.</returns>
      <param name="connection">A <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the connection.</param>
      <param name="trustedCAs">An array of <see cref="T:System.Byte" /> arrays that specifies the trusted certification authorities (CAs).</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.QueryForConnectionCallback">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.QueryForConnectionCallback" /> delegate determines whether there is a cached connection available for use.</summary>
      <returns>A cached <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> is returned, if there is one available. If no cached connection is available, NULL is returned.</returns>
      <param name="primaryConnection">A <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the primary connection.</param>
      <param name="referralFromConnection">A <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the connection that provides the referral.</param>
      <param name="newDistinguishedName">A <see cref="T:System.String" /> object that specifies the distinguished name (DN) of the desired entry in the referred server.</param>
      <param name="identifier">A <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> object that specifies the identifier for the referred LDAP directory.</param>
      <param name="credential">A <see cref="T:System.Net.NetworkCredential" /> object that specifies the credentials to pass to the referred server.</param>
      <param name="currentUserToken">The LUID for the current user.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.QuotaControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.QuotaControl" /> class is used to pass the security identifier (SID) of a security principle to retrieve quota-related data.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.QuotaControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.QuotaControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.QuotaControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.QuotaControl.#ctor(System.Security.Principal.SecurityIdentifier)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.QuotaControl.#ctor(System.Security.Principal.SecurityIdentifier)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.QuotaControl" /> class using the specified SID.</summary>
      <param name="querySid">The SID of the security principle.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.QuotaControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.QuotaControl.GetValue" /> method returns the SID associated with this query.</summary>
      <returns>The SID associated with this query.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.QuotaControl.QuerySid">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.QuotaControl.QuerySid" /> property contains the SID of the security principle.</summary>
      <returns>The SID of the security principle.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ReferralCallback">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ReferralCallback" /> class contains delegates used as referral callback methods.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ReferralCallback.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ReferralCallback.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ReferralCallback" /> class.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ReferralCallback.DereferenceConnection">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ReferralCallback.DereferenceConnection" /> property contains a <see cref="T:System.DirectoryServices.Protocols.DereferenceConnectionCallback" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DereferenceConnectionCallback" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ReferralCallback.NotifyNewConnection">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ReferralCallback.NotifyNewConnection" /> property contains a <see cref="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ReferralCallback.QueryForConnection">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.ReferralCallback.QueryForConnection" /> property contains a <see cref="T:System.DirectoryServices.Protocols.QueryForConnectionCallback" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.QueryForConnectionCallback" /> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ReferralChasingOptions">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ReferralChasingOptions" /> enumeration specifies if and how referral chasing is pursued.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ReferralChasingOptions.None">
      <summary>Never chase the referred-to server. Setting this option prevents a client from contacting other servers in a referral process. The value is equal to 0 or 0x0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ReferralChasingOptions.Subordinate">
      <summary>Chase only subordinate referrals which are a subordinate naming context in a directory tree. The ADSI LDAP provider always turns off this flag for paged searches. The value is equal to 32 or 0x20.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ReferralChasingOptions.External">
      <summary>Chase external referrals. The value is equal to 64 or 0x40.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ReferralChasingOptions.All">
      <summary>Chase referrals of either the subordinate or external type. The value is equal to 96 or 0x60.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ResultCode">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> enumeration specifies the operation result codes.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Success">
      <summary>The call completed successfully. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.OperationsError">
      <summary>An operation error occurred. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ProtocolError">
      <summary>A protocol error occurred. The value is equal to 2.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.TimeLimitExceeded">
      <summary>The time limit set by the server-side time limit parameter was exceeded. The value is equal to 3.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.SizeLimitExceeded">
      <summary>The size limit was exceeded. The value is equal to 4.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.CompareFalse">
      <summary>The attribute and known values do not match. The value is equal to 5.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.CompareTrue">
      <summary>The attribute and known values match. The value is equal to 6.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AuthMethodNotSupported">
      <summary>The authentication method is not supported. The value is equal to 7.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.StrongAuthRequired">
      <summary>Strong authentication is required for this operation. The value is equal to 8.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ReferralV2">
      <summary>Only partial results and referrals were received. The value is equal to 9.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Referral">
      <summary>A referral was returned from the server. The value is equal to 10.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AdminLimitExceeded">
      <summary>The administration limit on the server was exceeded. The value is equal to 11.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.UnavailableCriticalExtension">
      <summary>The server does not support the control. The control is critical. The value is equal to 12.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ConfidentialityRequired">
      <summary>Confidentiality is required for this operation. The value is equal to 13.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.SaslBindInProgress">
      <summary>Simple Authentication and Security Layer (SASL) bind is in progress. The value is equal to 14.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NoSuchAttribute">
      <summary>The requested attribute does not exist. The value is equal to 16.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.UndefinedAttributeType">
      <summary>The type is not defined. The value is equal to 17.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InappropriateMatching">
      <summary>The matching rule does not apply to the specified attribute type. The value is equal to 18.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ConstraintViolation">
      <summary>A value in the request does not comply with certain constraints. The value is equal to 19.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AttributeOrValueExists">
      <summary>The attribute exists or the value has been assigned. The value is equal to 20.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InvalidAttributeSyntax">
      <summary>The syntax is invalid. The value is equal to 21.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NoSuchObject">
      <summary>The object does not exist. The value is equal to 32.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AliasProblem">
      <summary>The alias is invalid. The value is equal to 33.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InvalidDNSyntax">
      <summary>The distinguished name contains invalid syntax. The value is equal to 34.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AliasDereferencingProblem">
      <summary>A problem occurred when dereferencing the alias. The value is equal to 36.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InappropriateAuthentication">
      <summary>The authentication that was provided was not appropriate. The value is equal to 48.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InsufficientAccessRights">
      <summary>The user has insufficient access rights. The value is equal to 50.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Busy">
      <summary>The server is busy. The value is equal to 51.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Unavailable">
      <summary>The server is unavailable. The value is equal to 52.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.UnwillingToPerform">
      <summary>The server cannot handle directory requests. The value is equal to 53.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.LoopDetect">
      <summary>The chain of referrals has looped back to a referring server. The value is equal to 54.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.SortControlMissing">
      <summary>The search requires a SORT control. The value is equal to 60.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.OffsetRangeError">
      <summary>The search results exceed the specified offset range. The value is equal to 61.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NamingViolation">
      <summary>A naming violation occurred. The value is equal to 64.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ObjectClassViolation">
      <summary>An object class violation occurred. The value is equal to 65.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NotAllowedOnNonLeaf">
      <summary>This operation is not allowed on a non-leaf object. The value is equal to 66.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NotAllowedOnRdn">
      <summary>This operation is not allowed on a relative distinguished name (RDN). The value is equal to 67.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.EntryAlreadyExists">
      <summary>The object already exists. The value is equal to 68.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ObjectClassModificationsProhibited">
      <summary>The request is attempting to modify an object class that cannot be modified. The value is equal to 69.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ResultsTooLarge">
      <summary>The returned results are too large. The value is equal to 70.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AffectsMultipleDsas">
      <summary>Multiple directory service agents are affected. The value is equal to 71.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.VirtualListViewError">
      <summary>An error occurred when attempting to perform a requested Virtual List View operation. The value is equal to 76.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Other">
      <summary>An unknown error occurred. The value is equal to 80.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchOption">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> enumeration specifies the search options which define how the search will behave.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchOption.DomainScope">
      <summary>Prevents referrals from being generated when the search results are returned. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchOption.PhantomRoot">
      <summary>Instructs the server to search all naming contexts that are subordinate to the search base. The value is equal to 2.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchOptionsControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchOptionsControl" /> class is used to pass flags to the server to control search behavior.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchOptionsControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchOptionsControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.SearchOptionsControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchOptionsControl.#ctor(System.DirectoryServices.Protocols.SearchOption)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchOptionsControl.#ctor(System.DirectoryServices.Protocols.SearchOption)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.SearchOptionsControl" /> class using the specified search options.</summary>
      <param name="flags">The <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> enumeration value that specifies the search behavior.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchOptionsControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchOptionsControl.GetValue" /> method returns search option for this object.</summary>
      <returns>The search option associated with this control.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchOptionsControl.SearchOption">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchOptionsControl.SearchOption" /> property contains one of the values of <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> enumeration that specifies the search behavior.</summary>
      <returns>One of the values of <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> enumeration that specifies the search behavior.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the values of <see cref="T:System.DirectoryServices.Protocols.SearchOption" />.</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchRequest">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> class initiates a search operation.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchRequest.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchRequest.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> class. This constructor creates an empty request.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchRequest.#ctor(System.String,System.String,System.DirectoryServices.Protocols.SearchScope,System.String[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchRequest.#ctor(System.String,System.String,System.DirectoryServices.Protocols.SearchScope,System.String[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> class using the specified name, search filter, scope, and attributes.</summary>
      <param name="distinguishedName">The distinguished name of the object at which to start the search.</param>
      <param name="ldapFilter">An LDAP search filter.</param>
      <param name="searchScope">One of the values of <see cref="T:System.DirectoryServices.Protocols.SearchScope" /> that specifies the search scope.</param>
      <param name="attributeList">An array that contains the requested attributes in the result set.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchRequest.#ctor(System.String,System.Xml.XmlDocument,System.DirectoryServices.Protocols.SearchScope,System.String[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchRequest.#ctor(System.String,System.Xml.XmlDocument,System.DirectoryServices.Protocols.SearchScope,System.String[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> class using the specified name, search filter, scope, and attributes.</summary>
      <param name="distinguishedName">The distinguished name of the object for which to search.</param>
      <param name="filter">A DSML v2 search filter.</param>
      <param name="searchScope">A <see cref="T:System.DirectoryServices.Protocols.SearchScope" /> value that specifies the search scope. The default value is <see cref="T:System.DirectoryServices.Protocols.SearchScope" />.</param>
      <param name="attributeList">An array that contains the requested attributes in the result set.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.Aliases">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchRequest.Aliases" /> property contains one of the values of <see cref="T:System.DirectoryServices.Protocols.DereferenceAlias" /> that specifies the dereference alias behavior.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.DereferenceAlias" /> value that specifies the dereference alias behavior.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not a member of <see cref="T:System.DirectoryServices.Protocols.DereferenceAlias" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.Attributes">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchRequest.Attributes" /> property contains the attributes of the requested object. </summary>
      <returns>The attributes of the requested object. Set this property to null to retrieve all attributes.</returns>
      <exception cref="T:System.ArgumentException">One of the strings in <see cref="T:System.Collections.Specialized.StringCollection" /> object is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.DistinguishedName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchRequest.DistinguishedName" /> property contains the distinguished name of the requested object.</summary>
      <returns>The distinguished name of the requested object.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.Filter">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchRequest.Filter" /> property contains the search filter. </summary>
      <returns>The search filter. If the value is a string, this property is an LDAP search filter. If the value is an XML document, the property is a DSML v2 search filter. Any other type throws an exception.</returns>
      <exception cref="T:System.ArgumentException">The value is not a string or an XML document.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.Scope">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchRequest.Scope" /> property contains one of the values of <see cref="T:System.DirectoryServices.SearchScope" /> that specifies the scope of the search.</summary>
      <returns>One of the values of <see cref="T:System.DirectoryServices.SearchScope" /> that specifies the scope of the search.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not a member of <see cref="T:System.DirectoryServices.SearchScope" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.SizeLimit">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchRequest.SizeLimit" /> property contains the maximum number of objects returned in the search request.</summary>
      <returns>The maximum number of objects returned in the search request.</returns>
      <exception cref="T:System.ArgumentException">The value is less than zero.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.TimeLimit">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchRequest.TimeLimit" /> property contains a <see cref="T:System.TimeSpan" /> object that specifies the time span allowed, if the server processes the search request.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that specifies the time span allowed, if the server processes the search request.</returns>
      <exception cref="T:System.ArgumentException">The value is less than <see cref="F:System.TimeSpan.Zero" />.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchRequest.ToXmlNode(System.Xml.XmlDocument)" /> method creates an XML node from the specified <see cref="T:System.Xml.XmlDocument" /> object.</summary>
      <returns>The resulting <see cref="T:System.Xml.XmlElement" /> object.</returns>
      <param name="doc">A <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.TypesOnly">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchRequest.TypesOnly" /> property specifies whether the search returns only the attribute names and not the attribute values. </summary>
      <returns>If this property is true, the search returns only the attribute names. If this property is false, the search returns both the attribute names and values.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResponse">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchResponse" /> class is sent by the server as a response to a <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> object. This response contains zero or more <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> objects, and zero or more <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> objects.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.Controls">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResponse.Controls" /> property contains the <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object returned by the server.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> object returned by the server.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.Entries">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResponse.Entries" /> property contains a <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> object that contains the entries returned by the search.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> object that contains the entries returned by the search.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.ErrorMessage">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResponse.ErrorMessage" /> property contains the error message, if any, for this operation.</summary>
      <returns>The error message, if any, for this operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.MatchedDN">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResponse.MatchedDN" /> property contains the matched distinguished name returned by the server.</summary>
      <returns>The matched distinguished name returned by the server.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.References">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResponse.References" /> property contains a <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> object that contains search references returned by the server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> object that contains search references returned by the server.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.Referral">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResponse.Referral" /> property contains the server referrals.</summary>
      <returns>The server referrals.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.ResultCode">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResponse.ResultCode" /> property contains a value of <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> that specifies the result code for the operation.</summary>
      <returns>The result code for the operation.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection" /> class is a collection of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> objects.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.AttributeNames">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.AttributeNames" /> property contains names of attributes in this collection.</summary>
      <returns>Names of attributes in this collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Contains(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Contains(System.String)" /> method determines whether the collection contains the specified <paramref name="attributeName" />.</summary>
      <returns>true if the collection contains attributeName or false if it does not.</returns>
      <param name="attributeName">The name of the attribute to locate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeName" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultAttributeCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttribute[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchResultAttributeCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttribute[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection" /> object.</param>
      <param name="index">The zero-based index of <paramref name="array" /> where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional-or-The number of elements in the source <see cref="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Item(System.String)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Item(System.String)" /> property contains the <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object specified by <paramref name="attributeName" />.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> object specified by <paramref name="attributeName" />.</returns>
      <param name="attributeName">The name of this attribute.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Values">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Values" /> property contains values of attributes in this collection.</summary>
      <returns>Values of attributes in this collection.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultEntry">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> class contains an object returned in the result set.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultEntry.Attributes">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultEntry.Attributes" /> property contains a collection of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> objects.</summary>
      <returns>A collection of <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> objects.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultEntry.Controls">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultEntry.Controls" /> property contains an array of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects.</summary>
      <returns>An array of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultEntry.DistinguishedName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultEntry.DistinguishedName" /> property contains the distinguished name of the returned entry.</summary>
      <returns>The distinguished name of the returned entry.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultEntryCollection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> class contains a collection of <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> objects returned in a result set.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.Contains(System.DirectoryServices.Protocols.SearchResultEntry)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.Contains(System.DirectoryServices.Protocols.SearchResultEntry)" /> method determines if the collection contains the specified <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> object.</summary>
      <returns>true if the collection contains <paramref name="value" /> or false if it does not.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> to locate.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.CopyTo(System.DirectoryServices.Protocols.SearchResultEntry[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.CopyTo(System.DirectoryServices.Protocols.SearchResultEntry[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="values">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> object.</param>
      <param name="index">The zero-based index of <paramref name="values" /> where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> is multidimensional-or-The number of elements in the source <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="values" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.IndexOf(System.DirectoryServices.Protocols.SearchResultEntry)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.IndexOf(System.DirectoryServices.Protocols.SearchResultEntry)" /> method returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> object in <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" />.</summary>
      <returns>The index value of the specified <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> object, if found, or -1 if it was not found.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> object for which the index is returned.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultEntryCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultEntryCollection.Item(System.Int32)" /> property contains the <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> object at the specified <paramref name="index" />.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> object at the specified <paramref name="index" />.</returns>
      <param name="index">The index value of the <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> object.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultReference">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> class contains a single search reference returned by the server.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultReference.Controls">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultReference.Controls" /> property contains an array of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects returned by the server in the search reference.</summary>
      <returns>An array of <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> objects returned by the server in the search reference.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultReference.Reference">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultReference.Reference" /> property contains an array of <see cref="T:System.Uri" /> objects returned by the server in the search reference.</summary>
      <returns>An array of <see cref="T:System.Uri" /> objects returned by the server in the search reference.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> class contains a collection of <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.Contains(System.DirectoryServices.Protocols.SearchResultReference)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.Contains(System.DirectoryServices.Protocols.SearchResultReference)" /> method determines if the collection contains specified <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> object.</summary>
      <returns>true if the collection contains <paramref name="value" /> or false if it does not.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> object to locate.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.CopyTo(System.DirectoryServices.Protocols.SearchResultReference[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.CopyTo(System.DirectoryServices.Protocols.SearchResultReference[],System.Int32)" /> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="values">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> object.</param>
      <param name="index">The zero-based index of <paramref name="values" /> where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> is multidimensional-or-The number of elements in the source <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="values" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.IndexOf(System.DirectoryServices.Protocols.SearchResultReference)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.IndexOf(System.DirectoryServices.Protocols.SearchResultReference)" /> method returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> object in <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" />.</summary>
      <returns>The index value of the specified <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> object, if found. If the object is not found, this method returns -1.</returns>
      <param name="value">The <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> object for which the index is returned.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultReferenceCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultReferenceCollection.Item(System.Int32)" /> property contains the <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> object at the specified <paramref name="index" />.</summary>
      <returns>The <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> object at the specified <paramref name="index" />.</returns>
      <param name="index">The index value of the <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> object.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchScope">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SearchScope" /> enumeration specifies the scope of a search.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchScope.Base">
      <summary>Search only the specified base object. The value is equal to 0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchScope.OneLevel">
      <summary>Search the child objects of the base object, but not the base object itself. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchScope.Subtree">
      <summary>Search the base object and all child objects. The value is equal to 2.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl" /> class is used to pass flags to the server to control various security descriptor behaviors.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.#ctor" /> constructor creates a new instance of the <see cref="T:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.#ctor(System.DirectoryServices.Protocols.SecurityMasks)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.#ctor(System.DirectoryServices.Protocols.SecurityMasks)" /> constructor creates a new instance of the <see cref="T:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl" /> class using the specified security masks.</summary>
      <param name="masks">A combination of <see cref="T:System.DirectoryServices.Protocols.SecurityMasks" /> values that specify security descriptor options.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.GetValue" /> method returns the security descriptor options specified for this control.</summary>
      <returns>The security descriptor options specified for this control.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.SecurityMasks">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.SecurityMasks" /> property contains a combination of <see cref="T:System.DirectoryServices.Protocols.SecurityMasks" /> values that specify security descriptor options.</summary>
      <returns>A combination of <see cref="T:System.DirectoryServices.Protocols.SecurityMasks" /> values that specify security descriptor options.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SecurityMasks">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SecurityMasks" /> enumeration specifies various security descriptor options.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.None">
      <summary>No security descriptor flag is set. The value is equal to 0 or 0x0.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.Owner">
      <summary>The owner security descriptor flag. The value is equal to 1 or 0x1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.Group">
      <summary>The primary group security descriptor flag. The value is equal to 2 or 0x2.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.Dacl">
      <summary>The discretionary access control list (DACL) security descriptor flag. The value is equal to 4 or 0x4.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.Sacl">
      <summary>The system access control list (SACL) security descriptor flag.  The value is equal to 8 or 0x8.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation" /> class contains data about a secure connection.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.AlgorithmIdentifier">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.AlgorithmIdentifier" /> property contains the encryption algorithm used by the connection.</summary>
      <returns>The encryption algorithm used by the connection.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.CipherStrength">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.CipherStrength" /> property contains the cipher strength of the encryption algorithm used on this connection.</summary>
      <returns>The cipher strength of the encryption algorithm used on this connection.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.ExchangeStrength">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.ExchangeStrength" /> property contains the exchange strength for this connection.</summary>
      <returns>The exchange strength for this connection.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.Hash">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.Hash" /> property contains the hashing algorithm used by this connection.</summary>
      <returns>The hashing algorithm used by this connection.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.HashStrength">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.HashStrength" /> property contains the strength of the hashing algorithm used on this connection.</summary>
      <returns>The strength of the hashing algorithm used on this connection.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.KeyExchangeAlgorithm">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.KeyExchangeAlgorithm" /> property contains the key exchange algorithm used by this connection.</summary>
      <returns>The key exchange algorithm used by this connection.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.Protocol">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.Protocol" /> property contains the security protocol used by this connection.</summary>
      <returns>The security protocol used by this connection.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SecurityProtocol">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SecurityProtocol" /> enumeration is used to specify the security protocol used by a connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Pct1Server">
      <summary>Indicates that the server is using the PCT1 protocol. The value is equal to 1.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Pct1Client">
      <summary>Indicates that the client is using the PCT1 protocol. The value is equal to 2.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Ssl2Server">
      <summary>Indicates that the server is using the SSL2 protocol. The value is equal to 4.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Ssl2Client">
      <summary>Indicates that the client is using the SSL2 protocol. The value is equal to 8.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Ssl3Server">
      <summary>Indicates that the server is using the SSL3 protocol. The value is equal to 16.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Ssl3Client">
      <summary>Indicates that the client is using the SSL3 protocol. The value is equal to 32.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Tls1Server">
      <summary>Indicates that the server is using the TLS1 protocol. The value is equal to 64.</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Tls1Client">
      <summary>Indicates that the client is using the TLS1 protocol. The value is equal to 128.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ShowDeletedControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.ShowDeletedControl" /> class is used with <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> to specify that the search results should include any deleted objects that match the search filter.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ShowDeletedControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.ShowDeletedControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.ShowDeletedControl" /> class.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SortKey">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SortKey" /> class stores sort criteria for use by sort controls.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortKey.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SortKey.#ctor" /> constructor creates and initializes a new instance of the <see cref="T:System.DirectoryServices.Protocols.SortKey" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortKey.#ctor(System.String,System.String,System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SortKey.#ctor(System.String,System.String,System.Boolean)" /> constructor creates and initializes a new instance of the <see cref="T:System.DirectoryServices.Protocols.SortKey" /> class using the specified attribute name, matching rule, and sort order.</summary>
      <param name="attributeName">The name of the attribute to use as a sort key.</param>
      <param name="matchingRule">The object identifier (OID) of the matching rule for the sort.</param>
      <param name="reverseOrder">true if the sort is ordered from the lowest to highest or false if the sort order is from highest to lowest.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortKey.AttributeName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SortKey.AttributeName" /> property specifies the name of the attribute to use as a sort key.</summary>
      <returns>The name of the attribute to use as a sort key.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortKey.MatchingRule">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SortKey.MatchingRule" /> property specifies the object identifier (OID) of the matching rule for the sort.</summary>
      <returns>The OID of the matching rule for the sort.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortKey.ReverseOrder">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SortKey.ReverseOrder" /> property specifies if the sort should be returned in reverse order. </summary>
      <returns>This property is true if the sort is ordered from the lowest to highest or false if the sort is ordered from highest to lowest.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SortRequestControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SortRequestControl" /> class is used with <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> to instruct the server to sort the search results before returning them to the client application.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.DirectoryServices.Protocols.SortKey[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.DirectoryServices.Protocols.SortKey[])" /> constructor creates and initializes a new instance of the <see cref="T:System.DirectoryServices.Protocols.SortRequestControl" /> class using the specified sort keys.</summary>
      <param name="sortKeys">An array of <see cref="T:System.DirectoryServices.Protocols.SortKey" /> objects used by the server to sort the search results before returning them to the client.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.String,System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.String,System.Boolean)" /> constructor creates a new instance of the <see cref="T:System.DirectoryServices.Protocols.SortRequestControl" /> class using the specified attribute name and sort order.</summary>
      <param name="attributeName">The name of the attribute on which the query is based.</param>
      <param name="reverseOrder">true if results should be returned in reverse order or false otherwise.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.String,System.String,System.Boolean)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.String,System.String,System.Boolean)" /> constructor creates a new instance of the <see cref="T:System.DirectoryServices.Protocols.SortRequestControl" /> class using the specified attribute name, matching rule, and sort order.</summary>
      <param name="attributeName">The name of the attribute on which the query is based.</param>
      <param name="matchingRule">Specifies the object identifier (OID) of the matching rule for the sort.</param>
      <param name="reverseOrder">true if the sort is ordered from lowest to highest or false if the sort is ordered from highest to lowest.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortRequestControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.SortRequestControl.GetValue" /> method specifies the sort keys and matching rules for this control.</summary>
      <returns>The sort keys and matching rules for this control.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortRequestControl.SortKeys">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SortRequestControl.SortKeys" /> property contains an array of <see cref="T:System.DirectoryServices.Protocols.SortKey" /> objects used by the server to sort the search results before returning them to the client.</summary>
      <returns>An array of <see cref="T:System.DirectoryServices.Protocols.SortKey" /> objects used by the server to sort the search results before returning them to the client.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SortResponseControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.SortResponseControl" /> class is used to pass sort data from the server to the client.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortResponseControl.AttributeName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SortResponseControl.AttributeName" /> property contains the attribute name.</summary>
      <returns>The attribute name.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortResponseControl.Result">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SortResponseControl.Result" /> property returns a <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> object that contains the result code.</summary>
      <returns>A <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> object that contains the result code.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.TlsOperationException">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> class is an exception that occurs in the <see cref="M:System.DirectoryServices.Protocols.LdapSessionOptions.StartTransportLayerSecurity(System.DirectoryServices.Protocols.DirectoryControlCollection)" /> method if the request fails.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> class using the specified response.</summary>
      <param name="response">A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object returned by the server.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> class using the specified response and message.</summary>
      <param name="response">A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object returned by the server.</param>
      <param name="message">The message displayed to the client when the exception occurs.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> class using the specified response, message, and inner exception.</summary>
      <param name="response">A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object returned by the server.</param>
      <param name="message">The message displayed to the client when the exception occurs.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> class using the specified serialization data and streaming context.</summary>
      <param name="info">The data required to serialize the parameter.</param>
      <param name="context">The source and destination of the serialized stream associated with the parameter.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> class using the specified message.</summary>
      <param name="message">The message displayed to the client when the exception occurs.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.String,System.Exception)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.String,System.Exception)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> class using the specified message and inner exception.</summary>
      <param name="message">The message displayed to the client when the exception occurs.</param>
      <param name="inner">The <see cref="P:System.Exception.InnerException" />, if any, that threw the exception.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.TreeDeleteControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.TreeDeleteControl" /> class is used with <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> to delete an entire subtree in the directory.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TreeDeleteControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.TreeDeleteControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.TreeDeleteControl" /> class.</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.VerifyNameControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.VerifyNameControl" /> class is used with an LDAP search function to specify the server used to verify the existence of an object.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.VerifyNameControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor(System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor(System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.VerifyNameControl" /> class using the specified server name.</summary>
      <param name="serverName">The global catalog the performs the validation.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor(System.String,System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor(System.String,System.Int32)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.VerifyNameControl" /> class using the specified server name and flags.</summary>
      <param name="serverName">The global catalog that performs the validation.</param>
      <param name="flag">The flags used for the validation.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VerifyNameControl.Flag">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VerifyNameControl.Flag" /> property contains the flag used for validation.</summary>
      <returns>The flag used for validation.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VerifyNameControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VerifyNameControl.GetValue" /> method returns the name of the validation server.</summary>
      <returns>The name of the validation server.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VerifyNameControl.ServerName">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VerifyNameControl.ServerName" /> property contains the name of the server that performs the validation.</summary>
      <returns>The name of the server that performs the validation.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.VerifyServerCertificateCallback">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.VerifyServerCertificateCallback" /> delegate gets or sets the default callback function used to verify server certificates when establishing an SSL connection.</summary>
      <returns>true if the client approves the server certificate; otherwise false.</returns>
      <param name="connection">A <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> object that specifies the connection.</param>
      <param name="certificate">A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object that specifies the server certificate.</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.VlvRequestControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> class is used to request virtual list view (VLV) support from the server.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.Byte[])">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.Byte[])" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> class using the specified entry counts and target entry.</summary>
      <param name="beforeCount">The number of entries before the target entry that the client requests from the server to return in the list results.</param>
      <param name="afterCount">The number of entries after the target entry that the client requests from the server to return in the results.</param>
      <param name="target">The target entry for the search.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.Int32)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> class using the specified entry counts and offset.</summary>
      <param name="beforeCount">The number of entries before the target entry that the client requests from the server to send back in the list results.</param>
      <param name="afterCount">The number of entries after the target entry that the client requests from the server to send back in the results.</param>
      <param name="offset">The ratio between the offset value and the content count.</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.String)">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.String)" /> constructor creates an instance of the <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> class using the specified entry counts and target entry.</summary>
      <param name="beforeCount">The number of entries before the target entry that the client requests from the server to return in the list results.</param>
      <param name="afterCount">The number of entries after the target entry that the client requests from the server to return in the results.</param>
      <param name="target">The target entry for the search.</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.AfterCount">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.AfterCount" /> property specifies the number of entries after the target entry to return in the list results.</summary>
      <returns>The number of entries after the target entry to return in the list results.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.BeforeCount">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.BeforeCount" /> property specifies the number of entries before the target entry to return in the list results.</summary>
      <returns>The number of entries before the target entry to return in the list results.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.ContextId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.ContextId" /> property contains the context ID assigned by the server to identify this search operation.</summary>
      <returns>The context ID assigned by the server to identify this search operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.EstimateCount">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.EstimateCount" /> property contains the content count of the list.</summary>
      <returns>The content count of the list.</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.GetValue">
      <summary>The <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.GetValue" /> method returns a BER-encoded sequence that specifies the control.</summary>
      <returns>A BER-encoded sequence that specifies this control.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.Offset">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.Offset" /> property contains the offset value of the target entry.</summary>
      <returns>The offset value of the target entry.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.Target">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.Target" /> property contains the target entry of the search.</summary>
      <returns>The target entry of the search.</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.VlvResponseControl">
      <summary>The <see cref="T:System.DirectoryServices.Protocols.VlvResponseControl" /> class is used to pass virtual list view (VLV) data from the server to the client.</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvResponseControl.ContentCount">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvResponseControl.ContentCount" /> property contains the number of items in the list.</summary>
      <returns>The number of items in the list.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvResponseControl.ContextId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvResponseControl.ContextId" /> property contains the context ID assigned by the server to identify this search.</summary>
      <returns>The context ID assigned by the server to identify this search.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvResponseControl.Result">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvResponseControl.Result" /> property contains a result code in the form of a <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> object.</summary>
      <returns>A result code in the form of a <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvResponseControl.TargetPosition">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.VlvResponseControl.TargetPosition" /> property contains the list index position of the target entry.</summary>
      <returns>The list index position of the target entry.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\mscorlib.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>mscorlib</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.Registry">
      <summary>Provides <see cref="T:Microsoft.Win32.RegistryKey" /> objects that represent the root keys in the Windows registry, and static methods to access key/value pairs.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.ClassesRoot">
      <summary>Defines the types (or classes) of documents and the properties associated with those types. This field reads the Windows registry base key HKEY_CLASSES_ROOT.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.CurrentConfig">
      <summary>Contains configuration information pertaining to the hardware that is not specific to the user. This field reads the Windows registry base key HKEY_CURRENT_CONFIG.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.CurrentUser">
      <summary>Contains information about the current user preferences. This field reads the Windows registry base key HKEY_CURRENT_USER </summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.DynData">
      <summary>Contains dynamic registry data. This field reads the Windows registry base key HKEY_DYN_DATA.</summary>
      <exception cref="T:System.ObjectDisposedException">The operating system does not support dynamic data; that is, it is not Windows 98, Windows 98 Second Edition, or Windows Millennium Edition (Windows Me).</exception>
    </member>
    <member name="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
      <summary>Retrieves the value associated with the specified name, in the specified registry key. If the name is not found in the specified key, returns a default value that you provide, or null if the specified key does not exist. </summary>
      <returns>null if the subkey specified by <paramref name="keyName" /> does not exist; otherwise, the value associated with <paramref name="valueName" />, or <paramref name="defaultValue" /> if <paramref name="valueName" /> is not found.</returns>
      <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
      <param name="valueName">The name of the name/value pair.</param>
      <param name="defaultValue">The value to return if <paramref name="valueName" /> does not exist.</param>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="F:Microsoft.Win32.Registry.LocalMachine">
      <summary>Contains the configuration data for the local machine. This field reads the Windows registry base key HKEY_LOCAL_MACHINE.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.PerformanceData">
      <summary>Contains performance information for software components. This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.</summary>
    </member>
    <member name="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
      <summary>Sets the specified name/value pair on the specified registry key. If the specified key does not exist, it is created.</summary>
      <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
      <param name="valueName">The name of the name/value pair.</param>
      <param name="value">The value to be stored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root. -or-<paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>Sets the name/value pair on the specified registry key, using the specified registry data type. If the specified key does not exist, it is created.</summary>
      <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
      <param name="valueName">The name of the name/value pair.</param>
      <param name="value">The value to be stored.</param>
      <param name="valueKind">The registry data type to use when storing the data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root.-or-<paramref name="keyName" /> is longer than the maximum length allowed (255 characters).-or- The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="F:Microsoft.Win32.Registry.Users">
      <summary>Contains information about the default user configuration. This field reads the Windows registry base key HKEY_USERS.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryHive">
      <summary>Represents the possible values for a top-level node on a foreign machine.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.ClassesRoot">
      <summary>Represents the HKEY_CLASSES_ROOT base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.CurrentUser">
      <summary>Represents the HKEY_CURRENT_USER base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.LocalMachine">
      <summary>Represents the HKEY_LOCAL_MACHINE base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.Users">
      <summary>Represents the HKEY_USERS base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.PerformanceData">
      <summary>Represents the HKEY_PERFORMANCE_DATA base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.CurrentConfig">
      <summary>Represents the HKEY_CURRENT_CONFIG base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.DynData">
      <summary>Represents the HKEY_DYN_DATA base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryKey">
      <summary>Represents a key-level node in the Windows registry. This class is a registry encapsulation.</summary>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.Close">
      <summary>Closes the key and flushes it to disk if its contents have been modified.</summary>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)">
      <summary>Creates a new subkey or opens an existing subkey for write access.  </summary>
      <returns>The newly created subkey, or null if the operation failed. If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</returns>
      <param name="subkey">The name or path of the subkey to create or open. This string is not case-sensitive.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights. </exception>
      <exception cref="T:System.IO.IOException">The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)">
      <summary>Creates a new subkey or opens an existing subkey for write access, using the specified permission check option. </summary>
      <returns>The newly created subkey, or null if the operation failed. If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</returns>
      <param name="subkey">The name or path of the subkey to create or open. This string is not case-sensitive.</param>
      <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionCheck" /> contains an invalid value.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights. </exception>
      <exception cref="T:System.IO.IOException">The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)">
      <summary>Creates a subkey or opens a subkey for write access, using the specified permission check and registry options. </summary>
      <returns>The newly created subkey, or null if the operation failed.</returns>
      <param name="subkey">The name or path of the subkey to create or open. </param>
      <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
      <param name="options">The registry option to use; for example, that creates a volatile key. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey " />is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</exception>
      <exception cref="T:System.IO.IOException">The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)">
      <summary>Creates a subkey or opens a subkey for write access, using the specified permission check option, registry option, and registry security.</summary>
      <returns>The newly created subkey, or null if the operation failed.  </returns>
      <param name="subkey">The name or path of the subkey to create or open.</param>
      <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
      <param name="registryOptions">The registry option to use.</param>
      <param name="registrySecurity">The access control security for the new subkey. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey " />is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object is closed. Closed keys cannot be accessed. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</exception>
      <exception cref="T:System.IO.IOException">The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)">
      <summary>Creates a new subkey or opens an existing subkey for write access, using the specified permission check option and registry security. </summary>
      <returns>The newly created subkey, or null if the operation failed. If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</returns>
      <param name="subkey">The name or path of the subkey to create or open. This string is not case-sensitive.</param>
      <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
      <param name="registrySecurity">The access control security for the new key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionCheck" /> contains an invalid value.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</exception>
      <exception cref="T:System.IO.IOException">The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)">
      <summary>Deletes the specified subkey. </summary>
      <param name="subkey">The name of the subkey to delete. This string is not case-sensitive.</param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="subkey" /> has child subkeys </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="subkey" /> parameter does not specify a valid registry key </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" /> is null</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)">
      <summary>Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found. </summary>
      <param name="subkey">The name of the subkey to delete. This string is not case-sensitive.</param>
      <param name="throwOnMissingSubKey">Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is true and the specified subkey does not exist, an exception is raised. If this argument is false and the specified subkey does not exist, no action is taken. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="subkey" /> has child subkeys. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="subkey" /> does not specify a valid registry key, and <paramref name="throwOnMissingSubKey" /> is true. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)">
      <summary>Deletes a subkey and any child subkeys recursively. </summary>
      <param name="subkey">The subkey to delete. This string is not case-sensitive.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" /> is null. </exception>
      <exception cref="T:System.ArgumentException">Deletion of a root hive is attempted.-or-<paramref name="subkey" /> does not specify a valid registry subkey. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)">
      <summary>Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found. </summary>
      <param name="subkey">The name of the subkey to delete. This string is not case-sensitive.</param>
      <param name="throwOnMissingSubKey">Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is true and the specified subkey does not exist, an exception is raised. If this argument is false and the specified subkey does not exist, no action is taken.</param>
      <exception cref="T:System.ArgumentException">An attempt was made to delete the root hive of the tree.-or-<paramref name="subkey" /> does not specify a valid registry subkey, and <paramref name="throwOnMissingSubKey" /> is true.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)">
      <summary>Deletes the specified value from this key.</summary>
      <param name="name">The name of the value to delete. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not a valid reference to a value. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the value. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is read-only. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)">
      <summary>Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.</summary>
      <param name="name">The name of the value to delete. </param>
      <param name="throwOnMissingValue">Indicates whether an exception should be raised if the specified value cannot be found. If this argument is true and the specified value does not exist, an exception is raised. If this argument is false and the specified value does not exist, no action is taken. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not a valid reference to a value and <paramref name="throwOnMissingValue" /> is true. -or- <paramref name="name" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the value. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is read-only. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:Microsoft.Win32.RegistryKey" /> class.</summary>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.Flush">
      <summary>Writes all the attributes of the specified open registry key into the registry.</summary>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)">
      <summary>Creates a registry key from a specified handle.</summary>
      <returns>A registry key.</returns>
      <param name="handle">The handle to the registry key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to perform this action.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)">
      <summary>Creates a registry key from a specified handle and registry view setting. </summary>
      <returns>A registry key.</returns>
      <param name="handle">The handle to the registry key.</param>
      <param name="view">The registry view to use.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="view" /> is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to perform this action.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetAccessControl">
      <summary>Returns the access control security for the current registry key.</summary>
      <returns>An object that describes the access control permissions on the registry key represented by the current <see cref="T:Microsoft.Win32.RegistryKey" />.</returns>
      <exception cref="T:System.Security.SecurityException">The user does not have the necessary permissions.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
      <exception cref="T:System.InvalidOperationException">The current key has been deleted.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
      <summary>Returns the specified sections of the access control security for the current registry key.</summary>
      <returns>An object that describes the access control permissions on the registry key represented by the current <see cref="T:Microsoft.Win32.RegistryKey" />.</returns>
      <param name="includeSections">A bitwise combination of enumeration values that specifies the type of security information to get. </param>
      <exception cref="T:System.Security.SecurityException">The user does not have the necessary permissions.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
      <exception cref="T:System.InvalidOperationException">The current key has been deleted.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetSubKeyNames">
      <summary>Retrieves an array of strings that contains all the subkey names.</summary>
      <returns>An array of strings that contains the names of the subkeys for the current key.</returns>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String)">
      <summary>Retrieves the value associated with the specified name. Returns null if the name/value pair does not exist in the registry.</summary>
      <returns>The value associated with <paramref name="name" />, or null if <paramref name="name" /> is not found.</returns>
      <param name="name">The name of the value to retrieve. This string is not case-sensitive.</param>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)">
      <summary>Retrieves the value associated with the specified name. If the name is not found, returns the default value that you provide.</summary>
      <returns>The value associated with <paramref name="name" />, with any embedded environment variables left unexpanded, or <paramref name="defaultValue" /> if <paramref name="name" /> is not found.</returns>
      <param name="name">The name of the value to retrieve. This string is not case-sensitive.</param>
      <param name="defaultValue">The value to return if <paramref name="name" /> does not exist. </param>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)">
      <summary>Retrieves the value associated with the specified name and retrieval options. If the name is not found, returns the default value that you provide.</summary>
      <returns>The value associated with <paramref name="name" />, processed according to the specified <paramref name="options" />, or <paramref name="defaultValue" /> if <paramref name="name" /> is not found.</returns>
      <param name="name">The name of the value to retrieve. This string is not case-sensitive.</param>
      <param name="defaultValue">The value to return if <paramref name="name" /> does not exist. </param>
      <param name="options">One of the enumeration values that specifies optional processing of the retrieved value.</param>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not a valid <see cref="T:Microsoft.Win32.RegistryValueOptions" /> value; for example, an invalid value is cast to <see cref="T:Microsoft.Win32.RegistryValueOptions" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)">
      <summary>Retrieves the registry data type of the value associated with the specified name.</summary>
      <returns>The registry data type of the value associated with <paramref name="name" />.</returns>
      <param name="name">The name of the value whose registry data type is to be retrieved. This string is not case-sensitive.</param>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.IO.IOException">The subkey that contains the specified value does not exist.-or-The name/value pair specified by <paramref name="name" /> does not exist.This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValueNames">
      <summary>Retrieves an array of strings that contains all the value names associated with this key.</summary>
      <returns>An array of strings that contains the value names for the current key.</returns>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" />  being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.IO.IOException">A system error occurred; for example, the current key has been deleted.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.Handle">
      <summary>Gets a <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> object that represents the registry key that the current <see cref="T:Microsoft.Win32.RegistryKey" /> object encapsulates.</summary>
      <returns>The handle to the registry key.</returns>
      <exception cref="T:System.ObjectDisposedException">The registry key is closed. Closed keys cannot be accessed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.IO.IOException">A system error occurred, such as deletion of the current key.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read the key.</exception>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.Name">
      <summary>Retrieves the name of the key.</summary>
      <returns>The absolute (qualified) name of the key.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed). </exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)">
      <summary>Opens a new <see cref="T:Microsoft.Win32.RegistryKey" /> that represents the requested key on the local machine with the specified view.</summary>
      <returns>The requested registry key.</returns>
      <param name="hKey">The HKEY to open.</param>
      <param name="view">The registry view to use.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hKey" /> or <paramref name="view" /> is invalid.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to perform this action.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)">
      <summary>Opens a new <see cref="T:Microsoft.Win32.RegistryKey" /> that represents the requested key on a remote machine.</summary>
      <returns>The requested registry key.</returns>
      <param name="hKey">The HKEY to open, from the <see cref="T:Microsoft.Win32.RegistryHive" /> enumeration. </param>
      <param name="machineName">The remote machine. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hKey" /> is invalid.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="machineName" /> is not found.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the proper permissions to perform this operation. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)">
      <summary>Opens a new registry key that represents the requested key on a remote machine with the specified view.</summary>
      <returns>The requested registry key.</returns>
      <param name="hKey">The HKEY to open from the <see cref="T:Microsoft.Win32.RegistryHive" /> enumeration.. </param>
      <param name="machineName">The remote machine.</param>
      <param name="view">The registry view to use.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hKey" /> or <paramref name="view" /> is invalid.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="machineName" /> is not found.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> is null. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> is null. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the required permissions to perform this operation.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)">
      <summary>Retrieves a subkey as read-only.</summary>
      <returns>The subkey requested, or null if the operation failed.</returns>
      <param name="name">The name or path of the subkey to open as read-only. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read the registry key. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)">
      <summary>Retrieves the specified subkey for read or read/write access.</summary>
      <returns>The subkey requested, or null if the operation failed.</returns>
      <param name="name">The name or path of the subkey to create or open.</param>
      <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionCheck" /> contains an invalid value.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read the registry key. </exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)">
      <summary>Retrieves the specified subkey for read or read/write access, requesting the specified access rights.</summary>
      <returns>The subkey requested, or null if the operation failed.</returns>
      <param name="name">The name or path of the subkey to create or open.</param>
      <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
      <param name="rights">A bitwise combination of enumeration values that specifies the desired security access.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionCheck" /> contains an invalid value.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="rights" /> includes invalid registry rights values.-or-The user does not have the requested permissions. </exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)">
      <summary>Retrieves a specified subkey, and specifies whether write access is be applied to the key. </summary>
      <returns>The subkey requested, or null if the operation failed.</returns>
      <param name="name">Name or path of the subkey to open. </param>
      <param name="writable">Set to true if you need write access to the key. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to access the registry key in the specified mode. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)">
      <summary>Applies Windows access control security to an existing registry key.</summary>
      <param name="registrySecurity">The access control security to apply to the current subkey. </param>
      <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a key with access control security, and the caller does not have <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> rights.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="registrySecurity" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)">
      <summary>Sets the specified name/value pair.</summary>
      <param name="name">The name of the value to store. </param>
      <param name="value">The data to be stored. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is an unsupported data type. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and cannot be written to; for example, the key has not been opened with write access. -or-The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>Sets the value of a name/value pair in the registry key, using the specified registry data type.</summary>
      <param name="name">The name of the value to be stored. </param>
      <param name="value">The data to be stored. </param>
      <param name="valueKind">The registry data type to use when storing the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and cannot be written to; for example, the key has not been opened with write access.-or-The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.SubKeyCount">
      <summary>Retrieves the count of subkeys of the current key.</summary>
      <returns>The number of subkeys of the current key.</returns>
      <exception cref="T:System.Security.SecurityException">The user does not have read permission for the key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.ToString">
      <summary>Retrieves a string representation of this key.</summary>
      <returns>A string representing the key. If the specified key is invalid (cannot be found) then null is returned.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being accessed is closed (closed keys cannot be accessed). </exception>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.ValueCount">
      <summary>Retrieves the count of values in the key.</summary>
      <returns>The number of name/value pairs in the key.</returns>
      <exception cref="T:System.Security.SecurityException">The user does not have read permission for the key. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
      <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.View">
      <summary>Gets the view that was used to create the registry key. </summary>
      <returns>The view that was used to create the registry key.-or-<see cref="F:Microsoft.Win32.RegistryView.Default" />, if no view was used.</returns>
    </member>
    <member name="T:Microsoft.Win32.RegistryKeyPermissionCheck">
      <summary>Specifies whether security checks are performed when opening registry keys and accessing their name/value pairs.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.Default">
      <summary>The registry key inherits the mode of its parent. Security checks are performed when trying to access subkeys or values, unless the parent was opened with <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree" /> or <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" /> mode.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree">
      <summary>Security checks are not performed when accessing subkeys or values. A security check is performed when trying to open the current key, unless the parent was opened with <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree" /> or <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" />.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree">
      <summary>Security checks are not performed when accessing subkeys or values. A security check is performed when trying to open the current key, unless the parent was opened with <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" />.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryOptions">
      <summary>Specifies options to use when creating a registry key.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryOptions.None">
      <summary>A non-volatile key. This is the default.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryOptions.Volatile">
      <summary>A volatile key. The information is stored in memory and is not preserved when the corresponding registry hive is unloaded.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryValueKind">
      <summary>Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.String">
      <summary>A null-terminated string. This value is equivalent to the Win32 API registry data type REG_SZ.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.ExpandString">
      <summary>A null-terminated string that contains unexpanded references to environment variables, such as %PATH%, that are expanded when the value is retrieved. This value is equivalent to the Win32 API registry data type REG_EXPAND_SZ.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.Binary">
      <summary>Binary data in any form. This value is equivalent to the Win32 API registry data type REG_BINARY. </summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.DWord">
      <summary>A 32-bit binary number. This value is equivalent to the Win32 API registry data type REG_DWORD.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.MultiString">
      <summary>An array of null-terminated strings, terminated by two null characters. This value is equivalent to the Win32 API registry data type REG_MULTI_SZ.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.QWord">
      <summary>A 64-bit binary number. This value is equivalent to the Win32 API registry data type REG_QWORD.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.Unknown">
      <summary>An unsupported registry data type. For example, the Microsoft Win32 API registry data type REG_RESOURCE_LIST is unsupported. Use this value to specify that the <see cref="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" /> method should determine the appropriate registry data type when storing a name/value pair.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.None">
      <summary>No data type.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryValueOptions">
      <summary>Specifies optional behavior when retrieving name/value pairs from a registry key.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueOptions.None">
      <summary>No optional behavior is specified.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames">
      <summary>A value of type <see cref="F:Microsoft.Win32.RegistryValueKind.ExpandString" /> is retrieved without expanding its embedded environment variables. </summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryView">
      <summary>Specifies which registry view to target on a 64-bit operating system.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryView.Default">
      <summary>The default view.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryView.Registry64">
      <summary>The 64-bit view.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryView.Registry32">
      <summary>The 32-bit view.</summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
      <summary>Provides a base class for Win32 critical handle implementations in which the value of -1 indicates an invalid handle.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" /> class.</summary>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid">
      <summary>Gets a value that indicates whether the handle is invalid.</summary>
      <returns>true if the handle is not valid; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
      <summary>Provides a base class for Win32 critical handle implementations in which the value of either 0 or -1 indicates an invalid handle.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" /> class. </summary>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid">
      <summary>Gets a value that indicates whether the handle is invalid.</summary>
      <returns>true if the handle is not valid; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeFileHandle">
      <summary>Represents a wrapper class for a file handle. </summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> class. </summary>
      <param name="preexistingHandle">An <see cref="T:System.IntPtr" /> object that represents the pre-existing handle to use.</param>
      <param name="ownsHandle">true to reliably release the handle during the finalization phase; false to prevent reliable release (not recommended).</param>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
      <summary>Provides a base class for Win32 safe handle implementations in which the value of -1 indicates an invalid handle.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" /> class, specifying whether the handle is to be reliably released. </summary>
      <param name="ownsHandle">true to reliably release the handle during the finalization phase; false to prevent reliable release (not recommended).</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid">
      <summary>Gets a value that indicates whether the handle is invalid.</summary>
      <returns>true if the handle is not valid; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <summary>Provides a base class for Win32 safe handle implementations in which the value of either 0 or -1 indicates an invalid handle.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" /> class, specifying whether the handle is to be reliably released. </summary>
      <param name="ownsHandle">true to reliably release the handle during the finalization phase; false to prevent reliable release (not recommended).</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid">
      <summary>Gets a value that indicates whether the handle is invalid.</summary>
      <returns>true if the handle is not valid; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle">
      <summary>Represents a safe handle to the Windows registry.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> class. </summary>
      <param name="preexistingHandle">An object that represents the pre-existing handle to use.</param>
      <param name="ownsHandle">true to reliably release the handle during the finalization phase; false to prevent reliable release.</param>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeWaitHandle">
      <summary>Represents a wrapper class for a wait handle. </summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeWaitHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> class. </summary>
      <param name="existingHandle">An <see cref="T:System.IntPtr" /> object that represents the pre-existing handle to use.</param>
      <param name="ownsHandle">true to reliably release the handle during the finalization phase; false to prevent reliable release (not recommended).</param>
    </member>
    <member name="T:System._AppDomain">
      <summary>Exposes the public members of the <see cref="T:System.AppDomain" /> class to unmanaged code.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.AppendPrivatePath(System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.AppendPrivatePath(System.String)" /> method.</summary>
      <param name="path">The name of the directory to be appended to the private path. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System._AppDomain.AssemblyLoad">
      <summary>Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.AssemblyLoad" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System._AppDomain.AssemblyResolve">
      <summary>Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.AssemblyResolve" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System._AppDomain.BaseDirectory">
      <summary>Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.BaseDirectory" /> property.</summary>
      <returns>The base directory that the assembly resolver uses to probe for assemblies.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.ClearPrivatePath">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ClearPrivatePath" /> method.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System._AppDomain.ClearShadowCopyPath">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ClearShadowCopyPath" /> method.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System._AppDomain.CreateInstance(System.String,System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstance(System.String,System.String)" /> method.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" /> method overload.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityAttributes">Information used to authorize creation of <paramref name="typeName" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.CreateInstance(System.String,System.String,System.Object[])">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])" /> method overload.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.CreateInstanceFrom(System.String,System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)" /> method overload.</summary>
      <returns>An object that is a wrapper for the new instance, or null if <paramref name="typeName" /> is not found. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyFile">The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />  method.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" /> method overload.</summary>
      <returns>An object that is a wrapper for the new instance, or null if <paramref name="typeName" /> is not found. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyFile">The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />  method.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityAttributes">Information used to authorize creation of <paramref name="typeName" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])" /> method overload.</summary>
      <returns>An object that is a wrapper for the new instance, or null if <paramref name="typeName" /> is not found. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyFile">The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />  method. </param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The access mode for the dynamic assembly. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)" /> method overload.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the dynamic assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <param name="isSynchronized">true to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)" /> method. </summary>
      <param name="theDelegate">A delegate that specifies a method to call.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System._AppDomain.DomainUnload">
      <summary>Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.DomainUnload" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System._AppDomain.DynamicDirectory">
      <summary>Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.DynamicDirectory" /> property.</summary>
      <returns>Get the directory that the assembly resolver uses to probe for dynamically-created assemblies.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.Equals(System.Object)">
      <summary>Provides COM objects with version-independent access to the inherited <see cref="M:System.Object.Equals(System.Object)" /> method.</summary>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
      <param name="other">The <see cref="T:System.Object" /> to compare to the current <see cref="T:System.Object" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System._AppDomain.Evidence">
      <summary>Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.Evidence" /> property.</summary>
      <returns>Gets the <see cref="T:System.Security.Policy.Evidence" /> associated with this application domain that is used as input to the security policy.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.ExecuteAssembly(System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" /> method overload.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)" /> method overload.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute. </param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])" /> method overload.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute. </param>
      <param name="assemblySecurity">The supplied evidence for the assembly. </param>
      <param name="args">The arguments to the entry point of the assembly. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System._AppDomain.FriendlyName">
      <summary>Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.FriendlyName" /> property.</summary>
      <returns>The friendly name of this application domain.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.GetAssemblies">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.GetAssemblies" /> method.</summary>
      <returns>An array of assemblies in this application domain.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.GetData(System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.GetData(System.String)" /> method.</summary>
      <returns>The value of the <paramref name="name" /> property.</returns>
      <param name="name">The name of a predefined application domain property, or the name of an application domain property you have defined. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.GetHashCode">
      <summary>Provides COM objects with version-independent access to the inherited <see cref="M:System.Object.GetHashCode" /> method.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
      <summary>Maps a set of names to a corresponding set of dispatch identifiers.</summary>
      <param name="riid">Reserved for future use. Must be IID_NULL.</param>
      <param name="rgszNames">Passed-in array of names to be mapped.</param>
      <param name="cNames">Count of the names to be mapped.</param>
      <param name="lcid">The locale context in which to interpret the names.</param>
      <param name="rgDispId">Caller-allocated array which receives the IDs corresponding to the names.</param>
      <exception cref="T:System.NotImplementedException">The method is called late-bound using the COM IDispatch interface.</exception>
    </member>
    <member name="M:System._AppDomain.GetLifetimeService">
      <summary>Provides COM objects with version-independent access to the inherited <see cref="M:System.MarshalByRefObject.GetLifetimeService" /> method.</summary>
      <returns>An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
      </PermissionSet>
    </member>
    <member name="M:System._AppDomain.GetType">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.GetType" /> method.</summary>
      <returns>A <see cref="T:System.Type" /> representing the type of the current instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
      <summary>Retrieves the type information for an object, which can then be used to get the type information for an interface.</summary>
      <param name="iTInfo">The type information to return.</param>
      <param name="lcid">The locale identifier for the type information.</param>
      <param name="ppTInfo">Receives a pointer to the requested type information object.</param>
      <exception cref="T:System.NotImplementedException">The method is called late-bound using the COM IDispatch interface.</exception>
    </member>
    <member name="M:System._AppDomain.GetTypeInfoCount(System.UInt32@)">
      <summary>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</summary>
      <param name="pcTInfo">Points to a location that receives the number of type information interfaces provided by the object.</param>
      <exception cref="T:System.NotImplementedException">The method is called late-bound using the COM IDispatch interface.</exception>
    </member>
    <member name="M:System._AppDomain.InitializeLifetimeService">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.InitializeLifetimeService" /> method.</summary>
      <returns>Always null.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
      </PermissionSet>
    </member>
    <member name="M:System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Provides access to properties and methods exposed by an object.</summary>
      <param name="dispIdMember">Identifies the member.</param>
      <param name="riid">Reserved for future use. Must be IID_NULL.</param>
      <param name="lcid">The locale context in which to interpret arguments.</param>
      <param name="wFlags">Flags describing the context of the call.</param>
      <param name="pDispParams">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</param>
      <param name="pVarResult">Pointer to the location where the result is to be stored.</param>
      <param name="pExcepInfo">Pointer to a structure that contains exception information.</param>
      <param name="puArgErr">The index of the first argument that has an error.</param>
      <exception cref="T:System.NotImplementedException">The method is called late-bound using the COM IDispatch interface.</exception>
    </member>
    <member name="M:System._AppDomain.Load(System.Byte[])">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Byte[])" /> method overload.</summary>
      <returns>The loaded assembly.</returns>
      <param name="rawAssembly">An array of type byte that is a COFF-based image containing an emitted assembly. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.Load(System.Byte[],System.Byte[])">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[])" /> method overload.</summary>
      <returns>The loaded assembly.</returns>
      <param name="rawAssembly">An array of type byte that is a COFF-based image containing an emitted assembly. </param>
      <param name="rawSymbolStore">An array of type byte containing the raw bytes representing the symbols for the assembly. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" /> method overload.</summary>
      <returns>The loaded assembly.</returns>
      <param name="rawAssembly">An array of type byte that is a COFF-based image containing an emitted assembly. </param>
      <param name="rawSymbolStore">An array of type byte containing the raw bytes representing the symbols for the assembly. </param>
      <param name="securityEvidence">Evidence for loading the assembly. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.Load(System.Reflection.AssemblyName)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName)" /> method overload.</summary>
      <returns>The loaded assembly.</returns>
      <param name="assemblyRef">An object that describes the assembly to load. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" /> method overload.</summary>
      <returns>The loaded assembly.</returns>
      <param name="assemblyRef">An object that describes the assembly to load. </param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.Load(System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.String)" /> method overload.</summary>
      <returns>The loaded assembly.</returns>
      <param name="assemblyString">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.Load(System.String,System.Security.Policy.Evidence)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.String,System.Security.Policy.Evidence)" /> method overload.</summary>
      <returns>The loaded assembly.</returns>
      <param name="assemblyString">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System._AppDomain.ProcessExit">
      <summary>Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.ProcessExit" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System._AppDomain.RelativeSearchPath">
      <summary>Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.RelativeSearchPath" /> property.</summary>
      <returns>The path under the base directory where the assembly resolver should probe for private assemblies.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System._AppDomain.ResourceResolve">
      <summary>Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.ResourceResolve" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)" /> method.</summary>
      <param name="domainPolicy">The security policy level. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlDomainPolicy" />
      </PermissionSet>
    </member>
    <member name="M:System._AppDomain.SetCachePath(System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetCachePath(System.String)" /> method.</summary>
      <param name="s">The fully qualified path to the shadow copy location. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.SetData(System.String,System.Object)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetData(System.String,System.Object)" /> method.</summary>
      <param name="name">The name of a user-defined application domain property to create or change. </param>
      <param name="data">The value of the property. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)" /> method.</summary>
      <param name="policy">One of the <see cref="T:System.Security.Principal.PrincipalPolicy" /> values that specifies the type of the principal object to attach to threads. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.SetShadowCopyPath(System.String)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetShadowCopyPath(System.String)" /> method.</summary>
      <param name="s">A list of directory names, where each name is separated by a semicolon. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)" /> method.</summary>
      <param name="principal">The principal object to attach to threads. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System._AppDomain.ShadowCopyFiles">
      <summary>Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.ShadowCopyFiles" /> property.</summary>
      <returns>true if the application domain is configured to shadow copy files; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System._AppDomain.ToString">
      <summary>Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ToString" /> method.</summary>
      <returns>A string formed by concatenating the literal string "Name:", the friendly name of the application domain, and either string representations of the context policies or the string "There are no context policies." </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System._AppDomain.TypeResolve">
      <summary>Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.TypeResolve" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System._AppDomain.UnhandledException">
      <summary>Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.UnhandledException" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AccessViolationException">
      <summary>The exception that is thrown when there is an attempt to read or write protected memory.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AccessViolationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.AccessViolationException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.AccessViolationException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:System.AccessViolationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.AccessViolationException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.AccessViolationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Action">
      <summary>Encapsulates a method that has no parameters and does not return a value.</summary>
    </member>
    <member name="T:System.Action`1">
      <summary>Encapsulates a method that has a single parameter and does not return a value.</summary>
      <param name="obj">The parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T">The type of the parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Action`2">
      <summary>Encapsulates a method that has two parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Action`3">
      <summary>Encapsulates a method that has three parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Action`4">
      <summary>Encapsulates a method that has four parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Action`5">
      <summary>Encapsulates a method that has five parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Action`6">
      <summary>Encapsulates a method that has six parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Action`7">
      <summary>Encapsulates a method that has seven parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Action`8">
      <summary>Encapsulates a method that has eight parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ActivationContext">
      <summary>Identifies the activation context for the current application. This class cannot be inherited. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ActivationContext.ApplicationManifestBytes">
      <summary>Gets the ClickOnce application manifest for the current application.</summary>
      <returns>A byte array that contains the ClickOnce application manifest for the application that is associated with this <see cref="T:System.ActivationContext" />.</returns>
    </member>
    <member name="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity.</summary>
      <returns>An object with the specified application identity.</returns>
      <param name="identity">An object that identifies an application.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null. </exception>
      <exception cref="T:System.ArgumentException">No deployment or application identity is specified in <paramref name="identity" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity and array of manifest paths.</summary>
      <returns>An object with the specified application identity and array of manifest paths.</returns>
      <param name="identity">An object that identifies an application.</param>
      <param name="manifestPaths">A string array of manifest paths for the application.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null. -or-<paramref name="manifestPaths" /> is null. </exception>
      <exception cref="T:System.ArgumentException">No deployment or application identity is specified in <paramref name="identity" />.-or-<paramref name="identity" /> does not match the identity in the manifests.-or-<paramref name="identity" /> does not have the same number of components as the manifest paths.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.ActivationContext.DeploymentManifestBytes">
      <summary>Gets the ClickOnce deployment manifest for the current application.</summary>
      <returns>A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <see cref="T:System.ActivationContext" />.</returns>
    </member>
    <member name="M:System.ActivationContext.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ActivationContext" />. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ActivationContext.Form">
      <summary>Gets the form, or store context, for the current application. </summary>
      <returns>One of the enumeration values. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ActivationContext.Identity">
      <summary>Gets the application identity for the current application.</summary>
      <returns>An <see cref="T:System.ApplicationIdentity" /> object that identifies the current application.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The object to populate with data.</param>
      <param name="context">The structure for this serialization.</param>
    </member>
    <member name="T:System.ActivationContext.ContextForm">
      <summary>Indicates the context for a manifest-activated application.</summary>
    </member>
    <member name="F:System.ActivationContext.ContextForm.Loose">
      <summary>The application is not in the ClickOnce store.</summary>
    </member>
    <member name="F:System.ActivationContext.ContextForm.StoreBounded">
      <summary>The application is contained in the ClickOnce store.</summary>
    </member>
    <member name="T:System.Activator">
      <summary>Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects. This class cannot be inherited. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
      <summary>Creates an instance of the COM object whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyName">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> or <paramref name="assemblyName" /> is null. </exception>
      <exception cref="T:System.TypeLoadException">An instance cannot be created through COM. -or-<paramref name="typename" /> was not found in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class.-or-This member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> is the empty string (""). </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
      <summary>Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyName">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="hashValue">The value of the computed hash code. </param>
      <param name="hashAlgorithm">The hash algorithm used for hashing files and generating the strong name. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> or <paramref name="assemblyName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> is the empty string (""). </exception>
      <exception cref="T:System.IO.PathTooLongException">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension. </exception>
      <exception cref="T:System.IO.FileLoadException">
        <paramref name="assemblyName" /> is found but cannot be loaded. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. </exception>
      <exception cref="T:System.Security.SecurityException">A code base that does not start with "file://" was specified without the required WebPermission. </exception>
      <exception cref="T:System.TypeLoadException">An instance cannot be created through COM.-or- <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.MemberAccessException">An instance of an abstract class cannot be created. -or-This member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance``1">
      <summary>Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor .</summary>
      <returns>A reference to the newly created object.</returns>
      <typeparam name="T">The type to create.</typeparam>
      <exception cref="T:System.MissingMethodException">The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.ActivationContext)">
      <summary>Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</summary>
      <returns>A handle that must be unwrapped to access the newly created object.</returns>
      <param name="activationContext">An activation context object that specifies the object to create.</param>
    </member>
    <member name="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
      <summary>Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</summary>
      <returns>A handle that must be unwrapped to access the newly created object.</returns>
      <param name="activationContext">An activation context object that specifies the object to create.</param>
      <param name="activationCustomData">An array of Unicode strings that contain custom activation data.</param>
    </member>
    <member name="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
      <summary>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="domain">The remote domain where the type named <paramref name="typeName" /> is created.</param>
      <param name="assemblyName">The name of the assembly where the type named <paramref name="typeName" /> is sought. If <paramref name="assemblyName" /> is null, the executing assembly is searched. </param>
      <param name="typeName">The name of the preferred type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> or <paramref name="domain" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract type. -or-This member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.NotSupportedException">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="domain">The domain where the type named <paramref name="typeName" /> is created.</param>
      <param name="assemblyName">The name of the assembly where the type named <paramref name="typeName" /> is sought. If <paramref name="assemblyName" /> is null, the executing assembly is searched. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="ignoreCase">true to specify that the search for <paramref name="typeName" /> is not case-sensitive; false to specify that the search is case-sensitive. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.NotSupportedException">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.-or- <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. -or-The constructor that best matches <paramref name="args" /> has varargs arguments.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="domain">The domain where the type named <paramref name="typeName" /> is created.</param>
      <param name="assemblyName">The name of the assembly where the type named <paramref name="typeName" /> is sought. If <paramref name="assemblyName" /> is null, the executing assembly is searched. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="ignoreCase">true to specify that the search for <paramref name="typeName" /> is not case-sensitive; false to specify that the search is case-sensitive. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityAttributes">Information used to make security policy decisions and grant code permissions. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.NotSupportedException">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.-or- <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. -or-The constructor that best matches <paramref name="args" /> has varargs arguments.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.String,System.String)">
      <summary>Creates an instance of the type whose name is specified, using the named assembly and default constructor.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyName">The name of the assembly where the type named <paramref name="typeName" /> is sought. If <paramref name="assemblyName" /> is null, the executing assembly is searched. </param>
      <param name="typeName">The name of the preferred type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.NotSupportedException">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyName">The name of the assembly where the type named <paramref name="typeName" /> is sought. If <paramref name="assemblyName" /> is null, the executing assembly is searched. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="ignoreCase">true to specify that the search for <paramref name="typeName" /> is not case-sensitive; false to specify that the search is case-sensitive. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.NotSupportedException">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.-or- <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. -or-The constructor that best matches <paramref name="args" /> has varargs arguments.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyName">The name of the assembly where the type named <paramref name="typeName" /> is sought. If <paramref name="assemblyName" /> is null, the executing assembly is searched. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="ignoreCase">true to specify that the search for <paramref name="typeName" /> is not case-sensitive; false to specify that the search is case-sensitive. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityInfo">Information used to make security policy decisions and grant code permissions. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.NotSupportedException">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.-or- <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. -or-The constructor that best matches <paramref name="args" /> has varargs arguments.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
      <summary>Creates an instance of the type whose name is specified, using the named assembly and default constructor.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyName">The name of the assembly where the type named <paramref name="typeName" /> is sought. If <paramref name="assemblyName" /> is null, the executing assembly is searched. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.NotSupportedException">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.-or- <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.-or-<paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />array. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type)">
      <summary>Creates an instance of the specified type using that type's default constructor.</summary>
      <returns>A reference to the newly created object.</returns>
      <param name="type">The type of object to create. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not a RuntimeType. -or-<paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns true).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.-or- Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.-or-The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor being called throws an exception. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> is not a valid type. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
      <summary>Creates an instance of the specified type using that type's default constructor.</summary>
      <returns>A reference to the newly created object.</returns>
      <param name="type">The type of object to create. </param>
      <param name="nonPublic">true if a public or nonpublic default constructor can match; false if only a public default constructor can match. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not a RuntimeType. -or-<paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns true).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.-or- Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported. -or-The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor being called throws an exception. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> is not a valid type. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Object[])">
      <summary>Creates an instance of the specified type using the constructor that best matches the specified parameters.</summary>
      <returns>A reference to the newly created object.</returns>
      <param name="type">The type of object to create. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not a RuntimeType. -or-<paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns true).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.-or- Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported. -or-The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.-or-The constructor that best matches <paramref name="args" /> has varargs arguments.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor being called throws an exception. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> is not a valid type. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
      <summary>Creates an instance of the specified type using the constructor that best matches the specified parameters.</summary>
      <returns>A reference to the newly created object.</returns>
      <param name="type">The type of object to create. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not a RuntimeType. -or-<paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns true).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.-or- Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.-or- <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. -or-The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.-or-The constructor that best matches <paramref name="args" /> has varargs arguments.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor being called throws an exception. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> is not a valid type. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Creates an instance of the specified type using the constructor that best matches the specified parameters.</summary>
      <returns>A reference to the newly created object.</returns>
      <param name="type">The type of object to create. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not a RuntimeType. -or-<paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns true).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.-or- Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported. -or-The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.-or-The constructor that best matches <paramref name="args" /> has varargs arguments.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor being called throws an exception. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> is not a valid type. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates an instance of the specified type using the constructor that best matches the specified parameters.</summary>
      <returns>A reference to the newly created object.</returns>
      <param name="type">The type of object to create. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not a RuntimeType. -or-<paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns true).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.-or- Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.-or- <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. -or-The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.-or-The constructor that best matches <paramref name="args" /> has varargs arguments.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor being called throws an exception. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> is not a valid type. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
      <summary>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="domain">The remote domain where the type named <paramref name="typeName" /> is created.</param>
      <param name="assemblyFile">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
    </member>
    <member name="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="domain">The remote domain where the type named <paramref name="typeName" /> is created.</param>
      <param name="assemblyFile">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="ignoreCase">true to specify that the search for <paramref name="typeName" /> is not case-sensitive; false to specify that the search is case-sensitive. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-<paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded. </exception>
    </member>
    <member name="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="domain">The remote domain where the type named <paramref name="typeName" /> is created.</param>
      <param name="assemblyFile">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="ignoreCase">true to specify that the search for <paramref name="typeName" /> is not case-sensitive; false to specify that the search is case-sensitive. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityAttributes">Information used to make security policy decisions and grant code permissions. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
    </member>
    <member name="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
      <summary>Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyFile">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyFile">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="ignoreCase">true to specify that the search for <paramref name="typeName" /> is not case-sensitive; false to specify that the search is case-sensitive. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
    </member>
    <member name="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyFile">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="ignoreCase">true to specify that the search for <paramref name="typeName" /> is not case-sensitive; false to specify that the search is case-sensitive. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <paramref name="args" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityInfo">Information used to make security policy decisions and grant code permissions. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
      <summary>Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</summary>
      <returns>A handle that must be unwrapped to access the newly created instance.</returns>
      <param name="assemblyFile">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought. </param>
      <param name="typeName">The name of the preferred type. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MemberAccessException">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor, which was invoked through reflection, threw an exception. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version. Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.GetObject(System.Type,System.String)">
      <summary>Creates a proxy for the well-known object indicated by the specified type and URL.</summary>
      <returns>A proxy that points to an endpoint served by the requested well-known object.</returns>
      <param name="type">The type of the well-known object to which you want to connect. </param>
      <param name="url">The URL of the well-known object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> or <paramref name="url" /> is null. </exception>
      <exception cref="T:System.Runtime.Remoting.RemotingException">
        <paramref name="type" /> is not marshaled by reference.-or-<paramref name="type" /> is an interface. </exception>
      <exception cref="T:System.MemberAccessException">This member was invoked with a late-binding mechanism. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
      <summary>Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</summary>
      <returns>A proxy that points to an endpoint served by the requested well-known object.</returns>
      <param name="type">The type of the well-known object to which you want to connect. </param>
      <param name="url">The URL of the well-known object. </param>
      <param name="state">Channel-specific data or null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> or <paramref name="url" /> is null. </exception>
      <exception cref="T:System.Runtime.Remoting.RemotingException">
        <paramref name="type" /> is not marshaled by reference.-or-<paramref name="type" /> is an interface. </exception>
      <exception cref="T:System.MemberAccessException">This member was invoked with a late-binding mechanism. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
      <summary>Maps a set of names to a corresponding set of dispatch identifiers.</summary>
      <param name="riid">Reserved for future use. Must be IID_NULL.</param>
      <param name="rgszNames">The passed-in array of names to map.</param>
      <param name="cNames">The count of the names to map.</param>
      <param name="lcid">The locale context in which to interpret the names.</param>
      <param name="rgDispId">The caller-allocated array that receives the IDs corresponding to the names.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
      <summary>Retrieves the type information for an object, which can then be used to get the type information for an interface.</summary>
      <param name="iTInfo">The type information to return.</param>
      <param name="lcid">The locale identifier for the type information.</param>
      <param name="ppTInfo">An <see cref="T:System.IntPtr" /> object that receives a pointer to the requested type information object.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)">
      <summary>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</summary>
      <param name="pcTInfo">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Provides access to properties and methods exposed by an object.</summary>
      <param name="dispIdMember">A dispatch identifier that identifies the member.</param>
      <param name="riid">Reserved for future use. Must be IID_NULL.</param>
      <param name="lcid">The locale context in which to interpret arguments.</param>
      <param name="wFlags">Flags describing the context of the call.</param>
      <param name="pDispParams">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</param>
      <param name="pVarResult">A pointer to the location where the result is to be stored.</param>
      <param name="pExcepInfo">A pointer to a structure that contains exception information.</param>
      <param name="puArgErr">The index of the first argument that has an error.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="T:System.AggregateException">
      <summary>Represents one or more errors that occur during application execution.</summary>
    </member>
    <member name="M:System.AggregateException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with references to the inner exceptions that are the cause of this exception.</summary>
      <param name="innerExceptions">The exceptions that are the cause of the current exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="innerExceptions" /> argument is null.</exception>
      <exception cref="T:System.ArgumentException">An element of <paramref name="innerExceptions" /> is null.</exception>
    </member>
    <member name="M:System.AggregateException.#ctor(System.Exception[])">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with references to the inner exceptions that are the cause of this exception.</summary>
      <param name="innerExceptions">The exceptions that are the cause of the current exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="innerExceptions" /> argument is null.</exception>
      <exception cref="T:System.ArgumentException">An element of <paramref name="innerExceptions" /> is null.</exception>
    </member>
    <member name="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> argument is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The exception could not be deserialized correctly.</exception>
    </member>
    <member name="M:System.AggregateException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and references to the inner exceptions that are the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerExceptions">The exceptions that are the cause of the current exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="innerExceptions" /> argument is null.</exception>
      <exception cref="T:System.ArgumentException">An element of <paramref name="innerExceptions" /> is null.</exception>
    </member>
    <member name="M:System.AggregateException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="innerException" /> argument is null.</exception>
    </member>
    <member name="M:System.AggregateException.#ctor(System.String,System.Exception[])">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and references to the inner exceptions that are the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerExceptions">The exceptions that are the cause of the current exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="innerExceptions" /> argument is null.</exception>
      <exception cref="T:System.ArgumentException">An element of <paramref name="innerExceptions" /> is null.</exception>
    </member>
    <member name="M:System.AggregateException.Flatten">
      <summary>Flattens an <see cref="T:System.AggregateException" /> instances into a single, new instance.</summary>
      <returns>A new, flattened <see cref="T:System.AggregateException" />.</returns>
    </member>
    <member name="M:System.AggregateException.GetBaseException">
      <summary>Returns the <see cref="T:System.AggregateException" /> that is the root cause of this exception.</summary>
      <returns>Returns the <see cref="T:System.AggregateException" /> that is the root cause of this exception.</returns>
    </member>
    <member name="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.AggregateException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> argument is null.</exception>
    </member>
    <member name="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
      <summary>Invokes a handler on each <see cref="T:System.Exception" /> contained by this <see cref="T:System.AggregateException" />.</summary>
      <param name="predicate">The predicate to execute for each exception. The predicate accepts as an argument the <see cref="T:System.Exception" /> to be processed and returns a Boolean to indicate whether the exception was handled.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="predicate" /> argument is null.</exception>
      <exception cref="T:System.AggregateException">An exception contained by this <see cref="T:System.AggregateException" /> was not handled.</exception>
    </member>
    <member name="P:System.AggregateException.InnerExceptions">
      <summary>Gets a read-only collection of the <see cref="T:System.Exception" /> instances that caused the current exception.</summary>
      <returns>Returns a read-only collection of the <see cref="T:System.Exception" /> instances that caused the current exception.</returns>
    </member>
    <member name="M:System.AggregateException.ToString">
      <summary>Creates and returns a string representation of the current <see cref="T:System.AggregateException" />.</summary>
      <returns>A string representation of the current exception.</returns>
    </member>
    <member name="T:System.AppDomain">
      <summary>Represents an application domain, which is an isolated environment where applications execute. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.AppDomain.ActivationContext">
      <summary>Gets the activation context for the current application domain.</summary>
      <returns>An <see cref="T:System.ActivationContext" /> object that represents the activation context for the current application domain, or null if the domain has no activation context.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AppDomain.AppendPrivatePath(System.String)">
      <summary>Appends the specified directory name to the private path list.</summary>
      <param name="path">The name of the directory to be appended to the private path. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomain.ApplicationIdentity">
      <summary>Gets the identity of the application in the application domain.</summary>
      <returns>An <see cref="T:System.ApplicationIdentity" /> object identifying the application in the application domain.</returns>
    </member>
    <member name="P:System.AppDomain.ApplicationTrust">
      <summary>Gets information describing permissions granted to an application and whether the application has a trust level that allows it to run.</summary>
      <returns>An <see cref="T:System.Security.Policy.ApplicationTrust" /> object that encapsulates permission and trust information for the application in the application domain. </returns>
    </member>
    <member name="M:System.AppDomain.ApplyPolicy(System.String)">
      <summary>Returns the assembly display name after policy has been applied.</summary>
      <returns>A string containing the assembly display name after policy has been applied.</returns>
      <param name="assemblyName">The assembly display name, in the form provided by the <see cref="P:System.Reflection.Assembly.FullName" /> property.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.AppDomain.AssemblyLoad">
      <summary>Occurs when an assembly is loaded.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.AppDomain.AssemblyResolve">
      <summary>Occurs when the resolution of an assembly fails.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomain.BaseDirectory">
      <summary>Gets the base directory that the assembly resolver uses to probe for assemblies.</summary>
      <returns>The base directory that the assembly resolver uses to probe for assemblies.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ClearPrivatePath">
      <summary>Resets the path that specifies the location of private assemblies to the empty string ("").</summary>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ClearShadowCopyPath">
      <summary>Resets the list of directories containing shadow copied assemblies to the empty string ("").</summary>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateComInstanceFrom(System.String,System.String)">
      <summary>Creates a new instance of a specified COM type. Parameters specify the name of a file that contains an assembly containing the type and the name of the type.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyName">The name of a file containing an assembly that defines the requested type. </param>
      <param name="typeName">The name of the requested type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.TypeLoadException">The type cannot be loaded. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.MissingMethodException">No public parameterless constructor was found. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> is not found. </exception>
      <exception cref="T:System.MemberAccessException">
        <paramref name="typeName" /> is an abstract class. -or-This member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> is an empty string (""). </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NullReferenceException">The COM object that is being referred to is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
      <summary>Creates a new instance of a specified COM type. Parameters specify the name of a file that contains an assembly containing the type and the name of the type.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyFile">The name of a file containing an assembly that defines the requested type. </param>
      <param name="typeName">The name of the requested type. </param>
      <param name="hashValue">Represents the value of the computed hash code. </param>
      <param name="hashAlgorithm">Represents the hash algorithm used by the assembly manifest. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.TypeLoadException">The type cannot be loaded. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.MissingMethodException">No public parameterless constructor was found. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> is not found. </exception>
      <exception cref="T:System.MemberAccessException">
        <paramref name="typeName" /> is an abstract class. -or-This member was invoked with a late-binding mechanism. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyFile" /> is the empty string (""). </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NullReferenceException">The COM object that is being referred to is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String)">
      <summary>Creates a new application domain with the specified name.</summary>
      <returns>The newly created application domain.</returns>
      <param name="friendlyName">The friendly name of the domain. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence)">
      <summary>Creates a new application domain with the given name using the supplied evidence.</summary>
      <returns>The newly created application domain.</returns>
      <param name="friendlyName">The friendly name of the domain. This friendly name can be displayed in user interfaces to identify the domain. For more information, see <see cref="P:System.AppDomain.FriendlyName" />. </param>
      <param name="securityInfo">Evidence that establishes the identity of the code that runs in the application domain. Pass null to use the evidence of the current application domain.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)">
      <summary>Creates a new application domain using the specified name, evidence, and application domain setup information.</summary>
      <returns>The newly created application domain.</returns>
      <param name="friendlyName">The friendly name of the domain. This friendly name can be displayed in user interfaces to identify the domain. For more information, see <see cref="P:System.AppDomain.FriendlyName" />. </param>
      <param name="securityInfo">Evidence that establishes the identity of the code that runs in the application domain. Pass null to use the evidence of the current application domain.</param>
      <param name="info">An object that contains application domain initialization information. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup,System.Security.PermissionSet,System.Security.Policy.StrongName[])">
      <summary>Creates a new application domain using the specified name, evidence, application domain setup information, default permission set, and array of fully trusted assemblies.</summary>
      <returns>The newly created application domain.</returns>
      <param name="friendlyName">The friendly name of the domain. This friendly name can be displayed in user interfaces to identify the domain. For more information, see the description of <see cref="P:System.AppDomain.FriendlyName" />.</param>
      <param name="securityInfo">Evidence that establishes the identity of the code that runs in the application domain. Pass null to use the evidence of the current application domain.</param>
      <param name="info">An object that contains application domain initialization information.</param>
      <param name="grantSet">A default permission set that is granted to all assemblies loaded into the new application domain that do not have specific grants. </param>
      <param name="fullTrustAssemblies">An array of strong names representing assemblies to be considered fully trusted in the new application domain.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The application domain is null.-or-The <see cref="P:System.AppDomainSetup.ApplicationBase" /> property is not set on the <see cref="T:System.AppDomainSetup" /> object that is supplied for <paramref name="info" />. </exception>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean)">
      <summary>Creates a new application domain with the given name, using evidence, application base path, relative search path, and a parameter that specifies whether a shadow copy of an assembly is to be loaded into the application domain.</summary>
      <returns>The newly created application domain.</returns>
      <param name="friendlyName">The friendly name of the domain. This friendly name can be displayed in user interfaces to identify the domain. For more information, see <see cref="P:System.AppDomain.FriendlyName" />. </param>
      <param name="securityInfo">Evidence that establishes the identity of the code that runs in the application domain. Pass null to use the evidence of the current application domain.</param>
      <param name="appBasePath">The base directory that the assembly resolver uses to probe for assemblies. For more information, see <see cref="P:System.AppDomain.BaseDirectory" />. </param>
      <param name="appRelativeSearchPath">The path relative to the base directory where the assembly resolver should probe for private assemblies. For more information, see <see cref="P:System.AppDomain.RelativeSearchPath" />. </param>
      <param name="shadowCopyFiles">If true, a shadow copy of an assembly is loaded into this application domain. For more information, see <see cref="P:System.AppDomain.ShadowCopyFiles" /> and Shadow Copying Assemblies.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean,System.AppDomainInitializer,System.String[])">
      <summary>Creates a new application domain with the given name, using evidence, application base path, relative search path, and a parameter that specifies whether a shadow copy of an assembly is to be loaded into the application domain. Specifies a callback method that is invoked when the application domain is initialized, and an array of string arguments to pass the callback method.</summary>
      <returns>The newly created application domain.</returns>
      <param name="friendlyName">The friendly name of the domain. This friendly name can be displayed in user interfaces to identify the domain. For more information, see <see cref="P:System.AppDomain.FriendlyName" />. </param>
      <param name="securityInfo">Evidence that establishes the identity of the code that runs in the application domain. Pass null to use the evidence of the current application domain.</param>
      <param name="appBasePath">The base directory that the assembly resolver uses to probe for assemblies. For more information, see <see cref="P:System.AppDomain.BaseDirectory" />. </param>
      <param name="appRelativeSearchPath">The path relative to the base directory where the assembly resolver should probe for private assemblies. For more information, see <see cref="P:System.AppDomain.RelativeSearchPath" />. </param>
      <param name="shadowCopyFiles">true to load a shadow copy of an assembly into the application domain. For more information, see <see cref="P:System.AppDomain.ShadowCopyFiles" /> and Shadow Copying Assemblies.</param>
      <param name="adInit">An <see cref="T:System.AppDomainInitializer" /> delegate that represents a callback method to invoke when the new <see cref="T:System.AppDomain" /> object is initialized.</param>
      <param name="adInitArgs">An array of string arguments to be passed to the callback represented by <paramref name="adInit" />, when the new <see cref="T:System.AppDomain" /> object is initialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String)">
      <summary>Creates a new instance of the specified type defined in the specified assembly.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates a new instance of the specified type defined in the specified assembly. Parameters specify a binder, binding flags, constructor arguments, culture-specific information used to interpret arguments, and optional activation attributes.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-<paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Creates a new instance of the specified type defined in the specified assembly. Parameters specify a binder, binding flags, constructor arguments, culture-specific information used to interpret arguments, activation attributes, and authorization to create the type.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityAttributes">Information used to authorize creation of <paramref name="typeName" />. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.-or-<paramref name="securityAttributes" /> is not null. When legacy CAS policy is not enabled, <paramref name="securityAttributes" /> should be null.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])">
      <summary>Creates a new instance of the specified type defined in the specified assembly. A parameter specifies an array of activation attributes.</summary>
      <returns>An object that is a wrapper for the new instance specified by <paramref name="typeName" />. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)">
      <summary>Creates a new instance of the specified type. Parameters specify the assembly where the type is defined, and the name of the type.</summary>
      <returns>An instance of the object specified by <paramref name="typeName" />.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates a new instance of the specified type defined in the specified assembly, specifying whether the case of the type name is ignored; the binding attributes and the binder that are used to select the type to be created; the arguments of the constructor; the culture; and the activation attributes.</summary>
      <returns>An instance of the object specified by <paramref name="typeName" />.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">A culture-specific object used to govern the coercion of types. If <paramref name="culture" /> is null, the CultureInfo for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-<paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Creates a new instance of the specified type. Parameters specify the name of the type, and how it is found and created.</summary>
      <returns>An instance of the object specified by <paramref name="typeName" />.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">A culture-specific object used to govern the coercion of types. If <paramref name="culture" /> is null, the CultureInfo for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityAttributes">Information used to authorize creation of <paramref name="typeName" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Creates a new instance of the specified type. Parameters specify the assembly where the type is defined, the name of the type, and an array of activation attributes.</summary>
      <returns>An instance of the object specified by <paramref name="typeName" />.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have permission to call this constructor. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)">
      <summary>Creates a new instance of the specified type defined in the specified assembly file.</summary>
      <returns>An object that is a wrapper for the new instance, or null if <paramref name="typeName" /> is not found. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyFile">The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />  method.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null.-or- <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.MissingMethodException">No parameterless public constructor was found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have sufficient permission to call this constructor. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates a new instance of the specified type defined in the specified assembly file.</summary>
      <returns>An object that is a wrapper for the new instance, or null if <paramref name="typeName" /> is not found. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyFile">The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />  method.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null.-or- <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have sufficient permission to call this constructor. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-<paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Creates a new instance of the specified type defined in the specified assembly file.</summary>
      <returns>An object that is a wrapper for the new instance, or null if <paramref name="typeName" /> is not found. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyFile">The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />  method.</param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityAttributes">Information used to authorize creation of <paramref name="typeName" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null.-or- <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.-or-<paramref name="securityAttributes" /> is not null. When legacy CAS policy is not enabled, <paramref name="securityAttributes" /> should be null.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have sufficient permission to call this constructor. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])">
      <summary>Creates a new instance of the specified type defined in the specified assembly file.</summary>
      <returns>An object that is a wrapper for the new instance, or null if <paramref name="typeName" /> is not found. The return value needs to be unwrapped to access the real object.</returns>
      <param name="assemblyFile">The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />  method. </param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> was not found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have sufficient permission to call this constructor. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)">
      <summary>Creates a new instance of the specified type defined in the specified assembly file.</summary>
      <returns>The requested object, or null if <paramref name="typeName" /> is not found.</returns>
      <param name="assemblyName">The file name and path of the assembly that defines the requested type. </param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null.-or- <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.MissingMethodException">No parameterless public constructor was found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have sufficient permission to call this constructor. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Creates a new instance of the specified type defined in the specified assembly file, specifying whether the case of the type name is ignored; the binding attributes and the binder that are used to select the type to be created; the arguments of the constructor; the culture; and the activation attributes.</summary>
      <returns>The requested object, or null if <paramref name="typeName" /> is not found.</returns>
      <param name="assemblyFile">The file name and path of the assembly that defines the requested type. </param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null.-or- <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have sufficient permission to call this constructor. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-<paramref name="assemblyName" /> was compiled with a later version of the common language runtime that the version that is currently loaded.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
      <summary>Creates a new instance of the specified type defined in the specified assembly file.</summary>
      <returns>The requested object, or null if <paramref name="typeName" /> is not found.</returns>
      <param name="assemblyName">The file name and path of the assembly that defines the requested type. </param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property. </param>
      <param name="ignoreCase">A Boolean value specifying whether to perform a case-sensitive search or not. </param>
      <param name="bindingAttr">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor. If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted. </param>
      <param name="binder">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection. If <paramref name="binder" /> is null, the default binder is used. </param>
      <param name="args">The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <paramref name="args" /> must be an empty array or null. </param>
      <param name="culture">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor. If <paramref name="culture" /> is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used. </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <param name="securityAttributes">Information used to authorize creation of <paramref name="typeName" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null.-or- <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have sufficient permission to call this constructor. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Creates a new instance of the specified type defined in the specified assembly file.</summary>
      <returns>The requested object, or null if <paramref name="typeName" /> is not found.</returns>
      <param name="assemblyName">The file name and path of the assembly that defines the requested type. </param>
      <param name="typeName">The fully qualified name of the requested type, including the namespace but not the assembly (see the <see cref="P:System.Type.FullName" /> property). </param>
      <param name="activationAttributes">An array of one or more attributes that can participate in activation. Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object. The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object. For a detailed description of client-activated objects, see Client Activation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null.-or- <paramref name="typeName" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> was not found. </exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> was not found in <paramref name="assemblyName" />. </exception>
      <exception cref="T:System.MissingMethodException">No parameterless public constructor was found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have sufficient permission to call this constructor. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomain.CurrentDomain">
      <summary>Gets the current application domain for the current <see cref="T:System.Threading.Thread" />.</summary>
      <returns>The current application domain.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)">
      <summary>Defines a dynamic assembly with the specified name and access mode.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The access mode for the dynamic assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})">
      <summary>Defines a dynamic assembly with the specified name, access mode, and custom attributes.</summary>
      <returns>An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object that represents the new dynamic assembly.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The access mode for the dynamic assembly. </param>
      <param name="assemblyAttributes">An enumerable list of attributes to be applied to the assembly, or null if there are no attributes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> starts with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)">
      <summary>Defines a dynamic assembly with the specified name, access mode, and custom attributes, and using the specified source for its security context.</summary>
      <returns>The new dynamic assembly.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The access mode for the dynamic assembly. </param>
      <param name="assemblyAttributes">An enumerable list of attributes to be applied to the assembly, or null if there are no attributes.</param>
      <param name="securityContextSource">The source of the security context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> starts with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <paramref name="securityContextSource" /> was not one of the enumeration values.</exception>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Defines a dynamic assembly using the specified name, access mode, and permission requests.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)">
      <summary>Defines a dynamic assembly using the specified name, access mode, and evidence.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Defines a dynamic assembly using the specified name, access mode, evidence, and permission requests.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)">
      <summary>Defines a dynamic assembly using the specified name, access mode, and storage directory.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})">
      <summary>Defines a dynamic assembly using the specified name, access mode, storage directory, and synchronization option.</summary>
      <returns>An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object that represents the new dynamic assembly.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the dynamic assembly will be saved. If <paramref name="dir" /> is null, the current directory is used. </param>
      <param name="isSynchronized">true to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, false. </param>
      <param name="assemblyAttributes">An enumerable list of attributes to be applied to the assembly, or null if there are no attributes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> starts with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Defines a dynamic assembly using the specified name, access mode, storage directory, and permission requests.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)">
      <summary>Defines a dynamic assembly using the specified name, access mode, storage directory, and evidence.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Defines a dynamic assembly using the specified name, access mode, storage directory, evidence, and permission requests.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)">
      <summary>Defines a dynamic assembly using the specified name, access mode, storage directory, evidence, permission requests, and synchronization option.</summary>
      <returns>Represents the dynamic assembly created.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the dynamic assembly will be saved. If <paramref name="dir" /> is null, the directory defaults to the current directory. </param>
      <param name="evidence">The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <param name="isSynchronized">true to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> begins with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})">
      <summary>Defines a dynamic assembly with the specified name, access mode, storage directory, evidence, permission requests, synchronization option, and custom attributes.</summary>
      <returns>An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object that represents the new dynamic assembly.</returns>
      <param name="name">The unique identity of the dynamic assembly. </param>
      <param name="access">The mode in which the dynamic assembly will be accessed. </param>
      <param name="dir">The name of the directory where the dynamic assembly will be saved. If <paramref name="dir" /> is null, the current directory is used. </param>
      <param name="evidence">The evidence that is supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution. </param>
      <param name="requiredPermissions">The required permissions request. </param>
      <param name="optionalPermissions">The optional permissions request. </param>
      <param name="refusedPermissions">The refused permissions request. </param>
      <param name="isSynchronized">true to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, false. </param>
      <param name="assemblyAttributes">An enumerable list of attributes to be applied to the assembly, or null if there are no attributes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The Name property of <paramref name="name" /> is null.-or- The Name property of <paramref name="name" /> starts with white space, or contains a forward or backward slash. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
    </member>
    <member name="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)">
      <summary>Executes the code in another application domain that is identified by the specified delegate.</summary>
      <param name="callBackDelegate">A delegate that specifies a method to call. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callBackDelegate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomain.DomainManager">
      <summary>Gets the domain manager that was provided by the host when the application domain was initialized.</summary>
      <returns>An <see cref="T:System.AppDomainManager" /> object that represents the domain manager provided by the host when the application domain was initialized, or null if no domain manager was provided.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlDomainPolicy" />
      </PermissionSet>
    </member>
    <member name="E:System.AppDomain.DomainUnload">
      <summary>Occurs when an <see cref="T:System.AppDomain" /> is about to be unloaded.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomain.DynamicDirectory">
      <summary>Gets the directory that the assembly resolver uses to probe for dynamically-created assemblies.</summary>
      <returns>Get the directory that the assembly resolver uses to probe for dynamically-created assemblies.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomain.Evidence">
      <summary>Gets the <see cref="T:System.Security.Policy.Evidence" /> associated with this application domain that is used as input to the security policy.</summary>
      <returns>Gets the <see cref="T:System.Security.Policy.Evidence" /> associated with this application domain that is used as input to the security policy.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String)">
      <summary>Executes the assembly contained in the specified file.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)">
      <summary>Executes the assembly contained in the specified file, using the specified evidence.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute. </param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])">
      <summary>Executes the assembly contained in the specified file, using the specified evidence and arguments.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute. </param>
      <param name="assemblySecurity">The supplied evidence for the assembly. </param>
      <param name="args">The arguments to the entry point of the assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="assemblySecurity" /> is not null. When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
      <summary>Executes the assembly contained in the specified file, using the specified evidence, arguments, hash value, and hash algorithm.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute. </param>
      <param name="assemblySecurity">The supplied evidence for the assembly. </param>
      <param name="args">The arguments to the entry point of the assembly. </param>
      <param name="hashValue">Represents the value of the computed hash code. </param>
      <param name="hashAlgorithm">Represents the hash algorithm used by the assembly manifest. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="assemblySecurity" /> is not null. When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[])">
      <summary>Executes the assembly contained in the specified file, using the specified arguments.</summary>
      <returns>The value that is returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute.</param>
      <param name="args">The arguments to the entry point of the assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-<paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
      <summary>Executes the assembly contained in the specified file, using the specified arguments, hash value, and hash algorithm.</summary>
      <returns>The value that is returned by the entry point of the assembly.</returns>
      <param name="assemblyFile">The name of the file that contains the assembly to execute.</param>
      <param name="args">The arguments to the entry point of the assembly. </param>
      <param name="hashValue">Represents the value of the computed hash code. </param>
      <param name="hashAlgorithm">Represents the hash algorithm used by the assembly manifest. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> is not a valid assembly. -or-<paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.String[])">
      <summary>Executes the assembly given an <see cref="T:System.Reflection.AssemblyName" />, using the specified evidence and arguments.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyName">An <see cref="T:System.Reflection.AssemblyName" /> object representing the name of the assembly. </param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <param name="args">Command-line arguments to pass when starting the process. </param>
      <exception cref="T:System.IO.FileNotFoundException">The assembly specified by <paramref name="assemblyName" /> is not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</exception>
      <exception cref="T:System.BadImageFormatException">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="assemblySecurity" /> is not null. When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])">
      <summary>Executes the assembly given an <see cref="T:System.Reflection.AssemblyName" />, using the specified arguments.</summary>
      <returns>The value that is returned by the entry point of the assembly.</returns>
      <param name="assemblyName">An <see cref="T:System.Reflection.AssemblyName" /> object representing the name of the assembly.</param>
      <param name="args">Command-line arguments to pass when starting the process.</param>
      <exception cref="T:System.IO.FileNotFoundException">The assembly specified by <paramref name="assemblyName" /> is not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</exception>
      <exception cref="T:System.BadImageFormatException">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly. -or-<paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String)">
      <summary>Executes an assembly given its display name.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The assembly specified by <paramref name="assemblyName" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence)">
      <summary>Executes an assembly given its display name, using the specified evidence.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The assembly specified by <paramref name="assemblyName" /> is not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</exception>
      <exception cref="T:System.BadImageFormatException">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence,System.String[])">
      <summary>Executes the assembly given its display name, using the specified evidence and arguments.</summary>
      <returns>The value returned by the entry point of the assembly.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <param name="args">Command-line arguments to pass when starting the process. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The assembly specified by <paramref name="assemblyName" /> is not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</exception>
      <exception cref="T:System.BadImageFormatException">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="assemblySecurity" /> is not null. When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])">
      <summary>Executes the assembly given its display name, using the specified arguments.</summary>
      <returns>The value that is returned by the entry point of the assembly.</returns>
      <param name="assemblyName">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="args">Command-line arguments to pass when starting the process.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The assembly specified by <paramref name="assemblyName" /> is not found. </exception>
      <exception cref="T:System.IO.FileLoadException">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</exception>
      <exception cref="T:System.BadImageFormatException">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly. -or-<paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
    </member>
    <member name="E:System.AppDomain.FirstChanceException">
      <summary>Occurs when an exception first occurs in managed code, before the runtime has made its first pass searching for suitable exception handlers.</summary>
    </member>
    <member name="P:System.AppDomain.FriendlyName">
      <summary>Gets the friendly name of this application domain.</summary>
      <returns>The friendly name of this application domain.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomain.GetAssemblies">
      <summary>Gets the assemblies that have been loaded into the execution context of this application domain.</summary>
      <returns>An array of assemblies in this application domain.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomain.GetCurrentThreadId">
      <summary>Gets the current thread identifier.</summary>
      <returns>A 32-bit signed integer that is the identifier of the current thread.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.GetData(System.String)">
      <summary>Gets the value stored in the current application domain for the specified name.</summary>
      <returns>The value of the <paramref name="name" /> property.</returns>
      <param name="name">The name of a predefined application domain property, or the name of an application domain property you have defined. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.GetType">
      <summary>Gets the type of the current instance.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomain.Id">
      <summary>Gets an integer that uniquely identifies the application domain within the process. </summary>
      <returns>An integer that identifies the application domain.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomain.InitializeLifetimeService">
      <summary>Gives the <see cref="T:System.AppDomain" /> an infinite lifetime by preventing a lease from being created.</summary>
      <returns>Always null.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)">
      <summary>Gets a nullable Boolean value that indicates whether any compatibility switches are set, and if so, whether the specified compatibility switch is set.</summary>
      <returns>null if no compatibility switches are set; otherwise, a Boolean value that indicates whether the compatibility switch that is specified by <paramref name="value" /> is set.</returns>
      <param name="value">The compatibility switch to test.</param>
    </member>
    <member name="M:System.AppDomain.IsDefaultAppDomain">
      <summary>Returns a value that indicates whether the application domain is the default application domain for the process.</summary>
      <returns>true if the current <see cref="T:System.AppDomain" /> object represents the default application domain for the process; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AppDomain.IsFinalizingForUnload">
      <summary>Indicates whether this application domain is unloading, and the objects it contains are being finalized by the common language runtime.</summary>
      <returns>true if this application domain is unloading and the common language runtime has started invoking finalizers; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomain.IsFullyTrusted">
      <summary>Gets a value that indicates whether assemblies that are loaded into the current application domain execute with full trust.</summary>
      <returns>true if assemblies that are loaded into the current application domain execute with full trust; otherwise, false.</returns>
    </member>
    <member name="P:System.AppDomain.IsHomogenous">
      <summary>Gets a value that indicates whether the current application domain has a set of permissions that is granted to all assemblies that are loaded into the application domain.</summary>
      <returns>true if the current application domain has a homogenous set of permissions; otherwise, false.</returns>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[])">
      <summary>Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />.</summary>
      <returns>The loaded assembly.</returns>
      <param name="rawAssembly">An array of type byte that is a COFF-based image containing an emitted assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> is null. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[],System.Byte[])">
      <summary>Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />. The raw bytes representing the symbols for the <see cref="T:System.Reflection.Assembly" /> are also loaded.</summary>
      <returns>The loaded assembly.</returns>
      <param name="rawAssembly">An array of type byte that is a COFF-based image containing an emitted assembly. </param>
      <param name="rawSymbolStore">An array of type byte containing the raw bytes representing the symbols for the assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> is null. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)">
      <summary>Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />. The raw bytes representing the symbols for the <see cref="T:System.Reflection.Assembly" /> are also loaded.</summary>
      <returns>The loaded assembly.</returns>
      <param name="rawAssembly">An array of type byte that is a COFF-based image containing an emitted assembly. </param>
      <param name="rawSymbolStore">An array of type byte containing the raw bytes representing the symbols for the assembly. </param>
      <param name="securityEvidence">Evidence for loading the assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> is null. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="securityEvidence" /> is not null. When legacy CAS policy is not enabled, <paramref name="securityEvidence" /> should be null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.Load(System.Reflection.AssemblyName)">
      <summary>Loads an <see cref="T:System.Reflection.Assembly" /> given its <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <returns>The loaded assembly.</returns>
      <param name="assemblyRef">An object that describes the assembly to load. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyRef" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyRef" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyRef" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)">
      <summary>Loads an <see cref="T:System.Reflection.Assembly" /> given its <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <returns>The loaded assembly.</returns>
      <param name="assemblyRef">An object that describes the assembly to load. </param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyRef" /> is null</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyRef" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyRef" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.Load(System.String)">
      <summary>Loads an <see cref="T:System.Reflection.Assembly" /> given its display name.</summary>
      <returns>The loaded assembly.</returns>
      <param name="assemblyString">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyString" /> is null</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyString" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyString" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.Load(System.String,System.Security.Policy.Evidence)">
      <summary>Loads an <see cref="T:System.Reflection.Assembly" /> given its display name.</summary>
      <returns>The loaded assembly.</returns>
      <param name="assemblyString">The display name of the assembly. See <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="assemblySecurity">Evidence for loading the assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyString" /> is null</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyString" /> is not found. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyString" /> is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomain.MonitoringIsEnabled">
      <summary>Gets or sets a value that indicates whether CPU and memory monitoring of application domains is enabled for the current process. Once monitoring is enabled for a process, it cannot be disabled.</summary>
      <returns>true if monitoring is enabled; otherwise false.</returns>
      <exception cref="T:System.ArgumentException">The current process attempted to assign the value false to this property.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedMemorySize">
      <summary>Gets the number of bytes that survived the last full, blocking collection and that are known to be referenced by the current application domain.</summary>
      <returns>The number of surviving bytes.</returns>
      <exception cref="T:System.InvalidOperationException">The static (Shared in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to false.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedProcessMemorySize">
      <summary>Gets the total bytes that survived from the last full, blocking collection for all application domains in the process.</summary>
      <returns>The total number of surviving bytes for the process.</returns>
      <exception cref="T:System.InvalidOperationException">The static (Shared in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to false.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalAllocatedMemorySize">
      <summary>Gets the total size, in bytes, of all memory allocations that have been made by the application domain since it was created, without subtracting memory that has been collected. </summary>
      <returns>The total size of all memory allocations.</returns>
      <exception cref="T:System.InvalidOperationException">The static (Shared in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to false.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalProcessorTime">
      <summary>Gets the total processor time that has been used by all threads while executing in the current application domain, since the process started.</summary>
      <returns>Total processor time for the current application domain.</returns>
      <exception cref="T:System.InvalidOperationException">The static (Shared in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to false.</exception>
    </member>
    <member name="P:System.AppDomain.PermissionSet">
      <summary>Gets the permission set of a sandboxed application domain.</summary>
      <returns>The permission set of the sandboxed application domain.</returns>
    </member>
    <member name="E:System.AppDomain.ProcessExit">
      <summary>Occurs when the default application domain's parent process exits.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.AppDomain.ReflectionOnlyAssemblyResolve">
      <summary>Occurs when the resolution of an assembly fails in the reflection-only context.</summary>
    </member>
    <member name="M:System.AppDomain.ReflectionOnlyGetAssemblies">
      <summary>Returns the assemblies that have been loaded into the reflection-only context of the application domain.</summary>
      <returns>An array of <see cref="T:System.Reflection.Assembly" /> objects that represent the assemblies loaded into the reflection-only context of the application domain.</returns>
      <exception cref="T:System.AppDomainUnloadedException">An operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomain.RelativeSearchPath">
      <summary>Gets the path under the base directory where the assembly resolver should probe for private assemblies.</summary>
      <returns>The path under the base directory where the assembly resolver should probe for private assemblies.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.AppDomain.ResourceResolve">
      <summary>Occurs when the resolution of a resource fails because the resource is not a valid linked or embedded resource in the assembly.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)">
      <summary>Establishes the security policy level for this application domain.</summary>
      <param name="domainPolicy">The security policy level. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domainPolicy" /> is null. </exception>
      <exception cref="T:System.Security.Policy.PolicyException">The security policy level has already been set. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlDomainPolicy" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.SetCachePath(System.String)">
      <summary>Establishes the specified directory path as the location where assemblies are shadow copied.</summary>
      <param name="path">The fully qualified path to the shadow copy location. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.SetData(System.String,System.Object)">
      <summary>Assigns the specified value to the specified application domain property.</summary>
      <param name="name">The name of a user-defined application domain property to create or change. </param>
      <param name="data">The value of the property. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.SetData(System.String,System.Object,System.Security.IPermission)">
      <summary>Assigns the specified value to the specified application domain property, with a specified permission to demand of the caller when the property is retrieved.</summary>
      <param name="name">The name of a user-defined application domain property to create or change. </param>
      <param name="data">The value of the property. </param>
      <param name="permission">The permission to demand of the caller when the property is retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="name" /> specifies a system-defined property string and <paramref name="permission" /> is not null.</exception>
    </member>
    <member name="M:System.AppDomain.SetDynamicBase(System.String)">
      <summary>Establishes the specified directory path as the base directory for subdirectories where dynamically generated files are stored and accessed.</summary>
      <param name="path">The fully qualified path that is the base directory for subdirectories where dynamic assemblies are stored. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)">
      <summary>Specifies how principal and identity objects should be attached to a thread if the thread attempts to bind to a principal while executing in this application domain.</summary>
      <param name="policy">One of the <see cref="T:System.Security.Principal.PrincipalPolicy" /> values that specifies the type of the principal object to attach to threads. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyFiles">
      <summary>Turns on shadow copying.</summary>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyPath(System.String)">
      <summary>Establishes the specified directory path as the location of assemblies to be shadow copied.</summary>
      <param name="path">A list of directory names, where each name is separated by a semicolon. </param>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)">
      <summary>Sets the default principal object to be attached to threads if they attempt to bind to a principal while executing in this application domain.</summary>
      <param name="principal">The principal object to attach to threads. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="principal" /> is null. </exception>
      <exception cref="T:System.Security.Policy.PolicyException">The thread principal has already been set. </exception>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomain.SetupInformation">
      <summary>Gets the application domain configuration information for this instance.</summary>
      <returns>The application domain initialization information.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomain.ShadowCopyFiles">
      <summary>Gets an indication whether the application domain is configured to shadow copy files.</summary>
      <returns>true if the application domain is configured to shadow copy files; otherwise, false.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The operation is attempted on an unloaded application domain. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomain.System#_AppDomain#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
      <summary>Maps a set of names to a corresponding set of dispatch identifiers.</summary>
      <param name="riid">Reserved for future use. Must be IID_NULL.</param>
      <param name="rgszNames">Passed-in array of names to be mapped.</param>
      <param name="cNames">Count of the names to be mapped.</param>
      <param name="lcid">The locale context in which to interpret the names.</param>
      <param name="rgDispId">Caller-allocated array which receives the IDs corresponding to the names.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.AppDomain.System#_AppDomain#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
      <summary>Retrieves the type information for an object, which can then be used to get the type information for an interface.</summary>
      <param name="iTInfo">The type information to return.</param>
      <param name="lcid">The locale identifier for the type information.</param>
      <param name="ppTInfo">Receives a pointer to the requested type information object.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.AppDomain.System#_AppDomain#GetTypeInfoCount(System.UInt32@)">
      <summary>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</summary>
      <param name="pcTInfo">Points to a location that receives the number of type information interfaces provided by the object.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.AppDomain.System#_AppDomain#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Provides access to properties and methods exposed by an object.</summary>
      <param name="dispIdMember">Identifies the member.</param>
      <param name="riid">Reserved for future use. Must be IID_NULL.</param>
      <param name="lcid">The locale context in which to interpret arguments.</param>
      <param name="wFlags">Flags describing the context of the call.</param>
      <param name="pDispParams">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</param>
      <param name="pVarResult">Pointer to the location where the result is to be stored.</param>
      <param name="pExcepInfo">Pointer to a structure that contains exception information.</param>
      <param name="puArgErr">The index of the first argument that has an error.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.AppDomain.ToString">
      <summary>Obtains a string representation that includes the friendly name of the application domain and any context policies.</summary>
      <returns>A string formed by concatenating the literal string "Name:", the friendly name of the application domain, and either string representations of the context policies or the string "There are no context policies." </returns>
      <exception cref="T:System.AppDomainUnloadedException">The application domain represented by the current <see cref="T:System.AppDomain" /> has been unloaded.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.AppDomain.TypeResolve">
      <summary>Occurs when the resolution of a type fails.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.AppDomain.UnhandledException">
      <summary>Occurs when an exception is not caught.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomain.Unload(System.AppDomain)">
      <summary>Unloads the specified application domain.</summary>
      <param name="domain">An application domain to unload. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> is null. </exception>
      <exception cref="T:System.CannotUnloadAppDomainException">
        <paramref name="domain" /> could not be unloaded. </exception>
      <exception cref="T:System.Exception">An error occurred during the unload process.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="T:System.AppDomainInitializer">
      <summary>Represents the callback method to invoke when the application domain is initialized.</summary>
      <param name="args">An array of strings to pass as arguments to the callback method.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AppDomainManager">
      <summary>Provides a managed equivalent of an unmanaged host.</summary>
      <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions. See the Requirements section.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomainManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.AppDomainManager" /> class. </summary>
    </member>
    <member name="P:System.AppDomainManager.ApplicationActivator">
      <summary>Gets the application activator that handles the activation of add-ins and manifest-based applications for the domain.</summary>
      <returns>The application activator.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)">
      <summary>Indicates whether the specified operation is allowed in the application domain.</summary>
      <returns>true if the host allows the operation specified by <paramref name="state" /> to be performed in the application domain; otherwise, false.</returns>
      <param name="state">A subclass of <see cref="T:System.Security.SecurityState" /> that identifies the operation whose security status is requested.</param>
    </member>
    <member name="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)">
      <summary>Returns a new or existing application domain.</summary>
      <returns>A new or existing application domain.</returns>
      <param name="friendlyName">The friendly name of the domain. </param>
      <param name="securityInfo">An object that contains evidence mapped through the security policy to establish a top-of-stack permission set.</param>
      <param name="appDomainInfo">An object that contains application domain initialization information.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlAppDomain, Infrastructure" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)">
      <summary>Provides a helper method to create an application domain.</summary>
      <returns>A newly created application domain.</returns>
      <param name="friendlyName">The friendly name of the domain. </param>
      <param name="securityInfo">An object that contains evidence mapped through the security policy to establish a top-of-stack permission set.</param>
      <param name="appDomainInfo">An object that contains application domain initialization information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> is null. </exception>
    </member>
    <member name="P:System.AppDomainManager.EntryAssembly">
      <summary>Gets the entry assembly for an application.</summary>
      <returns>The entry assembly for the application.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.AppDomainManager.HostExecutionContextManager">
      <summary>Gets the host execution context manager that manages the flow of the execution context.</summary>
      <returns>The host execution content manager.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomainManager.HostSecurityManager">
      <summary>Gets the host security manager that participates in security decisions for the application domain.</summary>
      <returns>The host security manager.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomainManager.InitializationFlags">
      <summary>Gets the initialization flags for custom application domain managers.</summary>
      <returns>A bitwise combination of the enumeration values that describe the initialization action to perform. The default is <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)">
      <summary>Initializes the new application domain.</summary>
      <param name="appDomainInfo">An object that contains application domain initialization information.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
      </PermissionSet>
    </member>
    <member name="T:System.AppDomainManagerInitializationOptions">
      <summary>Specifies the action that a custom application domain manager takes when initializing a new domain.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.AppDomainManagerInitializationOptions.None">
      <summary>No initialization action.</summary>
    </member>
    <member name="F:System.AppDomainManagerInitializationOptions.RegisterWithHost">
      <summary>Register the COM callable wrapper for the current <see cref="T:System.AppDomainManager" /> with the unmanaged host. </summary>
    </member>
    <member name="T:System.AppDomainSetup">
      <summary>Represents assembly binding information that can be added to an instance of <see cref="T:System.AppDomain" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomainSetup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class.</summary>
    </member>
    <member name="M:System.AppDomainSetup.#ctor(System.ActivationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class with the specified activation context to use for manifest-based activation of an application domain.</summary>
      <param name="activationContext">The activation context to be used for an application domain.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activationContext" /> is null.</exception>
    </member>
    <member name="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)">
      <summary>Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class with the specified activation arguments required for manifest-based activation of an application domain.</summary>
      <param name="activationArguments">An object that specifies information required for the manifest-based activation of a new application domain.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activationArguments" /> is null.</exception>
    </member>
    <member name="P:System.AppDomainSetup.ActivationArguments">
      <summary>Gets or sets data about the activation of an application domain.</summary>
      <returns>An object that contains data about the activation of an application domain.</returns>
      <exception cref="T:System.InvalidOperationException">The property is set to an <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object whose application identity does not match the application identity of the <see cref="T:System.Security.Policy.ApplicationTrust" /> object returned by the <see cref="P:System.AppDomainSetup.ApplicationTrust" /> property. No exception is thrown if the <see cref="P:System.AppDomainSetup.ApplicationTrust" /> property is null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.AppDomainInitializer">
      <summary>Gets or sets the <see cref="T:System.AppDomainInitializer" /> delegate, which represents a callback method that is invoked when the application domain is initialized.</summary>
      <returns>A delegate that represents a callback method that is invoked when the application domain is initialized.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.AppDomainInitializerArguments">
      <summary>Gets or sets the arguments passed to the callback method represented by the <see cref="T:System.AppDomainInitializer" /> delegate. The callback method is invoked when the application domain is initialized.</summary>
      <returns>An array of strings that is passed to the callback method represented by the <see cref="T:System.AppDomainInitializer" /> delegate, when the callback method is invoked during <see cref="T:System.AppDomain" /> initialization.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.AppDomainManagerAssembly">
      <summary>Gets or sets the display name of the assembly that provides the type of the application domain manager for application domains created using this <see cref="T:System.AppDomainSetup" /> object.</summary>
      <returns>The display name of the assembly that provides the <see cref="T:System.Type" /> of the application domain manager.</returns>
    </member>
    <member name="P:System.AppDomainSetup.AppDomainManagerType">
      <summary>Gets or sets the full name of the type that provides the application domain manager for application domains created using this <see cref="T:System.AppDomainSetup" /> object.</summary>
      <returns>The full name of the type, including the namespace.</returns>
    </member>
    <member name="P:System.AppDomainSetup.ApplicationBase">
      <summary>Gets or sets the name of the directory containing the application.</summary>
      <returns>The name of the application base directory.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomainSetup.ApplicationName">
      <summary>Gets or sets the name of the application.</summary>
      <returns>The name of the application.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.ApplicationTrust">
      <summary>Gets or sets an object containing security and trust information.</summary>
      <returns>An object that contains security and trust information. </returns>
      <exception cref="T:System.InvalidOperationException">The property is set to an <see cref="T:System.Security.Policy.ApplicationTrust" /> object whose application identity does not match the application identity of the <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object returned by the <see cref="P:System.AppDomainSetup.ActivationArguments" /> property. No exception is thrown if the <see cref="P:System.AppDomainSetup.ActivationArguments" /> property is null.</exception>
      <exception cref="T:System.ArgumentNullException">The property is set to null.</exception>
    </member>
    <member name="P:System.AppDomainSetup.CachePath">
      <summary>Gets or sets the name of an area specific to the application where files are shadow copied. </summary>
      <returns>The fully qualified name of the directory path and file name where files are shadow copied.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomainSetup.ConfigurationFile">
      <summary>Gets or sets the name of the configuration file for an application domain.</summary>
      <returns>The name of the configuration file.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
      <summary>Specifies whether the application base path and private binary path are probed when searching for assemblies to load.</summary>
      <returns>true if probing is not allowed; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.DisallowBindingRedirects">
      <summary>Gets or sets a value that indicates whether an application domain allows assembly binding redirection.</summary>
      <returns>true if redirection of assemblies is not allowed; false if it is allowed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.DisallowCodeDownload">
      <summary>Gets or sets a value that indicates whether HTTP download of assemblies is allowed for an application domain.</summary>
      <returns>true if HTTP download of assemblies is not allowed; false if it is allowed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.DisallowPublisherPolicy">
      <summary>Gets or sets a value that indicates whether the &lt;publisherPolicy&gt; section of the configuration file is applied to an application domain.</summary>
      <returns>true if the &lt;publisherPolicy&gt; section of the configuration file for an application domain is ignored; false if the declared publisher policy is honored.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.DynamicBase">
      <summary>Gets or sets the base directory where the directory for dynamically generated files is located.</summary>
      <returns>The directory where the <see cref="P:System.AppDomain.DynamicDirectory" /> is located.</returns>
      <exception cref="T:System.MemberAccessException">This property cannot be set because the application name on the application domain is null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.AppDomainSetup.GetConfigurationBytes">
      <summary>Returns the XML configuration information set by the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method, which overrides the application's XML configuration information.</summary>
      <returns>An array that contains the XML configuration information that was set by the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method, or null if the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method has not been called.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.LicenseFile">
      <summary>Gets or sets the location of the license file associated with this domain.</summary>
      <returns>The name of the license file.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomainSetup.LoaderOptimization">
      <summary>Specifies the optimization policy used to load an executable.</summary>
      <returns>An enumerated constant that is used with the <see cref="T:System.LoaderOptimizationAttribute" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
      <summary>Gets or sets a list of assemblies marked with the <see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /> flag that are made visible to partial-trust code running in a sandboxed application domain. </summary>
      <returns>An array of partial assembly names, where each partial name consists of the simple assembly name and the public key.</returns>
    </member>
    <member name="P:System.AppDomainSetup.PrivateBinPath">
      <summary>Gets or sets the list of directories under the application base directory that are probed for private assemblies.</summary>
      <returns>A list of directory names separated by semicolons.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomainSetup.PrivateBinPathProbe">
      <summary>Gets or sets a string value that includes or excludes <see cref="P:System.AppDomainSetup.ApplicationBase" /> from the search path for the application, and searches only <see cref="P:System.AppDomainSetup.PrivateBinPath" />.</summary>
      <returns>A blank string if <see cref="P:System.AppDomainSetup.ApplicationBase" /> is included in the application search path; a nonblank string if it is excluded.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.SandboxInterop">
      <summary>Gets or sets a value that indicates whether interface caching is disabled for interop calls in the application domain, so that a QueryInterface is performed on each call.</summary>
      <returns>true if interface caching is disabled for interop calls in application domains created with the current <see cref="T:System.AppDomainSetup" /> object; otherwise, false.</returns>
    </member>
    <member name="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Sets the specified switches, making the application domain compatible with previous versions of the .NET Framework for the specified issues.</summary>
      <param name="switches">An enumerable set of string values that specify compatibility switches, or null to erase the existing compatibility switches.</param>
    </member>
    <member name="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
      <summary>Provides XML configuration information for the application domain, overriding the application's XML configuration information.</summary>
      <param name="value">An array that contains the XML configuration information to be used for the application domain.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.AppDomainSetup.ShadowCopyDirectories">
      <summary>Gets or sets the names of the directories containing assemblies to be shadow copied.</summary>
      <returns>A list of directory names separated by semicolons.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.AppDomainSetup.ShadowCopyFiles">
      <summary>Gets or sets a string that indicates whether shadow copying is turned on or off.</summary>
      <returns>The string value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AppDomainUnloadedException">
      <summary>The exception that is thrown when an attempt is made to access an unloaded application domain. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.AppDomainUnloadedException" /> class.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.AppDomainUnloadedException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.AppDomainUnloadedException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.AppDomainUnloadedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.ApplicationException">
      <summary>The exception that is thrown when a non-fatal application error occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ApplicationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ApplicationException" /> class.</summary>
    </member>
    <member name="M:System.ApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ApplicationException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.ApplicationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ApplicationException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error. </param>
    </member>
    <member name="M:System.ApplicationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ApplicationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.ApplicationId">
      <summary>Contains information used to uniquely identify a manifest-based application. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ApplicationId" /> class.</summary>
      <param name="publicKeyToken">The array of bytes representing the raw public key data. </param>
      <param name="name">The name of the application. </param>
      <param name="version">A <see cref="T:System.Version" /> object that specifies the version of the application. </param>
      <param name="processorArchitecture">The processor architecture of the application. </param>
      <param name="culture">The culture of the application. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name " />is null.-or-<paramref name="version " />is null.-or-<paramref name="publicKeyToken " />is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name " />is an empty string.</exception>
    </member>
    <member name="M:System.ApplicationId.Copy">
      <summary>Creates and returns an identical copy of the current application identity.</summary>
      <returns>An <see cref="T:System.ApplicationId" /> object that represents an exact copy of the original.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ApplicationId.Culture">
      <summary>Gets a string representing the culture information for the application.</summary>
      <returns>The culture information for the application.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ApplicationId.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.ApplicationId" /> object is equivalent to the current <see cref="T:System.ApplicationId" />.</summary>
      <returns>true if the specified <see cref="T:System.ApplicationId" /> object is equivalent to the current <see cref="T:System.ApplicationId" />; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.ApplicationId" /> object to compare to the current <see cref="T:System.ApplicationId" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ApplicationId.GetHashCode">
      <summary>Gets the hash code for the current application identity.</summary>
      <returns>The hash code for the current application identity.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ApplicationId.Name">
      <summary>Gets the name of the application.</summary>
      <returns>The name of the application.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ApplicationId.ProcessorArchitecture">
      <summary>Gets the target processor architecture for the application.</summary>
      <returns>The processor architecture of the application.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ApplicationId.PublicKeyToken">
      <summary>Gets the public key token for the application.</summary>
      <returns>A byte array containing the public key token for the application.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ApplicationId.ToString">
      <summary>Creates and returns a string representation of the application identity.</summary>
      <returns>A string representation of the application identity.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ApplicationId.Version">
      <summary>Gets the version of the application.</summary>
      <returns>A <see cref="T:System.Version" /> that specifies the version of the application.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ApplicationIdentity">
      <summary>Provides the ability to uniquely identify a manifest-activated application. This class cannot be inherited. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ApplicationIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ApplicationIdentity" /> class. </summary>
      <param name="applicationIdentityFullName">The full name of the application.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationIdentityFullName" /> is null.</exception>
    </member>
    <member name="P:System.ApplicationIdentity.CodeBase">
      <summary>Gets the location of the deployment manifest as a URL.</summary>
      <returns>The URL of the deployment manifest.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ApplicationIdentity.FullName">
      <summary>Gets the full name of the application.</summary>
      <returns>The full name of the application, also known as the display name.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />) structure for the serialization.</param>
    </member>
    <member name="M:System.ApplicationIdentity.ToString">
      <summary>Returns the full name of the manifest-activated application.</summary>
      <returns>The full name of the manifest-activated application.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.ArgIterator">
      <summary>Represents a variable-length argument list; that is, the parameters of a function that takes a variable number of arguments.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgIterator" /> structure using the specified argument list.</summary>
      <param name="arglist">An argument list consisting of mandatory and optional arguments. </param>
    </member>
    <member name="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgIterator" /> structure using the specified argument list and a pointer to an item in the list.</summary>
      <param name="arglist">An argument list consisting of mandatory and optional arguments. </param>
      <param name="ptr">A pointer to the argument in <paramref name="arglist" /> to access first, or the first mandatory argument in <paramref name="arglist" /> if <paramref name="ptr" /> is null.</param>
    </member>
    <member name="M:System.ArgIterator.End">
      <summary>Concludes processing of the variable-length argument list represented by this instance.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgIterator.Equals(System.Object)">
      <summary>This method is not supported, and always throws <see cref="T:System.NotSupportedException" />.</summary>
      <returns>This comparison is not supported. No value is returned.</returns>
      <param name="o">An object to be compared to this instance. </param>
      <exception cref="T:System.NotSupportedException">This method is not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgIterator.GetHashCode">
      <summary>Returns the hash code of this object.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgIterator.GetNextArg">
      <summary>Returns the next argument in a variable-length argument list.</summary>
      <returns>The next argument as a <see cref="T:System.TypedReference" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read beyond the end of the list. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)">
      <summary>Returns the next argument in a variable-length argument list that has a specified type.</summary>
      <returns>The next argument as a <see cref="T:System.TypedReference" /> object.</returns>
      <param name="rth">A runtime type handle that identifies the type of the argument to retrieve. </param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to read beyond the end of the list. </exception>
      <exception cref="T:System.ArgumentNullException">The pointer to the remaining arguments is zero.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgIterator.GetNextArgType">
      <summary>Returns the type of the next argument.</summary>
      <returns>The type of the next argument.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgIterator.GetRemainingCount">
      <summary>Returns the number of arguments remaining in the argument list.</summary>
      <returns>The number of remaining arguments.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ArgumentException">
      <summary>The exception that is thrown when one of the arguments provided to a method is not valid.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArgumentException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentException" /> class.</summary>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentException" /> class with a specified error message and the name of the parameter that causes this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="paramName">The name of the parameter that caused the current exception. </param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentException" /> class with a specified error message, the parameter name, and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="paramName">The name of the parameter that caused the current exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the parameter name and additional exception information.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> object is a null reference (Nothing in Visual Basic). </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.ArgumentException.Message">
      <summary>Gets the error message and the parameter name, or only the error message if no parameter name is set.</summary>
      <returns>A text string describing the details of the exception. The value of this property takes one of two forms: Condition Value The <paramref name="paramName" /> is a null reference (Nothing in Visual Basic) or of zero length. The <paramref name="message" /> string passed to the constructor. The <paramref name="paramName" /> is not null reference (Nothing in Visual Basic) and it has a length greater than zero. The <paramref name="message" /> string appended with the name of the invalid parameter. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArgumentException.ParamName">
      <summary>Gets the name of the parameter that causes this exception.</summary>
      <returns>The parameter name.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ArgumentNullException">
      <summary>The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentNullException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentNullException" /> class.</summary>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentNullException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">An object that describes the source or destination of the serialized data. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentNullException" /> class with the name of the parameter that causes this exception.</summary>
      <param name="paramName">The name of the parameter that caused the exception. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentNullException" /> class with a specified error message and the exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for this exception. </param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:System.ArgumentNullException" /> class with a specified error message and the name of the parameter that causes this exception.</summary>
      <param name="paramName">The name of the parameter that caused the exception. </param>
      <param name="message">A message that describes the error. </param>
    </member>
    <member name="T:System.ArgumentOutOfRangeException">
      <summary>The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class.</summary>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">An object that describes the source or destination of the serialized data. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with the name of the parameter that causes this exception.</summary>
      <param name="paramName">The name of the parameter that causes this exception. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with a specified error message and the exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for this exception. </param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with a specified error message, the parameter name, and the value of the argument.</summary>
      <param name="paramName">The name of the parameter that caused the exception. </param>
      <param name="actualValue">The value of the argument that causes this exception. </param>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with a specified error message and the name of the parameter that causes this exception.</summary>
      <param name="paramName">The name of the parameter that caused the exception. </param>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.ActualValue">
      <summary>Gets the argument value that causes this exception.</summary>
      <returns>An Object that contains the value of the parameter that caused the current <see cref="T:System.Exception" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the invalid argument value and additional exception information.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">An object that describes the source or destination of the serialized data. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> object is null. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.Message">
      <summary>Gets the error message and the string representation of the invalid argument value, or only the error message if the argument value is null.</summary>
      <returns>The text message for this exception. The value of this property takes one of two forms, as follows.Condition Value The <paramref name="actualValue" /> is null. The <paramref name="message" /> string passed to the constructor. The <paramref name="actualValue" /> is not null. The <paramref name="message" /> string appended with the string representation of the invalid argument value. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ArithmeticException">
      <summary>The exception that is thrown for errors in an arithmetic, casting, or conversion operation.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArithmeticException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ArithmeticException" /> class.</summary>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ArithmeticException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ArithmeticException" /> class with a specified error message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error. </param>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ArithmeticException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Array">
      <summary>Provides methods for creating, manipulating, searching, and sorting arrays, thereby serving as the base class for all arrays in the common language runtime.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.AsReadOnly``1(``0[])">
      <summary>Returns a read-only wrapper for the specified array.</summary>
      <returns>A read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the specified array.</returns>
      <param name="array">The one-dimensional, zero-based array to wrap in a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />  wrapper. </param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)">
      <summary>Searches a range of elements in a one-dimensional sorted <see cref="T:System.Array" /> for a value, using the <see cref="T:System.IComparable" /> interface implemented by each element of the <see cref="T:System.Array" /> and by the specified value.</summary>
      <returns>The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found. If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, a negative number which is the bitwise complement of the index of the first element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater than any of the elements in <paramref name="array" />, a negative number which is the bitwise complement of (the index of the last element plus 1).</returns>
      <param name="array">The sorted one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="index">The starting index of the range to search.</param>
      <param name="length">The length of the range to search.</param>
      <param name="value">The object to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.-or-<paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Searches a range of elements in a one-dimensional sorted <see cref="T:System.Array" /> for a value, using the specified <see cref="T:System.Collections.IComparer" /> interface.</summary>
      <returns>The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found. If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, a negative number which is the bitwise complement of the index of the first element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater than any of the elements in <paramref name="array" />, a negative number which is the bitwise complement of (the index of the last element plus 1).</returns>
      <param name="array">The sorted one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="index">The starting index of the range to search.</param>
      <param name="length">The length of the range to search.</param>
      <param name="value">The object to search for.</param>
      <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.-or- null to use the <see cref="T:System.IComparable" /> implementation of each element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.-or-<paramref name="comparer" /> is null, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object)">
      <summary>Searches an entire one-dimensional sorted <see cref="T:System.Array" /> for a specific element, using the <see cref="T:System.IComparable" /> interface implemented by each element of the <see cref="T:System.Array" /> and by the specified object.</summary>
      <returns>The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found. If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, a negative number which is the bitwise complement of the index of the first element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater than any of the elements in <paramref name="array" />, a negative number which is the bitwise complement of (the index of the last element plus 1).</returns>
      <param name="array">The sorted one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)">
      <summary>Searches an entire one-dimensional sorted <see cref="T:System.Array" /> for a value using the specified <see cref="T:System.Collections.IComparer" /> interface.</summary>
      <returns>The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found. If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, a negative number which is the bitwise complement of the index of the first element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater than any of the elements in <paramref name="array" />, a negative number which is the bitwise complement of (the index of the last element plus 1).</returns>
      <param name="array">The sorted one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to search for.</param>
      <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.-or- null to use the <see cref="T:System.IComparable" /> implementation of each element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> is null, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)">
      <summary>Searches a range of elements in a one-dimensional sorted <see cref="T:System.Array" /> for a value, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified value.</summary>
      <returns>The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found. If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, a negative number which is the bitwise complement of the index of the first element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater than any of the elements in <paramref name="array" />, a negative number which is the bitwise complement of (the index of the last element plus 1).</returns>
      <param name="array">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search. </param>
      <param name="index">The starting index of the range to search.</param>
      <param name="length">The length of the range to search.</param>
      <param name="value">The object to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.-or-<paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
      <summary>Searches a range of elements in a one-dimensional sorted <see cref="T:System.Array" /> for a value, using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</summary>
      <returns>The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found. If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, a negative number which is the bitwise complement of the index of the first element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater than any of the elements in <paramref name="array" />, a negative number which is the bitwise complement of (the index of the last element plus 1).</returns>
      <param name="array">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search. </param>
      <param name="index">The starting index of the range to search.</param>
      <param name="length">The length of the range to search.</param>
      <param name="value">The object to search for.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.-or- null to use the <see cref="T:System.IComparable`1" /> implementation of each element.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.-or-<paramref name="comparer" /> is null, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, <paramref name="value" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0)">
      <summary>Searches an entire one-dimensional sorted <see cref="T:System.Array" /> for a specific element, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified object.</summary>
      <returns>The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found. If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, a negative number which is the bitwise complement of the index of the first element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater than any of the elements in <paramref name="array" />, a negative number which is the bitwise complement of (the index of the last element plus 1).</returns>
      <param name="array">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search. </param>
      <param name="value">The object to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})">
      <summary>Searches an entire one-dimensional sorted <see cref="T:System.Array" /> for a value using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</summary>
      <returns>The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found. If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, a negative number which is the bitwise complement of the index of the first element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater than any of the elements in <paramref name="array" />, a negative number which is the bitwise complement of (the index of the last element plus 1).</returns>
      <param name="array">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.  </param>
      <param name="value">The object to search for.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.-or- null to use the <see cref="T:System.IComparable`1" /> implementation of each element.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> is null, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, <paramref name="value" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.Clear(System.Array,System.Int32,System.Int32)">
      <summary>Sets a range of elements in the <see cref="T:System.Array" /> to zero, to false, or to null, depending on the element type.</summary>
      <param name="array">The <see cref="T:System.Array" /> whose elements need to be cleared.</param>
      <param name="index">The starting index of the range of elements to clear.</param>
      <param name="length">The number of elements to clear.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.-or-The sum of <paramref name="index" /> and <paramref name="length" /> is greater than the size of the <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Clone">
      <summary>Creates a shallow copy of the <see cref="T:System.Array" />.</summary>
      <returns>A shallow copy of the <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.  Guarantees that all changes are undone if the copy does not succeed completely.</summary>
      <param name="sourceArray">The <see cref="T:System.Array" /> that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the <paramref name="sourceArray" /> at which copying begins.</param>
      <param name="destinationArray">The <see cref="T:System.Array" /> that receives the data.</param>
      <param name="destinationIndex">A 32-bit integer that represents the index in the <paramref name="destinationArray" /> at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> is null.-or-<paramref name="destinationArray" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">The <paramref name="sourceArray" /> type is neither the same as nor derived from the <paramref name="destinationArray" /> type.</exception>
      <exception cref="T:System.InvalidCastException">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.-or-<paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.-or-<paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</exception>
    </member>
    <member name="M:System.Array.ConvertAll``2(``0[],System.Converter{``0,``1})">
      <summary>Converts an array of one type to an array of another type.</summary>
      <returns>An array of the target type containing the converted elements from the source array.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to convert to a target type.</param>
      <param name="converter">A <see cref="T:System.Converter`2" /> that converts each element from one type to another type.</param>
      <typeparam name="TInput">The type of the elements of the source array.</typeparam>
      <typeparam name="TOutput">The type of the elements of the target array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="converter" /> is null.</exception>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Array,System.Int32)">
      <summary>Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element. The length is specified as a 32-bit integer.</summary>
      <param name="sourceArray">The <see cref="T:System.Array" /> that contains the data to copy.</param>
      <param name="destinationArray">The <see cref="T:System.Array" /> that receives the data.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> is null.-or-<paramref name="destinationArray" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</exception>
      <exception cref="T:System.InvalidCastException">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.-or-<paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Array,System.Int64)">
      <summary>Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element. The length is specified as a 64-bit integer.</summary>
      <param name="sourceArray">The <see cref="T:System.Array" /> that contains the data to copy.</param>
      <param name="destinationArray">The <see cref="T:System.Array" /> that receives the data.</param>
      <param name="length">A 64-bit integer that represents the number of elements to copy. The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> is null.-or-<paramref name="destinationArray" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</exception>
      <exception cref="T:System.InvalidCastException">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.-or-<paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index. The length and the indexes are specified as 32-bit integers.</summary>
      <param name="sourceArray">The <see cref="T:System.Array" /> that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the <paramref name="sourceArray" /> at which copying begins.</param>
      <param name="destinationArray">The <see cref="T:System.Array" /> that receives the data.</param>
      <param name="destinationIndex">A 32-bit integer that represents the index in the <paramref name="destinationArray" /> at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> is null.-or-<paramref name="destinationArray" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</exception>
      <exception cref="T:System.InvalidCastException">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.-or-<paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.-or-<paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)">
      <summary>Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index. The length and the indexes are specified as 64-bit integers.</summary>
      <param name="sourceArray">The <see cref="T:System.Array" /> that contains the data to copy.</param>
      <param name="sourceIndex">A 64-bit integer that represents the index in the <paramref name="sourceArray" /> at which copying begins.</param>
      <param name="destinationArray">The <see cref="T:System.Array" /> that receives the data.</param>
      <param name="destinationIndex">A 64-bit integer that represents the index in the <paramref name="destinationArray" /> at which storing begins.</param>
      <param name="length">A 64-bit integer that represents the number of elements to copy. The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> is null.-or-<paramref name="destinationArray" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">
        <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</exception>
      <exception cref="T:System.InvalidCastException">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" /> is outside the range of valid indexes for the <paramref name="sourceArray" />.-or-<paramref name="destinationIndex" /> is outside the range of valid indexes for the <paramref name="destinationArray" />.-or-<paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.-or-<paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the current one-dimensional <see cref="T:System.Array" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index. The index is specified as a 32-bit integer.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see cref="T:System.Array" />.</param>
      <param name="index">A 32-bit integer that represents the index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source <see cref="T:System.Array" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">The source <see cref="T:System.Array" /> is multidimensional.</exception>
      <exception cref="T:System.InvalidCastException">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.CopyTo(System.Array,System.Int64)">
      <summary>Copies all the elements of the current one-dimensional <see cref="T:System.Array" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index. The index is specified as a 64-bit integer.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see cref="T:System.Array" />.</param>
      <param name="index">A 64-bit integer that represents the index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the range of valid indexes for <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source <see cref="T:System.Array" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">The source <see cref="T:System.Array" /> is multidimensional.</exception>
      <exception cref="T:System.InvalidCastException">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32)">
      <summary>Creates a one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and length, with zero-based indexing.</summary>
      <returns>A new one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length, using zero-based indexing.</returns>
      <param name="elementType">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</param>
      <param name="length">The size of the <see cref="T:System.Array" /> to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> is not supported. For example, <see cref="T:System.Void" /> is not supported.-or-<paramref name="elementType" /> is an open generic type.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32)">
      <summary>Creates a two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</summary>
      <returns>A new two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</returns>
      <param name="elementType">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</param>
      <param name="length1">The size of the first dimension of the <see cref="T:System.Array" /> to create.</param>
      <param name="length2">The size of the second dimension of the <see cref="T:System.Array" /> to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> is not supported. For example, <see cref="T:System.Void" /> is not supported. -or-<paramref name="elementType" /> is an open generic type.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length1" /> is less than zero.-or-<paramref name="length2" /> is less than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</summary>
      <returns>A new three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</returns>
      <param name="elementType">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</param>
      <param name="length1">The size of the first dimension of the <see cref="T:System.Array" /> to create.</param>
      <param name="length2">The size of the second dimension of the <see cref="T:System.Array" /> to create.</param>
      <param name="length3">The size of the third dimension of the <see cref="T:System.Array" /> to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> is not supported. For example, <see cref="T:System.Void" /> is not supported. -or-<paramref name="elementType" /> is an open generic type.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length1" /> is less than zero.-or-<paramref name="length2" /> is less than zero.-or-<paramref name="length3" /> is less than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[])">
      <summary>Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing. The dimension lengths are specified in an array of 32-bit integers.</summary>
      <returns>A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</returns>
      <param name="elementType">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</param>
      <param name="lengths">An array of 32-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> is null.-or-<paramref name="lengths" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.-or-The <paramref name="lengths" /> array contains less than one element.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> is not supported. For example, <see cref="T:System.Void" /> is not supported. -or-<paramref name="elementType" /> is an open generic type.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Any value in <paramref name="lengths" /> is less than zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])">
      <summary>Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with the specified lower bounds.</summary>
      <returns>A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length and lower bound for each dimension.</returns>
      <param name="elementType">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</param>
      <param name="lengths">A one-dimensional array that contains the size of each dimension of the <see cref="T:System.Array" /> to create.</param>
      <param name="lowerBounds">A one-dimensional array that contains the lower bound (starting index) of each dimension of the <see cref="T:System.Array" /> to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> is null.-or-<paramref name="lengths" /> is null.-or-<paramref name="lowerBounds" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.-or-The <paramref name="lengths" /> array contains less than one element.-or-The <paramref name="lengths" /> and <paramref name="lowerBounds" /> arrays do not contain the same number of elements.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> is not supported. For example, <see cref="T:System.Void" /> is not supported. -or-<paramref name="elementType" /> is an open generic type.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Any value in <paramref name="lengths" /> is less than zero.-or-Any value in <paramref name="lowerBounds" /> is very large, such that the sum of a dimension's lower bound and length is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int64[])">
      <summary>Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing. The dimension lengths are specified in an array of 64-bit integers.</summary>
      <returns>A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</returns>
      <param name="elementType">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</param>
      <param name="lengths">An array of 64-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create. Each integer in the array must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementType" /> is null.-or-<paramref name="lengths" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.-or-The <paramref name="lengths" /> array contains less than one element.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> is not supported. For example, <see cref="T:System.Void" /> is not supported. -or-<paramref name="elementType" /> is an open generic type.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Any value in <paramref name="lengths" /> is less than zero or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Exists``1(``0[],System.Predicate{``0})">
      <summary>Determines whether the specified array contains elements that match the conditions defined by the specified predicate.</summary>
      <returns>true if <paramref name="array" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, false.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
    </member>
    <member name="M:System.Array.Find``1(``0[],System.Predicate{``0})">
      <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Array" />.</summary>
      <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
    </member>
    <member name="M:System.Array.FindAll``1(``0[],System.Predicate{``0})">
      <summary>Retrieves all the elements that match the conditions defined by the specified predicate.</summary>
      <returns>An <see cref="T:System.Array" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Array" />.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</summary>
      <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.-or-<paramref name="count" /> is less than zero.-or-<paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the specified index to the last element.</summary>
      <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})">
      <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Array" />.</summary>
      <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
    </member>
    <member name="M:System.Array.FindLast``1(``0[],System.Predicate{``0})">
      <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Array" />.</summary>
      <returns>The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</summary>
      <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.-or-<paramref name="count" /> is less than zero.-or-<paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</summary>
      <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})">
      <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Array" />.</summary>
      <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
    </member>
    <member name="M:System.Array.ForEach``1(``0[],System.Action{``0})">
      <summary>Performs the specified action on each element of the specified array.</summary>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> on whose elements the action is to be performed.</param>
      <param name="action">The <see cref="T:System.Action`1" /> to perform on each element of <paramref name="array" />.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="action" /> is null.</exception>
    </member>
    <member name="M:System.Array.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetLength(System.Int32)">
      <summary>Gets a 32-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</summary>
      <returns>A 32-bit integer that represents the number of elements in the specified dimension.</returns>
      <param name="dimension">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> is less than zero.-or-<paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetLongLength(System.Int32)">
      <summary>Gets a 64-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</summary>
      <returns>A 64-bit integer that represents the number of elements in the specified dimension.</returns>
      <param name="dimension">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> is less than zero.-or-<paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetLowerBound(System.Int32)">
      <summary>Gets the lower bound of the specified dimension in the <see cref="T:System.Array" />.</summary>
      <returns>The lower bound of the specified dimension in the <see cref="T:System.Array" />.</returns>
      <param name="dimension">A zero-based dimension of the <see cref="T:System.Array" /> whose lower bound needs to be determined.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> is less than zero.-or-<paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetUpperBound(System.Int32)">
      <summary>Gets the upper bound of the specified dimension in the <see cref="T:System.Array" />.</summary>
      <returns>The upper bound of the specified dimension in the <see cref="T:System.Array" />.</returns>
      <param name="dimension">A zero-based dimension of the <see cref="T:System.Array" /> whose upper bound needs to be determined.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="dimension" /> is less than zero.-or-<paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32)">
      <summary>Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />. The index is specified as a 32-bit integer.</summary>
      <returns>The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</returns>
      <param name="index">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly one dimension.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32,System.Int32)">
      <summary>Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />. The indexes are specified as 32-bit integers.</summary>
      <returns>The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</returns>
      <param name="index1">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <param name="index2">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32,System.Int32,System.Int32)">
      <summary>Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />. The indexes are specified as 32-bit integers.</summary>
      <returns>The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</returns>
      <param name="index1">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <param name="index2">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <param name="index3">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32[])">
      <summary>Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />. The indexes are specified as an array of 32-bit integers.</summary>
      <returns>The value at the specified position in the multidimensional <see cref="T:System.Array" />.</returns>
      <param name="indices">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int64)">
      <summary>Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />. The index is specified as a 64-bit integer.</summary>
      <returns>The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</returns>
      <param name="index">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly one dimension.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int64,System.Int64)">
      <summary>Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />. The indexes are specified as 64-bit integers.</summary>
      <returns>The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</returns>
      <param name="index1">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <param name="index2">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int64,System.Int64,System.Int64)">
      <summary>Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />. The indexes are specified as 64-bit integers.</summary>
      <returns>The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</returns>
      <param name="index1">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <param name="index2">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <param name="index3">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int64[])">
      <summary>Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />. The indexes are specified as an array of 64-bit integers.</summary>
      <returns>The value at the specified position in the multidimensional <see cref="T:System.Array" />.</returns>
      <param name="indices">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object)">
      <summary>Searches for the specified object and returns the index of the first occurrence within the entire one-dimensional <see cref="T:System.Array" />.</summary>
      <returns>The index of the first occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</returns>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)">
      <summary>Searches for the specified object and returns the index of the first occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that extends from the specified index to the last element.</summary>
      <returns>The index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, the lower bound of the array minus 1.</returns>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <param name="startIndex">The starting index of the search. 0 (zero) is valid in an empty array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Searches for the specified object and returns the index of the first occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</summary>
      <returns>The index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified in <paramref name="count" />, if found; otherwise, the lower bound of the array minus 1.</returns>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <param name="startIndex">The starting index of the search. 0 (zero) is valid in an empty array.</param>
      <param name="count">The number of elements in the section to search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.-or-<paramref name="count" /> is less than zero.-or-<paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0)">
      <summary>Searches for the specified object and returns the index of the first occurrence within the entire <see cref="T:System.Array" />.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32)">
      <summary>Searches for the specified object and returns the index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the specified index to the last element.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <param name="startIndex">The zero-based starting index of the search. 0 (zero) is valid in an empty array.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Searches for the specified object and returns the index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified in <paramref name="count" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <param name="startIndex">The zero-based starting index of the search. 0 (zero) is valid in an empty array.</param>
      <param name="count">The number of elements in the section to search.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.-or-<paramref name="count" /> is less than zero.-or-<paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.Initialize">
      <summary>Initializes every element of the value-type <see cref="T:System.Array" /> by calling the default constructor of the value type.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Array.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Array" /> has a fixed size.</summary>
      <returns>This property is always true for all arrays.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Array.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Array" /> is read-only.</summary>
      <returns>This property is always false for all arrays.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Array.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Array" /> is synchronized (thread safe).</summary>
      <returns>This property is always false for all arrays.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object)">
      <summary>Searches for the specified object and returns the index of the last occurrence within the entire one-dimensional <see cref="T:System.Array" />.</summary>
      <returns>The index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</returns>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)">
      <summary>Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that extends from the first element to the specified index.</summary>
      <returns>The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</returns>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <param name="startIndex">The starting index of the backward search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</summary>
      <returns>The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</returns>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <param name="startIndex">The starting index of the backward search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.-or-<paramref name="count" /> is less than zero.-or-<paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0)">
      <summary>Searches for the specified object and returns the index of the last occurrence within the entire <see cref="T:System.Array" />.</summary>
      <returns>The zero-based index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)">
      <summary>Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</summary>
      <returns>The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</summary>
      <returns>The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, –1.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</param>
      <param name="value">The object to locate in <paramref name="array" />.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.-or-<paramref name="count" /> is less than zero.-or-<paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Array.Length">
      <summary>Gets a 32-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</summary>
      <returns>A 32-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Array.LongLength">
      <summary>Gets a 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</summary>
      <returns>A 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Array.Rank">
      <summary>Gets the zero-based rank (number of dimensions) of the <see cref="T:System.Array" />.</summary>
      <returns>The zero-based rank (number of dimensions) of the <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Resize``1(``0[]@,System.Int32)">
      <summary>Changes the size of an array to the specified new size.</summary>
      <param name="array">The one-dimensional, zero-based array to resize, or null to create a new array with the specified size.</param>
      <param name="newSize">The size of the new array.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newSize" /> is less than zero.</exception>
    </member>
    <member name="M:System.Array.Reverse(System.Array)">
      <summary>Reverses the sequence of the elements in the entire one-dimensional <see cref="T:System.Array" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to reverse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)">
      <summary>Reverses the sequence of the elements in a range of elements in the one-dimensional <see cref="T:System.Array" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to reverse.</param>
      <param name="index">The starting index of the section to reverse.</param>
      <param name="length">The number of elements in the section to reverse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32)">
      <summary>Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />. The index is specified as a 32-bit integer.</summary>
      <param name="value">The new value for the specified element.</param>
      <param name="index">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly one dimension.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32,System.Int32)">
      <summary>Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />. The indexes are specified as 32-bit integers.</summary>
      <param name="value">The new value for the specified element.</param>
      <param name="index1">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <param name="index2">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)">
      <summary>Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />. The indexes are specified as 32-bit integers.</summary>
      <param name="value">The new value for the specified element.</param>
      <param name="index1">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <param name="index2">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <param name="index3">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32[])">
      <summary>Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />. The indexes are specified as an array of 32-bit integers.</summary>
      <param name="value">The new value for the specified element.</param>
      <param name="indices">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int64)">
      <summary>Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />. The index is specified as a 64-bit integer.</summary>
      <param name="value">The new value for the specified element.</param>
      <param name="index">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly one dimension.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int64,System.Int64)">
      <summary>Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />. The indexes are specified as 64-bit integers.</summary>
      <param name="value">The new value for the specified element.</param>
      <param name="index1">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <param name="index2">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)">
      <summary>Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />. The indexes are specified as 64-bit integers.</summary>
      <param name="value">The new value for the specified element.</param>
      <param name="index1">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <param name="index2">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <param name="index3">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</param>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int64[])">
      <summary>Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />. The indexes are specified as an array of 64-bit integers.</summary>
      <param name="value">The new value for the specified element.</param>
      <param name="indices">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the element to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array)">
      <summary>Sorts the elements in an entire one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to sort.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.InvalidOperationException">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array)">
      <summary>Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</summary>
      <param name="keys">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</param>
      <param name="items">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <paramref name="keys" /><see cref="T:System.Array" />.-or-null to sort only the <paramref name="keys" /><see cref="T:System.Array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> is null.</exception>
      <exception cref="T:System.RankException">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.-or-The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> is not null, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.-or-<paramref name="items" /> is not null, and the length of <paramref name="keys" /> does not match the length of <paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)">
      <summary>Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="keys">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</param>
      <param name="items">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <paramref name="keys" /><see cref="T:System.Array" />.-or-null to sort only the <paramref name="keys" /><see cref="T:System.Array" />.</param>
      <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.-or-null to use the <see cref="T:System.IComparable" /> implementation of each element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> is null.</exception>
      <exception cref="T:System.RankException">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.-or-The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> is not null, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.-or-<paramref name="items" /> is not null, and the length of <paramref name="keys" /> does not match the length of <paramref name="items" />. -or-The implementation of <paramref name="comparer" /> caused an error during the sort. For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)">
      <summary>Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</summary>
      <param name="keys">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</param>
      <param name="items">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <paramref name="keys" /><see cref="T:System.Array" />.-or-null to sort only the <paramref name="keys" /><see cref="T:System.Array" />.</param>
      <param name="index">The starting index of the range to sort.</param>
      <param name="length">The number of elements in the range to sort.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> is null.</exception>
      <exception cref="T:System.RankException">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.-or-The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> is not null, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.-or-<paramref name="items" /> is not null, and the length of <paramref name="keys" /> does not match the length of <paramref name="items" />.-or-<paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.-or-<paramref name="items" /> is not null, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</exception>
      <exception cref="T:System.InvalidOperationException">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="keys">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</param>
      <param name="items">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <paramref name="keys" /><see cref="T:System.Array" />.-or-null to sort only the <paramref name="keys" /><see cref="T:System.Array" />.</param>
      <param name="index">The starting index of the range to sort.</param>
      <param name="length">The number of elements in the range to sort.</param>
      <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.-or-null to use the <see cref="T:System.IComparable" /> implementation of each element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> is null.</exception>
      <exception cref="T:System.RankException">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.-or-The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> is not null, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.-or-<paramref name="items" /> is not null, and the length of <paramref name="keys" /> does not match the length of <paramref name="items" />.-or-<paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.-or-<paramref name="items" /> is not null, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />. -or-The implementation of <paramref name="comparer" /> caused an error during the sort. For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Collections.IComparer)">
      <summary>Sorts the elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to sort.</param>
      <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.-or-null to use the <see cref="T:System.IComparable" /> implementation of each element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <exception cref="T:System.ArgumentException">The implementation of <paramref name="comparer" /> caused an error during the sort. For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32)">
      <summary>Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to sort.</param>
      <param name="index">The starting index of the range to sort.</param>
      <param name="length">The number of elements in the range to sort.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> to sort.</param>
      <param name="index">The starting index of the range to sort.</param>
      <param name="length">The number of elements in the range to sort.</param>
      <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.-or-null to use the <see cref="T:System.IComparable" /> implementation of each element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />. -or-The implementation of <paramref name="comparer" /> caused an error during the sort. For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort``1(``0[])">
      <summary>Sorts the elements in an entire <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</summary>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})">
      <summary>Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</summary>
      <param name="array">The one-dimensional, zero-base <see cref="T:System.Array" /> to sort</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or null to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
      <exception cref="T:System.ArgumentException">The implementation of <paramref name="comparer" /> caused an error during the sort. For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Comparison{``0})">
      <summary>Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Comparison`1" />.</summary>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</param>
      <param name="comparison">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="comparison" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The implementation of <paramref name="comparison" /> caused an error during the sort. For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)">
      <summary>Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</summary>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</param>
      <param name="index">The starting index of the range to sort.</param>
      <param name="length">The number of elements in the range to sort.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</summary>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</param>
      <param name="index">The starting index of the range to sort.</param>
      <param name="length">The number of elements in the range to sort.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or null to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />. -or-The implementation of <paramref name="comparer" /> caused an error during the sort. For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[])">
      <summary>Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</summary>
      <param name="keys">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort. </param>
      <param name="items">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <paramref name="keys" />, or null to sort only <paramref name="keys" />.</param>
      <typeparam name="TKey">The type of the elements of the key array.</typeparam>
      <typeparam name="TValue">The type of the elements of the items array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> is not null, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.-or-<paramref name="items" /> is not null, and the length of <paramref name="keys" /> does not match the length of <paramref name="items" />.</exception>
      <exception cref="T:System.InvalidOperationException">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})">
      <summary>Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</summary>
      <param name="keys">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort. </param>
      <param name="items">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <paramref name="keys" />, or null to sort only <paramref name="keys" />.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or null to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</param>
      <typeparam name="TKey">The type of the elements of the key array.</typeparam>
      <typeparam name="TValue">The type of the elements of the items array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> is not null, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.-or-<paramref name="items" /> is not null, and the length of <paramref name="keys" /> does not match the length of <paramref name="items" />.-or-The implementation of <paramref name="comparer" /> caused an error during the sort. For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)">
      <summary>Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</summary>
      <param name="keys">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort. </param>
      <param name="items">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <paramref name="keys" />, or null to sort only <paramref name="keys" />.</param>
      <param name="index">The starting index of the range to sort.</param>
      <param name="length">The number of elements in the range to sort.</param>
      <typeparam name="TKey">The type of the elements of the key array.</typeparam>
      <typeparam name="TValue">The type of the elements of the items array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> is not null, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.-or-<paramref name="items" /> is not null, and the length of <paramref name="keys" /> does not match the length of <paramref name="items" />.-or-<paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.-or-<paramref name="items" /> is not null, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</exception>
      <exception cref="T:System.InvalidOperationException">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</summary>
      <param name="keys">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort. </param>
      <param name="items">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <paramref name="keys" />, or null to sort only <paramref name="keys" />.</param>
      <param name="index">The starting index of the range to sort.</param>
      <param name="length">The number of elements in the range to sort.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or null to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</param>
      <typeparam name="TKey">The type of the elements of the key array.</typeparam>
      <typeparam name="TValue">The type of the elements of the items array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keys" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.-or-<paramref name="length" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="items" /> is not null, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.-or-<paramref name="items" /> is not null, and the length of <paramref name="keys" /> does not match the length of <paramref name="items" />.-or-<paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.-or-<paramref name="items" /> is not null, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />. -or-The implementation of <paramref name="comparer" /> caused an error during the sort. For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> is null, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</exception>
    </member>
    <member name="P:System.Array.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Array" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Array" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Array" />.</summary>
      <returns>The number of elements contained in the T:System.Collections.ICollection.</returns>
    </member>
    <member name="M:System.Array.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to T:System.Collections.IList.</summary>
      <returns>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</returns>
      <param name="value">The object to be added to the T:System.Collections.IList.</param>
      <exception cref="T:System.NotSupportedException">The T:System.Collections.IList is read-only.-or- The T:System.Collections.IList has a fixed size.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">The T:System.Collections.IList is read-only..</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether an element is in the T:System.Collections.IList.</summary>
      <returns>true if <paramref name="value" /> is found in the T:System.Collections.IList; otherwise, false.</returns>
      <param name="value">The object to locate in the current list. The element to locate can be null for reference types.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the T:System.Collections.IList.</summary>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
      <param name="value">The object to locate in the current list.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the T:System.Collections.IList at the specified index.</summary>
      <param name="index">The index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The object to insert.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the T:System.Collections.IList. </exception>
      <exception cref="T:System.NotSupportedException">The T:System.Collections.IList is read-only.-or- The T:System.Collections.IList has a fixed size. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> is null reference in the T:System.Collections.IList.</exception>
    </member>
    <member name="P:System.Array.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The index of the element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">The current <see cref="T:System.Array" /> does not have exactly one dimension.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the T:System.Collections.IList.</summary>
      <param name="value">The object to remove from the T:System.Collections.IList.</param>
      <exception cref="T:System.NotSupportedException">The T:System.Collections.IList is read-only.-or- The T:System.Collections.IList has a fixed size. </exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the T:System.Collections.IList item at the specified index.</summary>
      <param name="index">The index of the element to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the T:System.Collections.IList. </exception>
      <exception cref="T:System.NotSupportedException">The T:System.Collections.IList is read-only.-or- The T:System.Collections.IList has a fixed size.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</summary>
      <returns>An integer that indicates the relationship of the current collection object to other, as shown in the following table.Return valueDescription-1The current instance precedes <paramref name="other" />.0The current instance and <paramref name="other" /> are equal.1The current instance follows <paramref name="other" />.</returns>
      <param name="other">The object to compare with the current instance.</param>
      <param name="comparer">An object that compares the current object and <paramref name="other" />.</param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Determines whether an object is equal to the current instance.</summary>
      <returns>true if the two objects are equal; otherwise, false.</returns>
      <param name="other">The object to compare with the current instance.</param>
      <param name="comparer">An object that determines whether the current instance and <paramref name="other" /> are equal. </param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Returns a hash code for the current instance.</summary>
      <returns>The hash code for the current instance.</returns>
      <param name="comparer">An object that computes the hash code of the current object.</param>
    </member>
    <member name="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})">
      <summary>Determines whether every element in the array matches the conditions defined by the specified predicate.</summary>
      <returns>true if every element in <paramref name="array" /> matches the conditions defined by the specified predicate; otherwise, false. If there are no elements in the array, the return value is true.</returns>
      <param name="array">The one-dimensional, zero-based <see cref="T:System.Array" /> to check against the conditions</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> that defines the conditions to check against the elements.</param>
      <typeparam name="T">The type of the elements of the array.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.-or-<paramref name="match" /> is null.</exception>
    </member>
    <member name="T:System.ArraySegment`1">
      <summary>Delimits a section of a one-dimensional array.</summary>
      <typeparam name="T">The type of the elements in the array segment.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[])">
      <summary>Initializes a new instance of the <see cref="T:System.ArraySegment`1" /> structure that delimits all the elements in the specified array.</summary>
      <param name="array">The array to wrap.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ArraySegment`1" /> structure that delimits the specified range of the elements in the specified array.</summary>
      <param name="array">The array containing the range of elements to delimit.</param>
      <param name="offset">The zero-based index of the first element in the range.</param>
      <param name="count">The number of elements in the range.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> or <paramref name="count" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> and <paramref name="count" /> do not specify a valid range in <paramref name="array" />.</exception>
    </member>
    <member name="P:System.ArraySegment`1.Array">
      <summary>Gets the original array containing the range of elements that the array segment delimits.</summary>
      <returns>The original array that was passed to the constructor, and that contains the range delimited by the <see cref="T:System.ArraySegment`1" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArraySegment`1.Count">
      <summary>Gets the number of elements in the range delimited by the array segment.</summary>
      <returns>The number of elements in the range delimited by the <see cref="T:System.ArraySegment`1" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
      <summary>Determines whether the specified <see cref="T:System.ArraySegment`1" /> structure is equal to the current instance.</summary>
      <returns>true if the specified <see cref="T:System.ArraySegment`1" /> structure is equal to the current instance; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.ArraySegment`1" /> structure to be compared with the current instance.</param>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current instance.</summary>
      <returns>true if the specified object is a <see cref="T:System.ArraySegment`1" /> structure and is equal to the current instance; otherwise, false.</returns>
      <param name="obj">The object to be compared with the current instance.</param>
    </member>
    <member name="M:System.ArraySegment`1.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.ArraySegment`1.Offset">
      <summary>Gets the position of the first element in the range delimited by the array segment, relative to the start of the original array.</summary>
      <returns>The position of the first element in the range delimited by the <see cref="T:System.ArraySegment`1" />, relative to the start of the original array.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Indicates whether two <see cref="T:System.ArraySegment`1" /> structures are equal.</summary>
      <returns>true if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, false.</returns>
      <param name="a">The <see cref="T:System.ArraySegment`1" /> structure on the left side of the equality operator.</param>
      <param name="b">The <see cref="T:System.ArraySegment`1" /> structure on the right side of the equality operator.</param>
    </member>
    <member name="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Indicates whether two <see cref="T:System.ArraySegment`1" /> structures are unequal.</summary>
      <returns>true if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, false.</returns>
      <param name="a">The <see cref="T:System.ArraySegment`1" /> structure on the left side of the inequality operator.</param>
      <param name="b">The <see cref="T:System.ArraySegment`1" /> structure on the right side of the inequality operator.</param>
    </member>
    <member name="T:System.ArrayTypeMismatchException">
      <summary>The exception that is thrown when an attempt is made to store an element of the wrong type within an array. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ArrayTypeMismatchException" /> class.</summary>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ArrayTypeMismatchException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ArrayTypeMismatchException" /> class with a specified error message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error. </param>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ArrayTypeMismatchException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.AssemblyLoadEventArgs">
      <summary>Provides data for the <see cref="E:System.AppDomain.AssemblyLoad" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AssemblyLoadEventArgs.#ctor(System.Reflection.Assembly)">
      <summary>Initializes a new instance of the <see cref="T:System.AssemblyLoadEventArgs" /> class using the specified <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="loadedAssembly">An instance that represents the currently loaded assembly. </param>
    </member>
    <member name="P:System.AssemblyLoadEventArgs.LoadedAssembly">
      <summary>Gets an <see cref="T:System.Reflection.Assembly" /> that represents the currently loaded assembly.</summary>
      <returns>An instance of <see cref="T:System.Reflection.Assembly" /> that represents the currently loaded assembly.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AssemblyLoadEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.AppDomain.AssemblyLoad" /> event of an <see cref="T:System.AppDomain" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="args">An <see cref="T:System.AssemblyLoadEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AsyncCallback">
      <summary>References a method to be called when a corresponding asynchronous operation completes.</summary>
      <param name="ar">The result of the asynchronous operation. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Attribute">
      <summary>Represents the base class for custom attributes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Attribute" /> class.</summary>
    </member>
    <member name="M:System.Attribute.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance or null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
      <summary>Retrieves a custom attribute applied to a specified assembly. Parameters specify the assembly and the type of the custom attribute to search for.</summary>
      <returns>A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or null if there is no such attribute.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
      <summary>Retrieves a custom attribute applied to an assembly. Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</summary>
      <returns>A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or null if there is no such attribute.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">This parameter is ignored, and does not affect the operation of this method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
      <summary>Retrieves a custom attribute applied to a member of a type. Parameters specify the member, and the type of the custom attribute to search for.</summary>
      <returns>A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or null if there is no such attribute.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="element" /> is not a constructor, method, property, event, type, or field. </exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
      <summary>Retrieves a custom attribute applied to a member of a type. Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</summary>
      <returns>A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or null if there is no such attribute.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">If true, specifies to also search the ancestors of <paramref name="element" /> for custom attributes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="element" /> is not a constructor, method, property, event, type, or field. </exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
      <summary>Retrieves a custom attribute applied to a module. Parameters specify the module, and the type of the custom attribute to search for.</summary>
      <returns>A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or null if there is no such attribute.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
      <summary>Retrieves a custom attribute applied to a module. Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</summary>
      <returns>A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or null if there is no such attribute.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">This parameter is ignored, and does not affect the operation of this method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
      <summary>Retrieves a custom attribute applied to a method parameter. Parameters specify the method parameter, and the type of the custom attribute to search for.</summary>
      <returns>A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or null if there is no such attribute.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
      <summary>Retrieves a custom attribute applied to a method parameter. Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</summary>
      <returns>A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or null if there is no such attribute.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">If true, specifies to also search the ancestors of <paramref name="element" /> for custom attributes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
      <summary>Retrieves an array of the custom attributes applied to an assembly. A parameter specifies the assembly.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
      <summary>Retrieves an array of the custom attributes applied to an assembly. Parameters specify the assembly, and an ignored search option.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules. </param>
      <param name="inherit">This parameter is ignored, and does not affect the operation of this method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
      <summary>Retrieves an array of the custom attributes applied to an assembly. Parameters specify the assembly, and the type of the custom attribute to search for.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
      <summary>Retrieves an array of the custom attributes applied to an assembly. Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">This parameter is ignored, and does not affect the operation of this method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
      <summary>Retrieves an array of the custom attributes applied to a member of a type. A parameter specifies the member.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="element" /> is not a constructor, method, property, event, type, or field. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
      <summary>Retrieves an array of the custom attributes applied to a member of a type. Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class. </param>
      <param name="inherit">If true, specifies to also search the ancestors of <paramref name="element" /> for custom attributes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="element" /> is not a constructor, method, property, event, type, or field. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
      <summary>Retrieves an array of the custom attributes applied to a member of a type. Parameters specify the member, and the type of the custom attribute to search for.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class. </param>
      <param name="type">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="type" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="element" /> is not a constructor, method, property, event, type, or field. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
      <summary>Retrieves an array of the custom attributes applied to a member of a type. Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class. </param>
      <param name="type">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">If true, specifies to also search the ancestors of <paramref name="element" /> for custom attributes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="type" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="element" /> is not a constructor, method, property, event, type, or field. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
      <summary>Retrieves an array of the custom attributes applied to a module. A parameter specifies the module.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
      <summary>Retrieves an array of the custom attributes applied to a module. Parameters specify the module, and an ignored search option.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file. </param>
      <param name="inherit">This parameter is ignored, and does not affect the operation of this method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
      <summary>Retrieves an array of the custom attributes applied to a module. Parameters specify the module, and the type of the custom attribute to search for.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
      <summary>Retrieves an array of the custom attributes applied to a module. Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">This parameter is ignored, and does not affect the operation of this method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
      <summary>Retrieves an array of the custom attributes applied to a method parameter. A parameter specifies the method parameter.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
      <summary>Retrieves an array of the custom attributes applied to a method parameter. Parameters specify the method parameter, and whether to search ancestors of the method parameter.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class. </param>
      <param name="inherit">If true, specifies to also search the ancestors of <paramref name="element" /> for custom attributes. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Reflection.ParameterInfo.Member" /> property of <paramref name="element" /> is null. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
      <summary>Retrieves an array of the custom attributes applied to a method parameter. Parameters specify the method parameter, and the type of the custom attribute to search for.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
      <summary>Retrieves an array of the custom attributes applied to a method parameter. Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</summary>
      <returns>An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">If true, specifies to also search the ancestors of <paramref name="element" /> for custom attributes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefaultAttribute">
      <summary>When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</summary>
      <returns>true if this instance is the default attribute for the class; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
      <summary>Determines whether any custom attributes are applied to an assembly. Parameters specify the assembly, and the type of the custom attribute to search for.</summary>
      <returns>true if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
      <summary>Determines whether any custom attributes are applied to an assembly. Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</summary>
      <returns>true if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">This parameter is ignored, and does not affect the operation of this method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
      <summary>Determines whether any custom attributes are applied to a member of a type. Parameters specify the member, and the type of the custom attribute to search for.</summary>
      <returns>true if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="element" /> is not a constructor, method, property, event, type, or field. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
      <summary>Determines whether any custom attributes are applied to a member of a type. Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</summary>
      <returns>true if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">If true, specifies to also search the ancestors of <paramref name="element" /> for custom attributes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="element" /> is not a constructor, method, property, event, type, or field. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
      <summary>Determines whether any custom attributes of a specified type are applied to a module. Parameters specify the module, and the type of the custom attribute to search for.</summary>
      <returns>true if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
      <summary>Determines whether any custom attributes are applied to a module. Parameters specify the module, the type of the custom attribute to search for, and an ignored search option. </summary>
      <returns>true if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">This parameter is ignored, and does not affect the operation of this method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
      <summary>Determines whether any custom attributes are applied to a method parameter. Parameters specify the method parameter, and the type of the custom attribute to search for.</summary>
      <returns>true if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
      <summary>Determines whether any custom attributes are applied to a method parameter. Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</summary>
      <returns>true if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class. </param>
      <param name="attributeType">The type, or a base type, of the custom attribute to search for.</param>
      <param name="inherit">If true, specifies to also search the ancestors of <paramref name="element" /> for custom attributes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="attributeType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />. </exception>
      <exception cref="T:System.ExecutionEngineException">
        <paramref name="element" /> is not a method, constructor, or type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.Match(System.Object)">
      <summary>When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</summary>
      <returns>true if this instance equals <paramref name="obj" />; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance of <see cref="T:System.Attribute" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
      <summary>Maps a set of names to a corresponding set of dispatch identifiers.</summary>
      <param name="riid">Reserved for future use. Must be IID_NULL.</param>
      <param name="rgszNames">Passed-in array of names to be mapped.</param>
      <param name="cNames">Count of the names to be mapped.</param>
      <param name="lcid">The locale context in which to interpret the names.</param>
      <param name="rgDispId">Caller-allocated array that receives the IDs corresponding to the names.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
      <summary>Retrieves the type information for an object, which can be used to get the type information for an interface.</summary>
      <param name="iTInfo">The type information to return.</param>
      <param name="lcid">The locale identifier for the type information.</param>
      <param name="ppTInfo">Receives a pointer to the requested type information object.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
      <summary>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</summary>
      <param name="pcTInfo">Points to a location that receives the number of type information interfaces provided by the object.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Provides access to properties and methods exposed by an object.</summary>
      <param name="dispIdMember">Identifies the member.</param>
      <param name="riid">Reserved for future use. Must be IID_NULL.</param>
      <param name="lcid">The locale context in which to interpret arguments.</param>
      <param name="wFlags">Flags describing the context of the call.</param>
      <param name="pDispParams">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</param>
      <param name="pVarResult">Pointer to the location where the result is to be stored.</param>
      <param name="pExcepInfo">Pointer to a structure that contains exception information.</param>
      <param name="puArgErr">The index of the first argument that has an error.</param>
      <exception cref="T:System.NotImplementedException">Late-bound access using the COM IDispatch interface is not supported.</exception>
    </member>
    <member name="P:System.Attribute.TypeId">
      <summary>When implemented in a derived class, gets a unique identifier for this <see cref="T:System.Attribute" />.</summary>
      <returns>An <see cref="T:System.Object" /> that is a unique identifier for the attribute.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AttributeTargets">
      <summary>Specifies the application elements on which it is valid to apply an attribute.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.AttributeTargets.Assembly">
      <summary>Attribute can be applied to an assembly.</summary>
    </member>
    <member name="F:System.AttributeTargets.Module">
      <summary>Attribute can be applied to a module.</summary>
    </member>
    <member name="F:System.AttributeTargets.Class">
      <summary>Attribute can be applied to a class.</summary>
    </member>
    <member name="F:System.AttributeTargets.Struct">
      <summary>Attribute can be applied to a structure; that is, a value type.</summary>
    </member>
    <member name="F:System.AttributeTargets.Enum">
      <summary>Attribute can be applied to an enumeration.</summary>
    </member>
    <member name="F:System.AttributeTargets.Constructor">
      <summary>Attribute can be applied to a constructor.</summary>
    </member>
    <member name="F:System.AttributeTargets.Method">
      <summary>Attribute can be applied to a method.</summary>
    </member>
    <member name="F:System.AttributeTargets.Property">
      <summary>Attribute can be applied to a property.</summary>
    </member>
    <member name="F:System.AttributeTargets.Field">
      <summary>Attribute can be applied to a field.</summary>
    </member>
    <member name="F:System.AttributeTargets.Event">
      <summary>Attribute can be applied to an event.</summary>
    </member>
    <member name="F:System.AttributeTargets.Interface">
      <summary>Attribute can be applied to an interface.</summary>
    </member>
    <member name="F:System.AttributeTargets.Parameter">
      <summary>Attribute can be applied to a parameter.</summary>
    </member>
    <member name="F:System.AttributeTargets.Delegate">
      <summary>Attribute can be applied to a delegate.</summary>
    </member>
    <member name="F:System.AttributeTargets.ReturnValue">
      <summary>Attribute can be applied to a return value.</summary>
    </member>
    <member name="F:System.AttributeTargets.GenericParameter">
      <summary>Attribute can be applied to a generic parameter.</summary>
    </member>
    <member name="F:System.AttributeTargets.All">
      <summary>Attribute can be applied to any application element.</summary>
    </member>
    <member name="T:System.AttributeUsageAttribute">
      <summary>Specifies the usage of another attribute class. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
      <summary>Initializes a new instance of the <see cref="T:System.AttributeUsageAttribute" /> class with the specified list of <see cref="T:System.AttributeTargets" />, the <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> value, and the <see cref="P:System.AttributeUsageAttribute.Inherited" /> value.</summary>
      <param name="validOn">The set of values combined using a bitwise OR operation to indicate which program elements are valid. </param>
    </member>
    <member name="P:System.AttributeUsageAttribute.AllowMultiple">
      <summary>Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</summary>
      <returns>true if more than one instance is allowed to be specified; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.Inherited">
      <summary>Gets or sets a Boolean value indicating whether the indicated attribute can be inherited by derived classes and overriding members.</summary>
      <returns>true if the attribute can be inherited by derived classes and overriding members; otherwise, false. The default is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.ValidOn">
      <summary>Gets a set of values identifying which program elements that the indicated attribute can be applied to.</summary>
      <returns>One or several <see cref="T:System.AttributeTargets" /> values. The default is All.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.BadImageFormatException">
      <summary>The exception that is thrown when the file image of a dynamic link library (DLL) or an executable program is invalid. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.BadImageFormatException" /> class.</summary>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.BadImageFormatException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.BadImageFormatException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.BadImageFormatException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.BadImageFormatException" /> class with a specified error message and file name.</summary>
      <param name="message">A message that describes the error. </param>
      <param name="fileName">The full name of the file with the invalid image. </param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.BadImageFormatException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="fileName">The full name of the file with the invalid image. </param>
      <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="P:System.BadImageFormatException.FileName">
      <summary>Gets the name of the file that causes this exception.</summary>
      <returns>The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.BadImageFormatException.FusionLog">
      <summary>Gets the log file that describes why an assembly load failed.</summary>
      <returns>A String containing errors reported by the assembly cache.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="M:System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the file name, assembly cache log, and additional exception information.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="P:System.BadImageFormatException.Message">
      <summary>Gets the error message and the name of the file that caused this exception.</summary>
      <returns>A string containing the error message and the name of the file that caused this exception.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.ToString">
      <summary>Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</summary>
      <returns>A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Base64FormattingOptions">
      <summary>Specifies whether relevant <see cref="Overload:System.Convert.ToBase64CharArray" /> and <see cref="Overload:System.Convert.ToBase64String" /> methods insert line breaks in their output. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Base64FormattingOptions.None">
      <summary>Does not insert line breaks after every 76 characters in the string representation.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.InsertLineBreaks">
      <summary>Inserts line breaks after every 76 characters in the string representation.</summary>
    </member>
    <member name="T:System.BitConverter">
      <summary>Converts base data types to an array of bytes, and an array of bytes to base data types.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
      <summary>Converts the specified double-precision floating point number to a 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer whose value is equivalent to <paramref name="value" />.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Boolean)">
      <summary>Returns the specified Boolean value as an array of bytes.</summary>
      <returns>An array of bytes with length 1.</returns>
      <param name="value">A Boolean value. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Char)">
      <summary>Returns the specified Unicode character value as an array of bytes.</summary>
      <returns>An array of bytes with length 2.</returns>
      <param name="value">A character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Double)">
      <summary>Returns the specified double-precision floating point value as an array of bytes.</summary>
      <returns>An array of bytes with length 8.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int16)">
      <summary>Returns the specified 16-bit signed integer value as an array of bytes.</summary>
      <returns>An array of bytes with length 2.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int32)">
      <summary>Returns the specified 32-bit signed integer value as an array of bytes.</summary>
      <returns>An array of bytes with length 4.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int64)">
      <summary>Returns the specified 64-bit signed integer value as an array of bytes.</summary>
      <returns>An array of bytes with length 8.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Single)">
      <summary>Returns the specified single-precision floating point value as an array of bytes.</summary>
      <returns>An array of bytes with length 4.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt16)">
      <summary>Returns the specified 16-bit unsigned integer value as an array of bytes.</summary>
      <returns>An array of bytes with length 2.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt32)">
      <summary>Returns the specified 32-bit unsigned integer value as an array of bytes.</summary>
      <returns>An array of bytes with length 4.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt64)">
      <summary>Returns the specified 64-bit unsigned integer value as an array of bytes.</summary>
      <returns>An array of bytes with length 8.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
      <summary>Converts the specified 64-bit signed integer to a double-precision floating point number.</summary>
      <returns>A double-precision floating point number whose value is equivalent to <paramref name="value" />.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.BitConverter.IsLittleEndian">
      <summary>Indicates the byte order ("endianess") in which data is stored in this computer architecture.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
      <summary>Returns a Boolean value converted from one byte at a specified position in a byte array.</summary>
      <returns>true if the byte at <paramref name="startIndex" /> in <paramref name="value" /> is nonzero; otherwise, false.</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
      <summary>Returns a Unicode character converted from two bytes at a specified position in a byte array.</summary>
      <returns>A character formed by two bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">An array. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
      <summary>Returns a double-precision floating point number converted from eight bytes at a specified position in a byte array.</summary>
      <returns>A double precision floating point number formed by eight bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
      <summary>Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.</summary>
      <returns>A 16-bit signed integer formed by two bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
      <summary>Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.</summary>
      <returns>A 32-bit signed integer formed by four bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
      <summary>Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.</summary>
      <returns>A 64-bit signed integer formed by eight bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
      <summary>Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.</summary>
      <returns>A single-precision floating point number formed by four bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[])">
      <summary>Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</summary>
      <returns>A <see cref="T:System.String" /> of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in <paramref name="value" />; for example, "7F-2C-4A".</returns>
      <param name="value">An array of bytes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
      <summary>Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</summary>
      <returns>A <see cref="T:System.String" /> of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A".</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
      <summary>Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</summary>
      <returns>A <see cref="T:System.String" /> of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A".</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <param name="length">The number of array elements in <paramref name="value" /> to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or-<paramref name="startIndex" /> is greater than zero and is greater than or equal to the length of <paramref name="value" />.</exception>
      <exception cref="T:System.ArgumentException">The combination of <paramref name="startIndex" /> and <paramref name="length" /> does not specify a position within <paramref name="value" />; that is, the <paramref name="startIndex" /> parameter is greater than the length of <paramref name="value" /> minus the <paramref name="length" /> parameter.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
      <summary>Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.</summary>
      <returns>A 16-bit unsigned integer formed by two bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">The array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
      <summary>Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.</summary>
      <returns>A 32-bit unsigned integer formed by four bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
      <summary>Returns a 64-bit unsigned integer converted from eight bytes at a specified position in a byte array.</summary>
      <returns>A 64-bit unsigned integer formed by the eight bytes beginning at <paramref name="startIndex" />.</returns>
      <param name="value">An array of bytes. </param>
      <param name="startIndex">The starting position within <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Boolean">
      <summary>Represents a Boolean value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.CompareTo(System.Boolean)">
      <summary>Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</summary>
      <returns>A signed integer that indicates the relative values of this instance and <paramref name="value" />.Return Value Condition Less than zero This instance is false and <paramref name="value" /> is true. Zero This instance and <paramref name="value" /> are equal (either both are true or both are false). Greater than zero This instance is true and <paramref name="value" /> is false. </returns>
      <param name="value">A <see cref="T:System.Boolean" /> object to compare to this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</summary>
      <returns>A signed integer that indicates the relative order of this instance and <paramref name="obj" />.Return Value Condition Less than zero This instance is false and <paramref name="obj" /> is true. Zero This instance and <paramref name="obj" /> are equal (either both are true or both are false). Greater than zero This instance is true and <paramref name="obj" /> is false.-or- <paramref name="obj" /> is null. </returns>
      <param name="obj">An object to compare to this instance, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is not a <see cref="T:System.Boolean" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Boolean)">
      <summary>Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</summary>
      <returns>true if <paramref name="obj" /> has the same value as this instance; otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Boolean" /> value to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.FalseString">
      <summary>Represents the Boolean value false as a string. This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A hash code for the current <see cref="T:System.Boolean" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Boolean" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.Boolean" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Parse(System.String)">
      <summary>Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</summary>
      <returns>true if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; otherwise, false.</returns>
      <param name="value">A string containing the value to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true or false.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>true, coerced to byte, if the value of this instance is nonzero; otherwise, false, coerced to byte.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value. This conversion is not supported.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value. This conversion is not supported.</exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />..</summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />..</summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />..</summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>An object of the specified type, with a value that is equivalent to the value of this Boolean object.</returns>
      <param name="type">The desired type. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>1 if this instance is nonzero (that is, true); otherwise, 0.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Boolean.ToString">
      <summary>Converts the value of this instance to its equivalent string representation (either "True" or "False").</summary>
      <returns>
        <see cref="F:System.Boolean.TrueString" /> if the value of this instance is true, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.ToString(System.IFormatProvider)">
      <summary>Converts the value of this instance to its equivalent string representation (either "True" or "False").</summary>
      <returns>
        <see cref="F:System.Boolean.TrueString" /> if the value of this instance is true, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is false.</returns>
      <param name="provider">(Reserved) An <see cref="T:System.IFormatProvider" /> object. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.TrueString">
      <summary>Represents the Boolean value true as a string. This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.TryParse(System.String,System.Boolean@)">
      <summary>Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="value" /> was converted successfully; otherwise, false.</returns>
      <param name="value">A string containing the value to convert. </param>
      <param name="result">When this method returns, if the conversion succeeded, contains true if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" /> or false if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />. If the conversion failed, contains false. The conversion fails if <paramref name="value" /> is null or is not equivalent to either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />. This parameter is passed uninitialized. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Buffer">
      <summary>Manipulates arrays of primitive types.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copies a specified number of bytes from a source array starting at a particular offset to a destination array starting at a particular offset.</summary>
      <param name="src">The source buffer. </param>
      <param name="srcOffset">The zero-based byte offset into <paramref name="src" />. </param>
      <param name="dst">The destination buffer. </param>
      <param name="dstOffset">The zero-based byte offset into <paramref name="dst" />. </param>
      <param name="count">The number of bytes to copy. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="src" /> or <paramref name="dst" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="src" /> or <paramref name="dst" /> is not an array of primitives.-or- The length of <paramref name="src" /> is less than <paramref name="srcOffset" /> plus <paramref name="count" />.-or- The length of <paramref name="dst" /> is less than <paramref name="dstOffset" /> plus <paramref name="count" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="srcOffset" />, <paramref name="dstOffset" />, or <paramref name="count" /> is less than 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.ByteLength(System.Array)">
      <summary>Returns the number of bytes in the specified array.</summary>
      <returns>The number of bytes in the array.</returns>
      <param name="array">An array. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is not a primitive. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.GetByte(System.Array,System.Int32)">
      <summary>Retrieves the byte at a specified location in a specified array.</summary>
      <returns>Returns the <paramref name="index" /> byte in the array.</returns>
      <param name="array">An array. </param>
      <param name="index">A location in the array. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is not a primitive. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is negative or greater than the length of <paramref name="array" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)">
      <summary>Assigns a specified value to a byte at a particular location in a specified array.</summary>
      <param name="array">An array. </param>
      <param name="index">A location in the array. </param>
      <param name="value">A value to assign. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is not a primitive. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is negative or greater than the length of <paramref name="array" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Byte">
      <summary>Represents an 8-bit unsigned integer.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.CompareTo(System.Byte)">
      <summary>Compares this instance to a specified 8-bit unsigned integer and returns an indication of their relative values.</summary>
      <returns>A signed integer that indicates the relative order of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">An 8-bit unsigned integer to compare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an indication of their relative values.</summary>
      <returns>A signed integer that indicates the relative order of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />.-or- <paramref name="value" /> is null. </returns>
      <param name="value">An object to compare, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Byte" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Byte)">
      <summary>Returns a value indicating whether this instance and a specified <see cref="T:System.Byte" /> object represent the same value.</summary>
      <returns>true if <paramref name="obj" /> is equal to this instance; otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Byte" /> object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is an instance of <see cref="T:System.Byte" /> and equals the value of this instance; otherwise, false.</returns>
      <param name="obj">An object to compare with this instance, or null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A hash code for the current <see cref="T:System.Byte" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Byte" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.Byte" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Byte.MaxValue">
      <summary>Represents the largest possible value of a <see cref="T:System.Byte" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Byte.MinValue">
      <summary>Represents the smallest possible value of a <see cref="T:System.Byte" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String)">
      <summary>Converts the string representation of a number to its <see cref="T:System.Byte" /> equivalent.</summary>
      <returns>The <see cref="T:System.Byte" /> value equivalent to the number contained in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converts the string representation of a number in a specified style to its <see cref="T:System.Byte" /> equivalent.</summary>
      <returns>The <see cref="T:System.Byte" /> value equivalent to the number contained in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. The string is interpreted using the style specified by <paramref name="style" />. </param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</summary>
      <returns>The <see cref="T:System.Byte" /> value equivalent to the number contained in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. The string is interpreted using the style specified by <paramref name="style" />. </param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <paramref name="s" />. If <paramref name="provider" /> is null, the thread current culture is used. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Byte" /> equivalent.</summary>
      <returns>The <see cref="T:System.Byte" /> value equivalent to the number contained in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <paramref name="s" />. If <paramref name="provider" /> is null, the thread current culture is used. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true if the value of the current instance is not zero; otherwise, false.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, unchanged.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Char" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Decimal" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Double" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.SByte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Single" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to <paramref name="type" />.</returns>
      <param name="type">The type to which to convert this <see cref="T:System.Byte" /> value. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Byte.ToString">
      <summary>Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation.</summary>
      <returns>The string representation of the value of this object, which consists of a sequence of digits that range from 0 to 9 with no leading zeroes.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.IFormatProvider)">
      <summary>Converts the numeric value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified culture-specific formatting information.</summary>
      <returns>The string representation of the value of this object in the format specified by the <paramref name="provider" /> parameter.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String)">
      <summary>Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified format.</summary>
      <returns>The string representation of the current <see cref="T:System.Byte" /> object, formatted as specified by the <paramref name="format" /> parameter.</returns>
      <param name="format">A numeric format string.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier. Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified format and culture-specific formatting information.</summary>
      <returns>The string representation of the current <see cref="T:System.Byte" /> object, formatted as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> includes an unsupported specifier. Supported format specifiers are listed in the Remarks section.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Byte@)">
      <summary>Tries to convert the string representation of a number to its <see cref="T:System.Byte" /> equivalent, and returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false. </returns>
      <param name="s">A string that contains a number to convert. The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</param>
      <param name="result">When this method returns, contains the <see cref="T:System.Byte" /> value equivalent to the number contained in <paramref name="s" /> if the conversion succeeded, or zero if the conversion failed. This parameter is passed uninitialized.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. The string is interpreted using the style specified by <paramref name="style" />. </param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific formatting information about <paramref name="s" />. If <paramref name="provider" /> is null, the thread current culture is used. </param>
      <param name="result">When this method returns, contains the 8-bit unsigned integer value equivalent to the number contained in <paramref name="s" /> if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not of the correct format, or represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.CannotUnloadAppDomainException">
      <summary>The exception that is thrown when an attempt to unload an application domain fails.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CannotUnloadAppDomainException" /> class.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.CannotUnloadAppDomainException" /> class from serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CannotUnloadAppDomainException" /> class with a specified error message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error. </param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.CannotUnloadAppDomainException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Char">
      <summary>Represents a Unicode character.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.CompareTo(System.Char)">
      <summary>Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</summary>
      <returns>A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.Return Value Description Less than zero This instance precedes <paramref name="value" />. Zero This instance has the same position in the sort order as <paramref name="value" />. Greater than zero This instance follows <paramref name="value" />. </returns>
      <param name="value">A <see cref="T:System.Char" /> object to compare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</summary>
      <returns>A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.Return Value Description Less than zero This instance precedes <paramref name="value" />. Zero This instance has the same position in the sort order as <paramref name="value" />. Greater than zero This instance follows <paramref name="value" />.-or- <paramref name="value" /> is null. </returns>
      <param name="value">An object to compare this instance to, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Char" /> object. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.ConvertFromUtf32(System.Int32)">
      <summary>Converts the specified Unicode code point into a UTF-16 encoded string.</summary>
      <returns>A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</returns>
      <param name="utf32">A 21-bit Unicode code point. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
      <summary>Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</summary>
      <returns>The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</returns>
      <param name="highSurrogate">A high surrogate code point (that is, a code point ranging from U+D800 through U+DBFF). </param>
      <param name="lowSurrogate">A low surrogate code point (that is, a code point ranging from U+DC00 through U+DFFF). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
      <summary>Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</summary>
      <returns>The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</returns>
      <param name="s">A string that contains a character or surrogate pair. </param>
      <param name="index">The index position of the character or surrogate pair in <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a position within <paramref name="s" />. </exception>
      <exception cref="T:System.ArgumentException">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Char)">
      <summary>Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</summary>
      <returns>true if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, false.</returns>
      <param name="obj">An object to compare with this instance or null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.Char)">
      <summary>Converts the specified numeric Unicode character to a double-precision floating point number.</summary>
      <returns>The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</returns>
      <param name="c">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.String,System.Int32)">
      <summary>Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</summary>
      <returns>The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</returns>
      <param name="s">A <see cref="T:System.String" />. </param>
      <param name="index">The character position in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.Char" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetUnicodeCategory(System.Char)">
      <summary>Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</summary>
      <returns>A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</returns>
      <param name="c">The Unicode character to categorize. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
      <summary>Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</summary>
      <returns>A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</returns>
      <param name="s">A <see cref="T:System.String" />. </param>
      <param name="index">The character position in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a control character.</summary>
      <returns>true if <paramref name="c" /> is a control character; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a control character.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a decimal digit.</summary>
      <returns>true if <paramref name="c" /> is a decimal digit; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.Char)">
      <summary>Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</summary>
      <returns>true if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
      <summary>Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</summary>
      <returns>true if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a position within <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a Unicode letter. </summary>
      <returns>true if <paramref name="c" /> is a letter; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</summary>
      <returns>true if <paramref name="c" /> is a letter or a decimal digit; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a lowercase letter.</summary>
      <returns>true if <paramref name="c" /> is a lowercase letter; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.Char)">
      <summary>Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</summary>
      <returns>true if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, false.</returns>
      <param name="c">The character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
      <summary>Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</summary>
      <returns>true if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a position within <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a number.</summary>
      <returns>true if <paramref name="c" /> is a number; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a number.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a punctuation mark.</summary>
      <returns>true if <paramref name="c" /> is a punctuation mark; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a separator character.</summary>
      <returns>true if <paramref name="c" /> is a separator character; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a separator character.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.Char)">
      <summary>Indicates whether the specified character has a surrogate code point.</summary>
      <returns>true if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string has a surrogate code point.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
      <summary>Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</summary>
      <returns>true if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, false.</returns>
      <param name="highSurrogate">The character to evaluate as the high surrogate of a surrogate pair. </param>
      <param name="lowSurrogate">The character to evaluate as the low surrogate of a surrogate pair. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
      <summary>Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</summary>
      <returns>true if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The starting position of the pair of characters to evaluate within <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a position within <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as a symbol character.</summary>
      <returns>true if <paramref name="c" /> is a symbol character; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as an uppercase letter.</summary>
      <returns>true if <paramref name="c" /> is an uppercase letter; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.Char)">
      <summary>Indicates whether the specified Unicode character is categorized as white space.</summary>
      <returns>true if <paramref name="c" /> is white space; otherwise, false.</returns>
      <param name="c">The Unicode character to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
      <summary>Indicates whether the character at the specified position in a specified string is categorized as white space.</summary>
      <returns>true if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, false.</returns>
      <param name="s">A string. </param>
      <param name="index">The position of the character to evaluate in <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MaxValue">
      <summary>Represents the largest possible value of a <see cref="T:System.Char" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MinValue">
      <summary>Represents the smallest possible value of a <see cref="T:System.Char" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Parse(System.String)">
      <summary>Converts the value of the specified string to its equivalent Unicode character.</summary>
      <returns>A Unicode character equivalent to the sole character in <paramref name="s" />.</returns>
      <param name="s">A string that contains a single character, or null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">The length of <paramref name="s" /> is not 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Note   This conversion is not supported. Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>The converted value of the current <see cref="T:System.Char" /> object.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</summary>
      <returns>The value of the current <see cref="T:System.Char" /> object unchanged.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Note   This conversion is not supported. Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Note   This conversion is not supported. Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Note   This conversion is not supported. Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary> For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>The converted value of the current <see cref="T:System.Char" /> object.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>The converted value of the current <see cref="T:System.Char" /> object.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary> For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>The converted value of the current <see cref="T:System.Char" /> object.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary> For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>The converted value of the current <see cref="T:System.Char" /> object.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Note   This conversion is not supported. Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported.</exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>An object of the specified type.</returns>
      <param name="type">A <see cref="T:System.Type" /> object. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter. </exception>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>The converted value of the current <see cref="T:System.Char" /> object.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object. (Specify null because the <paramref name="provider" /> parameter is ignored.)</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</summary>
      <returns>The converted value of the current <see cref="T:System.Char" /> object.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object. (Specify null because the <paramref name="provider" /> parameter is ignored.)</param>
    </member>
    <member name="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</summary>
      <returns>The converted value of the current <see cref="T:System.Char" /> object.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object. (Specify null because the <paramref name="provider" /> parameter is ignored.)</param>
    </member>
    <member name="M:System.Char.ToLower(System.Char)">
      <summary>Converts the value of a Unicode character to its lowercase equivalent.</summary>
      <returns>The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</returns>
      <param name="c">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
      <summary>Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</summary>
      <returns>The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</returns>
      <param name="c">The Unicode character to convert. </param>
      <param name="culture">An object that supplies culture-specific casing rules, or null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToLowerInvariant(System.Char)">
      <summary>Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</summary>
      <returns>The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</returns>
      <param name="c">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString">
      <summary>Converts the value of this instance to its equivalent string representation.</summary>
      <returns>The string representation of the value of this instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString(System.Char)">
      <summary>Converts the specified Unicode character to its equivalent string representation.</summary>
      <returns>The string representation of the value of <paramref name="c" />.</returns>
      <param name="c">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString(System.IFormatProvider)">
      <summary>Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="provider" />.</returns>
      <param name="provider">(Reserved) An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpper(System.Char)">
      <summary>Converts the value of a Unicode character to its uppercase equivalent.</summary>
      <returns>The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</returns>
      <param name="c">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
      <summary>Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</summary>
      <returns>The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</returns>
      <param name="c">The Unicode character to convert. </param>
      <param name="culture">An object that supplies culture-specific casing rules, or null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpperInvariant(System.Char)">
      <summary>Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</summary>
      <returns>The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</returns>
      <param name="c">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.TryParse(System.String,System.Char@)">
      <summary>Converts the value of the specified string to its equivalent Unicode character. A return code indicates whether the conversion succeeded or failed.</summary>
      <returns>true if the <paramref name="s" /> parameter was converted successfully; otherwise, false.</returns>
      <param name="s">A string that contains a single character, or null. </param>
      <param name="result">When this method returns, contains a Unicode character equivalent to the sole character in <paramref name="s" />, if the conversion succeeded, or an undefined value if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null or the length of <paramref name="s" /> is not 1. This parameter is passed uninitialized. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.CharEnumerator">
      <summary>Supports iterating over a <see cref="T:System.String" /> object and reading its individual characters. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.CharEnumerator.Clone">
      <summary>Creates a copy of the current <see cref="T:System.CharEnumerator" /> object.</summary>
      <returns>An <see cref="T:System.Object" /> that is a copy of the current <see cref="T:System.CharEnumerator" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.CharEnumerator.Current">
      <summary>Gets the currently referenced character in the string enumerated by this <see cref="T:System.CharEnumerator" /> object.</summary>
      <returns>The Unicode character currently referenced by this <see cref="T:System.CharEnumerator" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The index is invalid; that is, it is before the first or after the last character of the enumerated string. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.CharEnumerator.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.CharEnumerator" /> class.</summary>
    </member>
    <member name="M:System.CharEnumerator.MoveNext">
      <summary>Increments the internal index of the current <see cref="T:System.CharEnumerator" /> object to the next character of the enumerated string.</summary>
      <returns>true if the index is successfully incremented and within the enumerated string; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.CharEnumerator.Reset">
      <summary>Initializes the index to a position logically before the first character of the enumerated string.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the currently referenced character in the string enumerated by this <see cref="T:System.CharEnumerator" /> object. For a description of this member, see <see cref="P:System.Collections.IEnumerator.Current" />. </summary>
      <returns>The boxed Unicode character currently referenced by this <see cref="T:System.CharEnumerator" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">Enumeration has not started.-or-Enumeration has ended.</exception>
    </member>
    <member name="T:System.CLSCompliantAttribute">
      <summary>Indicates whether a program element is compliant with the Common Language Specification (CLS). This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.CLSCompliantAttribute.#ctor(System.Boolean)">
      <summary>Initializes an instance of the <see cref="T:System.CLSCompliantAttribute" /> class with a Boolean value indicating whether the indicated program element is CLS-compliant.</summary>
      <param name="isCompliant">true if CLS-compliant; otherwise, false. </param>
    </member>
    <member name="P:System.CLSCompliantAttribute.IsCompliant">
      <summary>Gets the Boolean value indicating whether the indicated program element is CLS-compliant.</summary>
      <returns>true if the program element is CLS-compliant; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Comparison`1">
      <summary>Represents the method that compares two objects of the same type.</summary>
      <returns>A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.Value Meaning Less than 0 <paramref name="x" /> is less than <paramref name="y" />.0 <paramref name="x" /> equals <paramref name="y" />.Greater than 0 <paramref name="x" /> is greater than <paramref name="y" />.</returns>
      <param name="x">The first object to compare.</param>
      <param name="y">The second object to compare.</param>
      <typeparam name="T">The type of the objects to compare.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Console">
      <summary>Represents the standard input, output, and error streams for console applications. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.BackgroundColor">
      <summary>Gets or sets the background color of the console.</summary>
      <returns>A <see cref="T:System.ConsoleColor" /> that specifies the background color of the console; that is, the color that appears behind each character. The default is black.</returns>
      <exception cref="T:System.ArgumentException">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.Beep">
      <summary>Plays the sound of a beep through the console speaker.</summary>
      <exception cref="T:System.Security.HostProtectionException">This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Beep(System.Int32,System.Int32)">
      <summary>Plays the sound of a beep of a specified frequency and duration through the console speaker.</summary>
      <param name="frequency">The frequency of the beep, ranging from 37 to 32767 hertz.</param>
      <param name="duration">The duration of the beep measured in milliseconds.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="frequency" /> is less than 37 or more than 32767 hertz.-or-<paramref name="duration" /> is less than or equal to zero.</exception>
      <exception cref="T:System.Security.HostProtectionException">This method was executed on a server, such as SQL Server, that does not permit access to the console.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.BufferHeight">
      <summary>Gets or sets the height of the buffer area.</summary>
      <returns>The current height, in rows, of the buffer area.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than or equal to zero.-or- The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.-or- The value in a set operation is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.BufferWidth">
      <summary>Gets or sets the width of the buffer area.</summary>
      <returns>The current width, in columns, of the buffer area.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than or equal to zero.-or- The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.-or- The value in a set operation is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Console.CancelKeyPress">
      <summary>Occurs when the <see cref="F:System.ConsoleModifiers.Control" /> modifier key (CTRL) and <see cref="F:System.ConsoleKey.C" /> console key (C) are pressed simultaneously (CTRL+C).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.CapsLock">
      <summary>Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</summary>
      <returns>true if CAPS LOCK is turned on; false if CAPS LOCK is turned off.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Clear">
      <summary>Clears the console buffer and corresponding console window of display information.</summary>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.CursorLeft">
      <summary>Gets or sets the column position of the cursor within the buffer area.</summary>
      <returns>The current position, in columns, of the cursor.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than zero.-or- The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferWidth" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.CursorSize">
      <summary>Gets or sets the height of the cursor within a character cell.</summary>
      <returns>The size of the cursor expressed as a percentage of the height of a character cell. The property value ranges from 1 to 100.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified in a set operation is less than 1 or greater than 100. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="P:System.Console.CursorTop">
      <summary>Gets or sets the row position of the cursor within the buffer area.</summary>
      <returns>The current position, in rows, of the cursor.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than zero.-or- The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferHeight" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.CursorVisible">
      <summary>Gets or sets a value indicating whether the cursor is visible.</summary>
      <returns>true if the cursor is visible; otherwise, false.</returns>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="P:System.Console.Error">
      <summary>Gets the standard error output stream.</summary>
      <returns>A <see cref="T:System.IO.TextWriter" /> that represents the standard error output stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.ForegroundColor">
      <summary>Gets or sets the foreground color of the console.</summary>
      <returns>A <see cref="T:System.ConsoleColor" /> that specifies the foreground color of the console; that is, the color of each character that is displayed. The default is gray.</returns>
      <exception cref="T:System.ArgumentException">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="P:System.Console.In">
      <summary>Gets the standard input stream.</summary>
      <returns>A <see cref="T:System.IO.TextReader" /> that represents the standard input stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.InputEncoding">
      <summary>Gets or sets the encoding the console uses to read input. </summary>
      <returns>The encoding used to read console input.</returns>
      <exception cref="T:System.ArgumentNullException">The property value in a set operation is null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This property's set operation is not supported on Windows 98, Windows 98 Second Edition, or Windows Millennium Edition.</exception>
      <exception cref="T:System.IO.IOException">An error occurred during the execution of this operation.</exception>
      <exception cref="T:System.Security.SecurityException">Your application does not have permission to perform this operation.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.KeyAvailable">
      <summary>Gets a value indicating whether a key press is available in the input stream.</summary>
      <returns>true if a key press is available; otherwise, false.</returns>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.InvalidOperationException">Standard input is redirected to a file instead of the keyboard. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.LargestWindowHeight">
      <summary>Gets the largest possible number of console window rows, based on the current font and screen resolution.</summary>
      <returns>The height of the largest possible console window measured in rows.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.LargestWindowWidth">
      <summary>Gets the largest possible number of console window columns, based on the current font and screen resolution.</summary>
      <returns>The width of the largest possible console window measured in columns.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Copies a specified source area of the screen buffer to a specified destination area.</summary>
      <param name="sourceLeft">The leftmost column of the source area. </param>
      <param name="sourceTop">The topmost row of the source area. </param>
      <param name="sourceWidth">The number of columns in the source area. </param>
      <param name="sourceHeight">The number of rows in the source area. </param>
      <param name="targetLeft">The leftmost column of the destination area. </param>
      <param name="targetTop">The topmost row of the destination area. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the parameters is less than zero.-or- <paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.-or- <paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.-or- <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.-or- <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
      <summary>Copies a specified source area of the screen buffer to a specified destination area.</summary>
      <param name="sourceLeft">The leftmost column of the source area. </param>
      <param name="sourceTop">The topmost row of the source area. </param>
      <param name="sourceWidth">The number of columns in the source area. </param>
      <param name="sourceHeight">The number of rows in the source area. </param>
      <param name="targetLeft">The leftmost column of the destination area. </param>
      <param name="targetTop">The topmost row of the destination area. </param>
      <param name="sourceChar">The character used to fill the source area. </param>
      <param name="sourceForeColor">The foreground color used to fill the source area. </param>
      <param name="sourceBackColor">The background color used to fill the source area. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the parameters is less than zero.-or- <paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.-or- <paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.-or- <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.-or- <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />. </exception>
      <exception cref="T:System.ArgumentException">One or both of the color parameters is not a member of the <see cref="T:System.ConsoleColor" /> enumeration. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="P:System.Console.NumberLock">
      <summary>Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</summary>
      <returns>true if NUM LOCK is turned on; false if NUM LOCK is turned off.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.OpenStandardError">
      <summary>Acquires the standard error stream.</summary>
      <returns>The standard error stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.OpenStandardError(System.Int32)">
      <summary>Acquires the standard error stream, which is set to a specified buffer size.</summary>
      <returns>The standard error stream.</returns>
      <param name="bufferSize">The internal stream buffer size. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> is less than or equal to zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.OpenStandardInput">
      <summary>Acquires the standard input stream.</summary>
      <returns>The standard input stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.OpenStandardInput(System.Int32)">
      <summary>Acquires the standard input stream, which is set to a specified buffer size.</summary>
      <returns>The standard input stream.</returns>
      <param name="bufferSize">The internal stream buffer size. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> is less than or equal to zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.OpenStandardOutput">
      <summary>Acquires the standard output stream.</summary>
      <returns>The standard output stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.OpenStandardOutput(System.Int32)">
      <summary>Acquires the standard output stream, which is set to a specified buffer size.</summary>
      <returns>The standard output stream.</returns>
      <param name="bufferSize">The internal stream buffer size. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> is less than or equal to zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.Out">
      <summary>Gets the standard output stream.</summary>
      <returns>A <see cref="T:System.IO.TextWriter" /> that represents the standard output stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.OutputEncoding">
      <summary>Gets or sets the encoding the console uses to write output. </summary>
      <returns>The encoding used to write console output.</returns>
      <exception cref="T:System.ArgumentNullException">The property value in a set operation is null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This property's set operation is not supported on Windows 98, Windows 98 Second Edition, or Windows Millennium Edition.</exception>
      <exception cref="T:System.IO.IOException">An error occurred during the execution of this operation.</exception>
      <exception cref="T:System.Security.SecurityException">Your application does not have permission to perform this operation.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Read">
      <summary>Reads the next character from the standard input stream.</summary>
      <returns>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</returns>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.ReadKey">
      <summary>Obtains the next character or function key pressed by the user. The pressed key is displayed in the console window.</summary>
      <returns>A <see cref="T:System.ConsoleKeyInfo" /> object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key. The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more SHIFT, ALT, or CTRL modifier keys was pressed simultaneously with the console key.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.ReadKey(System.Boolean)">
      <summary>Obtains the next character or function key pressed by the user. The pressed key is optionally displayed in the console window.</summary>
      <returns>A <see cref="T:System.ConsoleKeyInfo" /> object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key. The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more SHIFT, ALT, or CTRL modifier keys was pressed simultaneously with the console key.</returns>
      <param name="intercept">Determines whether to display the pressed key in the console window. true to not display the pressed key; otherwise, false. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.ReadLine">
      <summary>Reads the next line of characters from the standard input stream.</summary>
      <returns>The next line of characters from the input stream, or null if no more lines are available.</returns>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.OutOfMemoryException">There is insufficient memory to allocate a buffer for the returned string. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of characters in the next line of characters is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.ResetColor">
      <summary>Sets the foreground and background console colors to their defaults.</summary>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
      <summary>Sets the height and width of the screen buffer area to the specified values.</summary>
      <param name="width">The width of the buffer area measured in columns. </param>
      <param name="height">The height of the buffer area measured in rows. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="height" /> or <paramref name="width" /> is less than or equal to zero.-or- <paramref name="height" /> or <paramref name="width" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.-or- <paramref name="width" /> is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.-or- <paramref name="height" /> is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
      <summary>Sets the position of the cursor.</summary>
      <param name="left">The column position of the cursor. </param>
      <param name="top">The row position of the cursor. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="left" /> or <paramref name="top" /> is less than zero.-or- <paramref name="left" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.-or- <paramref name="top" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.SetError(System.IO.TextWriter)">
      <summary>Sets the <see cref="P:System.Console.Error" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="newError">A <see cref="T:System.IO.TextWriter" /> stream that is the new standard error output. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newError" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.SetIn(System.IO.TextReader)">
      <summary>Sets the <see cref="P:System.Console.In" /> property to the specified <see cref="T:System.IO.TextReader" /> object.</summary>
      <param name="newIn">A <see cref="T:System.IO.TextReader" /> stream that is the new standard input. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newIn" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.SetOut(System.IO.TextWriter)">
      <summary>Sets the <see cref="P:System.Console.Out" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="newOut">A <see cref="T:System.IO.TextWriter" /> stream that is the new standard output. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newOut" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
      <summary>Sets the position of the console window relative to the screen buffer.</summary>
      <param name="left">The column position of the upper left  corner of the console window. </param>
      <param name="top">The row position of the upper left corner of the console window. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="left" /> or <paramref name="top" /> is less than zero.-or- <paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> is greater than <see cref="P:System.Console.BufferWidth" />.-or- <paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> is greater than <see cref="P:System.Console.BufferHeight" />. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
      <summary>Sets the height and width of the console window to the specified values.</summary>
      <param name="width">The width of the console window measured in columns. </param>
      <param name="height">The height of the console window measured in rows. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="width" /> or <paramref name="height" /> is less than or equal to zero.-or- <paramref name="width" /> plus <see cref="P:System.Console.WindowLeft" /> or <paramref name="height" /> plus <see cref="P:System.Console.WindowTop" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="width" /> or <paramref name="height" /> is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="P:System.Console.Title">
      <summary>Gets or sets the title to display in the console title bar.</summary>
      <returns>The string to be displayed in the title bar of the console. The maximum length of the title string is 24500 characters.</returns>
      <exception cref="T:System.InvalidOperationException">In a get operation, the retrieved title is longer than 24500 characters. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the specified title is longer than 24500 characters. </exception>
      <exception cref="T:System.ArgumentNullException">In a set operation, the specified title is null. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="P:System.Console.TreatControlCAsInput">
      <summary>Gets or sets a value indicating whether the combination of the <see cref="F:System.ConsoleModifiers.Control" /> modifier key and <see cref="F:System.ConsoleKey.C" /> console key (CTRL+C) is treated as ordinary input or as an interruption that is handled by the operating system.</summary>
      <returns>true if CTRL+C is treated as ordinary input; otherwise, false.</returns>
      <exception cref="T:System.IO.IOException">Unable to get or set the input mode of the console input buffer. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="P:System.Console.WindowHeight">
      <summary>Gets or sets the height of the console window area.</summary>
      <returns>The height of the console window measured in rows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.-or-The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.-or-The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
      <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.WindowLeft">
      <summary>Gets or sets the leftmost position of the console window area relative to the screen buffer.</summary>
      <returns>The leftmost console window position measured in columns.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the value to be assigned is less than zero.-or-As a result of the assignment, <see cref="P:System.Console.WindowLeft" /> plus <see cref="P:System.Console.WindowWidth" /> would exceed <see cref="P:System.Console.BufferWidth" />. </exception>
      <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.WindowTop">
      <summary>Gets or sets the top position of the console window area relative to the screen buffer.</summary>
      <returns>The uppermost console window position measured in rows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the value to be assigned is less than zero.-or-As a result of the assignment, <see cref="P:System.Console.WindowTop" /> plus <see cref="P:System.Console.WindowHeight" /> would exceed <see cref="P:System.Console.BufferHeight" />.</exception>
      <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Console.WindowWidth">
      <summary>Gets or sets the width of the console window.</summary>
      <returns>The width of the console window measured in columns.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.-or-The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.-or-The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
      <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Boolean)">
      <summary>Writes the text representation of the specified Boolean value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Char)">
      <summary>Writes the specified Unicode character value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Char[])">
      <summary>Writes the specified array of Unicode characters to the standard output stream.</summary>
      <param name="buffer">A Unicode character array. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Writes the specified subarray of Unicode characters to the standard output stream.</summary>
      <param name="buffer">An array of Unicode characters. </param>
      <param name="index">The starting position in <paramref name="buffer" />. </param>
      <param name="count">The number of characters to write. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> or <paramref name="count" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Decimal)">
      <summary>Writes the text representation of the specified <see cref="T:System.Decimal" /> value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Double)">
      <summary>Writes the text representation of the specified double-precision floating-point value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Int32)">
      <summary>Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Int64)">
      <summary>Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Object)">
      <summary>Writes the text representation of the specified object to the standard output stream.</summary>
      <param name="value">The value to write, or null. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.Single)">
      <summary>Writes the text representation of the specified single-precision floating-point value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.String)">
      <summary>Writes the specified string value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.String,System.Object)">
      <summary>Writes the text representation of the specified object to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg0">An object to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.String,System.Object,System.Object)">
      <summary>Writes the text representation of the specified objects to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg0">The first object to write using <paramref name="format" />. </param>
      <param name="arg1">The second object to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Writes the text representation of the specified objects to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg0">The first object to write using <paramref name="format" />. </param>
      <param name="arg1">The second object to write using <paramref name="format" />. </param>
      <param name="arg2">The third object to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
      <summary>Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg0">The first object to write using <paramref name="format" />. </param>
      <param name="arg1">The second object to write using <paramref name="format" />. </param>
      <param name="arg2">The third object to write using <paramref name="format" />. </param>
      <param name="arg3">The fourth object to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.String,System.Object[])">
      <summary>Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg">An array of objects to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="arg" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.UInt32)">
      <summary>Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.Write(System.UInt64)">
      <summary>Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine">
      <summary>Writes the current line terminator to the standard output stream.</summary>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Boolean)">
      <summary>Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Char)">
      <summary>Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Char[])">
      <summary>Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</summary>
      <param name="buffer">A Unicode character array. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</summary>
      <param name="buffer">An array of Unicode characters. </param>
      <param name="index">The starting position in <paramref name="buffer" />. </param>
      <param name="count">The number of characters to write. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> or <paramref name="count" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Decimal)">
      <summary>Writes the text representation of the specified <see cref="T:System.Decimal" /> value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Double)">
      <summary>Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Int32)">
      <summary>Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Int64)">
      <summary>Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Object)">
      <summary>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.Single)">
      <summary>Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.String)">
      <summary>Writes the specified string value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.String,System.Object)">
      <summary>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg0">An object to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
      <summary>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg0">The first object to write using <paramref name="format" />. </param>
      <param name="arg1">The second object to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg0">The first object to write using <paramref name="format" />. </param>
      <param name="arg1">The second object to write using <paramref name="format" />. </param>
      <param name="arg2">The third object to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
      <summary>Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg0">The first object to write using <paramref name="format" />. </param>
      <param name="arg1">The second object to write using <paramref name="format" />. </param>
      <param name="arg2">The third object to write using <paramref name="format" />. </param>
      <param name="arg3">The fourth object to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.String,System.Object[])">
      <summary>Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</summary>
      <param name="format">A composite format string. </param>
      <param name="arg">An array of objects to write using <paramref name="format" />. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="arg" /> is null. </exception>
      <exception cref="T:System.FormatException">The format specification in <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.UInt32)">
      <summary>Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Console.WriteLine(System.UInt64)">
      <summary>Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</summary>
      <param name="value">The value to write. </param>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ConsoleCancelEventArgs">
      <summary>Provides data for the <see cref="E:System.Console.CancelKeyPress" /> event. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ConsoleCancelEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether simultaneously pressing the <see cref="F:System.ConsoleModifiers.Control" /> modifier key and <see cref="F:System.ConsoleKey.C" /> console key (CTRL+C) terminates the current process.</summary>
      <returns>true if the current process should resume when the event handler concludes; false if the current process should terminate.</returns>
      <exception cref="T:System.InvalidOperationException">true was specified in a set operation and the event was caused by simultaneously pressing the <see cref="F:System.ConsoleModifiers.Control" /> modifier key and the BREAK console key (CTRL+BREAK).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ConsoleCancelEventArgs.SpecialKey">
      <summary>Gets the combination of modifier and console keys that interrupted the current process.</summary>
      <returns>One of the <see cref="T:System.ConsoleSpecialKey" /> values. There is no default value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ConsoleCancelEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Console.CancelKeyPress" /> event of a <see cref="T:System.Console" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.ConsoleCancelEventArgs" /> object that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ConsoleColor">
      <summary>Specifies constants that define foreground and background colors for the console.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.ConsoleColor.Black">
      <summary>The color black.</summary>
    </member>
    <member name="F:System.ConsoleColor.DarkBlue">
      <summary>The color dark blue.</summary>
    </member>
    <member name="F:System.ConsoleColor.DarkGreen">
      <summary>The color dark green.</summary>
    </member>
    <member name="F:System.ConsoleColor.DarkCyan">
      <summary>The color dark cyan (dark blue-green).</summary>
    </member>
    <member name="F:System.ConsoleColor.DarkRed">
      <summary>The color dark red.</summary>
    </member>
    <member name="F:System.ConsoleColor.DarkMagenta">
      <summary>The color dark magenta (dark purplish-red).</summary>
    </member>
    <member name="F:System.ConsoleColor.DarkYellow">
      <summary>The color dark yellow (ochre).</summary>
    </member>
    <member name="F:System.ConsoleColor.Gray">
      <summary>The color gray.</summary>
    </member>
    <member name="F:System.ConsoleColor.DarkGray">
      <summary>The color dark gray.</summary>
    </member>
    <member name="F:System.ConsoleColor.Blue">
      <summary>The color blue.</summary>
    </member>
    <member name="F:System.ConsoleColor.Green">
      <summary>The color green.</summary>
    </member>
    <member name="F:System.ConsoleColor.Cyan">
      <summary>The color cyan (blue-green).</summary>
    </member>
    <member name="F:System.ConsoleColor.Red">
      <summary>The color red.</summary>
    </member>
    <member name="F:System.ConsoleColor.Magenta">
      <summary>The color magenta (purplish-red).</summary>
    </member>
    <member name="F:System.ConsoleColor.Yellow">
      <summary>The color yellow.</summary>
    </member>
    <member name="F:System.ConsoleColor.White">
      <summary>The color white.</summary>
    </member>
    <member name="T:System.ConsoleKey">
      <summary>Specifies the standard keys on a console.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.ConsoleKey.Backspace">
      <summary>The BACKSPACE key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Tab">
      <summary>The TAB key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Clear">
      <summary>The CLEAR key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Enter">
      <summary>The ENTER key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Pause">
      <summary>The PAUSE key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Escape">
      <summary>The ESC (ESCAPE) key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Spacebar">
      <summary>The SPACEBAR key.</summary>
    </member>
    <member name="F:System.ConsoleKey.PageUp">
      <summary>The PAGE UP key.</summary>
    </member>
    <member name="F:System.ConsoleKey.PageDown">
      <summary>The PAGE DOWN key.</summary>
    </member>
    <member name="F:System.ConsoleKey.End">
      <summary>The END key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Home">
      <summary>The HOME key.</summary>
    </member>
    <member name="F:System.ConsoleKey.LeftArrow">
      <summary>The LEFT ARROW key.</summary>
    </member>
    <member name="F:System.ConsoleKey.UpArrow">
      <summary>The UP ARROW key.</summary>
    </member>
    <member name="F:System.ConsoleKey.RightArrow">
      <summary>The RIGHT ARROW key.</summary>
    </member>
    <member name="F:System.ConsoleKey.DownArrow">
      <summary>The DOWN ARROW key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Select">
      <summary>The SELECT key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Print">
      <summary>The PRINT key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Execute">
      <summary>The EXECUTE key.</summary>
    </member>
    <member name="F:System.ConsoleKey.PrintScreen">
      <summary>The PRINT SCREEN key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Insert">
      <summary>The INS (INSERT) key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Delete">
      <summary>The DEL (DELETE) key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Help">
      <summary>The HELP key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D0">
      <summary>The 0 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D1">
      <summary>The 1 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D2">
      <summary>The 2 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D3">
      <summary>The 3 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D4">
      <summary>The 4 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D5">
      <summary>The 5 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D6">
      <summary>The 6 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D7">
      <summary>The 7 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D8">
      <summary>The 8 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D9">
      <summary>The 9 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.A">
      <summary>The A key.</summary>
    </member>
    <member name="F:System.ConsoleKey.B">
      <summary>The B key.</summary>
    </member>
    <member name="F:System.ConsoleKey.C">
      <summary>The C key.</summary>
    </member>
    <member name="F:System.ConsoleKey.D">
      <summary>The D key.</summary>
    </member>
    <member name="F:System.ConsoleKey.E">
      <summary>The E key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F">
      <summary>The F key.</summary>
    </member>
    <member name="F:System.ConsoleKey.G">
      <summary>The G key.</summary>
    </member>
    <member name="F:System.ConsoleKey.H">
      <summary>The H key.</summary>
    </member>
    <member name="F:System.ConsoleKey.I">
      <summary>The I key.</summary>
    </member>
    <member name="F:System.ConsoleKey.J">
      <summary>The J key.</summary>
    </member>
    <member name="F:System.ConsoleKey.K">
      <summary>The K key.</summary>
    </member>
    <member name="F:System.ConsoleKey.L">
      <summary>The L key.</summary>
    </member>
    <member name="F:System.ConsoleKey.M">
      <summary>The M key.</summary>
    </member>
    <member name="F:System.ConsoleKey.N">
      <summary>The N key.</summary>
    </member>
    <member name="F:System.ConsoleKey.O">
      <summary>The O key.</summary>
    </member>
    <member name="F:System.ConsoleKey.P">
      <summary>The P key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Q">
      <summary>The Q key.</summary>
    </member>
    <member name="F:System.ConsoleKey.R">
      <summary>The R key.</summary>
    </member>
    <member name="F:System.ConsoleKey.S">
      <summary>The S key.</summary>
    </member>
    <member name="F:System.ConsoleKey.T">
      <summary>The T key.</summary>
    </member>
    <member name="F:System.ConsoleKey.U">
      <summary>The U key.</summary>
    </member>
    <member name="F:System.ConsoleKey.V">
      <summary>The V key.</summary>
    </member>
    <member name="F:System.ConsoleKey.W">
      <summary>The W key.</summary>
    </member>
    <member name="F:System.ConsoleKey.X">
      <summary>The X key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Y">
      <summary>The Y key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Z">
      <summary>The Z key.</summary>
    </member>
    <member name="F:System.ConsoleKey.LeftWindows">
      <summary>The left Windows logo key (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.ConsoleKey.RightWindows">
      <summary>The right Windows logo key (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.ConsoleKey.Applications">
      <summary>The Application key (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.ConsoleKey.Sleep">
      <summary>The Computer Sleep key.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad0">
      <summary>The 0 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad1">
      <summary>The 1 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad2">
      <summary>The 2 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad3">
      <summary>The 3 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad4">
      <summary>The 4 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad5">
      <summary>The 5 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad6">
      <summary>The 6 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad7">
      <summary>The 7 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad8">
      <summary>The 8 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.NumPad9">
      <summary>The 9 key on the numeric keypad.</summary>
    </member>
    <member name="F:System.ConsoleKey.Multiply">
      <summary>The Multiply key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Add">
      <summary>The Add key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Separator">
      <summary>The Separator key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Subtract">
      <summary>The Subtract key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Decimal">
      <summary>The Decimal key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Divide">
      <summary>The Divide key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F1">
      <summary>The F1 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F2">
      <summary>The F2 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F3">
      <summary>The F3 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F4">
      <summary>The F4 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F5">
      <summary>The F5 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F6">
      <summary>The F6 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F7">
      <summary>The F7 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F8">
      <summary>The F8 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F9">
      <summary>The F9 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F10">
      <summary>The F10 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F11">
      <summary>The F11 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F12">
      <summary>The F12 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F13">
      <summary>The F13 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F14">
      <summary>The F14 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F15">
      <summary>The F15 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F16">
      <summary>The F16 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F17">
      <summary>The F17 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F18">
      <summary>The F18 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F19">
      <summary>The F19 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F20">
      <summary>The F20 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F21">
      <summary>The F21 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F22">
      <summary>The F22 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F23">
      <summary>The F23 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.F24">
      <summary>The F24 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.BrowserBack">
      <summary>The Browser Back key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.BrowserForward">
      <summary>The Browser Forward key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.BrowserRefresh">
      <summary>The Browser Refresh key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.BrowserStop">
      <summary>The Browser Stop key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.BrowserSearch">
      <summary>The Browser Search key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.BrowserFavorites">
      <summary>The Browser Favorites key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.BrowserHome">
      <summary>The Browser Home key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.VolumeMute">
      <summary>The Volume Mute key (Microsoft Natural Keyboard, Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.VolumeDown">
      <summary>The Volume Down key (Microsoft Natural Keyboard, Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.VolumeUp">
      <summary>The Volume Up key (Microsoft Natural Keyboard, Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.MediaNext">
      <summary>The Media Next Track key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.MediaPrevious">
      <summary>The Media Previous Track key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.MediaStop">
      <summary>The Media Stop key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.MediaPlay">
      <summary>The Media Play/Pause key (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.LaunchMail">
      <summary>The Start Mail key (Microsoft Natural Keyboard, Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.LaunchMediaSelect">
      <summary>The Select Media key (Microsoft Natural Keyboard, Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.LaunchApp1">
      <summary>The Start Application 1 key (Microsoft Natural Keyboard, Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.LaunchApp2">
      <summary>The Start Application 2 key (Microsoft Natural Keyboard, Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem1">
      <summary>The OEM 1 key (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.OemPlus">
      <summary>The OEM Plus key on any country/region keyboard (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.OemComma">
      <summary>The OEM Comma key on any country/region keyboard (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.OemMinus">
      <summary>The OEM Minus key on any country/region keyboard (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.OemPeriod">
      <summary>The OEM Period key on any country/region keyboard (Windows 2000 or later).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem2">
      <summary>The OEM 2 key (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem3">
      <summary>The OEM 3 key (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem4">
      <summary>The OEM 4 key (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem5">
      <summary>The OEM 5 (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem6">
      <summary>The OEM 6 key (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem7">
      <summary>The OEM 7 key (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem8">
      <summary>The OEM 8 key (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.Oem102">
      <summary>The OEM 102 key (OEM specific).</summary>
    </member>
    <member name="F:System.ConsoleKey.Process">
      <summary>The IME PROCESS key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Packet">
      <summary>The PACKET key (used to pass Unicode characters with keystrokes).</summary>
    </member>
    <member name="F:System.ConsoleKey.Attention">
      <summary>The ATTN key.</summary>
    </member>
    <member name="F:System.ConsoleKey.CrSel">
      <summary>The CRSEL (CURSOR SELECT) key.</summary>
    </member>
    <member name="F:System.ConsoleKey.ExSel">
      <summary>The EXSEL (EXTEND SELECTION) key.</summary>
    </member>
    <member name="F:System.ConsoleKey.EraseEndOfFile">
      <summary>The ERASE EOF key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Play">
      <summary>The PLAY key.</summary>
    </member>
    <member name="F:System.ConsoleKey.Zoom">
      <summary>The ZOOM key.</summary>
    </member>
    <member name="F:System.ConsoleKey.NoName">
      <summary>A constant reserved for future use.</summary>
    </member>
    <member name="F:System.ConsoleKey.Pa1">
      <summary>The PA1 key.</summary>
    </member>
    <member name="F:System.ConsoleKey.OemClear">
      <summary>The CLEAR key (OEM specific).</summary>
    </member>
    <member name="T:System.ConsoleKeyInfo">
      <summary>Describes the console key that was pressed, including the character represented by the console key and the state of the SHIFT, ALT, and CTRL modifier keys.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ConsoleKeyInfo" /> structure using the specified character, console key, and modifier keys.</summary>
      <param name="keyChar">The Unicode character that corresponds to the <paramref name="key" /> parameter. </param>
      <param name="key">The console key that corresponds to the <paramref name="keyChar" /> parameter. </param>
      <param name="shift">true to indicate that a SHIFT key was pressed; otherwise, false. </param>
      <param name="alt">true to indicate that an ALT key was pressed; otherwise, false. </param>
      <param name="control">true to indicate that a CTRL key was pressed; otherwise, false. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The numeric value of the <paramref name="key" /> parameter is less than 0 or greater than 255.</exception>
    </member>
    <member name="M:System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)">
      <summary>Gets a value indicating whether the specified <see cref="T:System.ConsoleKeyInfo" /> object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</summary>
      <returns>true if <paramref name="obj" /> is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object; otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.ConsoleKeyInfo" /> object to compare to the current <see cref="T:System.ConsoleKeyInfo" /> object.</param>
    </member>
    <member name="M:System.ConsoleKeyInfo.Equals(System.Object)">
      <summary>Gets a value indicating whether the specified object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</summary>
      <returns>true if <paramref name="value" /> is a <see cref="T:System.ConsoleKeyInfo" /> object and is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object; otherwise, false.</returns>
      <param name="value">An object to compare to the current <see cref="T:System.ConsoleKeyInfo" /> object.</param>
    </member>
    <member name="M:System.ConsoleKeyInfo.GetHashCode">
      <summary>Returns the hash code for the current <see cref="T:System.ConsoleKeyInfo" /> object.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.ConsoleKeyInfo.Key">
      <summary>Gets the console key represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</summary>
      <returns>A <see cref="T:System.ConsoleKey" /> value that identifies the console key that was pressed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ConsoleKeyInfo.KeyChar">
      <summary>Gets the Unicode character represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</summary>
      <returns>A <see cref="T:System.Char" /> object that corresponds to the console key represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ConsoleKeyInfo.Modifiers">
      <summary>Gets a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values that specifies one or more modifier keys pressed simultaneously with the console key.</summary>
      <returns>A bitwise combination of <see cref="T:System.ConsoleModifiers" /> values. There is no default value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)">
      <summary>Indicates whether the specified <see cref="T:System.ConsoleKeyInfo" /> objects are equal.</summary>
      <returns>true if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, false.</returns>
      <param name="a">A <see cref="T:System.ConsoleKeyInfo" /> object.</param>
      <param name="b">A <see cref="T:System.ConsoleKeyInfo" /> object.</param>
    </member>
    <member name="M:System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)">
      <summary>Indicates whether the specified <see cref="T:System.ConsoleKeyInfo" /> objects are not equal.</summary>
      <returns>true if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, false.</returns>
      <param name="a">A <see cref="T:System.ConsoleKeyInfo" /> object.</param>
      <param name="b">A <see cref="T:System.ConsoleKeyInfo" /> object.</param>
    </member>
    <member name="T:System.ConsoleModifiers">
      <summary>Represents the SHIFT, ALT, and CTRL modifier keys on a keyboard.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.ConsoleModifiers.Alt">
      <summary>The left or right ALT modifier key.</summary>
    </member>
    <member name="F:System.ConsoleModifiers.Shift">
      <summary>The left or right SHIFT modifier key.</summary>
    </member>
    <member name="F:System.ConsoleModifiers.Control">
      <summary>The left or right CTRL modifier key.</summary>
    </member>
    <member name="T:System.ConsoleSpecialKey">
      <summary>Specifies combinations of modifier and console keys that can interrupt the current process.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.ConsoleSpecialKey.ControlC">
      <summary>The <see cref="F:System.ConsoleModifiers.Control" /> modifier key plus the <see cref="F:System.ConsoleKey.C" /> console key.</summary>
    </member>
    <member name="F:System.ConsoleSpecialKey.ControlBreak">
      <summary>The <see cref="F:System.ConsoleModifiers.Control" /> modifier key plus the BREAK console key.</summary>
    </member>
    <member name="T:System.ContextBoundObject">
      <summary>Defines the base class for all context-bound classes.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ContextBoundObject.#ctor">
      <summary>Instantiates an instance of the <see cref="T:System.ContextBoundObject" /> class.</summary>
    </member>
    <member name="T:System.ContextMarshalException">
      <summary>The exception that is thrown when an attempt to marshal an object across a context boundary fails.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ContextMarshalException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ContextMarshalException" /> class with default properties.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ContextMarshalException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ContextMarshalException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ContextMarshalException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.ContextStaticAttribute">
      <summary>Indicates that the value of a static field is unique for a particular context.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ContextStaticAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ContextStaticAttribute" /> class.</summary>
    </member>
    <member name="T:System.Convert">
      <summary>Converts a base data type to another base data type.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type)">
      <summary>Returns an object of the specified type and whose value is equivalent to the specified object.</summary>
      <returns>An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.-or-A null reference (Nothing in Visual Basic), if <paramref name="value" /> is null and <paramref name="conversionType" /> is not a value type. </returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="conversionType">The type of object to return. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported.  -or-<paramref name="value" /> is null and <paramref name="conversionType" /> is a value type.-or-<paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in a format recognized by <paramref name="conversionType" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conversionType" /> is null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
      <summary>Returns an object of the specified type whose value is equivalent to the specified object. A parameter supplies culture-specific formatting information.</summary>
      <returns>An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.-or- <paramref name="value" />, if the <see cref="T:System.Type" /> of <paramref name="value" /> and <paramref name="conversionType" /> are equal.-or- A null reference (Nothing in Visual Basic), if <paramref name="value" /> is null and <paramref name="conversionType" /> is not a value type.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="conversionType">The type of object to return. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. -or-<paramref name="value" /> is null and <paramref name="conversionType" /> is a value type.-or-<paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in a format for <paramref name="conversionType" /> recognized by <paramref name="provider" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conversionType" /> is null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
      <summary>Returns an object of the specified type whose value is equivalent to the specified object.</summary>
      <returns>An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.-or-A null reference (Nothing in Visual Basic), if <paramref name="value" /> is null and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="typeCode">The type of object to return. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported.  -or-<paramref name="value" /> is null and <paramref name="typeCode" /> specifies a value type.-or-<paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in a format recognized by the <paramref name="typeCode" /> type.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
      <summary>Returns an object of the specified type whose value is equivalent to the specified object. A parameter supplies culture-specific formatting information.</summary>
      <returns>An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.-or- A null reference (Nothing in Visual Basic), if <paramref name="value" /> is null and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="typeCode">The type of object to return. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported.  -or-<paramref name="value" /> is null and <paramref name="typeCode" /> specifies a value type.-or-<paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in a format for the <paramref name="typeCode" /> type recognized by <paramref name="provider" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Convert.DBNull">
      <summary>A constant that represents a database column that is absent of data; that is, database null.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
      <summary>Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array. Parameters specify the subset in the input array and the number of elements to convert.</summary>
      <returns>An array of 8-bit unsigned integers equivalent to <paramref name="length" /> elements at position <paramref name="offset" /> in <paramref name="inArray" />.</returns>
      <param name="inArray">A Unicode character array. </param>
      <param name="offset">A position within <paramref name="inArray" />. </param>
      <param name="length">The number of elements in <paramref name="inArray" /> to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> or <paramref name="length" /> is less than 0.-or- <paramref name="offset" /> plus <paramref name="length" /> indicates a position not within <paramref name="inArray" />. </exception>
      <exception cref="T:System.FormatException">The length of <paramref name="inArray" />, ignoring white-space characters, is not zero or a multiple of 4. -or-The format of <paramref name="inArray" /> is invalid. <paramref name="inArray" /> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.FromBase64String(System.String)">
      <summary>Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</summary>
      <returns>An array of 8-bit unsigned integers that is equivalent to <paramref name="s" />.</returns>
      <param name="s">The string to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">The length of <paramref name="s" />, ignoring white-space characters, is not zero or a multiple of 4. -or-The format of <paramref name="s" /> is invalid. <paramref name="s" /> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.GetTypeCode(System.Object)">
      <summary>Returns the <see cref="T:System.TypeCode" /> for the specified object.</summary>
      <returns>The <see cref="T:System.TypeCode" /> for <paramref name="value" />, or <see cref="F:System.TypeCode.Empty" /> if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.IsDBNull(System.Object)">
      <summary>Returns an indication whether the specified object is of type <see cref="T:System.DBNull" />.</summary>
      <returns>true if <paramref name="value" /> is of type <see cref="T:System.DBNull" />; otherwise, false.</returns>
      <param name="value">An object. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits. Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</summary>
      <returns>A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</returns>
      <param name="inArray">An input array of 8-bit unsigned integers. </param>
      <param name="offsetIn">A position within <paramref name="inArray" />. </param>
      <param name="length">The number of elements of <paramref name="inArray" /> to convert. </param>
      <param name="outArray">An output array of Unicode characters. </param>
      <param name="offsetOut">A position within <paramref name="outArray" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> or <paramref name="outArray" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.-or- <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.-or- <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
      <summary>Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits. Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</summary>
      <returns>A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</returns>
      <param name="inArray">An input array of 8-bit unsigned integers. </param>
      <param name="offsetIn">A position within <paramref name="inArray" />. </param>
      <param name="length">The number of elements of <paramref name="inArray" /> to convert. </param>
      <param name="outArray">An output array of Unicode characters. </param>
      <param name="offsetOut">A position within <paramref name="outArray" />. </param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> or <paramref name="outArray" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.-or- <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.-or- <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[])">
      <summary>Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</summary>
      <returns>The string representation, in base 64, of the contents of <paramref name="inArray" />.</returns>
      <param name="inArray">An array of 8-bit unsigned integers. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
      <summary>Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits. A parameter specifies whether to insert line breaks in the return value.</summary>
      <returns>The string representation in base 64 of the elements in <paramref name="inArray" />.</returns>
      <param name="inArray">An array of 8-bit unsigned integers. </param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
      <summary>Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits. Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</summary>
      <returns>The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</returns>
      <param name="inArray">An array of 8-bit unsigned integers. </param>
      <param name="offset">An offset in <paramref name="inArray" />. </param>
      <param name="length">The number of elements of <paramref name="inArray" /> to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> or <paramref name="length" /> is negative.-or- <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
      <summary>Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits. Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</summary>
      <returns>The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</returns>
      <param name="inArray">An array of 8-bit unsigned integers. </param>
      <param name="offset">An offset in <paramref name="inArray" />. </param>
      <param name="length">The number of elements of <paramref name="inArray" /> to convert. </param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> or <paramref name="length" /> is negative.-or- <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Boolean)">
      <summary>Returns the specified Boolean value; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The Boolean value to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Char)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The Unicode character to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object)">
      <summary>Converts the value of a specified object to an equivalent Boolean value.</summary>
      <returns>true or false, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />. If <paramref name="value" /> is null, the method returns false. </returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.-or-The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</summary>
      <returns>true or false, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />. If <paramref name="value" /> is null, the method returns false.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.-or-The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String)">
      <summary>Converts the specified string representation of a logical value to its Boolean equivalent.</summary>
      <returns>true if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or false if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or null.</returns>
      <param name="value">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</summary>
      <returns>true if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or false if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or null.</returns>
      <param name="value">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />. </param>
      <param name="provider">An object that supplies culture-specific formatting information. This parameter is ignored.</param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</summary>
      <returns>true if <paramref name="value" /> is not zero; otherwise, false.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Byte)">
      <summary>Returns the specified 8-bit unsigned integer; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The 8-bit unsigned integer to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Char)">
      <summary>Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 8-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 8-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Object)">
      <summary>Converts the value of the specified object to an 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />. -or-Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />. -or-Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to be converted. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 8-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">A single-precision floating-point number. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.Int32)">
      <summary>Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="fromBase">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> is not 2, 8, 10, or 16. -or-<paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />. The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, which represents a base 10 unsigned number, is prefixed with a negative sign.-or-<paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Boolean)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The Boolean value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Char)">
      <summary>Returns the specified Unicode character value; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The Unicode character to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The data and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Decimal)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The decimal number to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Double)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Object)">
      <summary>Converts the value of the specified object to a Unicode character.</summary>
      <returns>A Unicode character that is equivalent to value, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null string.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.-or-The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null string.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.Single)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.String)">
      <summary>Converts the first character of a specified string to a Unicode character.</summary>
      <returns>A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</returns>
      <param name="value">A string of length 1. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.FormatException">The length of <paramref name="value" /> is not 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
      <summary>Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</summary>
      <returns>A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</returns>
      <param name="value">A string of length 1 or null. </param>
      <param name="provider">An object that supplies culture-specific formatting information. This parameter is ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.FormatException">The length of <paramref name="value" /> is not 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</summary>
      <returns>A Unicode character that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Boolean)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The Boolean value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Byte)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Char)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The Unicode character to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.DateTime)">
      <summary>Returns the specified <see cref="T:System.DateTime" /> object; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">A date and time value. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Decimal)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The number to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Double)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The double-precision floating-point value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int16)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int32)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int64)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object)">
      <summary>Converts the value of the specified object to a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The date and time equivalent of the value of <paramref name="value" />, or a date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a valid date and time value.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to a <see cref="T:System.DateTime" /> object, using the specified culture-specific formatting information.</summary>
      <returns>The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a valid date and time value.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.SByte)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Single)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The single-precision floating-point value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String)">
      <summary>Converts the specified string representation of a date and time to an equivalent date and time value.</summary>
      <returns>The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is null.</returns>
      <param name="value">The string representation of a date and time.</param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a properly formatted date and time string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</summary>
      <returns>The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains a date and time to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a properly formatted date and time string. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt16)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt32)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt64)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent decimal number.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</summary>
      <returns>The decimal number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Char)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The Unicode character to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Decimal)">
      <summary>Returns the specified decimal number; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">A decimal number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />. </returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object)">
      <summary>Converts the value of the specified object to an equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.-or-The conversion is not supported. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />. </returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains a number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a number in a valid format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</summary>
      <returns>A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains a number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a number in a valid format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</summary>
      <returns>The decimal number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</summary>
      <returns>A decimal number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent double-precision floating-point number.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</summary>
      <returns>The double-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Char)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The Unicode character to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The decimal number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Double)">
      <summary>Returns the specified double-precision floating-point number; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The double-precision floating-point number to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object)">
      <summary>Converts the value of the specified object to a double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</summary>
      <returns>The 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The single-precision floating-point number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a number in a valid format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</summary>
      <returns>A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a number in a valid format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent 16-bit signed integer.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Char)">
      <summary>Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to <paramref name="value" />. </returns>
      <param name="value">The Unicode character to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 16-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The decimal number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 16-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int16)">
      <summary>Returns the specified 16-bit signed integer; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The 16-bit signed integer to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</summary>
      <returns>The 16-bit signed integer equivalent of <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object)">
      <summary>Converts the value of the specified object to a 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</summary>
      <returns>A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</summary>
      <returns>A 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 16-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</summary>
      <returns>A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.Int32)">
      <summary>Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="fromBase">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> is not 2, 8, 10, or 16. -or-<paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />. The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.-or-<paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent 32-bit signed integer.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Char)">
      <summary>Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert.</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 32-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The decimal number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 32-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int32)">
      <summary>Returns the specified 32-bit signed integer; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The 32-bit signed integer to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object)">
      <summary>Converts the value of the specified object to a 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</summary>
      <returns>A 32-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</summary>
      <returns>A 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 32-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</summary>
      <returns>A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.Int32)">
      <summary>Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="fromBase">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> is not 2, 8, 10, or 16. -or-<paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />. The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.-or-<paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent 64-bit signed integer.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Char)">
      <summary>Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 64-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The decimal number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 64-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int64)">
      <summary>Returns the specified 64-bit signed integer; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">A 64-bit signed integer. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object)">
      <summary>Converts the value of the specified object to a 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.-or-The conversion is not supported. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 64-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains a number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</summary>
      <returns>A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.Int32)">
      <summary>Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="fromBase">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> is not 2, 8, 10, or 16. -or-<paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />. The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.-or-<paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent 8-bit signed integer.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Char)">
      <summary>Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 8-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The decimal number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 8-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object)">
      <summary>Converts the value of the specified object to an 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format. </exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format. </exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.SByte)">
      <summary>Returns the specified 8-bit signed integer; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The 8-bit signed integer to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 8-bit signed integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if value is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.Int32)">
      <summary>Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="fromBase">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> is not 2, 8, 10, or 16. -or-<paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />. The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.-or-<paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent single-precision floating-point number.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Char)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The Unicode character to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.<paramref name="value" /> is rounded using rounding to nearest. For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</returns>
      <param name="value">The decimal number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.<paramref name="value" /> is rounded using rounding to nearest. For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object)">
      <summary>Converts the value of the specified object to a single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</summary>
      <returns>An 8-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.Single)">
      <summary>Returns the specified single-precision floating-point number; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The single-precision floating-point number to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a number in a valid format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</summary>
      <returns>A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a number in a valid format.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean)">
      <summary>Converts the specified Boolean value to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
      <summary>Converts the specified Boolean value to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The Boolean value to convert. </param>
      <param name="provider">An instance of an object. This parameter is ignored.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
      <summary>Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.Int32)">
      <summary>Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <param name="toBase">The base of the return value, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> is not 2, 8, 10, or 16. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Char)">
      <summary>Converts the value of the specified Unicode character to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
      <summary>Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime)">
      <summary>Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The date and time value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
      <summary>Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The date and time value to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal)">
      <summary>Converts the value of the specified decimal number to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The decimal number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
      <summary>Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The decimal number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
      <summary>Converts the value of the specified double-precision floating-point number to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
      <summary>Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.Int32)">
      <summary>Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <param name="toBase">The base of the return value, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> is not 2, 8, 10, or 16. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
      <summary>Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.Int32)">
      <summary>Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <param name="toBase">The base of the return value, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> is not 2, 8, 10, or 16. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
      <summary>Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.Int32)">
      <summary>Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <param name="toBase">The base of the return value, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> is not 2, 8, 10, or 16. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Object)">
      <summary>Converts the value of the specified object to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if value is null.</returns>
      <param name="value">An object that supplies the value to convert, or null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is null.</returns>
      <param name="value">An object that supplies the value to convert, or null. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
      <summary>Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
      <summary>Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.String)">
      <summary>Returns the specified string instance; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The string to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.String,System.IFormatProvider)">
      <summary>Returns the specified string instance; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The string to return. </param>
      <param name="provider">An object that supplies culture-specific formatting information. This parameter is ignored.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
      <summary>Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
      <summary>Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
      <summary>Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Char)">
      <summary>Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</summary>
      <returns>The 16-bit unsigned integer equivalent to <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 16-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The decimal number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 16-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object)">
      <summary>Converts the value of the specified object to a 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 16-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.Int32)">
      <summary>Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="fromBase">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> is not 2, 8, 10, or 16. -or-<paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />. The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.-or-<paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt16)">
      <summary>Returns the specified 16-bit unsigned integer; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The 16-bit unsigned integer to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Char)">
      <summary>Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 32-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The decimal number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 32-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object)">
      <summary>Converts the value of the specified object to a 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 32-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.Int32)">
      <summary>Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="fromBase">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> is not 2, 8, 10, or 16. -or-<paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />. The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.-or-<paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt32)">
      <summary>Returns the specified 32-bit unsigned integer; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The 32-bit unsigned integer to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt64)">
      <summary>Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit unsigned integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Boolean)">
      <summary>Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</summary>
      <returns>The number 1 if <paramref name="value" /> is true; otherwise, 0.</returns>
      <param name="value">The Boolean value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Byte)">
      <summary>Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Char)">
      <summary>Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The Unicode character to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.DateTime)">
      <summary>Calling this method always throws <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="value">The date and time value to convert. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Decimal)">
      <summary>Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 64-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The decimal number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Double)">
      <summary>Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 64-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The double-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int16)">
      <summary>Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int32)">
      <summary>Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int64)">
      <summary>Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 64-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object)">
      <summary>Converts the value of the specified object to a 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface, or null. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
      <summary>Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is null.</returns>
      <param name="value">An object that implements the <see cref="T:System.IConvertible" /> interface. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in an appropriate format.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface. -or-The conversion is not supported.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.SByte)">
      <summary>Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 8-bit signed integer to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Single)">
      <summary>Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</summary>
      <returns>
        <paramref name="value" />, rounded to the nearest 64-bit unsigned integer. If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</returns>
      <param name="value">The single-precision floating-point number to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String)">
      <summary>Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9). </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.Int32)">
      <summary>Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is null.</returns>
      <param name="value">A string that contains the number to convert. </param>
      <param name="fromBase">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> is not 2, 8, 10, or 16. -or-<paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />. The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.-or-<paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt16)">
      <summary>Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 16-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt32)">
      <summary>Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</returns>
      <param name="value">The 32-bit unsigned integer to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt64)">
      <summary>Returns the specified 64-bit unsigned integer; no actual conversion is performed.</summary>
      <returns>
        <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">The 64-bit unsigned integer to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Converter`2">
      <summary>Represents a method that converts an object from one type to another type.</summary>
      <returns>The <paramref name="TOutput" /> that represents the converted <paramref name="TInput" />.</returns>
      <param name="input">The object to convert.</param>
      <typeparam name="TInput">The type of object that is to be converted.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="TOutput">The type the input object is to be converted to.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.CrossAppDomainDelegate">
      <summary>Used by <see cref="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)" /> for cross-application domain calls.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.DataMisalignedException">
      <summary>The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DataMisalignedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DataMisalignedException" /> class. </summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DataMisalignedException" /> class using the specified error message.</summary>
      <param name="message">A <see cref="T:System.String" /> object that describes the error. The content of <paramref name="message" /> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DataMisalignedException" /> class using the specified error message and underlying exception.</summary>
      <param name="message">A <see cref="T:System.String" /> object that describes the error. The content of <paramref name="message" /> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current <see cref="T:System.DataMisalignedException" />. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.DateTime">
      <summary>Represents an instant in time, typically expressed as a date and time of day. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day.</summary>
      <param name="year">The year (1 through 9999). </param>
      <param name="month">The month (1 through 12). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than 1 or greater than 9999.-or- <paramref name="month" /> is less than 1 or greater than 12.-or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />. </exception>
      <exception cref="T:System.ArgumentException">The specified parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day for the specified calendar.</summary>
      <param name="year">The year (1 through the number of years in <paramref name="calendar" />). </param>
      <param name="month">The month (1 through the number of months in <paramref name="calendar" />). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <param name="calendar">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="calendar" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is not in the range supported by <paramref name="calendar" />.-or- <paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.-or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />. </exception>
      <exception cref="T:System.ArgumentException">The specified parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second.</summary>
      <param name="year">The year (1 through 9999). </param>
      <param name="month">The month (1 through 12). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <param name="hour">The hours (0 through 23). </param>
      <param name="minute">The minutes (0 through 59). </param>
      <param name="second">The seconds (0 through 59). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than 1 or greater than 9999. -or- <paramref name="month" /> is less than 1 or greater than 12. -or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.-or- <paramref name="hour" /> is less than 0 or greater than 23. -or- <paramref name="minute" /> is less than 0 or greater than 59. -or- <paramref name="second" /> is less than 0 or greater than 59. </exception>
      <exception cref="T:System.ArgumentException">The specified parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</summary>
      <param name="year">The year (1 through 9999). </param>
      <param name="month">The month (1 through 12). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <param name="hour">The hours (0 through 23). </param>
      <param name="minute">The minutes (0 through 59). </param>
      <param name="second">The seconds (0 through 59). </param>
      <param name="kind">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> and <paramref name="second" /> specify a local time, Coordinated Universal Time (UTC), or neither.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than 1 or greater than 9999. -or- <paramref name="month" /> is less than 1 or greater than 12. -or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.-or- <paramref name="hour" /> is less than 0 or greater than 23. -or- <paramref name="minute" /> is less than 0 or greater than 59. -or- <paramref name="second" /> is less than 0 or greater than 59. </exception>
      <exception cref="T:System.ArgumentException">The specified time parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. -or-<paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</summary>
      <param name="year">The year (1 through the number of years in <paramref name="calendar" />). </param>
      <param name="month">The month (1 through the number of months in <paramref name="calendar" />). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <param name="hour">The hours (0 through 23). </param>
      <param name="minute">The minutes (0 through 59). </param>
      <param name="second">The seconds (0 through 59). </param>
      <param name="calendar">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="calendar" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is not in the range supported by <paramref name="calendar" />.-or- <paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.-or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.-or- <paramref name="hour" /> is less than 0 or greater than 23 -or- <paramref name="minute" /> is less than 0 or greater than 59. -or- <paramref name="second" /> is less than 0 or greater than 59. </exception>
      <exception cref="T:System.ArgumentException">The specified parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond.</summary>
      <param name="year">The year (1 through 9999). </param>
      <param name="month">The month (1 through 12). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <param name="hour">The hours (0 through 23). </param>
      <param name="minute">The minutes (0 through 59). </param>
      <param name="second">The seconds (0 through 59). </param>
      <param name="millisecond">The milliseconds (0 through 999). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than 1 or greater than 9999.-or- <paramref name="month" /> is less than 1 or greater than 12.-or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.-or- <paramref name="hour" /> is less than 0 or greater than 23.-or- <paramref name="minute" /> is less than 0 or greater than 59.-or- <paramref name="second" /> is less than 0 or greater than 59.-or- <paramref name="millisecond" /> is less than 0 or greater than 999. </exception>
      <exception cref="T:System.ArgumentException">The specified parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</summary>
      <param name="year">The year (1 through 9999). </param>
      <param name="month">The month (1 through 12). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <param name="hour">The hours (0 through 23). </param>
      <param name="minute">The minutes (0 through 59). </param>
      <param name="second">The seconds (0 through 59). </param>
      <param name="millisecond">The milliseconds (0 through 999). </param>
      <param name="kind">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than 1 or greater than 9999.-or- <paramref name="month" /> is less than 1 or greater than 12.-or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.-or- <paramref name="hour" /> is less than 0 or greater than 23.-or- <paramref name="minute" /> is less than 0 or greater than 59.-or- <paramref name="second" /> is less than 0 or greater than 59.-or- <paramref name="millisecond" /> is less than 0 or greater than 999. </exception>
      <exception cref="T:System.ArgumentException">The specified time parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. -or-<paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</summary>
      <param name="year">The year (1 through the number of years in <paramref name="calendar" />). </param>
      <param name="month">The month (1 through the number of months in <paramref name="calendar" />). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <param name="hour">The hours (0 through 23). </param>
      <param name="minute">The minutes (0 through 59). </param>
      <param name="second">The seconds (0 through 59). </param>
      <param name="millisecond">The milliseconds (0 through 999). </param>
      <param name="calendar">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="calendar" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is not in the range supported by <paramref name="calendar" />.-or- <paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.-or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.-or- <paramref name="hour" /> is less than 0 or greater than 23.-or- <paramref name="minute" /> is less than 0 or greater than 59.-or- <paramref name="second" /> is less than 0 or greater than 59.-or- <paramref name="millisecond" /> is less than 0 or greater than 999. </exception>
      <exception cref="T:System.ArgumentException">The specified parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</summary>
      <param name="year">The year (1 through the number of years in <paramref name="calendar" />). </param>
      <param name="month">The month (1 through the number of months in <paramref name="calendar" />). </param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />). </param>
      <param name="hour">The hours (0 through 23). </param>
      <param name="minute">The minutes (0 through 59). </param>
      <param name="second">The seconds (0 through 59). </param>
      <param name="millisecond">The milliseconds (0 through 999). </param>
      <param name="calendar">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</param>
      <param name="kind">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="calendar" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is not in the range supported by <paramref name="calendar" />.-or- <paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.-or- <paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.-or- <paramref name="hour" /> is less than 0 or greater than 23.-or- <paramref name="minute" /> is less than 0 or greater than 59.-or- <paramref name="second" /> is less than 0 or greater than 59.-or- <paramref name="millisecond" /> is less than 0 or greater than 999. </exception>
      <exception cref="T:System.ArgumentException">The specified time parameters evaluate to less than <see cref="F:System.DateTime.MinValue" /> or more than <see cref="F:System.DateTime.MaxValue" />. -or-<paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks.</summary>
      <param name="ticks">A date and time expressed in 100-nanosecond units. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</summary>
      <param name="ticks">A date and time expressed in 100-nanosecond units. </param>
      <param name="kind">One of the enumeration values that indicates whether <paramref name="ticks" /> specifies a local time, Coordinated Universal Time (UTC), or neither.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</exception>
    </member>
    <member name="M:System.DateTime.Add(System.TimeSpan)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the value of the specified <see cref="T:System.TimeSpan" /> to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and the time interval represented by <paramref name="value" />.</returns>
      <param name="value">A <see cref="T:System.TimeSpan" /> object that represents a positive or negative time interval. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddDays(System.Double)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the specified number of days to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and the number of days represented by <paramref name="value" />.</returns>
      <param name="value">A number of whole and fractional days. The <paramref name="value" /> parameter can be negative or positive. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddHours(System.Double)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the specified number of hours to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and the number of hours represented by <paramref name="value" />.</returns>
      <param name="value">A number of whole and fractional hours. The <paramref name="value" /> parameter can be negative or positive. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMilliseconds(System.Double)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the specified number of milliseconds to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <paramref name="value" />.</returns>
      <param name="value">A number of whole and fractional milliseconds. The <paramref name="value" /> parameter can be negative or positive. Note that this value is rounded to the nearest integer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMinutes(System.Double)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the specified number of minutes to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and the number of minutes represented by <paramref name="value" />.</returns>
      <param name="value">A number of whole and fractional minutes. The <paramref name="value" /> parameter can be negative or positive. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMonths(System.Int32)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the specified number of months to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and <paramref name="months" />.</returns>
      <param name="months">A number of months. The <paramref name="months" /> parameter can be negative or positive. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.-or- <paramref name="months" /> is less than -120,000 or greater than 120,000. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddSeconds(System.Double)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the specified number of seconds to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and the number of seconds represented by <paramref name="value" />.</returns>
      <param name="value">A number of whole and fractional seconds. The <paramref name="value" /> parameter can be negative or positive. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddTicks(System.Int64)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the specified number of ticks to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and the time represented by <paramref name="value" />.</returns>
      <param name="value">A number of 100-nanosecond ticks. The <paramref name="value" /> parameter can be positive or negative. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddYears(System.Int32)">
      <summary>Returns a new <see cref="T:System.DateTime" /> that adds the specified number of years to the value of this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the sum of the date and time represented by this instance and the number of years represented by <paramref name="value" />.</returns>
      <param name="value">A number of years. The <paramref name="value" /> parameter can be negative or positive. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> or the resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Compare(System.DateTime,System.DateTime)">
      <summary>Compares two instances of <see cref="T:System.DateTime" /> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</summary>
      <returns>A signed number indicating the relative values of <paramref name="t1" /> and <paramref name="t2" />.Value Type Condition Less than zero <paramref name="t1" /> is earlier than <paramref name="t2" />. Zero <paramref name="t1" /> is the same as <paramref name="t2" />. Greater than zero <paramref name="t1" /> is later than <paramref name="t2" />. </returns>
      <param name="t1">The first <see cref="T:System.DateTime" />. </param>
      <param name="t2">The second <see cref="T:System.DateTime" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.CompareTo(System.DateTime)">
      <summary>Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</summary>
      <returns>A signed number indicating the relative values of this instance and the <paramref name="value" /> parameter.Value Description Less than zero This instance is earlier than <paramref name="value" />. Zero This instance is the same as <paramref name="value" />. Greater than zero This instance is later than <paramref name="value" />. </returns>
      <param name="value">A <see cref="T:System.DateTime" /> object to compare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.CompareTo(System.Object)">
      <summary>Compares the value of this instance to a specified object that contains a specified <see cref="T:System.DateTime" /> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Value Description Less than zero This instance is earlier than <paramref name="value" />. Zero This instance is the same as <paramref name="value" />. Greater than zero This instance is later than <paramref name="value" />, or <paramref name="value" /> is null. </returns>
      <param name="value">A boxed <see cref="T:System.DateTime" /> object to compare, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.DateTime" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Date">
      <summary>Gets the date component of this instance.</summary>
      <returns>A new <see cref="T:System.DateTime" /> with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Day">
      <summary>Gets the day of the month represented by this instance.</summary>
      <returns>The day component, expressed as a value between 1 and 31.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfWeek">
      <summary>Gets the day of the week represented by this instance.</summary>
      <returns>A <see cref="T:System.DayOfWeek" /> enumerated constant that indicates the day of the week of this <see cref="T:System.DateTime" /> value. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfYear">
      <summary>Gets the day of the year represented by this instance.</summary>
      <returns>The day of the year, expressed as a value between 1 and 366.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)">
      <summary>Returns the number of days in the specified month and year.</summary>
      <returns>The number of days in <paramref name="month" /> for the specified <paramref name="year" />.For example, if <paramref name="month" /> equals 2 for February, the return value is 28 or 29 depending upon whether <paramref name="year" /> is a leap year.</returns>
      <param name="year">The year. </param>
      <param name="month">The month (a number ranging from 1 to 12). </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> is less than 1 or greater than 12.-or-<paramref name="year" /> is less than 1 or greater than 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime)">
      <summary>Returns a value indicating whether this instance is equal to the specified <see cref="T:System.DateTime" /> instance.</summary>
      <returns>true if the <paramref name="value" /> parameter equals the value of this instance; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.DateTime" /> instance to compare to this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime,System.DateTime)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.DateTime" /> are equal.</summary>
      <returns>true if the two <see cref="T:System.DateTime" /> values are equal; otherwise, false.</returns>
      <param name="t1">The first <see cref="T:System.DateTime" /> instance. </param>
      <param name="t2">The second <see cref="T:System.DateTime" /> instance. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="value" /> is an instance of <see cref="T:System.DateTime" /> and equals the value of this instance; otherwise, false.</returns>
      <param name="value">An object to compare to this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.FromBinary(System.Int64)">
      <summary>Deserializes a 64-bit binary value and recreates an original serialized <see cref="T:System.DateTime" /> object.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that is equivalent to the <see cref="T:System.DateTime" /> object that was serialized by the <see cref="M:System.DateTime.ToBinary" /> method.</returns>
      <param name="dateData">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> property in a 2-bit field and the <see cref="P:System.DateTime.Ticks" /> property in a 62-bit field. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateData" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTime(System.Int64)">
      <summary>Converts the specified Windows file time to an equivalent local time.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that represents a local time equivalent to the date and time represented by the <paramref name="fileTime" /> parameter.</returns>
      <param name="fileTime">A Windows file time expressed in ticks. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTimeUtc(System.Int64)">
      <summary>Converts the specified Windows file time to an equivalent UTC time.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that represents a UTC time equivalent to the date and time represented by the <paramref name="fileTime" /> parameter.</returns>
      <param name="fileTime">A Windows file time expressed in ticks. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromOADate(System.Double)">
      <summary>Returns a <see cref="T:System.DateTime" /> equivalent to the specified OLE Automation Date.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the same date and time as <paramref name="d" />.</returns>
      <param name="d">An OLE Automation Date value. </param>
      <exception cref="T:System.ArgumentException">The date is not a valid OLE Automation Date value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats">
      <summary>Converts the value of this instance to all the string representations supported by the standard <see cref="T:System.DateTime" /> format specifiers.</summary>
      <returns>A string array where each element is the representation of the value of this instance formatted with one of the standard <see cref="T:System.DateTime" /> formatting specifiers.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char)">
      <summary>Converts the value of this instance to all the string representations supported by the specified standard <see cref="T:System.DateTime" /> format specifier.</summary>
      <returns>A string array where each element is the representation of the value of this instance formatted with the <paramref name="format" /> standard <see cref="T:System.DateTime" /> formatting specifier.</returns>
      <param name="format">A standard date and time format string. (See Standard Date and Time Format Strings.) </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is not a valid standard date and time format specifier character.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
      <summary>Converts the value of this instance to all the string representations supported by the specified standard <see cref="T:System.DateTime" /> format specifier and culture-specific formatting information.</summary>
      <returns>A string array where each element is the representation of the value of this instance formatted with one of the standard <see cref="T:System.DateTime" /> formatting specifiers.</returns>
      <param name="format">A date and time format string. </param>
      <param name="provider">An object that supplies culture-specific formatting information about this instance. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is not a valid standard date and time format specifier character.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)">
      <summary>Converts the value of this instance to all the string representations supported by the standard <see cref="T:System.DateTime" /> format specifiers and the specified culture-specific formatting information.</summary>
      <returns>A string array where each element is the representation of the value of this instance formatted with one of the standard <see cref="T:System.DateTime" /> formatting specifiers.</returns>
      <param name="provider">An object that supplies culture-specific formatting information about this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.DateTime" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.DateTime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Hour">
      <summary>Gets the hour component of the date represented by this instance.</summary>
      <returns>The hour component, expressed as a value between 0 and 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.IsDaylightSavingTime">
      <summary>Indicates whether this instance of <see cref="T:System.DateTime" /> is within the Daylight Saving Time range for the current time zone.</summary>
      <returns>true if <see cref="P:System.DateTime.Kind" /> is <see cref="F:System.DateTimeKind.Local" /> or <see cref="F:System.DateTimeKind.Unspecified" /> and the value of this instance of <see cref="T:System.DateTime" /> is within the Daylight Saving Time range for the current time zone. false if <see cref="P:System.DateTime.Kind" /> is <see cref="F:System.DateTimeKind.Utc" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.IsLeapYear(System.Int32)">
      <summary>Returns an indication whether the specified year is a leap year.</summary>
      <returns>true if <paramref name="year" /> is a leap year; otherwise, false.</returns>
      <param name="year">A 4-digit year. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than 1 or greater than 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Kind">
      <summary>Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</summary>
      <returns>One of the <see cref="T:System.DateTimeKind" /> values. The default is <see cref="F:System.DateTimeKind.Unspecified" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MaxValue">
      <summary>Represents the largest possible value of <see cref="T:System.DateTime" />. This field is read-only.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="F:System.DateTime.MaxValue" /> is outside the range of the current culture's default calendar or of a specified culture's default calendar.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Millisecond">
      <summary>Gets the milliseconds component of the date represented by this instance.</summary>
      <returns>The milliseconds component, expressed as a value between 0 and 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Minute">
      <summary>Gets the minute component of the date represented by this instance.</summary>
      <returns>The minute component, expressed as a value between 0 and 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MinValue">
      <summary>Represents the smallest possible value of <see cref="T:System.DateTime" />. This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Month">
      <summary>Gets the month component of the date represented by this instance.</summary>
      <returns>The month component, expressed as a value between 1 and 12.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Now">
      <summary>Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the local time.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the current local date and time.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)">
      <summary>Adds a specified time interval to a specified date and time, yielding a new date and time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that is the sum of the values of <paramref name="d" /> and <paramref name="t" />.</returns>
      <param name="d">A <see cref="T:System.DateTime" />. </param>
      <param name="t">A <see cref="T:System.TimeSpan" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)">
      <summary>Determines whether two specified instances of <see cref="T:System.DateTime" /> are equal.</summary>
      <returns>true if <paramref name="d1" /> and <paramref name="d2" /> represent the same date and time; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.DateTime" />. </param>
      <param name="d2">A <see cref="T:System.DateTime" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)">
      <summary>Determines whether one specified <see cref="T:System.DateTime" /> is greater than another specified <see cref="T:System.DateTime" />.</summary>
      <returns>true if <paramref name="t1" /> is greater than <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">A <see cref="T:System.DateTime" />. </param>
      <param name="t2">A <see cref="T:System.DateTime" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Determines whether one specified <see cref="T:System.DateTime" /> is greater than or equal to another specified <see cref="T:System.DateTime" />.</summary>
      <returns>true if <paramref name="t1" /> is greater than or equal to <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">A <see cref="T:System.DateTime" />. </param>
      <param name="t2">A <see cref="T:System.DateTime" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)">
      <summary>Determines whether two specified instances of <see cref="T:System.DateTime" /> are not equal.</summary>
      <returns>true if <paramref name="d1" /> and <paramref name="d2" /> do not represent the same date and time; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.DateTime" />. </param>
      <param name="d2">A <see cref="T:System.DateTime" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)">
      <summary>Determines whether one specified <see cref="T:System.DateTime" /> is less than another specified <see cref="T:System.DateTime" />.</summary>
      <returns>true if <paramref name="t1" /> is less than <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">A <see cref="T:System.DateTime" />. </param>
      <param name="t2">A <see cref="T:System.DateTime" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Determines whether one specified <see cref="T:System.DateTime" /> is less than or equal to another specified <see cref="T:System.DateTime" />.</summary>
      <returns>true if <paramref name="t1" /> is less than or equal to <paramref name="t2" />; otherwise, false.</returns>
      <param name="t1">A <see cref="T:System.DateTime" />. </param>
      <param name="t2">A <see cref="T:System.DateTime" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)">
      <summary>Subtracts a specified date and time from another specified date and time and returns a time interval.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that is the time interval between <paramref name="d1" /> and <paramref name="d2" />; that is, <paramref name="d1" /> minus <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.DateTime" /> (the minuend). </param>
      <param name="d2">A <see cref="T:System.DateTime" /> (the subtrahend). </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)">
      <summary>Subtracts a specified time interval from a specified date and time and returns a new date and time.</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the value of <paramref name="d" /> minus the value of <paramref name="t" />.</returns>
      <param name="d">A <see cref="T:System.DateTime" />. </param>
      <param name="t">A <see cref="T:System.TimeSpan" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</summary>
      <returns>A <see cref="T:System.DateTime" /> equivalent to the date and time contained in <paramref name="s" />.</returns>
      <param name="s">A string containing a date and time to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not contain a valid string representation of a date and time. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information.</summary>
      <returns>A <see cref="T:System.DateTime" /> equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="provider" />.</returns>
      <param name="s">A string containing a date and time to convert. </param>
      <param name="provider">An object that supplies culture-specific format information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not contain a valid string representation of a date and time. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information and formatting style.</summary>
      <returns>A <see cref="T:System.DateTime" /> equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="provider" /> and <paramref name="styles" />.</returns>
      <param name="s">A string containing a date and time to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <param name="styles">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" /> for the parse operation to succeed and that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not contain a valid string representation of a date and time. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values. For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</summary>
      <returns>A <see cref="T:System.DateTime" /> equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="s">A string that contains a date and time to convert. </param>
      <param name="format">A format specifier that defines the required format of <paramref name="s" />. </param>
      <param name="provider">An object that supplies culture-specific format information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> or <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> or <paramref name="format" /> is an empty string. -or- <paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />. -or-The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly or an exception is thrown.</summary>
      <returns>A <see cref="T:System.DateTime" /> equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="format" />, <paramref name="provider" />, and <paramref name="style" />.</returns>
      <param name="s">A string containing a date and time to convert. </param>
      <param name="format">A format specifier that defines the required format of <paramref name="s" />. </param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <param name="style">A bitwise combination of the enumeration values that provides additional information about <paramref name="s" />, about style elements that may be present in <paramref name="s" />, or about the conversion from <paramref name="s" /> to a <see cref="T:System.DateTime" /> value. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> or <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> or <paramref name="format" /> is an empty string. -or- <paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />. -or-The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values. For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</summary>
      <returns>A <see cref="T:System.DateTime" /> equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="formats" />, <paramref name="provider" />, and <paramref name="style" />.</returns>
      <param name="s">A string containing one or more dates and times to convert. </param>
      <param name="formats">An array of allowable formats of <paramref name="s" />. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific format information about <paramref name="s" />. </param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles" /> values that indicates the permitted format of <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> or <paramref name="formats" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is an empty string. -or- an element of <paramref name="formats" /> is an empty string. -or- <paramref name="s" /> does not contain a date and time that corresponds to any element of <paramref name="formats" />. -or-The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values. For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Second">
      <summary>Gets the seconds component of the date represented by this instance.</summary>
      <returns>The seconds, between 0 and 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)">
      <summary>Creates a new <see cref="T:System.DateTime" /> object that has the same number of ticks as the specified <see cref="T:System.DateTime" />, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <see cref="T:System.DateTimeKind" /> value.</summary>
      <returns>A new object that has the same number of ticks as the object represented by the <paramref name="value" /> parameter and the <see cref="T:System.DateTimeKind" /> value specified by the <paramref name="kind" /> parameter. </returns>
      <param name="value">A date and time. </param>
      <param name="kind">One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.DateTime)">
      <summary>Subtracts the specified date and time from this instance.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> interval equal to the date and time represented by this instance minus the date and time represented by <paramref name="value" />.</returns>
      <param name="value">An instance of <see cref="T:System.DateTime" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.TimeSpan)">
      <summary>Subtracts the specified duration from this instance.</summary>
      <returns>A <see cref="T:System.DateTime" /> equal to the date and time represented by this instance minus the time interval represented by <paramref name="value" />.</returns>
      <param name="value">An instance of <see cref="T:System.TimeSpan" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Returns the current <see cref="T:System.DateTime" /> object.</summary>
      <returns>The current <see cref="T:System.DateTime" /> object.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface or null.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Converts the current <see cref="T:System.DateTime" /> object to an object of a specified type.</summary>
      <returns>An object of the type specified by the <paramref name="type" /> parameter, with a value equivalent to the current <see cref="T:System.DateTime" /> object.</returns>
      <param name="type">The desired type. </param>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DateTime" /> type.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.DateTime" /> object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data. </param>
      <param name="context">The destination for this serialization. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="P:System.DateTime.Ticks">
      <summary>Gets the number of ticks that represent the date and time of this instance.</summary>
      <returns>The number of ticks that represent the date and time of this instance. The value is between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.TimeOfDay">
      <summary>Gets the time of day for this instance.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the fraction of the day that has elapsed since midnight.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToBinary">
      <summary>Serializes the current <see cref="T:System.DateTime" /> object to a 64-bit binary value that subsequently can be used to recreate the <see cref="T:System.DateTime" /> object.</summary>
      <returns>A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> and <see cref="P:System.DateTime.Ticks" /> properties. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Today">
      <summary>Gets the current date.</summary>
      <returns>A <see cref="T:System.DateTime" /> set to today's date, with the time component set to 00:00:00.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTime">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</summary>
      <returns>The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTimeUtc">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</summary>
      <returns>The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToLocalTime">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to local time.</summary>
      <returns>A <see cref="T:System.DateTime" /> object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" />, and whose value is the local time equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented as a <see cref="T:System.DateTime" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToLongDateString">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long date string representation.</summary>
      <returns>A string that contains the long date string representation of the current <see cref="T:System.DateTime" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToLongTimeString">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long time string representation.</summary>
      <returns>A string that contains the long time string representation of the current <see cref="T:System.DateTime" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToOADate">
      <summary>Converts the value of this instance to the equivalent OLE Automation date.</summary>
      <returns>A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</returns>
      <exception cref="T:System.OverflowException">The value of this instance cannot be represented as an OLE Automation Date. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToShortDateString">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short date string representation.</summary>
      <returns>A string that contains the short date string representation of the current <see cref="T:System.DateTime" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToShortTimeString">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short time string representation.</summary>
      <returns>A string that contains the short time string representation of the current <see cref="T:System.DateTime" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation.</summary>
      <returns>A string representation of the value of the current <see cref="T:System.DateTime" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.IFormatProvider)">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified culture-specific format information.</summary>
      <returns>A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="provider" />.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String)">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format.</summary>
      <returns>A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" />.</returns>
      <param name="format">A standard or custom date and time format string. </param>
      <exception cref="T:System.FormatException">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.-or- <paramref name="format" /> does not contain a valid custom format pattern. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and culture-specific format information.</summary>
      <returns>A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A standard or custom date and time format string. </param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.-or- <paramref name="format" /> does not contain a valid custom format pattern. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToUniversalTime">
      <summary>Converts the value of the current <see cref="T:System.DateTime" /> object to Coordinated Universal Time (UTC).</summary>
      <returns>A <see cref="T:System.DateTime" /> object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" />, and whose value is the UTC equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented by a <see cref="T:System.DateTime" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.DateTime@)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if the <paramref name="s" /> parameter was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a date and time to convert. </param>
      <param name="result">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is an empty string (""), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if the <paramref name="s" /> parameter was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a date and time to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <param name="styles">A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is an empty string (""), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.-or-<paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="provider" /> is a neutral culture and cannot be used in a parsing operation.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a date and time to convert. </param>
      <param name="format">The required format of <paramref name="s" />. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <param name="style">A bitwise combination of one or more enumeration values that indicate the permitted format of <paramref name="s" />. </param>
      <param name="result">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed. The conversion fails if either the <paramref name="s" /> or <paramref name="format" /> parameter is null, is an empty string, or does not contain a date and time that correspond to the pattern specified in <paramref name="format" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.-or-<paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly. The method returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if the <paramref name="s" /> parameter was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing one or more dates and times to convert. </param>
      <param name="formats">An array of allowable formats of <paramref name="s" />. </param>
      <param name="provider">An object that supplies culture-specific format information about <paramref name="s" />. </param>
      <param name="style">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed. The conversion fails if <paramref name="s" /> or <paramref name="formats" /> is null, <paramref name="s" /> or an element of <paramref name="formats" /> is an empty string, or the format of <paramref name="s" /> is not exactly as specified by at least one of the format patterns in <paramref name="formats" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.-or-<paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.UtcNow">
      <summary>Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</summary>
      <returns>A <see cref="T:System.DateTime" /> whose value is the current UTC date and time.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Year">
      <summary>Gets the year component of the date represented by this instance.</summary>
      <returns>The year, between 1 and 9999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.DateTimeKind">
      <summary>Specifies whether a <see cref="T:System.DateTime" /> object represents a local time, a Coordinated Universal Time (UTC), or is not specified as either local time or UTC.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DateTimeKind.Unspecified">
      <summary>The time represented is not specified as either local time or Coordinated Universal Time (UTC).</summary>
    </member>
    <member name="F:System.DateTimeKind.Utc">
      <summary>The time represented is UTC.</summary>
    </member>
    <member name="F:System.DateTimeKind.Local">
      <summary>The time represented is local time.</summary>
    </member>
    <member name="T:System.DateTimeOffset">
      <summary>Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified <see cref="T:System.DateTime" /> value.</summary>
      <param name="dateTime">A date and time.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <see cref="F:System.DateTimeOffset.MinValue" />.-or-The UTC date and time that results from applying the offset is later than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified <see cref="T:System.DateTime" /> value and offset.</summary>
      <param name="dateTime">A date and time.   </param>
      <param name="offset">The time's offset from Coordinated Universal Time (UTC).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dateTime.Kind" /> equals <see cref="F:System.DateTimeKind.Utc" /> and <paramref name="offset" /> does not equal zero.-or-<paramref name="dateTime.Kind" /> equals <see cref="F:System.DateTimeKind.Local" /> and <paramref name="offset" /> does not equal the offset of the system's local time zone.-or-<paramref name="offset" /> is not specified in whole minutes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than -14 hours or greater than 14 hours.-or-<see cref="P:System.DateTimeOffset.UtcDateTime" /> is less than <see cref="F:System.DateTimeOffset.MinValue" /> or greater than <see cref="F:System.DateTimeOffset.MaxValue" />. </exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar.</summary>
      <param name="year">The year.</param>
      <param name="month">The month (1 through 12).</param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />).</param>
      <param name="hour">The hours (0 through 23).   </param>
      <param name="minute">The minutes (0 through 59).</param>
      <param name="second">The seconds (0 through 59).</param>
      <param name="millisecond">The milliseconds (0 through 999).</param>
      <param name="calendar">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</param>
      <param name="offset">The time's offset from Coordinated Universal Time (UTC).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> does not represent whole minutes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="calendar" /> cannot be null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than the <paramref name="calendar" /> parameter's MinSupportedDateTime.Year or greater than MaxSupportedDateTime.Year.-or-<paramref name="month" /> is either less than or greater than the number of months in <paramref name="year" /> in the <paramref name="calendar" />. -or-<paramref name="day" /> is less than one or greater than the number of days in <paramref name="month" />.-or-<paramref name="hour" /> is less than zero or greater than 23.-or-<paramref name="minute" /> is less than 0 or greater than 59.-or-<paramref name="second" /> is less than 0 or greater than 59.-or-<paramref name="millisecond" /> is less than 0 or greater than 999.-or-<paramref name="offset" /> is less than -14 hours or greater than 14 hours.-or-The <paramref name="year" />, <paramref name="month" />, and <paramref name="day" /> parameters cannot be represented as a date and time value.-or-The <see cref="P:System.DateTimeOffset.UtcDateTime" /> property is earlier than <see cref="F:System.DateTimeOffset.MinValue" /> or later than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.</summary>
      <param name="year">The year (1 through 9999).</param>
      <param name="month">The month (1 through 12).</param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />).</param>
      <param name="hour">The hours (0 through 23).   </param>
      <param name="minute">The minutes (0 through 59).</param>
      <param name="second">The seconds (0 through 59).</param>
      <param name="millisecond">The milliseconds (0 through 999).</param>
      <param name="offset">The time's offset from Coordinated Universal Time (UTC).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> does not represent whole minutes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than one or greater than 9999.-or-<paramref name="month" /> is less than one or greater than 12.-or-<paramref name="day" /> is less than one or greater than the number of days in <paramref name="month" />.-or-<paramref name="hour" /> is less than zero or greater than 23.-or-<paramref name="minute" /> is less than 0 or greater than 59.-or-<paramref name="second" /> is less than 0 or greater than 59.-or-<paramref name="millisecond" /> is less than 0 or greater than 999.-or-<paramref name="offset" /> is less than -14 or greater than 14.-or-The <see cref="P:System.DateTimeOffset.UtcDateTime" /> property is earlier than <see cref="F:System.DateTimeOffset.MinValue" /> or later than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified year, month, day, hour, minute, second, and offset.</summary>
      <param name="year">The year (1 through 9999).</param>
      <param name="month">The month (1 through 12).</param>
      <param name="day">The day (1 through the number of days in <paramref name="month" />).</param>
      <param name="hour">The hours (0 through 23).   </param>
      <param name="minute">The minutes (0 through 59).</param>
      <param name="second">The seconds (0 through 59).</param>
      <param name="offset">The time's offset from Coordinated Universal Time (UTC).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> does not represent whole minutes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than one or greater than 9999.-or-<paramref name="month" /> is less than one or greater than 12.-or-<paramref name="day" /> is less than one or greater than the number of days in <paramref name="month" />.-or-<paramref name="hour" /> is less than zero or greater than 23.-or-<paramref name="minute" /> is less than 0 or greater than 59.-or-<paramref name="second" /> is less than 0 or greater than 59.-or-<paramref name="offset" /> is less than -14 hours or greater than 14 hours.-or-The <see cref="P:System.DateTimeOffset.UtcDateTime" /> property is earlier than <see cref="F:System.DateTimeOffset.MinValue" /> or later than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified number of ticks and offset.</summary>
      <param name="ticks">A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.</param>
      <param name="offset">The time's offset from Coordinated Universal Time (UTC).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> is not specified in whole minutes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.DateTimeOffset.UtcDateTime" /> property is earlier than <see cref="F:System.DateTimeOffset.MinValue" /> or later than <see cref="F:System.DateTimeOffset.MaxValue" />.-or-<paramref name="ticks" /> is less than DateTimeOffset.MinValue.Ticks or greater than DateTimeOffset.MaxValue.Ticks.-or-<paramref name="Offset" /> s less than -14 hours or greater than 14 hours.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Add(System.TimeSpan)">
      <summary>Adds a specified time interval to a <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the time interval represented by <paramref name="timeSpan" />.</returns>
      <param name="timeSpan">A <see cref="T:System.TimeSpan" /> object that represents a positive or a negative time interval.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddDays(System.Double)">
      <summary>Adds a specified number of whole and fractional days to the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of days represented by <paramref name="days" />.</returns>
      <param name="days">A number of whole and fractional days. The number can be negative or positive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddHours(System.Double)">
      <summary>Adds a specified number of whole and fractional hours to the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of hours represented by <paramref name="hours" />.</returns>
      <param name="hours">A number of whole and fractional hours. The number can be negative or positive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMilliseconds(System.Double)">
      <summary>Adds a specified number of milliseconds to the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of whole milliseconds represented by <paramref name="milliseconds" />.</returns>
      <param name="milliseconds">A number of whole and fractional milliseconds. The number can be negative or positive.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMinutes(System.Double)">
      <summary>Adds a specified number of whole and fractional minutes to the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of minutes represented by <paramref name="minutes" />.</returns>
      <param name="minutes">A number of whole and fractional minutes. The number can be negative or positive.   </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMonths(System.Int32)">
      <summary>Adds a specified number of months to the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of months represented by <paramref name="months" />.</returns>
      <param name="months">A number of whole months. The number can be negative or positive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddSeconds(System.Double)">
      <summary>Adds a specified number of whole and fractional seconds to the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of seconds represented by <paramref name="seconds" />.</returns>
      <param name="seconds">A number of whole and fractional seconds. The number can be negative or positive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddTicks(System.Int64)">
      <summary>Adds a specified number of ticks to the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of ticks represented by <paramref name="ticks" />.</returns>
      <param name="ticks">A number of 100-nanosecond ticks. The number can be negative or positive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddYears(System.Int32)">
      <summary>Adds a specified number of years to the <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of seconds represented by <paramref name="years" />.</returns>
      <param name="years">A number of years. The number can be negative or positive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Compares two <see cref="T:System.DateTimeOffset" /> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.</summary>
      <returns>A signed integer that indicates whether the value of the <paramref name="first" /> parameter is earlier than, later than, or the same time as the value of the <paramref name="second" /> parameter, as the following table shows.Return valueMeaningLess than zero<paramref name="first" /> is earlier than <paramref name="second" />.Zero<paramref name="first" /> is equal to <paramref name="second" />.Greater than zero<paramref name="first" /> is later than <paramref name="second" />.</returns>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
    </member>
    <member name="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)">
      <summary>Compares the current <see cref="T:System.DateTimeOffset" /> object to a specified <see cref="T:System.DateTimeOffset" /> object and indicates whether the current object is earlier than, the same as, or later than the second <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>A signed integer that indicates the relationship between the current <see cref="T:System.DateTimeOffset" /> object and <paramref name="other" />, as the following table shows.Return ValueDescriptionLess than zeroThe current <see cref="T:System.DateTimeOffset" /> object is earlier than <paramref name="other" />.ZeroThe current <see cref="T:System.DateTimeOffset" /> object is the same as <paramref name="other" />.Greater than zero.The current <see cref="T:System.DateTimeOffset" /> object is later than <paramref name="other" />.</returns>
      <param name="other">An object to compare with the current <see cref="T:System.DateTimeOffset" /> object.</param>
    </member>
    <member name="P:System.DateTimeOffset.Date">
      <summary>Gets a <see cref="T:System.DateTime" /> value that represents the date component of the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that represents the date component of the current <see cref="T:System.DateTimeOffset" /> object.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DateTime">
      <summary>Gets a <see cref="T:System.DateTime" /> value that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The date and time of the current <see cref="T:System.DateTimeOffset" /> object.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Day">
      <summary>Gets the day of the month represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The day component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as a value between 1 and 31.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfWeek">
      <summary>Gets the day of the week represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>One of the enumeration values that indicates the day of the week of the current <see cref="T:System.DateTimeOffset" /> object.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfYear">
      <summary>Gets the day of the year represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The day of the year of the current <see cref="T:System.DateTimeOffset" /> object, expressed as a value between 1 and 366.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset)">
      <summary>Determines whether the current <see cref="T:System.DateTimeOffset" /> object represents the same point in time as a specified <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>true if both <see cref="T:System.DateTimeOffset" /> objects have the same <see cref="P:System.DateTimeOffset.UtcDateTime" /> value; otherwise, false.</returns>
      <param name="other">An object to compare to the current <see cref="T:System.DateTimeOffset" /> object.   </param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determines whether two specified <see cref="T:System.DateTimeOffset" /> objects represent the same point in time.</summary>
      <returns>true if the two <see cref="T:System.DateTimeOffset" /> objects have the same <see cref="P:System.DateTimeOffset.UtcDateTime" /> value; otherwise, false.</returns>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.Object)">
      <summary>Determines whether a <see cref="T:System.DateTimeOffset" /> object represents the same point in time as a specified object.</summary>
      <returns>true if the <paramref name="obj" /> parameter is a <see cref="T:System.DateTimeOffset" /> object and represents the same point in time as the current <see cref="T:System.DateTimeOffset" /> object; otherwise, false.</returns>
      <param name="obj">The object to compare to the current <see cref="T:System.DateTimeOffset" /> object.</param>
    </member>
    <member name="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)">
      <summary>Determines whether the current <see cref="T:System.DateTimeOffset" /> object represents the same time and has the same offset as a specified <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>true if the current <see cref="T:System.DateTimeOffset" /> object and <paramref name="other" /> have the same date and time value and the same <see cref="P:System.DateTimeOffset.Offset" /> value; otherwise, false.</returns>
      <param name="other">The object to compare to the current <see cref="T:System.DateTimeOffset" /> object. </param>
    </member>
    <member name="M:System.DateTimeOffset.FromFileTime(System.Int64)">
      <summary>Converts the specified Windows file time to an equivalent local time.</summary>
      <returns>An object that represents the date and time of <paramref name="fileTime" /> with the offset set to the local time offset.</returns>
      <param name="fileTime">A Windows file time, expressed in ticks.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="filetime" /> is less than zero.-or-<paramref name="filetime" /> is greater than DateTimeOffset.MaxValue.Ticks.</exception>
    </member>
    <member name="M:System.DateTimeOffset.GetHashCode">
      <summary>Returns the hash code for the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Hour">
      <summary>Gets the hour component of the time represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The hour component of the current <see cref="T:System.DateTimeOffset" /> object. This property uses a 24-hour clock; the value ranges from 0 to 23.</returns>
    </member>
    <member name="P:System.DateTimeOffset.LocalDateTime">
      <summary>Gets a <see cref="T:System.DateTime" /> value that represents the local date and time of the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The local date and time of the current <see cref="T:System.DateTimeOffset" /> object.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MaxValue">
      <summary>Represents the greatest possible value of <see cref="T:System.DateTimeOffset" />. This field is read-only.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="F:System.DateTime.MaxValue" /> is outside the range of the current or specified culture's default calendar.</exception>
    </member>
    <member name="P:System.DateTimeOffset.Millisecond">
      <summary>Gets the millisecond component of the time represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The millisecond component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as an integer between 0 and 999.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Minute">
      <summary>Gets the minute component of the time represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The minute component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as an integer between 0 and 59.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MinValue">
      <summary>Represents the earliest possible <see cref="T:System.DateTimeOffset" /> value. This field is read-only.</summary>
    </member>
    <member name="P:System.DateTimeOffset.Month">
      <summary>Gets the month component of the date represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The month component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as an integer between 1 and 12.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Now">
      <summary>Gets a <see cref="T:System.DateTimeOffset" /> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC).</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).</returns>
    </member>
    <member name="P:System.DateTimeOffset.Offset">
      <summary>Gets the time's offset from Coordinated Universal Time (UTC). </summary>
      <returns>The difference between the current <see cref="T:System.DateTimeOffset" /> object's time value and Coordinated Universal Time (UTC).</returns>
    </member>
    <member name="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)">
      <summary>Adds a specified time interval to a <see cref="T:System.DateTimeOffset" /> object that has a specified date and time, and yields a <see cref="T:System.DateTimeOffset" /> object that has new a date and time.</summary>
      <returns>An object whose value is the sum of the values of <paramref name="dateTimeTz" /> and <paramref name="timeSpan" />.</returns>
      <param name="dateTimeOffset">The object to add the time interval to.</param>
      <param name="timeSpan">The time interval to add.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determines whether two specified <see cref="T:System.DateTimeOffset" /> objects represent the same point in time.</summary>
      <returns>true if both <see cref="T:System.DateTimeOffset" /> objects have the same <see cref="P:System.DateTimeOffset.UtcDateTime" /> value; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determines whether one specified <see cref="T:System.DateTimeOffset" /> object is greater than (or later than) a second specified <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>true if the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="left" /> is later than the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determines whether one specified <see cref="T:System.DateTimeOffset" /> object is greater than or equal to a second specified <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>true if the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="left" /> is the same as or later than the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset">
      <summary>Defines an implicit conversion of a <see cref="T:System.DateTime" /> object to a <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The converted object.</returns>
      <param name="dateTime">The object to convert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <see cref="F:System.DateTimeOffset.MinValue" />.-or-The UTC date and time that results from applying the offset is later than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determines whether two specified <see cref="T:System.DateTimeOffset" /> objects refer to different points in time.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> do not have the same <see cref="P:System.DateTimeOffset.UtcDateTime" /> value; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determines whether one specified <see cref="T:System.DateTimeOffset" /> object is less than a second specified <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>true if the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="left" /> is earlier than the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Determines whether one specified <see cref="T:System.DateTimeOffset" /> object is less than a second specified <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>true if the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="left" /> is earlier than the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Subtracts one <see cref="T:System.DateTimeOffset" /> object from another and yields a time interval.</summary>
      <returns>An object that represents the difference between <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The minuend.   </param>
      <param name="right">The subtrahend.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)">
      <summary>Subtracts a specified time interval from a specified date and time, and yields a new date and time.</summary>
      <returns>An object that is equal to the value of <paramref name="dateTimeOffset" /> minus <paramref name="timeSpan" />.</returns>
      <param name="dateTimeOffset">The date and time object to subtract from.</param>
      <param name="timeSpan">The time interval to subtract.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" /> or greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String)">
      <summary>Converts the specified string representation of a date, time, and offset to its <see cref="T:System.DateTimeOffset" /> equivalent.</summary>
      <returns>An object that is equivalent to the date and time that is contained in <paramref name="input" />.</returns>
      <param name="input">A string that contains a date and time to convert.</param>
      <exception cref="T:System.ArgumentException">The offset is greater than 14 hours or less than -14 hours.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> does not contain a valid string representation of a date and time.-or-<paramref name="input" /> contains the string representation of an offset value without a date or time.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified culture-specific format information.</summary>
      <returns>An object that is equivalent to the date and time that is contained in <paramref name="input" />, as specified by <paramref name="formatProvider" />.</returns>
      <param name="input">A string that contains a date and time to convert.   </param>
      <param name="formatProvider">An object that provides culture-specific format information about <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">The offset is greater than 14 hours or less than -14 hours.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> does not contain a valid string representation of a date and time.-or-<paramref name="input" /> contains the string representation of an offset value without a date or time.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified culture-specific format information and formatting style.</summary>
      <returns>An object that is equivalent to the date and time that is contained in <paramref name="input" /> as specified by <paramref name="formatProvider" /> and <paramref name="styles" />.</returns>
      <param name="input">A string that contains a date and time to convert.   </param>
      <param name="formatProvider">An object that provides culture-specific format information about <paramref name="input" />.</param>
      <param name="styles">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.   </param>
      <exception cref="T:System.ArgumentException">The offset is greater than 14 hours or less than -14 hours.-or-<paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.-or-<paramref name="styles" /> includes an unsupported <see cref="T:System.Globalization.DateTimeStyles" /> value.-or-<paramref name="styles" /> includes <see cref="T:System.Globalization.DateTimeStyles" /> values that cannot be used together.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> does not contain a valid string representation of a date and time.-or-<paramref name="input" /> contains the string representation of an offset value without a date or time.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</summary>
      <returns>An object that is equivalent to the date and time that is contained in <paramref name="input" /> as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</returns>
      <param name="input">A string that contains a date and time to convert.</param>
      <param name="format">A format specifier that defines the expected format of <paramref name="input" />.</param>
      <param name="formatProvider">An object that supplies culture-specific formatting information about <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">The offset is greater than 14 hours or less than -14 hours.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.-or-<paramref name="format" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> is an empty string ("").-or-<paramref name="input" /> does not contain a valid string representation of a date and time.-or-<paramref name="format" /> is an empty string.-or-The hour component and the AM/PM designator in <paramref name="input" /> do not agree.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</summary>
      <returns>An object that is equivalent to the date and time that is contained in the <paramref name="input" /> parameter, as specified by the <paramref name="format" />, <paramref name="formatProvider" />, and <paramref name="styles" /> parameters.</returns>
      <param name="input">A string that contains a date and time to convert.</param>
      <param name="format">A format specifier that defines the expected format of <paramref name="input" />.</param>
      <param name="formatProvider">An object that supplies culture-specific formatting information about <paramref name="input" />.</param>
      <param name="styles">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">The offset is greater than 14 hours or less than -14 hours.-or-The <paramref name="styles" /> parameter includes an unsupported value.-or-The <paramref name="styles" /> parameter contains <see cref="T:System.Globalization.DateTimeStyles" /> values that cannot be used together.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.-or-<paramref name="format" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> is an empty string ("").-or-<paramref name="input" /> does not contain a valid string representation of a date and time.-or-<paramref name="format" /> is an empty string.-or-The hour component and the AM/PM designator in <paramref name="input" /> do not agree. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</summary>
      <returns>An object that is equivalent to the date and time that is contained in the <paramref name="input" /> parameter, as specified by the <paramref name="formats" />, <paramref name="formatProvider" />, and <paramref name="styles" /> parameters.</returns>
      <param name="input">A string that contains a date and time to convert.</param>
      <param name="formats">An array of format specifiers that define the expected formats of <paramref name="input" />.</param>
      <param name="formatProvider">An object that supplies culture-specific formatting information about <paramref name="input" />.</param>
      <param name="styles">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">The offset is greater than 14 hours or less than -14 hours.-or-<paramref name="styles" /> includes an unsupported value.-or-The <paramref name="styles" /> parameter contains <see cref="T:System.Globalization.DateTimeStyles" /> values that cannot be used together.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> is an empty string ("").-or-<paramref name="input" /> does not contain a valid string representation of a date and time.-or-No element of <paramref name="formats" /> contains a valid format specifier.-or-The hour component and the AM/PM designator in <paramref name="input" /> do not agree. </exception>
    </member>
    <member name="P:System.DateTimeOffset.Second">
      <summary>Gets the second component of the clock time represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The second component of the <see cref="T:System.DateTimeOffset" /> object, expressed as an integer value between 0 and 59.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)">
      <summary>Subtracts a <see cref="T:System.DateTimeOffset" /> value that represents a specific date and time from the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object that specifies the interval between the two <see cref="T:System.DateTimeOffset" /> objects.</returns>
      <param name="value">An object that represents the value to subtract. </param>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.TimeSpan)">
      <summary>Subtracts a specified time interval from the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>An object that is equal to the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object, minus the time interval represented by <paramref name="value" />.</returns>
      <param name="value">The time interval to subtract.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.-or- The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)">
      <summary>Compares the value of the current <see cref="T:System.DateTimeOffset" /> object with another object of the same type.</summary>
      <returns>A 32-bit signed integer that indicates whether the current <see cref="T:System.DateTimeOffset" /> object is less than, equal to, or greater than <paramref name="obj" />. The return values of the method are interpreted as follows:Return ValueDescriptionLess than zeroThe current <see cref="T:System.DateTimeOffset" /> object is less than (earlier than) <paramref name="obj" />.ZeroThe current <see cref="T:System.DateTimeOffset" /> object is equal to (the same point in time as) <paramref name="obj" />.Greater than zeroThe current <see cref="T:System.DateTimeOffset" /> object is greater than (later than) <paramref name="obj" />.</returns>
      <param name="obj">The object to compare with the current <see cref="T:System.DateTimeOffset" /> object.</param>
    </member>
    <member name="M:System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Runs when the deserialization of an object has been completed.</summary>
      <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
    </member>
    <member name="M:System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data required to serialize the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <param name="info">The object to populate with data.</param>
      <param name="context">The destination for this serialization (see <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null.</exception>
    </member>
    <member name="P:System.DateTimeOffset.Ticks">
      <summary>Gets the number of ticks that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object in clock time.</summary>
      <returns>The number of ticks in the <see cref="T:System.DateTimeOffset" /> object's clock time.</returns>
    </member>
    <member name="P:System.DateTimeOffset.TimeOfDay">
      <summary>Gets the time of day for the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The time interval of the current date that has elapsed since midnight.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToFileTime">
      <summary>Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to a Windows file time.</summary>
      <returns>The value of the current <see cref="T:System.DateTimeOffset" /> object, expressed as a Windows file time.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToLocalTime">
      <summary>Converts the current <see cref="T:System.DateTimeOffset" /> object to a <see cref="T:System.DateTimeOffset" /> object that represents the local time.</summary>
      <returns>An object that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object converted to local time.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToOffset(System.TimeSpan)">
      <summary>Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to the date and time specified by an offset value.</summary>
      <returns>An object that is equal to the original <see cref="T:System.DateTimeOffset" /> object (that is, their <see cref="M:System.DateTimeOffset.ToUniversalTime" /> methods return identical points in time) but whose <see cref="P:System.DateTimeOffset.Offset" /> property is set to <paramref name="offset" />.</returns>
      <param name="offset">The offset to convert the <see cref="T:System.DateTimeOffset" /> value to.   </param>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTimeOffset" /> object has a <see cref="P:System.DateTimeOffset.DateTime" /> value earlier than <see cref="F:System.DateTimeOffset.MinValue" />.-or-The resulting <see cref="T:System.DateTimeOffset" /> object has a <see cref="P:System.DateTimeOffset.DateTime" /> value later than <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than -14 hours.-or-<paramref name="offset" /> is greater than 14 hours.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString">
      <summary>Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation.</summary>
      <returns>A string representation of a <see cref="T:System.DateTimeOffset" /> object that includes the offset appended at the end of the string.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.IFormatProvider)">
      <summary>Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation using the specified culture-specific formatting information.</summary>
      <returns>A string representation of the value of the current <see cref="T:System.DateTimeOffset" /> object, as specified by <paramref name="formatProvider" />.</returns>
      <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String)">
      <summary>Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation using the specified format.</summary>
      <returns>A string representation of the value of the current <see cref="T:System.DateTimeOffset" /> object, as specified by <paramref name="format" />.</returns>
      <param name="format">A format string.</param>
      <exception cref="T:System.FormatException">The length of <paramref name="format" /> is one, and it is not one of the standard format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />. -or-<paramref name="format" /> does not contain a valid custom format pattern.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation using the specified format and culture-specific format information.</summary>
      <returns>A string representation of the value of the current <see cref="T:System.DateTimeOffset" /> object, as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A format string.</param>
      <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.FormatException">The length of <paramref name="format" /> is one, and it is not one of the standard format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.-or-<paramref name="format" /> does not contain a valid custom format pattern. </exception>
    </member>
    <member name="M:System.DateTimeOffset.ToUniversalTime">
      <summary>Converts the current <see cref="T:System.DateTimeOffset" /> object to a <see cref="T:System.DateTimeOffset" /> value that represents the Coordinated Universal Time (UTC).</summary>
      <returns>An object that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object converted to Coordinated Universal Time (UTC).</returns>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)">
      <summary>Tries to converts a specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent, and returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if the <paramref name="input" /> parameter is successfully converted; otherwise, false.</returns>
      <param name="input">A string that contains a date and time to convert.</param>
      <param name="result">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" />, if the conversion failed. The conversion fails if the <paramref name="input" /> parameter is null or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Tries to convert a specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent, and returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if the <paramref name="input" /> parameter is successfully converted; otherwise, false.</returns>
      <param name="input">A string that contains a date and time to convert.</param>
      <param name="formatProvider">An object that provides culture-specific formatting information about <paramref name="input" />.</param>
      <param name="styles">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />. </param>
      <param name="result">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> value equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" />, if the conversion failed. The conversion fails if the <paramref name="input" /> parameter is null or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> includes an undefined <see cref="T:System.Globalization.DateTimeStyles" /> value.-or-<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />  is not supported.-or-<paramref name="styles" /> includes mutually exclusive <see cref="T:System.Globalization.DateTimeStyles" /> values.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</summary>
      <returns>true if the <paramref name="input" /> parameter is successfully converted; otherwise, false.</returns>
      <param name="input">A string that contains a date and time to convert.</param>
      <param name="format">A format specifier that defines the required format of <paramref name="input" />.</param>
      <param name="formatProvider">An object that supplies culture-specific formatting information about <paramref name="input" />.</param>
      <param name="styles">A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is None.</param>
      <param name="result">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" />, if the conversion failed. The conversion fails if the <paramref name="input" /> parameter is null, or does not contain a valid string representation of a date and time in the expected format defined by <paramref name="format" /> and <paramref name="provider" />. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> includes an undefined <see cref="T:System.Globalization.DateTimeStyles" /> value.-or-<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />  is not supported.-or-<paramref name="styles" /> includes mutually exclusive <see cref="T:System.Globalization.DateTimeStyles" /> values.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</summary>
      <returns>true if the <paramref name="input" /> parameter is successfully converted; otherwise, false.</returns>
      <param name="input">A string that contains a date and time to convert.</param>
      <param name="formats">An array that defines the expected formats of <paramref name="input" />.</param>
      <param name="formatProvider">An object that supplies culture-specific formatting information about <paramref name="input" />.</param>
      <param name="styles">A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is None.</param>
      <param name="result">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" />, if the conversion failed. The conversion fails if the <paramref name="input" /> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <paramref name="format" />, or if <paramref name="formats" /> is null. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> includes an undefined <see cref="T:System.Globalization.DateTimeStyles" /> value.-or-<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />  is not supported.-or-<paramref name="styles" /> includes mutually exclusive <see cref="T:System.Globalization.DateTimeStyles" /> values.</exception>
    </member>
    <member name="P:System.DateTimeOffset.UtcDateTime">
      <summary>Gets a <see cref="T:System.DateTime" /> value that represents the Coordinated Universal Time (UTC) date and time of the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The Coordinated Universal Time (UTC) date and time of the current <see cref="T:System.DateTimeOffset" /> object.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcNow">
      <summary>Gets a <see cref="T:System.DateTimeOffset" /> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <see cref="F:System.TimeSpan.Zero" />.</summary>
      <returns>An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <see cref="F:System.TimeSpan.Zero" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcTicks">
      <summary>Gets the number of ticks that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object in Coordinated Universal Time (UTC).</summary>
      <returns>The number of ticks in the <see cref="T:System.DateTimeOffset" /> object's Coordinated Universal Time (UTC).</returns>
    </member>
    <member name="P:System.DateTimeOffset.Year">
      <summary>Gets the year component of the date represented by the current <see cref="T:System.DateTimeOffset" /> object.</summary>
      <returns>The year component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as an integer value between 0 and 9999.</returns>
    </member>
    <member name="T:System.DayOfWeek">
      <summary>Specifies the day of the week.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DayOfWeek.Sunday">
      <summary>Indicates Sunday.</summary>
    </member>
    <member name="F:System.DayOfWeek.Monday">
      <summary>Indicates Monday.</summary>
    </member>
    <member name="F:System.DayOfWeek.Tuesday">
      <summary>Indicates Tuesday.</summary>
    </member>
    <member name="F:System.DayOfWeek.Wednesday">
      <summary>Indicates Wednesday.</summary>
    </member>
    <member name="F:System.DayOfWeek.Thursday">
      <summary>Indicates Thursday.</summary>
    </member>
    <member name="F:System.DayOfWeek.Friday">
      <summary>Indicates Friday.</summary>
    </member>
    <member name="F:System.DayOfWeek.Saturday">
      <summary>Indicates Saturday.</summary>
    </member>
    <member name="T:System.DBNull">
      <summary>Represents a nonexistent value. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DBNull.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.DBNull" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing information required to serialize the <see cref="T:System.DBNull" /> object. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.DBNull" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DBNull.GetTypeCode">
      <summary>Gets the <see cref="T:System.TypeCode" /> value for <see cref="T:System.DBNull" />.</summary>
      <returns>The <see cref="T:System.TypeCode" /> value for <see cref="T:System.DBNull" />, which is <see cref="F:System.TypeCode.DBNull" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Converts the current <see cref="T:System.DBNull" /> object to the specified type.</summary>
      <returns>The boxed equivalent of the current <see cref="T:System.DBNull" /> object, if that conversion is supported; otherwise, an exception is thrown and no value is returned. </returns>
      <param name="type">The type to convert the current <see cref="T:System.DBNull" /> object to. </param>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface and is used to augment the conversion. If null is specified, format information is obtained from the current culture. </param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to make this conversion throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>None. The return value for this member is not used.</returns>
      <param name="provider">An object that implements the <see cref="T:System.IFormatProvider" /> interface. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.InvalidCastException">This conversion is not supported for the <see cref="T:System.DBNull" /> type.</exception>
    </member>
    <member name="M:System.DBNull.ToString">
      <summary>Returns an empty string (<see cref="F:System.String.Empty" />).</summary>
      <returns>An empty string (<see cref="F:System.String.Empty" />).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DBNull.ToString(System.IFormatProvider)">
      <summary>Returns an empty string using the specified <see cref="T:System.IFormatProvider" />.</summary>
      <returns>An empty string (<see cref="F:System.String.Empty" />).</returns>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to be used to format the return value.-or- null to obtain the format information from the current locale setting of the operating system. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DBNull.Value">
      <summary>Represents the sole instance of the <see cref="T:System.DBNull" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Decimal">
      <summary>Represents a decimal number.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.#ctor(System.Double)">
      <summary>Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified double-precision floating-point number.</summary>
      <param name="value">The value to represent as a <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32)">
      <summary>Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit signed integer.</summary>
      <param name="value">The value to represent as a <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
      <summary>Initializes a new instance of <see cref="T:System.Decimal" /> from parameters specifying the instance's constituent parts.</summary>
      <param name="lo">The low 32 bits of a 96-bit integer. </param>
      <param name="mid">The middle 32 bits of a 96-bit integer. </param>
      <param name="hi">The high 32 bits of a 96-bit integer. </param>
      <param name="isNegative">The sign of the number; 1 is negative, 0 is positive. </param>
      <param name="scale">A power of 10 ranging from 0 to 28. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> is greater than 28. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32[])">
      <summary>Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in a specified array.</summary>
      <param name="bits">An array of 32-bit signed integers containing a representation of a decimal value. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bits" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The length of the <paramref name="bits" /> is not 4.-or- The representation of the decimal value in <paramref name="bits" /> is not valid. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int64)">
      <summary>Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit signed integer.</summary>
      <param name="value">The value to represent as a <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Single)">
      <summary>Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified single-precision floating-point number.</summary>
      <param name="value">The value to represent as a <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt32)">
      <summary>Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit unsigned integer.</summary>
      <param name="value">The value to represent as a <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt64)">
      <summary>Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit unsigned integer.</summary>
      <param name="value">The value to represent as a <see cref="T:System.Decimal" />. </param>
    </member>
    <member name="M:System.Decimal.Add(System.Decimal,System.Decimal)">
      <summary>Adds two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>A <see cref="T:System.Decimal" /> value that is the sum of <paramref name="d1" /> and <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Ceiling(System.Decimal)">
      <summary>Returns the smallest integral value that is greater than or equal to the specified decimal number.</summary>
      <returns>The smallest integral value that is greater than or equal to the <paramref name="d" /> parameter. Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</returns>
      <param name="d">A decimal number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
      <summary>Compares two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>A signed number indicating the relative values of <paramref name="d1" /> and <paramref name="d2" />.Return Value Meaning Less than zero <paramref name="d1" /> is less than <paramref name="d2" />. Zero <paramref name="d1" /> and <paramref name="d2" /> are equal. Greater than zero <paramref name="d1" /> is greater than <paramref name="d2" />. </returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Decimal)">
      <summary>Compares this instance to a specified <see cref="T:System.Decimal" /> object.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Meaning Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">A <see cref="T:System.Decimal" /> object.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Object)">
      <summary>Compares this instance to a specified <see cref="T:System.Object" />.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Meaning Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />.-or- <paramref name="value" /> is null. </returns>
      <param name="value">An <see cref="T:System.Object" /> or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Decimal" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
      <summary>Divides two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>The <see cref="T:System.Decimal" /> that is the result of dividing <paramref name="d1" /> by <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" /> (the dividend). </param>
      <param name="d2">A <see cref="T:System.Decimal" /> (the divisor). </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal)">
      <summary>Returns a value indicating whether this instance and a specified <see cref="T:System.Decimal" /> object represent the same value.</summary>
      <returns>true if <paramref name="value" /> is equal to this instance; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
      <summary>Returns a value indicating whether two specified instances of <see cref="T:System.Decimal" /> represent the same value.</summary>
      <returns>true if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance and a specified <see cref="T:System.Object" /> represent the same type and value.</summary>
      <returns>true if <paramref name="value" /> is a <see cref="T:System.Decimal" /> and equal to this instance; otherwise, false.</returns>
      <param name="value">An <see cref="T:System.Object" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Floor(System.Decimal)">
      <summary>Rounds a specified <see cref="T:System.Decimal" /> number to the closest integer toward negative infinity.</summary>
      <returns>If <paramref name="d" /> has a fractional part, the next whole <see cref="T:System.Decimal" /> number toward negative infinity that is less than <paramref name="d" />.-or- If <paramref name="d" /> doesn't have a fractional part, <paramref name="d" /> is returned unchanged.</returns>
      <param name="d">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.FromOACurrency(System.Int64)">
      <summary>Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <see cref="T:System.Decimal" /> value.</summary>
      <returns>A <see cref="T:System.Decimal" /> that contains the equivalent of <paramref name="cy" />.</returns>
      <param name="cy">An OLE Automation Currency value. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetBits(System.Decimal)">
      <summary>Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</summary>
      <returns>A 32-bit signed integer array with four elements that contain the binary representation of <paramref name="d" />.</returns>
      <param name="d">A <see cref="T:System.Decimal" /> value. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Decimal" />.</summary>
      <returns>The enumerated constant <see cref="F:System.TypeCode.Decimal" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Decimal.MaxValue">
      <summary>Represents the largest possible value of <see cref="T:System.Decimal" />. This field is constant and read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinusOne">
      <summary>Represents the number negative one (-1).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinValue">
      <summary>Represents the smallest possible value of <see cref="T:System.Decimal" />. This field is constant and read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
      <summary>Multiplies two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>A <see cref="T:System.Decimal" /> that is the result of multiplying <paramref name="d1" /> and <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" /> (the multiplicand). </param>
      <param name="d2">A <see cref="T:System.Decimal" /> (the multiplier). </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Negate(System.Decimal)">
      <summary>Returns the result of multiplying the specified <see cref="T:System.Decimal" /> value by negative one.</summary>
      <returns>A <see cref="T:System.Decimal" /> with the value of <paramref name="d" />, but the opposite sign.-or- Zero, if <paramref name="d" /> is zero.</returns>
      <param name="d">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.One">
      <summary>Represents the number one (1).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
      <summary>Adds two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>The <see cref="T:System.Decimal" /> result of adding <paramref name="d1" /> and <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Decrement(System.Decimal)">
      <summary>Decrements the <see cref="T:System.Decimal" /> operand by one.</summary>
      <returns>The value of <paramref name="d" /> decremented by 1.</returns>
      <param name="d">The <see cref="T:System.Decimal" /> operand. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
      <summary>Divides two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>The <see cref="T:System.Decimal" /> result of <paramref name="d1" /> by <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" /> (the dividend). </param>
      <param name="d2">A <see cref="T:System.Decimal" /> (the divisor). </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> are equal.</summary>
      <returns>true if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
      <summary>Converts a <see cref="T:System.Decimal" /> to an 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
      <summary>Converts a <see cref="T:System.Decimal" /> to a 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
      <summary>Converts a <see cref="T:System.Decimal" /> to an 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
      <summary>Converts a <see cref="T:System.Decimal" /> to a 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
      <summary>Converts a <see cref="T:System.Decimal" /> to a single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
      <summary>Converts a <see cref="T:System.Decimal" /> to a double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
      <summary>Converts a <see cref="T:System.Decimal" /> to a Unicode character.</summary>
      <returns>A Unicode character that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
      <summary>Converts a <see cref="T:System.Decimal" /> to a 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
      <summary>Converts a <see cref="T:System.Decimal" /> to a 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
      <summary>Converts a <see cref="T:System.Decimal" /> to a 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
      <summary>Converts a <see cref="T:System.Decimal" /> to a 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
      <summary>Converts a double-precision floating-point number to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted double-precision floating point number.</returns>
      <param name="value">A double-precision floating-point number. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
      <summary>Converts a single-precision floating-point number to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted single-precision floating point number.</returns>
      <param name="value">A single-precision floating-point number. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.-or- <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
      <summary>Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than another specified <see cref="T:System.Decimal" />.</summary>
      <returns>true if <paramref name="d1" /> is greater than <paramref name="d2" />; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than or equal to another specified <see cref="T:System.Decimal" />.</summary>
      <returns>true if <paramref name="d1" /> is greater than or equal to <paramref name="d2" />; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
      <summary>Converts an 8-bit unsigned integer to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted 8-bit unsigned integer.</returns>
      <param name="value">An 8-bit unsigned integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
      <summary>Converts a Unicode character to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted Unicode character.</returns>
      <param name="value">A Unicode character. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
      <summary>Converts a 16-bit signed integer to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted 16-bit signed integer.</returns>
      <param name="value">A 16-bit signed integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
      <summary>Converts a 32-bit signed integer to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted 32-bit signed integer.</returns>
      <param name="value">A 32-bit signed integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
      <summary>Converts a 64-bit signed integer to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted 64-bit signed integer.</returns>
      <param name="value">A 64-bit signed integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
      <summary>Converts an 8-bit signed integer to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted 8-bit signed integer.</returns>
      <param name="value">An 8-bit signed integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
      <summary>Converts a 16-bit unsigned integer to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted 16-bit unsigned integer.</returns>
      <param name="value">A 16-bit unsigned integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
      <summary>Converts a 32-bit unsigned integer to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted 32-bit unsigned integer.</returns>
      <param name="value">A 32-bit unsigned integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
      <summary>Converts a 64-bit unsigned integer to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that represents the converted 64-bit unsigned integer.</returns>
      <param name="value">A 64-bit unsigned integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Increment(System.Decimal)">
      <summary>Increments the <see cref="T:System.Decimal" /> operand by 1.</summary>
      <returns>The value of <paramref name="d" /> incremented by 1.</returns>
      <param name="d">The <see cref="T:System.Decimal" /> operand. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> are not equal.</summary>
      <returns>true if <paramref name="d1" /> and <paramref name="d2" /> are not equal; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
      <summary>Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than another specified <see cref="T:System.Decimal" />.</summary>
      <returns>true if <paramref name="d1" /> is less than <paramref name="d2" />; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than or equal to another specified <see cref="T:System.Decimal" />.</summary>
      <returns>true if <paramref name="d1" /> is less than or equal to <paramref name="d2" />; otherwise, false.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
      <summary>Returns the remainder resulting from dividing two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>The <see cref="T:System.Decimal" /> remainder resulting from dividing <paramref name="d1" /> by <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" /> (the dividend). </param>
      <param name="d2">A <see cref="T:System.Decimal" /> (the divisor). </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
      <summary>Multiplies two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>The <see cref="T:System.Decimal" /> result of multiplying <paramref name="d1" /> by <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
      <summary>Subtracts two specified <see cref="T:System.Decimal" /> values.</summary>
      <returns>The <see cref="T:System.Decimal" /> result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" />. </param>
      <param name="d2">A <see cref="T:System.Decimal" />. </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryNegation(System.Decimal)">
      <summary>Negates the value of the specified <see cref="T:System.Decimal" /> operand.</summary>
      <returns>The result of <paramref name="d" /> multiplied by negative one (-1).</returns>
      <param name="d">The <see cref="T:System.Decimal" /> operand. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryPlus(System.Decimal)">
      <summary>Returns the value of the <see cref="T:System.Decimal" /> operand (the sign of the operand is unchanged).</summary>
      <returns>The value of the operand, <paramref name="d" />.</returns>
      <param name="d">The <see cref="T:System.Decimal" /> operand. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String)">
      <summary>Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</summary>
      <returns>The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" />.</returns>
      <param name="s">The string representation of the number to convert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converts the string representation of a number in a specified style to its <see cref="T:System.Decimal" /> equivalent.</summary>
      <returns>The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" />.</returns>
      <param name="s">The string representation of the number to convert. </param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</summary>
      <returns>The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</returns>
      <param name="s">The string representation of the number to convert. </param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <paramref name="s" />. </param>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified culture-specific format information.</summary>
      <returns>The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="provider" />.</returns>
      <param name="s">The string representation of the number to convert. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
      <summary>Computes the remainder after dividing two <see cref="T:System.Decimal" /> values.</summary>
      <returns>The <see cref="T:System.Decimal" /> that is the remainder after dividing <paramref name="d1" /> by <paramref name="d2" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" /> (the dividend). </param>
      <param name="d2">A <see cref="T:System.Decimal" /> (the divisor). </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="d2" /> is zero. </exception>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Round(System.Decimal)">
      <summary>Rounds a decimal value to the nearest integer.</summary>
      <returns>The integer that is nearest to the <paramref name="d" /> parameter. If <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</returns>
      <param name="d">A decimal number to round. </param>
      <exception cref="T:System.OverflowException">The result is outside the range of a <see cref="T:System.Decimal" /> object.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Round(System.Decimal,System.Int32)">
      <summary>Rounds a <see cref="T:System.Decimal" /> value to a specified number of decimal places.</summary>
      <returns>The <see cref="T:System.Decimal" /> number equivalent to <paramref name="d" /> rounded to <paramref name="decimals" /> number of decimal places.</returns>
      <param name="d">A <see cref="T:System.Decimal" /> value to round. </param>
      <param name="decimals">A value from 0 to 28 that specifies the number of decimal places to round to. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> is not a value from 0 to 28. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
      <summary>Rounds a decimal value to a specified precision. A parameter specifies how to round the value if it is midway between two other numbers.</summary>
      <returns>The number that is nearest to the <paramref name="d" /> parameter with a precision equal to the <paramref name="decimals" /> parameter. If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned. If the precision of <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</returns>
      <param name="d">A decimal number to round. </param>
      <param name="decimals">The number of significant decimal places (precision) in the return value. </param>
      <param name="mode">A value that specifies how to round <paramref name="d" /> if it is midway between two other numbers.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> is less than 0 or greater than 28. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</exception>
      <exception cref="T:System.OverflowException">The result is outside the range of a <see cref="T:System.Decimal" /> object.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
      <summary>Rounds a decimal value to the nearest integer. A parameter specifies how to round the value if it is midway between two other numbers.</summary>
      <returns>The integer that is nearest to the <paramref name="d" /> parameter. If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned. </returns>
      <param name="d">A decimal number to round. </param>
      <param name="mode">A value that specifies how to round <paramref name="d" /> if it is midway between two other numbers.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</exception>
      <exception cref="T:System.OverflowException">The result is outside the range of a <see cref="T:System.Decimal" /> object.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
      <summary>Subtracts one specified <see cref="T:System.Decimal" /> value from another.</summary>
      <returns>The <see cref="T:System.Decimal" /> result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</returns>
      <param name="d1">A <see cref="T:System.Decimal" /> (the minuend). </param>
      <param name="d2">A <see cref="T:System.Decimal" /> (the subtrahend). </param>
      <exception cref="T:System.OverflowException">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</summary>
      <returns>true if the value of the current instance is not zero; otherwise, false.</returns>
      <param name="provider">This parameter is ignored. </param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Byte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, unchanged.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Double" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Int16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Int32" />.</returns>
      <param name="provider">The parameter is ignored.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Int64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.SByte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Single" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <paramref name="type" />.</returns>
      <param name="type">The type to which to convert the value of this <see cref="T:System.Decimal" /> instance. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null. </exception>
      <exception cref="T:System.InvalidCastException">The requested type conversion is not supported. </exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.OverflowException">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Runs when the deserialization of an object has been completed.</summary>
      <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Decimal" /> object contains invalid or corrupted data.</exception>
    </member>
    <member name="M:System.Decimal.ToByte(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit unsigned integer.</summary>
      <returns>An 8-bit unsigned integer equivalent to <paramref name="value" />.</returns>
      <param name="value">The <see cref="T:System.Decimal" /> value. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToDouble(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number equivalent to <paramref name="d" />.</returns>
      <param name="d">The <see cref="T:System.Decimal" /> value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt16(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer equivalent to <paramref name="value" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> value. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt32(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer equivalent to the value of <paramref name="d" />.</returns>
      <param name="d">The <see cref="T:System.Decimal" /> value to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt64(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer equivalent to the value of <paramref name="d" />.</returns>
      <param name="d">The <see cref="T:System.Decimal" /> value to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToOACurrency(System.Decimal)">
      <summary>Converts the specified <see cref="T:System.Decimal" /> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer that contains the OLE Automation equivalent of <paramref name="value" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> value. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSByte(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer equivalent to <paramref name="value" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> value. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSingle(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number equivalent to the value of <paramref name="d" />.</returns>
      <param name="d">A <see cref="T:System.Decimal" /> value to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString">
      <summary>Converts the numeric value of this instance to its equivalent string representation.</summary>
      <returns>A string that represents the value of this instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="provider" />.</returns>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String)">
      <summary>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" />.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A numeric format string</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt16(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit unsigned integer.</summary>
      <returns>A 16-bit unsigned integer equivalent to the value of <paramref name="value" />.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> value to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt32(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit unsigned integer.</summary>
      <returns>A 32-bit unsigned integer equivalent to the value of <paramref name="d" />.</returns>
      <param name="d">A <see cref="T:System.Decimal" /> value to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt64(System.Decimal)">
      <summary>Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit unsigned integer.</summary>
      <returns>A 64-bit unsigned integer equivalent to the value of <paramref name="d" />.</returns>
      <param name="d">A <see cref="T:System.Decimal" /> value to convert. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Truncate(System.Decimal)">
      <summary>Returns the integral digits of the specified <see cref="T:System.Decimal" />; any fractional digits are discarded.</summary>
      <returns>The <see cref="T:System.Decimal" /> result of <paramref name="d" /> rounded toward zero, to the nearest whole number.</returns>
      <param name="d">A <see cref="T:System.Decimal" /> to truncate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Decimal@)">
      <summary>Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">The string representation of the number to convert.</param>
      <param name="result">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or is zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not a number in a valid format, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. This parameter is passed uninitialized. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
      <summary>Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">The string representation of the number to convert.</param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific parsing information about <paramref name="s" />. </param>
      <param name="result">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or is zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.Zero">
      <summary>Represents the number zero (0).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Delegate">
      <summary>Represents a delegate, which is a data structure that refers to a static method or to a class instance and an instance method of that class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.#ctor(System.Object,System.String)">
      <summary>Initializes a delegate that invokes the specified instance method on the specified class instance.</summary>
      <param name="target">The class instance on which the delegate invokes <paramref name="method" />. </param>
      <param name="method">The name of the instance method that the delegate represents. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">There was an error binding to the target method.</exception>
    </member>
    <member name="M:System.Delegate.#ctor(System.Type,System.String)">
      <summary>Initializes a delegate that invokes the specified static method from the specified class.</summary>
      <param name="target">The <see cref="T:System.Type" /> representing the class that defines <paramref name="method" />. </param>
      <param name="method">The name of the static method that the delegate represents. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a RuntimeType. See Runtime Types in Reflection.-or-<paramref name="target" /> represents an open generic type.</exception>
    </member>
    <member name="M:System.Delegate.Clone">
      <summary>Creates a shallow copy of the delegate.</summary>
      <returns>A shallow copy of the delegate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate,System.Delegate)">
      <summary>Concatenates the invocation lists of two delegates.</summary>
      <returns>A new delegate with an invocation list that concatenates the invocation lists of <paramref name="a" /> and <paramref name="b" /> in that order. Returns <paramref name="a" /> if <paramref name="b" /> is null, returns <paramref name="b" /> if <paramref name="a" /> is a null reference, and returns a null reference if both <paramref name="a" /> and <paramref name="b" /> are null references.</returns>
      <param name="a">The delegate whose invocation list comes first. </param>
      <param name="b">The delegate whose invocation list comes last. </param>
      <exception cref="T:System.ArgumentException">Both <paramref name="a" /> and <paramref name="b" /> are not null, and <paramref name="a" /> and <paramref name="b" /> are not instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate[])">
      <summary>Concatenates the invocation lists of an array of delegates.</summary>
      <returns>A new delegate with an invocation list that concatenates the invocation lists of the delegates in the <paramref name="delegates" /> array. Returns null if <paramref name="delegates" /> is null, if <paramref name="delegates" /> contains zero elements, or if every entry in <paramref name="delegates" /> is null.</returns>
      <param name="delegates">The array of delegates to combine. </param>
      <exception cref="T:System.ArgumentException">Not all the non-null entries in <paramref name="delegates" /> are instances of the same delegate type. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.CombineImpl(System.Delegate)">
      <summary>Concatenates the invocation lists of the specified multicast (combinable) delegate and the current multicast (combinable) delegate.</summary>
      <returns>A new multicast (combinable) delegate with an invocation list that concatenates the invocation list of the current multicast (combinable) delegate and the invocation list of <paramref name="d" />, or the current multicast (combinable) delegate if <paramref name="d" /> is null.</returns>
      <param name="d">The multicast (combinable) delegate whose invocation list to append to the end of the invocation list of the current multicast (combinable) delegate. </param>
      <exception cref="T:System.MulticastNotSupportedException">Always thrown. </exception>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)">
      <summary>Creates a delegate of the specified type that represents the specified static or instance method, with the specified first argument.</summary>
      <returns>A delegate of the specified type that represents the specified static or instance method. </returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="firstArgument">The object to which the delegate is bound, or null to treat <paramref name="method" /> as static (Shared in Visual Basic). </param>
      <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> describing the static or instance method the delegate is to represent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or-<paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection. -or-<paramref name="method" /> cannot be bound.-or-<paramref name="method" /> is not a RuntimeMethodInfo. See Runtime Types in Reflection.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)">
      <summary>Creates a delegate of the specified type that represents the specified static or instance method, with the specified first argument and the specified behavior on failure to bind.</summary>
      <returns>A delegate of the specified type that represents the specified static or instance method, or null if <paramref name="throwOnBindFailure" /> is false and the delegate cannot be bound to <paramref name="method" />. </returns>
      <param name="type">A <see cref="T:System.Type" /> representing the type of delegate to create. </param>
      <param name="firstArgument">An <see cref="T:System.Object" /> that is the first argument of the method the delegate represents. For instance methods, it must be compatible with the instance type. </param>
      <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> describing the static or instance method the delegate is to represent.</param>
      <param name="throwOnBindFailure">true to throw an exception if <paramref name="method" /> cannot be bound; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or-<paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection. -or-<paramref name="method" /> cannot be bound, and <paramref name="throwOnBindFailure" /> is true.-or-<paramref name="method" /> is not a RuntimeMethodInfo. See Runtime Types in Reflection.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String)">
      <summary>Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance.</summary>
      <returns>A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.</returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="target">The class instance on which <paramref name="method" /> is invoked. </param>
      <param name="method">The name of the instance method that the delegate is to represent. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="target" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />. -or-<paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection.-or- <paramref name="method" /> is not an instance method. -or-<paramref name="method" /> cannot be bound, for example because it cannot be found.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)">
      <summary>Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance with the specified case-sensitivity.</summary>
      <returns>A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.</returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="target">The class instance on which <paramref name="method" /> is invoked. </param>
      <param name="method">The name of the instance method that the delegate is to represent. </param>
      <param name="ignoreCase">A Boolean indicating whether to ignore the case when comparing the name of the method. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="target" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or-<paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection.-or- <paramref name="method" /> is not an instance method. -or-<paramref name="method" /> cannot be bound, for example because it cannot be found.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)">
      <summary>Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance, with the specified case-sensitivity and the specified behavior on failure to bind.</summary>
      <returns>A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.</returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="target">The class instance on which <paramref name="method" /> is invoked. </param>
      <param name="method">The name of the instance method that the delegate is to represent. </param>
      <param name="ignoreCase">A Boolean indicating whether to ignore the case when comparing the name of the method. </param>
      <param name="throwOnBindFailure">true to throw an exception if <paramref name="method" /> cannot be bound; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="target" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or-<paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection. -or-  <paramref name="method" /> is not an instance method. -or-<paramref name="method" /> cannot be bound, for example because it cannot be found, and <paramref name="throwOnBindFailure" /> is true.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)">
      <summary>Creates a delegate of the specified type to represent the specified static method.</summary>
      <returns>A delegate of the specified type to represent the specified static method.</returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> describing the static or instance method the delegate is to represent. Only static methods are supported in the .NET Framework version 1.0 and 1.1.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or-<paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection. -or- <paramref name="method" /> is not a static method, and the .NET Framework version is 1.0 or 1.1. -or-<paramref name="method" /> cannot be bound.-or-<paramref name="method" /> is not a RuntimeMethodInfo. See Runtime Types in Reflection.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)">
      <summary>Creates a delegate of the specified type to represent the specified static method, with the specified behavior on failure to bind.</summary>
      <returns>A delegate of the specified type to represent the specified static method.</returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> describing the static or instance method the delegate is to represent.</param>
      <param name="throwOnBindFailure">true to throw an exception if <paramref name="method" /> cannot be bound; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or-<paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection. -or-<paramref name="method" /> cannot be bound, and <paramref name="throwOnBindFailure" /> is true.-or-<paramref name="method" /> is not a RuntimeMethodInfo. See Runtime Types in Reflection.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String)">
      <summary>Creates a delegate of the specified type that represents the specified static method of the specified class.</summary>
      <returns>A delegate of the specified type that represents the specified static method of the specified class.</returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="target">The <see cref="T:System.Type" /> representing the class that implements <paramref name="method" />. </param>
      <param name="method">The name of the static method that the delegate is to represent. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="target" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or- <paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection. -or-<paramref name="target" /> is not a RuntimeType.-or-<paramref name="target" /> is an open generic type. That is, its <see cref="P:System.Type.ContainsGenericParameters" /> property is true.-or-<paramref name="method" /> is not a static method (Shared method in Visual Basic). -or-<paramref name="method" /> cannot be bound, for example because it cannot be found, and <paramref name="throwOnBindFailure" /> is true.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)">
      <summary>Creates a delegate of the specified type that represents the specified static method of the specified class, with the specified case-sensitivity.</summary>
      <returns>A delegate of the specified type that represents the specified static method of the specified class.</returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="target">The <see cref="T:System.Type" /> representing the class that implements <paramref name="method" />. </param>
      <param name="method">The name of the static method that the delegate is to represent. </param>
      <param name="ignoreCase">A Boolean indicating whether to ignore the case when comparing the name of the method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="target" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or- <paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection. -or-<paramref name="target" /> is not a RuntimeType.-or-<paramref name="target" /> is an open generic type. That is, its <see cref="P:System.Type.ContainsGenericParameters" /> property is true.-or-<paramref name="method" /> is not a static method (Shared method in Visual Basic). -or-<paramref name="method" /> cannot be bound, for example because it cannot be found.</exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)">
      <summary>Creates a delegate of the specified type that represents the specified static method of the specified class, with the specified case-sensitivity and the specified behavior on failure to bind.</summary>
      <returns>A delegate of the specified type that represents the specified static method of the specified class.</returns>
      <param name="type">The <see cref="T:System.Type" /> of delegate to create. </param>
      <param name="target">The <see cref="T:System.Type" /> representing the class that implements <paramref name="method" />. </param>
      <param name="method">The name of the static method that the delegate is to represent. </param>
      <param name="ignoreCase">A Boolean indicating whether to ignore the case when comparing the name of the method.</param>
      <param name="throwOnBindFailure">true to throw an exception if <paramref name="method" /> cannot be bound; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.-or- <paramref name="target" /> is null.-or- <paramref name="method" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.-or- <paramref name="type" /> is not a RuntimeType. See Runtime Types in Reflection. -or-<paramref name="target" /> is not a RuntimeType.-or-<paramref name="target" /> is an open generic type. That is, its <see cref="P:System.Type.ContainsGenericParameters" /> property is true.-or-<paramref name="method" /> is not a static method (Shared method in Visual Basic). -or-<paramref name="method" /> cannot be bound, for example because it cannot be found, and <paramref name="throwOnBindFailure" /> is true. </exception>
      <exception cref="T:System.MissingMethodException">The Invoke method of <paramref name="type" /> is not found. </exception>
      <exception cref="T:System.MethodAccessException">The caller does not have the permissions necessary to access <paramref name="method" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Delegate.DynamicInvoke(System.Object[])">
      <summary>Dynamically invokes (late-bound) the method represented by the current delegate.</summary>
      <returns>The object returned by the method represented by the delegate.</returns>
      <param name="args">An array of objects that are the arguments to pass to the method represented by the current delegate.-or- null, if the method represented by the current delegate does not require arguments. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in <paramref name="args" /> is invalid. </exception>
      <exception cref="T:System.Reflection.TargetException">The method represented by the delegate is an instance method and the target object is null.-or- The method represented by the delegate is invoked on an object or a class that does not support it. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">One of the encapsulated methods throws an exception. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.DynamicInvokeImpl(System.Object[])">
      <summary>Dynamically invokes (late-bound) the method represented by the current delegate.</summary>
      <returns>The object returned by the method represented by the delegate.</returns>
      <param name="args">An array of objects that are the arguments to pass to the method represented by the current delegate.-or- null, if the method represented by the current delegate does not require arguments. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in <paramref name="args" /> is invalid. </exception>
      <exception cref="T:System.Reflection.TargetException">The method represented by the delegate is an instance method and the target object is null.-or- The method represented by the delegate is invoked on an object or a class that does not support it. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">One of the encapsulated methods throws an exception. </exception>
    </member>
    <member name="M:System.Delegate.Equals(System.Object)">
      <summary>Determines whether the specified object and the current delegate are of the same type and share the same targets, methods, and invocation list.</summary>
      <returns>true if <paramref name="obj" /> and the current delegate have the same targets, methods, and invocation list; otherwise, false.</returns>
      <param name="obj">The object to compare with the current delegate. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetHashCode">
      <summary>Returns a hash code for the delegate.</summary>
      <returns>A hash code for the delegate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetInvocationList">
      <summary>Returns the invocation list of the delegate.</summary>
      <returns>An array of delegates representing the invocation list of the current delegate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetMethodImpl">
      <summary>Gets the static method represented by the current delegate.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> describing the static method represented by the current delegate.</returns>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
    </member>
    <member name="M:System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Not supported.</summary>
      <param name="info">Not supported. </param>
      <param name="context">Not supported. </param>
      <exception cref="T:System.NotSupportedException">This method is not supported.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Delegate.Method">
      <summary>Gets the method represented by the delegate.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> describing the method represented by the delegate.</returns>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Equality(System.Delegate,System.Delegate)">
      <summary>Determines whether the specified delegates are equal.</summary>
      <returns>true if <paramref name="d1" /> is equal to <paramref name="d2" />; otherwise, false.</returns>
      <param name="d1">The first delegate to compare. </param>
      <param name="d2">The second delegate to compare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Inequality(System.Delegate,System.Delegate)">
      <summary>Determines whether the specified delegates are not equal.</summary>
      <returns>true if <paramref name="d1" /> is not equal to <paramref name="d2" />; otherwise, false.</returns>
      <param name="d1">The first delegate to compare. </param>
      <param name="d2">The second delegate to compare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.Remove(System.Delegate,System.Delegate)">
      <summary>Removes the last occurrence of the invocation list of a delegate from the invocation list of another delegate.</summary>
      <returns>A new delegate with an invocation list formed by taking the invocation list of <paramref name="source" /> and removing the last occurrence of the invocation list of <paramref name="value" />, if the invocation list of <paramref name="value" /> is found within the invocation list of <paramref name="source" />. Returns <paramref name="source" /> if <paramref name="value" /> is null or if the invocation list of <paramref name="value" /> is not found within the invocation list of <paramref name="source" />. Returns a null reference if the invocation list of <paramref name="value" /> is equal to the invocation list of <paramref name="source" /> or if <paramref name="source" /> is a null reference.</returns>
      <param name="source">The delegate from which to remove the invocation list of <paramref name="value" />. </param>
      <param name="value">The delegate that supplies the invocation list to remove from the invocation list of <paramref name="source" />. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)">
      <summary>Removes all occurrences of the invocation list of a delegate from the invocation list of another delegate.</summary>
      <returns>A new delegate with an invocation list formed by taking the invocation list of <paramref name="source" /> and removing all occurrences of the invocation list of <paramref name="value" />, if the invocation list of <paramref name="value" /> is found within the invocation list of <paramref name="source" />. Returns <paramref name="source" /> if <paramref name="value" /> is null or if the invocation list of <paramref name="value" /> is not found within the invocation list of <paramref name="source" />. Returns a null reference if the invocation list of <paramref name="value" /> is equal to the invocation list of <paramref name="source" />, if <paramref name="source" /> contains only a series of invocation lists that are equal to the invocation list of <paramref name="value" />, or if <paramref name="source" /> is a null reference.</returns>
      <param name="source">The delegate from which to remove the invocation list of <paramref name="value" />. </param>
      <param name="value">The delegate that supplies the invocation list to remove from the invocation list of <paramref name="source" />. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
      <exception cref="T:System.ArgumentException">The delegate types do not match.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.RemoveImpl(System.Delegate)">
      <summary>Removes the invocation list of a delegate from the invocation list of another delegate.</summary>
      <returns>A new delegate with an invocation list formed by taking the invocation list of the current delegate and removing the invocation list of <paramref name="value" />, if the invocation list of <paramref name="value" /> is found within the current delegate's invocation list. Returns the current delegate if <paramref name="value" /> is null or if the invocation list of <paramref name="value" /> is not found within the current delegate's invocation list. Returns null if the invocation list of <paramref name="value" /> is equal to the current delegate's invocation list.</returns>
      <param name="d">The delegate that supplies the invocation list to remove from the invocation list of the current delegate. </param>
      <exception cref="T:System.MemberAccessException">The caller does not have access to the method represented by the delegate (for example, if the method is private). </exception>
    </member>
    <member name="P:System.Delegate.Target">
      <summary>Gets the class instance on which the current delegate invokes the instance method.</summary>
      <returns>The object on which the current delegate invokes the instance method, if the delegate represents an instance method; null if the delegate represents a static method.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.DivideByZeroException">
      <summary>The exception that is thrown when there is an attempt to divide an integral or decimal value by zero.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DivideByZeroException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DivideByZeroException" /> class.</summary>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DivideByZeroException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DivideByZeroException" /> class with a specified error message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error. </param>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DivideByZeroException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.DllNotFoundException">
      <summary>The exception that is thrown when a DLL specified in a DLL import cannot be found.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DllNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DllNotFoundException" /> class with default properties.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DllNotFoundException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DllNotFoundException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DllNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Double">
      <summary>Represents a double-precision floating-point number.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.CompareTo(System.Double)">
      <summary>Compares this instance to a specified double-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified double-precision floating-point number.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />. Greater than zero This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />). </returns>
      <param name="value">A double-precision floating-point number to compare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Value Description A negative integer This instance is less than <paramref name="value" />.-or- This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number. Zero This instance is equal to <paramref name="value" />.-or- This instance and <paramref name="value" /> are both Double.NaN, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />A positive integer This instance is greater than <paramref name="value" />.-or- This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />).-or- <paramref name="value" /> is null. </returns>
      <param name="value">An object to compare, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Double" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Double.Epsilon">
      <summary>Represents the smallest positive <see cref="T:System.Double" /> value that is greater than zero. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Double)">
      <summary>Returns a value indicating whether this instance and a specified <see cref="T:System.Double" /> object represent the same value.</summary>
      <returns>true if <paramref name="obj" /> is equal to this instance; otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Double" /> object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is an instance of <see cref="T:System.Double" /> and equals the value of this instance; otherwise, false.</returns>
      <param name="obj">An object to compare with this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Double" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.Double" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.IsInfinity(System.Double)">
      <summary>Returns a value indicating whether the specified number evaluates to negative or positive infinity </summary>
      <returns>true if <paramref name="d" /> evaluates to <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />; otherwise, false.</returns>
      <param name="d">A double-precision floating-point number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNaN(System.Double)">
      <summary>Returns a value indicating whether the specified number evaluates to a value that is not a number (<see cref="F:System.Double.NaN" />).</summary>
      <returns>true if <paramref name="d" /> evaluates to <see cref="F:System.Double.NaN" />; otherwise, false.</returns>
      <param name="d">A double-precision floating-point number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNegativeInfinity(System.Double)">
      <summary>Returns a value indicating whether the specified number evaluates to negative infinity.</summary>
      <returns>true if <paramref name="d" /> evaluates to <see cref="F:System.Double.NegativeInfinity" />; otherwise, false.</returns>
      <param name="d">A double-precision floating-point number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsPositiveInfinity(System.Double)">
      <summary>Returns a value indicating whether the specified number evaluates to positive infinity.</summary>
      <returns>true if <paramref name="d" /> evaluates to <see cref="F:System.Double.PositiveInfinity" />; otherwise, false.</returns>
      <param name="d">A double-precision floating-point number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MaxValue">
      <summary>Represents the largest possible value of a <see cref="T:System.Double" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MinValue">
      <summary>Represents the smallest possible value of a <see cref="T:System.Double" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NaN">
      <summary>Represents a value that is not a number (NaN). This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NegativeInfinity">
      <summary>Represents negative infinity. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.op_Equality(System.Double,System.Double)">
      <summary>Returns a value that indicates whether two specified <see cref="T:System.Double" /> values are equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, false.</returns>
      <param name="left">The first value to compare. </param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Double.op_GreaterThan(System.Double,System.Double)">
      <summary>Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is greater than another specified <see cref="T:System.Double" /> value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
      <summary>Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is greater than or equal to another specified <see cref="T:System.Double" /> value.</summary>
      <returns>true if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Double.op_Inequality(System.Double,System.Double)">
      <summary>Returns a value that indicates whether two specified <see cref="T:System.Double" /> values are not equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Double.op_LessThan(System.Double,System.Double)">
      <summary>Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is less than another specified <see cref="T:System.Double" /> value.</summary>
      <returns>true if <paramref name="left" /> is less than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
      <summary>Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is less than or equal to another specified <see cref="T:System.Double" /> value.</summary>
      <returns>true if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Double.Parse(System.String)">
      <summary>Converts the string representation of a number to its double-precision floating-point number equivalent.</summary>
      <returns>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
      <param name="s">A string that contains a number to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converts the string representation of a number in a specified style to its double-precision floating-point number equivalent.</summary>
      <returns>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
      <param name="s">A string that contains a number to convert. </param>
      <param name="style">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />. A typical value to specify is a combination of <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</summary>
      <returns>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
      <param name="s">A string that contains a number to convert. </param>
      <param name="style">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a numeric value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified culture-specific format to its double-precision floating-point number equivalent.</summary>
      <returns>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
      <param name="s">A string that contains a number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> does not represent a number in a valid format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.PositiveInfinity">
      <summary>Represents positive infinity. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true if the value of the current instance is not zero; otherwise, false.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Byte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />. </summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" /></summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Decimal" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, unchanged.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.SByte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Single" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to <paramref name="type" />.</returns>
      <param name="type">The type to which to convert this <see cref="T:System.Double" /> value.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt16" />.</returns>
      <param name="provider">This parameter is ignored. </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt32" />.</returns>
      <param name="provider">This parameter is ignored.   </param>
    </member>
    <member name="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Double.ToString">
      <summary>Converts the numeric value of this instance to its equivalent string representation.</summary>
      <returns>The string representation of the value of this instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="provider" />.</returns>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String)">
      <summary>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" />.</returns>
      <param name="format">A numeric format string.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A numeric format string.</param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Double@)">
      <summary>Converts the string representation of a number to its double-precision floating-point number equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="result">When this method returns, contains the double-precision floating-point number equivalent to the <paramref name="s" /> parameter, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not a number in a valid format, or represents a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />. This parameter is passed uninitialized. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <param name="result">When this method returns, contains a double-precision floating-point number equivalent to the numeric value or symbol contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not in a format compliant with <paramref name="style" />, represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />, or if <paramref name="style" /> is not a valid combination of <see cref="T:System.Globalization.NumberStyles" /> enumerated constants. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.DuplicateWaitObjectException">
      <summary>The exception that is thrown when an object appears more than once in an array of synchronization objects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DuplicateWaitObjectException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DuplicateWaitObjectException" /> class.</summary>
    </member>
    <member name="M:System.DuplicateWaitObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DuplicateWaitObjectException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.DuplicateWaitObjectException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DuplicateWaitObjectException" /> class with the name of the parameter that causes this exception.</summary>
      <param name="parameterName">The name of the parameter that caused the exception. </param>
    </member>
    <member name="M:System.DuplicateWaitObjectException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DuplicateWaitObjectException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:System.DuplicateWaitObjectException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DuplicateWaitObjectException" /> class with a specified error message and the name of the parameter that causes this exception.</summary>
      <param name="parameterName">The name of the parameter that caused the exception. </param>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="T:System.EntryPointNotFoundException">
      <summary>The exception that is thrown when an attempt to load a class fails due to the absence of an entry method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EntryPointNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</summary>
    </member>
    <member name="M:System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.EntryPointNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
    </member>
    <member name="M:System.EntryPointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Enum">
      <summary>Provides the base class for enumerations.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Enum" /> class. </summary>
    </member>
    <member name="M:System.Enum.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an indication of their relative values.</summary>
      <returns>A signed number that indicates the relative values of this instance and <paramref name="target" />.Value Meaning Less than zero The value of this instance is less than the value of <paramref name="target" />. Zero The value of this instance is equal to the value of <paramref name="target" />. Greater than zero The value of this instance is greater than the value of <paramref name="target" />.-or- <paramref name="target" /> is null. </returns>
      <param name="target">An object to compare, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> and this instance are not the same type. </exception>
      <exception cref="T:System.InvalidOperationException">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <exception cref="T:System.NullReferenceException">This instance is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is an <see cref="T:System.Enum" /> with the same underlying type and value as this instance; otherwise, false.</returns>
      <param name="obj">An object to compare with this instance, or null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Format(System.Type,System.Object,System.String)">
      <summary>Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.</summary>
      <returns>A string representation of <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type of the value to convert. </param>
      <param name="value">The value to convert. </param>
      <param name="format">The output format to use. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.-or- The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.FormatException">The <paramref name="format" /> parameter contains an invalid value. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetHashCode">
      <summary>Returns the hash code for the value of this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.GetName(System.Type,System.Object)">
      <summary>Retrieves the name of the constant in the specified enumeration that has the specified value.</summary>
      <returns>A string containing the name of the enumerated constant in <paramref name="enumType" /> whose value is <paramref name="value" />; or null if no such constant is found.</returns>
      <param name="enumType">An enumeration type. </param>
      <param name="value">The value of a particular enumerated constant in terms of its underlying type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetNames(System.Type)">
      <summary>Retrieves an array of the names of the constants in a specified enumeration.</summary>
      <returns>A string array of the names of the constants in <paramref name="enumType" />. </returns>
      <param name="enumType">An enumeration type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetTypeCode">
      <summary>Returns the underlying <see cref="T:System.TypeCode" /> for this instance.</summary>
      <returns>The type for this instance.</returns>
      <exception cref="T:System.InvalidOperationException">The enumeration type is unknown.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.GetUnderlyingType(System.Type)">
      <summary>Returns the underlying type of the specified enumeration.</summary>
      <returns>The underlying type of <paramref name="enumType" />.</returns>
      <param name="enumType">An enumeration type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetValues(System.Type)">
      <summary>Retrieves an array of the values of the constants in a specified enumeration.</summary>
      <returns>An array that contains the values of the constants in <paramref name="enumType" />. The elements of the array are sorted by the binary values of the enumeration constants.</returns>
      <param name="enumType">An enumeration type. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.HasFlag(System.Enum)">
      <summary>Determines whether one or more bit fields are set in the current instance.</summary>
      <returns>true if the bit field or bit fields that are set in <paramref name="flag" /> are also set in the current instance; otherwise, false.</returns>
      <param name="flag">An enumeration value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> is a different type than the current instance.</exception>
    </member>
    <member name="M:System.Enum.IsDefined(System.Type,System.Object)">
      <summary>Returns an indication whether a constant with a specified value exists in a specified enumeration.</summary>
      <returns>true if a constant in <paramref name="enumType" /> has a value equal to <paramref name="value" />; otherwise, false.</returns>
      <param name="enumType">An enumeration type. </param>
      <param name="value">The value or name of a constant in <paramref name="enumType" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an Enum.-or- The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.-or- The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String)">
      <summary>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</summary>
      <returns>An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</returns>
      <param name="enumType">An enumeration type. </param>
      <param name="value">A string containing the name or value to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
      <summary>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive.</summary>
      <returns>An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</returns>
      <param name="enumType">An enumeration type. </param>
      <param name="value">A string containing the name or value to convert. </param>
      <param name="ignoreCase">true to ignore case; false to regard case. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> or <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is either an empty string ("") or only contains white space.-or- <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>Converts the current value to a Boolean value based on the underlying type.</summary>
      <returns>This member always throws an exception.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>Converts the current value to an 8-bit unsigned integer based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>Converts the current value to a Unicode character based on the underlying type.</summary>
      <returns>This member always throws an exception.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>Converts the current value to a <see cref="T:System.DateTime" /> based on the underlying type.</summary>
      <returns>This member always throws an exception.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>Converts the current value to a <see cref="T:System.Decimal" /> based on the underlying type.</summary>
      <returns>This member always throws an exception.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>Converts the current value to a double-precision floating point number based on the underlying type.</summary>
      <returns>This member always throws an exception.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>Converts the current value to a 16-bit signed integer based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>Converts the current value to a 32-bit signed integer based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>Converts the current value to a 64-bit signed integer based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>Converts the current value to an 8-bit signed integer based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>Converts the current value to a single-precision floating-point number based on the underlying type.</summary>
      <returns>This member always throws an exception.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.InvalidCastException">In all cases. </exception>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>Converts the current value to a specified type based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="type">The type to convert to. </param>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>Converts the current value to a 16-bit unsigned integer based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>Converts the current value to a 32-bit unsigned integer based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>Converts the current value to a 64-bit unsigned integer based on the underlying type.</summary>
      <returns>The converted value.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Byte)">
      <summary>Converts the specified 8-bit unsigned integer to an enumeration member.</summary>
      <returns>An instance of the enumeration set to <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value to convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Int16)">
      <summary>Converts the specified 16-bit signed integer to an enumeration member.</summary>
      <returns>An instance of the enumeration set to <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value to convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Int32)">
      <summary>Converts the specified 32-bit signed integer to an enumeration member.</summary>
      <returns>An instance of the enumeration set to <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value to convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Int64)">
      <summary>Converts the specified 64-bit signed integer to an enumeration member.</summary>
      <returns>An instance of the enumeration set to <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value to convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Object)">
      <summary>Converts the specified object with an integer value to an enumeration member.</summary>
      <returns>An enumeration object whose value is <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.-or- <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.SByte)">
      <summary>Converts the specified 8-bit signed integer value to an enumeration member.</summary>
      <returns>An instance of the enumeration set to <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value to convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.UInt16)">
      <summary>Converts the specified 16-bit unsigned integer value to an enumeration member.</summary>
      <returns>An instance of the enumeration set to <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value to convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.UInt32)">
      <summary>Converts the specified 32-bit unsigned integer value to an enumeration member.</summary>
      <returns>An instance of the enumeration set to <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value to convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.UInt64)">
      <summary>Converts the specified 64-bit unsigned integer value to an enumeration member.</summary>
      <returns>An instance of the enumeration set to <paramref name="value" />.</returns>
      <param name="enumType">The enumeration type to return. </param>
      <param name="value">The value to convert to an enumeration member. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> is not an <see cref="T:System.Enum" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToString">
      <summary>Converts the value of this instance to its equivalent string representation.</summary>
      <returns>The string representation of the value of this instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.ToString(System.IFormatProvider)">
      <summary>This method overload is obsolete; use <see cref="M:System.Enum.ToString" />.</summary>
      <returns>The string representation of the value of this instance.</returns>
      <param name="provider">(obsolete) </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.ToString(System.String)">
      <summary>Converts the value of this instance to its equivalent string representation using the specified format.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" />.</returns>
      <param name="format">A format string. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> contains an invalid specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.ToString(System.String,System.IFormatProvider)">
      <summary>This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" />.</returns>
      <param name="format">A format specification. </param>
      <param name="provider">(Obsolete.)</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> does not contain a valid format specification. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> equals "X", but the enumeration type is unknown.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
      <summary>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.</summary>
      <returns>true if the <paramref name="value" /> parameter was converted successfully; otherwise, false.</returns>
      <param name="value">The string representation of the enumeration name or underlying value to convert.</param>
      <param name="ignoreCase">true to ignore case; false to consider case.</param>
      <param name="result">When this method returns, contains an object of type <paramref name="TEnum" /> whose value is represented by <paramref name="value" />. This parameter is passed uninitialized.</param>
      <typeparam name="TEnum">The enumeration type to which to convert <paramref name="value" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,``0@)">
      <summary>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. The return value indicates whether the conversion succeeded.</summary>
      <returns>true if the <paramref name="value" /> parameter was converted successfully; otherwise, false.</returns>
      <param name="value">The string representation of the enumeration name or underlying value to convert.</param>
      <param name="result">When this method returns, contains an object of type <paramref name="TEnum" /> whose value is represented by <paramref name="value" />. This parameter is passed uninitialized.</param>
      <typeparam name="TEnum">The enumeration type to which to convert <paramref name="value" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> is not an enumeration type.</exception>
    </member>
    <member name="T:System.Environment">
      <summary>Provides information about, and means to manipulate, the current environment and platform. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.CommandLine">
      <summary>Gets the command line for this process.</summary>
      <returns>A string containing command-line arguments.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="Path" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.CurrentDirectory">
      <summary>Gets or sets the fully qualified path of the current working directory.</summary>
      <returns>A string containing a directory path.</returns>
      <exception cref="T:System.ArgumentException">Attempted to set to an empty string ("").</exception>
      <exception cref="T:System.ArgumentNullException">Attempted to set to null.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Attempted to set a local path that cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the appropriate permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.Exit(System.Int32)">
      <summary>Terminates this process and gives the underlying operating system the specified exit code.</summary>
      <param name="exitCode">Exit code to be given to the operating system.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have sufficient security permission to perform this function.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.ExitCode">
      <summary>Gets or sets the exit code of the process.</summary>
      <returns>A 32-bit signed integer containing the exit code. The default value is zero.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Environment.ExpandEnvironmentVariables(System.String)">
      <summary>Replaces the name of each environment variable embedded in the specified string with the string equivalent of the value of the variable, then returns the resulting string.</summary>
      <returns>A string with each environment variable replaced by its value.</returns>
      <param name="name">A string containing the names of zero or more environment variables. Each environment variable is quoted with the percent sign character (%).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.FailFast(System.String)">
      <summary>Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message in error reporting to Microsoft.</summary>
      <param name="message">A message that explains why the process was terminated, or null if no explanation is provided.</param>
    </member>
    <member name="M:System.Environment.FailFast(System.String,System.Exception)">
      <summary>Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and exception information in error reporting to Microsoft.</summary>
      <param name="message">A message that explains why the process was terminated, or null if no explanation is provided.</param>
      <param name="exception">An exception that represents the error that caused the termination. This is typically the exception in a catch block.</param>
    </member>
    <member name="M:System.Environment.GetCommandLineArgs">
      <summary>Returns a string array containing the command-line arguments for the current process.</summary>
      <returns>An array of string where each element contains a command-line argument. The first element is the executable file name, and the following zero or more elements contain the remaining command-line arguments.</returns>
      <exception cref="T:System.NotSupportedException">The system does not support command-line arguments.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="Path" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String)">
      <summary>Retrieves the value of an environment variable from the current process.</summary>
      <returns>The value of the environment variable specified by <paramref name="variable" />, or null if the environment variable is not found.</returns>
      <param name="variable">The name of the environment variable.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> is null.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
      <summary>Retrieves the value of an environment variable from the current process or from the Windows operating system registry key for the current user or local machine.</summary>
      <returns>The value of the environment variable specified by the <paramref name="variable" /> and <paramref name="target" /> parameters, or null if the environment variable is not found.</returns>
      <param name="variable">The name of an environment variable.</param>
      <param name="target">One of the <see cref="T:System.EnvironmentVariableTarget" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.User" /> or <see cref="F:System.EnvironmentVariableTarget.Machine" /> and the current operating system is Windows 95, Windows 98, or Windows Me.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a valid <see cref="T:System.EnvironmentVariableTarget" /> value.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables">
      <summary>Retrieves all environment variable names and their values from the current process.</summary>
      <returns>A dictionary that contains all environment variable names and their values; otherwise, an empty dictionary if no environment variables are found.</returns>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation.</exception>
      <exception cref="T:System.OutOfMemoryException">The buffer is out of memory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
      <summary>Retrieves all environment variable names and their values from the current process, or from the Windows operating system registry key for the current user or local machine.</summary>
      <returns>A dictionary that contains all environment variable names and their values from the source specified by the <paramref name="target" /> parameter; otherwise, an empty dictionary if no environment variables are found.</returns>
      <param name="target">One of the <see cref="T:System.EnvironmentVariableTarget" /> values.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation for the specified value of <paramref name="target" />.</exception>
      <exception cref="T:System.NotSupportedException">This method cannot be used on Windows 95 or Windows 98 platforms.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> contains an illegal value.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
      <summary>Gets the path to the system special folder that is identified by the specified enumeration.</summary>
      <returns>The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</returns>
      <param name="folder">An enumerated constant that identifies a system special folder.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> is not a member of <see cref="T:System.Environment.SpecialFolder" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The current platform is not supported.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
      <summary>Gets the path to the system special folder that is identified by the specified enumeration, and uses a specified option for accessing special folders.</summary>
      <returns>The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</returns>
      <param name="folder">An enumerated constant that identifies a system special folder.</param>
      <param name="option">Specifies options to use for accessing a special folder.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> is not a member of <see cref="T:System.Environment.SpecialFolder." /></exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.PlatformNotSupportedException" />
      </exception>
    </member>
    <member name="M:System.Environment.GetLogicalDrives">
      <summary>Returns an array of string containing the names of the logical drives on the current computer.</summary>
      <returns>An array of strings where each element contains the name of a logical drive. For example, if the computer's hard drive is the first logical drive, the first element returned is "C:\".</returns>
      <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.HasShutdownStarted">
      <summary>Gets a value indicating whether the common language runtime (CLR) is shutting down.</summary>
      <returns>true if the common language runtime is shutting down; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.Is64BitOperatingSystem">
      <summary>Determines whether the current operating system is a 64-bit operating system.</summary>
      <returns>true if the operating system is 64-bit; otherwise, false.</returns>
    </member>
    <member name="P:System.Environment.Is64BitProcess">
      <summary>Determines whether the current process is a 64-bit process.</summary>
      <returns>true if the process is 64-bit; otherwise, false.</returns>
    </member>
    <member name="P:System.Environment.MachineName">
      <summary>Gets the NetBIOS name of this local computer.</summary>
      <returns>A string containing the name of this computer.</returns>
      <exception cref="T:System.InvalidOperationException">The name of this computer cannot be obtained.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.NewLine">
      <summary>Gets the newline string defined for this environment.</summary>
      <returns>A string containing "\r\n" for non-Unix platforms, or a string containing "\n" for Unix platforms.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.OSVersion">
      <summary>Gets an <see cref="T:System.OperatingSystem" /> object that contains the current platform identifier and version number.</summary>
      <returns>An object that contains the platform identifier and version number.</returns>
      <exception cref="T:System.InvalidOperationException">This property was unable to obtain the system version.-or- The obtained platform identifier is not a member of <see cref="T:System.PlatformID." /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.ProcessorCount">
      <summary>Gets the number of processors on the current machine.</summary>
      <returns>The 32-bit signed integer that specifies the number of processors on the current machine. There is no default.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="NUMBER_OF_PROCESSORS" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
      <summary>Creates, modifies, or deletes an environment variable stored in the current process.</summary>
      <param name="variable">The name of an environment variable.</param>
      <param name="value">A value to assign to <paramref name="variable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("="). -or-The length of <paramref name="variable" /> or <paramref name="value" /> is greater than or equal to 32,767 characters.-or-An error occurred during the execution of this operation.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
      <summary>Creates, modifies, or deletes an environment variable stored in the current process or in the Windows operating system registry key reserved for the current user or local machine.</summary>
      <param name="variable">The name of an environment variable.</param>
      <param name="value">A value to assign to <paramref name="variable" />.</param>
      <param name="target">One of the <see cref="T:System.EnvironmentVariableTarget" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("="). -or-The length of <paramref name="variable" /> is greater than or equal to 32,767 characters.-or-<paramref name="target" /> is not a member of the <see cref="T:System.EnvironmentVariableTarget" /> enumeration. -or-<paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Machine" /> or <see cref="F:System.EnvironmentVariableTarget.User" /> and the length of <paramref name="variable" /> is greater than or equal to 255.-or-<paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Process" /> and the length of <paramref name="value" /> is greater than or equal to 32,767 characters. -or-An error occurred during the execution of this operation.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.User" /> or <see cref="F:System.EnvironmentVariableTarget.Machine" /> and the current operating system is Windows 95, Windows 98, or Windows Me.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.StackTrace">
      <summary>Gets current stack trace information.</summary>
      <returns>A string containing stack trace information. This value can be <see cref="F:System.String.Empty." /></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The requested stack trace information is out of range.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.SystemDirectory">
      <summary>Gets the fully qualified path of the system directory.</summary>
      <returns>A string containing a directory path.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.SystemPageSize">
      <summary>Gets the amount of memory for an operating system's page file.</summary>
      <returns>The number of bytes in a system page file.</returns>
    </member>
    <member name="P:System.Environment.TickCount">
      <summary>Gets the number of milliseconds elapsed since the system started.</summary>
      <returns>A 32-bit signed integer containing the amount of time in milliseconds that has passed since the last time the computer was started.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.UserDomainName">
      <summary>Gets the network domain name associated with the current user.</summary>
      <returns>The network domain name associated with the current user.</returns>
      <exception cref="T:System.PlatformNotSupportedException">The operating system does not support retrieving the network domain name.</exception>
      <exception cref="T:System.InvalidOperationException">The network domain name cannot be retrieved.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="UserName;UserDomainName" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.UserInteractive">
      <summary>Gets a value indicating whether the current process is running in user interactive mode.</summary>
      <returns>true if the current process is running in user interactive mode; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.UserName">
      <summary>Gets the user name of the person who is currently logged on to the Windows operating system.</summary>
      <returns>The user name of the person who is logged on to Windows.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="UserName" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.Version">
      <summary>Gets a <see cref="T:System.Version" /> object that describes the major, minor, build, and revision numbers of the common language runtime.</summary>
      <returns>An object that displays the version of the common language runtime.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.WorkingSet">
      <summary>Gets the amount of physical memory mapped to the process context.</summary>
      <returns>A 64-bit signed integer containing the number of bytes of physical memory mapped to the process context.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Environment.SpecialFolder">
      <summary>Specifies enumerated constants used to retrieve directory paths to system special folders.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ApplicationData">
      <summary>The directory that serves as a common repository for application-specific data for the current roaming user.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonApplicationData">
      <summary>The directory that serves as a common repository for application-specific data that is used by all users.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalApplicationData">
      <summary>The directory that serves as a common repository for application-specific data that is used by the current, non-roaming user.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Cookies">
      <summary>The directory that serves as a common repository for Internet cookies.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Desktop">
      <summary>The logical Desktop rather than the physical file system location.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Favorites">
      <summary>The directory that serves as a common repository for the user's favorite items.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.History">
      <summary>The directory that serves as a common repository for Internet history items.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.InternetCache">
      <summary>The directory that serves as a common repository for temporary Internet files.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Programs">
      <summary>The directory that contains the user's program groups.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyComputer">
      <summary>The My Computer folder. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyMusic">
      <summary>The My Music folder.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyPictures">
      <summary>The My Pictures folder.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Recent">
      <summary>The directory that contains the user's most recently used documents.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SendTo">
      <summary>The directory that contains the Send To menu items.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.StartMenu">
      <summary>The directory that contains the Start menu items.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Startup">
      <summary>The directory that corresponds to the user's Startup program group.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.System">
      <summary>The System directory.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Templates">
      <summary>The directory that serves as a common repository for document templates.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.DesktopDirectory">
      <summary>The directory used to physically store file objects on the desktop.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Personal">
      <summary>The directory that serves as a common repository for documents.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyDocuments">
      <summary>The My Documents folder.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFiles">
      <summary>The program files directory.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFiles">
      <summary>The directory for components that are shared across applications.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.AdminTools">
      <summary>The file system directory that is used to store administrative tools for an individual user. The Microsoft Management Console (MMC) will save customized consoles to this directory, and it will roam with the user.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CDBurning">
      <summary>The file system directory that acts as a staging area for files waiting to be written to a CD. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonAdminTools">
      <summary>The file system directory that contains administrative tools for all users of the computer. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDocuments">
      <summary>The file system directory that contains documents that are common to all users. This special folder is valid for Windows NT systems, Windows 95, and Windows 98 systems with Shfolder.dll installed.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonMusic">
      <summary>The file system directory that serves as a repository for music files common to all users. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonOemLinks">
      <summary>This value is recognized in Windows Vista for backward compatibility, but the special folder itself is no longer used. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPictures">
      <summary>The file system directory that serves as a repository for image files common to all users. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartMenu">
      <summary>The file system directory that contains the programs and folders that appear on the Start menu for all users. This special folder is valid only for Windows NT systems. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPrograms">
      <summary>A folder for components that are shared across applications. This special folder is valid only for Windows NT, Windows 2000, and Windows XP systems. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartup">
      <summary>The file system directory that contains the programs that appear in the Startup folder for all users. This special folder is valid only for Windows NT systems.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDesktopDirectory">
      <summary>The file system directory that contains files and folders that appear on the desktop for all users. This special folder is valid only for Windows NT systems.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonTemplates">
      <summary>The file system directory that contains the templates that are available to all users. This special folder is valid only for Windows NT systems.  </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonVideos">
      <summary>The file system directory that serves as a repository for video files common to all users. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Fonts">
      <summary>A virtual folder that contains fonts. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyVideos">
      <summary>The file system directory that serves as a repository for videos that belong to a user. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.NetworkShortcuts">
      <summary>A file system directory that contains the link objects that may exist in the My Network Places virtual folder. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.PrinterShortcuts">
      <summary>The file system directory that contains the link objects that can exist in the Printers virtual folder. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.UserProfile">
      <summary>The user's profile folder. Applications should not create files or folders at this level; they should put their data under the locations referred to by <see cref="F:System.Environment.SpecialFolder.ApplicationData" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFilesX86">
      <summary>The Program Files folder. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFilesX86">
      <summary>The Program Files folder. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Resources">
      <summary>The file system directory that contains resource data. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalizedResources">
      <summary>The file system directory that contains localized resource data. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SystemX86">
      <summary>The Windows System folder. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Windows">
      <summary>The Windows directory or SYSROOT. This corresponds to the %windir% or %SYSTEMROOT% environment variables. </summary>
    </member>
    <member name="T:System.Environment.SpecialFolderOption">
      <summary>Specifies options to use for getting the path to a special folder.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.None">
      <summary>Returns the path, but does not verify whether the path exists. If the folder is located on a network, specifying this option can reduce lag time.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.Create">
      <summary>Verifies the folder path. If the folder does not exist, an empty string is returned. This is the default behavior.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.DoNotVerify">
      <summary>Forces the folder to be created if it does not already exist.</summary>
    </member>
    <member name="T:System.EnvironmentVariableTarget">
      <summary>Specifies the location where an environment variable is stored or retrieved in a set or get operation.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Process">
      <summary>The environment variable is stored or retrieved from the environment block associated with the current process. </summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.User">
      <summary>The environment variable is stored or retrieved from the HKEY_CURRENT_USER\Environment key in the Windows operating system registry. </summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Machine">
      <summary>The environment variable is stored or retrieved from the HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment key in the Windows operating system registry. </summary>
    </member>
    <member name="T:System.EventArgs">
      <summary>
        <see cref="T:System.EventArgs" /> is the base class for classes containing event data. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EventArgs" /> class.</summary>
    </member>
    <member name="F:System.EventArgs.Empty">
      <summary>Represents an event with no event data.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.EventHandler">
      <summary>Represents the method that will handle an event that has no event data.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains no event data. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.EventHandler`1">
      <summary>Represents the method that will handle an event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Exception">
      <summary>Represents errors that occur during application execution.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Exception.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class.</summary>
    </member>
    <member name="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
    </member>
    <member name="M:System.Exception.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.Exception.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="P:System.Exception.Data">
      <summary>Gets a collection of key/value pairs that provide additional user-defined information about the exception.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs. The default is an empty collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Exception.GetBaseException">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</summary>
      <returns>The first exception thrown in a chain of exceptions. If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (Nothing in Visual Basic), this property returns the current exception.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="M:System.Exception.GetType">
      <summary>Gets the runtime type of the current instance.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HelpLink">
      <summary>Gets or sets a link to the help file associated with this exception.</summary>
      <returns>The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HResult">
      <summary>Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</summary>
      <returns>The HRESULT value.</returns>
    </member>
    <member name="P:System.Exception.InnerException">
      <summary>Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</summary>
      <returns>An instance of Exception that describes the error that caused the current exception. The InnerException property returns the same value as was passed into the constructor, or a null reference (Nothing in Visual Basic) if the inner exception value was not supplied to the constructor. This property is read-only.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Message">
      <summary>Gets a message that describes the current exception.</summary>
      <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Exception.SerializeObjectState">
      <summary>Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</summary>
    </member>
    <member name="P:System.Exception.Source">
      <summary>Gets or sets the name of the application or the object that causes the error.</summary>
      <returns>The name of the application or the object that causes the error.</returns>
      <exception cref="T:System.ArgumentException">The object must be a runtime <see cref="N:System.Reflection" /> object</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.StackTrace">
      <summary>Gets a string representation of the immediate frames on the call stack.</summary>
      <returns>A string that describes the immediate frames of the call stack.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Exception.TargetSite">
      <summary>Gets the method that throws the current exception.</summary>
      <returns>The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Exception.ToString">
      <summary>Creates and returns a string representation of the current exception.</summary>
      <returns>A string representation of the current exception.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.ExecutionEngineException">
      <summary>The exception that is thrown when there is an internal error in the execution engine of the common language runtime. This class cannot be inherited.  </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ExecutionEngineException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ExecutionEngineException" /> class.</summary>
    </member>
    <member name="M:System.ExecutionEngineException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ExecutionEngineException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.ExecutionEngineException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ExecutionEngineException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.FieldAccessException">
      <summary>The exception that is thrown when there is an invalid attempt to access a private or protected field inside a class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FieldAccessException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.FieldAccessException" /> class.</summary>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.FieldAccessException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.FieldAccessException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.FieldAccessException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.FieldAccessException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.FlagsAttribute">
      <summary>Indicates that an enumeration can be treated as a bit field; that is, a set of flags.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.FlagsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.FlagsAttribute" /> class.</summary>
    </member>
    <member name="T:System.FormatException">
      <summary>The exception that is thrown when the format of an argument does not meet the parameter specifications of the invoked method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FormatException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.FormatException" /> class.</summary>
    </member>
    <member name="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.FormatException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.FormatException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.FormatException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.FormatException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.FormatException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Func`1">
      <summary>Encapsulates a method that has no parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Func`2">
      <summary>Encapsulates a method that has one parameter and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg">The parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T">The type of the parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Func`3">
      <summary>Encapsulates a method that has two parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Func`4">
      <summary>Encapsulates a method that has three parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Func`5">
      <summary>Encapsulates a method that has four parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Func`6">
      <summary>Encapsulates a method that has five parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Func`7">
      <summary>Encapsulates a method that has six parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Func`8">
      <summary>Encapsulates a method that has seven parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Func`9">
      <summary>Encapsulates a method that has eight parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.GC">
      <summary>Controls the system garbage collector, a service that automatically reclaims unused memory.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.GC.AddMemoryPressure(System.Int64)">
      <summary>Informs the runtime of a large allocation of unmanaged memory that should be taken into account when scheduling garbage collection.</summary>
      <param name="bytesAllocated">The incremental amount of unmanaged memory that has been allocated. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" /> is less than or equal to 0.-or-On a 32-bit computer, <paramref name="bytesAllocated" /> is larger than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.CancelFullGCNotification">
      <summary>Cancels the registration of a garbage collection notification.</summary>
      <exception cref="T:System.InvalidOperationException">This member is not available when concurrent garbage collection is enabled. See the &lt;gcConcurrent&gt; runtime setting for information about how to disable concurrent garbage collection.</exception>
    </member>
    <member name="M:System.GC.Collect">
      <summary>Forces an immediate garbage collection of all generations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32)">
      <summary>Forces an immediate garbage collection from generation zero through a specified generation.</summary>
      <param name="generation">The number of the oldest generation that garbage collection can be performed on. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> is not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode)">
      <summary>Forces a garbage collection from generation zero through a specified generation, at a time specified by a <see cref="T:System.GCCollectionMode" /> value.</summary>
      <param name="generation">The number of the oldest generation that garbage collection can be performed on. </param>
      <param name="mode">One of the <see cref="T:System.GCCollectionMode" /> values.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> is not valid.-or-<paramref name="mode" /> is not one of the <see cref="T:System.GCCollectionMode" /> values.</exception>
    </member>
    <member name="M:System.GC.CollectionCount(System.Int32)">
      <summary>Returns the number of times garbage collection has occurred for the specified generation of objects.</summary>
      <returns>The number of times garbage collection has occurred for the specified generation since the process was started.</returns>
      <param name="generation">The generation of objects for which the garbage collection count is to be determined. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> is less than 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetGeneration(System.Object)">
      <summary>Returns the current generation number of the specified object.</summary>
      <returns>The current generation number of <paramref name="obj" />.</returns>
      <param name="obj">The object that generation information is retrieved for. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetGeneration(System.WeakReference)">
      <summary>Returns the current generation number of the target of a specified weak reference.</summary>
      <returns>The current generation number of the target of <paramref name="wo" />.</returns>
      <param name="wo">A <see cref="T:System.WeakReference" /> that refers to the target object whose generation number is to be determined. </param>
      <exception cref="T:System.ArgumentException">Garbage collection has already been performed on <paramref name="wo" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetTotalMemory(System.Boolean)">
      <summary>Retrieves the number of bytes currently thought to be allocated. A parameter indicates whether this method can wait a short interval before returning, to allow the system to collect garbage and finalize objects.</summary>
      <returns>A number that is the best available approximation of the number of bytes currently allocated in managed memory.</returns>
      <param name="forceFullCollection">true to indicate that this method can wait for garbage collection to occur before returning; otherwise, false.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.KeepAlive(System.Object)">
      <summary>References the specified object, which makes it ineligible for garbage collection from the start of the current routine to the point where this method is called.</summary>
      <param name="obj">The object to reference. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.GC.MaxGeneration">
      <summary>Gets the maximum number of generations that the system currently supports.</summary>
      <returns>A value that ranges from zero to the maximum number of supported generations.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.RegisterForFullGCNotification(System.Int32,System.Int32)">
      <summary>Specifies that a garbage collection notification should be raised when conditions favor full garbage collection and when the collection has been completed.</summary>
      <param name="maxGenerationThreshold">A number between 1 and 99 that specifies when the notification should be raised based on the objects surviving in generation 2. </param>
      <param name="largeObjectHeapThreshold">A number between 1 and 99 that specifies when the notification should be raised based on objects allocated in the large object heap. </param>
      <exception cref="T:System.InvalidOperationException">This member is not available when concurrent garbage collection is enabled. See the &lt;gcConcurrent&gt; runtime setting for information about how to disable concurrent garbage collection.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxGenerationThreshold " />or <paramref name="largeObjectHeapThreshold " />is not between 1 and 99.</exception>
    </member>
    <member name="M:System.GC.RemoveMemoryPressure(System.Int64)">
      <summary>Informs the runtime that unmanaged memory has been released and no longer needs to be taken into account when scheduling garbage collection.</summary>
      <param name="bytesAllocated">The amount of unmanaged memory that has been released. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bytesAllocated" /> is less than or equal to 0. -or- On a 32-bit computer, <paramref name="bytesAllocated" /> is larger than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.ReRegisterForFinalize(System.Object)">
      <summary>Requests that the system call the finalizer for the specified object for which <see cref="M:System.GC.SuppressFinalize(System.Object)" /> has previously been called.</summary>
      <param name="obj">The object that a finalizer must be called for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.SuppressFinalize(System.Object)">
      <summary>Requests that the system not call the finalizer for the specified object.</summary>
      <param name="obj">The object that a finalizer must not be called for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.WaitForFullGCApproach">
      <summary>Returns the status of a registered notification for determining whether a full garbage collection by the common langauge runtime is imminent.</summary>
      <returns>The status of the registered garbage collection notification.</returns>
    </member>
    <member name="M:System.GC.WaitForFullGCApproach(System.Int32)">
      <summary>Returns, in a specified time-out period, the status of a registered notification for determining whether a full garbage collection by the common language runtime is imminent.</summary>
      <returns>The status of the registered garbage collection notification.</returns>
      <param name="millisecondsTimeout">The length of time to wait before a notification status can be obtained. Specify -1 to wait indefinitely.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> must be either non-negative or less than or equal to <see cref="F:System.Int32.MaxValue" /> or -1.</exception>
    </member>
    <member name="M:System.GC.WaitForFullGCComplete">
      <summary>Returns the status of a registered notification for determining whether a full garbage collection by the common language runtime has completed.</summary>
      <returns>The status of the registered garbage collection notification.</returns>
    </member>
    <member name="M:System.GC.WaitForFullGCComplete(System.Int32)">
      <summary>Returns, in a specified time-out period, the status of a registered notification for determining whether a full garbage collection by common language the runtime has completed.</summary>
      <returns>The status of the registered garbage collection notification.</returns>
      <param name="millisecondsTimeout">The length of time to wait before a notification status can be obtained. Specify -1 to wait indefinitely.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="millisecondsTimeout" /> must be either non-negative or less than or equal to <see cref="F:System.Int32.MaxValue" /> or -1.</exception>
    </member>
    <member name="M:System.GC.WaitForPendingFinalizers">
      <summary>Suspends the current thread until the thread that is processing the queue of finalizers has emptied that queue.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.GCCollectionMode">
      <summary>Specifies the behavior for a forced garbage collection.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.GCCollectionMode.Default">
      <summary>The default setting for this enumeration, which is currently <see cref="F:System.GCCollectionMode.Forced" />. </summary>
    </member>
    <member name="F:System.GCCollectionMode.Forced">
      <summary>Forces the garbage collection to occur immediately.</summary>
    </member>
    <member name="F:System.GCCollectionMode.Optimized">
      <summary>Allows the garbage collector to determine whether the current time is optimal to reclaim objects. </summary>
    </member>
    <member name="T:System.GCNotificationStatus">
      <summary>Provides information about the current registration for notification of the next full garbage collection. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.GCNotificationStatus.Succeeded">
      <summary>The notification was successful and the registration was not canceled.</summary>
    </member>
    <member name="F:System.GCNotificationStatus.Failed">
      <summary>The notification failed for any reason.</summary>
    </member>
    <member name="F:System.GCNotificationStatus.Canceled">
      <summary>The current registration was canceled by the user. </summary>
    </member>
    <member name="F:System.GCNotificationStatus.Timeout">
      <summary>The time specified by the <paramref name="millisecondsTimeout" /> parameter for either <see cref="M:System.GC.WaitForFullGCApproach(System.Int32)" /> or <see cref="M:System.GC.WaitForFullGCComplete(System.Int32)" /> has elapsed.</summary>
    </member>
    <member name="F:System.GCNotificationStatus.NotApplicable">
      <summary>This result can be caused by the following: there is no current registration for a garbage collection notification, concurrent garbage collection is enabled, or the time specified for the <paramref name="millisecondsTimeout" /> parameter has expired and no garbage collection notification was obtained. (See the &lt;gcConcurrent&gt; runtime setting for information about how to disable concurrent garbage collection.)</summary>
    </member>
    <member name="T:System.Guid">
      <summary>Represents a globally unique identifier (GUID).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Guid" /> class using the specified array of bytes.</summary>
      <param name="b">A 16-element byte array containing values with which to initialize the GUID. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="b" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="b" /> is not 16 bytes long. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Guid" /> class using the specified integers and bytes.</summary>
      <param name="a">The first 4 bytes of the GUID. </param>
      <param name="b">The next 2 bytes of the GUID. </param>
      <param name="c">The next 2 bytes of the GUID. </param>
      <param name="d">The next byte of the GUID. </param>
      <param name="e">The next byte of the GUID. </param>
      <param name="f">The next byte of the GUID. </param>
      <param name="g">The next byte of the GUID. </param>
      <param name="h">The next byte of the GUID. </param>
      <param name="i">The next byte of the GUID. </param>
      <param name="j">The next byte of the GUID. </param>
      <param name="k">The next byte of the GUID. </param>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Guid" /> class using the specified integers and byte array.</summary>
      <param name="a">The first 4 bytes of the GUID. </param>
      <param name="b">The next 2 bytes of the GUID. </param>
      <param name="c">The next 2 bytes of the GUID. </param>
      <param name="d">The remaining 8 bytes of the GUID. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="d" /> is not 8 bytes long. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Guid" /> class using the value represented by the specified string.</summary>
      <param name="g">A string that contains a GUID in one of the following formats ("d" represents a hexadecimal digit whose case is ignored): 32 contiguous digits: dddddddddddddddddddddddddddddddd -or- Groups of 8, 4, 4, 4, and 12 digits with hyphens between the groups. The entire GUID can optionally be enclosed in matching braces or parentheses: dddddddd-dddd-dddd-dddd-dddddddddddd -or- {dddddddd-dddd-dddd-dddd-dddddddddddd} -or- (dddddddd-dddd-dddd-dddd-dddddddddddd) -or- Groups of 8, 4, and 4 digits, and a subset of eight groups of 2 digits, with each group prefixed by "0x" or "0X", and separated by commas. The entire GUID, as well as the subset, is enclosed in matching braces: {0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}} All braces, commas, and "0x" prefixes are required. All embedded spaces are ignored. All leading zeros in a group are ignored.The digits shown in a group are the maximum number of meaningful digits that can appear in that group. You can specify from 1 to the number of digits shown for a group. The specified digits are assumed to be the low-order digits of the group. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is null. </exception>
      <exception cref="T:System.FormatException">The format of <paramref name="g" /> is invalid. </exception>
      <exception cref="T:System.OverflowException">The format of <paramref name="g" /> is invalid. </exception>
      <exception cref="T:System.Exception">An internal type conversion error occurred. </exception>
    </member>
    <member name="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Guid" /> class using the specified unsigned integers and bytes.</summary>
      <param name="a">The first 4 bytes of the GUID. </param>
      <param name="b">The next 2 bytes of the GUID. </param>
      <param name="c">The next 2 bytes of the GUID. </param>
      <param name="d">The next byte of the GUID. </param>
      <param name="e">The next byte of the GUID. </param>
      <param name="f">The next byte of the GUID. </param>
      <param name="g">The next byte of the GUID. </param>
      <param name="h">The next byte of the GUID. </param>
      <param name="i">The next byte of the GUID. </param>
      <param name="j">The next byte of the GUID. </param>
      <param name="k">The next byte of the GUID. </param>
    </member>
    <member name="M:System.Guid.CompareTo(System.Guid)">
      <summary>Compares this instance to a specified <see cref="T:System.Guid" /> object and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return value Description A negative integer This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. A positive integer This instance is greater than <paramref name="value" />. </returns>
      <param name="value">An object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return value Description A negative integer This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. A positive integer This instance is greater than <paramref name="value" />, or <paramref name="value" /> is null. </returns>
      <param name="value">An object to compare, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a <see cref="T:System.Guid" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Guid.Empty">
      <summary>A read-only instance of the <see cref="T:System.Guid" /> class whose value is guaranteed to be all zeros.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Guid)">
      <summary>Returns a value indicating whether this instance and a specified <see cref="T:System.Guid" /> object represent the same value.</summary>
      <returns>true if <paramref name="g" /> is equal to this instance; otherwise, false.</returns>
      <param name="g">An object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="o" /> is a <see cref="T:System.Guid" /> that has the same value as this instance; otherwise, false.</returns>
      <param name="o">The object to compare with this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.NewGuid">
      <summary>Initializes a new instance of the <see cref="T:System.Guid" /> class.</summary>
      <returns>A new GUID object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.op_Equality(System.Guid,System.Guid)">
      <summary>Indicates whether the values of two specified <see cref="T:System.Guid" /> objects are equal.</summary>
      <returns>true if <paramref name="a" /> and <paramref name="b" /> are equal; otherwise, false.</returns>
      <param name="a">The first object to compare. </param>
      <param name="b">The second object to compare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
      <summary>Indicates whether the values of two specified <see cref="T:System.Guid" /> objects are not equal.</summary>
      <returns>true if <paramref name="a" /> and <paramref name="b" /> are not equal; otherwise, false.</returns>
      <param name="a">The first object to compare. </param>
      <param name="b">The second object to compare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.Parse(System.String)">
      <summary>Converts the string representation of a GUID to the equivalent <see cref="T:System.Guid" /> structure.</summary>
      <returns>A structure that contains the value that was parsed.</returns>
      <param name="input">The GUID to convert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> is not in a recognized format.</exception>
      <exception cref="T:System.Exception">An internal type conversion error occurred.</exception>
    </member>
    <member name="M:System.Guid.ParseExact(System.String,System.String)">
      <summary>Converts the string representation of a GUID to the equivalent <see cref="T:System.Guid" /> structure, provided that the string is in the specified format.</summary>
      <returns>A structure that contains the value that was parsed.</returns>
      <param name="input">The GUID to convert.</param>
      <param name="format">One of the following specifiers that indicates the exact format to use when interpreting <paramref name="input" />: "N", "D", "B", "P", or "X".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="format" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> is not in a recognized format.</exception>
      <exception cref="T:System.Exception">An internal type conversion error occurred.</exception>
    </member>
    <member name="M:System.Guid.ToByteArray">
      <summary>Returns a 16-element byte array that contains the value of this instance.</summary>
      <returns>A 16-element byte array.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.ToString">
      <summary>Returns a string representation of the value of this instance in registry format.</summary>
      <returns>A String formatted in the following pattern: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx where the value of the GUID is represented as a series of lowercase hexadecimal digits in groups of 8, 4, 4, 4, and 12 digits and separated by hyphens. An example of a return value is "382c74c3-721d-4f34-80e5-57657b6cbc27".</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.ToString(System.String)">
      <summary>Returns a string representation of the value of this <see cref="T:System.Guid" /> instance, according to the provided format specifier.</summary>
      <returns>A string representation of the value of this <see cref="T:System.Guid" />.</returns>
      <param name="format">A single format specifier that indicates how to format the value of this <see cref="T:System.Guid" />. The <paramref name="format" /> parameter can be "N", "D", "B", "P", or "X". If <paramref name="format" /> is null or an empty string (""), "D" is used. </param>
      <exception cref="T:System.FormatException">The value of <paramref name="format" /> is not null, an empty string (""), "N", "D", "B", "P", or "X". </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.ToString(System.String,System.IFormatProvider)">
      <summary>Returns a string representation of the value of this instance of the <see cref="T:System.Guid" /> class, according to the provided format specifier and culture-specific format information.</summary>
      <returns>A string representation of the value of this <see cref="T:System.Guid" />.</returns>
      <param name="format">A single format specifier that indicates how to format the value of this <see cref="T:System.Guid" />. The <paramref name="format" /> parameter can be "N", "D", "B", "P", or "X". If <paramref name="format" /> is null or an empty string (""), "D" is used. </param>
      <param name="provider">(Reserved) An object that supplies culture-specific formatting services. </param>
      <exception cref="T:System.FormatException">The value of <paramref name="format" /> is not null, an empty string (""), "N", "D", "B", "P", or "X". </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.TryParse(System.String,System.Guid@)">
      <summary>Converts the string representation of a GUID to the equivalent <see cref="T:System.Guid" /> structure. </summary>
      <returns>true if the parse operation was successful; otherwise, false.</returns>
      <param name="input">The GUID to convert.</param>
      <param name="result">The structure that will contain the parsed value.</param>
    </member>
    <member name="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
      <summary>Converts the string representation of a GUID to the equivalent <see cref="T:System.Guid" /> structure, provided that the string is in the specified format.</summary>
      <returns>true if the parse operation was successful; otherwise, false.</returns>
      <param name="input">The GUID to convert.</param>
      <param name="format">One of the following specifiers that indicates the exact format to use when interpreting <paramref name="input" />: "N", "D", "B", "P", or "X".</param>
      <param name="result">The structure that will contain the parsed value.</param>
    </member>
    <member name="T:System.IAppDomainSetup">
      <summary>Represents assembly binding information that can be added to an instance of <see cref="T:System.AppDomain" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.ApplicationBase">
      <summary>Gets or sets the name of the directory containing the application.</summary>
      <returns>A <see cref="T:System.String" /> containg the name of the application base directory.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.ApplicationName">
      <summary>Gets or sets the name of the application.</summary>
      <returns>A <see cref="T:System.String" /> that is the name of the application.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.CachePath">
      <summary>Gets and sets the name of an area specific to the application where files are shadow copied.</summary>
      <returns>A <see cref="T:System.String" /> that is the fully-qualified name of the directory path and file name where files are shadow copied.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.ConfigurationFile">
      <summary>Gets and sets the name of the configuration file for an application domain.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the name of the configuration file.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.DynamicBase">
      <summary>Gets or sets the directory where dynamically generated files are stored and accessed.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the directory containing dynamic assemblies.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.LicenseFile">
      <summary>Gets or sets the location of the license file associated with this domain.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the name of the license file.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.PrivateBinPath">
      <summary>Gets or sets the list of directories that is combined with the <see cref="P:System.AppDomainSetup.ApplicationBase" /> directory to probe for private assemblies.</summary>
      <returns>A <see cref="T:System.String" /> containing a list of directory names, where each name is separated by a semicolon.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.PrivateBinPathProbe">
      <summary>Gets or sets the private binary directory path used to locate an application.</summary>
      <returns>A <see cref="T:System.String" /> containing a list of directory names, where each name is separated by a semicolon.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.ShadowCopyDirectories">
      <summary>Gets or sets the names of the directories containing assemblies to be shadow copied.</summary>
      <returns>A <see cref="T:System.String" /> containing a list of directory names, where each name is separated by a semicolon.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAppDomainSetup.ShadowCopyFiles">
      <summary>Gets or sets a string that indicates whether shadow copying is turned on or off.</summary>
      <returns>A <see cref="T:System.String" /> containing the value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IAsyncResult">
      <summary>Represents the status of an asynchronous operation. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncState">
      <summary>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</summary>
      <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncWaitHandle">
      <summary>Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</summary>
      <returns>A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.CompletedSynchronously">
      <summary>Gets a value that indicates whether the asynchronous operation completed synchronously.</summary>
      <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.IsCompleted">
      <summary>Gets a value that indicates whether the asynchronous operation has completed.</summary>
      <returns>true if the operation is complete; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ICloneable">
      <summary>Supports cloning, which creates a new instance of a class with the same value as an existing instance.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ICloneable.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable">
      <summary>Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable.CompareTo(System.Object)">
      <summary>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</summary>
      <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj" />. Zero This instance is equal to <paramref name="obj" />. Greater than zero This instance is greater than <paramref name="obj" />. </returns>
      <param name="obj">An object to compare with this instance. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is not the same type as this instance. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable`1">
      <summary>Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering instances.</summary>
      <typeparam name="T">The type of objects to compare.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable`1.CompareTo(`0)">
      <summary>Compares the current object with another object of the same type.</summary>
      <returns>A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />. </returns>
      <param name="other">An object to compare with this object.</param>
    </member>
    <member name="T:System.IConvertible">
      <summary>Defines methods that convert the value of the implementing reference or value type to a common language runtime type that has an equivalent value.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for this instance.</summary>
      <returns>The enumerated constant that is the <see cref="T:System.TypeCode" /> of the class or value type that implements this interface.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToBoolean(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent Boolean value using the specified culture-specific formatting information.</summary>
      <returns>A Boolean value equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToByte(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent 8-bit unsigned integer using the specified culture-specific formatting information.</summary>
      <returns>An 8-bit unsigned integer equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToChar(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent Unicode character using the specified culture-specific formatting information.</summary>
      <returns>A Unicode character equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDateTime(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent <see cref="T:System.DateTime" /> using the specified culture-specific formatting information.</summary>
      <returns>A <see cref="T:System.DateTime" /> instance equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDecimal(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent <see cref="T:System.Decimal" /> number using the specified culture-specific formatting information.</summary>
      <returns>A <see cref="T:System.Decimal" /> number equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToDouble(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent double-precision floating-point number using the specified culture-specific formatting information.</summary>
      <returns>A double-precision floating-point number equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt16(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent 16-bit signed integer using the specified culture-specific formatting information.</summary>
      <returns>An 16-bit signed integer equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt32(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent 32-bit signed integer using the specified culture-specific formatting information.</summary>
      <returns>An 32-bit signed integer equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToInt64(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent 64-bit signed integer using the specified culture-specific formatting information.</summary>
      <returns>An 64-bit signed integer equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSByte(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent 8-bit signed integer using the specified culture-specific formatting information.</summary>
      <returns>An 8-bit signed integer equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToSingle(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent single-precision floating-point number using the specified culture-specific formatting information.</summary>
      <returns>A single-precision floating-point number equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToString(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent <see cref="T:System.String" /> using the specified culture-specific formatting information.</summary>
      <returns>A <see cref="T:System.String" /> instance equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)">
      <summary>Converts the value of this instance to an <see cref="T:System.Object" /> of the specified <see cref="T:System.Type" /> that has an equivalent value, using the specified culture-specific formatting information.</summary>
      <returns>An <see cref="T:System.Object" /> instance of type <paramref name="conversionType" /> whose value is equivalent to the value of this instance.</returns>
      <param name="conversionType">The <see cref="T:System.Type" /> to which the value of this instance is converted. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt16(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent 16-bit unsigned integer using the specified culture-specific formatting information.</summary>
      <returns>An 16-bit unsigned integer equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt32(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent 32-bit unsigned integer using the specified culture-specific formatting information.</summary>
      <returns>An 32-bit unsigned integer equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IConvertible.ToUInt64(System.IFormatProvider)">
      <summary>Converts the value of this instance to an equivalent 64-bit unsigned integer using the specified culture-specific formatting information.</summary>
      <returns>An 64-bit unsigned integer equivalent to the value of this instance.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ICustomFormatter">
      <summary>Defines a method that supports custom formatting of the value of an object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
      <summary>Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information.</summary>
      <returns>The string representation of the value of <paramref name="arg" />, formatted as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</returns>
      <param name="format">A format string containing formatting specifications. </param>
      <param name="arg">An object to format. </param>
      <param name="formatProvider">An object that supplies format information about the current instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IDisposable">
      <summary>Defines a method to release allocated resources.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IDisposable.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IEquatable`1">
      <summary>Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</summary>
      <typeparam name="T">The type of objects to compare.</typeparam>
    </member>
    <member name="M:System.IEquatable`1.Equals(`0)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
      <param name="other">An object to compare with this object.</param>
    </member>
    <member name="T:System.IFormatProvider">
      <summary>Provides a mechanism for retrieving an object to control formatting.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormatProvider.GetFormat(System.Type)">
      <summary>Returns an object that provides formatting services for the specified type.</summary>
      <returns>An instance of the object specified by <paramref name="formatType" />, if the <see cref="T:System.IFormatProvider" /> implementation can supply that type of object; otherwise, null.</returns>
      <param name="formatType">An object that specifies the type of format object to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IFormattable">
      <summary>Provides functionality to format the value of an object into a string representation.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
      <summary>Formats the value of the current instance using the specified format.</summary>
      <returns>The value of the current instance in the specified format.</returns>
      <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation. </param>
      <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IndexOutOfRangeException">
      <summary>The exception that is thrown when an attempt is made to access an element of an array with an index that is outside the bounds of the array. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</summary>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.InsufficientExecutionStackException">
      <summary>The exception that is thrown when there is insufficient execution stack available to allow most methods to execute.</summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.InsufficientExecutionStackException" /> class. </summary>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.InsufficientExecutionStackException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
    </member>
    <member name="M:System.InsufficientExecutionStackException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.InsufficientExecutionStackException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.InsufficientMemoryException">
      <summary>The exception that is thrown when a check for sufficient available memory fails. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.InsufficientMemoryException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.InsufficientMemoryException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.InsufficientMemoryException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.InsufficientMemoryException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.InsufficientMemoryException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.InsufficientMemoryException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Int16">
      <summary>Represents a 16-bit signed integer.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.CompareTo(System.Int16)">
      <summary>Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">An integer to compare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the object.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />.-or- <paramref name="value" /> is null. </returns>
      <param name="value">An object to compare, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int16" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Int16)">
      <summary>Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int16" /> value.</summary>
      <returns>true if <paramref name="obj" /> has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Int16" /> value to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is an instance of <see cref="T:System.Int16" /> and equals the value of this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int16" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.Int16" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int16.MaxValue">
      <summary>Represents the largest possible value of an <see cref="T:System.Int16" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int16.MinValue">
      <summary>Represents the smallest possible value of <see cref="T:System.Int16" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String)">
      <summary>Converts the string representation of a number to its 16-bit signed integer equivalent.</summary>
      <returns>A 16-bit signed integer equivalent to the number contained in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</summary>
      <returns>A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="style">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</summary>
      <returns>A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="style">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. -or-<paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</summary>
      <returns>A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true if the value of the current instance is not zero; otherwise, false.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Byte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Char" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Decimal" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Double" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, unchanged.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.SByte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Single" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to <paramref name="type" />.</returns>
      <param name="type">The type to which to convert this <see cref="T:System.Int16" /> value.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, unchanged.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int16.ToString">
      <summary>Converts the numeric value of this instance to its equivalent string representation.</summary>
      <returns>The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="provider" />.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String)">
      <summary>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" />.</returns>
      <param name="format">A numeric format string.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A numeric format string.</param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. The string is interpreted using the style specified by <paramref name="style" />.</param>
      <param name="style">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <param name="result">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Int16@)">
      <summary>Converts the string representation of a number to its 16-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="result">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not of the correct format, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />. This parameter is passed uninitialized. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int32">
      <summary>Represents a 32-bit signed integer.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.CompareTo(System.Int32)">
      <summary>Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">An integer to compare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />.-or- <paramref name="value" /> is null. </returns>
      <param name="value">An object to compare, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int32" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Int32)">
      <summary>Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value. </summary>
      <returns>true if <paramref name="obj" /> has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Int32" /> value to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, false.</returns>
      <param name="obj">An object to compare with this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int32.MaxValue">
      <summary>Represents the largest possible value of an <see cref="T:System.Int32" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int32.MinValue">
      <summary>Represents the smallest possible value of <see cref="T:System.Int32" />. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String)">
      <summary>Converts the string representation of a number to its 32-bit signed integer equivalent.</summary>
      <returns>A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</summary>
      <returns>A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="style">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</summary>
      <returns>A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="style">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An object that supplies culture-specific information about the format of <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. -or-<paramref name="s" /> includes non-zero, fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</summary>
      <returns>A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not of the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true if the value of the current instance is not zero; otherwise, false.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Byte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Char" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Decimal" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Double" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, unchanged.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.SByte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Single" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to <paramref name="type" />.</returns>
      <param name="type">The type to which to convert this <see cref="T:System.Int32" /> value.</param>
      <param name="provider">An object that provides information about the format of the returned value.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int32.ToString">
      <summary>Converts the numeric value of this instance to its equivalent string representation.</summary>
      <returns>The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="provider" />.</returns>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String)">
      <summary>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" />.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <param name="provider">An object that supplies culture-specific formatting information. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. The string is interpreted using the style specified by <paramref name="style" />.</param>
      <param name="style">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <param name="result">When this method returns, contains the 32-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Int32@)">
      <summary>Converts the string representation of a number to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="result">When this method returns, contains the 32-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />. This parameter is passed uninitialized. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int64">
      <summary>Represents a 64-bit signed integer.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.CompareTo(System.Int64)">
      <summary>Compares this instance to a specified 64-bit signed integer and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />. </returns>
      <param name="value">An integer to compare. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of this instance and <paramref name="value" />.Return Value Description Less than zero This instance is less than <paramref name="value" />. Zero This instance is equal to <paramref name="value" />. Greater than zero This instance is greater than <paramref name="value" />.-or- <paramref name="value" /> is null. </returns>
      <param name="value">An object to compare, or null. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an <see cref="T:System.Int64" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Int64)">
      <summary>Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int64" /> value.</summary>
      <returns>true if <paramref name="obj" /> has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Int64" /> value to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is an instance of an <see cref="T:System.Int64" /> and equals the value of this instance; otherwise, false.</returns>
      <param name="obj">An object to compare with this instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int64" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.Int64" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int64.MaxValue">
      <summary>Represents the largest possible value of an Int64. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int64.MinValue">
      <summary>Represents the smallest possible value of an Int64. This field is constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String)">
      <summary>Converts the string representation of a number to its 64-bit signed integer equivalent.</summary>
      <returns>A 64-bit signed integer equivalent to the number contained in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converts the string representation of a number in a specified style to its 64-bit signed integer equivalent.</summary>
      <returns>A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="style">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.-or-<paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</summary>
      <returns>A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="style">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in a format compliant with <paramref name="style" />. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. -or-<paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified culture-specific format to its 64-bit signed integer equivalent.</summary>
      <returns>A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> is not in the correct format. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />. </summary>
      <returns>true if the value of the current instance is not zero; otherwise, false.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Byte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Char" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)">
      <summary>This conversion is not supported. Attempting to use this method throws an <see cref="T:System.InvalidCastException" />. </summary>
      <returns>This conversion is not supported. No value is returned.</returns>
      <param name="provider">This parameter is ignored.</param>
      <exception cref="T:System.InvalidCastException">In all cases.</exception>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Decimal" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Double" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.Int32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, unchanged.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to an <see cref="T:System.SByte" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.Single" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to <paramref name="type" />.</returns>
      <param name="type">The type to which to convert this <see cref="T:System.Int64" /> value.</param>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> implementation that provides information about the format of the returned value.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt16" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt32" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />. </summary>
      <returns>The value of the current instance, converted to a <see cref="T:System.UInt64" />.</returns>
      <param name="provider">This parameter is ignored.</param>
    </member>
    <member name="M:System.Int64.ToString">
      <summary>Converts the numeric value of this instance to its equivalent string representation.</summary>
      <returns>The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="provider" />.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String)">
      <summary>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" />.</returns>
      <param name="format">A numeric format string.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</summary>
      <returns>The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A numeric format string.</param>
      <param name="provider">An object that supplies culture-specific formatting information about this instance. </param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid or not supported.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. The string is interpreted using the style specified by <paramref name="style" />. </param>
      <param name="style">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />. </param>
      <param name="result">When this method returns, contains the 64-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value. -or-<paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Int64@)">
      <summary>Converts the string representation of a number to its 64-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</summary>
      <returns>true if <paramref name="s" /> was converted successfully; otherwise, false.</returns>
      <param name="s">A string containing a number to convert. </param>
      <param name="result">When this method returns, contains the 64-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <paramref name="s" /> parameter is null, is not of the correct format, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />. This parameter is passed uninitialized. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IntPtr">
      <summary>A platform-specific type that is used to represent a pointer or a handle.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int32)">
      <summary>Initializes a new instance of <see cref="T:System.IntPtr" /> using the specified 32-bit pointer or handle.</summary>
      <param name="value">A pointer or handle contained in a 32-bit signed integer. </param>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int64)">
      <summary>Initializes a new instance of <see cref="T:System.IntPtr" /> using the specified 64-bit pointer.</summary>
      <param name="value">A pointer or handle contained in a 64-bit signed integer. </param>
      <exception cref="T:System.OverflowException">On a 32-bit platform, <paramref name="value" /> is too large or too small to represent as an <see cref="T:System.IntPtr" />. </exception>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Void*)">
      <summary>Initializes a new instance of <see cref="T:System.IntPtr" /> using the specified pointer to an unspecified type.</summary>
      <param name="value">A pointer to an unspecified type. </param>
    </member>
    <member name="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
      <summary>Adds an offset to the value of a pointer.</summary>
      <returns>A new pointer that reflects the addition of <paramref name="offset" /> to <paramref name="pointer" />.</returns>
      <param name="pointer">The pointer to add the offset to.</param>
      <param name="offset">The offset to add.</param>
    </member>
    <member name="M:System.IntPtr.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> is an instance of <see cref="T:System.IntPtr" /> and equals the value of this instance; otherwise, false.</returns>
      <param name="obj">An object to compare with this instance or null. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
      <summary>Adds an offset to the value of a pointer.</summary>
      <returns>A new pointer that reflects the addition of <paramref name="offset" /> to <paramref name="pointer" />.</returns>
      <param name="pointer">The pointer to add the offset to.</param>
      <param name="offset">The offset to add.</param>
    </member>
    <member name="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
      <summary>Determines whether two specified instances of <see cref="T:System.IntPtr" /> are equal.</summary>
      <returns>true if <paramref name="value1" /> equals <paramref name="value2" />; otherwise, false.</returns>
      <param name="value1">The first pointer or handle to compare.</param>
      <param name="value2">The second pointer or handle to compare.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
      <summary>Converts the value of a 32-bit signed integer to an <see cref="T:System.IntPtr" />.</summary>
      <returns>A new instance of <see cref="T:System.IntPtr" /> initialized to <paramref name="value" />.</returns>
      <param name="value">A 32-bit signed integer. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
      <summary>Converts the value of a 64-bit signed integer to an <see cref="T:System.IntPtr" />.</summary>
      <returns>A new instance of <see cref="T:System.IntPtr" /> initialized to <paramref name="value" />.</returns>
      <param name="value">A 64-bit signed integer. </param>
      <exception cref="T:System.OverflowException">On a 32-bit platform, <paramref name="value" /> is too large to represent as an <see cref="T:System.IntPtr" />. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
      <summary>Converts the value of the specified <see cref="T:System.IntPtr" /> to a pointer to an unspecified type.</summary>
      <returns>The contents of <paramref name="value" />.</returns>
      <param name="value">The pointer or handle to convert. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
      <summary>Converts the value of the specified <see cref="T:System.IntPtr" /> to a 32-bit signed integer.</summary>
      <returns>The contents of <paramref name="value" />.</returns>
      <param name="value">The pointer or handle to convert.</param>
      <exception cref="T:System.OverflowException">On a 64-bit platform, the value of <paramref name="value" /> is too large to represent as a 32-bit signed integer. </exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
      <summary>Converts the value of the specified <see cref="T:System.IntPtr" /> to a 64-bit signed integer.</summary>
      <returns>The contents of <paramref name="value" />.</returns>
      <param name="value">The pointer or handle to convert.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
      <summary>Converts the specified pointer to an unspecified type to an <see cref="T:System.IntPtr" />.</summary>
      <returns>A new instance of <see cref="T:System.IntPtr" /> initialized to <paramref name="value" />.</returns>
      <param name="value">A pointer to an unspecified type. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
      <summary>Determines whether two specified instances of <see cref="T:System.IntPtr" /> are not equal.</summary>
      <returns>true if <paramref name="value1" /> does not equal <paramref name="value2" />; otherwise, false.</returns>
      <param name="value1">The first pointer or handle to compare. </param>
      <param name="value2">The second pointer or handle to compare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
      <summary>Subtracts an offset from the value of a pointer.</summary>
      <returns>A new pointer that reflects the subtraction of <paramref name="offset" /> from <paramref name="pointer" />.</returns>
      <param name="pointer">The pointer to subtract the offset from.</param>
      <param name="offset">The offset to subtract.</param>
    </member>
    <member name="P:System.IntPtr.Size">
      <summary>Gets the size of this instance.</summary>
      <returns>The size of a pointer or handle on this platform, measured in bytes. The value of this property is 4 on a 32-bit platform, and 8 on a 64-bit platform.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
      <summary>Subtracts an offset from the value of a pointer.</summary>
      <returns>A new pointer that reflects the subtraction of <paramref name="offset" /> from <paramref name="pointer" />.</returns>
      <param name="pointer">The pointer to subtract the offset from.</param>
      <param name="offset">The offset to subtract.</param>
    </member>
    <member name="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.IntPtr" /> object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data. </param>
      <param name="context">The destination for this serialization. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:System.IntPtr.ToInt32">
      <summary>Converts the value of this instance to a 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer equal to the value of this instance.</returns>
      <exception cref="T:System.OverflowException">On a 64-bit platform, the value of this instance is too large or too small to represent as a 32-bit signed integer. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToInt64">
      <summary>Converts the value of this instance to a 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer equal to the value of this instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToPointer">
      <summary>Converts the value of this instance to a pointer to an unspecified type.</summary>
      <returns>A pointer to <see cref="T:System.Void" />; that is, a pointer to memory containing data of an unspecified type.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString">
      <summary>Converts the numeric value of the current <see cref="T:System.IntPtr" /> object to its equivalent string representation.</summary>
      <returns>The string representation of the value of this instance.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString(System.String)">
      <summary>Converts the numeric value of the current <see cref="T:System.IntPtr" /> object to its equivalent string representation.</summary>
      <returns>The string representation of the value of the current <see cref="T:System.IntPtr" /> object.</returns>
      <param name="format">A format specification that governs how the current <see cref="T:System.IntPtr" /> object is converted. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.IntPtr.Zero">
      <summary>A read-only field that represents a pointer or handle that has been initialized to zero.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.InvalidCastException">
      <summary>The exception that is thrown for invalid casting or explicit conversion.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.InvalidCastException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidCastException" /> class.</summary>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidCastException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidCastException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidCastException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidCastException" /> class with a specified message and error code.</summary>
      <param name="message">The message that indicates the reason the exception occurred.</param>
      <param name="errorCode">The error code (HRESULT) value associated with the exception.</param>
    </member>
    <member name="T:System.InvalidOperationException">
      <summary>The exception that is thrown when a method call is invalid for the object's current state.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidOperationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class.</summary>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.InvalidProgramException">
      <summary>The exception that is thrown when a program contains invalid Microsoft intermediate language (MSIL) or metadata. Generally this indicates a bug in the compiler that generated the program.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidProgramException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidProgramException" /> class with default properties.</summary>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidProgramException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
    </member>
    <member name="M:System.InvalidProgramException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidProgramException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.InvalidTimeZoneException">
      <summary>The exception that is thrown when time zone information is invalid.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidTimeZoneException" /> class with a system-supplied message.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidTimeZoneException" /> class from serialized data.</summary>
      <param name="info">The object that contains the serialized data. </param>
      <param name="context">The stream that contains the serialized data.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null.-or-The <paramref name="context" /> parameter is null.</exception>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidTimeZoneException" /> class with the specified message string.</summary>
      <param name="message">A string that describes the exception.</param>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.InvalidTimeZoneException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A string that describes the exception.    </param>
      <param name="innerException">The exception that is the cause of the current exception.  </param>
    </member>
    <member name="T:System.IObservable`1">
      <summary>Defines a provider for push-based notification.</summary>
      <typeparam name="T">The object that provides notification information.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
    </member>
    <member name="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
      <summary>Notifies the provider that an observer is to receive notifications.</summary>
      <returns>The observer's interface that enables resources to be disposed.</returns>
      <param name="observer">The object that is to receive notifications.</param>
    </member>
    <member name="T:System.IObserver`1">
      <summary>Provides a mechanism for receiving push-based notifications.</summary>
      <typeparam name="T">The object that provides notification information.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam>
    </member>
    <member name="M:System.IObserver`1.OnCompleted">
      <summary>Notifies the observer that the provider has finished sending push-based notifications.</summary>
    </member>
    <member name="M:System.IObserver`1.OnError(System.Exception)">
      <summary>Notifies the observer that the provider has experienced an error condition.</summary>
      <param name="error">An object that provides additional information about the error.</param>
    </member>
    <member name="M:System.IObserver`1.OnNext(`0)">
      <summary>Provides the observer with new data.</summary>
      <param name="value">The current notification information.</param>
    </member>
    <member name="T:System.IServiceProvider">
      <summary>Defines a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IServiceProvider.GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <returns>A service object of type <paramref name="serviceType" />.-or- null if there is no service object of type <paramref name="serviceType" />.</returns>
      <param name="serviceType">An object that specifies the type of service object to get. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Lazy`1">
      <summary>Provides support for lazy initialization.</summary>
      <typeparam name="T">Specifies the type of object that is being lazily initialized.</typeparam>
    </member>
    <member name="M:System.Lazy`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class. When lazy initialization occurs, the default constructor of the target type is used.</summary>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class. When lazy initialization occurs, the default constructor of the target type and the specified initialization mode are used.</summary>
      <param name="isThreadSafe">true to make this instance usable concurrently by multiple threads; false to make the instance usable by only one thread at a time.  </param>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class. When lazy initialization occurs, the specified initialization function is used.</summary>
      <param name="valueFactory">The delegate that is invoked to produce the lazily initialized value when it is needed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> is null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class. When lazy initialization occurs, the specified initialization function and initialization mode are used.</summary>
      <param name="valueFactory">The delegate that is invoked to produce the lazily initialized value when it is needed.</param>
      <param name="isThreadSafe">true to make this instance usable concurrently by multiple threads; false to make this instance usable by only one thread at a time.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> is null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class that uses the specified initialization function and thread-safety mode.</summary>
      <param name="valueFactory">The delegate that is invoked to produce the lazily initialized value when it is needed.</param>
      <param name="mode">The thread safety mode. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> is null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class that uses the default constructor of <paramref name="T" /> and the specified thread-safety mode.</summary>
      <param name="mode">The thread safety mode. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value.</exception>
    </member>
    <member name="P:System.Lazy`1.IsValueCreated">
      <summary>Gets a value that indicates whether a value has been created for this <see cref="T:System.Lazy`1" /> instance.</summary>
      <returns>true if a value has been created for this <see cref="T:System.Lazy`1" /> instance; otherwise, false.</returns>
    </member>
    <member name="M:System.Lazy`1.ToString">
      <summary>Creates and returns a string representation of the <see cref="P:System.Lazy`1.Value" /> property for this instance.</summary>
      <returns>The result of calling the <see cref="M:System.Object.ToString" /> method on the <see cref="P:System.Lazy`1.Value" /> property for this instance. </returns>
      <exception cref="T:System.NullReferenceException">The <see cref="P:System.Lazy`1.Value" /> property is null.</exception>
    </member>
    <member name="P:System.Lazy`1.Value">
      <summary>Gets the lazily initialized value of the current <see cref="T:System.Lazy`1" /> instance.</summary>
      <returns>The lazily initialized value of the current <see cref="T:System.Lazy`1" /> instance.</returns>
      <exception cref="T:System.MemberAccessException">The <see cref="T:System.Lazy`1" /> instance is initialized to use the default constructor of the type that is being lazily initialized, and permissions to access the constructor are missing.</exception>
      <exception cref="T:System.MissingMemberException">The <see cref="T:System.Lazy`1" /> instance is initialized to use the default constructor of the type that is being lazily initialized, and that type does not have a public, parameterless constructor.</exception>
      <exception cref="T:System.InvalidOperationException">The initialization function tries to access <see cref="P:System.Lazy`1.Value" /> on this instance.</exception>
    </member>
    <member name="T:System.LoaderOptimization">
      <summary>An enumeration used with the <see cref="T:System.LoaderOptimizationAttribute" /> class to specify loader optimizations for an executable.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.LoaderOptimization.NotSpecified">
      <summary>Indicates that no optimizations for sharing internal resources are specified. If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <see cref="F:System.LoaderOptimization.SingleDomain" />.</summary>
    </member>
    <member name="F:System.LoaderOptimization.SingleDomain">
      <summary>Indicates that the application will probably have a single domain, and loader must not share internal resources across application domains. </summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomain">
      <summary>Indicates that the application will probably have many domains that use the same code, and the loader must share maximal internal resources across application domains. </summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomainHost">
      <summary>Indicates that the application will probably host unique code in multiple domains, and the loader must share resources across application domains only for globally available (strong-named) assemblies that have been added to the global assembly cache. </summary>
    </member>
    <member name="F:System.LoaderOptimization.DomainMask">
      <summary>Do not use. This mask selects the domain-related values, screening out the unused <see cref="F:System.LoaderOptimization.DisallowBindings" /> flag.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DisallowBindings">
      <summary>Ignored by the common language runtime.</summary>
    </member>
    <member name="T:System.LoaderOptimizationAttribute">
      <summary>Used to set the default loader optimization policy for the main method of an executable application.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.LoaderOptimizationAttribute" /> class to the specified value.</summary>
      <param name="value">A value equivalent to a <see cref="T:System.LoaderOptimization" /> constant. </param>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)">
      <summary>Initializes a new instance of the <see cref="T:System.LoaderOptimizationAttribute" /> class to the specified value.</summary>
      <param name="value">A <see cref="T:System.LoaderOptimization" /> constant. </param>
    </member>
    <member name="P:System.LoaderOptimizationAttribute.Value">
      <summary>Gets the current <see cref="T:System.LoaderOptimization" /> value for this instance.</summary>
      <returns>A <see cref="T:System.LoaderOptimization" /> constant.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.LocalDataStoreSlot">
      <summary>Encapsulates a memory slot to store local data. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MarshalByRefObject">
      <summary>Enables access to objects across application domain boundaries in applications that support remoting.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MarshalByRefObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.MarshalByRefObject" /> class. </summary>
    </member>
    <member name="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
      <summary>Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.</summary>
      <returns>Information required to generate a proxy.</returns>
      <param name="requestedType">The <see cref="T:System.Type" /> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> will reference. </param>
      <exception cref="T:System.Runtime.Remoting.RemotingException">This instance is not a valid remoting object. </exception>
      <exception cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
      </PermissionSet>
    </member>
    <member name="M:System.MarshalByRefObject.GetLifetimeService">
      <summary>Retrieves the current lifetime service object that controls the lifetime policy for this instance.</summary>
      <returns>An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</returns>
      <exception cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="RemotingConfiguration, Infrastructure" />
      </PermissionSet>
    </member>
    <member name="M:System.MarshalByRefObject.InitializeLifetimeService">
      <summary>Obtains a lifetime service object to control the lifetime policy for this instance.</summary>
      <returns>An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.</returns>
      <exception cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="RemotingConfiguration, Infrastructure" />
      </PermissionSet>
    </member>
    <member name="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
      <summary>Creates a shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</summary>
      <returns>A shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</returns>
      <param name="cloneIdentity">false to delete the current <see cref="T:System.MarshalByRefObject" /> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary. A value of false is usually appropriate. true to copy the current <see cref="T:System.MarshalByRefObject" /> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object. </param>
    </member>
    <member name="T:System.Math">
      <summary>Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Abs(System.Decimal)">
      <summary>Returns the absolute value of a <see cref="T:System.Decimal" /> number.</summary>
      <returns>A <see cref="T:System.Decimal" />, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</returns>
      <param name="value">A number in the range <see cref="F:System.Decimal.MinValue" />≤ value ≤<see cref="F:System.Decimal.MaxValue" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Abs(System.Double)">
      <summary>Returns the absolute value of a double-precision floating-point number.</summary>
      <returns>A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</returns>
      <param name="value">A number in the range <see cref="F:System.Double.MinValue" />≤<paramref name="value" />≤<see cref="F:System.Double.MaxValue" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Abs(System.Int16)">
      <summary>Returns the absolute value of a 16-bit signed integer.</summary>
      <returns>A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</returns>
      <param name="value">A number in the range <see cref="F:System.Int16.MinValue" /> &lt; <paramref name="value" />≤<see cref="F:System.Int16.MaxValue" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Abs(System.Int32)">
      <summary>Returns the absolute value of a 32-bit signed integer.</summary>
      <returns>A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</returns>
      <param name="value">A number in the range <see cref="F:System.Int32.MinValue" /> &lt; <paramref name="value" />≤<see cref="F:System.Int32.MaxValue" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Abs(System.Int64)">
      <summary>Returns the absolute value of a 64-bit signed integer.</summary>
      <returns>A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</returns>
      <param name="value">A number in the range <see cref="F:System.Int64.MinValue" /> &lt; <paramref name="value" />≤<see cref="F:System.Int64.MaxValue" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Abs(System.SByte)">
      <summary>Returns the absolute value of an 8-bit signed integer.</summary>
      <returns>An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</returns>
      <param name="value">A number in the range <see cref="F:System.SByte.MinValue" /> &lt; <paramref name="value" />≤<see cref="F:System.SByte.MaxValue" />. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Abs(System.Single)">
      <summary>Returns the absolute value of a single-precision floating-point number.</summary>
      <returns>A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</returns>
      <param name="value">A number in the range <see cref="F:System.Single.MinValue" />≤<paramref name="value" />≤<see cref="F:System.Single.MaxValue" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Acos(System.Double)">
      <summary>Returns the angle whose cosine is the specified number.</summary>
      <returns>An angle, θ, measured in radians, such that 0 ≤θ≤π-or- <see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1.</returns>
      <param name="d">A number representing a cosine, where -1 ≤<paramref name="d" />≤ 1. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Asin(System.Double)">
      <summary>Returns the angle whose sine is the specified number.</summary>
      <returns>An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2 -or- <see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1.</returns>
      <param name="d">A number representing a sine, where -1 ≤<paramref name="d" />≤ 1. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Atan(System.Double)">
      <summary>Returns the angle whose tangent is the specified number.</summary>
      <returns>An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.-or- <see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</returns>
      <param name="d">A number representing a tangent. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Atan2(System.Double,System.Double)">
      <summary>Returns the angle whose tangent is the quotient of two specified numbers.</summary>
      <returns>An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane. Observe the following: For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.For points on the boundaries of the quadrants, the return value is the following:If y is 0 and x is not negative, θ = 0.If y is 0 and x is negative, θ = π.If y is positive and x is 0, θ = π/2.If y is negative and x is 0, θ = -π/2.</returns>
      <param name="y">The y coordinate of a point. </param>
      <param name="x">The x coordinate of a point. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.BigMul(System.Int32,System.Int32)">
      <summary>Produces the full product of two 32-bit numbers.</summary>
      <returns>The <see cref="T:System.Int64" /> containing the product of the specified numbers.</returns>
      <param name="a">The first <see cref="T:System.Int32" /> to multiply. </param>
      <param name="b">The second <see cref="T:System.Int32" /> to multiply. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Ceiling(System.Decimal)">
      <summary>Returns the smallest integral value that is greater than or equal to the specified decimal number.</summary>
      <returns>The smallest integral value that is greater than or equal to <paramref name="d" />. Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</returns>
      <param name="d">A decimal number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Ceiling(System.Double)">
      <summary>Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</summary>
      <returns>The smallest integral value that is greater than or equal to <paramref name="a" />. If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned. Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</returns>
      <param name="a">A double-precision floating-point number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Cos(System.Double)">
      <summary>Returns the cosine of the specified angle.</summary>
      <returns>The cosine of <paramref name="d" />. If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</returns>
      <param name="d">An angle, measured in radians. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Cosh(System.Double)">
      <summary>Returns the hyperbolic cosine of the specified angle.</summary>
      <returns>The hyperbolic cosine of <paramref name="value" />. If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned. If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</returns>
      <param name="value">An angle, measured in radians. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
      <summary>Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</summary>
      <returns>The quotient of the specified numbers.</returns>
      <param name="a">The dividend. </param>
      <param name="b">The divisor. </param>
      <param name="result">The remainder. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> is zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
      <summary>Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</summary>
      <returns>The quotient of the specified numbers.</returns>
      <param name="a">The dividend. </param>
      <param name="b">The divisor. </param>
      <param name="result">The remainder. </param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> is zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Math.E">
      <summary>Represents the natural logarithmic base, specified by the constant, e.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Exp(System.Double)">
      <summary>Returns e raised to the specified power.</summary>
      <returns>The number e raised to the power <paramref name="d" />. If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned. If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</returns>
      <param name="d">A number specifying a power. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Floor(System.Decimal)">
      <summary>Returns the largest integer less than or equal to the specified decimal number.</summary>
      <returns>The largest integer less than or equal to <paramref name="d" />. </returns>
      <param name="d">A decimal number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Floor(System.Double)">
      <summary>Returns the largest integer less than or equal to the specified double-precision floating-point number.</summary>
      <returns>The largest integer less than or equal to <paramref name="d" />. If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</returns>
      <param name="d">A double-precision floating-point number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.IEEERemainder(System.Double,System.Double)">
      <summary>Returns the remainder resulting from the division of a specified number by another specified number.</summary>
      <returns>A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</returns>
      <param name="x">A dividend. </param>
      <param name="y">A divisor. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Log(System.Double)">
      <summary>Returns the natural (base e) logarithm of a specified number.</summary>
      <returns>One of the values in the following table. <paramref name="d" /> parameterReturn value Positive The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e<paramref name="d" />Zero <see cref="F:System.Double.NegativeInfinity" />Negative <see cref="F:System.Double.NaN" />Equal to <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" />Equal to <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
      <param name="d">A number whose logarithm is to be found. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Log(System.Double,System.Double)">
      <summary>Returns the logarithm of a specified number in a specified base.</summary>
      <returns>One of the values in the following table. (+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)<paramref name="a" /><paramref name="newBase" />Return value<paramref name="a" />&gt; 0(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)lognewBase(a)<paramref name="a" />&lt; 0(any value)NaN(any value)<paramref name="newBase" />&lt; 0NaN<paramref name="a" /> != 1<paramref name="newBase" /> = 0NaN<paramref name="a" /> != 1<paramref name="newBase" /> = +InfinityNaN<paramref name="a" /> = NaN(any value)NaN(any value)<paramref name="newBase" /> = NaNNaN(any value)<paramref name="newBase" /> = 1NaN<paramref name="a" /> = 00 &lt;<paramref name="newBase" />&lt; 1 +Infinity<paramref name="a" /> = 0<paramref name="newBase" />&gt; 1-Infinity<paramref name="a" /> =  +Infinity0 &lt;<paramref name="newBase" />&lt; 1-Infinity<paramref name="a" /> =  +Infinity<paramref name="newBase" />&gt; 1+Infinity<paramref name="a" /> = 1<paramref name="newBase" /> = 00<paramref name="a" /> = 1<paramref name="newBase" /> = +Infinity0</returns>
      <param name="a">A number whose logarithm is to be found. </param>
      <param name="newBase">The base of the logarithm. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Log10(System.Double)">
      <summary>Returns the base 10 logarithm of a specified number.</summary>
      <returns>One of the values in the following table. <paramref name="d" /> parameter Return value Positive The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />. Zero <see cref="F:System.Double.NegativeInfinity" />Negative <see cref="F:System.Double.NaN" />Equal to <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" />Equal to <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
      <param name="d">A number whose logarithm is to be found. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.Byte,System.Byte)">
      <summary>Returns the larger of two 8-bit unsigned integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two 8-bit unsigned integers to compare. </param>
      <param name="val2">The second of two 8-bit unsigned integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.Decimal,System.Decimal)">
      <summary>Returns the larger of two decimal numbers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two <see cref="T:System.Decimal" /> numbers to compare. </param>
      <param name="val2">The second of two <see cref="T:System.Decimal" /> numbers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.Double,System.Double)">
      <summary>Returns the larger of two double-precision floating-point numbers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger. If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</returns>
      <param name="val1">The first of two double-precision floating-point numbers to compare. </param>
      <param name="val2">The second of two double-precision floating-point numbers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.Int16,System.Int16)">
      <summary>Returns the larger of two 16-bit signed integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two 16-bit signed integers to compare. </param>
      <param name="val2">The second of two 16-bit signed integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.Int32,System.Int32)">
      <summary>Returns the larger of two 32-bit signed integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two 32-bit signed integers to compare. </param>
      <param name="val2">The second of two 32-bit signed integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.Int64,System.Int64)">
      <summary>Returns the larger of two 64-bit signed integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two 64-bit signed integers to compare. </param>
      <param name="val2">The second of two 64-bit signed integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.SByte,System.SByte)">
      <summary>Returns the larger of two 8-bit signed integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two 8-bit signed integers to compare. </param>
      <param name="val2">The second of two 8-bit signed integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.Single,System.Single)">
      <summary>Returns the larger of two single-precision floating-point numbers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger. If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</returns>
      <param name="val1">The first of two single-precision floating-point numbers to compare. </param>
      <param name="val2">The second of two single-precision floating-point numbers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.UInt16,System.UInt16)">
      <summary>Returns the larger of two 16-bit unsigned integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two 16-bit unsigned integers to compare. </param>
      <param name="val2">The second of two 16-bit unsigned integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.UInt32,System.UInt32)">
      <summary>Returns the larger of two 32-bit unsigned integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two 32-bit unsigned integers to compare. </param>
      <param name="val2">The second of two 32-bit unsigned integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Max(System.UInt64,System.UInt64)">
      <summary>Returns the larger of two 64-bit unsigned integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</returns>
      <param name="val1">The first of two 64-bit unsigned integers to compare. </param>
      <param name="val2">The second of two 64-bit unsigned integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.Byte,System.Byte)">
      <summary>Returns the smaller of two 8-bit unsigned integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two 8-bit unsigned integers to compare. </param>
      <param name="val2">The second of two 8-bit unsigned integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.Decimal,System.Decimal)">
      <summary>Returns the smaller of two decimal numbers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two <see cref="T:System.Decimal" /> numbers to compare. </param>
      <param name="val2">The second of two <see cref="T:System.Decimal" /> numbers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.Double,System.Double)">
      <summary>Returns the smaller of two double-precision floating-point numbers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller. If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</returns>
      <param name="val1">The first of two double-precision floating-point numbers to compare. </param>
      <param name="val2">The second of two double-precision floating-point numbers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.Int16,System.Int16)">
      <summary>Returns the smaller of two 16-bit signed integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two 16-bit signed integers to compare. </param>
      <param name="val2">The second of two 16-bit signed integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.Int32,System.Int32)">
      <summary>Returns the smaller of two 32-bit signed integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two 32-bit signed integers to compare. </param>
      <param name="val2">The second of two 32-bit signed integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.Int64,System.Int64)">
      <summary>Returns the smaller of two 64-bit signed integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two 64-bit signed integers to compare. </param>
      <param name="val2">The second of two 64-bit signed integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.SByte,System.SByte)">
      <summary>Returns the smaller of two 8-bit signed integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two 8-bit signed integers to compare. </param>
      <param name="val2">The second of two 8-bit signed integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.Single,System.Single)">
      <summary>Returns the smaller of two single-precision floating-point numbers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller. If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</returns>
      <param name="val1">The first of two single-precision floating-point numbers to compare. </param>
      <param name="val2">The second of two single-precision floating-point numbers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.UInt16,System.UInt16)">
      <summary>Returns the smaller of two 16-bit unsigned integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two 16-bit unsigned integers to compare. </param>
      <param name="val2">The second of two 16-bit unsigned integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.UInt32,System.UInt32)">
      <summary>Returns the smaller of two 32-bit unsigned integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two 32-bit unsigned integers to compare. </param>
      <param name="val2">The second of two 32-bit unsigned integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Min(System.UInt64,System.UInt64)">
      <summary>Returns the smaller of two 64-bit unsigned integers.</summary>
      <returns>Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</returns>
      <param name="val1">The first of two 64-bit unsigned integers to compare. </param>
      <param name="val2">The second of two 64-bit unsigned integers to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Math.PI">
      <summary>Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Pow(System.Double,System.Double)">
      <summary>Returns a specified number raised to the specified power.</summary>
      <returns>The number <paramref name="x" /> raised to the power <paramref name="y" />.</returns>
      <param name="x">A double-precision floating-point number to be raised to a power. </param>
      <param name="y">A double-precision floating-point number that specifies a power. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Round(System.Decimal)">
      <summary>Rounds a decimal value to the nearest integral value.</summary>
      <returns>The integer nearest parameter <paramref name="d" />. If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned. Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</returns>
      <param name="d">A decimal number to be rounded. </param>
      <exception cref="T:System.OverflowException">The result is outside the range of a <see cref="T:System.Decimal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32)">
      <summary>Rounds a decimal value to a specified number of fractional digits.</summary>
      <returns>The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />. </returns>
      <param name="d">A decimal number to be rounded. </param>
      <param name="decimals">The number of decimal places in the return value. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> is less than 0 or greater than 28. </exception>
      <exception cref="T:System.OverflowException">The result is outside the range of a <see cref="T:System.Decimal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
      <summary>Rounds a decimal value to a specified number of fractional digits. A parameter specifies how to round the value if it is midway between two other numbers.</summary>
      <returns>The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />. If the number of fractional digits in <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</returns>
      <param name="d">A decimal number to be rounded. </param>
      <param name="decimals">The number of decimal places in the return value. </param>
      <param name="mode">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> is less than 0 or greater than 28. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">The result is outside the range of a <see cref="T:System.Decimal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
      <summary>Rounds a decimal value to the nearest integer. A parameter specifies how to round the value if it is midway between two other numbers.</summary>
      <returns>The integer nearest <paramref name="d" />. If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned. </returns>
      <param name="d">A decimal number to be rounded. </param>
      <param name="mode">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">The result is outside the range of a <see cref="T:System.Decimal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Round(System.Double)">
      <summary>Rounds a double-precision floating-point value to the nearest integral value.</summary>
      <returns>The integer nearest <paramref name="a" />. If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned. Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</returns>
      <param name="a">A double-precision floating-point number to be rounded. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32)">
      <summary>Rounds a double-precision floating-point value to a specified number of fractional digits.</summary>
      <returns>The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</returns>
      <param name="value">A double-precision floating-point number to be rounded. </param>
      <param name="digits">The number of fractional digits in the return value. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> is less than 0 or greater than 15. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
      <summary>Rounds a double-precision floating-point value to the specified number of fractional digits. A parameter specifies how to round the value if it is midway between two other numbers.</summary>
      <returns>The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />. If the number of fractional digits in <paramref name="value" /> is less than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</returns>
      <param name="value">A double-precision floating-point number to be rounded. </param>
      <param name="digits">The number of fractional digits in the return value. </param>
      <param name="mode">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> is less than 0 or greater than 15. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Round(System.Double,System.MidpointRounding)">
      <summary>Rounds a double-precision floating-point value to the nearest integer. A parameter specifies how to round the value if it is midway between two other numbers.</summary>
      <returns>The integer nearest <paramref name="value" />. If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</returns>
      <param name="value">A double-precision floating-point number to be rounded. </param>
      <param name="mode">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sign(System.Decimal)">
      <summary>Returns a value indicating the sign of a decimal number.</summary>
      <returns>A number that indicates the sign of <paramref name="value" />, as shown in the following table.Return value Meaning -1 <paramref name="value" /> is less than zero. 0 <paramref name="value" /> is equal to zero. 1 <paramref name="value" /> is greater than zero. </returns>
      <param name="value">A signed <see cref="T:System.Decimal" /> number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sign(System.Double)">
      <summary>Returns a value indicating the sign of a double-precision floating-point number.</summary>
      <returns>A number that indicates the sign of <paramref name="value" />, as shown in the following table.Return value Meaning -1 <paramref name="value" /> is less than zero. 0 <paramref name="value" /> is equal to zero. 1 <paramref name="value" /> is greater than zero. </returns>
      <param name="value">A signed number. </param>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sign(System.Int16)">
      <summary>Returns a value indicating the sign of a 16-bit signed integer.</summary>
      <returns>A number that indicates the sign of <paramref name="value" />, as shown in the following table.Return value Meaning -1 <paramref name="value" /> is less than zero. 0 <paramref name="value" /> is equal to zero. 1 <paramref name="value" /> is greater than zero. </returns>
      <param name="value">A signed number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sign(System.Int32)">
      <summary>Returns a value indicating the sign of a 32-bit signed integer.</summary>
      <returns>A number that indicates the sign of <paramref name="value" />, as shown in the following table.Return value Meaning -1 <paramref name="value" /> is less than zero. 0 <paramref name="value" /> is equal to zero. 1 <paramref name="value" /> is greater than zero. </returns>
      <param name="value">A signed number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sign(System.Int64)">
      <summary>Returns a value indicating the sign of a 64-bit signed integer.</summary>
      <returns>A number that indicates the sign of <paramref name="value" />, as shown in the following table.Return value Meaning -1 <paramref name="value" /> is less than zero. 0 <paramref name="value" /> is equal to zero. 1 <paramref name="value" /> is greater than zero. </returns>
      <param name="value">A signed number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sign(System.SByte)">
      <summary>Returns a value indicating the sign of an 8-bit signed integer.</summary>
      <returns>A number that indicates the sign of <paramref name="value" />, as shown in the following table.Return value Meaning -1 <paramref name="value" /> is less than zero. 0 <paramref name="value" /> is equal to zero. 1 <paramref name="value" /> is greater than zero. </returns>
      <param name="value">A signed number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sign(System.Single)">
      <summary>Returns a value indicating the sign of a single-precision floating-point number.</summary>
      <returns>A number that indicates the sign of <paramref name="value" />, as shown in the following table.Return value Meaning -1 <paramref name="value" /> is less than zero. 0 <paramref name="value" /> is equal to zero. 1 <paramref name="value" /> is greater than zero. </returns>
      <param name="value">A signed number. </param>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sin(System.Double)">
      <summary>Returns the sine of the specified angle.</summary>
      <returns>The sine of <paramref name="a" />. If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</returns>
      <param name="a">An angle, measured in radians. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sinh(System.Double)">
      <summary>Returns the hyperbolic sine of the specified angle.</summary>
      <returns>The hyperbolic sine of <paramref name="value" />. If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</returns>
      <param name="value">An angle, measured in radians. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Sqrt(System.Double)">
      <summary>Returns the square root of a specified number.</summary>
      <returns>One of the values in the following table. <paramref name="d" /> parameter Return value Zero, or positive The positive square root of <paramref name="d" />. Negative <see cref="F:System.Double.NaN" />Equals <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" />Equals <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
      <param name="d">A number. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Tan(System.Double)">
      <summary>Returns the tangent of the specified angle.</summary>
      <returns>The tangent of <paramref name="a" />. If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</returns>
      <param name="a">An angle, measured in radians. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Math.Tanh(System.Double)">
      <summary>Returns the hyperbolic tangent of the specified angle.</summary>
      <returns>The hyperbolic tangent of <paramref name="value" />. If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1. If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1. If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</returns>
      <param name="value">An angle, measured in radians. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Sys